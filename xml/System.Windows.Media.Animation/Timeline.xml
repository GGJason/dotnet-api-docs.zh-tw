<Type Name="Timeline" FullName="System.Windows.Media.Animation.Timeline">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a8e405f119158b862087091a612474212265671" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53519114" /></Metadata><TypeSignature Language="C#" Value="public abstract class Timeline : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Timeline extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Timeline" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Timeline&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timeline abstract : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type Timeline = class&#xA;    inherit Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0b203-101">定義一段時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-101">Defines a segment of time.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-102">時間軸代表一段時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-102">A timeline represents a segment of time.</span></span>  <span data-ttu-id="0b203-103">它提供的屬性可讓您指定時間片段長度、應開始的時間、重複次數、時間在該片段中的播放速度等等。</span><span class="sxs-lookup"><span data-stu-id="0b203-103">It provides properties that enable you to specify the length of that segment, when it should start, how many times it will repeat, how fast time progresses in that segment, and more.</span></span>  
  
 <span data-ttu-id="0b203-104">從時間軸類別繼承的類別提供額外功能，例如，動畫和媒體播放。</span><span class="sxs-lookup"><span data-stu-id="0b203-104">Classes that inherit from the timeline class provide additional functionality, such as animation and media playback.</span></span> <span data-ttu-id="0b203-105">以下是不同類型的特製化時間軸可用的一些範例。</span><span class="sxs-lookup"><span data-stu-id="0b203-105">The following are examples of some of the different types of specialized timelines available.</span></span>  
  
-   <span data-ttu-id="0b203-106">**動畫**:<xref:System.Windows.Media.Animation.AnimationTimeline>是一種會產生輸出值的時間軸。</span><span class="sxs-lookup"><span data-stu-id="0b203-106">**Animations**: An <xref:System.Windows.Media.Animation.AnimationTimeline> is a type of timeline that produces output values.</span></span> <span data-ttu-id="0b203-107">當您關聯屬性的動畫時，動畫播放，藉此 「 動畫 」，就會更新屬性的值。</span><span class="sxs-lookup"><span data-stu-id="0b203-107">When you associate an animation with a property, the animation updates the property's value as it plays, thereby "animating" it.</span></span> <span data-ttu-id="0b203-108">如需動畫的簡介，請參閱[動畫概觀](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-108">For an introduction to animations, see [Animation Overview](~/docs/framework/wpf/graphics-multimedia/animation-overview.md).</span></span> <span data-ttu-id="0b203-109">若要套用動畫的不同方式的相關資訊，請參閱[屬性動畫技術概觀](~/docs/framework/wpf/graphics-multimedia/property-animation-techniques-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-109">For information about the different ways to apply animations, see the [Property Animation Techniques Overview](~/docs/framework/wpf/graphics-multimedia/property-animation-techniques-overview.md).</span></span>  
  
-   <span data-ttu-id="0b203-110">**MediaTimelines**:A<xref:System.Windows.Media.MediaTimeline>是一種控制播放的媒體檔案的時間軸。</span><span class="sxs-lookup"><span data-stu-id="0b203-110">**MediaTimelines**: A <xref:System.Windows.Media.MediaTimeline> is a type of timeline that controls the playback of a media file.</span></span>  
  
-   <span data-ttu-id="0b203-111">**ParallelTimelines**:A<xref:System.Windows.Media.Animation.ParallelTimeline>是一種分組其他時間軸的時間軸。</span><span class="sxs-lookup"><span data-stu-id="0b203-111">**ParallelTimelines**: A <xref:System.Windows.Media.Animation.ParallelTimeline> is a type of timeline that groups other timelines.</span></span>  
  
-   <span data-ttu-id="0b203-112">**分鏡腳本**:A<xref:System.Windows.Media.Animation.Storyboard>是一種特殊型別的<xref:System.Windows.Media.Animation.ParallelTimeline>，提供物件和屬性目標的時間軸，其中包含的資訊。</span><span class="sxs-lookup"><span data-stu-id="0b203-112">**Storyboards**: A <xref:System.Windows.Media.Animation.Storyboard> is a special type of <xref:System.Windows.Media.Animation.ParallelTimeline> that provides object and property targeting information for the timelines it contains.</span></span> <span data-ttu-id="0b203-113">如需詳細資訊<xref:System.Windows.Media.Animation.Storyboard>物件，請參閱[分鏡腳本概觀](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-113">For more information about <xref:System.Windows.Media.Animation.Storyboard> objects, see the [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="0b203-114">如需使用時間軸的詳細資訊，請參閱[動畫概觀](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-114">For more information about using timelines, see the [Animation Overview](~/docs/framework/wpf/graphics-multimedia/animation-overview.md).</span></span> <span data-ttu-id="0b203-115">時間軸的計時功能簡介，請參閱[計時行為概觀](~/docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-115">For an introduction to the timing features of timelines, see the [Timing Behaviors Overview](~/docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md).</span></span>  
  
## <a name="data-binding-and-animating-timelines"></a><span data-ttu-id="0b203-116">資料繫結和動畫時間軸</span><span class="sxs-lookup"><span data-stu-id="0b203-116">Data Binding and Animating Timelines</span></span>  
 <span data-ttu-id="0b203-117">大部分的時間軸屬性可以是資料繫結或以動畫顯示;不過，由於計時系統的運作的方式，資料繫結或動畫時間軸行為不像其他資料繫結或動畫物件。</span><span class="sxs-lookup"><span data-stu-id="0b203-117">Most timeline properties can be data bound or animated; however, because of the way the timing system works, data bound or animated timelines do not behave like other data bound or animated objects.</span></span> <span data-ttu-id="0b203-118">若要了解其行為，它有助於了解啟用時間軸的意義。</span><span class="sxs-lookup"><span data-stu-id="0b203-118">To understand their behavior, it helps to understand what it means to activate a timeline.</span></span>  
  
 <span data-ttu-id="0b203-119">套用時間軸時，複本是由時間軸和及其子時刻表。</span><span class="sxs-lookup"><span data-stu-id="0b203-119">When a timeline is applied, copies are made of the timeline and its child timelines.</span></span> <span data-ttu-id="0b203-120">這些複本會被凍結 （變成唯讀狀態） 和<xref:System.Windows.Media.Animation.Clock>從中建立物件。</span><span class="sxs-lookup"><span data-stu-id="0b203-120">These copies are frozen (made read-only) and <xref:System.Windows.Media.Animation.Clock> objects are created from them.</span></span> <span data-ttu-id="0b203-121">這是執行以動畫顯示目標的屬性的實際工作這些時鐘。</span><span class="sxs-lookup"><span data-stu-id="0b203-121">It's these clocks that do the actual work of animating the targeted properties.</span></span> <span data-ttu-id="0b203-122">如果時間軸資料繫結或動畫，其目前值的快照集已建立其時鐘的時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-122">If a timeline was data bound or animated, a snapshot of its current values was made when its clock was created.</span></span> <span data-ttu-id="0b203-123">即使原始時間軸可能會持續變更，其時鐘則否。</span><span class="sxs-lookup"><span data-stu-id="0b203-123">Even though the original timeline might continue to change, its clock does not.</span></span>  
  
 <span data-ttu-id="0b203-124">時間軸以反映資料繫結或動畫變更，必須重新產生其時鐘。</span><span class="sxs-lookup"><span data-stu-id="0b203-124">For a timeline to reflect data binding or animation changes, its clock must be regenerated.</span></span> <span data-ttu-id="0b203-125">時鐘不會自動產生。</span><span class="sxs-lookup"><span data-stu-id="0b203-125">Clocks are not regenerated for you automatically.</span></span> <span data-ttu-id="0b203-126">以下是幾種可套用時間軸變更的方式︰</span><span class="sxs-lookup"><span data-stu-id="0b203-126">The following are several ways to apply timeline changes:</span></span>  
  
-   <span data-ttu-id="0b203-127">如果時間軸是或屬於<xref:System.Windows.Media.Animation.Storyboard>，您可以將它重新套用其分鏡腳本的使用，以反映變更<xref:System.Windows.Media.Animation.BeginStoryboard>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0b203-127">If the timeline is or belongs to a <xref:System.Windows.Media.Animation.Storyboard>, you can make it reflect changes by reapplying its storyboard using a <xref:System.Windows.Media.Animation.BeginStoryboard> or the <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> method.</span></span> <span data-ttu-id="0b203-128">這也會一併重新啟動動畫。</span><span class="sxs-lookup"><span data-stu-id="0b203-128">This has the side effect of also restarting the animation.</span></span> <span data-ttu-id="0b203-129">在程式碼中，您可以使用<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>方法將分鏡腳本回它先前的位置。</span><span class="sxs-lookup"><span data-stu-id="0b203-129">In code, you can use the <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> method to advance the storyboard back to its previous position.</span></span>  
  
-   <span data-ttu-id="0b203-130">如果您直接將屬性套用動畫<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法中，呼叫<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法一次，並將它傳遞已修改的動畫。</span><span class="sxs-lookup"><span data-stu-id="0b203-130">If you applied an animation directly to a property using the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method, call the <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> method again and pass it the animation that's been modified.</span></span>  
  
-   <span data-ttu-id="0b203-131">如果您直接在時鐘層級運作，請建立並套用一組新的時鐘，並使用它們來取代前一組產生的時鐘。</span><span class="sxs-lookup"><span data-stu-id="0b203-131">If you are working directly at the clock level, create and apply a new set of clocks and use them to replace the previous set of generated clocks.</span></span>  
  
 <span data-ttu-id="0b203-132">如需資料的範例繫結動畫，請參閱 <<c0> [ 主要曲線動畫範例](https://go.microsoft.com/fwlink/?LinkID=160011)。</span><span class="sxs-lookup"><span data-stu-id="0b203-132">For an example of a data bound animation, see the [Key Spline Animation Sample](https://go.microsoft.com/fwlink/?LinkID=160011) .</span></span>  
  
## <a name="using-a-timeline-as-a-timer"></a><span data-ttu-id="0b203-133">使用時間軸的計時器</span><span class="sxs-lookup"><span data-stu-id="0b203-133">Using a Timeline as a Timer</span></span>  
 <span data-ttu-id="0b203-134">與其相關聯的事件處理常式時，才會進行時刻表的時鐘或 (如果是<xref:System.Windows.Media.Animation.AnimationClock>物件) 相關聯的屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-134">A timeline's clock will only progress when there's an event hander associated with it or (in the case of an <xref:System.Windows.Media.Animation.AnimationClock> object) it is associated with a property.</span></span> <span data-ttu-id="0b203-135">因此 （和其他人），不建議您改用<xref:System.Windows.Media.Animation.Timeline>的計時器。</span><span class="sxs-lookup"><span data-stu-id="0b203-135">For this reason (and others), it's not recommended that you use a <xref:System.Windows.Media.Animation.Timeline> as a timer.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159970"><span data-ttu-id="0b203-136">動畫計時行為範例</span><span class="sxs-lookup"><span data-stu-id="0b203-136">Animation Timing Behavior Sample</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b203-137">初始化 <see cref="T:System.Windows.Media.Animation.Timeline" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0b203-137">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b203-138">初始化 <see cref="T:System.Windows.Media.Animation.Timeline" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0b203-138">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline beginTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime"><span data-ttu-id="0b203-139">這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 應該開始的時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-139">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span></span> <span data-ttu-id="0b203-140">如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-140">See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</span></span></param>
        <summary><span data-ttu-id="0b203-141">使用指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 初始化 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0b203-141">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime"><span data-ttu-id="0b203-142">這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 應該開始的時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-142">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span></span> <span data-ttu-id="0b203-143">如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-143">See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</span></span></param>
        <param name="duration"><span data-ttu-id="0b203-144">這個時刻表播放的時間長度，並不是計算重複次數。</span><span class="sxs-lookup"><span data-stu-id="0b203-144">The length of time for which this timeline plays, not counting repetitions.</span></span> <span data-ttu-id="0b203-145">如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-145">See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</span></span></param>
        <summary><span data-ttu-id="0b203-146">使用指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />，初始化 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0b203-146">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> and <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration * System.Windows.Media.Animation.RepeatBehavior -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration, repeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime"><span data-ttu-id="0b203-147">這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 應該開始的時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-147">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span></span> <span data-ttu-id="0b203-148">如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-148">See the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> property for more information.</span></span></param>
        <param name="duration"><span data-ttu-id="0b203-149">這個時刻表播放的時間長度，並不是計算重複次數。</span><span class="sxs-lookup"><span data-stu-id="0b203-149">The length of time for which this timeline plays, not counting repetitions.</span></span> <span data-ttu-id="0b203-150">如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-150">See the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property for more information.</span></span></param>
        <param name="repeatBehavior"><span data-ttu-id="0b203-151">這個時刻表的重複行為，可能為反覆 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> 或重複的 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-151">The repeating behavior of this timeline, either as an iteration <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> or a repeat <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" />.</span></span> <span data-ttu-id="0b203-152">如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-152">See the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> property for more information.</span></span></param>
        <summary><span data-ttu-id="0b203-153">使用指定的 <see cref="T:System.Windows.Media.Animation.Timeline" />、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />，初始化 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0b203-153">Initializes a new instance of the <see cref="T:System.Windows.Media.Animation.Timeline" /> class with the specified <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />, <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, and <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatio">
      <MemberSignature Language="C#" Value="public double AccelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AccelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property AccelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double AccelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AccelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-154">取得或設定值，這個值指定時間軸的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 在從零加速至其最大速率所經過時間的百分比。</span><span class="sxs-lookup"><span data-stu-id="0b203-154">Gets or sets a value specifying the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent accelerating the passage of time from zero to its maximum rate.</span></span></summary>
        <value><span data-ttu-id="0b203-155">介於 0 和 1 (含) 之間的值，這個值指定時間軸的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 在從零加速至其最大速率所經過時間的百分比。</span><span class="sxs-lookup"><span data-stu-id="0b203-155">A value between 0 and 1, inclusive, that specifies the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent accelerating the passage of time from zero to its maximum rate.</span></span> <span data-ttu-id="0b203-156">如果時間軸 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 屬性也已設定，則 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 總和必須小於或等於 1。</span><span class="sxs-lookup"><span data-stu-id="0b203-156">If the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> property is also set, the sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> must be less than or equal to 1.</span></span> <span data-ttu-id="0b203-157">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="0b203-157">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-158">使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>屬性建立動畫的啟動速度，並隨著時間過去再加速。</span><span class="sxs-lookup"><span data-stu-id="0b203-158">Use the <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> property to create animations that start slowly and then speed up as time progresses.</span></span> <span data-ttu-id="0b203-159"><xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>屬性可用於建立簡化的效果，或進行看起來更自然的移動。</span><span class="sxs-lookup"><span data-stu-id="0b203-159">The <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> property is useful for creating ease-in effects or making movement seem more natural.</span></span> <span data-ttu-id="0b203-160">使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性搭配使用來建立動畫，啟動很慢、 速度，並接著減慢完成前一次。</span><span class="sxs-lookup"><span data-stu-id="0b203-160">Use the <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> and <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> properties together to create animations that start slowly, speed up, and then slow down again before finishing.</span></span>  
  
<a name="dependencyPropertyInfo_AccelerationRatio"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0b203-161">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="0b203-161">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0b203-162">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0b203-162">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  
|<span data-ttu-id="0b203-163">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="0b203-163">Metadata properties set to `true`</span></span>|<span data-ttu-id="0b203-164">無</span><span class="sxs-lookup"><span data-stu-id="0b203-164">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b203-165"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 小於 0 或大於 1。</span><span class="sxs-lookup"><span data-stu-id="0b203-165"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> is less than 0 or greater than 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b203-166"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 的總和超過 1。</span><span class="sxs-lookup"><span data-stu-id="0b203-166">The sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> exceeds 1.</span></span></exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AccelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AccelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-167">識別 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-167">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateClock">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Animation.Clock AllocateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Animation.Clock AllocateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.AllocateClock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function AllocateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Animation::Clock ^ AllocateClock();" />
      <MemberSignature Language="F#" Value="abstract member AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock&#xA;override this.AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.AllocateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b203-168">建立這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-168">Creates a <see cref="T:System.Windows.Media.Animation.Clock" /> for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="0b203-169">這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的時鐘。</span><span class="sxs-lookup"><span data-stu-id="0b203-169">A clock for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-170">這個方法會呼叫<xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>方法且不應由您的程式碼直接呼叫。</span><span class="sxs-lookup"><span data-stu-id="0b203-170">This method is called by the <xref:System.Windows.Media.Animation.Timeline.CreateClock%2A> method and should not be called directly by your code.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0b203-171">實作器<see cref="T:System.Windows.Media.Animation.Timeline" />具有對應的自訂時鐘應該與類別一起使用時應該覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="0b203-171">Implementers of <see cref="T:System.Windows.Media.Animation.Timeline" /> should override this method when it has a corresponding custom clock that should be used with the class.</span></span> <span data-ttu-id="0b203-172">覆寫的方法應該建立並傳回繼承自類別的新執行個體<see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-172">The overridden method should create and return a new instance of class that inherits from <see cref="T:System.Windows.Media.Animation.Clock" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="AutoReverse">
      <MemberSignature Language="C#" Value="public bool AutoReverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReverse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReverse : bool with get, set" Usage="System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-173">取得或設定值，其中該值指出時間軸是否會在完成向前反覆項目後反向播放。</span><span class="sxs-lookup"><span data-stu-id="0b203-173">Gets or sets a value that indicates whether the timeline plays in reverse after it completes a forward iteration.</span></span></summary>
        <value><span data-ttu-id="0b203-174">如果時間軸會在每個反覆項目結尾時反向播放，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-174"><see langword="true" /> if the timeline plays in reverse at the end of each iteration; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="0b203-175">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-175">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-176">如果<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>屬性設定為`true`，時間軸播放兩次指定的時間長度其<xref:System.Windows.Media.Animation.Timeline.Duration%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-176">If the <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property is set to `true`, the timeline plays for twice the length of time specified by its <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property.</span></span>  
  
### <a name="autoreverse-and-repetitions"></a><span data-ttu-id="0b203-177">AutoReverse 和重複項目</span><span class="sxs-lookup"><span data-stu-id="0b203-177">AutoReverse and Repetitions</span></span>  
 <span data-ttu-id="0b203-178">當時間軸<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>屬性設定為`true`及其<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>屬性造成動畫重複，每個向前反覆項目後面是為了與舊版的反覆項目。</span><span class="sxs-lookup"><span data-stu-id="0b203-178">When a timeline's <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property is set to `true` and its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> property causes it to repeat, each forward iteration is followed by a backward iteration.</span></span> <span data-ttu-id="0b203-179">這可讓重複一次。</span><span class="sxs-lookup"><span data-stu-id="0b203-179">This makes one repetition.</span></span> <span data-ttu-id="0b203-180">比方說，使用時間軸<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>的值`true`與 反覆項目<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>為 2 會播放轉送一次，則回溯，同樣地，然後轉送，然後向後一次。</span><span class="sxs-lookup"><span data-stu-id="0b203-180">For example, a timeline with an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> value of `true` with an iteration <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> of 2 would play forward once, then backwards, then forwards again, and then backwards again.</span></span>  
  
<a name="dependencyPropertyInfo_AutoReverse"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0b203-181">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="0b203-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0b203-182">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0b203-182">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  
|<span data-ttu-id="0b203-183">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="0b203-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="0b203-184">無</span><span class="sxs-lookup"><span data-stu-id="0b203-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="AutoReverseProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoReverseProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoReverseProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoReverseProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoReverseProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoReverseProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-185">識別 <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-185">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; BeginTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; BeginTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberSignature Language="VB.NET" Value="Public Property BeginTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; BeginTime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.BeginTime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-186">取得或設定這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 應該開始的時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-186">Gets or sets the time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin.</span></span></summary>
        <value><span data-ttu-id="0b203-187">這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 應該開始的時間，相對於其父項的 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-187">The time at which this <see cref="T:System.Windows.Media.Animation.Timeline" /> should begin, relative to its parent's <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />.</span></span> <span data-ttu-id="0b203-188">如果這個時間表是根時間表，則時間相對於其互動開始時間 (觸發時間表的時間)。</span><span class="sxs-lookup"><span data-stu-id="0b203-188">If this timeline is a root timeline, the time is relative to its interactive begin time (the moment at which the timeline was triggered).</span></span> <span data-ttu-id="0b203-189">這個值可以是正數、負數或 <see langword="null" />；<see langword="null" /> 值表示一律不播放時間表。</span><span class="sxs-lookup"><span data-stu-id="0b203-189">This value may be positive, negative, or <see langword="null" />; a <see langword="null" /> value means the timeline never plays.</span></span> <span data-ttu-id="0b203-190">預設值是零。</span><span class="sxs-lookup"><span data-stu-id="0b203-190">The default value is zero.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-191"><xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>屬性可用於建立序列中的播放的時間軸： 藉由增加<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>共用相同的父系的連續時間軸，您可以錯開他們播放的時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-191">The <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property is useful for creating timelines that play in a sequence: by increasing the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of successive timelines that share the same parent, you can stagger their play times.</span></span>  
  
## <a name="negative-values"></a><span data-ttu-id="0b203-192">負數值</span><span class="sxs-lookup"><span data-stu-id="0b203-192">Negative Values</span></span>  
 <span data-ttu-id="0b203-193">負<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>值會導致<xref:System.Windows.Media.Animation.Timeline>行為就像是在過去某個時間點啟動。</span><span class="sxs-lookup"><span data-stu-id="0b203-193">A negative <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> value causes a <xref:System.Windows.Media.Animation.Timeline> to behave as though it started at some time in the past.</span></span> <span data-ttu-id="0b203-194">例如，<xref:System.Windows.Media.Animation.Timeline>與<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>的負 2.5 秒和<xref:System.Windows.Media.Animation.Timeline.Duration%2A>5 秒將會出現一半完成啟動時。</span><span class="sxs-lookup"><span data-stu-id="0b203-194">For example, a <xref:System.Windows.Media.Animation.Timeline> with a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of negative 2.5 seconds and a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 5 seconds will appear to be half-way finished when it starts.</span></span>  
  
## <a name="begintime-and-speedratio"></a><span data-ttu-id="0b203-195">BeginTime 和 SpeedRatio</span><span class="sxs-lookup"><span data-stu-id="0b203-195">BeginTime and SpeedRatio</span></span>  
 <span data-ttu-id="0b203-196">所描述的時間<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>屬性為單位的時間軸的父代的時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-196">The time described by the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property is measured in the timeline's parent's time.</span></span> <span data-ttu-id="0b203-197">比方說，使用時間軸<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>的父代具有的 5 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2 的實際開始之後 2.5 秒。</span><span class="sxs-lookup"><span data-stu-id="0b203-197">For example, a timeline with a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of 5 whose parent has a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2 actually starts after 2.5 seconds.</span></span>  
  
 <span data-ttu-id="0b203-198">時間軸的自己<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>設定不會影響其<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b203-198">A timeline's own <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> setting does not affect its <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>.</span></span> <span data-ttu-id="0b203-199">比方說，使用時間軸<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>設為 5 秒， <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2 和父時間軸，包含<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 啟動 5 秒之後，不 2.5。</span><span class="sxs-lookup"><span data-stu-id="0b203-199">For example, a timeline with a <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> of 5 seconds, a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 2, and a parent timeline with a <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> of 1 starts after 5 seconds, not 2.5.</span></span>  
  
<a name="dependencyPropertyInfo_BeginTime"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0b203-200">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="0b203-200">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0b203-201">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0b203-201">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  
|<span data-ttu-id="0b203-202">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="0b203-202">Metadata properties set to `true`</span></span>|<span data-ttu-id="0b203-203">無</span><span class="sxs-lookup"><span data-stu-id="0b203-203">None</span></span>|  
  
<a name="xamlAttributeUsage_BeginTime"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="0b203-204">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="0b203-204">XAML Attribute Usage</span></span>  
 <span data-ttu-id="0b203-205">\<*物件* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-] [*天*。]*小時*:*分鐘*:*秒*[。*fractionalSeconds*]"/ ></span><span class="sxs-lookup"><span data-stu-id="0b203-205">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-][*days*.]*hours*:*minutes*:*seconds*[.*fractionalSeconds*]"/></span></span>  
  
<span data-ttu-id="0b203-206">-或-</span><span class="sxs-lookup"><span data-stu-id="0b203-206">-or-</span></span>
  
 <span data-ttu-id="0b203-207">\<*物件* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-] [*天*。]*小時*:*分鐘*"/ ></span><span class="sxs-lookup"><span data-stu-id="0b203-207">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-][*days*.]*hours*:*minutes*"/></span></span>  
  
<span data-ttu-id="0b203-208">-或-</span><span class="sxs-lookup"><span data-stu-id="0b203-208">-or-</span></span>
  
 <span data-ttu-id="0b203-209">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-]*days*"/></span><span class="sxs-lookup"><span data-stu-id="0b203-209">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-]*days*"/></span></span>  
  
<span data-ttu-id="0b203-210">-或-</span><span class="sxs-lookup"><span data-stu-id="0b203-210">-or-</span></span>
  
 <span data-ttu-id="0b203-211">\<*物件* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="{[X:null 標記延伸](~/docs/framework/xaml-services/x-null-markup-extension.md)}"/ ></span><span class="sxs-lookup"><span data-stu-id="0b203-211">\<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="{[x:Null Markup Extension](~/docs/framework/xaml-services/x-null-markup-extension.md)}"/></span></span>  
  
<a name="xamlValues_BeginTime"></a>   
## <a name="xaml-values"></a><span data-ttu-id="0b203-212">XAML 值</span><span class="sxs-lookup"><span data-stu-id="0b203-212">XAML Values</span></span>  
 <span data-ttu-id="0b203-213">方括號中的項目 (`[`和`]`) 是選擇性的。</span><span class="sxs-lookup"><span data-stu-id="0b203-213">Items in square brackets (`[` and `]`) are optional.</span></span>  
  
 <span data-ttu-id="0b203-214">*天*</span><span class="sxs-lookup"><span data-stu-id="0b203-214">*days*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="0b203-215">值大於或等於 0，描述由這個合併的天數開始時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-215">A value greater than or equal to 0 that describes the number of days spanned by this begin time.</span></span>  
  
 <span data-ttu-id="0b203-216">*時數*</span><span class="sxs-lookup"><span data-stu-id="0b203-216">*hours*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="0b203-217">表示由這個合併的時數的值介於 0 到 23 之間開始時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-217">A value between 0 and 23 that represents the number of hours spanned by this begin time.</span></span>  
  
 <span data-ttu-id="0b203-218">*分鐘的時間*</span><span class="sxs-lookup"><span data-stu-id="0b203-218">*minutes*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="0b203-219">表示由這個合併的分鐘數的值介於 0 到 59 之間開始時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-219">A value between 0 and 59 that represents the number of minutes spanned by this begin time.</span></span>  
  
 <span data-ttu-id="0b203-220">*秒數*</span><span class="sxs-lookup"><span data-stu-id="0b203-220">*seconds*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="0b203-221">表示由這個合併的秒數的值介於 0 到 59 之間開始時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-221">A value between 0 and 59 that represents the number of seconds spanned by this begin time.</span></span>  
  
 <span data-ttu-id="0b203-222">*fractionalSeconds*</span><span class="sxs-lookup"><span data-stu-id="0b203-222">*fractionalSeconds*</span></span>  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 <span data-ttu-id="0b203-223">值包含 1 到 7 位數代表小數秒數。</span><span class="sxs-lookup"><span data-stu-id="0b203-223">A value consisting of 1 to 7 digits that represents fractional seconds.</span></span>  
  
 <span data-ttu-id="0b203-224">完整<xref:System.TimeSpan>語法，請參閱 < 備註 > 一節的<xref:System.TimeSpan.Parse%2A>頁面。</span><span class="sxs-lookup"><span data-stu-id="0b203-224">For the complete <xref:System.TimeSpan> syntax, see the Remarks section of the <xref:System.TimeSpan.Parse%2A> page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b203-225">時間軸的<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>屬性會決定開始時間軸的作用中期間。</span><span class="sxs-lookup"><span data-stu-id="0b203-225">A timeline's <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property determines the beginning of a timeline's active period.</span></span> <span data-ttu-id="0b203-226">如果時間表具有父時間軸<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>屬性會決定花費時間軸在其父代啟動之後開始的時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-226">If the timeline has a parent timeline, the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property determines how long it takes the timeline to start after its parent starts.</span></span> <span data-ttu-id="0b203-227">如果時間表是根時刻表 ( <xref:System.Windows.Media.Animation.Storyboard>，例如)，則<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>屬性會決定花多少時間的時間軸開始播放之後觸發。</span><span class="sxs-lookup"><span data-stu-id="0b203-227">If the timeline is a root timeline (a <xref:System.Windows.Media.Animation.Storyboard>, for example), the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> property determines how long the timeline takes to start playing after it is triggered.</span></span>  
  
 <span data-ttu-id="0b203-228">下列範例顯示具有不同的數個不同時間軸<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>設定。</span><span class="sxs-lookup"><span data-stu-id="0b203-228">The following example shows several different timelines with different <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> settings.</span></span>  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="BeginTimeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BeginTimeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BeginTimeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeginTimeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BeginTimeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeginTimeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-229">識別 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-229">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b203-230">建立這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的可修改複製品，深層複製這個物件的值。</span><span class="sxs-lookup"><span data-stu-id="0b203-230">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Timeline" />, making deep copies of this object's values.</span></span></summary>
        <returns><span data-ttu-id="0b203-231">目前物件的可修改複本。</span><span class="sxs-lookup"><span data-stu-id="0b203-231">A modifiable clone of the current object.</span></span> <span data-ttu-id="0b203-232">即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="true." />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性仍為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-232">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-233">這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。</span><span class="sxs-lookup"><span data-stu-id="0b203-233">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="0b203-234">為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。</span><span class="sxs-lookup"><span data-stu-id="0b203-234">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="0b203-235">如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b203-235">For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0b203-236">當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (但可能無法再解析)，但不會複製動畫或它們目前的值。</span><span class="sxs-lookup"><span data-stu-id="0b203-236">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b203-237">建立這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 物件的可修改複製品，製作這個物件目前值的深層複本。</span><span class="sxs-lookup"><span data-stu-id="0b203-237">Creates a modifiable clone of this <see cref="T:System.Windows.Media.Animation.Timeline" /> object, making deep copies of this object's current values.</span></span></summary>
        <returns><span data-ttu-id="0b203-238">目前物件的可修改複本。</span><span class="sxs-lookup"><span data-stu-id="0b203-238">A modifiable clone of the current object.</span></span> <span data-ttu-id="0b203-239">即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="false" />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性仍為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-239">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-240">這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。</span><span class="sxs-lookup"><span data-stu-id="0b203-240">This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object).</span></span> <span data-ttu-id="0b203-241">為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。</span><span class="sxs-lookup"><span data-stu-id="0b203-241">For convenience, this method shadows the inherited version with a strongly typed implementation.</span></span>  
  
 <span data-ttu-id="0b203-242">如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b203-242">For more information, see <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="0b203-243">不會複製資源參考、資料繫結和動畫，但是會複製其目前值。</span><span class="sxs-lookup"><span data-stu-id="0b203-243">Resource references, data bindings, and animations are not copied, but their current values are.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-244">當這個時刻表完全結束播放時會發生：它不會再進入其作用期。</span><span class="sxs-lookup"><span data-stu-id="0b203-244">Occurs when this timeline has completely finished playing: it will no longer enter its active period.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-245">如果這個時間表是根時刻表的時間軸樹狀結構，它已完成播放 （其中包含重複項目） 作用期結束後其所有子系已達到其作用期間的結尾。</span><span class="sxs-lookup"><span data-stu-id="0b203-245">If this timeline is the root timeline of a timeline tree, it has completed playing after it reaches the end of its active period (which includes repeats) and all its children have reached the end of their active periods.</span></span> <span data-ttu-id="0b203-246">如果這個時間表是子時間軸，則會視為完全結束播放時的時間軸樹狀目錄中其所屬達到根時刻表完成作用期和其所有子時刻表結束播放。</span><span class="sxs-lookup"><span data-stu-id="0b203-246">If this timeline is a child timeline, it is considered to have completely finished playing when the root timeline of the timeline tree to which it belongs reaches the end of its active period and all its child timelines have finished playing.</span></span>  
  
 <span data-ttu-id="0b203-247">停止時間軸不會觸發已完成的事件，但略過它到其填滿期間。</span><span class="sxs-lookup"><span data-stu-id="0b203-247">Stopping a timeline does not trigger its completed event, but skipping it to its fill period does.</span></span>  
  
 <span data-ttu-id="0b203-248"><xref:System.Object>的參數<xref:System.EventHandler>事件處理常式是時間軸的<xref:System.Windows.Media.Animation.Clock>。</span><span class="sxs-lookup"><span data-stu-id="0b203-248">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the timeline's <xref:System.Windows.Media.Animation.Clock>.</span></span>  
  
 <span data-ttu-id="0b203-249">雖然這個事件處理常式會顯示與時間軸相關聯，但它實際上會向<xref:System.Windows.Media.Animation.Clock>為這個時刻表建立。</span><span class="sxs-lookup"><span data-stu-id="0b203-249">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="0b203-250">如需詳細資訊，請參閱 <<c0> [ 計時事件概觀](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-250">For more information, see the [Timing Events Overview](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b203-251">在下列範例中，兩個<xref:System.Windows.Media.Animation.Storyboard>物件用來建立動畫之間的轉換儲存使用的兩個映像<xref:System.Windows.Media.ImageSource>物件，並使用顯示<xref:System.Windows.Controls.Image>控制項。</span><span class="sxs-lookup"><span data-stu-id="0b203-251">In the following example, two <xref:System.Windows.Media.Animation.Storyboard> objects are used to create an animation transition between two images, stored using <xref:System.Windows.Media.ImageSource> objects and displayed using an <xref:System.Windows.Controls.Image> control.</span></span> <span data-ttu-id="0b203-252">一個分鏡腳本壓縮影像控制項，直到消失為止。</span><span class="sxs-lookup"><span data-stu-id="0b203-252">One storyboard shrinks the image control until it disappears.</span></span> <span data-ttu-id="0b203-253">之後它完成時，舊<xref:System.Windows.Media.ImageSource>交換與其他<xref:System.Windows.Media.ImageSource>，並展開影像的第二個分鏡腳本控制，直到完整大小一次。</span><span class="sxs-lookup"><span data-stu-id="0b203-253">After it completes, the old <xref:System.Windows.Media.ImageSource> is swapped with the other <xref:System.Windows.Media.ImageSource>, and a second storyboard that expands the image control until it is full-sized again.</span></span>  
  
 [!code-xaml[timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b203-254">從這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-254">Creates a <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock();" />
      <MemberSignature Language="F#" Value="member this.CreateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0b203-255">從此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建立可控制的新 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-255">Creates a new, controllable <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="0b203-256">如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 具有子系，將會使用 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建立時鐘的樹狀結構作為根。</span><span class="sxs-lookup"><span data-stu-id="0b203-256">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> has children, a tree of clocks is created with this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span></span></summary>
        <returns><span data-ttu-id="0b203-257">從此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建構可控制的新 <see cref="T:System.Windows.Media.Animation.Clock" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-257">A new, controllable <see cref="T:System.Windows.Media.Animation.Clock" /> constructed from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="0b203-258">如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 是包含子時間表的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />，將會使用從此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建立的可控制 <see cref="T:System.Windows.Media.Animation.Clock" /> 來建立 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件的樹狀結構作為根。</span><span class="sxs-lookup"><span data-stu-id="0b203-258">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> is a <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> that contains child timelines, a tree of <see cref="T:System.Windows.Media.Animation.Clock" /> objects is created with a controllable <see cref="T:System.Windows.Media.Animation.Clock" /> created from this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-259">雖然這<xref:System.Windows.Media.Animation.Timeline>可能是一或多個節點的子<xref:System.Windows.Media.Animation.TimelineGroup>物件，則會忽略這項資訊： 這個方法會將目前<xref:System.Windows.Media.Animation.Timeline>為根<xref:System.Windows.Media.Animation.Timeline>。</span><span class="sxs-lookup"><span data-stu-id="0b203-259">Although this <xref:System.Windows.Media.Animation.Timeline> may be the child of one or more <xref:System.Windows.Media.Animation.TimelineGroup> objects, this information is ignored: this method treats the current <xref:System.Windows.Media.Animation.Timeline> as a root <xref:System.Windows.Media.Animation.Timeline>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock(bool hasControllableRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock (hasControllableRoot As Boolean) As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock(bool hasControllableRoot);" />
      <MemberSignature Language="F#" Value="member this.CreateClock : bool -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock hasControllableRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasControllableRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasControllableRoot"><span data-ttu-id="0b203-260">如果傳回的根 <see cref="T:System.Windows.Media.Animation.Clock" /> 應從其 <see cref="T:System.Windows.Media.Animation.ClockController" /> 屬性傳回 <see cref="P:System.Windows.Media.Animation.Clock.Controller" />，以便能以互動方式控制 <see cref="T:System.Windows.Media.Animation.Clock" /> 樹狀目錄，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-260"><see langword="true" /> if the root <see cref="T:System.Windows.Media.Animation.Clock" /> returned should return a <see cref="T:System.Windows.Media.Animation.ClockController" /> from its <see cref="P:System.Windows.Media.Animation.Clock.Controller" /> property so that the <see cref="T:System.Windows.Media.Animation.Clock" /> tree can be interactively controlled; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="0b203-261">從這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立新的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 並指定新的 <see cref="T:System.Windows.Media.Animation.Clock" /> 是否是可控制的。</span><span class="sxs-lookup"><span data-stu-id="0b203-261">Creates a new <see cref="T:System.Windows.Media.Animation.Clock" /> from this <see cref="T:System.Windows.Media.Animation.Timeline" /> and specifies whether the new <see cref="T:System.Windows.Media.Animation.Clock" /> is controllable.</span></span> <span data-ttu-id="0b203-262">如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 具有子系，將會使用 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建立時鐘的樹狀結構作為根。</span><span class="sxs-lookup"><span data-stu-id="0b203-262">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> has children, a tree of clocks is created with this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span></span></summary>
        <returns><span data-ttu-id="0b203-263">從這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建構的新 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-263">A new <see cref="T:System.Windows.Media.Animation.Clock" /> constructed from this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="0b203-264">如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 是包含子時間表的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />，將會使用從此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建立的可控制 <see cref="T:System.Windows.Media.Animation.Clock" /> 來建立 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件的樹狀結構作為根。</span><span class="sxs-lookup"><span data-stu-id="0b203-264">If this <see cref="T:System.Windows.Media.Animation.Timeline" /> is a <see cref="T:System.Windows.Media.Animation.TimelineGroup" /> that contains child timelines, a tree of <see cref="T:System.Windows.Media.Animation.Clock" /> objects is created with a controllable <see cref="T:System.Windows.Media.Animation.Clock" /> created from this <see cref="T:System.Windows.Media.Animation.Timeline" /> as the root.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-265">雖然這<xref:System.Windows.Media.Animation.Timeline>可能是一或多個節點的子<xref:System.Windows.Media.Animation.TimelineGroup>物件，則會忽略這項資訊： 這個方法會將目前<xref:System.Windows.Media.Animation.Timeline>為根<xref:System.Windows.Media.Animation.Timeline>。</span><span class="sxs-lookup"><span data-stu-id="0b203-265">Although this <xref:System.Windows.Media.Animation.Timeline> may be the child of one or more <xref:System.Windows.Media.Animation.TimelineGroup> objects, this information is ignored: this method treats the current <xref:System.Windows.Media.Animation.Timeline> as a root <xref:System.Windows.Media.Animation.Timeline>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentGlobalSpeedInvalidated : EventHandler " Usage="member this.CurrentGlobalSpeedInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-266">發生於時刻表時鐘的時間進行速率變更時。</span><span class="sxs-lookup"><span data-stu-id="0b203-266">Occurs when the rate at which time progresses for the timeline's clock changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-267">在下列情況下的時間軸的時鐘變更目前的整體速度：</span><span class="sxs-lookup"><span data-stu-id="0b203-267">The current global speed of a timeline's clock changes in the following circumstances:</span></span>  
  
-   <span data-ttu-id="0b203-268">時鐘變更方向，因為其時刻表<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定。</span><span class="sxs-lookup"><span data-stu-id="0b203-268">The clock changes direction because of its timeline's <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> setting.</span></span>  
  
-   <span data-ttu-id="0b203-269">時鐘加速或減速，因為其時刻表<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>或<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性設定。</span><span class="sxs-lookup"><span data-stu-id="0b203-269">The clock accelerates or decelerates because of its timeline's <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> or <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property settings.</span></span>  
  
-   <span data-ttu-id="0b203-270">時鐘會暫停或繼續。</span><span class="sxs-lookup"><span data-stu-id="0b203-270">The clock is paused or resumed.</span></span>  
  
-   <span data-ttu-id="0b203-271">時鐘會變成非作用中，或重新啟動。</span><span class="sxs-lookup"><span data-stu-id="0b203-271">The clock becomes inactive or reactivates.</span></span>  
  
-   <span data-ttu-id="0b203-272"><xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>的其中一項時鐘的父代變更。</span><span class="sxs-lookup"><span data-stu-id="0b203-272">The <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> of one of the clock's parent changes.</span></span>  
  
 <span data-ttu-id="0b203-273"><xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件很實用追蹤時刻表的時鐘會變成暫停時，您的事件處理常式中，請使用您的腳本<xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A>方法或時鐘核取<xref:System.Windows.Media.Animation.Clock.IsPaused%2A>屬性來判斷是否要暫停其時鐘; 比較這對若要判斷是否已變更先前快取的值。</span><span class="sxs-lookup"><span data-stu-id="0b203-273">The <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event is useful for tracking when a timeline's clock becomes paused; in your event handler, use your storyboard's <xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A> method or check the clock's <xref:System.Windows.Media.Animation.Clock.IsPaused%2A> property to determine whether its clock is paused; compare this against a previously cached value to determine whether it changed.</span></span>  
  
 <span data-ttu-id="0b203-274"><xref:System.Object>的參數<xref:System.EventHandler>事件處理常式是時間軸的<xref:System.Windows.Media.Animation.Clock>。</span><span class="sxs-lookup"><span data-stu-id="0b203-274">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the timeline's <xref:System.Windows.Media.Animation.Clock>.</span></span>  
  
 <span data-ttu-id="0b203-275">雖然這個事件處理常式會顯示與時間軸相關聯，但它實際上會向<xref:System.Windows.Media.Animation.Clock>為這個時刻表建立。</span><span class="sxs-lookup"><span data-stu-id="0b203-275">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="0b203-276">如需詳細資訊，請參閱 <<c0> [ 計時事件概觀](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-276">For more information, see the [Timing Events Overview](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b203-277">下列範例示範如何註冊<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="0b203-277">The following example shows how to register for the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateInvalidated : EventHandler " Usage="member this.CurrentStateInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-278">於時間軸的 <see cref="T:System.Windows.Media.Animation.Clock" /> 之 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 屬性更新時發生。</span><span class="sxs-lookup"><span data-stu-id="0b203-278">Occurs when the <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> property of the timeline's <see cref="T:System.Windows.Media.Animation.Clock" /> is updated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-279">使用<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>當您想要在時間軸時收到通知的事件<xref:System.Windows.Media.Animation.Clock>啟動、 停止或填滿。</span><span class="sxs-lookup"><span data-stu-id="0b203-279">Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified  when a timeline's <xref:System.Windows.Media.Animation.Clock> starts, stops, or fills.</span></span>  
  
 <span data-ttu-id="0b203-280">暫停<xref:System.Windows.Media.Animation.Clock>不會變更其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b203-280">Pausing a <xref:System.Windows.Media.Animation.Clock> does not change its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A>.</span></span> <span data-ttu-id="0b203-281">若要收到時鐘會變成暫停時，使用<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="0b203-281">To be notified when a clock becomes paused, use the <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> event.</span></span>  
  
 <span data-ttu-id="0b203-282">雖然就會發生此事件時<xref:System.Windows.Media.Animation.ClockState>會變成無效，也不一定表示<xref:System.Windows.Media.Animation.ClockState>變更： <xref:System.Windows.Media.Animation.Clock> ，從切換<xref:System.Windows.Media.Animation.ClockState.Active>來<xref:System.Windows.Media.Animation.ClockState.Filling>，然後再回到<xref:System.Windows.Media.Animation.ClockState.Active>在相同刻度將會引發此事件引發，但其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>屬性實際上並不會變更。</span><span class="sxs-lookup"><span data-stu-id="0b203-282">Although this event occurs when the <xref:System.Windows.Media.Animation.ClockState> becomes invalid, that doesn't necessarily mean the <xref:System.Windows.Media.Animation.ClockState> changed: a <xref:System.Windows.Media.Animation.Clock> that switches from <xref:System.Windows.Media.Animation.ClockState.Active> to <xref:System.Windows.Media.Animation.ClockState.Filling> and then back to <xref:System.Windows.Media.Animation.ClockState.Active> in the same tick will cause this event to fire, but its <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> property won't actually change.</span></span>  
  
 <span data-ttu-id="0b203-283"><xref:System.Object>的參數<xref:System.EventHandler>事件處理常式是<xref:System.Windows.Media.Animation.Clock>所建立的這個時間軸。</span><span class="sxs-lookup"><span data-stu-id="0b203-283">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the  <xref:System.Windows.Media.Animation.Clock> that was created for this timeline.</span></span>  
  
 <span data-ttu-id="0b203-284">雖然這個事件處理常式會顯示與時間軸相關聯，但它實際上會向<xref:System.Windows.Media.Animation.Clock>為這個時刻表建立。</span><span class="sxs-lookup"><span data-stu-id="0b203-284">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="0b203-285">如需詳細資訊，請參閱 <<c0> [ 計時事件概觀](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-285">For more information, see the [Timing Events Overview](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeInvalidated : EventHandler " Usage="member this.CurrentTimeInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-286">於時間軸的 <see cref="T:System.Windows.Media.Animation.Clock" /> 之 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 屬性更新時發生。</span><span class="sxs-lookup"><span data-stu-id="0b203-286">Occurs when the <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> property of the timeline's <see cref="T:System.Windows.Media.Animation.Clock" /> is updated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-287">使用<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>當您想要的事件時收到通知<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>時間表之<xref:System.Windows.Media.Animation.Clock>會更新。</span><span class="sxs-lookup"><span data-stu-id="0b203-287">Use the <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> event when you want to be notified when the <xref:System.Windows.Media.Animation.Clock.CurrentTime%2A> of a timeline's <xref:System.Windows.Media.Animation.Clock> is updated.</span></span>  
  
 <span data-ttu-id="0b203-288"><xref:System.Object>的參數<xref:System.EventHandler>事件處理常式是時間軸的<xref:System.Windows.Media.Animation.Clock>。</span><span class="sxs-lookup"><span data-stu-id="0b203-288">The <xref:System.Object> parameter of the <xref:System.EventHandler> event handler is the timeline's <xref:System.Windows.Media.Animation.Clock>.</span></span>  
  
 <span data-ttu-id="0b203-289">雖然這個事件處理常式會顯示與時間軸相關聯，但它實際上會向<xref:System.Windows.Media.Animation.Clock>為這個時刻表建立。</span><span class="sxs-lookup"><span data-stu-id="0b203-289">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="0b203-290">如需詳細資訊，請參閱 <<c0> [ 計時事件概觀](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-290">For more information, see the [Timing Events Overview](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0b203-291">下列範例示範如何註冊<xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated>事件。</span><span class="sxs-lookup"><span data-stu-id="0b203-291">The following example shows how to register for the <xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated> event.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatio">
      <MemberSignature Language="C#" Value="public double DecelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DecelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property DecelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DecelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.DecelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-292">取得或設定值，指定時間軸的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 在從其最大速率減速至零所經過時間的百分比。</span><span class="sxs-lookup"><span data-stu-id="0b203-292">Gets or sets a value specifying the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent decelerating the passage of time from its maximum rate to zero.</span></span></summary>
        <value><span data-ttu-id="0b203-293">介於 0 和 1 (含) 之間的值，指定時間軸的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 在從其最大速率減速至零所經過時間的百分比。</span><span class="sxs-lookup"><span data-stu-id="0b203-293">A value between 0 and 1, inclusive, that specifies the percentage of the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> spent decelerating the passage of time from its maximum rate to zero.</span></span> <span data-ttu-id="0b203-294">如果時間軸 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 屬性也已設定，則 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 總和必須小於或等於 1。</span><span class="sxs-lookup"><span data-stu-id="0b203-294">If the timeline's <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> property is also set, the sum of <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> must be less than or equal to 1.</span></span> <span data-ttu-id="0b203-295">預設值為 0。</span><span class="sxs-lookup"><span data-stu-id="0b203-295">The default value is 0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-296">使用<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性建立動畫的速度很慢相應減少之前停止。</span><span class="sxs-lookup"><span data-stu-id="0b203-296">Use the <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property to create animations that slow down before stopping.</span></span> <span data-ttu-id="0b203-297"><xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性可用於建立簡化的效果，或進行看起來更自然的移動。</span><span class="sxs-lookup"><span data-stu-id="0b203-297">The <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> property is useful for creating ease-in effects or making movement seem more natural.</span></span> <span data-ttu-id="0b203-298">使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性搭配使用來建立動畫，啟動很慢、 速度，並接著減慢完成前一次。</span><span class="sxs-lookup"><span data-stu-id="0b203-298">Use the <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> and <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> properties together to create animations that start slowly, speed up, and then slow down again before finishing.</span></span>  
  
<a name="dependencyPropertyInfo_DecelerationRatio"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0b203-299">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="0b203-299">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0b203-300">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0b203-300">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  
|<span data-ttu-id="0b203-301">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="0b203-301">Metadata properties set to `true`</span></span>|<span data-ttu-id="0b203-302">無</span><span class="sxs-lookup"><span data-stu-id="0b203-302">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b203-303"><see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 小於 0 或大於 1。</span><span class="sxs-lookup"><span data-stu-id="0b203-303"><see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> is less than 0 or greater than 1.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0b203-304"><see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 的總和超過 1。</span><span class="sxs-lookup"><span data-stu-id="0b203-304">The sum of <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> and <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> exceeds 1.</span></span></exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DecelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DecelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DecelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DecelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-305">為 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 相依性屬性識別。</span><span class="sxs-lookup"><span data-stu-id="0b203-305">Identifies for the <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRate">
      <MemberSignature Language="C#" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="ILAsm" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      <MemberSignature Language="VB.NET" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="F#" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" Usage="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0b203-306">取得或設定此時刻表及其子時刻表理想的畫面播放速率。</span><span class="sxs-lookup"><span data-stu-id="0b203-306">Gets or sets the desired frame rate for this timeline and its child timelines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="0b203-307">您可以使用這個屬性來定義動畫應執行特定的畫面播放速率。</span><span class="sxs-lookup"><span data-stu-id="0b203-307">Use this property to define a specific frame rate at which animations should run.</span></span><span data-ttu-id="0b203-308">  這是僅限的指導方針並不是保證的值。</span><span class="sxs-lookup"><span data-stu-id="0b203-308">  This is a guideline only, and is not a guaranteed value.</span></span> <span data-ttu-id="0b203-309">此屬性具有兩個主要用途：</span><span class="sxs-lookup"><span data-stu-id="0b203-309">This property has two primary uses:</span></span>

- <span data-ttu-id="0b203-310">限制處理資源的移動緩慢，背景類型動畫，不需要較高程度的精確度的量。</span><span class="sxs-lookup"><span data-stu-id="0b203-310">Limiting the amount of processing resources for slow-moving, background type animations that do not require a high degree of fidelity.</span></span> <span data-ttu-id="0b203-311">這可藉由設定時間軸上的小型的畫面格速率值。</span><span class="sxs-lookup"><span data-stu-id="0b203-311">This can be achieved by setting a small frame rate value on the timeline.</span></span>

- <span data-ttu-id="0b203-312">減少撕裂瞬息萬變的水平的動畫上的視覺效果。</span><span class="sxs-lookup"><span data-stu-id="0b203-312">Reducing the visual impact of tearing on fast-moving horizontal animations.</span></span> <span data-ttu-id="0b203-313">這可藉由設定時間軸上的畫面播放速率值。</span><span class="sxs-lookup"><span data-stu-id="0b203-313">This can be achieved by setting a high frame rate value on the timeline.</span></span>

<span data-ttu-id="0b203-314">這個屬性只能設定根時間軸上。</span><span class="sxs-lookup"><span data-stu-id="0b203-314">This property may only be set on a root timeline.</span></span>

## Examples  
<span data-ttu-id="0b203-315">下列範例會使用 DesiredFrameRate 屬性，限制每秒 10 個畫面格的數個動畫。</span><span class="sxs-lookup"><span data-stu-id="0b203-315">The following example uses the DesiredFrameRate property to limit several animations to 10 frames per second.</span></span>

[!code-xaml[timingbehaviors_snip#GraphicsMMDesiredFrameRateExample](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/DesiredFrameRateExample.xaml#GraphicsMMDesiredFrameRateExample)]

]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/wpf/graphics-multimedia/animation-overview.md"><span data-ttu-id="0b203-316">動畫概觀</span><span class="sxs-lookup"><span data-stu-id="0b203-316">Animation Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DesiredFrameRateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesiredFrameRateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DesiredFrameRateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesiredFrameRateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-317">識別 <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> 附加屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-317">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration Duration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration Duration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : System.Windows.Duration with get, set" Usage="System.Windows.Media.Animation.Timeline.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-318">取得或設定這個時間表播放的時間長度 (不計算重複次數)。</span><span class="sxs-lookup"><span data-stu-id="0b203-318">Gets or sets the length of time for which this timeline plays, not counting repetitions.</span></span></summary>
        <value><span data-ttu-id="0b203-319">時刻表的簡單持續期間：這個時刻表完成單一向前反覆項目所花費的時間量。</span><span class="sxs-lookup"><span data-stu-id="0b203-319">The timeline's simple duration: the amount of time this timeline takes to complete a single forward iteration.</span></span> <span data-ttu-id="0b203-320">預設值為 <see cref="P:System.Windows.Duration.Automatic" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-320">The default value is <see cref="P:System.Windows.Duration.Automatic" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-321">時間軸的簡單持續時間會構成的時間總計的播放時間，包括重複項目與單一向前反覆項目。</span><span class="sxs-lookup"><span data-stu-id="0b203-321">A timeline's simple duration constitutes the time for a single forward iteration versus the total play time, which includes repetitions.</span></span>  
  
## <a name="default-duration-behavior"></a><span data-ttu-id="0b203-322">預設持續時間的行為</span><span class="sxs-lookup"><span data-stu-id="0b203-322">Default Duration Behavior</span></span>  
 <span data-ttu-id="0b203-323">行為<xref:System.Windows.Media.Animation.Timeline.Duration%2A>結構，其值為<xref:System.Windows.Duration.Automatic%2A>取決於時間軸類型：</span><span class="sxs-lookup"><span data-stu-id="0b203-323">The behavior of a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> structure with a value of <xref:System.Windows.Duration.Automatic%2A> depends on the type of timeline:</span></span>  
  
|<span data-ttu-id="0b203-324">**時間軸**</span><span class="sxs-lookup"><span data-stu-id="0b203-324">**Timeline**</span></span>|<span data-ttu-id="0b203-325">**Behavior**</span><span class="sxs-lookup"><span data-stu-id="0b203-325">**Behavior**</span></span>|  
|-|-|  
|<xref:System.Windows.Media.Animation.Timeline>|<span data-ttu-id="0b203-326">未定 (<xref:System.Windows.Media.Animation.Timeline>是抽象)</span><span class="sxs-lookup"><span data-stu-id="0b203-326">Undetermined (<xref:System.Windows.Media.Animation.Timeline> is abstract)</span></span>|  
|<span data-ttu-id="0b203-327"><xref:System.Windows.Media.Animation.ParallelTimeline>,</span><span class="sxs-lookup"><span data-stu-id="0b203-327"><xref:System.Windows.Media.Animation.ParallelTimeline>,</span></span><br /><br /> <span data-ttu-id="0b203-328"><xref:System.Windows.Media.Animation.Storyboard>,</span><span class="sxs-lookup"><span data-stu-id="0b203-328"><xref:System.Windows.Media.Animation.Storyboard>,</span></span><br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|<span data-ttu-id="0b203-329">展開以容納子時間軸</span><span class="sxs-lookup"><span data-stu-id="0b203-329">Expands to fit child timelines</span></span>|  
|<span data-ttu-id="0b203-330">\<*型別*> 動畫 （稱為 「 From/To/By"或 「 基本 」 動畫）</span><span class="sxs-lookup"><span data-stu-id="0b203-330">\<*Type*>Animation (Known as a "From/To/By" or "basic" animations)</span></span>|<span data-ttu-id="0b203-331">1 秒</span><span class="sxs-lookup"><span data-stu-id="0b203-331">1 second</span></span>|  
|<span data-ttu-id="0b203-332">\<*型別*> AnimationUsingKeyFrames （稱為主要畫面格動畫）</span><span class="sxs-lookup"><span data-stu-id="0b203-332">\<*Type*>AnimationUsingKeyFrames (Known as key frame animations)</span></span>|<span data-ttu-id="0b203-333">所有的主要畫面格的加總<xref:System.Windows.Media.Animation.KeyTime>值</span><span class="sxs-lookup"><span data-stu-id="0b203-333">Sum of all key frame <xref:System.Windows.Media.Animation.KeyTime> values</span></span>|  
  
<a name="dependencyPropertyInfo_Duration"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0b203-334">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="0b203-334">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0b203-335">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0b203-335">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  
|<span data-ttu-id="0b203-336">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="0b203-336">Metadata properties set to `true`</span></span>|<span data-ttu-id="0b203-337">無</span><span class="sxs-lookup"><span data-stu-id="0b203-337">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0b203-338"><xref:System.Windows.Media.Animation.ParallelTimeline> 並<xref:System.Windows.Media.Animation.Storyboard>種<xref:System.Windows.Media.Animation.TimelineGroup>物件。</span><span class="sxs-lookup"><span data-stu-id="0b203-338"><xref:System.Windows.Media.Animation.ParallelTimeline> and <xref:System.Windows.Media.Animation.Storyboard> are types of <xref:System.Windows.Media.Animation.TimelineGroup> objects.</span></span> <span data-ttu-id="0b203-339">持續時間<xref:System.Windows.Media.Animation.TimelineGroup>取決於及其子時刻表的持續時間。</span><span class="sxs-lookup"><span data-stu-id="0b203-339">The duration of a <xref:System.Windows.Media.Animation.TimelineGroup> is determined by the duration of its child timelines.</span></span> <span data-ttu-id="0b203-340">例如，<xref:System.Windows.Media.Animation.Storyboard>以下會執行六秒 （持續時間的 6 秒），因為這是當最後一個子時間軸 (<xref:System.Windows.Media.Animation.DoubleAnimation>) 結束。</span><span class="sxs-lookup"><span data-stu-id="0b203-340">For example, the <xref:System.Windows.Media.Animation.Storyboard> below will run for six seconds (duration of 6 seconds) because that is when its last child Timeline (<xref:System.Windows.Media.Animation.DoubleAnimation>) ends.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0b203-341">注意： 從下列的範例中，為說明之用僅會提供省略的程式碼。</span><span class="sxs-lookup"><span data-stu-id="0b203-341">Note: code has been omitted from the following examples, which are provided for illustrative purposed only.</span></span>  
  
 <span data-ttu-id="0b203-342">[xaml]</span><span class="sxs-lookup"><span data-stu-id="0b203-342">[xaml]</span></span>  
  
```  
...  
  <Storyboard>  
    <DoubleAnimation Duration="0:0:2" …/>  
    <DoubleAnimation Duration="0:0:4" BeginTime="0:0:2" …/>  
  </Storyboard>   
...  
```  
  
 <span data-ttu-id="0b203-343">範例\<*型別*> 包含動畫<xref:System.Windows.Media.Animation.DoubleAnimation>， <xref:System.Windows.Media.Animation.PointAnimation>，<xref:System.Windows.Media.Animation.ColorAnimation>等等。如果沒有<xref:System.Windows.Media.Animation.Timeline.Duration%2A>指定這些類型的動畫，它們會執行一秒。</span><span class="sxs-lookup"><span data-stu-id="0b203-343">Examples of \<*Type*>Animations include <xref:System.Windows.Media.Animation.DoubleAnimation>, <xref:System.Windows.Media.Animation.PointAnimation>, <xref:System.Windows.Media.Animation.ColorAnimation>, etc. If no <xref:System.Windows.Media.Animation.Timeline.Duration%2A> is specified for these types of animations, they will run for one second.</span></span>  
  
 <span data-ttu-id="0b203-344">[xaml]</span><span class="sxs-lookup"><span data-stu-id="0b203-344">[xaml]</span></span>  
  
```  
...  
  <!-- With no Duration specified, this animation will run for   
       one second -->  
  <DoubleAnimation .../>  
...  
```  
  
 <span data-ttu-id="0b203-345">範例\<*型別*> AnimationUsingKeyFrames 包括<xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>，<xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>等等。如果沒有<xref:System.Windows.Media.Animation.Timeline.Duration%2A>指定這種動畫會執行直到完成所有的主要畫面格。</span><span class="sxs-lookup"><span data-stu-id="0b203-345">Examples of \<*Type*>AnimationUsingKeyFrames include <xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>, <xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>, etc. If no <xref:System.Windows.Media.Animation.Timeline.Duration%2A> is specified for these types of animations they will run until all key frames are finished.</span></span>  
  
 <span data-ttu-id="0b203-346">[xaml]</span><span class="sxs-lookup"><span data-stu-id="0b203-346">[xaml]</span></span>  
  
```  
...  
  <Storyboard>  
  
    <!-- This key frame animation will end at 4.5 seconds  
         Because that is when its last KeyFrame KeyTime ends. -->  
    <DoubleAnimationUsingKeyFrames ...>  
      <LinearDoubleKeyFrame ... KeyTime="0:0:3" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:3.5" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4.5" />  
    </DoubleAnimationUsingKeyFrames>  
  </Storyboard>   
...  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="DurationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DurationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DurationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DurationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DurationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DurationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-347">識別 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-347">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.FillBehavior FillBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property FillBehavior As FillBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::FillBehavior FillBehavior { System::Windows::Media::Animation::FillBehavior get(); void set(System::Windows::Media::Animation::FillBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillBehavior : System.Windows.Media.Animation.FillBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.FillBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-348">取得或設定值，該值指定 <see cref="T:System.Windows.Media.Animation.Timeline" /> 在作用期結束後的行為。</span><span class="sxs-lookup"><span data-stu-id="0b203-348">Gets or sets a value that specifies how the <see cref="T:System.Windows.Media.Animation.Timeline" /> behaves after it reaches the end of its active period.</span></span></summary>
        <value><span data-ttu-id="0b203-349">一個值，指定時間軸在作用期結束後，但它的父系是在作用或填滿期間內時的行為。</span><span class="sxs-lookup"><span data-stu-id="0b203-349">A value that specifies how the timeline behaves after it reaches the end of its active period but its parent is inside its active or fill period.</span></span> <span data-ttu-id="0b203-350">預設值為 <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-350">The default value is <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-351">設定動畫<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>屬性設<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>當您想保留其值，其作用期結束後的動畫。</span><span class="sxs-lookup"><span data-stu-id="0b203-351">Set an animations <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> property to <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> when you want the animation to hold its value after it reaches the end of its active period.</span></span> <span data-ttu-id="0b203-352">已達到其使用中週期結尾的動畫具有<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>要在其填滿期間內。</span><span class="sxs-lookup"><span data-stu-id="0b203-352">An animation that has reached the end of its active period that has a <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> setting of <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd> is said to be in its fill period.</span></span> <span data-ttu-id="0b203-353">當您不想保留之後其值的動畫到達其使用中週期結尾時，請將其</span><span class="sxs-lookup"><span data-stu-id="0b203-353">When you don't want an animation to hold its value after it reaches the end of its active period, set its</span></span>  
  
 <span data-ttu-id="0b203-354"><xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 屬性為<xref:System.Windows.Media.Animation.FillBehavior.Stop>。</span><span class="sxs-lookup"><span data-stu-id="0b203-354"><xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> property to <xref:System.Windows.Media.Animation.FillBehavior.Stop>.</span></span>  
  
 <span data-ttu-id="0b203-355">因為其填滿期間中的動畫會繼續覆寫其目標屬性的值，嘗試將透過其他方式的目標屬性的值設定可能會不有任何作用。</span><span class="sxs-lookup"><span data-stu-id="0b203-355">Because an animation in its fill period continues to override its target property's value, attempting to set the target property's value through other means might appear to have no effect.</span></span> <span data-ttu-id="0b203-356">如需示範如何設定屬性值之後已顯示動畫, 的範例，請參閱[How to:使用分鏡腳本動畫後進行設定的屬性](~/docs/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-356">For an example showing how to set a property value after it has been animated, see [How to: Set a Property After Animating It with a Storyboard](~/docs/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard.md).</span></span>  
  
 <span data-ttu-id="0b203-357">子時間軸停止播放，並填入其父時間軸停止; 時如果您想要填滿子時間軸，請確定有其父時間軸<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>的<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>。</span><span class="sxs-lookup"><span data-stu-id="0b203-357">A child timeline stops playing and filling when its parent timeline stops; if you want a child timeline to fill, make sure its parent timeline has a <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> of <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>.</span></span>  
  
<a name="dependencyPropertyInfo_FillBehavior"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0b203-358">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="0b203-358">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0b203-359">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0b203-359">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  
|<span data-ttu-id="0b203-360">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="0b203-360">Metadata properties set to `true`</span></span>|<span data-ttu-id="0b203-361">無</span><span class="sxs-lookup"><span data-stu-id="0b203-361">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FillBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FillBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FillBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FillBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FillBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-362">識別 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-362">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="timeline.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking"><span data-ttu-id="0b203-363"><see langword="true" /> 表示檢查這個執行個體是否可以凍結；<see langword="false" /> 表示凍結這個執行個體。</span><span class="sxs-lookup"><span data-stu-id="0b203-363"><see langword="true" /> to check if this instance can be frozen; <see langword="false" /> to freeze this instance.</span></span></param>
        <summary><span data-ttu-id="0b203-364">使這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 成為不可修改，或決定它是否可以變成不可修改。</span><span class="sxs-lookup"><span data-stu-id="0b203-364">Makes this <see cref="T:System.Windows.Media.Animation.Timeline" /> unmodifiable or determines whether it can be made unmodifiable.</span></span></summary>
        <returns><span data-ttu-id="0b203-365"><paramref name="isChecking" /> 為 true 時，如果這個執行個體可以設為唯讀，這個方法就會傳回 <see langword="true" />；如果無法設為唯讀，則會傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-365">If <paramref name="isChecking" /> is true, this method returns <see langword="true" /> if this instance can be made read-only, or <see langword="false" /> if it cannot be made read-only.</span></span>  
  
<span data-ttu-id="0b203-366"><paramref name="isChecking" /> 為 false 時，如果這個執行個體現在為唯讀，這個方法就會傳回 <see langword="true" />；如果無法設為唯讀，並且具有副作用，即開始變更這個物件的凍結狀態，則傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-366">If <paramref name="isChecking" /> is false, this method returns <see langword="true" /> if this instance is now read-only, or <see langword="false" /> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-367">請勿呼叫這個方法，直接 （只是呼叫基底實作中）。</span><span class="sxs-lookup"><span data-stu-id="0b203-367">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="0b203-368">這個方法會在內部呼叫<xref:System.Windows.Freezable.Freeze%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b203-368">This method is called internally by <xref:System.Windows.Freezable.Freeze%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0b203-369">
            <see cref="T:System.Windows.Media.Animation.Timeline" /> 類別包含不會儲存使用相依性屬性的資料時，實作者必須覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="0b203-369">
            <see cref="T:System.Windows.Media.Animation.Timeline" /> implementers must override this method when the class contains data that is not stored using dependency properties.</span></span>  
  
<span data-ttu-id="0b203-370">一般實作會呼叫基底，然後呼叫靜態<see cref="M:System.Windows.Freezable.Freeze" />上所有的方法<see cref="T:System.Windows.Freezable" />類型的屬性，其中包含類別，傳回<see langword="true" />只有當所有屬性凍結 （或可能有已凍結，在傳遞的情況下透過<see langword="false" />值<paramref name="isChecking" />)。</span><span class="sxs-lookup"><span data-stu-id="0b203-370">A typical implementation would call base, then call the static <see cref="M:System.Windows.Freezable.Freeze" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of passing through a <see langword="false" /> value for <paramref name="isChecking" />).</span></span></para></block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="0b203-371">要複製的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="0b203-371">The <see cref="T:System.Windows.Media.Animation.Timeline" /> instance to clone.</span></span></param>
        <summary><span data-ttu-id="0b203-372">使這個執行個體成為指定之 <see cref="T:System.Windows.Media.Animation.Timeline" /> 物件的複本。</span><span class="sxs-lookup"><span data-stu-id="0b203-372">Makes this instance a clone of the specified <see cref="T:System.Windows.Media.Animation.Timeline" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-373">當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (但可能無法再解析)，但不會複製動畫或它們目前的值。</span><span class="sxs-lookup"><span data-stu-id="0b203-373">When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</span></span> <span data-ttu-id="0b203-374">請注意，如果這些屬性包含資源參考或資料繫結<xref:System.Windows.Freezable.GetAsFrozen%2A>將會失敗時嘗試凍結物件，而且將會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="0b203-374">Note that if these properties contain resource references or data bindings, <xref:System.Windows.Freezable.GetAsFrozen%2A> will fail when trying to freeze the object and will throw an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="0b203-375">這個方法會呼叫<xref:System.Windows.Freezable.GetAsFrozen%2A>方法並不會呼叫直接從程式碼中，除了呼叫基底實作，同時覆寫此方法時。</span><span class="sxs-lookup"><span data-stu-id="0b203-375">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="0b203-376">若要建立目前物件的凍結的複本，請呼叫<xref:System.Windows.Freezable.GetAsFrozen%2A>而不是直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="0b203-376">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="0b203-377">如需詳細資訊，請參閱<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b203-377">For more information, see <xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="0b203-378">要複製和凍結的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-378">The <see cref="T:System.Windows.Media.Animation.Timeline" /> to copy and freeze.</span></span></param>
        <summary><span data-ttu-id="0b203-379">使這個執行個體成為所指定 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的凍結複本。</span><span class="sxs-lookup"><span data-stu-id="0b203-379">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="0b203-380">不會複製資源參考、資料繫結和動畫，但是會複製其目前值。</span><span class="sxs-lookup"><span data-stu-id="0b203-380">Resource references, data bindings, and animations are not copied, but their current values are.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-381">這個方法會呼叫<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>方法並不會呼叫直接從程式碼中，除了呼叫基底實作，同時覆寫此方法時。</span><span class="sxs-lookup"><span data-stu-id="0b203-381">This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="0b203-382">若要建立目前物件的凍結的複本，請呼叫<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>而不是直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="0b203-382">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 <span data-ttu-id="0b203-383">如需詳細資訊，請參閱<xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="0b203-383">For more information see <xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; GetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberSignature Language="F#" Value="static member GetDesiredFrameRate : System.Windows.Media.Animation.Timeline -&gt; Nullable&lt;int&gt;" Usage="System.Windows.Media.Animation.Timeline.GetDesiredFrameRate timeline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline"><span data-ttu-id="0b203-384">要從其中擷取理想畫面播放速率的時刻表。</span><span class="sxs-lookup"><span data-stu-id="0b203-384">The timeline from which to retrieve the desired frame rate.</span></span></param>
        <summary><span data-ttu-id="0b203-385">取得指定之 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的理想畫面播放速率。</span><span class="sxs-lookup"><span data-stu-id="0b203-385">Gets the desired frame rate of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="0b203-386">此時刻表理想的畫面播放速率。</span><span class="sxs-lookup"><span data-stu-id="0b203-386">The desired frame rate of this timeline.</span></span> <span data-ttu-id="0b203-387">預設值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-387">The default value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-388">這個方法會提供可讀取<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>附加屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-388">This method provides read access to the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> attached property.</span></span> <span data-ttu-id="0b203-389">如需詳細資訊，請參閱<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>頁面。</span><span class="sxs-lookup"><span data-stu-id="0b203-389">For more information, see the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDuration">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Windows.Duration GetNaturalDuration(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::Duration GetNaturalDuration(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="member this.GetNaturalDuration : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDuration clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock"><span data-ttu-id="0b203-390">為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-390">The <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></param>
        <summary><span data-ttu-id="0b203-391">傳回這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的單一反覆項目的長度。</span><span class="sxs-lookup"><span data-stu-id="0b203-391">Returns the length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <returns><span data-ttu-id="0b203-392">這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的單一反覆項目的長度，如果自然持續期間未知則為 <see cref="P:System.Windows.Duration.Automatic" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-392">The length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />, or <see cref="P:System.Windows.Duration.Automatic" /> if the natural duration is unknown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-393">這個方法應該只呼叫何時<xref:System.Windows.Media.Animation.Timeline.Duration%2A>屬性設定為<xref:System.Windows.Duration.Automatic%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b203-393">This method should only be called when the <xref:System.Windows.Media.Animation.Timeline.Duration%2A> property is set to <xref:System.Windows.Duration.Automatic%2A>.</span></span> <span data-ttu-id="0b203-394">如果<xref:System.Windows.Media.Animation.Timeline.Duration%2A>已<xref:System.Windows.Duration.Automatic%2A>，自然持續時間取決於該特定類別的實作<xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b203-394">If <xref:System.Windows.Media.Animation.Timeline.Duration%2A> is <xref:System.Windows.Duration.Automatic%2A>, the natural duration is determined by that particular class's implementation of <xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>.</span></span>  
  
 <span data-ttu-id="0b203-395">如果<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>會傳回<xref:System.Windows.Duration.Automatic%2A>，則表示自然持續期間未知，這表示自然持續期間<xref:System.Windows.Duration.Forever%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b203-395">If <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> returns <xref:System.Windows.Duration.Automatic%2A>, it means that the natural duration is unknown, which implies a natural duration of <xref:System.Windows.Duration.Forever%2A>.</span></span> <span data-ttu-id="0b203-396">就是串流處理媒體如此。</span><span class="sxs-lookup"><span data-stu-id="0b203-396">Such is the case for streaming media.</span></span>  
  
 <span data-ttu-id="0b203-397">請注意，這個時刻表的時鐘不是已建立並傳遞此方法是可行的但會提供不可靠的結果。</span><span class="sxs-lookup"><span data-stu-id="0b203-397">Note that passing this method a clock other than the one that was created for this timeline is possible, but will provide unreliable results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.Duration" />
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration&#xA;override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock"><span data-ttu-id="0b203-398">為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-398">The <see cref="T:System.Windows.Media.Animation.Clock" /> that was created for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></param>
        <summary><span data-ttu-id="0b203-399">傳回這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的單一反覆項目的長度。</span><span class="sxs-lookup"><span data-stu-id="0b203-399">Returns the length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span> <span data-ttu-id="0b203-400">這個方法會實作 <see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-400">This method provides the implementation for <see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />.</span></span></summary>
        <returns><span data-ttu-id="0b203-401">這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的單一反覆項目的長度，如果自然持續期間未知則為 <see cref="P:System.Windows.Duration.Automatic" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-401">The length of a single iteration of this <see cref="T:System.Windows.Media.Animation.Timeline" />, or <see cref="P:System.Windows.Duration.Automatic" /> if the natural duration is unknown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-402">這個方法提供實作<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>且不應該直接從程式碼呼叫。</span><span class="sxs-lookup"><span data-stu-id="0b203-402">This method provides the implementation for <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> and should not be called directly from your code.</span></span> <span data-ttu-id="0b203-403">請改用 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b203-403">Use <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="0b203-404">應該實作這個方法，由時間軸類別需要提供自訂自然<see cref="T:System.Windows.Duration" />時<see cref="P:System.Windows.Media.Animation.Timeline.Duration" />屬性設定為<see cref="P:System.Windows.Duration.Automatic" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-404">This method should be implemented by timeline classes that need to provide a custom natural <see cref="T:System.Windows.Duration" /> when the <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> property is set to <see cref="P:System.Windows.Duration.Automatic" />.</span></span> <span data-ttu-id="0b203-405">如果作者無法判斷的自然持續期間，此方法應傳回<see cref="P:System.Windows.Duration.Automatic" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-405">If the author cannot determine the natural duration, this method should return <see cref="P:System.Windows.Duration.Automatic" />.</span></span></para></block>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Media.Animation.Timeline.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-406">取得或設定這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的名稱。</span><span class="sxs-lookup"><span data-stu-id="0b203-406">Gets or sets the name of this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <value><span data-ttu-id="0b203-407">這個時刻表的名稱。</span><span class="sxs-lookup"><span data-stu-id="0b203-407">The name of this timeline.</span></span> <span data-ttu-id="0b203-408">預設值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-408">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-409">識別 <see cref="P:System.Windows.Media.Animation.Timeline.Name" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-409">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.Name" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberSignature Language="F#" Value="member this.RemoveRequested : EventHandler " Usage="member this.RemoveRequested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-410">為這個時刻表建立時鐘或移除它的其中一個父時刻表時發生。</span><span class="sxs-lookup"><span data-stu-id="0b203-410">Occurs when the clock created for this timeline or one of its parent timelines is removed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-411">會引發這個事件，藉由套用<xref:System.Windows.Media.Animation.RemoveStoryboard>使用分鏡腳本的分鏡腳本動作<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>方法，或 （當直接使用時鐘） 呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="0b203-411">This event is raised by applying a <xref:System.Windows.Media.Animation.RemoveStoryboard> action to a storyboard, using a Storyboard's <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> method, or (when working directly with clocks) calling the <xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="0b203-412">雖然這個事件處理常式會顯示與時間軸相關聯，但它實際上會向<xref:System.Windows.Media.Animation.Clock>為這個時刻表建立。</span><span class="sxs-lookup"><span data-stu-id="0b203-412">Although this event handler appears to be associated with a timeline, it actually registers with the <xref:System.Windows.Media.Animation.Clock> created for this timeline.</span></span>  <span data-ttu-id="0b203-413">如需詳細資訊，請參閱 <<c0> [ 計時事件概觀](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-413">For more information, see the [Timing Events Overview](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.RemoveStoryboard" />
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.RepeatBehavior RepeatBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RepeatBehavior As RepeatBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::RepeatBehavior RepeatBehavior { System::Windows::Media::Animation::RepeatBehavior get(); void set(System::Windows::Media::Animation::RepeatBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatBehavior : System.Windows.Media.Animation.RepeatBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.RepeatBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-414">取得或設定這個時間軸的重複行為。</span><span class="sxs-lookup"><span data-stu-id="0b203-414">Gets or sets the repeating behavior of this timeline.</span></span></summary>
        <value><span data-ttu-id="0b203-415">反覆項目 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />，指定時間軸應該播放的次數、指定這個時間軸作用中期間長度總和的 <see cref="T:System.TimeSpan" /> 值，或指定特殊值 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />，該值指定時間軸應該要無限期地重複。</span><span class="sxs-lookup"><span data-stu-id="0b203-415">An iteration <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> that specifies the number of times the timeline should play, a <see cref="T:System.TimeSpan" /> value that specifies the total the length of this timeline's active period, or the special value <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />, which specifies that the timeline should repeat indefinitely.</span></span> <span data-ttu-id="0b203-416">預設值是<see cref="T:System.Windows.Media.Animation.RepeatBehavior" />具有<see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />的<c>1</c>，指出時間軸播放一次。</span><span class="sxs-lookup"><span data-stu-id="0b203-416">The default value is a <see cref="T:System.Windows.Media.Animation.RepeatBehavior" /> with a <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> of <c>1</c>, which indicates that the timeline plays once.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-417">如果反覆項目<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>指定與時間軸<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>屬性設定為`true`，單次重複包括一向前反覆項目和一個回溯的反覆項目。</span><span class="sxs-lookup"><span data-stu-id="0b203-417">If an iteration <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> is specified and the timeline's <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property is set to `true`, a single repetition consists of one forward iteration and one backward iteration.</span></span> <span data-ttu-id="0b203-418">使用時間軸<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>屬性設定為 true 的反覆項目<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>為 2 會播放轉寄，則回溯，同樣地，然後轉送，然後向後一次。</span><span class="sxs-lookup"><span data-stu-id="0b203-418">A timeline with an <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> property set to true an iteration <xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A> of 2 would play forwards, then backwards, then forwards again, and then backwards again.</span></span>  
  
 <span data-ttu-id="0b203-419">而不是指定的時間軸播放的次數，您也可以指定您想要播放的時間軸的時間總長度。</span><span class="sxs-lookup"><span data-stu-id="0b203-419">Instead of specifying the number of times a timeline plays, you can also specify the total length of time you want the timeline to play.</span></span> <span data-ttu-id="0b203-420">若要重複，這個時刻表<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>值應該大於時間軸的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>。</span><span class="sxs-lookup"><span data-stu-id="0b203-420">For a timeline to repeat, this <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> value should be greater than the timeline's <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.</span></span> <span data-ttu-id="0b203-421">例如，使用時間軸<xref:System.Windows.Media.Animation.Timeline.Duration%2A>為 2 秒和<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>4 秒的播放兩次。</span><span class="sxs-lookup"><span data-stu-id="0b203-421">For example, a timeline with a <xref:System.Windows.Media.Animation.Timeline.Duration%2A> of 2 seconds and a <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> of 4 seconds will play twice.</span></span> <span data-ttu-id="0b203-422">如果<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>時間軸的少於<xref:System.Windows.Media.Animation.Timeline.Duration%2A>，時間軸的作用中期間被縮短。</span><span class="sxs-lookup"><span data-stu-id="0b203-422">If the <xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType> is less than the timeline's <xref:System.Windows.Media.Animation.Timeline.Duration%2A>, the timeline's active period is cut short.</span></span>  
  
 <span data-ttu-id="0b203-423">如需重複時間軸的詳細資訊，請參閱[動畫概觀](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="0b203-423">For more information about repeating timelines, see [Animation Overview](~/docs/framework/wpf/graphics-multimedia/animation-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_RepeatBehavior"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0b203-424">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="0b203-424">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0b203-425">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0b203-425">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  
|<span data-ttu-id="0b203-426">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="0b203-426">Metadata properties set to `true`</span></span>|<span data-ttu-id="0b203-427">無</span><span class="sxs-lookup"><span data-stu-id="0b203-427">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RepeatBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RepeatBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RepeatBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RepeatBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-428">識別 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-428">Identifies the <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline, valuetype System.Nullable`1&lt;int32&gt; desiredFrameRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="F#" Value="static member SetDesiredFrameRate : System.Windows.Media.Animation.Timeline * Nullable&lt;int&gt; -&gt; unit" Usage="System.Windows.Media.Animation.Timeline.SetDesiredFrameRate (timeline, desiredFrameRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
        <Parameter Name="desiredFrameRate" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="timeline"><span data-ttu-id="0b203-429">指派 <paramref name="desiredFrameRate" /> 至其中的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-429">The <see cref="T:System.Windows.Media.Animation.Timeline" /> to which <paramref name="desiredFrameRate" /> is assigned.</span></span></param>
        <param name="desiredFrameRate"><span data-ttu-id="0b203-430">這個時刻表每秒應產生的每秒最大畫面格數目，如果系統應控制畫面格數目則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0b203-430">The maximum number of frames this timeline should generate each second, or <see langword="null" /> if the system should control the number of frames.</span></span></param>
        <summary><span data-ttu-id="0b203-431">設定指定之 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的理想畫面播放速率。</span><span class="sxs-lookup"><span data-stu-id="0b203-431">Sets the desired frame rate of the specified <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-432">這個方法會設定<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>附加屬性。</span><span class="sxs-lookup"><span data-stu-id="0b203-432">This method sets the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> attached property.</span></span> <span data-ttu-id="0b203-433">如需詳細資訊，請參閱<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>頁面。</span><span class="sxs-lookup"><span data-stu-id="0b203-433">For more information, see the <xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A> page.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-434">取得或設定這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 相對於其父代的時間進行比率。</span><span class="sxs-lookup"><span data-stu-id="0b203-434">Gets or sets the rate, relative to its parent, at which time progresses for this <see cref="T:System.Windows.Media.Animation.Timeline" />.</span></span></summary>
        <value><span data-ttu-id="0b203-435">一個大於 0 的有限值，說明這個時刻表相對於其父代之速度的時間進行比率，而如果這是根時刻表，則為預設時刻表速度。</span><span class="sxs-lookup"><span data-stu-id="0b203-435">A finite value greater than 0 that describes the rate at which time progresses for this timeline, relative to the speed of the timeline's parent or, if this is a root timeline, the default timeline speed.</span></span> <span data-ttu-id="0b203-436">預設值為 1。</span><span class="sxs-lookup"><span data-stu-id="0b203-436">The default value is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0b203-437">時間軸<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>設定沒有作用其<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; 該時間是相對於其父代或，如果時間表是根時刻表，的目前的時間軸的時鐘已開始。</span><span class="sxs-lookup"><span data-stu-id="0b203-437">A timeline's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> setting does not have an effect on its <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; that time is relative to the timeline's parent or, if the timeline is a root timeline, the moment at which the timeline's clock was begun.</span></span>  
  
 <span data-ttu-id="0b203-438">如果<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>或是<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>都有指定，這<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>是透過自然的時間軸長度的平均比例。</span><span class="sxs-lookup"><span data-stu-id="0b203-438">If <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A> or <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A> are specified, this <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> is the average ratio over the natural length of the timeline.</span></span>  
  
<a name="dependencyPropertyInfo_SpeedRatio"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="0b203-439">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="0b203-439">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="0b203-440">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="0b203-440">Identifier field</span></span>|<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  
|<span data-ttu-id="0b203-441">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="0b203-441">Metadata properties set to `true`</span></span>|<span data-ttu-id="0b203-442">無</span><span class="sxs-lookup"><span data-stu-id="0b203-442">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="0b203-443">時間軸的<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>屬性會控制其進度，相對於其父代的速率。</span><span class="sxs-lookup"><span data-stu-id="0b203-443">A timeline's <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> property controls its rate of progress, relative to its parent.</span></span> <span data-ttu-id="0b203-444">如果時間表是根，其<xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A>相對於預設時刻表速度。</span><span class="sxs-lookup"><span data-stu-id="0b203-444">If the timeline is a root, its <xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A> is relative to the default timeline speed.</span></span> <span data-ttu-id="0b203-445">下列範例顯示具有不同的數個時間軸<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>設定。</span><span class="sxs-lookup"><span data-stu-id="0b203-445">The following example shows several timelines with different <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> settings.</span></span>  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0b203-446"><see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 小於 0 或不是有限值。</span><span class="sxs-lookup"><span data-stu-id="0b203-446"><see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> is less than 0 or is not a finite value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpeedRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpeedRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpeedRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpeedRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpeedRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0b203-447">為 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 相依性屬性識別。</span><span class="sxs-lookup"><span data-stu-id="0b203-447">Identifies for the <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>