<Type Name="Timeline" FullName="System.Windows.Media.Animation.Timeline">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="753421ddc723850b1c13bfa7756ad564b39107c1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39861997" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Timeline : System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Timeline extends System.Windows.Media.Animation.Animatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Timeline" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Timeline&#xA;Inherits Animatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timeline abstract : System::Windows::Media::Animation::Animatable" />
  <TypeSignature Language="F#" Value="type Timeline = class&#xA;    inherit Animatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>定義一段時間。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 時間軸代表一段時間。  它提供的屬性可讓您指定時間片段長度、應開始的時間、重複次數、時間在該片段中的播放速度等等。  
  
 從時間軸類別繼承的類別提供額外功能，例如，動畫和媒體播放。 以下是不同類型的特製化時間軸可用的一些範例。  
  
-   **動畫**:<xref:System.Windows.Media.Animation.AnimationTimeline>是一種會產生輸出值的時間軸。 當您關聯屬性的動畫時，動畫播放，藉此 「 動畫 」，就會更新屬性的值。 如需動畫的簡介，請參閱[動畫概觀](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)。 若要套用動畫的不同方式的相關資訊，請參閱[屬性動畫技術概觀](~/docs/framework/wpf/graphics-multimedia/property-animation-techniques-overview.md)。  
  
-   **MediaTimelines**: A<xref:System.Windows.Media.MediaTimeline>是一種控制播放的媒體檔案的時間軸。  
  
-   **ParallelTimelines**: A<xref:System.Windows.Media.Animation.ParallelTimeline>是一種分組其他時間軸的時間軸。  
  
-   **分鏡腳本**: A<xref:System.Windows.Media.Animation.Storyboard>是一種特殊型別的<xref:System.Windows.Media.Animation.ParallelTimeline>，提供物件和屬性目標的時間軸，其中包含的資訊。 如需詳細資訊<xref:System.Windows.Media.Animation.Storyboard>物件，請參閱[分鏡腳本概觀](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)。  
  
 如需使用時間軸的詳細資訊，請參閱[動畫概觀](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)。 時間軸的計時功能簡介，請參閱[計時行為概觀](~/docs/framework/wpf/graphics-multimedia/timing-behaviors-overview.md)。  
  
## <a name="data-binding-and-animating-timelines"></a>資料繫結和動畫時間軸  
 大部分的時間軸屬性可以是資料繫結或以動畫顯示;不過，由於計時系統的運作的方式，資料繫結或動畫時間軸行為不像其他資料繫結或動畫物件。 若要了解其行為，它有助於了解啟用時間軸的意義。  
  
 套用時間軸時，複本是由時間軸和及其子時刻表。 這些複本會被凍結 （變成唯讀狀態） 和<xref:System.Windows.Media.Animation.Clock>從中建立物件。 這是執行以動畫顯示目標的屬性的實際工作這些時鐘。 如果時間軸資料繫結或動畫，其目前值的快照集已建立其時鐘的時間。 即使原始時間軸可能會持續變更，其時鐘則否。  
  
 時間軸以反映資料繫結或動畫變更，必須重新產生其時鐘。 時鐘不會自動產生。 以下是幾種可套用時間軸變更的方式︰  
  
-   如果時間軸是或屬於<xref:System.Windows.Media.Animation.Storyboard>，您可以將它重新套用其分鏡腳本的使用，以反映變更<xref:System.Windows.Media.Animation.BeginStoryboard>或<xref:System.Windows.Media.Animation.Storyboard.Begin%2A>方法。 這也會一併重新啟動動畫。 在程式碼中，您可以使用<xref:System.Windows.Media.Animation.Storyboard.Seek%2A>方法將分鏡腳本回它先前的位置。  
  
-   如果您直接將屬性套用動畫<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法中，呼叫<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A>方法一次，並將它傳遞已修改的動畫。  
  
-   如果您直接在時鐘層級運作，請建立並套用一組新的時鐘，並使用它們來取代前一組產生的時鐘。  
  
 如需資料的範例繫結動畫，請參閱 <<c0> [ 主要曲線動畫範例](http://go.microsoft.com/fwlink/?LinkID=160011)。  
  
## <a name="using-a-timeline-as-a-timer"></a>使用時間軸的計時器  
 與其相關聯的事件處理常式時，才會進行時刻表的時鐘或 (如果是<xref:System.Windows.Media.Animation.AnimationClock>物件) 相關聯的屬性。 因此 （和其他人），不建議您改用<xref:System.Windows.Media.Animation.Timeline>的計時器。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.Animation.Timeline" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.Animation.Timeline" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (beginTime As Nullable(Of TimeSpan))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline beginTime" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
      </Parameters>
      <Docs>
        <param name="beginTime">這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 應該開始的時間。 如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 屬性。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 初始化 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="beginTime">這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 應該開始的時間。 如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 屬性。</param>
        <param name="duration">這個時刻表播放的時間長度，並不是計算重複次數。 如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 屬性。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />，初始化 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Timeline (Nullable&lt;TimeSpan&gt; beginTime, System.Windows.Duration duration, System.Windows.Media.Animation.RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; beginTime, valuetype System.Windows.Duration duration, valuetype System.Windows.Media.Animation.RepeatBehavior repeatBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.#ctor(System.Nullable{System.TimeSpan},System.Windows.Duration,System.Windows.Media.Animation.RepeatBehavior)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Timeline(Nullable&lt;TimeSpan&gt; beginTime, System::Windows::Duration duration, System::Windows::Media::Animation::RepeatBehavior repeatBehavior);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.Animation.Timeline : Nullable&lt;TimeSpan&gt; * System.Windows.Duration * System.Windows.Media.Animation.RepeatBehavior -&gt; System.Windows.Media.Animation.Timeline" Usage="new System.Windows.Media.Animation.Timeline (beginTime, duration, repeatBehavior)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginTime" Type="System.Nullable&lt;System.TimeSpan&gt;" />
        <Parameter Name="duration" Type="System.Windows.Duration" />
        <Parameter Name="repeatBehavior" Type="System.Windows.Media.Animation.RepeatBehavior" />
      </Parameters>
      <Docs>
        <param name="beginTime">這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 應該開始的時間。 如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 屬性。</param>
        <param name="duration">這個時刻表播放的時間長度，並不是計算重複次數。 如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 屬性。</param>
        <param name="repeatBehavior">這個時刻表的重複行為，可能為反覆 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" /> 或重複的 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Duration" />。 如需詳細資訊，請參閱 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 屬性。</param>
        <summary>使用指定的 <see cref="T:System.Windows.Media.Animation.Timeline" />、<see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />，初始化 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>  
  
 <xref:System.Windows.Media.Animation.Timeline.Duration%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatio">
      <MemberSignature Language="C#" Value="public double AccelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 AccelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property AccelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double AccelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.AccelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值指定時刻表的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 將時間從零加速至其最大速率所花費的百分比。</summary>
        <value>介於 0 到 1 (含) 的值，這個值指定時刻表的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 將時間從零加速至其最大速率所花費的百分比。 如果時間軸 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 屬性也已設定，則 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 總和必須小於或等於 1。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>屬性建立動畫的啟動速度，並隨著時間過去再加速。 <xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>屬性可用於建立簡化的效果，或進行看起來更自然的移動。 使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性一起以建立動畫的開始速度緩慢，加速，並完成前一次然後慢。  
  
<a name="dependencyPropertyInfo_AccelerationRatio"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 小於 0 或大於 1。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 的總和超過 1。</exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="AccelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AccelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AccelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AccelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AccelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AccelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AccelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllocateClock">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Animation.Clock AllocateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Animation.Clock AllocateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.AllocateClock" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function AllocateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Animation::Clock ^ AllocateClock();" />
      <MemberSignature Language="F#" Value="abstract member AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock&#xA;override this.AllocateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.AllocateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</summary>
        <returns>這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的時鐘。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Windows.Media.Animation.Timeline.CreateClock%2A>方法且不應由您的程式碼直接呼叫。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>實作器<see cref="T:System.Windows.Media.Animation.Timeline" />具有對應的自訂時鐘應該與類別一起使用時應該覆寫這個方法。覆寫的方法應該建立並傳回繼承自類別的新執行個體<see cref="T:System.Windows.Media.Animation.Clock" />。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutoReverse">
      <MemberSignature Language="C#" Value="public bool AutoReverse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoReverse" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoReverse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoReverse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoReverse : bool with get, set" Usage="System.Windows.Media.Animation.Timeline.AutoReverse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，其中該值指出時間軸是否會在完成向前反覆項目後反向播放。</summary>
        <value>如果時刻表在每個反覆項目結尾以反向順序播放則為 <see langword="true" />，否則為 <see langword="false" />。 預設值是 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>屬性設定為`true`，時間軸播放兩次指定的時間長度其<xref:System.Windows.Media.Animation.Timeline.Duration%2A>屬性。  
  
### <a name="autoreverse-and-repetitions"></a>AutoReverse 和重複項目  
 當時間軸<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>屬性設定為`true`及其<xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A>屬性造成動畫重複，每個向前反覆項目後面是為了與舊版的反覆項目。 這可讓重複一次。 比方說，使用時間軸<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>的值`true`與 反覆項目<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>為 2 會播放轉送一次，則回溯，同樣地，然後轉送，然後向後一次。  
  
<a name="dependencyPropertyInfo_AutoReverse"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.Animation.Timeline.AutoReverseProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      </Docs>
    </Member>
    <Member MemberName="AutoReverseProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoReverseProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoReverseProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoReverseProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoReverseProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoReverseProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.AutoReverseProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; BeginTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; BeginTime" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberSignature Language="VB.NET" Value="Public Property BeginTime As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;TimeSpan&gt; BeginTime { Nullable&lt;TimeSpan&gt; get(); void set(Nullable&lt;TimeSpan&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.BeginTime : Nullable&lt;TimeSpan&gt; with get, set" Usage="System.Windows.Media.Animation.Timeline.BeginTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 應開始的時間。</summary>
        <value>這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 應開始的時間，相對於其父代的 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />。 如果這個時間表是根時間表，則時間相對於其互動開始時間 (觸發時間表的時間)。 這個值可能是正值、負值或 <see langword="null" />，其中 <see langword="null" /> 值表示時刻表永遠不會播放。 預設值是零。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>屬性可用於建立序列中的播放的時間軸： 藉由增加<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>共用相同的父系的連續時間軸，您可以錯開他們播放的時間。  
  
## <a name="negative-values"></a>負數值  
 負<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>值會導致<xref:System.Windows.Media.Animation.Timeline>行為就像是在過去某個時間點啟動。 例如，<xref:System.Windows.Media.Animation.Timeline>與<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>的負 2.5 秒和<xref:System.Windows.Media.Animation.Timeline.Duration%2A>5 秒將會出現一半完成啟動時。  
  
## <a name="begintime-and-speedratio"></a>BeginTime 和 SpeedRatio  
 所描述的時間<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>屬性為單位的時間軸的父代的時間。 比方說，使用時間軸<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>的父代具有的 5 <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2 的實際開始之後 2.5 秒。  
  
 時間軸的自己<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>設定不會影響其<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>。 比方說，使用時間軸<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>設為 5 秒， <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 2 和父時間軸，包含<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>1 啟動 5 秒之後，不 2.5。  
  
<a name="dependencyPropertyInfo_BeginTime"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.Animation.Timeline.BeginTimeProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
<a name="xamlAttributeUsage_BeginTime"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
 \<*物件* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-] [*天*。]*小時*:*分鐘*:*秒*[。*fractionalSeconds*]"/ >  
  
 \-或-  
  
 \<*物件* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-] [*天*。]*小時*:*分鐘*"/ >  
  
 \-或-  
  
 \<*object* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="[-]*days*"/>  
  
 \-或-  
  
 \<*物件* <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>="{[X:null 標記延伸](~/docs/framework/xaml-services/x-null-markup-extension.md)}"/ >  
  
<a name="xamlValues_BeginTime"></a>   
## <a name="xaml-values"></a>XAML 值  
 方括號中的項目 (`[`和`]`) 是選擇性的。  
  
 *天*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 值大於或等於 0，描述由這個合併的天數開始時間。  
  
 *時數*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 表示由這個合併的時數的值介於 0 到 23 之間開始時間。  
  
 *分鐘的時間*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 表示由這個合併的分鐘數的值介於 0 到 59 之間開始時間。  
  
 *秒數*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 表示由這個合併的秒數的值介於 0 到 59 之間開始時間。  
  
 *fractionalSeconds*  
 <xref:System.Int32?displayProperty=nameWithType>  
  
 值包含 1 到 7 位數代表小數秒數。  
  
 完整<xref:System.TimeSpan>語法，請參閱 < 備註 > 一節的<xref:System.TimeSpan.Parse%2A>頁面。  
  
   
  
## Examples  
 時間軸的<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>屬性會決定開始時間軸的作用中期間。 如果時間表具有父時間軸<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>屬性會決定花費時間軸在其父代啟動之後開始的時間。 如果時間表是根時刻表 ( <xref:System.Windows.Media.Animation.Storyboard>，例如)，則<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>屬性會決定花多少時間的時間軸開始播放之後觸發。  
  
 下列範例顯示具有不同的數個不同時間軸<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>設定。  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_BeginTimeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/BeginTimeExample.xaml#_graphicsmm_begintimeexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="BeginTimeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BeginTimeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BeginTimeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BeginTimeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BeginTimeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BeginTimeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.BeginTimeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的可修改複製品，深層複製這個物件的值。</summary>
        <returns>目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="true." />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性仍為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。 為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (但可能無法再解析)，但不會複製動畫或它們目前的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Timeline CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Timeline CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Timeline" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Timeline ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Media.Animation.Timeline" Usage="timeline.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Timeline</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 物件的可修改複製品，製作這個物件目前值的深層複本。</summary>
        <returns>目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="false" />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性仍為 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。 為了方便起見，這個方法會遮蔽的強型別實作繼承的版本。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。  
  
 不會複製資源參考、資料繫結和動畫，但是會複製其目前值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completed">
      <MemberSignature Language="C#" Value="public event EventHandler Completed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.Completed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Completed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Completed;" />
      <MemberSignature Language="F#" Value="member this.Completed : EventHandler " Usage="member this.Completed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當這個時刻表完全結束播放時會發生：它不會再進入其作用期。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果這個時間表是根時刻表的時間軸樹狀結構，它已完成播放 （其中包含重複項目） 作用期結束後其所有子系已達到其作用期間的結尾。 如果這個時間表是子時間軸，則會視為完全結束播放時的時間軸樹狀目錄中其所屬達到根時刻表完成作用期和其所有子時刻表結束播放。  
  
 停止時間軸不會觸發已完成的事件，但略過它到其填滿期間。  
  
 <xref:System.Object>的參數<xref:System.EventHandler>事件處理常式是時間軸的<xref:System.Windows.Media.Animation.Clock>。  
  
 雖然這個事件處理常式會顯示與時間軸相關聯，但它實際上會向<xref:System.Windows.Media.Animation.Clock>為這個時刻表建立。  如需詳細資訊，請參閱 <<c0> [ 計時事件概觀](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。  
  
   
  
## Examples  
 在下列範例中，兩個<xref:System.Windows.Media.Animation.Storyboard>物件用來建立動畫之間的轉換儲存使用的兩個映像<xref:System.Windows.Media.ImageSource>物件，並使用顯示<xref:System.Windows.Controls.Image>控制項。 一個分鏡腳本壓縮影像控制項，直到消失為止。 之後它完成時，舊<xref:System.Windows.Media.ImageSource>交換與其他<xref:System.Windows.Media.ImageSource>，並展開影像的第二個分鏡腳本控制，直到完整大小一次。  
  
 [!code-xaml[timingbehaviors_snip#TimelineCompletedExampleMarkupUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/TimelineCompletedExample.xaml#timelinecompletedexamplemarkupusingwholepage)]  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立 <see cref="T:System.Windows.Media.Animation.Timeline" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock();" />
      <MemberSignature Language="F#" Value="member this.CreateClock : unit -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建立可控制的新 <see cref="T:System.Windows.Media.Animation.Clock" />。 如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 具有子系，將會使用 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建立時鐘的樹狀結構作為根。</summary>
        <returns>從此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建構可控制的新 <see cref="T:System.Windows.Media.Animation.Clock" />。 如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 是包含子時間表的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />，將會使用從此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建立的可控制 <see cref="T:System.Windows.Media.Animation.Clock" /> 來建立 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件的樹狀結構作為根。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 雖然這<xref:System.Windows.Media.Animation.Timeline>可能是一或多個節點的子<xref:System.Windows.Media.Animation.TimelineGroup>物件，則會忽略這項資訊： 這個方法會將目前<xref:System.Windows.Media.Animation.Timeline>為根<xref:System.Windows.Media.Animation.Timeline>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock CreateClock (bool hasControllableRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Clock CreateClock(bool hasControllableRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateClock (hasControllableRoot As Boolean) As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Clock ^ CreateClock(bool hasControllableRoot);" />
      <MemberSignature Language="F#" Value="member this.CreateClock : bool -&gt; System.Windows.Media.Animation.Clock" Usage="timeline.CreateClock hasControllableRoot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hasControllableRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="hasControllableRoot">如果傳回的根 <see cref="T:System.Windows.Media.Animation.Clock" /> 應從其 <see cref="T:System.Windows.Media.Animation.ClockController" /> 屬性傳回 <see cref="P:System.Windows.Media.Animation.Clock.Controller" />，以便能以互動方式控制 <see cref="T:System.Windows.Media.Animation.Clock" /> 樹狀目錄，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>從這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立新的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 並指定新的 <see cref="T:System.Windows.Media.Animation.Clock" /> 是否是可控制的。 如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 具有子系，將會使用 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建立時鐘的樹狀結構作為根。</summary>
        <returns>從這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建構的新 <see cref="T:System.Windows.Media.Animation.Timeline" />。 如果此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 是包含子時間表的 <see cref="T:System.Windows.Media.Animation.TimelineGroup" />，將會使用從此 <see cref="T:System.Windows.Media.Animation.Timeline" /> 建立的可控制 <see cref="T:System.Windows.Media.Animation.Clock" /> 來建立 <see cref="T:System.Windows.Media.Animation.Clock" /> 物件的樹狀結構作為根。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 雖然這<xref:System.Windows.Media.Animation.Timeline>可能是一或多個節點的子<xref:System.Windows.Media.Animation.TimelineGroup>物件，則會忽略這項資訊： 這個方法會將目前<xref:System.Windows.Media.Animation.Timeline>為根<xref:System.Windows.Media.Animation.Timeline>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentGlobalSpeedInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentGlobalSpeedInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentGlobalSpeedInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentGlobalSpeedInvalidated : EventHandler " Usage="member this.CurrentGlobalSpeedInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於時刻表時鐘的時間進行速率變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在下列情況下的時間軸的時鐘變更目前的整體速度：  
  
-   時鐘變更方向，因為其時刻表<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>設定。  
  
-   時鐘加速或減速，因為其時刻表<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>或<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性設定。  
  
-   時鐘會暫停或繼續。  
  
-   時鐘會變成非作用中，或重新啟動。  
  
-   <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A>的其中一項時鐘的父代變更。  
  
 <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件很實用追蹤時刻表的時鐘會變成暫停時，您的事件處理常式中，請使用您的腳本<xref:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed%2A>方法或時鐘核取<xref:System.Windows.Media.Animation.Clock.IsPaused%2A>屬性來判斷是否要暫停其時鐘; 比較這對若要判斷是否已變更先前快取的值。  
  
 <xref:System.Object>的參數<xref:System.EventHandler>事件處理常式是時間軸的<xref:System.Windows.Media.Animation.Clock>。  
  
 雖然這個事件處理常式會顯示與時間軸相關聯，但它實際上會向<xref:System.Windows.Media.Animation.Clock>為這個時刻表建立。  如需詳細資訊，請參閱 <<c0> [ 計時事件概觀](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。  
  
   
  
## Examples  
 下列範例示範如何註冊<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentGlobalSpeedInvalidatedExample.cs#timelinecurrentglobalspeedinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentGlobalSpeedInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrentglobalspeedinvalidatedexample.vb#timelinecurrentglobalspeedinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="CurrentStateInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentStateInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentStateInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentStateInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentStateInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateInvalidated : EventHandler " Usage="member this.CurrentStateInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於時刻表之 <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 屬性更新時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>當您想要在時間軸時收到通知的事件<xref:System.Windows.Media.Animation.Clock>啟動、 停止或填滿。  
  
 暫停<xref:System.Windows.Media.Animation.Clock>不會變更其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>。 若要收到時鐘會變成暫停時，使用<xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated>事件。  
  
 雖然就會發生此事件時<xref:System.Windows.Media.Animation.ClockState>會變成無效，也不一定表示<xref:System.Windows.Media.Animation.ClockState>變更： <xref:System.Windows.Media.Animation.Clock> ，從切換<xref:System.Windows.Media.Animation.ClockState.Active>來<xref:System.Windows.Media.Animation.ClockState.Filling>，然後再回到<xref:System.Windows.Media.Animation.ClockState.Active>在相同刻度將會引發此事件引發，但其<xref:System.Windows.Media.Animation.Clock.CurrentState%2A>屬性實際上並不會變更。  
  
 <xref:System.Object>的參數<xref:System.EventHandler>事件處理常式是<xref:System.Windows.Media.Animation.Clock>所建立的這個時間軸。  
  
 雖然這個事件處理常式會顯示與時間軸相關聯，但它實際上會向<xref:System.Windows.Media.Animation.Clock>為這個時刻表建立。  如需詳細資訊，請參閱 <<c0> [ 計時事件概觀](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.Clock" />
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentState" />
        <altmember cref="E:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated" />
      </Docs>
    </Member>
    <Member MemberName="CurrentTimeInvalidated">
      <MemberSignature Language="C#" Value="public event EventHandler CurrentTimeInvalidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CurrentTimeInvalidated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CurrentTimeInvalidated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CurrentTimeInvalidated;" />
      <MemberSignature Language="F#" Value="member this.CurrentTimeInvalidated : EventHandler " Usage="member this.CurrentTimeInvalidated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於時刻表之 <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> 的 <see cref="T:System.Windows.Media.Animation.Clock" /> 屬性更新時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated>當您想要的事件時收到通知<xref:System.Windows.Media.Animation.Clock.CurrentTime%2A>時間表之<xref:System.Windows.Media.Animation.Clock>會更新。  
  
 <xref:System.Object>的參數<xref:System.EventHandler>事件處理常式是時間軸的<xref:System.Windows.Media.Animation.Clock>。  
  
 雖然這個事件處理常式會顯示與時間軸相關聯，但它實際上會向<xref:System.Windows.Media.Animation.Clock>為這個時刻表建立。  如需詳細資訊，請參閱 <<c0> [ 計時事件概觀](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。  
  
   
  
## Examples  
 下列範例示範如何註冊<xref:System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated>事件。  
  
 [!code-csharp[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/TimelineCurrentTimeInvalidatedExample.cs#timelinecurrenttimeinvalidatedexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#TimelineCurrentTimeInvalidatedExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/timelinecurrenttimeinvalidatedexample.vb#timelinecurrenttimeinvalidatedexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatio">
      <MemberSignature Language="C#" Value="public double DecelerationRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DecelerationRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property DecelerationRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DecelerationRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.DecelerationRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指定時間軸的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 在從其最大速率減速至零所經過時間的百分比。</summary>
        <value>介於 0 和 1 (含) 之間的值，指定時間軸的 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 在從其最大速率減速至零所經過時間的百分比。 如果時間軸 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 屬性也已設定，則 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 總和必須小於或等於 1。 預設值為 0。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性建立動畫的速度很慢相應減少之前停止。 <xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性可用於建立簡化的效果，或進行看起來更自然的移動。 使用<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>和<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>屬性一起以建立動畫的開始速度緩慢，加速，並完成前一次然後慢。  
  
<a name="dependencyPropertyInfo_DecelerationRatio"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 小於 0 或大於 1。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" /> 和 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 的總和超過 1。</exception>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AccelerationRatio" />
      </Docs>
    </Member>
    <Member MemberName="DecelerationRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DecelerationRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DecelerationRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DecelerationRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DecelerationRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DecelerationRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DecelerationRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>為 <see cref="P:System.Windows.Media.Animation.Timeline.DecelerationRatio" /> 相依性屬性識別。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRate">
      <MemberSignature Language="C#" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="ILAsm" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      <MemberSignature Language="VB.NET" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberSignature Language="F#" Value="see GetDesiredFrameRate, and SetDesiredFrameRate" Usage="see GetDesiredFrameRate, and SetDesiredFrameRate" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredFrameRateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DesiredFrameRateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DesiredFrameRateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DesiredFrameRateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DesiredFrameRateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DesiredFrameRateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" /> 附加屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration Duration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration Duration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Duration" />
      <MemberSignature Language="VB.NET" Value="Public Property Duration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration Duration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.Duration : System.Windows.Duration with get, set" Usage="System.Windows.Media.Animation.Timeline.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個時間表播放的時間長度 (不計算重複次數)。</summary>
        <value>時刻表的簡單持續期間：這個時刻表完成單一向前反覆項目所花費的時間量。 預設值是 <see cref="P:System.Windows.Duration.Automatic" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 時間軸的簡單持續時間會構成的時間總計的播放時間，包括重複項目與單一向前反覆項目。  
  
## <a name="default-duration-behavior"></a>預設持續時間的行為  
 行為<xref:System.Windows.Media.Animation.Timeline.Duration%2A>結構，其值為<xref:System.Windows.Duration.Automatic%2A>取決於時間軸類型：  
  
|**時間軸**|**行為**|  
|-|-|  
|<xref:System.Windows.Media.Animation.Timeline>|未定 (<xref:System.Windows.Media.Animation.Timeline>是抽象)|  
|<xref:System.Windows.Media.Animation.ParallelTimeline>,<br /><br /> <xref:System.Windows.Media.Animation.Storyboard>,<br /><br /> <xref:System.Windows.Media.Animation.TimelineGroup>|展開以容納子時間軸|  
|\<*型別*> 動畫 （稱為 「 From/To/By"或 「 基本 」 動畫）|1 秒|  
|\<*型別*> AnimationUsingKeyFrames （稱為主要畫面格動畫）|所有的主要畫面格的加總<xref:System.Windows.Media.Animation.KeyTime>值|  
  
<a name="dependencyPropertyInfo_Duration"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.Animation.Timeline.DurationProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
   
  
## Examples  
 <xref:System.Windows.Media.Animation.ParallelTimeline> 並<xref:System.Windows.Media.Animation.Storyboard>種<xref:System.Windows.Media.Animation.TimelineGroup>物件。 持續時間<xref:System.Windows.Media.Animation.TimelineGroup>取決於及其子時刻表的持續時間。 例如，<xref:System.Windows.Media.Animation.Storyboard>以下會執行六秒 （持續時間的 6 秒），因為這是當最後一個子時間軸 (<xref:System.Windows.Media.Animation.DoubleAnimation>) 結束。  
  
> [!NOTE]
>  注意： 從下列的範例中，為說明之用僅會提供省略的程式碼。  
  
 [xaml]  
  
```  
...  
  <Storyboard>  
    <DoubleAnimation Duration="0:0:2" …/>  
    <DoubleAnimation Duration="0:0:4" BeginTime="0:0:2" …/>  
  </Storyboard>   
...  
```  
  
 範例\<*型別*> 包含動畫<xref:System.Windows.Media.Animation.DoubleAnimation>， <xref:System.Windows.Media.Animation.PointAnimation>，<xref:System.Windows.Media.Animation.ColorAnimation>等等。如果沒有<xref:System.Windows.Media.Animation.Timeline.Duration%2A>指定這些類型的動畫，它們會執行一秒。  
  
 [xaml]  
  
```  
...  
  <!-- With no Duration specified, this animation will run for   
       one second -->  
  <DoubleAnimation .../>  
...  
```  
  
 範例\<*型別*> AnimationUsingKeyFrames 包括<xref:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames>，<xref:System.Windows.Media.Animation.PointAnimationUsingKeyFrames>等等。如果沒有<xref:System.Windows.Media.Animation.Timeline.Duration%2A>指定這種動畫會執行直到完成所有的主要畫面格。  
  
 [xaml]  
  
```  
...  
  <Storyboard>  
  
    <!-- This key frame animation will end at 4.5 seconds  
         Because that is when its last KeyFrame KeyTime ends. -->  
    <DoubleAnimationUsingKeyFrames ...>  
      <LinearDoubleKeyFrame ... KeyTime="0:0:3" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:3.5" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4" />  
      <DiscreteDoubleKeyFrame ... KeyTime="0:0:4.5" />  
    </DoubleAnimationUsingKeyFrames>  
  </Storyboard>   
...  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="DurationProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DurationProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DurationProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DurationProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DurationProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DurationProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.DurationProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.Timeline.Duration" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.FillBehavior FillBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.FillBehavior FillBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property FillBehavior As FillBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::FillBehavior FillBehavior { System::Windows::Media::Animation::FillBehavior get(); void set(System::Windows::Media::Animation::FillBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.FillBehavior : System.Windows.Media.Animation.FillBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.FillBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.FillBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指定 <see cref="T:System.Windows.Media.Animation.Timeline" /> 在其作用期結束之後的運作方式。</summary>
        <value>一個值，指定時間軸在作用期結束後，但它的父系是在作用或填滿期間內時的行為。 預設值是 <see cref="F:System.Windows.Media.Animation.FillBehavior.HoldEnd" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定動畫<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>屬性設<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>當您想保留其值，其作用期結束後的動畫。 已達到其使用中週期結尾的動畫具有<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>設定<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>要在其填滿期間內。 當您不想保留之後其值的動畫到達其使用中週期結尾時，請將其  
  
 <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> 屬性為<xref:System.Windows.Media.Animation.FillBehavior.Stop>。  
  
 因為其填滿期間中的動畫會繼續覆寫其目標屬性的值，嘗試將透過其他方式的目標屬性的值設定可能會不有任何作用。 如需示範如何設定屬性值之後已顯示動畫, 的範例，請參閱[如何： 設定屬性之後以動畫顯示使用分鏡腳本](~/docs/framework/wpf/graphics-multimedia/how-to-set-a-property-after-animating-it-with-a-storyboard.md)。  
  
 子時間軸停止播放，並填入其父時間軸停止; 時如果您想要填滿子時間軸，請確定有其父時間軸<xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A>的<xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>。  
  
<a name="dependencyPropertyInfo_FillBehavior"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.Animation.Timeline.FillBehaviorProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FillBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FillBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FillBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FillBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FillBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.FillBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="timeline.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <see langword="true" /> 會檢查是否可以凍結這個執行個體，而 <see langword="false" /> 則會凍結這個執行個體。</param>
        <summary>使這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 成為不可修改，或決定它是否可以變成不可修改。</summary>
        <returns>當 <paramref name="isChecking" /> 為 true 時，如果這個執行個體可以變成唯讀狀態，則這個方法會傳回 <see langword="true" />，否則為 <see langword="false" />。  
  
當 <paramref name="isChecking" /> 為 false 時，如果這個執行個體現在已經是唯讀狀態時，則這個方法會傳回 <see langword="true" />，如果這個執行個體不可以成為唯讀狀態，則會傳回 <see langword="false" />，而副作用是會開始變更這個物件的凍結狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請勿呼叫這個方法，直接 （只是呼叫基底實作中）。 這個方法會在內部呼叫<xref:System.Windows.Freezable.Freeze%2A>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="T:System.Windows.Media.Animation.Timeline" /> 類別包含不會儲存使用相依性屬性的資料時，實作者必須覆寫這個方法。一般實作會呼叫基底，然後呼叫靜態<see cref="M:System.Windows.Freezable.Freeze" />上所有的方法<see cref="T:System.Windows.Freezable" />類型的屬性，其中包含類別，傳回<see langword="true" />只有當所有屬性凍結 （或可能有已凍結，在傳遞的情況下透過<see langword="false" />值<paramref name="isChecking" />)。</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">要複製的 <see cref="T:System.Windows.Media.Animation.Timeline" /> 執行個體。</param>
        <summary>將這個執行個體製作為所指定 <see cref="T:System.Windows.Media.Animation.Timeline" /> 物件的複製品。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (但可能無法再解析)，但不會複製動畫或它們目前的值。 請注意，如果這些屬性包含資源參考或資料繫結<xref:System.Windows.Freezable.GetAsFrozen%2A>將會失敗時嘗試凍結物件，而且將會擲回<xref:System.InvalidOperationException>。  
  
 這個方法會呼叫<xref:System.Windows.Freezable.GetAsFrozen%2A>方法並不會呼叫直接從程式碼中，除了呼叫基底實作，同時覆寫此方法時。 若要建立目前物件的凍結的複本，請呼叫<xref:System.Windows.Freezable.GetAsFrozen%2A>而不是直接呼叫這個方法。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="timeline.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">要複製和凍結的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
        <summary>將這個執行個體製作為指定之 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的凍結複本。 不會複製資源參考、資料繫結和動畫，但是會複製其目前值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>方法並不會呼叫直接從程式碼中，除了呼叫基底實作，同時覆寫此方法時。 若要建立目前物件的凍結的複本，請呼叫<xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A>而不是直接呼叫這個方法。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static Nullable&lt;int&gt; GetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;int32&gt; GetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Nullable&lt;int&gt; GetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline);" />
      <MemberSignature Language="F#" Value="static member GetDesiredFrameRate : System.Windows.Media.Animation.Timeline -&gt; Nullable&lt;int&gt;" Usage="System.Windows.Media.Animation.Timeline.GetDesiredFrameRate timeline" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
      </Parameters>
      <Docs>
        <param name="timeline">要從其中擷取理想畫面播放速率的時刻表。</param>
        <summary>取得指定之 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的理想畫面播放速率。</summary>
        <returns>此時刻表理想的畫面播放速率。 預設值是 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會提供可讀取<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>附加屬性。 如需詳細資訊，請參閱<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>頁面。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDuration">
      <MemberSignature Language="C#" Value="protected internal System.Windows.Duration GetNaturalDuration (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance valuetype System.Windows.Duration GetNaturalDuration(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::Duration GetNaturalDuration(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="member this.GetNaturalDuration : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDuration clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
        <summary>傳回這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的單一反覆項目的長度。</summary>
        <returns>這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的單一反覆項目的長度，如果自然持續期間未知則為 <see cref="P:System.Windows.Duration.Automatic" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法應該只呼叫何時<xref:System.Windows.Media.Animation.Timeline.Duration%2A>屬性設定為<xref:System.Windows.Duration.Automatic%2A>。 如果<xref:System.Windows.Media.Animation.Timeline.Duration%2A>已<xref:System.Windows.Duration.Automatic%2A>，自然持續時間取決於該特定類別的實作<xref:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore%2A>。  
  
 如果<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>會傳回<xref:System.Windows.Duration.Automatic%2A>，則表示自然持續期間未知，這表示自然持續期間<xref:System.Windows.Duration.Forever%2A>。 就是串流處理媒體如此。  
  
 請注意，這個時刻表的時鐘不是已建立並傳遞此方法是可行的但會提供不可靠的結果。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.Duration" />
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="GetNaturalDurationCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Duration GetNaturalDurationCore (System.Windows.Media.Animation.Clock clock);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Duration GetNaturalDurationCore(class System.Windows.Media.Animation.Clock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Duration GetNaturalDurationCore(System::Windows::Media::Animation::Clock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration&#xA;override this.GetNaturalDurationCore : System.Windows.Media.Animation.Clock -&gt; System.Windows.Duration" Usage="timeline.GetNaturalDurationCore clock" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clock" Type="System.Windows.Media.Animation.Clock" />
      </Parameters>
      <Docs>
        <param name="clock">為這個 <see cref="T:System.Windows.Media.Animation.Clock" /> 建立的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
        <summary>傳回這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的單一反覆項目的長度。 這個方法會實作 <see cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />。</summary>
        <returns>這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的單一反覆項目的長度，如果自然持續期間未知則為 <see cref="P:System.Windows.Duration.Automatic" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法提供實作<xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>且不應該直接從程式碼呼叫。 請改用 <xref:System.Windows.Media.Animation.Timeline.GetNaturalDuration%2A>。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>應該實作這個方法，由時間軸類別需要提供自訂自然<see cref="T:System.Windows.Duration" />時<see cref="P:System.Windows.Media.Animation.Timeline.Duration" />屬性設定為<see cref="P:System.Windows.Duration.Automatic" />。如果作者無法判斷的自然持續期間，此方法應傳回<see cref="P:System.Windows.Duration.Automatic" />。</para>
        </block>
        <altmember cref="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Media.Animation.Timeline.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的名稱。</summary>
        <value>這個時刻表的名稱。 預設值是 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.Timeline.Name" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveRequested">
      <MemberSignature Language="C#" Value="public event EventHandler RemoveRequested;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RemoveRequested" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Media.Animation.Timeline.RemoveRequested" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RemoveRequested As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RemoveRequested;" />
      <MemberSignature Language="F#" Value="member this.RemoveRequested : EventHandler " Usage="member this.RemoveRequested : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>為這個時刻表建立時鐘或移除它的其中一個父時刻表時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會引發這個事件，藉由套用<xref:System.Windows.Media.Animation.RemoveStoryboard>使用分鏡腳本的分鏡腳本動作<xref:System.Windows.Media.Animation.Storyboard.Remove%2A>方法，或 （當直接使用時鐘） 呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A?displayProperty=nameWithType>方法。  
  
 雖然這個事件處理常式會顯示與時間軸相關聯，但它實際上會向<xref:System.Windows.Media.Animation.Clock>為這個時刻表建立。  如需詳細資訊，請參閱 <<c0> [ 計時事件概觀](~/docs/framework/wpf/graphics-multimedia/timing-events-overview.md)。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.RemoveStoryboard" />
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Remove" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehavior">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.RepeatBehavior RepeatBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.Animation.RepeatBehavior RepeatBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property RepeatBehavior As RepeatBehavior" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::RepeatBehavior RepeatBehavior { System::Windows::Media::Animation::RepeatBehavior get(); void set(System::Windows::Media::Animation::RepeatBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatBehavior : System.Windows.Media.Animation.RepeatBehavior with get, set" Usage="System.Windows.Media.Animation.Timeline.RepeatBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.RepeatBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個時間軸的重複行為。</summary>
        <value>指定時刻表應播放次數的反覆 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />、指定這個時刻表之作用期總長度的 <see cref="T:System.TimeSpan" /> 值，或是指定時刻表應無限次重複的特殊值 <see cref="P:System.Windows.Media.Animation.RepeatBehavior.Forever" />。 預設值是<see cref="T:System.Windows.Media.Animation.RepeatBehavior" />具有<see cref="P:System.Windows.Media.Animation.RepeatBehavior.Count" />的<c>1</c>，指出時間軸播放一次。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果反覆項目<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>指定與時間軸<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>屬性設定為`true`，單次重複包括一向前反覆項目和一個回溯的反覆項目。 使用時間軸<xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A>屬性設定為 true 的反覆項目<xref:System.Windows.Media.Animation.RepeatBehavior.Count%2A>為 2 會播放轉寄，則回溯，同樣地，然後轉送，然後向後一次。  
  
 而不是指定的時間軸播放的次數，您也可以指定您想要播放的時間軸的時間總長度。 若要重複，這個時刻表<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>值應該大於時間軸的<xref:System.Windows.Media.Animation.Timeline.Duration%2A>。 例如，使用時間軸<xref:System.Windows.Media.Animation.Timeline.Duration%2A>為 2 秒和<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>4 秒的播放兩次。 如果<xref:System.Windows.Media.Animation.RepeatBehavior.Duration%2A?displayProperty=nameWithType>時間軸的少於<xref:System.Windows.Media.Animation.Timeline.Duration%2A>，時間軸的作用中期間被縮短。  
  
 如需重複時間軸的詳細資訊，請參閱[動畫概觀](~/docs/framework/wpf/graphics-multimedia/animation-overview.md)。  
  
<a name="dependencyPropertyInfo_RepeatBehavior"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.AutoReverse" />
      </Docs>
    </Member>
    <Member MemberName="RepeatBehaviorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RepeatBehaviorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RepeatBehaviorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RepeatBehaviorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RepeatBehaviorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RepeatBehaviorProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.Timeline.RepeatBehavior" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDesiredFrameRate">
      <MemberSignature Language="C#" Value="public static void SetDesiredFrameRate (System.Windows.Media.Animation.Timeline timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetDesiredFrameRate(class System.Windows.Media.Animation.Timeline timeline, valuetype System.Nullable`1&lt;int32&gt; desiredFrameRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetDesiredFrameRate(System::Windows::Media::Animation::Timeline ^ timeline, Nullable&lt;int&gt; desiredFrameRate);" />
      <MemberSignature Language="F#" Value="static member SetDesiredFrameRate : System.Windows.Media.Animation.Timeline * Nullable&lt;int&gt; -&gt; unit" Usage="System.Windows.Media.Animation.Timeline.SetDesiredFrameRate (timeline, desiredFrameRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeline" Type="System.Windows.Media.Animation.Timeline" />
        <Parameter Name="desiredFrameRate" Type="System.Nullable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="timeline">獲指派 <c>desiredFrameRate</c> 的 <see cref="T:System.Windows.Media.Animation.Timeline" />。</param>
        <param name="desiredFrameRate">這個時刻表每秒應產生的每秒最大畫面格數目，如果系統應控制畫面格數目則為 <see langword="null" />。</param>
        <summary>設定指定之 <see cref="T:System.Windows.Media.Animation.Timeline" /> 的理想畫面播放速率。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會設定<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>附加屬性。 如需詳細資訊，請參閱<xref:System.Windows.Media.Animation.Timeline.DesiredFrameRate%2A>頁面。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.DesiredFrameRate" />
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.Timeline.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個 <see cref="T:System.Windows.Media.Animation.Timeline" /> 相對於其父代的時間進行比率。</summary>
        <value>一個大於 0 的有限值，說明這個時刻表相對於其父代之速度的時間進行比率，而如果這是根時刻表，則為預設時刻表速度。 預設值為 1。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 時間軸<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>設定沒有作用其<xref:System.Windows.Media.Animation.Timeline.BeginTime%2A>; 該時間是相對於其父代或，如果時間表是根時刻表，的目前的時間軸的時鐘已開始。  
  
 如果<xref:System.Windows.Media.Animation.Timeline.AccelerationRatio%2A>或是<xref:System.Windows.Media.Animation.Timeline.DecelerationRatio%2A>都有指定，這<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>是透過自然的時間軸長度的平均比例。  
  
<a name="dependencyPropertyInfo_SpeedRatio"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Media.Animation.Timeline.SpeedRatioProperty>|  
|若要設定的中繼資料屬性 `true`|無|  
  
   
  
## Examples  
 時間軸的<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>屬性會控制其進度，相對於其父代的速率。 如果時間表是根，其<xref:System.Windows.Media.MediaPlayer.SpeedRatio%2A>相對於預設時刻表速度。 下列範例顯示具有不同的數個時間軸<xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>設定。  
  
 [!code-xaml[timingbehaviors_snip#_graphicsmm_SpeedExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_snip/CSharp/SpeedExample.xaml#_graphicsmm_speedexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 小於 0 或不是有限值。</exception>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatioProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SpeedRatioProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SpeedRatioProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SpeedRatioProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SpeedRatioProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SpeedRatioProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.Timeline.SpeedRatioProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>為 <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> 相依性屬性識別。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>