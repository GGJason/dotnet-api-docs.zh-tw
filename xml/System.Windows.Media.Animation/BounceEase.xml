<Type Name="BounceEase" FullName="System.Windows.Media.Animation.BounceEase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="feeb4e8547db2f07cf6493f148ad98e35639a782" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39959289" /></Metadata><TypeSignature Language="C#" Value="public class BounceEase : System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BounceEase extends System.Windows.Media.Animation.EasingFunctionBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.BounceEase" />
  <TypeSignature Language="VB.NET" Value="Public Class BounceEase&#xA;Inherits EasingFunctionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class BounceEase : System::Windows::Media::Animation::EasingFunctionBase" />
  <TypeSignature Language="F#" Value="type BounceEase = class&#xA;    inherit EasingFunctionBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.EasingFunctionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示緩動函式，這個函式會建立動畫彈跳效果。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下圖示範<xref:System.Windows.Media.Animation.BounceEase>使用不同的值<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>，其中*f*(*t*) 代表動畫進度和*t*代表時間。  
  
 ![BounceEase EasingMode 圖形。] (~/add/media/bounceease-graph.png "BounceEase EasingMode 圖形。")  
  
 您可以指定使用的多少彈跳發生<xref:System.Windows.Media.Animation.BounceEase.Bounces%2A>屬性，並指定彈性 （彈性程度彈跳是） 使用<xref:System.Windows.Media.Animation.BounceEase.Bounciness%2A>屬性。 <xref:System.Windows.Media.Animation.BounceEase.Bounciness%2A>屬性可讓您指定的下一步 退件 amplitude 縮放比例。 比方說，bounciness 值為 2 會加倍撤回的下一步 退件期間，更容易，而它一半的下一步 退件 amplitude 期間出更容易。  
  
 有數個其他 easing 函式除了<xref:System.Windows.Media.Animation.BounceEase>。
除了使用包含在執行階段的 easing 函式，您可以建立您自己自訂的 easing 函式，藉由繼承自<xref:System.Windows.Media.Animation.EasingFunctionBase>。  
  
## <a name="xaml-object-element-usage"></a>XAML 物件項目用法  
  
```xaml
<BounceEase .../>  
```  
  
   
  
## Examples  
 下列範例會套用<xref:System.Windows.Media.Animation.BounceEase>easing 函式以<xref:System.Windows.Media.Animation.DoubleAnimation>建立彈跳效果。  
  
 [!code-xaml[BounceEase_Snippet#BounceEase](~/samples/snippets/csharp/VS_Snippets_Wpf/bounceease_snippet/CS/window1.xaml#bounceease)]   
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.PowerEase" />
    <altmember cref="T:System.Windows.Media.Animation.BackEase" />
    <altmember cref="T:System.Windows.Media.Animation.CircleEase" />
    <altmember cref="T:System.Windows.Media.Animation.CubicEase" />
    <altmember cref="T:System.Windows.Media.Animation.ElasticEase" />
    <altmember cref="T:System.Windows.Media.Animation.ExponentialEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuadraticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuarticEase" />
    <altmember cref="T:System.Windows.Media.Animation.QuinticEase" />
    <altmember cref="T:System.Windows.Media.Animation.SineEase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BounceEase ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BounceEase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BounceEase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Media.Animation.BounceEase" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounces">
      <MemberSignature Language="C#" Value="public int Bounces { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Bounces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.BounceEase.Bounces" />
      <MemberSignature Language="VB.NET" Value="Public Property Bounces As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Bounces { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Bounces : int with get, set" Usage="System.Windows.Media.Animation.BounceEase.Bounces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定彈跳的次數。</summary>
        <value>彈跳的次數。 這個值必須大於或等於零。 負數值會解析為零。 預設值為 3。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性不包含最終的半彈跳。  
  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BounceEase.BouncesProperty>  
  
<a name="xamlAttributeUsage_Bounces"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<object Bounces="int" .../>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BouncesProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BouncesProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BouncesProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.BounceEase.BouncesProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BouncesProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BouncesProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BouncesProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.BounceEase.BouncesProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.BounceEase.Bounces" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bounciness">
      <MemberSignature Language="C#" Value="public double Bounciness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bounciness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.BounceEase.Bounciness" />
      <MemberSignature Language="VB.NET" Value="Public Property Bounciness As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Bounciness { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Bounciness : double with get, set" Usage="System.Windows.Media.Animation.BounceEase.Bounciness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值會指定彈跳動畫的彈性。 這個屬性的低值會讓每次的彈跳減低少許高度 (更有彈性)，高值則會造成較弱的彈跳 (較少彈性)。</summary>
        <value>指定彈跳動畫之彈性的值。 這個值必須是正數。 預設值是<c>2</c>。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[DP_ID_field_label](~/includes/dp-id-field-label-md.md)] <xref:System.Windows.Media.Animation.BounceEase.BouncinessProperty>  
  
<a name="xamlAttributeUsage_Bounciness"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<object Bounciness="double" .../>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BouncinessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BouncinessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BouncinessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.BounceEase.BouncinessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BouncinessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BouncinessProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BouncinessProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.Animation.BounceEase.BouncinessProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Media.Animation.BounceEase.Bounciness" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BounceEase.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="bounceEase.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Windows.Freezable" /> 衍生類別的新執行個體。 建立衍生類別時，您必須覆寫這個方法。</summary>
        <returns>新的執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 動畫類別間接繼承自<xref:System.Windows.Freezable>。 基於這個原因，您需要覆寫<xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>方法來建構自訂動畫物件。  
  
   
  
## Examples  
 下列範例示範的典型實作<xref:System.Windows.Freezable.CreateInstanceCore%2A>。  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EaseInCore">
      <MemberSignature Language="C#" Value="protected override double EaseInCore (double normalizedTime);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance float64 EaseInCore(float64 normalizedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.BounceEase.EaseInCore(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EaseInCore (normalizedTime As Double) As Double" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override double EaseInCore(double normalizedTime);" />
      <MemberSignature Language="F#" Value="override this.EaseInCore : double -&gt; double" Usage="bounceEase.EaseInCore normalizedTime" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizedTime" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="normalizedTime">動畫的標準化時間 (進度)。</param>
        <summary>提供 easing 函式的邏輯部分，您可將其覆寫以產生自訂 easing 函式的 <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn" /> 模式。</summary>
        <returns>表示已轉換進度的雙精度浮點數。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法轉換標準化的時間，以控制動畫的步調<xref:System.Windows.Media.Animation.EasingMode.EaseIn>案例<xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>。  
  
 您只需要指定 easing 函式<xref:System.Windows.Media.Animation.EasingMode.EaseIn>情況下，因為實作<xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>方法轉換`normalizedTime`如<xref:System.Windows.Media.Animation.EasingMode.EaseOut>和<xref:System.Windows.Media.Animation.EasingMode.EaseInOut>案例。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>