<Type Name="D3DImage" FullName="System.Windows.Interop.D3DImage">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67a591e7f26a5181b8d03d81e8af4ab098e8eb98" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30661052" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class D3DImage : System.Windows.Media.ImageSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi D3DImage extends System.Windows.Media.ImageSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.D3DImage" />
  <TypeSignature Language="VB.NET" Value="Public Class D3DImage&#xA;Inherits ImageSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class D3DImage : System::Windows::Media::ImageSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.ImageSource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>顯示使用者建立之 Direct3D 介面的 <see cref="T:System.Windows.Media.ImageSource" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Windows.Interop.D3DImage>Direct3D 內容，在 Windows Presentation Foundation (WPF) 應用程式中裝載的類別。  
  
 呼叫<xref:System.Windows.Interop.D3DImage.Lock%2A>方法，以變更所顯示的 Direct3D 內容<xref:System.Windows.Interop.D3DImage>。 呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>Direct3D 介面，以將指派方法<xref:System.Windows.Interop.D3DImage>。 呼叫<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>方法，以追蹤 Direct3D 介面的更新。 呼叫<xref:System.Windows.Interop.D3DImage.Unlock%2A>方法，以顯示已變更的區域。  
  
 <xref:System.Windows.Interop.D3DImage>類別會管理兩個顯示緩衝區，稱為*背景緩衝區*和*前端緩衝區*。 背景緩衝區是 Direct3D 介面。  變更背景緩衝區會複製轉寄至前端緩衝區當您呼叫<xref:System.Windows.Interop.D3DImage.Unlock%2A>方法，它會顯示在硬體。 有時候，前端緩衝區變成無法使用。 這種欠缺可用性可能因鎖定畫面、 全螢幕獨佔 Direct3D 應用程式、 切換使用者，或其他系統活動。 當發生這種情況時，WPF 應用程式就會通知處理<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>事件。  您的應用程式回應變得無法使用前端緩衝區的方式取決於是否啟用 WPF 改為使用軟體呈現。 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>方法具有可接受的參數會指定是否 WPF 退回使用軟體呈現多載。  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-does-not-fall-back-to-software-rendering"></a>當 WPF 不會回到軟體呈現無法使用的前端緩衝區回應  
 當您呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>多載，或呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>多載`enableSoftwareFallback`參數設定為`false`，呈現系統釋放背景緩衝區的參考，當前端緩衝區變成無法使用，而且執行任何動作顯示。 轉譯系統前端緩衝區再次可用時，會引發<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>事件以通知您的 WPF 應用程式。  您可以建立事件處理常式<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>轉譯使用有效的 Direct3D 介面，然後再次重新啟動的事件。 若要重新啟動轉譯，您必須呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>。  
  
## <a name="responding-to-an-unavailable-front-buffer-when-wpf-falls-back-to-software-rendering"></a>當 WPF 改回軟體呈現無法使用的前端緩衝區回應  
 當您呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>多載`enableSoftwareFallback`參數設定為`true`，呈現系統會保留其背景緩衝區的參考時前端緩衝區變成無法使用，因此不需要呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>時最上層緩衝區恢復可用性為止。  可能有一些情況，使用者的裝置會變成無法使用。  當發生此情況時，呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>釋放 WPF 的背景緩衝區的參考。  如果您要重設您的裝置，請呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>與`backBuffer`參數設定為`null`，然後呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>再次`backBuffer`設為有效的 Direct3D 介面。  
  
> [!NOTE]
>  效能大幅定 Direct3D 介面的設定。 如需詳細資訊，請參閱[Direct3D9 和 WPF 互通性的效能考量](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)。  
  
> [!NOTE]
>  <xref:System.Windows.Interop.D3DImage>類別不會顯示 Direct3D 內容時 WPF 軟體中呈現，例如透過遠端桌面連線，除非您呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>並指定`true`如`enableSoftwareFallback`參數。  
  
   
  
## Examples  
 下列程式碼範例示範如何宣告<xref:System.Windows.Interop.D3DImage>在 XAML 中。 您必須將對應<xref:System.Windows.Interop>命名空間，因為它不會包含預設 XAML 命名空間中。 如需詳細資訊，請參閱[逐步解說： 裝載 Direct3D9 內容在 WPF 中](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。  
  
 [!code-xaml[System.Windows.Interop.D3DImage#10](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml#10)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">用於存取 unmanaged 資源。 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Interop.D3DImage" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Interop.D3DImage" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的顯示解析度為 1/96 英吋。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於存取 unmanaged 資源。 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public D3DImage (double dpiX, double dpiY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 dpiX, float64 dpiY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dpiX As Double, dpiY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; D3DImage(double dpiX, double dpiY);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dpiX" Type="System.Double" />
        <Parameter Name="dpiY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="dpiX">X 軸的顯示解析度。</param>
        <param name="dpiY">Y 軸的顯示解析度。</param>
        <summary>使用指定的顯示解析度，初始化 <see cref="T:System.Windows.Interop.D3DImage" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設的顯示解析度為 1/96 英吋。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dpiX" /> 或 <paramref name="dpiY" /> 小於零。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於存取 unmanaged 資源。 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
      </Docs>
    </Member>
    <Member MemberName="AddDirtyRect">
      <MemberSignature Language="C#" Value="public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDirtyRect(valuetype System.Windows.Int32Rect dirtyRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDirtyRect (dirtyRect As Int32Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDirtyRect(System::Windows::Int32Rect dirtyRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dirtyRect" Type="System.Windows.Int32Rect" />
      </Parameters>
      <Docs>
        <param name="dirtyRect">表示已變更區域的 <see cref="T:System.Windows.Int32Rect" />。</param>
        <summary>指定所變更之背景緩衝區的區域。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>方法，以表示您的程式碼具有背景緩衝區所做的變更。 若要呈現，在背景緩衝區的已變更的區域必須擁有對應的已變更的區域<xref:System.Windows.Interop.D3DImage>。  
  
 呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>和<xref:System.Windows.Interop.D3DImage.Lock%2A>方法呼叫之前<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>方法。  
  
 呼叫<xref:System.Windows.Interop.D3DImage.Unlock%2A>方法，以將已變更的區域複製到前端的緩衝區。  
  
> [!NOTE]
>  後幾個呼叫<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>方法，這個方法已變更的區域會合併成單一區域。 這表示您必須擁有有效的資料已變更區域外部。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>方法，以指定的已變更的區域背景緩衝區中。 如需詳細資訊，請參閱[逐步解說： 裝載 Direct3D9 內容在 WPF 中](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">尚未呼叫 <see cref="M:System.Windows.Interop.D3DImage.Lock" /> 或 <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" /> 方法鎖定點鎖圖。  
  
 -或-  
  
 尚未呼叫 <see cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" /> 方法指派背景緩衝區。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">下列一項或多項條件為 True。  
  
 <paramref name="dirtyRect.X" /> &lt; 0  
  
 <paramref name="dirtyRect.Y" /> &lt; 0  
  
 <paramref name="dirtyRect.Width" /> &lt; 0 或 <paramref name="dirtyRect.Width" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelWidth" /><paramref name="dirtyRect.Height" /> &lt; 0 或 <paramref name="dirtyRect.Height" /> &gt; <see cref="P:System.Windows.Interop.D3DImage.PixelHeight" /></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於存取 unmanaged 資源。 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立這個 <see cref="T:System.Windows.Interop.D3DImage" /> 物件的可修改複製品，製作這個物件值的深層複本。 當複製相依性屬性時，這個方法會複製資源參考和資料繫結 (它們可能已不再解析)，但不會複製動畫或其目前值。</summary>
        <returns>目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="true." />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性將仍為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。 為了方便起見，這個方法會遮蔽強型別實作繼承的版本。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">要複製的物件。</param>
        <summary>使用基底 (非動畫) 屬性值，將執行個體設為指定 <see cref="T:System.Windows.Freezable" /> 的複製品 (深層複製)。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.D3DImage CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Interop.D3DImage CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As D3DImage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::D3DImage ^ CloneCurrentValue();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.D3DImage</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立這個 <see cref="T:System.Windows.Interop.D3DImage" /> 物件的可修改複製品，製作這個物件目前值的深層複本。 不會複製資源參考、資料繫結和動畫，但是會複製其目前值。</summary>
        <returns>目前物件的可修改複本。 即使來源的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性為 <see langword="false" />，複製物件的 <see cref="P:System.Windows.Freezable.IsFrozen" /> 屬性將仍為 <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法用來產生的可修改複本凍結<xref:System.Windows.Freezable>物件 (或任何<xref:System.Windows.Freezable>物件)。 為了方便起見，這個方法會遮蔽強型別實作繼承的版本。  
  
 如需詳細資訊，請參閱<xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">要複製的 <see cref="T:System.Windows.Freezable" />。</param>
        <summary>使用目前的屬性值，讓執行個體成為指定之 <see cref="T:System.Windows.Freezable" /> 的可修改複本 (深層複本)。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CopyBackBuffer">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.Media.Imaging.BitmapSource CopyBackBuffer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.Media.Imaging.BitmapSource CopyBackBuffer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CopyBackBuffer" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CopyBackBuffer () As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::Media::Imaging::BitmapSource ^ CopyBackBuffer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Windows.Interop.D3DImage" /> 的軟體版本。</summary>
        <returns>背景緩衝區目前狀態之軟體版本的 <see cref="T:System.Windows.Media.Imaging.BitmapSource" />，如果背景緩衝區無法讀取，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A>方法由用戶端列印系統如呼叫和<xref:System.Windows.Media.Imaging.RenderTargetBitmap>類別。  
  
 選擇性地覆寫<xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A>方法來實作自訂邏輯，並傳回不同<xref:System.Windows.Media.Imaging.BitmapSource>。 例如，您還可以傳回預留位置<xref:System.Windows.Media.Imaging.BitmapSource>如果預設<xref:System.Windows.Interop.D3DImage.CopyBackBuffer%2A>實作會傳回`null`。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於存取 unmanaged 資源。 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="T:System.Windows.Media.Imaging.BitmapSource" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中實作時，建立 <see cref="T:System.Windows.Interop.D3DImage" /> 衍生類別的新執行個體。</summary>
        <returns>新的執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您是衍生自<xref:System.Windows.Interop.D3DImage>類別，您必須覆寫<xref:System.Windows.Interop.D3DImage.CreateInstanceCore%2A>方法，以便能夠正確複製。 預設實作會執行`return new D3DImage()`，這不會在不同的類別執行個體是否正確。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~D3DImage ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!D3DImage ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>釋出資源並執行其他清除作業後，記憶體回收才能重新回收 <see cref="T:System.Windows.Interop.D3DImage" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法覆寫 <xref:System.Object.Finalize%2A>。 應用程式程式碼不應該呼叫這個方法。物件的`Finalize`方法會自動叫用記憶體回收期間，除非已停用記憶體回收行程的最終處理的呼叫所<xref:System.GC.SuppressFinalize%2A>方法。  
  
 如需詳細資訊，請參閱[Finalize 方法和解構函式](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)，[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)，和[覆寫 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於存取 unmanaged 資源。 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override sealed bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">沒有作用。</param>
        <summary>讓 <see cref="T:System.Windows.Interop.D3DImage" /> 設為不可以修改的項目，或是判斷它是否可以改為不可修改的項目。</summary>
        <returns>
          所有情況下都是 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Interop.D3DImage>類別不允許凍結因為變更都可能會因為前端緩衝區可用性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">要複製的執行個體。</param>
        <summary>使用基底 (非動畫) 屬性值，將執行個體設為所指定 <see cref="T:System.Windows.Freezable" /> 的凍結複製品。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">要複製和凍結的 <see cref="T:System.Windows.Freezable" />。</param>
        <summary>將目前執行個體設為所指定 <see cref="T:System.Windows.Freezable" /> 的凍結複製品。 如果物件具有動畫相依性屬性，則會複製其目前的動畫值。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public override sealed double Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Interop.D3DImage" /> 的高度。</summary>
        <value>
          <see cref="T:System.Windows.Interop.D3DImage" /> 的高度，以測量單位表示。 測量單位為 1/96 英吋。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Interop.D3DImage.Height%2A>指派新的背景緩衝區的呼叫時，可以變更<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Width" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailable">
      <MemberSignature Language="C#" Value="public bool IsFrontBufferAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrontBufferAvailable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrontBufferAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrontBufferAvailable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得指出前景緩衝區是否存在的值。</summary>
        <value>
          如果前景緩衝區存在，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有時候，前端緩衝區變成無法使用。 這種欠缺可用性可能因鎖定畫面、 全螢幕獨佔 Direct3D 應用程式、 切換使用者，或其他系統活動。 當發生這種情況時，WPF 應用程式就會通知處理<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>事件。  您的應用程式回應變得無法使用前端緩衝區的方式取決於是否啟用 WPF 改為使用軟體呈現。 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>方法具有可接受的參數會指定是否 WPF 退回使用軟體呈現多載。 如需詳細資訊，請參閱 「 備註 」 中的<xref:System.Windows.Interop.D3DImage>類別。  
  
<a name="dependencyPropertyInfo_IsFrontBufferAvailable"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
   
  
## Examples  
 下列程式碼範例示範如何檢查<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailable%2A>轉譯組合目標時的屬性。 如需詳細資訊，請參閱[逐步解說： 裝載 Direct3D9 內容在 WPF 中](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。  
  
 [!code-csharp[System.Windows.Interop.D3DImage#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
        <altmember cref="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsFrontBufferAvailableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsFrontBufferAvailableChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> 屬性變更時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 處理<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>前端緩衝區的狀態變更時收到通知。 您的應用程式回應變得無法使用前端緩衝區的方式取決於是否啟用 WPF 改為使用軟體呈現。 <xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>方法具有可接受的參數會指定是否 WPF 退回使用軟體呈現多載。 如需詳細資訊，請參閱 「 備註 」 中的<xref:System.Windows.Interop.D3DImage>類別。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrontBufferAvailableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFrontBufferAvailableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFrontBufferAvailableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFrontBufferAvailableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFrontBufferAvailableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Interop.D3DImage.IsFrontBufferAvailable" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Lock">
      <MemberSignature Language="C#" Value="public void Lock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Lock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Lock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Lock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Lock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>鎖定 <see cref="T:System.Windows.Interop.D3DImage" />，並且在背景緩衝區上啟用操作。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.Interop.D3DImage.Lock%2A>方法呼叫來變更背景緩衝區<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>和<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>方法。 雖然<xref:System.Windows.Interop.D3DImage>已鎖定，您的應用程式也可以轉譯至指派給背景緩衝區的 Direct3D 介面。  
  
> [!NOTE]
>  <xref:System.Windows.Interop.D3DImage.Lock%2A>方法會封鎖，當呈現系統正在讀取背景緩衝區來更新前端的緩衝區。 使用<xref:System.Windows.Interop.D3DImage.TryLock%2A>方法，以避免無限期地封鎖。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Windows.Interop.D3DImage.Lock%2A>方法，以啟用背景緩衝區的更新。 如需詳細資訊，請參閱[逐步解說： 裝載 Direct3D9 內容在 WPF 中](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">鎖定計數等於 <see cref="F:System.UInt32.MaxValue" />。</exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.Media.ImageMetadata Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageMetadata Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Metadata As ImageMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageMetadata ^ Metadata { System::Windows::Media::ImageMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與影像來源關聯的中繼資料。</summary>
        <value>
          所有情況下都是 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelHeight">
      <MemberSignature Language="C#" Value="public int PixelHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelHeight { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Interop.D3DImage" />的高度，以像素為單位。</summary>
        <value>
          <see cref="T:System.Windows.Interop.D3DImage" /> 的高度，以像素為單位。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Interop.D3DImage.PixelHeight%2A>指派新的背景緩衝區的呼叫時，可以變更<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Interop.D3DImage.PixelHeight%2A>屬性來指定已變更的區域背景緩衝區中。 如需詳細資訊，請參閱[逐步解說： 裝載 Direct3D9 內容在 WPF 中](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelWidth" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <Member MemberName="PixelWidth">
      <MemberSignature Language="C#" Value="public int PixelWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PixelWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.PixelWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PixelWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PixelWidth { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Interop.D3DImage" /> 的寬度，以像素為單位。</summary>
        <value>
          <see cref="T:System.Windows.Interop.D3DImage" /> 的寬度 (以像素為單位)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Interop.D3DImage.PixelWidth%2A>指派新的背景緩衝區的呼叫時，可以變更<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Windows.Interop.D3DImage.PixelWidth%2A>屬性來指定已變更的區域背景緩衝區中。 如需詳細資訊，請參閱[逐步解說： 裝載 Direct3D9 內容在 WPF 中](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.PixelHeight" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBackBuffer">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指派 Direct3D 介面做為背景緩衝區的來源。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="backBufferType">Direct3D 介面的型別。 必須是有效的 <see cref="T:System.Windows.Interop.D3DResourceType" />。</param>
        <param name="backBuffer">指派要做為背景緩衝區的 Direct3D 介面。</param>
        <summary>指派 Direct3D 介面做為背景緩衝區的來源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>將指派給背景緩衝區的 Direct3D 介面方法。  
  
> [!NOTE]
>  效能大幅定 Direct3D 介面的設定。 如需詳細資訊，請參閱[Direct3D9 和 WPF 互通性的效能考量](~/docs/framework/wpf/advanced/performance-considerations-for-direct3d9-and-wpf-interoperability.md)。  
  
 呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>多載等同於呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>多載`enableSoftwareFallback`參數設定為`false`。 當您呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>或呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>與`enableSoftwareFallback`參數設定為`false`，當前端緩衝區變成無法使用，並不會顯示呈現系統釋出背景緩衝區的參考。 轉譯系統前端緩衝區再次可用時，會引發<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>事件以通知您的 WPF 應用程式。  您可以建立事件處理常式<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>轉譯使用有效的 Direct3D 介面，然後再次重新啟動的事件。 若要重新啟動轉譯，您必須呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>。  
  
 下表列出必要的背景緩衝區設定`IDirect3DSurface9`型別。  
  
-   `D3DFMT_A8R8G8B8` 或 `D3DFMT_X8R8G8B8`  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 允許多重採樣`IDirect3DSurface9Ex`只呈現。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>指派 Direct3D 介面的方法。 如需詳細資訊，請參閱[逐步解說： 裝載 Direct3D9 內容在 WPF 中](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">尚未呼叫 <see cref="T:System.Windows.Interop.D3DImage" /> 或 <see cref="M:System.Windows.Interop.D3DImage.Lock" /> 鎖定 <see cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="backBufferType" /> 不是有效的 <see cref="T:System.Windows.Interop.D3DResourceType" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="backBuffer" /> 的建立參數不符合 <paramref name="backBufferType" /> 的需求，或 <paramref name="backBuffer" /> 裝置無效。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">用於存取 unmanaged 資源。 安全性動作： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。 相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="SetBackBuffer">
      <MemberSignature Language="C#" Value="public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBackBuffer(valuetype System.Windows.Interop.D3DResourceType backBufferType, native int backBuffer, bool enableSoftwareFallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBackBuffer (backBufferType As D3DResourceType, backBuffer As IntPtr, enableSoftwareFallback As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBackBuffer(System::Windows::Interop::D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backBufferType" Type="System.Windows.Interop.D3DResourceType" />
        <Parameter Name="backBuffer" Type="System.IntPtr" />
        <Parameter Name="enableSoftwareFallback" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="backBufferType">Direct3D 介面的型別。 必須是有效的 <see cref="T:System.Windows.Interop.D3DResourceType" />。</param>
        <param name="backBuffer">指派要做為背景緩衝區的 Direct3D 介面。</param>
        <param name="enableSoftwareFallback">
          <see langword="true" /> 表示要回到軟體轉譯，否則為 <see langword="false" />。</param>
        <summary>指派 Direct3D 介面做為背景緩衝區的來源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%29>多載，或呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>多載`enableSoftwareFallback`參數設定為`false`，呈現系統釋放背景緩衝區的參考，當前端緩衝區變成無法使用，而且執行任何動作顯示。 轉譯系統前端緩衝區再次可用時，會引發<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>事件以通知您的 WPF 應用程式。  您可以建立事件處理常式<xref:System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged>轉譯使用有效的 Direct3D 介面，然後再次重新啟動的事件。 若要重新啟動轉譯，您必須呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>。  
  
 當您呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%28System.Windows.Interop.D3DResourceType%2CSystem.IntPtr%2CSystem.Boolean%29>與`enableSoftwareFallback`參數設定為`true`，呈現系統會保留其背景緩衝區的參考時前端緩衝區變成無法使用，因此不需要呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>前端緩衝區時使用一次。  可能有一些情況，使用者的裝置會變成無法使用。  當發生此情況時，呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>釋放 WPF 的背景緩衝區的參考。  如果您要重設您的裝置，請呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>與`backBuffer`設`null`，然後呼叫<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>再次`backBuffer`設為有效的 Direct3D 介面。  
  
 下表列出必要的背景緩衝區設定`IDirect3DSurface9`型別。  
  
-   `D3DFMT_A8R8G8B8` 或 `D3DFMT_X8R8G8B8`  
  
-   `D3DUSAGE_RENDERTARGET`  
  
-   `D3DPOOL_DEFAULT`  
  
 允許多重採樣`IDirect3DSurface9Ex`只呈現。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLock">
      <MemberSignature Language="C#" Value="public bool TryLock (System.Windows.Duration timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryLock(valuetype System.Windows.Duration timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryLock (timeout As Duration) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryLock(System::Windows::Duration timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Windows.Duration" />
      </Parameters>
      <Docs>
        <param name="timeout">要取得鎖定所等候的期間。</param>
        <summary>嘗試鎖定 <see cref="T:System.Windows.Interop.D3DImage" />，並且依指定的期間等候鎖定進行。</summary>
        <returns>
          如果已取得鎖定，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="timeout" /> 設定為 <see cref="P:System.Windows.Duration.Automatic" />。</exception>
        <exception cref="T:System.InvalidOperationException">鎖定計數等於 <see cref="F:System.UInt32.MaxValue" />。</exception>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.Unlock" />
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public void Unlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Unlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.D3DImage.Unlock" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unlock ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unlock();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>遞減 <see cref="T:System.Windows.Interop.D3DImage" /> 的鎖定計數。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當鎖定計數為<xref:System.Windows.Interop.D3DImage>到達零時，<xref:System.Windows.Interop.D3DImage>已完全解除鎖定。 <xref:System.Windows.Interop.D3DImage>標示為進行呈現，如果映像已變更先前呼叫所指定的區域<xref:System.Windows.Interop.D3DImage.AddDirtyRect%2A>方法。  
  
 當在認可變更，並轉譯，就會發生，其他呼叫<xref:System.Windows.Interop.D3DImage.Lock%2A>方法封鎖，直到呈現執行緒已複製到前端的緩衝區的背景緩衝區的內容。 此同步處理可避免顯示成品，例如分裂。  
  
> [!NOTE]
>  無法更新時的 Direct3D 介面<xref:System.Windows.Interop.D3DImage>已解除鎖定。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫<xref:System.Windows.Interop.D3DImage.Unlock%2A>方法，以將更新的背景緩衝區複製到前端的緩衝區。 如需詳細資訊，請參閱[逐步解說： 裝載 Direct3D9 內容在 WPF 中](~/docs/framework/wpf/advanced/walkthrough-hosting-direct3d9-content-in-wpf.md)。  
  
 [!code-csharp[System.Windows.Interop.D3DImage#3](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Interop.D3DImage/CS/window1.xaml.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.D3DImage.Lock" />
        <altmember cref="M:System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public override sealed double Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.D3DImage.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Windows.Interop.D3DImage" /> 的寬度。</summary>
        <value>
          <see cref="T:System.Windows.Interop.D3DImage" /> 的寬度，以測量單位表示。 測量單位為 1/96 英吋。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Windows.Interop.D3DImage.Width%2A>指派新的背景緩衝區的呼叫時，可以變更<xref:System.Windows.Interop.D3DImage.SetBackBuffer%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.D3DImage.Height" />
        <altmember cref="M:System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)" />
      </Docs>
    </Member>
  </Members>
</Type>