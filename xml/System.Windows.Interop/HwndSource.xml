<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HwndSource.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac533c0f0aed38ddef50ff2601a1a6d4a1fda2a2fae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33c0f0aed38ddef50ff2601a1a6d4a1fda2a2fae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.HwndSource">
          <source>Presents Windows Presentation Foundation (WPF) content in a Win32 window.</source>
          <target state="translated">在 Win32 視窗中顯示 Windows Presentation Foundation (WPF) 內容。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Many members of this class are unavailable in the Internet security zone.</source>
          <target state="translated">網際網路安全性區域中，這個類別的許多成員就無法使用。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> implements a <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> window that can contain <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> content.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>實作<ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>可以包含視窗<ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>內容。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> content in the window is arranged, measured, and rendered; and is interactive to input.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>排列在視窗的內容，以測量，並呈現; 互動輸入。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> is specifically designed to interoperate with <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>, this class exposes several low-level <ph id="ph3">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> features.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>專為相互作用<ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>，這個類別會公開數個低階<ph id="ph3">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>功能。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>You can use this class to do the following:</source>
          <target state="translated">您可以使用這個類別執行下列操作：</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Specify window styles, window class styles, and extended window styles.</source>
          <target state="translated">指定的視窗樣式，視窗類別樣式，並延伸的視窗樣式。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Hook the window procedure.</source>
          <target state="translated">連結的視窗程序。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Provide access to the window handle (HWND).</source>
          <target state="translated">提供存取權的視窗控制代碼 (HWND)。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Destroy the window.</source>
          <target state="translated">終結視窗。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> class is designed for general interoperability and is not designed as a managed HWND wrapper.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>類別一般的互通性所設計，而且不是做為受管理的 HWND 包裝函式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>In general, it does not provide managed methods for manipulating the window or properties for inspecting its state.</source>
          <target state="translated">一般情況下，它不提供管理視窗或屬性來檢查其狀態的 managed 的方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> class provides access to the <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> window handle (HWND) through the <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.Handle%2A&gt;</ph> property, which can be passed by means of PInvoke techniques to <ph id="ph4">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> <ph id="ph5">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph> in order to manipulate the window.</source>
          <target state="translated">相反地，<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>類別提供存取<ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>視窗控制代碼 (HWND) 透過<ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.Handle%2A&gt;</ph>屬性，可以透過 PInvoke 技術，以傳遞<ph id="ph4">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph><ph id="ph5">[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]</ph>才能操作視窗。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source><bpt id="p1">**</bpt>Construction<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>建構<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Many aspects of the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> can only be specified at construction time.</source>
          <target state="translated">許多層面<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>只能在建構階段指定。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>To create an <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>, first create an <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph> structure and populate it with the desired parameters.</source>
          <target state="translated">若要建立<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>，第一次建立<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph>結構，並填入所需的參數。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>These parameters include the following:</source>
          <target state="translated">這些參數包括：</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The class, window, and extended window styles.</source>
          <target state="translated">類別、 視窗和延伸的視窗樣式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>You must use PInvoke to change the styles after the window is created.</source>
          <target state="translated">若要變更樣式 視窗建立之後，您必須使用 PInvoke。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Not all styles can be changed after the window is created.</source>
          <target state="translated">建立視窗之後，就可以變更並非所有的樣式。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Consult the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> documentation before changing window styles.</source>
          <target state="translated">請參閱<ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>之前變更視窗樣式的文件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The initial position of the window.</source>
          <target state="translated">視窗的初始位置。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> content.</source>
          <target state="translated">初始大小的視窗，其中包含指定的大小，或應該由決定的大小是否<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>內容。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The parent window.</source>
          <target state="translated">父視窗。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceHook&gt;</ph> to include in the window procedure chain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceHook&gt;</ph>来包含在視窗程序鏈結中。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>If you specify a hook at construction time, it receives all messages for the window.</source>
          <target state="translated">如果您是在建構時指定攔截程序，它會接收視窗的所有訊息。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>You can use <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph> to add a hook after the window is created.</source>
          <target state="translated">您可以使用<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph>視窗建立後新增攔截程序。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The transparency settings.</source>
          <target state="translated">透明度設定。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> content.</source>
          <target state="translated">最上層視窗可以設定為根據的每個像素透明度桌面上其他視窗與混合<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>內容。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>To enable this, set the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A&gt;</ph> property in the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph> to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">若要啟用此功能，設定<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph>至<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>This property can only be specified at construction time, and only through the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29&gt;</ph> constructor signature, and it imposes several limitations.</source>
          <target state="translated">這個屬性只能指定，在建構階段，而且只能透過<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29&gt;</ph>建構函式簽章，並會加諸幾項限制。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>After you populate the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph> structure, pass it to the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29&gt;</ph> constructor for the <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>.</source>
          <target state="translated">您可以填入後<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph>結構時，請將它傳遞給<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29&gt;</ph>建構函式<ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source><bpt id="p1">**</bpt>Object Lifetime<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>物件存留期<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> is a regular <ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> object, and its lifetime is managed by the garbage collector.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>為一般<ph id="ph2">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph>物件和其存留期受記憶體回收行程。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> represents an unmanaged resource, <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> implements <ph id="ph3">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>代表 unmanaged 的資源，<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>實作<ph id="ph3">&lt;xref:System.IDisposable&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Synchronously calling <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> immediately destroys the <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> window if called from the owner thread.</source>
          <target state="translated">以同步方式呼叫<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph>會立即終結<ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>如果擁有者執行緒從呼叫的視窗。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>If called from another thread, the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> window is destroyed asynchronously.</source>
          <target state="translated">如果已從另一個執行緒，呼叫<ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>視窗終結時以非同步的方式。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> explicitly from the interoperating code might be necessary for certain interoperation scenarios.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph>明確地從之間互通性程式碼可能需要某些互通的案例。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source><bpt id="p1">**</bpt>Window Procedures<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>視窗程序<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> class implements its own window procedure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>類別會實作自己的視窗程序。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>This window procedure is used to process important window messages, such as those related to layout, rendering, and input.</source>
          <target state="translated">這個視窗程序是用來處理重要的視窗訊息，例如與配置、 呈現和輸入。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>However, you can also hook the window procedure for your own use.</source>
          <target state="translated">不過，您也可以攔截的視窗程序供自己使用。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>You can specify your own hook during construction by setting the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType&gt;</ph> property, or you can also use <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.RemoveHook%2A&gt;</ph> to add and remove hooks after the window is created.</source>
          <target state="translated">您也可以設定在建構期間指定您自己的攔截<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType&gt;</ph>屬性，或者您也可以使用<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.RemoveHook%2A&gt;</ph>新增和移除勾點之後建立的視窗。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The hooks are called by last-in first-out order, which enables your hooks to execute before the built-in processing.</source>
          <target state="translated">後進先出順序，可讓您攔截程序執行內建處理之前會呼叫攔截程序。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>The actual hooks are held by a weak reference.</source>
          <target state="translated">實際的攔截程序會依弱式參考保留。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Therefore, make sure that you manage the lifetime of your hook delegate.</source>
          <target state="translated">因此，請確定您管理您的攔截程序委派的存留期。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>For more information about <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> and other interoperation classes, see <bpt id="p1">[</bpt>WPF and Win32 Interoperation<ept id="p1">](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>和其他交互操作的類別，請參閱<bpt id="p1">[</bpt>WPF 和 Win32 互通<ept id="p1">](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)</ept>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Notice how the constructors for <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> take parameters that resemble the parameters for <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> functions such as <bpt id="p1">[</bpt>CreateWindowEx<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=98462)</ept>.</source>
          <target state="translated">請注意如何建構函式<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>採用類似的參數的參數<ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>函式，如<bpt id="p1">[</bpt>CreateWindowEx<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=98462)</ept>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>Scale transformations should not be applied to the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph> of an <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>.</source>
          <target state="translated">縮放轉換不應該套用至<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>See Remarks for <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>.</source>
          <target state="translated">請參閱備註<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.HwndSource">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndSource">
          <source>This method is not available in the Internet security zone.</source>
          <target state="translated">網際網路安全性區域不使用這個方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
          <source>A structure that contains the parameters that are required to create the window.</source>
          <target state="translated">結構，包含建立視窗所需的參數。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> class by using a structure that contains the initial settings.</source>
          <target state="translated">使用包含初始設定值的結構，初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
          <source>This method is not available in the Internet security zone.</source>
          <target state="translated">網際網路安全性區域不使用這個方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
          <source>This constructor signature might be more convenient in certain situations, because the default structure contains some appropriate initial default values.</source>
          <target state="translated">此建構函式簽章可能在某些情況下，更方便，因為預設的結構包含某些適當的初始預設值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
          <source>If you use this signature, do not use the default <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph> constructor to construct the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph> structure for the <ph id="ph3">`parameters`</ph> value.</source>
          <target state="translated">如果您使用此簽章，不會使用預設<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph>建構函式來建構<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph>結構<ph id="ph3">`parameters`</ph>值。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
          <source>You must use the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph> constructor that enables you to specify an initial window name.</source>
          <target state="translated">您必須使用<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph>建構函式，可讓您指定 [初始] 視窗的名稱。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
          <source>If you use the default <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph> constructor and create an <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> with it, that <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> does not display because an initial window name is a construction requirement for the represented HWND.</source>
          <target state="translated">如果您使用預設<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceParameters&gt;</ph>建構函式，並建立<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>的<ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>不會顯示因為初始的視窗名稱是否代表 HWND 建構需求。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
          <source>to create instances of this class.</source>
          <target state="translated">若要建立這個類別的執行個體。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> class styles for the window.</source>
          <target state="translated">視窗的 <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> 類別樣式。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> styles for the window.</source>
          <target state="translated">視窗的 <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> 樣式。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The extended <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> styles for the window.</source>
          <target state="translated">視窗的延伸 <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> 樣式。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The position of the window's left edge.</source>
          <target state="translated">視窗左邊緣的位置。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The position of the window's upper edge.</source>
          <target state="translated">視窗上邊緣的位置。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The name of the window.</source>
          <target state="translated">視窗的名稱。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The handle of the window's parent window.</source>
          <target state="translated">這個視窗之父視窗的控制代碼。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> class with a specified class style, style, extended style, x-y position, name, and parent window.</source>
          <target state="translated">使用指定的類別樣式、樣式、延伸樣式、x-y 位置、名稱和父視窗，初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>This method is not available in the Internet security zone.</source>
          <target state="translated">網際網路安全性區域不使用這個方法。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>to create instances of this class.</source>
          <target state="translated">若要建立這個類別的執行個體。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> class styles for the window.</source>
          <target state="translated">視窗的 <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> 類別樣式。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> styles for the window.</source>
          <target state="translated">視窗的 <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> 樣式。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The extended <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> styles for the window.</source>
          <target state="translated">視窗的延伸 <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> 樣式。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The position of the window's left edge.</source>
          <target state="translated">視窗左邊緣的位置。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The position of the window's upper edge.</source>
          <target state="translated">視窗上邊緣的位置。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The width of the window.</source>
          <target state="translated">視窗的寬度。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The height of the window.</source>
          <target state="translated">視窗的高度。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The name of the window.</source>
          <target state="translated">視窗的名稱。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>The handle of the window's parent window.</source>
          <target state="translated">這個視窗之父視窗的控制代碼。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window.</source>
          <target state="translated">使用指定的類別樣式、樣式、延伸樣式、x-y 位置、寬度、高度、名稱和父視窗，初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>This method is not available in the Internet security zone.</source>
          <target state="translated">網際網路安全性區域不使用這個方法。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>to create instances of this class.</source>
          <target state="translated">若要建立這個類別的執行個體。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> class styles for the window.</source>
          <target state="translated">視窗的 <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> 類別樣式。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> styles for the window.</source>
          <target state="translated">視窗的 <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> 樣式。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>The extended <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> styles for the window.</source>
          <target state="translated">視窗的延伸 <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> 樣式。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>The position of the window's left edge.</source>
          <target state="translated">視窗左邊緣的位置。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>The position of the window's upper edge.</source>
          <target state="translated">視窗上邊緣的位置。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>The width of the window.</source>
          <target state="translated">視窗的寬度。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>The height of the window.</source>
          <target state="translated">視窗的高度。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>The name of the window.</source>
          <target state="translated">視窗的名稱。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>The handle of the window's parent window.</source>
          <target state="translated">這個視窗之父視窗的控制代碼。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to have the layout manager include the non-client area for sizing; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示配置管理員包含用於調整大小的非工作區 (Client Area)，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window, and by specifying whether the window is autosized.</source>
          <target state="translated">使用指定的類別樣式、樣式、延伸樣式、x-y 位置、寬度、高度、名稱和父視窗，以及指定視窗是否自動調整大小，初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>This method is not available in the Internet security zone.</source>
          <target state="translated">網際網路安全性區域不使用這個方法。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>to create instances of this class.</source>
          <target state="translated">若要建立這個類別的執行個體。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode">
          <source>Gets the value that determines whether to acquire Win32 focus for the WPF containing window for this <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>.</source>
          <target state="translated">取得值，這個值決定是否針對此 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>，為包含 WPF 的視窗取得 Win32 焦點。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要在使用者與功能表互動時取得包含視窗之 WPF 的 Win32 焦點；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode">
          <source>This value is set when you create the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> by setting the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A&gt;</ph> parameter.</source>
          <target state="translated">當您建立時，這個值設定<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>藉由設定<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A&gt;</ph>參數。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode">
          <source>The default value is determined by the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A&gt;</ph> property.</source>
          <target state="translated">預設值由<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>The handler implementation (based on the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSourceHook" /&gt;</ph> delegate) that receives the window messages.</source>
          <target state="translated">接收視窗訊息的處理常式實作 (依據 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSourceHook" /&gt;</ph> 委派)。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>Adds an event handler that receives all window messages.</source>
          <target state="translated">加入接收所有視窗訊息的事件處理常式。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>This method is not available in the Internet security zone.</source>
          <target state="translated">網際網路安全性區域不使用這個方法。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>Most <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> messages that reach the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> have an approximate <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> equivalent.</source>
          <target state="translated">大部分<ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>訊息的觸達<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>有近似<ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>相等。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>You use <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph> to handle the cases where the message has no <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> equivalent.</source>
          <target state="translated">您使用<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph>處理其中訊息沒有任何情況下<ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>相等。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceHook&gt;</ph> delegate resembles the parameter profile of a <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> main window procedure.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSourceHook&gt;</ph>委派類似的參數設定檔<ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>主視窗程序。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>All window messages that the main window procedure of the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> parent window receives are also forwarded to the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceHook&gt;</ph> delegates.</source>
          <target state="translated">所有的視窗訊息的主視窗程序<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>父視窗會收到也會轉送至<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceHook&gt;</ph>委派。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>Hooks are called in the order that they were added.</source>
          <target state="translated">已加入的順序，會呼叫攔截程序。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>If any hook returns <ph id="ph1">`handled`</ph><ph id="ph2">=</ph><ph id="ph3">`true`</ph> for a message, the hooks after it in the call order are not called for that message.</source>
          <target state="translated">如果任何攔截傳回<ph id="ph1">`handled`</ph> <ph id="ph2">=</ph> <ph id="ph3">`true`</ph>的訊息時，攔截程序之後的呼叫順序不會呼叫該訊息。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>to add handling.</source>
          <target state="translated">若要加入處理。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.HwndSource.AutoResized">
          <source>Occurs when layout causes the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> to automatically resize.</source>
          <target state="translated">當進行配置而需要 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 自動調整大小時發生。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndSource.AutoResized">
          <source>The native behavior of <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> is to automatically resize content and the window region based on changes reported through the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> layout system.</source>
          <target state="translated">原生行為<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>是自動調整大小，內容和變更透過報告為基礎的視窗區域<ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>版面配置系統。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndSource.AutoResized">
          <source>The window does not resize if it is currently minimized or if <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.SizeToContent%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.SizeToContent.Manual&gt;</ph>.</source>
          <target state="translated">如果目前最小化，或如果視窗不會不會重新調整大小<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.SizeToContent%2A&gt;</ph>設<ph id="ph2">&lt;xref:System.Windows.SizeToContent.Manual&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks">
          <source>Gets a sequence of registered input sinks.</source>
          <target state="translated">取得註冊的輸入接收器序列。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks">
          <source>An enumeration of keyboard input sinks.</source>
          <target state="translated">鍵盤輸入接收器的列舉。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.CompositionTarget">
          <source>Gets the visual manager for the hosted window.</source>
          <target state="translated">取得所裝載之視窗的視覺管理員。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.CompositionTarget">
          <source>The visual manager.</source>
          <target state="translated">視覺管理員。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.CompositionTarget">
          <source>Override <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A&gt;</ph> in order to override the value that <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.CompositionTarget%2A&gt;</ph> returns.</source>
          <target state="translated">覆寫<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A&gt;</ph>才能覆寫值的<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.CompositionTarget%2A&gt;</ph>傳回。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.CreateHandleRef">
          <source>Gets the window handle for the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 的視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.CreateHandleRef">
          <source>The window handle is packaged as part of a <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph> structure.</source>
          <target state="translated">視窗控制代碼會封裝為 <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph> 結構的一部分。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.CreateHandleRef">
          <source>A structure that contains the window handle for this <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>.</source>
          <target state="translated">包含這個 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 之視窗控制代碼的結構。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.CreateHandleRef">
          <source>You can use the handle that is obtained from <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A&gt;</ph> to reference the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> from <ph id="ph3">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> code.</source>
          <target state="translated">您可以使用從取得的控制代碼<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A&gt;</ph>參考<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>從<ph id="ph3">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>程式碼。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.CreateHandleRef">
          <source>Use the handle for operations such as message handling and window behavior.</source>
          <target state="translated">使用此控制代碼的作業，例如訊息處理和視窗行為。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.CreateHandleRef">
          <source>To get just the handle, use <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Handle%2A&gt;</ph>.</source>
          <target state="translated">若要取得的控制代碼，請使用<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Handle%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode">
          <source>Gets or sets the default <ph id="ph1">&lt;see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /&gt;</ph> value for new instances of <ph id="ph2">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>.</source>
          <target state="translated">取得或設定 <ph id="ph1">&lt;see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /&gt;</ph> 之新執行個體的 <ph id="ph2">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 預設值。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示要在使用者與功能表互動時取得包含視窗之 WPF 的 Win32 焦點；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode">
          <source>New instances of <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> have <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A&gt;</ph> set to this default value, unless a different value is passed as a parameter to the <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> constructor for a specific instance, by using the <ph id="ph4">&lt;xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A&gt;</ph> property.</source>
          <target state="translated">新執行個體<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>有<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A&gt;</ph>設為預設值，除非不同的值會當做參數傳遞<ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>建構函式使用的特定執行個體<ph id="ph4">&lt;xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode">
          <source>to get this property.</source>
          <target state="translated">若要取得這個屬性。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.Dispose">
          <source>Releases all managed resources that are used by the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>, and raises the <ph id="ph2">&lt;see cref="E:System.Windows.Interop.HwndSource.Disposed" /&gt;</ph> event.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 所使用的所有 Managed 資源，並引發 <ph id="ph2">&lt;see cref="E:System.Windows.Interop.HwndSource.Disposed" /&gt;</ph> 事件。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.Dispose">
          <source>This method is not available in the Internet security zone.</source>
          <target state="translated">網際網路安全性區域不使用這個方法。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.Dispose">
          <source><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> initiates related cleanup work for the HWND.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> 啟始相關 HWND 的清除工作。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.Dispose">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph>稱為透過不同的主要 UI 執行緒的執行緒，清除工作可能延後到它可以公佈到主要 UI 執行緒。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> explicitly from the interoperating code might be necessary for certain interoperation scenarios, because an <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> in some interoperation scenarios can generate several references to it across the interoperation boundaries that might prevent timely garbage collection.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph>明確地從之間互通性程式碼可能需要某些互通的案例，因為<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>在某些互通的案例中可以產生數個參考跨互通界限導致及時記憶體回收。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.HwndSource.Disposed">
          <source>Occurs when the <ph id="ph1">&lt;see cref="M:System.Windows.Interop.HwndSource.Dispose" /&gt;</ph> method is called on this object.</source>
          <target state="translated">在這個物件上呼叫 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.HwndSource.Dispose" /&gt;</ph> 方法時發生。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndSource.Disposed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Disposed&gt;</ph> event is raised before any resources are released by the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Disposed&gt;</ph>會釋放任何資源之前，就會引發事件<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndSource.Disposed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Disposed&gt;</ph> event indicates that the object that raises the event is about to have all references to it removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Disposed&gt;</ph>事件表示引發事件的物件是否即將有移除它的所有參考。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndSource.Disposed">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Disposed&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.IsDisposed%2A&gt;</ph> property to avoid calling <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> twice (which raises an exception).</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Disposed&gt;</ph>和<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.IsDisposed%2A&gt;</ph>屬性，以避免呼叫<ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph>兩次 （引發例外狀況）。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.HwndSource.DpiChanged">
          <source>Occurs when the DPI of the monitor of this Hwnd has changed, or the Hwnd is moved to a monitor with a different DPI.</source>
          <target state="translated">發生於此 Hwnd 的螢幕 DPI 已變更時，或是將 Hwnd 移至不同 DPI 的螢幕時。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>The provided window handle.</source>
          <target state="translated">提供的視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> object of the specified window.</source>
          <target state="translated">傳回指定之視窗的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> object for the window that is specified by the <ph id="ph2">&lt;paramref name="hwnd" /&gt;</ph> window handle.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="hwnd" /&gt;</ph> 視窗控制代碼指定之視窗的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>This method is not available in the Internet security zone, or for partial trust in general.</source>
          <target state="translated">這個方法無法使用。 在 [網際網路] 安全性區域或部分信任一般</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>You can use this method to return an <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> for a window that is not explicitly an interoperation window.</source>
          <target state="translated">您可以使用這個方法傳回<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>視窗不會明確地交互操作的視窗。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>The procedure for this is:</source>
          <target state="translated">這個程序如下：</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph> instance (providing the main <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> as a constructor parameter).</source>
          <target state="translated">建立<ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph>執行個體 (提供主<ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>做為建構函式參數)。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>Get the value of the <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</ph> property from that <ph id="ph2">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph> instance.</source>
          <target state="translated">取得值的<ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper.Handle%2A&gt;</ph>屬性，從<ph id="ph2">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>Pass that HWND value as a parameter to <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.FromHwnd%2A&gt;</ph>.</source>
          <target state="translated">當做參數傳遞 HWND 該值<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.FromHwnd%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>This technique can be useful if you then want to add general <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph> message processing to the window.</source>
          <target state="translated">這個技巧就很有用，如果您接著要加入一般<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.AddHook%2A&gt;</ph>處理視窗訊息。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>However, whenever you create an <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>, you are also responsible for destroying it.</source>
          <target state="translated">不過，每當您建立<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>，您也必須負責終結該。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>This is true even if the <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> object for an application <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> is disposed.</source>
          <target state="translated">也是如此即使<ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph>應用程式物件<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>處置。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>For more information, see Remarks on <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>.</source>
          <target state="translated">如需詳細資訊，請參閱 &lt; 備註 &gt; 一<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore">
          <source>Gets the visual target of the window.</source>
          <target state="translated">取得視窗的視覺目標。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore">
          <source>Returns the visual target of the window.</source>
          <target state="translated">傳回視窗的視覺目標。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore">
          <source>The default implementation returns the same result as <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.CompositionTarget%2A&gt;</ph>.</source>
          <target state="translated">預設實作會傳回相同結果<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.CompositionTarget%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore">
          <source>Implement this method to return a type-specific visual target.</source>
          <target state="translated">實作此方法以傳回特定類型的視覺化的目標。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> implements this method to return <ph id="ph2">&lt;see cref="T:System.Windows.Interop.HwndTarget" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 實作此方法以傳回<ph id="ph2">&lt;see cref="T:System.Windows.Interop.HwndTarget" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.Handle">
          <source>Gets the window handle for this <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>.</source>
          <target state="translated">取得這個 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph> 的視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.Handle">
          <source>The window handle.</source>
          <target state="translated">視窗控制代碼 (Window Handle)。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.Handle">
          <source>This property is not available in the Internet security zone.</source>
          <target state="translated">網際網路安全性區域不使用這個屬性。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.Handle">
          <source>to access this pointer.</source>
          <target state="translated">若要存取這個指標。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.Handle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.HasFocusWithinCore">
          <source>Gets a value that indicates whether the sink or one of its contained components has focus.</source>
          <target state="translated">取得值，這個值表示接收或其包含的其中一個元件是否有焦點。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.HasFocusWithinCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sink or one of its contained components has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果接收或其包含的其中一個元件有焦點則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.IsDisposed">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="M:System.Windows.Interop.HwndSource.Dispose" /&gt;</ph> has been called on this <ph id="ph2">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>.</source>
          <target state="translated">取得值，指出是否已針對這個 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.HwndSource.Dispose" /&gt;</ph> 呼叫 <ph id="ph2">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object has had <ph id="ph2">&lt;see cref="M:System.Windows.Interop.HwndSource.Dispose" /&gt;</ph> called on it; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果物件已針對它呼叫 <ph id="ph2">&lt;see cref="M:System.Windows.Interop.HwndSource.Dispose" /&gt;</ph> 則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.IsDisposed">
          <source><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> initiates related cleanup work for the HWND.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> 啟始相關 HWND 的清除工作。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.IsDisposed">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph>稱為透過不同的主要 UI 執行緒的執行緒，清除工作可能延後到它可以公佈到主要 UI 執行緒。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.IsDisposed">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Disposed&gt;</ph> event is raised and the value of <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.IsDisposed%2A&gt;</ph> becomes <ph id="ph3">`false`</ph> as soon as <ph id="ph4">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Disposed&gt;</ph>就會引發事件，而<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.IsDisposed%2A&gt;</ph>變成<ph id="ph3">`false`</ph>儘速<ph id="ph4">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.IsDisposed">
          <source>During this time, if you call <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> again, <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph> raises an exception.</source>
          <target state="translated">在此期間，如果您呼叫<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph>同樣地，<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.Dispose%2A&gt;</ph>引發例外狀況。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore">
          <source>Gets or sets a reference to the component's container's <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> interface.</source>
          <target state="translated">取得或設定對元件容器之 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> 介面的參考。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore">
          <source>A reference to the container's <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> interface; or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if no site is assigned.</source>
          <target state="translated">容器的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> 介面參考，如果沒有指派位置，則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore">
          <source>to set this property.</source>
          <target state="translated">若要設定此屬性。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)">
          <source>The event arguments</source>
          <target state="translated">事件引數</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)">
          <source>Called when the DPI is going to change for the window.</source>
          <target state="translated">於視窗的 DPI 將變更時呼叫。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)">
          <source>If the user handles this event,         WPF does not scale any visuals.</source>
          <target state="translated">如果使用者可以處理此事件，WPF 無法調整任何視覺效果。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)">
          <source>This method accesses critical data <ph id="ph1">&lt;xref:System.Windows.Interop.HwndTarget&gt;</ph>.</source>
          <target state="translated">這個方法會存取重要資料<ph id="ph1">&lt;xref:System.Windows.Interop.HwndTarget&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message for the mnemonic and associated data.</source>
          <target state="translated">助憶鍵及其相關聯資料的訊息。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Called when one of the mnemonics (access keys) for this sink is invoked.</source>
          <target state="translated">當叫用這個接收的其中一個助憶鍵 (便捷鍵 (Access Key)) 時呼叫。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已處理訊息，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;paramref name="msg" /&gt;</ph> is not WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, or WM_DEADCHAR.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="msg" /&gt;</ph> 並非 WM_KEYDOWN、WM_SYSKEYDOWN、WM_CHAR 或 WM_DEADCHAR。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> sink of the contained component.</source>
          <target state="translated">所包含之元件的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> 接收。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>Registers the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> interface of a contained component.</source>
          <target state="translated">註冊所包含之元件的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> 介面。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> site of the contained component.</source>
          <target state="translated">所包含之元件的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> 站台。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)">
          <source>The event handler to remove.</source>
          <target state="translated">要移除的事件處理常式。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)">
          <source>Removes the event handlers that were added by <ph id="ph1">&lt;see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" /&gt;</ph>.</source>
          <target state="translated">移除由 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" /&gt;</ph> 加入的事件處理常式。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)">
          <source>This method is not available in the Internet security zone.</source>
          <target state="translated">網際網路安全性區域不使用這個方法。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)">
          <source>to remove handlers.</source>
          <target state="translated">若要移除處理常式。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.RestoreFocusMode">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.RestoreFocusMode" /&gt;</ph> for the window.</source>
          <target state="translated">取得視窗的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.RestoreFocusMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RestoreFocusMode">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Input.RestoreFocusMode" /&gt;</ph> for the window.</source>
          <target state="translated">視窗的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.RestoreFocusMode" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RestoreFocusMode">
          <source>This property can be set only in the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType&gt;</ph> constructor by using the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">這個屬性可以設定只有在<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType&gt;</ph>建構函式使用<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.RootVisual">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /&gt;</ph> of the window.</source>
          <target state="translated">取得或設定視窗的 <ph id="ph1">&lt;see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RootVisual">
          <source>The root visual object of the window.</source>
          <target state="translated">視窗的根視覺物件。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RootVisual">
          <source>Use this property to connect a <ph id="ph1">&lt;xref:System.Windows.Controls.Page&gt;</ph> or another root visual to the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>.</source>
          <target state="translated">使用這個屬性來連接<ph id="ph1">&lt;xref:System.Windows.Controls.Page&gt;</ph>或另一個根 visual， <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RootVisual">
          <source>Scale transformations should not be applied to the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph> of an <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> because this can disable <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.SizeToContent%2A&gt;</ph> behavior.</source>
          <target state="translated">縮放轉換不應該套用至<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>因為這可以停用<ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.SizeToContent%2A&gt;</ph>行為。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RootVisual">
          <source>The content will scale, but the enclosing window will not.</source>
          <target state="translated">內容會縮放，但不是會封入的視窗。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RootVisual">
          <source>Instead of applying the transformation to the object that is the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>, apply the transformation to an object that is a child element of the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>.</source>
          <target state="translated">而不是將轉換套用至的物件<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>，將轉換套用至物件的子元素， <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RootVisual">
          <source>You might need to add an extra enclosing element to the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> content, such as a panel, in order to provide a scaleable object.</source>
          <target state="translated">您可能需要新增額外封入項目的<ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>等面板，以便提供可延展的物件內容。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RootVisual">
          <source>You can add a <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> as the root visual, but only as a top-level window (with WS_OVERLAPPED), not as a child window.</source>
          <target state="translated">您可以加入<ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>為根視覺效果上，但只為最上層視窗 （具有 WS_OVERLAPPED) 而非子視窗。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RootVisual">
          <source>to set this property.</source>
          <target state="translated">若要設定此屬性。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.RootVisual">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.SizeToContent">
          <source>Get or sets whether and how the window is sized to its content.</source>
          <target state="translated">取得或設定視窗是否以及如何調整至其內容大小。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.SizeToContent">
          <source>One of the enumeration values.</source>
          <target state="translated">其中一個列舉值。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.SizeToContent">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Windows.SizeToContent.Manual" /&gt;</ph>, which specifies that the window is not sized to its content.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see cref="F:System.Windows.SizeToContent.Manual" /&gt;</ph>，指定視窗不會調整至其內容大小。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.SizeToContent">
          <source>End users might indirectly set this property through application UI, if that functionality is exposed by the application.</source>
          <target state="translated">使用者可能間接透過應用程式 UI 中，這個屬性如果設定應用程式所公開的功能。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.SizeToContent">
          <source>Scale transformations should not be applied to the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph> of an <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>, because this can disable <ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.SizeToContent%2A&gt;</ph> behavior.</source>
          <target state="translated">縮放轉換不應該套用至<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>的<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph>，因為這可以停用<ph id="ph3">&lt;xref:System.Windows.Interop.HwndSource.SizeToContent%2A&gt;</ph>行為。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.SizeToContent">
          <source>See Remarks for <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>.</source>
          <target state="translated">請參閱備註<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.RootVisual%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.HwndSource.SizeToContentChanged">
          <source>Occurs when the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /&gt;</ph> property changes.</source>
          <target state="translated">發生於 <ph id="ph1">&lt;see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /&gt;</ph> 屬性的值變更時。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndSource.SizeToContentChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.SizeToContentChanged&gt;</ph> event is only raised when user interaction causes the change.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.SizeToContentChanged&gt;</ph>使用者互動會導致變更時，才會引發事件。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndSource.SizeToContentChanged">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> in code, the <ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.SizeToContentChanged&gt;</ph> event is not raised.</source>
          <target state="translated">如果您設定<ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph>程式碼中，<ph id="ph2">&lt;xref:System.Windows.Interop.HwndSource.SizeToContentChanged&gt;</ph>不會引發事件。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sink or one of its contained components has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果接收或其包含的其中一個元件有焦點則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>A reference to the container's <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> interface.</source>
          <target state="translated">對容器之 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> 介面的參考。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>to set this property.</source>
          <target state="translated">若要設定此屬性。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message for the mnemonic and associated data.</source>
          <target state="translated">助憶鍵及其相關聯資料的訊息。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this message structure.</source>
          <target state="translated">請勿修改這個訊息結構。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">參考僅基於效能考量而傳送它。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已處理訊息，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> sink of the contained component.</source>
          <target state="translated">所包含之元件的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> 接收。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> site of the contained component.</source>
          <target state="translated">所包含之元件的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> 站台。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>Specifies whether focus should be set to the first or the last tab stop.</source>
          <target state="translated">指定是否應將焦點設定為第一個或最後一個定位停駐點。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the focus has been set as requested; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, if there are no tab stops.</source>
          <target state="translated">如果已依照要求設定焦點則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果沒有定位停駐點則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">訊息及相關聯資料。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">請勿修改這個結構。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">參考僅基於效能考量而傳送它。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled by the method implementation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果訊息由方法實作處理則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">訊息及相關聯資料。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">請勿修改這個結構。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">參考僅基於效能考量而傳送它。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed and <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> should not be called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已處理訊息則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，此時不應呼叫 <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)">
          <source>Specifies whether focus should be set to the first or the last tab stop.</source>
          <target state="translated">指定是否應將焦點設定為第一個或最後一個定位停駐點。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)">
          <source>Sets focus on either the first tab stop or the last tab stop of the sink.</source>
          <target state="translated">將焦點設定在接收的第一個定位停駐點 (Tab Stop) 或最後一個定位停駐點。</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the focus has been set as requested; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, if there are no tab stops.</source>
          <target state="translated">如果已依照要求設定焦點則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果沒有定位停駐點則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)">
          <source><ph id="ph1">&lt;paramref name="request" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="request" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">訊息及相關聯資料。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">請勿修改這個結構。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">參考僅基於效能考量而傳送它。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Processes keyboard input at the key-down message level.</source>
          <target state="translated">在按下按鍵時的訊息層級處理鍵盤輸入。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled by the method implementation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果訊息由方法實作處理則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">訊息及相關聯資料。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">請勿修改這個結構。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">參考僅基於效能考量而傳送它。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> method is called.</source>
          <target state="translated">先處理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 輸入訊息，接著呼叫 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed and <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> should not be called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已處理訊息則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，此時不應呼叫 <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity">
          <source>Gets a value that declares whether the per-pixel opacity of the source window content is respected.</source>
          <target state="translated">取得值，這個值會宣告是否遵守來源視窗內容之每像素的不透明度。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the system uses per-pixel opacity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果系統採用每像素的不透明度則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity">
          <source>When you enable per-pixel opacity, the system no longer draws the non-client area.</source>
          <target state="translated">當您啟用每個像素的不透明度時，系統不會再繪製非工作區。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity">
          <source>This is because the intended purpose of <ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A&gt;</ph> is to show non-rectangular top-level UI that works in interoperation scenarios.</source>
          <target state="translated">這是因為的預期的用途<ph id="ph1">&lt;xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A&gt;</ph>是在互通案例中顯示非矩形的最上層 UI 可運作。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity">
          <source>Therefore, showing the rectangular non-client area defeats that purpose.</source>
          <target state="translated">因此，顯示矩形的非工作區擊敗該用途。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>