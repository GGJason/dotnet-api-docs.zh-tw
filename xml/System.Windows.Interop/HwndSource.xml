<Type Name="HwndSource" FullName="System.Windows.Interop.HwndSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d118992e2a7dd78476ee8ad258f952d5a118a97" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39815246" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HwndSource : System.Windows.PresentationSource, IDisposable, System.Windows.Interop.IKeyboardInputSink, System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HwndSource extends System.Windows.PresentationSource implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndSource" />
  <TypeSignature Language="VB.NET" Value="Public Class HwndSource&#xA;Inherits PresentationSource&#xA;Implements IDisposable, IKeyboardInputSink, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class HwndSource : System::Windows::PresentationSource, IDisposable, System::Windows::Interop::IKeyboardInputSink, System::Windows::Interop::IWin32Window" />
  <TypeSignature Language="F#" Value="type HwndSource = class&#xA;    inherit PresentationSource&#xA;    interface IDisposable&#xA;    interface IWin32Window&#xA;    interface IKeyboardInputSink" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.PresentationSource</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IKeyboardInputSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="ee87c-101">在 Win32 視窗中顯示 Windows Presentation Foundation (WPF) 內容。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ee87c-101">Presents Windows Presentation Foundation (WPF) content in a Win32 window.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-102">這個類別的許多成員處於無法使用的網際網路安全性區域。</span><span class="sxs-lookup"><span data-stu-id="ee87c-102">Many members of this class are unavailable in the Internet security zone.</span></span>  
  
 <span data-ttu-id="ee87c-103"><xref:System.Windows.Interop.HwndSource>會實作[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]視窗中可包含[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]內容。</span><span class="sxs-lookup"><span data-stu-id="ee87c-103">An <xref:System.Windows.Interop.HwndSource> implements a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window that can contain [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="ee87c-104">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]會排列在視窗中的內容，進行測量，並呈現; 而是互動式輸入。</span><span class="sxs-lookup"><span data-stu-id="ee87c-104">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content in the window is arranged, measured, and rendered; and is interactive to input.</span></span> <span data-ttu-id="ee87c-105">因為<xref:System.Windows.Interop.HwndSource>專為與交互操作[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]，這個類別會公開數個低階[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]功能。</span><span class="sxs-lookup"><span data-stu-id="ee87c-105">Because the <xref:System.Windows.Interop.HwndSource> is specifically designed to interoperate with [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)], this class exposes several low-level [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] features.</span></span> <span data-ttu-id="ee87c-106">您可以使用這個類別來執行下列作業：</span><span class="sxs-lookup"><span data-stu-id="ee87c-106">You can use this class to do the following:</span></span>  
  
-   <span data-ttu-id="ee87c-107">指定的視窗樣式，視窗類別樣式，並延伸視窗樣式。</span><span class="sxs-lookup"><span data-stu-id="ee87c-107">Specify window styles, window class styles, and extended window styles.</span></span>  
  
-   <span data-ttu-id="ee87c-108">將連結的視窗程序。</span><span class="sxs-lookup"><span data-stu-id="ee87c-108">Hook the window procedure.</span></span>  
  
-   <span data-ttu-id="ee87c-109">提供存取權的視窗控制代碼 (HWND)。</span><span class="sxs-lookup"><span data-stu-id="ee87c-109">Provide access to the window handle (HWND).</span></span>  
  
-   <span data-ttu-id="ee87c-110">終結視窗。</span><span class="sxs-lookup"><span data-stu-id="ee87c-110">Destroy the window.</span></span>  
  
 <span data-ttu-id="ee87c-111"><xref:System.Windows.Interop.HwndSource>類別專為一般的互通性，而且不是受管理的 HWND 包裝函式。</span><span class="sxs-lookup"><span data-stu-id="ee87c-111">The <xref:System.Windows.Interop.HwndSource> class is designed for general interoperability and is not designed as a managed HWND wrapper.</span></span> <span data-ttu-id="ee87c-112">一般情況下，它不會提供受管理的方法，以操作屬性來檢查其狀態的視窗。</span><span class="sxs-lookup"><span data-stu-id="ee87c-112">In general, it does not provide managed methods for manipulating the window or properties for inspecting its state.</span></span> <span data-ttu-id="ee87c-113">相反地，<xref:System.Windows.Interop.HwndSource>類別提供存取權[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]視窗控制代碼 (HWND) 透過<xref:System.Windows.Interop.HwndSource.Handle%2A>屬性，可以透過 PInvoke 技術傳[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)][!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]才能操作視窗。</span><span class="sxs-lookup"><span data-stu-id="ee87c-113">Instead, the <xref:System.Windows.Interop.HwndSource> class provides access to the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window handle (HWND) through the <xref:System.Windows.Interop.HwndSource.Handle%2A> property, which can be passed by means of PInvoke techniques to [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in order to manipulate the window.</span></span>  
  
 <span data-ttu-id="ee87c-114">**建構**</span><span class="sxs-lookup"><span data-stu-id="ee87c-114">**Construction**</span></span>  
  
 <span data-ttu-id="ee87c-115">許多層面<xref:System.Windows.Interop.HwndSource>只能在建構時指定。</span><span class="sxs-lookup"><span data-stu-id="ee87c-115">Many aspects of the <xref:System.Windows.Interop.HwndSource> can only be specified at construction time.</span></span> <span data-ttu-id="ee87c-116">若要建立<xref:System.Windows.Interop.HwndSource>，先建立<xref:System.Windows.Interop.HwndSourceParameters>結構，並填入所需的參數。</span><span class="sxs-lookup"><span data-stu-id="ee87c-116">To create an <xref:System.Windows.Interop.HwndSource>, first create an <xref:System.Windows.Interop.HwndSourceParameters> structure and populate it with the desired parameters.</span></span> <span data-ttu-id="ee87c-117">這些參數包括：</span><span class="sxs-lookup"><span data-stu-id="ee87c-117">These parameters include the following:</span></span>  
  
-   <span data-ttu-id="ee87c-118">類別、 視窗和延伸的視窗樣式。</span><span class="sxs-lookup"><span data-stu-id="ee87c-118">The class, window, and extended window styles.</span></span> <span data-ttu-id="ee87c-119">若要變更樣式 視窗建立之後，您必須使用 PInvoke。</span><span class="sxs-lookup"><span data-stu-id="ee87c-119">You must use PInvoke to change the styles after the window is created.</span></span> <span data-ttu-id="ee87c-120">建立視窗之後，就可以變更並非所有的樣式。</span><span class="sxs-lookup"><span data-stu-id="ee87c-120">Not all styles can be changed after the window is created.</span></span> <span data-ttu-id="ee87c-121">請參閱[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]之前變更視窗樣式的文件。</span><span class="sxs-lookup"><span data-stu-id="ee87c-121">Consult the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] documentation before changing window styles.</span></span>  
  
-   <span data-ttu-id="ee87c-122">視窗的初始位置。</span><span class="sxs-lookup"><span data-stu-id="ee87c-122">The initial position of the window.</span></span>  
  
-   <span data-ttu-id="ee87c-123">初始大小的視窗中，包含指定大小，或應該從決定的大小決定[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]內容。</span><span class="sxs-lookup"><span data-stu-id="ee87c-123">The initial size of the window, which includes whether the size is specified or should be determined from the determined size of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span>  
  
-   <span data-ttu-id="ee87c-124">父視窗。</span><span class="sxs-lookup"><span data-stu-id="ee87c-124">The parent window.</span></span>  
  
-   <span data-ttu-id="ee87c-125"><xref:System.Windows.Interop.HwndSourceHook>来包含在視窗程序鏈結中。</span><span class="sxs-lookup"><span data-stu-id="ee87c-125">The <xref:System.Windows.Interop.HwndSourceHook> to include in the window procedure chain.</span></span> <span data-ttu-id="ee87c-126">如果您在建構階段指定攔截程序，它會接收視窗的所有訊息。</span><span class="sxs-lookup"><span data-stu-id="ee87c-126">If you specify a hook at construction time, it receives all messages for the window.</span></span> <span data-ttu-id="ee87c-127">您可以使用<xref:System.Windows.Interop.HwndSource.AddHook%2A>視窗建立之後新增勾點。</span><span class="sxs-lookup"><span data-stu-id="ee87c-127">You can use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to add a hook after the window is created.</span></span>  
  
-   <span data-ttu-id="ee87c-128">透明度設定。</span><span class="sxs-lookup"><span data-stu-id="ee87c-128">The transparency settings.</span></span> <span data-ttu-id="ee87c-129">最上層的視窗可以設定為根據的每一像素透明度桌面上其他視窗與混合[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]內容。</span><span class="sxs-lookup"><span data-stu-id="ee87c-129">A top-level window can be configured to blend with the other windows on the desktop according to the per-pixel transparency of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content.</span></span> <span data-ttu-id="ee87c-130">若要啟用此功能，將<xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A>中的屬性<xref:System.Windows.Interop.HwndSourceParameters>至`true`。</span><span class="sxs-lookup"><span data-stu-id="ee87c-130">To enable this, set the <xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> property in the <xref:System.Windows.Interop.HwndSourceParameters> to `true`.</span></span> <span data-ttu-id="ee87c-131">這個屬性只能指定，在建構階段，並只能透過<xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29>建構函式簽章，而且加諸的幾項限制。</span><span class="sxs-lookup"><span data-stu-id="ee87c-131">This property can only be specified at construction time, and only through the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor signature, and it imposes several limitations.</span></span>  
  
 <span data-ttu-id="ee87c-132">您可以填入後<xref:System.Windows.Interop.HwndSourceParameters>結構，將它傳遞給<xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29>建構函式<xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-132">After you populate the <xref:System.Windows.Interop.HwndSourceParameters> structure, pass it to the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29> constructor for the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="ee87c-133">**物件存留期**</span><span class="sxs-lookup"><span data-stu-id="ee87c-133">**Object Lifetime**</span></span>  
  
 <span data-ttu-id="ee87c-134"><xref:System.Windows.Interop.HwndSource>為一般[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]物件，與它的存留期由記憶體回收行程。</span><span class="sxs-lookup"><span data-stu-id="ee87c-134">An <xref:System.Windows.Interop.HwndSource> is a regular [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, and its lifetime is managed by the garbage collector.</span></span> <span data-ttu-id="ee87c-135">因為<xref:System.Windows.Interop.HwndSource>表示 unmanaged 的資源，<xref:System.Windows.Interop.HwndSource>實作<xref:System.IDisposable>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-135">Because the <xref:System.Windows.Interop.HwndSource> represents an unmanaged resource, <xref:System.Windows.Interop.HwndSource> implements <xref:System.IDisposable>.</span></span> <span data-ttu-id="ee87c-136">以同步方式呼叫<xref:System.Windows.Interop.HwndSource.Dispose%2A>立即終結[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]視窗中，如果是從擁有者執行緒呼叫。</span><span class="sxs-lookup"><span data-stu-id="ee87c-136">Synchronously calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> immediately destroys the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window if called from the owner thread.</span></span> <span data-ttu-id="ee87c-137">如果從另一個執行緒呼叫，[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]視窗終結時以非同步的方式。</span><span class="sxs-lookup"><span data-stu-id="ee87c-137">If called from another thread, the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window is destroyed asynchronously.</span></span> <span data-ttu-id="ee87c-138">呼叫<xref:System.Windows.Interop.HwndSource.Dispose%2A>明確地從之間互通性的程式碼可能需要的特定互通案例。</span><span class="sxs-lookup"><span data-stu-id="ee87c-138">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios.</span></span>  
  
 <span data-ttu-id="ee87c-139">**視窗程序**</span><span class="sxs-lookup"><span data-stu-id="ee87c-139">**Window Procedures**</span></span>  
  
 <span data-ttu-id="ee87c-140"><xref:System.Windows.Interop.HwndSource>類別會實作自己的視窗程序。</span><span class="sxs-lookup"><span data-stu-id="ee87c-140">The <xref:System.Windows.Interop.HwndSource> class implements its own window procedure.</span></span> <span data-ttu-id="ee87c-141">這個視窗程序是用來處理重要的視窗訊息，例如與相關配置、 呈現和輸入。</span><span class="sxs-lookup"><span data-stu-id="ee87c-141">This window procedure is used to process important window messages, such as those related to layout, rendering, and input.</span></span> <span data-ttu-id="ee87c-142">不過，您也可以攔截的視窗程序供自己使用。</span><span class="sxs-lookup"><span data-stu-id="ee87c-142">However, you can also hook the window procedure for your own use.</span></span> <span data-ttu-id="ee87c-143">您也可以設定在建構期間指定您自己的攔截<xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType>屬性，或者您也可以使用<xref:System.Windows.Interop.HwndSource.AddHook%2A>和<xref:System.Windows.Interop.HwndSource.RemoveHook%2A>新增和移除攔截程序之後建立的視窗。</span><span class="sxs-lookup"><span data-stu-id="ee87c-143">You can specify your own hook during construction by setting the <xref:System.Windows.Interop.HwndSourceParameters.HwndSourceHook%2A?displayProperty=nameWithType> property, or you can also use <xref:System.Windows.Interop.HwndSource.AddHook%2A> and <xref:System.Windows.Interop.HwndSource.RemoveHook%2A> to add and remove hooks after the window is created.</span></span> <span data-ttu-id="ee87c-144">後進先出順序排列，這可讓您攔截程序來執行內建處理之前會呼叫攔截程序。</span><span class="sxs-lookup"><span data-stu-id="ee87c-144">The hooks are called by last-in first-out order, which enables your hooks to execute before the built-in processing.</span></span> <span data-ttu-id="ee87c-145">實際的攔截程序所持有的弱式參考。</span><span class="sxs-lookup"><span data-stu-id="ee87c-145">The actual hooks are held by a weak reference.</span></span> <span data-ttu-id="ee87c-146">因此，請確定您管理您的攔截程序委派的存留期。</span><span class="sxs-lookup"><span data-stu-id="ee87c-146">Therefore, make sure that you manage the lifetime of your hook delegate.</span></span>  
  
 <span data-ttu-id="ee87c-147">如需詳細資訊<xref:System.Windows.Interop.HwndSource>和其他互通的類別，請參閱[WPF 和 Win32 交互操作](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)。</span><span class="sxs-lookup"><span data-stu-id="ee87c-147">For more information about <xref:System.Windows.Interop.HwndSource> and other interoperation classes, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md).</span></span>  
  
 <span data-ttu-id="ee87c-148">請注意如何建構函式<xref:System.Windows.Interop.HwndSource>採用類似的參數的參數[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]函式，如[CreateWindowEx](http://go.microsoft.com/fwlink/?LinkID=98462)。</span><span class="sxs-lookup"><span data-stu-id="ee87c-148">Notice how the constructors for <xref:System.Windows.Interop.HwndSource> take parameters that resemble the parameters for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] functions such as [CreateWindowEx](http://go.microsoft.com/fwlink/?LinkID=98462).</span></span>  
  
 <span data-ttu-id="ee87c-149">縮放轉換應該不會套用到<xref:System.Windows.Interop.HwndSource.RootVisual%2A>的<xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-149">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="ee87c-150">請參閱備註<xref:System.Windows.Interop.HwndSource.RootVisual%2A>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-150">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-151">初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-151">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-152">網際網路安全性區域中，不可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee87c-152">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (System.Windows.Interop.HwndSourceParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Interop.HwndSourceParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As HwndSourceParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(System::Windows::Interop::HwndSourceParameters parameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : System.Windows.Interop.HwndSourceParameters -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="parameters" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="ee87c-153">結構，包含建立視窗所需的參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-153">A structure that contains the parameters that are required to create the window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-154">使用包含初始設定值的結構，初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-154">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class by using a structure that contains the initial settings.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-155">網際網路安全性區域中，不可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee87c-155">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="ee87c-156">此建構函式簽章可能在某些情況下，更方便，因為預設的結構包含一些適當的初始預設值。</span><span class="sxs-lookup"><span data-stu-id="ee87c-156">This constructor signature might be more convenient in certain situations, because the default structure contains some appropriate initial default values.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-157">如果您使用此簽章時，不會使用預設<xref:System.Windows.Interop.HwndSourceParameters>建構函式來建構<xref:System.Windows.Interop.HwndSourceParameters>結構`parameters`值。</span><span class="sxs-lookup"><span data-stu-id="ee87c-157">If you use this signature, do not use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor to construct the <xref:System.Windows.Interop.HwndSourceParameters> structure for the `parameters` value.</span></span> <span data-ttu-id="ee87c-158">您必須使用<xref:System.Windows.Interop.HwndSourceParameters>建構函式，可讓您指定 [初始] 視窗的名稱。</span><span class="sxs-lookup"><span data-stu-id="ee87c-158">You must use the <xref:System.Windows.Interop.HwndSourceParameters> constructor that enables you to specify an initial window name.</span></span> <span data-ttu-id="ee87c-159">如果您使用預設<xref:System.Windows.Interop.HwndSourceParameters>建構函式，並建立<xref:System.Windows.Interop.HwndSource>，<xref:System.Windows.Interop.HwndSource>不會顯示因為初始的視窗名稱建構的條件，就表示 HWND。</span><span class="sxs-lookup"><span data-stu-id="ee87c-159">If you use the default <xref:System.Windows.Interop.HwndSourceParameters> constructor and create an <xref:System.Windows.Interop.HwndSource> with it, that <xref:System.Windows.Interop.HwndSource> does not display because an initial window name is a construction requirement for the represented HWND.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-160">若要建立這個類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-160">to create instances of this class.</span>
          </span>
          <span data-ttu-id="ee87c-161">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-161">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, System::String ^ name, IntPtr parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * string * nativeint -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, name, parent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle">
          <span data-ttu-id="ee87c-162">視窗的 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 類別樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-162">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="ee87c-163">視窗的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-163">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span>
          </span>
        </param>
        <param name="exStyle">
          <span data-ttu-id="ee87c-164">視窗的延伸 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-164">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="ee87c-165">視窗左邊緣的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-165">The position of the window's left edge.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ee87c-166">視窗上邊緣的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-166">The position of the window's upper edge.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="ee87c-167">視窗的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-167">The name of the window.</span>
          </span>
        </param>
        <param name="parent">
          <span data-ttu-id="ee87c-168">這個視窗之父視窗的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-168">The handle of the window's parent window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-169">使用指定的類別樣式、樣式、延伸樣式、x-y 位置、名稱和父視窗，初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-169">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, name, and parent window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-170">網際網路安全性區域中，不可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee87c-170">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-171">若要建立這個類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-171">to create instances of this class.</span>
          </span>
          <span data-ttu-id="ee87c-172">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-172">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * int * int * string * nativeint -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, width, height, name, parent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="classStyle">
          <span data-ttu-id="ee87c-173">視窗的 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 類別樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-173">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="ee87c-174">視窗的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-174">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span>
          </span>
        </param>
        <param name="exStyle">
          <span data-ttu-id="ee87c-175">視窗的延伸 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-175">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="ee87c-176">視窗左邊緣的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-176">The position of the window's left edge.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ee87c-177">視窗上邊緣的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-177">The position of the window's upper edge.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="ee87c-178">視窗的寬度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-178">The width of the window.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="ee87c-179">視窗的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-179">The height of the window.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="ee87c-180">視窗的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-180">The name of the window.</span>
          </span>
        </param>
        <param name="parent">
          <span data-ttu-id="ee87c-181">這個視窗之父視窗的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-181">The handle of the window's parent window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-182">使用指定的類別樣式、樣式、延伸樣式、x-y 位置、寬度、高度、名稱和父視窗，初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-182">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-183">網際網路安全性區域中，不可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee87c-183">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-184">若要建立這個類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-184">to create instances of this class.</span>
          </span>
          <span data-ttu-id="ee87c-185">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-185">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSource (int classStyle, int style, int exStyle, int x, int y, int width, int height, string name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 classStyle, int32 style, int32 exStyle, int32 x, int32 y, int32 width, int32 height, string name, native int parent, bool adjustSizingForNonClientArea) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.IntPtr,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (classStyle As Integer, style As Integer, exStyle As Integer, x As Integer, y As Integer, width As Integer, height As Integer, name As String, parent As IntPtr, adjustSizingForNonClientArea As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSource(int classStyle, int style, int exStyle, int x, int y, int width, int height, System::String ^ name, IntPtr parent, bool adjustSizingForNonClientArea);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSource : int * int * int * int * int * int * int * string * nativeint * bool -&gt; System.Windows.Interop.HwndSource" Usage="new System.Windows.Interop.HwndSource (classStyle, style, exStyle, x, y, width, height, name, parent, adjustSizingForNonClientArea)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="classStyle" Type="System.Int32" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="exStyle" Type="System.Int32" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parent" Type="System.IntPtr" />
        <Parameter Name="adjustSizingForNonClientArea" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="classStyle">
          <span data-ttu-id="ee87c-186">視窗的 [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] 類別樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-186">The [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] class styles for the window.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="ee87c-187">視窗的 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-187">The [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span>
          </span>
        </param>
        <param name="exStyle">
          <span data-ttu-id="ee87c-188">視窗的延伸 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-188">The extended [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] styles for the window.</span>
          </span>
        </param>
        <param name="x">
          <span data-ttu-id="ee87c-189">視窗左邊緣的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-189">The position of the window's left edge.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="ee87c-190">視窗上邊緣的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-190">The position of the window's upper edge.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="ee87c-191">視窗的寬度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-191">The width of the window.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="ee87c-192">視窗的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-192">The height of the window.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="ee87c-193">視窗的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-193">The name of the window.</span>
          </span>
        </param>
        <param name="parent">
          <span data-ttu-id="ee87c-194">這個視窗之父視窗的控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-194">The handle of the window's parent window.</span>
          </span>
        </param>
        <param name="adjustSizingForNonClientArea">
          <span data-ttu-id="ee87c-195">
            <see langword="true" /> 表示配置管理員包含用於調整大小的非工作區 (Client Area)，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-195">
              <see langword="true" /> to have the layout manager include the non-client area for sizing; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-196">使用指定的類別樣式、樣式、延伸樣式、x-y 位置、寬度、高度、名稱和父視窗，以及指定視窗是否自動調整大小，初始化 <see cref="T:System.Windows.Interop.HwndSource" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-196">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSource" /> class with a specified class style, style, extended style, x-y position, width, height, name, and parent window, and by specifying whether the window is autosized.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-197">網際網路安全性區域中，不可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee87c-197">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-198">若要建立這個類別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-198">to create instances of this class.</span>
          </span>
          <span data-ttu-id="ee87c-199">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-199">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public bool AcquireHwndFocusInMenuMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcquireHwndFocusInMenuMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AcquireHwndFocusInMenuMode : bool" Usage="System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-200">取得值，這個值決定是否針對此 <see cref="T:System.Windows.Interop.HwndSource" />，為包含 WPF 的視窗取得 Win32 焦點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-200">Gets the value that determines whether to acquire Win32 focus for the WPF containing window for this <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-201">
            <see langword="true" /> 表示要在使用者與功能表互動時取得包含視窗之 WPF 的 Win32 焦點；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-201">
              <see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-202">當您建立時，這個值會設定<xref:System.Windows.Interop.HwndSource>藉由設定<xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A>參數。</span><span class="sxs-lookup"><span data-stu-id="ee87c-202">This value is set when you create the <xref:System.Windows.Interop.HwndSource> by setting the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> parameter.</span></span>  
  
 <span data-ttu-id="ee87c-203">預設值取決於<xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ee87c-203">The default value is determined by the <xref:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHook">
      <MemberSignature Language="C#" Value="public void AddHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberSignature Language="F#" Value="member this.AddHook : System.Windows.Interop.HwndSourceHook -&gt; unit" Usage="hwndSource.AddHook hook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook">
          <span data-ttu-id="ee87c-204">接收視窗訊息的處理常式實作 (依據 <see cref="T:System.Windows.Interop.HwndSourceHook" /> 委派)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-204">The handler implementation (based on the <see cref="T:System.Windows.Interop.HwndSourceHook" /> delegate) that receives the window messages.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-205">加入接收所有視窗訊息的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-205">Adds an event handler that receives all window messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-206">網際網路安全性區域中，不可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee87c-206">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="ee87c-207">大部分[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]訊息的觸達<xref:System.Windows.Interop.HwndSource>有近似[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]相等。</span><span class="sxs-lookup"><span data-stu-id="ee87c-207">Most [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] messages that reach the <xref:System.Windows.Interop.HwndSource> have an approximate [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span> <span data-ttu-id="ee87c-208">您使用<xref:System.Windows.Interop.HwndSource.AddHook%2A>若要處理其中訊息方塊沒有[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]相等。</span><span class="sxs-lookup"><span data-stu-id="ee87c-208">You use <xref:System.Windows.Interop.HwndSource.AddHook%2A> to handle the cases where the message has no [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] equivalent.</span></span>  
  
 <span data-ttu-id="ee87c-209"><xref:System.Windows.Interop.HwndSourceHook>委派類似的參數設定檔[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]主視窗程序。</span><span class="sxs-lookup"><span data-stu-id="ee87c-209">The <xref:System.Windows.Interop.HwndSourceHook> delegate resembles the parameter profile of a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] main window procedure.</span></span> <span data-ttu-id="ee87c-210">所有的視窗訊息的主要視窗程序<xref:System.Windows.Interop.HwndSource>父視窗會收到也會轉送至<xref:System.Windows.Interop.HwndSourceHook>委派。</span><span class="sxs-lookup"><span data-stu-id="ee87c-210">All window messages that the main window procedure of the <xref:System.Windows.Interop.HwndSource> parent window receives are also forwarded to the <xref:System.Windows.Interop.HwndSourceHook> delegates.</span></span>  
  
 <span data-ttu-id="ee87c-211">攔截程序會呼叫它們所加入的順序。</span><span class="sxs-lookup"><span data-stu-id="ee87c-211">Hooks are called in the order that they were added.</span></span> <span data-ttu-id="ee87c-212">如果傳回的任何攔截`handled` = `true`對於訊息，其後的勾點，以呼叫順序不會呼叫該訊息。</span><span class="sxs-lookup"><span data-stu-id="ee87c-212">If any hook returns `handled`=`true` for a message, the hooks after it in the call order are not called for that message.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-213">若要加入處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-213">to add handling.</span>
          </span>
          <span data-ttu-id="ee87c-214">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-214">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
        <altmember cref="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      </Docs>
    </Member>
    <Member MemberName="AutoResized">
      <MemberSignature Language="C#" Value="public event System.Windows.AutoResizedEventHandler AutoResized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.AutoResizedEventHandler AutoResized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.AutoResized" />
      <MemberSignature Language="VB.NET" Value="Public Event AutoResized As AutoResizedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::AutoResizedEventHandler ^ AutoResized;" />
      <MemberSignature Language="F#" Value="member this.AutoResized : System.Windows.AutoResizedEventHandler " Usage="member this.AutoResized : System.Windows.AutoResizedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.AutoResizedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-215">當進行配置而需要 <see cref="T:System.Windows.Interop.HwndSource" /> 自動調整大小時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-215">Occurs when layout causes the <see cref="T:System.Windows.Interop.HwndSource" /> to automatically resize.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-216">原生的行為<xref:System.Windows.Interop.HwndSource>自動調整內容和根據變更透過報告的視窗區域的大小是[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]版面配置系統。</span><span class="sxs-lookup"><span data-stu-id="ee87c-216">The native behavior of <xref:System.Windows.Interop.HwndSource> is to automatically resize content and the window region based on changes reported through the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] layout system.</span></span> <span data-ttu-id="ee87c-217">如果目前最小化，或如果視窗不會不會重新調整大小<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>設為<xref:System.Windows.SizeToContent.Manual>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-217">The window does not resize if it is currently minimized or if <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Manual>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildKeyboardInputSinks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Interop.IKeyboardInputSink&gt; ChildKeyboardInputSinks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildKeyboardInputSinks As IEnumerable(Of IKeyboardInputSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ ChildKeyboardInputSinks { System::Collections::Generic::IEnumerable&lt;System::Windows::Interop::IKeyboardInputSink ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildKeyboardInputSinks : seq&lt;System.Windows.Interop.IKeyboardInputSink&gt;" Usage="System.Windows.Interop.HwndSource.ChildKeyboardInputSinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__29))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1">
          <AttributeName>get: System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Windows.Interop.HwndSource/&lt;get_ChildKeyboardInputSinks&gt;d__24))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Interop.IKeyboardInputSink&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-218">取得註冊的輸入接收器序列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-218">Gets a sequence of registered input sinks.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-219">鍵盤輸入接收器的列舉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-219">An enumeration of keyboard input sinks.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.HwndTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.HwndTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As HwndTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::HwndTarget ^ CompositionTarget { System::Windows::Interop::HwndTarget ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CompositionTarget : System.Windows.Interop.HwndTarget" Usage="System.Windows.Interop.HwndSource.CompositionTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-220">取得所裝載之視窗的視覺管理員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-220">Gets the visual manager for the hosted window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-221">視覺管理員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-221">The visual manager.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-222">覆寫<xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A>若要覆寫值，<xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>傳回。</span><span class="sxs-lookup"><span data-stu-id="ee87c-222">Override <xref:System.Windows.Interop.HwndSource.GetCompositionTargetCore%2A> in order to override the value that <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A> returns.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateHandleRef">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.HandleRef CreateHandleRef ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Runtime.InteropServices.HandleRef CreateHandleRef() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.CreateHandleRef" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateHandleRef () As HandleRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Runtime::InteropServices::HandleRef CreateHandleRef();" />
      <MemberSignature Language="F#" Value="member this.CreateHandleRef : unit -&gt; System.Runtime.InteropServices.HandleRef" Usage="hwndSource.CreateHandleRef " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.HandleRef</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-223">取得 <see cref="T:System.Windows.Interop.HwndSource" /> 的視窗控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-223">Gets the window handle for the <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
          <span data-ttu-id="ee87c-224">視窗控制代碼會封裝為 <see cref="T:System.Runtime.InteropServices.HandleRef" /> 結構的一部分。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-224">The window handle is packaged as part of a <see cref="T:System.Runtime.InteropServices.HandleRef" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-225">包含這個 <see cref="T:System.Windows.Interop.HwndSource" /> 之視窗控制代碼的結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-225">A structure that contains the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-226">您可以使用取自的控制代碼<xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A>參考<xref:System.Windows.Interop.HwndSource>從[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]程式碼。</span><span class="sxs-lookup"><span data-stu-id="ee87c-226">You can use the handle that is obtained from <xref:System.Windows.Interop.HwndSource.CreateHandleRef%2A> to reference the <xref:System.Windows.Interop.HwndSource> from [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] code.</span></span> <span data-ttu-id="ee87c-227">使用作業，例如訊息處理和視窗行為的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="ee87c-227">Use the handle for operations such as message handling and window behavior.</span></span>  
  
 <span data-ttu-id="ee87c-228">若要取得的控制代碼，請使用<xref:System.Windows.Interop.HwndSource.Handle%2A>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-228">To get just the handle, use <xref:System.Windows.Interop.HwndSource.Handle%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.Handle" />
      </Docs>
    </Member>
    <Member MemberName="DefaultAcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public static bool DefaultAcquireHwndFocusInMenuMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultAcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool DefaultAcquireHwndFocusInMenuMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultAcquireHwndFocusInMenuMode : bool with get, set" Usage="System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-229">取得或設定 <see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> 之新執行個體的 <see cref="T:System.Windows.Interop.HwndSource" /> 預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-229">Gets or sets the default <see cref="P:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode" /> value for new instances of <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-230">
            <see langword="true" /> 表示要在使用者與功能表互動時取得包含視窗之 WPF 的 Win32 焦點；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-230">
              <see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="ee87c-231">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-231">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-232">新執行個體<xref:System.Windows.Interop.HwndSource>有<xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A>設為這個預設值，除非不同的值會當做參數傳遞給<xref:System.Windows.Interop.HwndSource>建構函式為特定的執行個體，使用<xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="ee87c-232">New instances of <xref:System.Windows.Interop.HwndSource> have <xref:System.Windows.Interop.HwndSource.AcquireHwndFocusInMenuMode%2A> set to this default value, unless a different value is passed as a parameter to the <xref:System.Windows.Interop.HwndSource> constructor for a specific instance, by using the <xref:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">
          <span data-ttu-id="ee87c-233">若要取得此屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-233">to get this property.</span>
          </span>
          <span data-ttu-id="ee87c-234">相關聯的列舉型別： <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-234">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="hwndSource.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-235">釋放 <see cref="T:System.Windows.Interop.HwndSource" /> 所使用的所有 Managed 資源，並引發 <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-235">Releases all managed resources that are used by the <see cref="T:System.Windows.Interop.HwndSource" />, and raises the <see cref="E:System.Windows.Interop.HwndSource.Disposed" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-236">網際網路安全性區域中，不可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee87c-236">This method is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="ee87c-237"><xref:System.Windows.Interop.HwndSource.Dispose%2A> 初始化相關的 HWND 的清除工作。</span><span class="sxs-lookup"><span data-stu-id="ee87c-237"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="ee87c-238">如果<xref:System.Windows.Interop.HwndSource.Dispose%2A>稱為透過不同於主要 UI 執行緒的執行緒，清理工作可能延後到就可以張貼到主要 UI 執行緒。</span><span class="sxs-lookup"><span data-stu-id="ee87c-238">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span>  
  
 <span data-ttu-id="ee87c-239">呼叫<xref:System.Windows.Interop.HwndSource.Dispose%2A>明確地從之間互通性的程式碼可能需要的特定互通案例中，因為<xref:System.Windows.Interop.HwndSource>在某些互通的案例中可以產生數個參考跨互通界限可能會導致及時記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="ee87c-239">Calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> explicitly from the interoperating code might be necessary for certain interoperation scenarios, because an <xref:System.Windows.Interop.HwndSource> in some interoperation scenarios can generate several references to it across the interoperation boundaries that might prevent timely garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Interop.HwndSource.IsDisposed" />
      </Docs>
    </Member>
    <Member MemberName="Disposed">
      <MemberSignature Language="C#" Value="public event EventHandler Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.Disposed" />
      <MemberSignature Language="VB.NET" Value="Public Event Disposed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Disposed;" />
      <MemberSignature Language="F#" Value="member this.Disposed : EventHandler " Usage="member this.Disposed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-240">在這個物件上呼叫 <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> 方法時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-240">Occurs when the <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> method is called on this object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-241"><xref:System.Windows.Interop.HwndSource.Disposed>之前的任何資源會釋出，就會引發事件<xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-241">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised before any resources are released by the <xref:System.Windows.Interop.HwndSource>.</span></span> <span data-ttu-id="ee87c-242"><xref:System.Windows.Interop.HwndSource.Disposed>事件表示，引發事件的物件是否即將有所有參考移除。</span><span class="sxs-lookup"><span data-stu-id="ee87c-242">The <xref:System.Windows.Interop.HwndSource.Disposed> event indicates that the object that raises the event is about to have all references to it removed.</span></span>  
  
 <span data-ttu-id="ee87c-243">使用<xref:System.Windows.Interop.HwndSource.Disposed>而<xref:System.Windows.Interop.HwndSource.IsDisposed%2A>屬性，以避免呼叫<xref:System.Windows.Interop.HwndSource.Dispose%2A>兩次 （這會引發例外狀況）。</span><span class="sxs-lookup"><span data-stu-id="ee87c-243">Use <xref:System.Windows.Interop.HwndSource.Disposed> and the <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> property to avoid calling <xref:System.Windows.Interop.HwndSource.Dispose%2A> twice (which raises an exception).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.HwndDpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.HwndDpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event DpiChanged As HwndDpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::HwndDpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.HwndDpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.HwndDpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.HwndDpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-244">發生於此 Hwnd 的螢幕 DPI 已變更時，或是將 Hwnd 移至不同 DPI 的螢幕時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-244">Occurs when the DPI of the monitor of this Hwnd has changed, or the Hwnd is moved to a monitor with a different DPI.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHwnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Interop.HwndSource FromHwnd (IntPtr hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Interop.HwndSource FromHwnd(native int hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHwnd (hwnd As IntPtr) As HwndSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Interop::HwndSource ^ FromHwnd(IntPtr hwnd);" />
      <MemberSignature Language="F#" Value="static member FromHwnd : nativeint -&gt; System.Windows.Interop.HwndSource" Usage="System.Windows.Interop.HwndSource.FromHwnd hwnd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hwnd">
          <span data-ttu-id="ee87c-245">提供的視窗控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-245">The provided window handle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-246">傳回指定之視窗的 <see cref="T:System.Windows.Interop.HwndSource" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-246">Returns the <see cref="T:System.Windows.Interop.HwndSource" /> object of the specified window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-247">
            <paramref name="hwnd" /> 視窗控制代碼指定之視窗的 <see cref="T:System.Windows.Interop.HwndSource" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-247">The <see cref="T:System.Windows.Interop.HwndSource" /> object for the window that is specified by the <paramref name="hwnd" /> window handle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-248">這個方法無法使用。 在網際網路安全性區域中，或針對部分信任一般來說</span><span class="sxs-lookup"><span data-stu-id="ee87c-248">This method is not available in the Internet security zone, or for partial trust in general.</span></span>  
  
 <span data-ttu-id="ee87c-249">您可以使用這個方法傳回<xref:System.Windows.Interop.HwndSource>不會明確地交互操作的視窗的視窗。</span><span class="sxs-lookup"><span data-stu-id="ee87c-249">You can use this method to return an <xref:System.Windows.Interop.HwndSource> for a window that is not explicitly an interoperation window.</span></span> <span data-ttu-id="ee87c-250">這個程序如下：</span><span class="sxs-lookup"><span data-stu-id="ee87c-250">The procedure for this is:</span></span>  
  
1.  <span data-ttu-id="ee87c-251">建立<xref:System.Windows.Interop.WindowInteropHelper>執行個體 (提供主要<xref:System.Windows.Window>做為建構函式參數)。</span><span class="sxs-lookup"><span data-stu-id="ee87c-251">Create a <xref:System.Windows.Interop.WindowInteropHelper> instance (providing the main <xref:System.Windows.Window> as a constructor parameter).</span></span>  
  
2.  <span data-ttu-id="ee87c-252">取得的值<xref:System.Windows.Interop.WindowInteropHelper.Handle%2A>屬性，從<xref:System.Windows.Interop.WindowInteropHelper>執行個體。</span><span class="sxs-lookup"><span data-stu-id="ee87c-252">Get the value of the <xref:System.Windows.Interop.WindowInteropHelper.Handle%2A> property from that <xref:System.Windows.Interop.WindowInteropHelper> instance.</span></span>  
  
3.  <span data-ttu-id="ee87c-253">做為參數傳遞該 HWND 值<xref:System.Windows.Interop.HwndSource.FromHwnd%2A>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-253">Pass that HWND value as a parameter to <xref:System.Windows.Interop.HwndSource.FromHwnd%2A>.</span></span>  
  
 <span data-ttu-id="ee87c-254">這個方法就很有用，如果您接著要加入一般<xref:System.Windows.Interop.HwndSource.AddHook%2A>處理視窗訊息。</span><span class="sxs-lookup"><span data-stu-id="ee87c-254">This technique can be useful if you then want to add general <xref:System.Windows.Interop.HwndSource.AddHook%2A> message processing to the window.</span></span> <span data-ttu-id="ee87c-255">不過，每當您建立<xref:System.Windows.Interop.HwndSource>，您也必須負責終結它。</span><span class="sxs-lookup"><span data-stu-id="ee87c-255">However, whenever you create an <xref:System.Windows.Interop.HwndSource>, you are also responsible for destroying it.</span></span> <span data-ttu-id="ee87c-256">這適用於即使<xref:System.Windows.Application>應用程式的物件<xref:System.Windows.Interop.HwndSource>處置。</span><span class="sxs-lookup"><span data-stu-id="ee87c-256">This is true even if the <xref:System.Windows.Application> object for an application <xref:System.Windows.Interop.HwndSource> is disposed.</span></span> <span data-ttu-id="ee87c-257">如需詳細資訊，請參閱 < 備註 > 上<xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-257">For more information, see Remarks on <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-258">呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-258">to call this method.</span>
          </span>
          <span data-ttu-id="ee87c-259">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-259">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Interop.WindowInteropHelper" />
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberSignature Language="F#" Value="override this.GetCompositionTargetCore : unit -&gt; System.Windows.Media.CompositionTarget" Usage="hwndSource.GetCompositionTargetCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-260">取得視窗的視覺目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-260">Gets the visual target of the window.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-261">傳回視窗的視覺目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-261">Returns the visual target of the window.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-262">預設實作會傳回相同結果<xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-262">The default implementation returns the same result as <xref:System.Windows.Interop.HwndSource.CompositionTarget%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ee87c-263">
            <para>實作此方法以傳回特定類型的視覺目標。<see cref="T:System.Windows.Interop.HwndSource" />實作此方法以傳回<see cref="T:System.Windows.Interop.HwndTarget" />。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-263">
              <para>Implement this method to return a type-specific visual target. <see cref="T:System.Windows.Interop.HwndSource" /> implements this method to return <see cref="T:System.Windows.Interop.HwndTarget" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Media.CompositionTarget" />
        <altmember cref="P:System.Windows.Interop.HwndSource.CompositionTarget" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Interop.HwndSource.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-264">取得這個 <see cref="T:System.Windows.Interop.HwndSource" /> 的視窗控制代碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-264">Gets the window handle for this <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-265">視窗控制代碼 (Window Handle)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-265">The window handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-266">網際網路安全性區域中，不可以使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="ee87c-266">This property is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-267">若要存取這個指標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-267">to access this pointer.</span>
          </span>
          <span data-ttu-id="ee87c-268">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-268">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="HasFocusWithinCore">
      <MemberSignature Language="C#" Value="protected virtual bool HasFocusWithinCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasFocusWithinCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.HasFocusWithinCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasFocusWithinCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HasFocusWithinCore();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithinCore : unit -&gt; bool&#xA;override this.HasFocusWithinCore : unit -&gt; bool" Usage="hwndSource.HasFocusWithinCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-269">取得值，這個值表示接收或其包含的其中一個元件是否有焦點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-269">Gets a value that indicates whether the sink or one of its contained components has focus.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-270">如果接收或其包含的其中一個元件有焦點則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-270">
              <see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public override bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDisposed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDisposed : bool" Usage="System.Windows.Interop.HwndSource.IsDisposed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-271">取得值，指出是否已針對這個 <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> 呼叫 <see cref="T:System.Windows.Interop.HwndSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-271">Gets a value that indicates whether <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> has been called on this <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-272">如果物件已針對它呼叫 <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-272">
              <see langword="true" /> if the object has had <see cref="M:System.Windows.Interop.HwndSource.Dispose" /> called on it; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-273"><xref:System.Windows.Interop.HwndSource.Dispose%2A> 初始化相關的 HWND 的清除工作。</span><span class="sxs-lookup"><span data-stu-id="ee87c-273"><xref:System.Windows.Interop.HwndSource.Dispose%2A> initiates related cleanup work for the HWND.</span></span> <span data-ttu-id="ee87c-274">如果<xref:System.Windows.Interop.HwndSource.Dispose%2A>稱為透過不同於主要 UI 執行緒的執行緒，清理工作可能延後到就可以張貼到主要 UI 執行緒。</span><span class="sxs-lookup"><span data-stu-id="ee87c-274">If <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called through a thread that is different from the main UI thread, the cleanup work may be deferred until it can be posted to the main UI thread.</span></span> <span data-ttu-id="ee87c-275"><xref:System.Windows.Interop.HwndSource.Disposed>就會引發事件，而<xref:System.Windows.Interop.HwndSource.IsDisposed%2A>會變成`false`只要<xref:System.Windows.Interop.HwndSource.Dispose%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="ee87c-275">The <xref:System.Windows.Interop.HwndSource.Disposed> event is raised and the value of <xref:System.Windows.Interop.HwndSource.IsDisposed%2A> becomes `false` as soon as <xref:System.Windows.Interop.HwndSource.Dispose%2A> is called.</span></span> <span data-ttu-id="ee87c-276">在此期間，如果您呼叫<xref:System.Windows.Interop.HwndSource.Dispose%2A>同樣地，<xref:System.Windows.Interop.HwndSource.Dispose%2A>引發例外狀況。</span><span class="sxs-lookup"><span data-stu-id="ee87c-276">During this time, if you call <xref:System.Windows.Interop.HwndSource.Dispose%2A> again, <xref:System.Windows.Interop.HwndSource.Dispose%2A> raises an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSource.Dispose" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSiteCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSiteCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
      <MemberSignature Language="VB.NET" Value="Protected Property KeyboardInputSiteCore As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSiteCore { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSiteCore : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.HwndSource.KeyboardInputSiteCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-277">取得或設定對元件容器之 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 介面的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-277">Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-278">容器的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 介面參考，如果沒有指派位置，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-278">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface; or <see langword="null" /> if no site is assigned.</span>
          </span>
          <span data-ttu-id="ee87c-279">預設值為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-279">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-280">若要設定此屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-280">to set this property.</span>
          </span>
          <span data-ttu-id="ee87c-281">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-281">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDpiChanged (System.Windows.HwndDpiChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDpiChanged(class System.Windows.HwndDpiChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnDpiChanged(System.Windows.HwndDpiChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDpiChanged (e As HwndDpiChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDpiChanged(System::Windows::HwndDpiChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDpiChanged : System.Windows.HwndDpiChangedEventArgs -&gt; unit&#xA;override this.OnDpiChanged : System.Windows.HwndDpiChangedEventArgs -&gt; unit" Usage="hwndSource.OnDpiChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.HwndDpiChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ee87c-282">事件引數</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-282">The event arguments</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-283">於視窗的 DPI 將變更時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-283">Called when the DPI is going to change for the window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-284">如果使用者可以處理這個事件，WPF 就不會調整任何視覺效果。</span><span class="sxs-lookup"><span data-stu-id="ee87c-284">If the user handles this event,         WPF does not scale any visuals.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-285">這個方法會存取重要資料<xref:System.Windows.Interop.HwndTarget>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-285">This method accesses critical data <xref:System.Windows.Interop.HwndTarget>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMnemonicCore">
      <MemberSignature Language="C#" Value="protected virtual bool OnMnemonicCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMnemonicCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMnemonicCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnMnemonicCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonicCore :  * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.OnMnemonicCore :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.OnMnemonicCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="ee87c-286">助憶鍵及其相關聯資料的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-286">The message for the mnemonic and associated data.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ee87c-287">輔助按鍵 (Modifier Key)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-287">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-288">當叫用這個接收的其中一個助憶鍵 (便捷鍵 (Access Key)) 時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-288">Called when one of the mnemonics (access keys) for this sink is invoked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-289">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-289">
              <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ee87c-290">
            <paramref name="msg" /> 並非 WM_KEYDOWN、WM_SYSKEYDOWN、WM_CHAR 或 WM_DEADCHAR。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-290">
              <paramref name="msg" /> is not WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR, or WM_DEADCHAR.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-291">呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-291">to call this method.</span>
          </span>
          <span data-ttu-id="ee87c-292">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-292">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSinkCore">
      <MemberSignature Language="C#" Value="protected System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Protected Function RegisterKeyboardInputSinkCore (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSinkCore(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="member this.RegisterKeyboardInputSinkCore : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="hwndSource.RegisterKeyboardInputSinkCore sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">
          <span data-ttu-id="ee87c-293">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-293">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-294">註冊所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-294">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-295">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站台。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-295">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-296">呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-296">to call this method.</span>
          </span>
          <span data-ttu-id="ee87c-297">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-297">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHook">
      <MemberSignature Language="C#" Value="public void RemoveHook (System.Windows.Interop.HwndSourceHook hook);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHook(class System.Windows.Interop.HwndSourceHook hook) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.RemoveHook(System.Windows.Interop.HwndSourceHook)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHook (hook As HwndSourceHook)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHook(System::Windows::Interop::HwndSourceHook ^ hook);" />
      <MemberSignature Language="F#" Value="member this.RemoveHook : System.Windows.Interop.HwndSourceHook -&gt; unit" Usage="hwndSource.RemoveHook hook" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hook" Type="System.Windows.Interop.HwndSourceHook" />
      </Parameters>
      <Docs>
        <param name="hook">
          <span data-ttu-id="ee87c-298">要移除的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-298">The event handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-299">移除由 <see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" /> 加入的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-299">Removes the event handlers that were added by <see cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="ee87c-300">網際網路安全性區域中，不可以使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="ee87c-300">This method is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-301">若要移除處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-301">to remove handlers.</span>
          </span>
          <span data-ttu-id="ee87c-302">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-302">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Interop.HwndSource.AddHook(System.Windows.Interop.HwndSourceHook)" />
        <altmember cref="T:System.Windows.Interop.HwndSourceHook" />
      </Docs>
    </Member>
    <Member MemberName="RestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode RestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode RestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreFocusMode : System.Windows.Input.RestoreFocusMode" Usage="System.Windows.Interop.HwndSource.RestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-303">取得視窗的 <see cref="T:System.Windows.Input.RestoreFocusMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-303">Gets the <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-304">視窗的 <see cref="T:System.Windows.Input.RestoreFocusMode" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-304">The <see cref="T:System.Windows.Input.RestoreFocusMode" /> for the window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-305">這個屬性可以設定只有<xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType>建構函式使用<xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="ee87c-305">This property can be set only in the <xref:System.Windows.Interop.HwndSource.%23ctor%28System.Windows.Interop.HwndSourceParameters%29?displayProperty=nameWithType> constructor by using the <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public override System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootVisual : System.Windows.Media.Visual with get, set" Usage="System.Windows.Interop.HwndSource.RootVisual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-306">取得或設定視窗的 <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-306">Gets or sets the <see cref="P:System.Windows.Media.CompositionTarget.RootVisual" /> of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-307">視窗的根視覺物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-307">The root visual object of the window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-308">使用這個屬性來連接<xref:System.Windows.Controls.Page>或 視覺效果，另一個根<xref:System.Windows.Interop.HwndSource>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-308">Use this property to connect a <xref:System.Windows.Controls.Page> or another root visual to the <xref:System.Windows.Interop.HwndSource>.</span></span>  
  
 <span data-ttu-id="ee87c-309">縮放轉換應該不會套用到<xref:System.Windows.Interop.HwndSource.RootVisual%2A>的<xref:System.Windows.Interop.HwndSource>因為這可以停用<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>行為。</span><span class="sxs-lookup"><span data-stu-id="ee87c-309">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource> because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="ee87c-310">內容會縮放，但不是會封入視窗。</span><span class="sxs-lookup"><span data-stu-id="ee87c-310">The content will scale, but the enclosing window will not.</span></span> <span data-ttu-id="ee87c-311">而不是將轉換套用至的物件<xref:System.Windows.Interop.HwndSource.RootVisual%2A>，將轉換套用至物件的子元素， <xref:System.Windows.Interop.HwndSource.RootVisual%2A>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-311">Instead of applying the transformation to the object that is the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>, apply the transformation to an object that is a child element of the <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span> <span data-ttu-id="ee87c-312">您可能需要新增額外封入項目[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]內容，例如面板中，以提供可調整的物件。</span><span class="sxs-lookup"><span data-stu-id="ee87c-312">You might need to add an extra enclosing element to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] content, such as a panel, in order to provide a scaleable object.</span></span>  
  
 <span data-ttu-id="ee87c-313">您可以新增<xref:System.Windows.Window>為根視覺效果，但只為最上層視窗 （含 WS_OVERLAPPED)，而不做為子視窗。</span><span class="sxs-lookup"><span data-stu-id="ee87c-313">You can add a <xref:System.Windows.Window> as the root visual, but only as a top-level window (with WS_OVERLAPPED), not as a child window.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-314">若要設定此屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-314">to set this property.</span>
          </span>
          <span data-ttu-id="ee87c-315">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-315">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Interop.HwndTarget.RootVisual" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Interop.HwndSource.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-316">取得或設定視窗是否以及如何調整至其內容大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-316">Get or sets whether and how the window is sized to its content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-317">其中一個列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-317">One of the enumeration values.</span>
          </span>
          <span data-ttu-id="ee87c-318">預設值為 <see cref="F:System.Windows.SizeToContent.Manual" />，指定視窗不會調整至其內容大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-318">The default value is <see cref="F:System.Windows.SizeToContent.Manual" />, which specifies that the window is not sized to its content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-319">使用者可能會間接設定此屬性透過應用程式 UI 中，如果應用程式所公開的功能。</span><span class="sxs-lookup"><span data-stu-id="ee87c-319">End users might indirectly set this property through application UI, if that functionality is exposed by the application.</span></span>  
  
 <span data-ttu-id="ee87c-320">縮放轉換應該不會套用到<xref:System.Windows.Interop.HwndSource.RootVisual%2A>的<xref:System.Windows.Interop.HwndSource>，因為這可以停用<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>行為。</span><span class="sxs-lookup"><span data-stu-id="ee87c-320">Scale transformations should not be applied to the <xref:System.Windows.Interop.HwndSource.RootVisual%2A> of an <xref:System.Windows.Interop.HwndSource>, because this can disable <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> behavior.</span></span> <span data-ttu-id="ee87c-321">請參閱備註<xref:System.Windows.Interop.HwndSource.RootVisual%2A>。</span><span class="sxs-lookup"><span data-stu-id="ee87c-321">See Remarks for <xref:System.Windows.Interop.HwndSource.RootVisual%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SizeToContentChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SizeToContentChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndSource.SizeToContentChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SizeToContentChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SizeToContentChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeToContentChanged : EventHandler " Usage="member this.SizeToContentChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-322">發生於 <see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> 屬性的值變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-322">Occurs when the value of the <see cref="P:System.Windows.Interop.HwndSource.SizeToContent" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-323"><xref:System.Windows.Interop.HwndSource.SizeToContentChanged>使用者互動會使變更時，才會引發事件。</span><span class="sxs-lookup"><span data-stu-id="ee87c-323">The <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is only raised when user interaction causes the change.</span></span> <span data-ttu-id="ee87c-324">如果您設定<xref:System.Windows.Window.SizeToContent%2A>程式碼中，<xref:System.Windows.Interop.HwndSource.SizeToContentChanged>不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="ee87c-324">If you set <xref:System.Windows.Window.SizeToContent%2A> in code, the <xref:System.Windows.Interop.HwndSource.SizeToContentChanged> event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Interop.HwndSource.AutoResized" />
        <altmember cref="P:System.Windows.Interop.HwndSource.SizeToContent" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Function HasFocusWithin () As Boolean Implements IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() = System::Windows::Interop::IKeyboardInputSink::HasFocusWithin;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-325">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-325">For a description of this member, see <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-326">如果接收或其包含的其中一個元件有焦點則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-326">
              <see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-327">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="ee87c-327">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ee87c-328">只有在 <xref:System.Windows.Interop.HwndSource> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="ee87c-328">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value=" Property KeyboardInputSite As IKeyboardInputSite Implements IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Interop::IKeyboardInputSite ^ System::Windows::Interop::IKeyboardInputSink::KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-329">如需這個成員的說明，請參閱 <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-329">For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-330">對容器之 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 介面的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-330">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-331">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="ee87c-331">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ee87c-332">只有在 <xref:System.Windows.Interop.HwndSource> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="ee87c-332">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ee87c-333">若要設定此屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-333">to set this property.</span>
          </span>
          <span data-ttu-id="ee87c-334">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-334">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.OnMnemonic">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.OnMnemonic" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::OnMnemonic;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="ee87c-335">助憶鍵及其相關聯資料的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-335">The message for the mnemonic and associated data.</span>
          </span>
          <span data-ttu-id="ee87c-336">請勿修改這個訊息結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-336">Do not modify this message structure.</span>
          </span>
          <span data-ttu-id="ee87c-337">參考僅基於效能考量而傳送它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-337">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ee87c-338">輔助按鍵 (Modifier Key)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-338">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-339">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-339">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-340">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-340">
              <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-341">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="ee87c-341">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ee87c-342">只有在 <xref:System.Windows.Interop.HwndSource> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="ee87c-342">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite IKeyboardInputSink.RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite Implements IKeyboardInputSink.RegisterKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink) = System::Windows::Interop::IKeyboardInputSink::RegisterKeyboardInputSink;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">
          <span data-ttu-id="ee87c-343">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-343">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-344">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-344">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-345">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站台。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-345">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-346">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="ee87c-346">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ee87c-347">只有在 <xref:System.Windows.Interop.HwndSource> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="ee87c-347">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-348">呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-348">to call this method.</span>
          </span>
          <span data-ttu-id="ee87c-349">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-349">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TabInto">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Function TabInto (request As TraversalRequest) As Boolean Implements IKeyboardInputSink.TabInto" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TabInto(System::Windows::Input::TraversalRequest ^ request) = System::Windows::Interop::IKeyboardInputSink::TabInto;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="ee87c-350">指定是否應將焦點設定為第一個或最後一個定位停駐點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-350">Specifies whether focus should be set to the first or the last tab stop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-351">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-351">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-352">如果已依照要求設定焦點則為 <see langword="true" />，如果沒有定位停駐點則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-352">
              <see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-353">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="ee87c-353">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ee87c-354">只有在 <xref:System.Windows.Interop.HwndSource> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="ee87c-354">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-355">呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-355">to call this method.</span>
          </span>
          <span data-ttu-id="ee87c-356">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-356">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateAccelerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="ee87c-357">訊息及相關聯資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-357">The message and associated data.</span>
          </span>
          <span data-ttu-id="ee87c-358">請勿修改這個結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-358">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="ee87c-359">參考僅基於效能考量而傳送它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-359">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ee87c-360">輔助按鍵 (Modifier Key)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-360">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-361">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-361">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-362">如果訊息由方法實作處理則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-362">
              <see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-363">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="ee87c-363">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ee87c-364">只有在 <xref:System.Windows.Interop.HwndSource> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="ee87c-364">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="ee87c-365">呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-365">to call this method.</span>
          </span>
          <span data-ttu-id="ee87c-366">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-366">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateChar">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateChar;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="ee87c-367">訊息及相關聯資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-367">The message and associated data.</span>
          </span>
          <span data-ttu-id="ee87c-368">請勿修改這個結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-368">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="ee87c-369">參考僅基於效能考量而傳送它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-369">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ee87c-370">輔助按鍵 (Modifier Key)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-370">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-371">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-371">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-372">如果已處理訊息則為 <see langword="true" />，此時不應呼叫 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-372">
              <see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-373">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="ee87c-373">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ee87c-374">只有在 <xref:System.Windows.Interop.HwndSource> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="ee87c-374">It can be used only when the <xref:System.Windows.Interop.HwndSource> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected virtual bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabIntoCore : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.TabIntoCore : System.Windows.Input.TraversalRequest -&gt; bool" Usage="hwndSource.TabIntoCore request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="ee87c-375">指定是否應將焦點設定為第一個或最後一個定位停駐點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-375">Specifies whether focus should be set to the first or the last tab stop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-376">將焦點設定在接收的第一個定位停駐點 (Tab Stop) 或最後一個定位停駐點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-376">Sets focus on either the first tab stop or the last tab stop of the sink.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-377">如果已依照要求設定焦點則為 <see langword="true" />，如果沒有定位停駐點則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-377">
              <see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ee87c-378">
            <paramref name="request" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-378">
              <paramref name="request" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAcceleratorCore :  * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.TranslateAcceleratorCore :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.TranslateAcceleratorCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="ee87c-379">訊息及相關聯資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-379">The message and associated data.</span>
          </span>
          <span data-ttu-id="ee87c-380">請勿修改這個結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-380">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="ee87c-381">參考僅基於效能考量而傳送它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-381">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ee87c-382">輔助按鍵 (Modifier Key)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-382">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-383">在按下按鍵時的訊息層級處理鍵盤輸入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-383">Processes keyboard input at the key-down message level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-384">如果訊息由方法實作處理則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-384">
              <see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-385">呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-385">to call this method.</span>
          </span>
          <span data-ttu-id="ee87c-386">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-386">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateCharCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateCharCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateCharCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSource.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateCharCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateCharCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateCharCore :  * System.Windows.Input.ModifierKeys -&gt; bool&#xA;override this.TranslateCharCore :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="hwndSource.TranslateCharCore (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="ee87c-387">訊息及相關聯資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-387">The message and associated data.</span>
          </span>
          <span data-ttu-id="ee87c-388">請勿修改這個結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-388">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="ee87c-389">參考僅基於效能考量而傳送它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-389">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="ee87c-390">輔助按鍵 (Modifier Key)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-390">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ee87c-391">先處理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 輸入訊息，接著呼叫 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-391">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ee87c-392">如果已處理訊息則為 <see langword="true" />，此時不應呼叫 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-392">
              <see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="ee87c-393">呼叫這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-393">to call this method.</span>
          </span>
          <span data-ttu-id="ee87c-394">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-394">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelOpacity">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelOpacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsesPerPixelOpacity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelOpacity { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesPerPixelOpacity : bool" Usage="System.Windows.Interop.HwndSource.UsesPerPixelOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ee87c-395">取得值，這個值會宣告是否遵守來源視窗內容之每像素的不透明度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-395">Gets a value that declares whether the per-pixel opacity of the source window content is respected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ee87c-396">如果系統採用每像素的不透明度則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ee87c-396">
              <see langword="true" /> if the system uses per-pixel opacity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ee87c-397">當您啟用每一像素的不透明度時，系統不會再繪製非工作區。</span><span class="sxs-lookup"><span data-stu-id="ee87c-397">When you enable per-pixel opacity, the system no longer draws the non-client area.</span></span> <span data-ttu-id="ee87c-398">這是因為的用途<xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A>是要說明非矩形的最上層 UI，適用於在互通案例中。</span><span class="sxs-lookup"><span data-stu-id="ee87c-398">This is because the intended purpose of <xref:System.Windows.Interop.HwndSource.UsesPerPixelOpacity%2A> is to show non-rectangular top-level UI that works in interoperation scenarios.</span></span> <span data-ttu-id="ee87c-399">因此，顯示該目的矩形的非工作區失效。</span><span class="sxs-lookup"><span data-stu-id="ee87c-399">Therefore, showing the rectangular non-client area defeats that purpose.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>