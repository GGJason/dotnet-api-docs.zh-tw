<Type Name="HwndSourceParameters" FullName="System.Windows.Interop.HwndSourceParameters">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="210d882b48e8756c475427d8293e8f7934382cc0" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51907580" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct HwndSourceParameters" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HwndSourceParameters extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndSourceParameters" />
  <TypeSignature Language="VB.NET" Value="Public Structure HwndSourceParameters" />
  <TypeSignature Language="C++ CLI" Value="public value class HwndSourceParameters" />
  <TypeSignature Language="F#" Value="type HwndSourceParameters = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="9487f-101">包含用於利用 <see cref="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" /> 建構函式建立 <see cref="T:System.Windows.Interop.HwndSource" /> 物件的參數。</span>
      <span class="sxs-lookup">
        <span data-stu-id="9487f-101">Contains the parameters that are used to create an <see cref="T:System.Windows.Interop.HwndSource" /> object using the <see cref="M:System.Windows.Interop.HwndSource.#ctor(System.Windows.Interop.HwndSourceParameters)" /> constructor.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-102">只有在使用這個結構<xref:System.Windows.Interop.HwndSource>物件建構函式呼叫。</span><span class="sxs-lookup"><span data-stu-id="9487f-102">This structure is used only in the <xref:System.Windows.Interop.HwndSource> object constructor call.</span></span>  
  
 <span data-ttu-id="9487f-103">這個結構來建立其值的屬性不會直接公開上<xref:System.Windows.Interop.HwndSource>執行個體時<xref:System.Windows.Interop.HwndSource>建構。</span><span class="sxs-lookup"><span data-stu-id="9487f-103">The properties whose values are established by this structure are not directly exposed on <xref:System.Windows.Interop.HwndSource> instances when an <xref:System.Windows.Interop.HwndSource> is constructed.</span></span> <span data-ttu-id="9487f-104">不過，值<xref:System.Windows.Interop.HwndSourceParameters>結構通常會影響一般[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]屬性，例如 「 高度 」 和 「 寬度 」，可能存在於特定的裝載物件，且其[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="9487f-104">However, the values of the <xref:System.Windows.Interop.HwndSourceParameters> structure typically affect general [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] properties such as "Height" and "Width" that might exist in specific hosted objects and their [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9487f-105">時，不會建立此結構，使用預設 （無參數） 建構函式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="9487f-105">Do not construct instances of this structure using the default (parameterless) constructor.</span></span> <span data-ttu-id="9487f-106"><xref:System.Windows.Interop.HwndSourceParameters>執行個體所建立的預設建構函式會導致<xref:System.Windows.Interop.HwndSourceParameters>無法指派<xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A>(即使<xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A>是可設定的屬性會出現)。</span><span class="sxs-lookup"><span data-stu-id="9487f-106">An <xref:System.Windows.Interop.HwndSourceParameters> instance that is created by the default constructor results in <xref:System.Windows.Interop.HwndSourceParameters> that cannot be assigned a <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (even though the <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> property appears to be settable).</span></span> <span data-ttu-id="9487f-107">如果要將這類執行個體套用做為參數<xref:System.Windows.Interop.HwndSource>建構函式，產生<xref:System.Windows.Interop.HwndSource>無法顯示視窗。</span><span class="sxs-lookup"><span data-stu-id="9487f-107">If such an instance is applied as the parameters for an <xref:System.Windows.Interop.HwndSource> constructor, the resulting <xref:System.Windows.Interop.HwndSource> cannot display a window.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-108">初始化 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-108">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class.</span>
          </span>
          <span data-ttu-id="9487f-109">請勿對 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 使用預設建構函式；請參閱＜備註＞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-109">Do not use the default constructor for <see cref="T:System.Windows.Interop.HwndSourceParameters" />; see Remarks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9487f-110">時，不會建立此結構，使用預設 （無參數） 建構函式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="9487f-110">Do not construct instances of this structure using the default (parameterless) constructor.</span></span> <span data-ttu-id="9487f-111"><xref:System.Windows.Interop.HwndSourceParameters>執行個體所建立的預設建構函式會導致<xref:System.Windows.Interop.HwndSourceParameters>無法指派<xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A>(即使<xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A>是可設定的屬性會出現)。</span><span class="sxs-lookup"><span data-stu-id="9487f-111">An <xref:System.Windows.Interop.HwndSourceParameters> instance that is created by the default constructor results in <xref:System.Windows.Interop.HwndSourceParameters> that cannot be assigned a <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (even though the <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> property appears to be settable).</span></span> <span data-ttu-id="9487f-112">如果要將這類執行個體套用做為參數<xref:System.Windows.Interop.HwndSource>建構函式，產生<xref:System.Windows.Interop.HwndSource>無法顯示視窗。</span><span class="sxs-lookup"><span data-stu-id="9487f-112">If such an instance is applied as the parameters for an <xref:System.Windows.Interop.HwndSource> constructor, the resulting <xref:System.Windows.Interop.HwndSource> cannot display a window.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSourceParameters (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSourceParameters(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSourceParameters : string -&gt; System.Windows.Interop.HwndSourceParameters" Usage="new System.Windows.Interop.HwndSourceParameters name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9487f-113">視窗的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-113">The window's name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9487f-114">使用指定的視窗名稱，初始化 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 類別 (Class) 的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-114">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class with a specified window name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HwndSourceParameters (string name, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HwndSourceParameters(System::String ^ name, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Windows.Interop.HwndSourceParameters : string * int * int -&gt; System.Windows.Interop.HwndSourceParameters" Usage="new System.Windows.Interop.HwndSourceParameters (name, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="9487f-115">視窗的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-115">The window's name.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="9487f-116">視窗的寬度 (以像素為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-116">The window's width, in pixels.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="9487f-117">視窗的高度 (以像素為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-117">The window's height, in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9487f-118">使用指定的視窗名稱和初始大小，初始化 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-118">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndSourceParameters" /> class with a specified window name and initial size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-119">請勿將 0 （零） 傳遞為兩者`width`或`height`參數。</span><span class="sxs-lookup"><span data-stu-id="9487f-119">Do not pass 0 (zero) for either the `width` or `height` parameters.</span></span> <span data-ttu-id="9487f-120">雖然方法最後會成功，即使您傳遞 0，就會發生顯著的效能負面影響。</span><span class="sxs-lookup"><span data-stu-id="9487f-120">Although the method eventually succeeds, even if you do pass 0, a significant performance penalty occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="AcquireHwndFocusInMenuMode">
      <MemberSignature Language="C#" Value="public bool AcquireHwndFocusInMenuMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AcquireHwndFocusInMenuMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcquireHwndFocusInMenuMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcquireHwndFocusInMenuMode : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.AcquireHwndFocusInMenuMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-121">取得或設定值，這個值決定是否在建立 <see cref="T:System.Windows.Interop.HwndSource" /> 時，為包含 WPF 的視窗取得 Win32 焦點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-121">Gets or sets the value that determines whether to acquire Win32 focus for the WPF containing window when an <see cref="T:System.Windows.Interop.HwndSource" /> is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-122">
            <see langword="true" /> 表示要在使用者與功能表互動時取得包含視窗之 WPF 的 Win32 焦點；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-122">
              <see langword="true" /> to acquire Win32 focus for the WPF containing window when the user interacts with menus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9487f-123">
            <see langword="null" /> 表示使用 <see cref="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" /> 的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-123">
              <see langword="null" /> to use the value of <see cref="P:System.Windows.Interop.HwndSource.DefaultAcquireHwndFocusInMenuMode" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustSizingForNonClientArea">
      <MemberSignature Language="C#" Value="public bool AdjustSizingForNonClientArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AdjustSizingForNonClientArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea" />
      <MemberSignature Language="VB.NET" Value="Public Property AdjustSizingForNonClientArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AdjustSizingForNonClientArea { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AdjustSizingForNonClientArea : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.AdjustSizingForNonClientArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-124">取得或設定值，這個值表示是否包含要調整的非工作區大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-124">Gets or sets a value that indicates whether to include the nonclient area for sizing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-125">如果配置管理員調整大小邏輯應包括非工作區則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-125">
              <see langword="true" /> if the layout manager sizing logic should include the nonclient area; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9487f-126">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-126">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-127"><xref:System.Windows.Window>類別會將此參數設定為`true`一部分就內部而言，使用這個結構時其[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]視窗建立程序。</span><span class="sxs-lookup"><span data-stu-id="9487f-127">The <xref:System.Windows.Window> class sets this parameter to `true` when using this structure internally, as part of its [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] window-creation process.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.PositionX" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.PositionY" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-128">判斷這個結構是否等於指定的結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-128">Determines whether this structure is equal to a specified structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="hwndSourceParameters.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9487f-129">要測試是否相等的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-129">The objects to be tested for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9487f-130">判斷這個結構是否等於指定的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-130">Determines whether this structure is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9487f-131">如果比較結果相等則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-131">
              <see langword="true" /> if the comparison is equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-132">此實作會檢查這兩個結構確實的值相等的所有成員 （公用和私用）。</span><span class="sxs-lookup"><span data-stu-id="9487f-132">This implementation checks all members (public and private) of both structures for exact value equality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Interop.HwndSourceParameters obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Interop.HwndSourceParameters obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Interop::HwndSourceParameters obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Interop.HwndSourceParameters -&gt; bool" Usage="hwndSourceParameters.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9487f-133">要測試是否相等的結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-133">The structure to be tested for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9487f-134">判斷這個結構是否等於指定的 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-134">Determines whether this structure is equal to a specified <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9487f-135">如果這兩個結構相等則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-135">
              <see langword="true" /> if the structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-136">此實作會檢查這兩個結構確實的值相等的所有成員 （公用和私用）。</span><span class="sxs-lookup"><span data-stu-id="9487f-136">This implementation checks all members (public and private) of both structures for exact value equality.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedWindowStyle">
      <MemberSignature Language="C#" Value="public int ExtendedWindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExtendedWindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedWindowStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExtendedWindowStyle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedWindowStyle : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.ExtendedWindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-137">取得或設定視窗的延伸 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-137">Gets or sets the extended [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] styles for the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-138">延伸的視窗樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-138">The extended window styles.</span>
          </span>
          <span data-ttu-id="9487f-139">請參閱[CreateWindowEx](https://go.microsoft.com/fwlink/?LinkId=98462)如需這些樣式的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-139">See [CreateWindowEx](https://go.microsoft.com/fwlink/?LinkId=98462) for a list of these styles.</span>
          </span>
          <span data-ttu-id="9487f-140">預設為 0 (沒有延伸的視窗樣式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-140">The default is 0 (no extended window styles).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="hwndSourceParameters.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9487f-141">傳回這個 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 執行個體的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-141">Returns the hash code for this <see cref="T:System.Windows.Interop.HwndSourceParameters" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9487f-142">32 位元帶正負號的整數雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-142">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-143">這個實作會使用 GetHashCode 物件實作。</span><span class="sxs-lookup"><span data-stu-id="9487f-143">This implementation uses the Object implementation of GetHashCode.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAssignedSize">
      <MemberSignature Language="C#" Value="public bool HasAssignedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAssignedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.HasAssignedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAssignedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAssignedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAssignedSize : bool" Usage="System.Windows.Interop.HwndSourceParameters.HasAssignedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-144">取得值，這個值表示是否已指派大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-144">Gets a value that indicates whether a size was assigned.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-145">如果已指派視窗大小則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-145">
              <see langword="true" /> if the window size was assigned; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9487f-146">除非結構是使用提供的高度和寬度所建立 (這種情況下，該值為 <see langword="true" />)，否則會預設為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-146">The default is <see langword="false" />, unless the structure was created with provided height and width, in which case the value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-147">如果未指派的大小，視窗會有預設的大小。</span><span class="sxs-lookup"><span data-stu-id="9487f-147">If a size was not assigned, the window has the default size.</span></span>  
  
 <span data-ttu-id="9487f-148">呼叫<xref:System.Windows.Interop.HwndSourceParameters.SetSize%2A>或 設定<xref:System.Windows.Interop.HwndSourceParameters.Width%2A>或是<xref:System.Windows.Interop.HwndSourceParameters.Height%2A>所有導致此屬性所`true`。</span><span class="sxs-lookup"><span data-stu-id="9487f-148">Calls to <xref:System.Windows.Interop.HwndSourceParameters.SetSize%2A> or setting <xref:System.Windows.Interop.HwndSourceParameters.Width%2A> or <xref:System.Windows.Interop.HwndSourceParameters.Height%2A> all result in this property being `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Height : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-149">取得或設定值，這個值表示視窗的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-149">Gets or sets a value that indicates the height of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-150">視窗的高度 (以裝置像素為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-150">The height of the window, in device pixels.</span>
          </span>
          <span data-ttu-id="9487f-151">預設值為 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-151">The default value is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-152">不同於採用矩形螢幕區域量值中的大部分方法[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]，您指定裝置像素，不一般的裝置獨立單位中的此視窗大小。</span><span class="sxs-lookup"><span data-stu-id="9487f-152">Unlike most methods that take rectangle screen-region measures in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], you specify this window size in device pixels, not the typical device-independent units.</span></span> <span data-ttu-id="9487f-153">如果您需要調整您的視窗，其內容的大小，將<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="9487f-153">If you need to size your window to its content, set <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> to `true`.</span></span>  
  
 <span data-ttu-id="9487f-154">請勿設定<xref:System.Windows.Interop.HwndSourceParameters.Height%2A>設為 0 （零）。</span><span class="sxs-lookup"><span data-stu-id="9487f-154">Do not set <xref:System.Windows.Interop.HwndSourceParameters.Height%2A> to 0 (zero).</span></span> <span data-ttu-id="9487f-155">如此一來，就會產生顯著的效能負面影響，在轉譯。</span><span class="sxs-lookup"><span data-stu-id="9487f-155">Doing so incurs a significant performance penalty in rendering.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="HwndSourceHook">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.HwndSourceHook HwndSourceHook { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.HwndSourceHook HwndSourceHook" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.HwndSourceHook" />
      <MemberSignature Language="VB.NET" Value="Public Property HwndSourceHook As HwndSourceHook" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::HwndSourceHook ^ HwndSourceHook { System::Windows::Interop::HwndSourceHook ^ get(); void set(System::Windows::Interop::HwndSourceHook ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HwndSourceHook : System.Windows.Interop.HwndSourceHook with get, set" Usage="System.Windows.Interop.HwndSourceParameters.HwndSourceHook" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSourceHook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-156">取得或設定視窗的訊息勾點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-156">Gets or sets the message hook for the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-157">視窗的訊息勾點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-157">The message hook for the window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-158">此訊息攔截程序已啟用，才能`CreateWindow`稱為使它收到所有的視窗建立訊息。</span><span class="sxs-lookup"><span data-stu-id="9487f-158">This message hook is enabled before `CreateWindow` is called so that it receives all the window creation messages.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Interop.HwndSourceParameters a, System.Windows.Interop.HwndSourceParameters b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Interop.HwndSourceParameters a, valuetype System.Windows.Interop.HwndSourceParameters b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.op_Equality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As HwndSourceParameters, b As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Interop::HwndSourceParameters a, System::Windows::Interop::HwndSourceParameters b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Interop.HwndSourceParameters * System.Windows.Interop.HwndSourceParameters -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Interop.HwndSourceParameters" />
        <Parameter Name="b" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="9487f-159">要比較的第一個 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-159">The first <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="9487f-160">要比較的第二個 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-160">The second <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9487f-161">判斷 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 結構是否等於另一個 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-161">Determines whether an <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure is equal to another <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9487f-162">如果這兩個結構相等則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-162">
              <see langword="true" /> if the structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-163">這個實作會呼叫<xref:System.Windows.Interop.HwndSourceParameters.Equals%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9487f-163">This implementation calls the <xref:System.Windows.Interop.HwndSourceParameters.Equals%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Interop.HwndSourceParameters a, System.Windows.Interop.HwndSourceParameters b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Interop.HwndSourceParameters a, valuetype System.Windows.Interop.HwndSourceParameters b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.op_Inequality(System.Windows.Interop.HwndSourceParameters,System.Windows.Interop.HwndSourceParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As HwndSourceParameters, b As HwndSourceParameters) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Interop::HwndSourceParameters a, System::Windows::Interop::HwndSourceParameters b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Interop.HwndSourceParameters * System.Windows.Interop.HwndSourceParameters -&gt; bool" Usage="System.Windows.Interop.HwndSourceParameters.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Windows.Interop.HwndSourceParameters" />
        <Parameter Name="b" Type="System.Windows.Interop.HwndSourceParameters" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="9487f-164">要比較的第一個 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-164">The first <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="9487f-165">要比較的第二個 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-165">The second <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9487f-166">判斷 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 結構是否不等於另一個 <see cref="T:System.Windows.Interop.HwndSourceParameters" /> 結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-166">Determines whether an <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure is not equal to another <see cref="T:System.Windows.Interop.HwndSourceParameters" /> structure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9487f-167">如果兩個結構不相等，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-167">
              <see langword="true" /> if the structures are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-168">這個實作會呼叫<xref:System.Windows.Interop.HwndSourceParameters.Equals%2A>方法和反轉結果。</span><span class="sxs-lookup"><span data-stu-id="9487f-168">This implementation calls the <xref:System.Windows.Interop.HwndSourceParameters.Equals%2A> method and inverts the result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindow">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.ParentWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindow As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindow { IntPtr get(); void set(IntPtr value); };" />
      <MemberSignature Language="F#" Value="member this.ParentWindow : nativeint with get, set" Usage="System.Windows.Interop.HwndSourceParameters.ParentWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-169">取得或設定所建立視窗之父系的視窗控制代碼 (HWND)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-169">Gets or sets the window handle (HWND) of the parent for the created window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-170">父視窗的 HWND。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-170">The HWND of the parent window.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="PositionX">
      <MemberSignature Language="C#" Value="public int PositionX { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionX" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.PositionX" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionX As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionX { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PositionX : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.PositionX" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-171">取得或設定視窗的左邊緣位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-171">Gets or sets the left-edge position of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-172">視窗的左邊緣位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-172">The left-edge position of the window.</span>
          </span>
          <span data-ttu-id="9487f-173">處理，預設值是 CW_USEDEFAULT <c>CreateWindow</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-173">The default is CW_USEDEFAULT, as processed by <c>CreateWindow</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="PositionY">
      <MemberSignature Language="C#" Value="public int PositionY { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionY" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.PositionY" />
      <MemberSignature Language="VB.NET" Value="Public Property PositionY As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PositionY { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PositionY : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.PositionY" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-174">取得或設定視窗的上邊緣位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-174">Gets or sets the upper-edge position of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-175">視窗的上邊緣位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-175">The upper-edge position of the window.</span>
          </span>
          <span data-ttu-id="9487f-176">處理，預設值是 CW_USEDEFAULT <c>CreateWindow</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-176">The default is CW_USEDEFAULT, as processed by <c>CreateWindow</c>.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="RestoreFocusMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.RestoreFocusMode RestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.RestoreFocusMode RestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::RestoreFocusMode RestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.RestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Interop.HwndSourceParameters.RestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-177">取得或設定 WPF 將焦點還原至視窗的處理方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-177">Gets or sets how WPF handles restoring focus to the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-178">一個列舉值，指定 WPF 將焦點還原至視窗的方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-178">One of the enumeration values that specifies how WPF handles restoring focus for the window.</span>
          </span>
          <span data-ttu-id="9487f-179">預設值為 <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-179">The default is <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-180">WPF 會自動嘗試將焦點還原至視窗，除非<xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A>設為<xref:System.Windows.Input.RestoreFocusMode.None>。</span><span class="sxs-lookup"><span data-stu-id="9487f-180">WPF automatically tries to restore focus to the window unless <xref:System.Windows.Interop.HwndSourceParameters.RestoreFocusMode%2A> is set to <xref:System.Windows.Input.RestoreFocusMode.None>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPosition">
      <MemberSignature Language="C#" Value="public void SetPosition (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPosition(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.SetPosition(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPosition (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPosition(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.SetPosition : int * int -&gt; unit" Usage="hwndSourceParameters.SetPosition (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="9487f-181">視窗左邊緣的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-181">The position of the left edge of the window.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="9487f-182">視窗上邊緣的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-182">The position of the upper edge of the window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9487f-183">設定用於 <see cref="T:System.Windows.Interop.HwndSource" /> 視窗之螢幕位置的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-183">Sets the values that are used for the screen position of the window for the <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="SetSize">
      <MemberSignature Language="C#" Value="public void SetSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSize (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSize(int width, int height);" />
      <MemberSignature Language="F#" Value="member this.SetSize : int * int -&gt; unit" Usage="hwndSourceParameters.SetSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="9487f-184">視窗的寬度 (以裝置像素為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-184">The width of the window, in device pixels.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="9487f-185">視窗的高度 (以裝置像素為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-185">The height of the window, in device pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9487f-186">設定用於 <see cref="T:System.Windows.Interop.HwndSource" /> 視窗大小的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-186">Sets the values that are used for the window size of the <see cref="T:System.Windows.Interop.HwndSource" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-187">不同於採用矩形螢幕區域量值中的大部分方法[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]，裝置的像素，但卻在一般的裝置獨立單位，指定此視窗大小。</span><span class="sxs-lookup"><span data-stu-id="9487f-187">Unlike most methods that take rectangle screen-region measures in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], you specify this window size in device pixels, not in the typical device-independent units.</span></span> <span data-ttu-id="9487f-188">如果您需要調整您的視窗，其內容的大小，將<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="9487f-188">If you need to size your window to its content, set <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> to `true`.</span></span>  
  
 <span data-ttu-id="9487f-189">請勿將 0 （零） 傳遞為兩者`width`或`height`參數。</span><span class="sxs-lookup"><span data-stu-id="9487f-189">Do not pass 0 (zero) for either the `width` or `height` parameters.</span></span> <span data-ttu-id="9487f-190">雖然即使您傳遞 0，最後順利完成的方法，就會發生效能帶來負面影響。</span><span class="sxs-lookup"><span data-stu-id="9487f-190">Although the method eventually succeeds even if you do pass 0, a substantial performance penalty occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.Height" />
        <altmember cref="P:System.Windows.Interop.HwndSourceParameters.Width" />
      </Docs>
    </Member>
    <Member MemberName="TreatAncestorsAsNonClientArea">
      <MemberSignature Language="C#" Value="public bool TreatAncestorsAsNonClientArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatAncestorsAsNonClientArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.TreatAncestorsAsNonClientArea" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatAncestorsAsNonClientArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatAncestorsAsNonClientArea { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatAncestorsAsNonClientArea : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.TreatAncestorsAsNonClientArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-191">取得或設定值，指出 <see cref="T:System.Windows.Interop.HwndSource" /> 的父視窗在配置階段是否應視為視窗的非工作區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-191">Gets or sets a value that indicates whether the parent windows of the <see cref="T:System.Windows.Interop.HwndSource" /> should be considered the non-client area of the window during layout passes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-192">如果 <see cref="T:System.Windows.Interop.HwndSource" /> 的父視窗在配置階段應視為視窗的非工作區，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-192">
              <see langword="true" /> if parent windows of the <see cref="T:System.Windows.Interop.HwndSource" /> should be considered the non-client area of the window during layout passes.; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9487f-193">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-193">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TreatAsInputRoot">
      <MemberSignature Language="C#" Value="public bool TreatAsInputRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatAsInputRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.TreatAsInputRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatAsInputRoot As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatAsInputRoot { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.TreatAsInputRoot : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.TreatAsInputRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-194">取得或設定值，指出 <see cref="T:System.Windows.Interop.HwndSource" /> 是否應該會收到訊息幫浦透過 <see cref="T:System.Windows.Interop.ComponentDispatcher" /> 所引發的視窗訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-194">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Interop.HwndSource" /> should receive window messages raised by the message pump via the <see cref="T:System.Windows.Interop.ComponentDispatcher" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-195">如果 <see cref="T:System.Windows.Interop.HwndSource" /> 應該會收到訊息幫浦透過 <see cref="T:System.Windows.Interop.ComponentDispatcher" /> 所引發的視窗訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-195">
              <see langword="true" /> if the <see cref="T:System.Windows.Interop.HwndSource" /> should receive window messages raised by the message pump via the <see cref="T:System.Windows.Interop.ComponentDispatcher" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9487f-196">預設是 <see langword="true" />，如果 <see cref="T:System.Windows.Interop.HwndSource" /> 對應至最上層視窗；否則預設是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-196">The default is <see langword="true" /> if the <see cref="T:System.Windows.Interop.HwndSource" /> corresponds to a top-level window; otherwise, the default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelOpacity">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesPerPixelOpacity As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelOpacity { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesPerPixelOpacity : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-197">取得值，這個值會宣告是否遵守來源視窗內容之每像素的不透明度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-197">Gets a value that declares whether the per-pixel opacity of the source window content is respected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-198">如果使用每個像素的不透明度則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-198">
              <see langword="true" /> if using per-pixel opacity; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-199">藉由啟用每一像素的不透明度，系統不會再繪製非工作區。</span><span class="sxs-lookup"><span data-stu-id="9487f-199">By enabling per-pixel opacity, the system no longer draws the non-client area.</span></span>  
  
 <span data-ttu-id="9487f-200">在繪製在桌面上的視窗時使用的不透明度 (它表示最終呈現的步驟，並不會出現屬性值參與者這類<xref:System.Windows.UIElement.Opacity%2A>)。</span><span class="sxs-lookup"><span data-stu-id="9487f-200">The opacity is used when the window is drawn on the desktop (it represents a final rendering step and does not appear as a contributor to property values such as <xref:System.Windows.UIElement.Opacity%2A>).</span></span>  
  
 <span data-ttu-id="9487f-201"><xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> 僅適用於最上層視窗。</span><span class="sxs-lookup"><span data-stu-id="9487f-201"><xref:System.Windows.Interop.HwndSourceParameters.UsesPerPixelOpacity%2A> applies only to top-level windows.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="UsesPerPixelTransparency">
      <MemberSignature Language="C#" Value="public bool UsesPerPixelTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesPerPixelTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.UsesPerPixelTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property UsesPerPixelTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UsesPerPixelTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UsesPerPixelTransparency : bool with get, set" Usage="System.Windows.Interop.HwndSourceParameters.UsesPerPixelTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-202">取得值，這個值會宣告是否遵守來源視窗內容之每像素的不透明度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-202">Gets a value that declares whether the per-pixel transparency of the source window content is respected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-203">如果使用個別像素透明度，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-203">
              <see langword="true" /> if using per-pixel transparency; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Width : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-204">取得或設定值，這個值表示視窗的寬度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-204">Gets or sets a value that indicates the width of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-205">視窗寬度 (以裝置像素為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-205">The window width, in device pixels.</span>
          </span>
          <span data-ttu-id="9487f-206">預設值為 1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-206">The default value is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-207">不同於採用矩形螢幕區域量值中的大部分方法[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]，裝置的像素，但卻在一般的裝置獨立單位，指定這個視窗的大小。</span><span class="sxs-lookup"><span data-stu-id="9487f-207">Unlike most methods that take rectangle screen region measures in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], you specify this window's size in device pixels, not in the usual device-independent units.</span></span> <span data-ttu-id="9487f-208">如果您需要調整您的視窗，其內容的大小，將<xref:System.Windows.Interop.HwndSource.SizeToContent%2A>至`true`。</span><span class="sxs-lookup"><span data-stu-id="9487f-208">If you need to size your window to its content, set <xref:System.Windows.Interop.HwndSource.SizeToContent%2A> to `true`.</span></span>  
  
 <span data-ttu-id="9487f-209">請勿設定<xref:System.Windows.Interop.HwndSourceParameters.Width%2A>設為 0 （零）。</span><span class="sxs-lookup"><span data-stu-id="9487f-209">Do not set <xref:System.Windows.Interop.HwndSourceParameters.Width%2A> to 0 (zero).</span></span> <span data-ttu-id="9487f-210">如此一來，就會產生在轉譯的大幅效能產生負面影響。</span><span class="sxs-lookup"><span data-stu-id="9487f-210">Doing so incurs a substantial performance penalty in rendering.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.HwndSourceParameters.SetSize(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="WindowClassStyle">
      <MemberSignature Language="C#" Value="public int WindowClassStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowClassStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowClassStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowClassStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowClassStyle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowClassStyle : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.WindowClassStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-211">取得或設定視窗的 [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] 類別樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-211">Gets or sets the [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] class style for the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-212">視窗的類別樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-212">The window class style.</span>
          </span>
          <span data-ttu-id="9487f-213">請參閱[視窗類別樣式](https://go.microsoft.com/fwlink/?LinkId=178417)如需詳細資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-213">See [Window Class Styles](https://go.microsoft.com/fwlink/?LinkId=178417) for detailed information.</span>
          </span>
          <span data-ttu-id="9487f-214">預設為 0 (沒有視窗類別樣式)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-214">The default is 0 (no window class style).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="WindowName">
      <MemberSignature Language="C#" Value="public string WindowName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WindowName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowName" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WindowName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WindowName : string with get, set" Usage="System.Windows.Interop.HwndSourceParameters.WindowName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-215">取得或設定視窗的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-215">Gets or sets the name of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-216">視窗名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-216">The window name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="9487f-217">時，不會建立此結構，使用預設 （無參數） 建構函式的執行個體。</span><span class="sxs-lookup"><span data-stu-id="9487f-217">Do not construct instances of this structure using the default (parameterless) constructor.</span></span> <span data-ttu-id="9487f-218"><xref:System.Windows.Interop.HwndSourceParameters>執行個體所建立的預設建構函式會導致<xref:System.Windows.Interop.HwndSourceParameters>無法指派<xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A>(即使<xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A>是可設定的屬性會出現)。</span><span class="sxs-lookup"><span data-stu-id="9487f-218">An <xref:System.Windows.Interop.HwndSourceParameters> instance that is created by the default constructor results in <xref:System.Windows.Interop.HwndSourceParameters> that cannot be assigned a <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> (even though the <xref:System.Windows.Interop.HwndSourceParameters.WindowName%2A> property appears to be settable).</span></span> <span data-ttu-id="9487f-219">如果要將這類執行個體套用做為參數<xref:System.Windows.Interop.HwndSource>建構函式，產生<xref:System.Windows.Interop.HwndSource>無法顯示視窗。</span><span class="sxs-lookup"><span data-stu-id="9487f-219">If such an instance is applied as the parameters for an <xref:System.Windows.Interop.HwndSource> constructor, the resulting <xref:System.Windows.Interop.HwndSource> cannot display a window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public int WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndSourceParameters.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WindowStyle { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : int with get, set" Usage="System.Windows.Interop.HwndSourceParameters.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9487f-220">取得或設定視窗的樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-220">Gets or sets the style for the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9487f-221">視窗樣式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-221">The window style.</span>
          </span>
          <span data-ttu-id="9487f-222">請參閱[CreateWindowEx](https://go.microsoft.com/fwlink/?LinkId=98462)樣式位元的完整清單的函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-222">See the [CreateWindowEx](https://go.microsoft.com/fwlink/?LinkId=98462) function for a complete list of style bits.</span>
          </span>
          <span data-ttu-id="9487f-223">預設值： WS_VISIBLE、 WS_CAPTION、 WS_SYSMENU、 WS_THICKFRAME、 WS_MINIMIZEBOX、 WS_MAXIMIZEBOX、 WS_CLIPCHILDREN</span>
          <span class="sxs-lookup">
            <span data-stu-id="9487f-223">Defaults: WS_VISIBLE, WS_CAPTION, WS_SYSMENU, WS_THICKFRAME, WS_MINIMIZEBOX, WS_MAXIMIZEBOX, WS_CLIPCHILDREN</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9487f-224">根據預設，建立結構時，會設定下列的位元： WS_VISIBLE;WS_CAPTION;WS_SYSMENU;WS_THICKFRAME;WS_MINIMIZEBOX;WS_MAXIMIZEBOX;WS_CLIPCHILDREN。</span><span class="sxs-lookup"><span data-stu-id="9487f-224">By default, the following bits are set when the structure is created: WS_VISIBLE; WS_CAPTION; WS_SYSMENU; WS_THICKFRAME; WS_MINIMIZEBOX; WS_MAXIMIZEBOX; WS_CLIPCHILDREN.</span></span>  
  
 <span data-ttu-id="9487f-225">標準的視窗中，您必須設定 WS_CLIPCHILDREN 元。</span><span class="sxs-lookup"><span data-stu-id="9487f-225">For a standard window, you must set the WS_CLIPCHILDREN bit.</span></span> <span data-ttu-id="9487f-226">此樣式位元會強制執行程式碼本身;如果您省略設定此旗標，則 WPF 會將它新增至您提供任何值。</span><span class="sxs-lookup"><span data-stu-id="9487f-226">This style bit is enforced in the code itself; if you omit to set this flag, WPF adds it to whatever value you provide.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
  </Members>
</Type>