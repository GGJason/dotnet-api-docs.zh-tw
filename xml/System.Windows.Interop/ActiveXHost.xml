<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ActiveXHost.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55f3095a7d2446ff0c3f838a58c443449ae13552c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f3095a7d2446ff0c3f838a58c443449ae13552c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.ActiveXHost">
          <source>Hosts an ActiveX control as an element within Windows Presentation Foundation (WPF) content.</source>
          <target state="translated">裝載 ActiveX 控制項作為 Windows Presentation Foundation (WPF) 內容內的項目。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ActiveXHost">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Interop.ActiveXHost&gt;</ph> class to host an ActiveX control as a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Windows.Interop.ActiveXHost&gt;</ph>類別來裝載 ActiveX 控制項， <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.ActiveXHost">
          <source>Currently, support is limited to windowed controls.</source>
          <target state="translated">目前支援僅限於視窗型控制項。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The parent window.</source>
          <target state="translated">父視窗。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>Creates the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.ActiveXHost" /&gt;</ph> window and assigns it to a parent.</source>
          <target state="translated">建立 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.ActiveXHost" /&gt;</ph> 視窗並將它指派至父代 (Parent)。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Windows.Interop.ActiveXHost" /&gt;</ph> window.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.HandleRef" /&gt;</ph> 視窗的 <ph id="ph2">&lt;see cref="T:System.Windows.Interop.ActiveXHost" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>A structure that contains the window handle.</source>
          <target state="translated">包含視窗控制代碼的結構。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>Destroys the hosted window.</source>
          <target state="translated">終結裝載的視窗。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources that are used by the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.ActiveXHost" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.ActiveXHost" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.ActiveXHost.IsDisposed">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)" /&gt;</ph> method has been called on the <ph id="ph2">&lt;see cref="T:System.Windows.Interop.ActiveXHost" /&gt;</ph> instance.</source>
          <target state="translated">取得值，這個值表示是否已在 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.ActiveXHost.Dispose(System.Boolean)" /&gt;</ph> 執行個體上呼叫 <ph id="ph2">&lt;see cref="T:System.Windows.Interop.ActiveXHost" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ActiveXHost.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Interop.ActiveXHost" /&gt;</ph> instance has been disposed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已處置 <ph id="ph2">&lt;see cref="T:System.Windows.Interop.ActiveXHost" /&gt;</ph> 執行個體，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.ActiveXHost.IsDisposed">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)">
          <source>The size of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> 物件的大小。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)">
          <source>Returns the size of the window represented by the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> object, as requested by layout engine operations.</source>
          <target state="translated">應配置引擎作業要求，傳回由 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> 物件表示之視窗的大小。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.MeasureOverride(System.Windows.Size)">
          <source>The size of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> 物件的大小。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <source>The event data to the access key event.</source>
          <target state="translated">便捷鍵事件的事件資料。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <source>The event data reports which key was invoked, and indicate whether the <ph id="ph1">&lt;see cref="T:System.Windows.Input.AccessKeyManager" /&gt;</ph> object that controls the sending of these events also sent this access key invocation to other elements.</source>
          <target state="translated">該事件資料會報告叫用哪個便捷鍵，並指出控制這些事件之傳送的 <ph id="ph1">&lt;see cref="T:System.Windows.Input.AccessKeyManager" /&gt;</ph> 物件，是否也會將這個便捷鍵引動過程傳送至其他項目。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)">
          <source>Provides class handling for when an access key that is meaningful for this element is invoked.</source>
          <target state="translated">當叫用對這個項目有意義的便捷鍵 (Access Key) 時，為其提供類別處理。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The event data that describes the property that changed, as well as old and new values.</source>
          <target state="translated">事件資料，描述已變更的屬性，以及舊值和新值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Invoked whenever the effective value of any dependency property on this <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> has been updated.</source>
          <target state="translated">每當 <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> 上任何相依性屬性的有效值已更新時叫用。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The specific dependency property that changed is reported in the arguments parameter.</source>
          <target state="translated">已變更的特定相依性屬性會在引數參數中報告。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Overrides <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /&gt;</ph>.</source>
          <target state="translated">覆寫 <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)">
          <source>The window's position.</source>
          <target state="translated">視窗的位置。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.ActiveXHost.OnWindowPositionChanged(System.Windows.Rect)">
          <source>Called when the hosted window's position changes.</source>
          <target state="translated">當所裝載之視窗的位置變更時呼叫。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>