<Type Name="IKeyboardInputSink" FullName="System.Windows.Interop.IKeyboardInputSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40eb032cbe0570c50b97d13cd691ca826436adae" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37503279" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IKeyboardInputSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSink" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSink" />
  <TypeSignature Language="F#" Value="type IKeyboardInputSink = interface" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="aec5b-101">為元件提供鍵盤接收，這些元件會管理 Interop 界限中和 HWND 之間的定位鍵、快速鍵和助憶鍵 (Mnemonics)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aec5b-101">Provides a keyboard sink for components that manages tabbing, accelerators, and mnemonics across interop boundaries and between HWNDs.</span>
      </span>
      <span data-ttu-id="aec5b-102">這個介面實作 WPF-Win32 交互操作案例中的鍵盤訊息管理。</span>
      <span class="sxs-lookup">
        <span data-stu-id="aec5b-102">This interface implements keyboard message management in WPF-Win32 interoperation scenarios.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aec5b-103">鍵盤接收會處理輸入的整體的鍵盤輸入模型的特定子集[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]和[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]，並可讓某些鍵盤的輸入處理和 Hwnd 導向不是使用目前的鍵盤焦點。</span><span class="sxs-lookup"><span data-stu-id="aec5b-103">A keyboard sink handles input from particular subsets of the overall keyboard input model for [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] and [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], and enables some keyboard input to be processed and directed to HWNDs other than the one with current keyboard focus.</span></span>  
  
 <span data-ttu-id="aec5b-104">如果您的元件包含其他元件，而且會維護定位順序，也必須實作您的元件<xref:System.Windows.Interop.IKeyboardInputSite>以及追蹤哪些元件有焦點。</span><span class="sxs-lookup"><span data-stu-id="aec5b-104">If your component contains other components, and maintains a tab order, your component must also implement <xref:System.Windows.Interop.IKeyboardInputSite> and keep track of which component has focus.</span></span>  
  
 <span data-ttu-id="aec5b-105">如需輸入特別針對實作的架構的討論[!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]interop，請參閱[Windows Forms 和 WPF 互通性輸入架構](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)。</span><span class="sxs-lookup"><span data-stu-id="aec5b-105">For a discussion of the input architecture specifically implemented for [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] interop, see [Windows Forms and WPF Interoperability Input Architecture](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md).</span></span>  
  
 <span data-ttu-id="aec5b-106"><xref:System.Windows.Interop.HwndSource> 並<xref:System.Windows.Interop.HwndHost>每個實作<xref:System.Windows.Interop.IKeyboardInputSink>介面，透過明確介面定義。</span><span class="sxs-lookup"><span data-stu-id="aec5b-106"><xref:System.Windows.Interop.HwndSource> and <xref:System.Windows.Interop.HwndHost> each implement the <xref:System.Windows.Interop.IKeyboardInputSink> interface, through explicit interface definitions.</span></span> <span data-ttu-id="aec5b-107">明確的定義會提供預設行為，也可以存取，如果需要透過<xref:System.Windows.Interop.IKeyboardInputSink>介面的類型轉換<xref:System.Windows.Interop.HwndSource>或<xref:System.Windows.Interop.HwndHost>。</span><span class="sxs-lookup"><span data-stu-id="aec5b-107">The explicit definitions supply default behaviors, and can also be accessed if necessary through an <xref:System.Windows.Interop.IKeyboardInputSink> interface cast of <xref:System.Windows.Interop.HwndSource> or <xref:System.Windows.Interop.HwndHost>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
    <altmember cref="T:System.Windows.Interop.HwndSource" />
    <altmember cref="T:System.Windows.Interop.HwndHost" />
  </Docs>
  <Members>
    <Member MemberName="HasFocusWithin">
      <MemberSignature Language="C#" Value="public bool HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFocusWithin () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFocusWithin();" />
      <MemberSignature Language="F#" Value="abstract member HasFocusWithin : unit -&gt; bool" Usage="iKeyboardInputSink.HasFocusWithin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="aec5b-108">取得值，這個值表示接收或其包含的其中一個元件是否有焦點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-108">Gets a value that indicates whether the sink or one of its contained components has focus.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aec5b-109">如果接收或其包含的其中一個元件有焦點則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-109">
              <see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aec5b-110">這個方法是必要的轉送<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>內具有焦點的子元件的呼叫<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>實作。</span><span class="sxs-lookup"><span data-stu-id="aec5b-110">This method is necessary for forwarding <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> calls to child components with focus from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation.</span></span> <span data-ttu-id="aec5b-111">呼叫<xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A>直到您到達特定的焦點和轉送的層級的遞迴<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>那里。</span><span class="sxs-lookup"><span data-stu-id="aec5b-111">Call <xref:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin%2A> recursively until you reach the level of specific focus and forward <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> there.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputSite">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyboardInputSite As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSite ^ KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyboardInputSite : System.Windows.Interop.IKeyboardInputSite with get, set" Usage="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="aec5b-112">取得或設定對元件容器之 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 介面的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-112">Gets or sets a reference to the component's container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="aec5b-113">對容器之 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 介面的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-113">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aec5b-114">這個屬性一開始應該設定為`null`。</span><span class="sxs-lookup"><span data-stu-id="aec5b-114">This property should initially be set to `null`.</span></span> <span data-ttu-id="aec5b-115">將接收其元件將清單加入至任何容器<xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A>之前呼叫任何其他方法時，而且它可以在那之後設定多次。</span><span class="sxs-lookup"><span data-stu-id="aec5b-115">Any container that adds the sink to its components list will set <xref:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite%2A> before any other methods are called, and it can be set multiple times after that.</span></span> <span data-ttu-id="aec5b-116">您應該將屬性設定為`null`處置前再一次。</span><span class="sxs-lookup"><span data-stu-id="aec5b-116">You should set the property to `null` again before disposal.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSite" />
        <altmember cref="T:System.Windows.Interop.HwndSource" />
      </Docs>
    </Member>
    <Member MemberName="OnMnemonic">
      <MemberSignature Language="C#" Value="public bool OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member OnMnemonic :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.OnMnemonic (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="aec5b-117">助憶鍵及其相關聯資料的訊息。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-117">The message for the mnemonic and associated data.</span>
          </span>
          <span data-ttu-id="aec5b-118">請勿修改這個訊息結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-118">Do not modify this message structure.</span>
          </span>
          <span data-ttu-id="aec5b-119">參考僅基於效能考量而傳送它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-119">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="aec5b-120">輔助按鍵 (Modifier Key)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-120">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aec5b-121">當叫用這個接收的其中一個助憶鍵 (便捷鍵 (Access Key)) 時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-121">Called when one of the mnemonics (access keys) for this sink is invoked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aec5b-122">如果訊息已經過處理則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-122">
              <see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aec5b-123">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] WM_CHAR、 WM_SYSCHAR、 WM_DEADCHAR 或 WM_SYSDEADCHAR，必須是訊息。</span><span class="sxs-lookup"><span data-stu-id="aec5b-123">The [!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)] message must be WM_CHAR, WM_SYSCHAR, WM_DEADCHAR or WM_SYSDEADCHAR.</span></span>  
  
 <span data-ttu-id="aec5b-124">如果元件包含的元件，必須在您的實作，藉由呼叫每個包含元件傳遞訊息<xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="aec5b-124">If the component has contained components, the message must be passed in your implementation by calling each contained component's <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> method.</span></span>  
  
 <span data-ttu-id="aec5b-125">傳回的介面`true`從<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>將不會呼叫<xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>。</span><span class="sxs-lookup"><span data-stu-id="aec5b-125">An interface that returns `true` from <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.</span></span> <span data-ttu-id="aec5b-126">實作可以選擇執行中處理所有特定組合<xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>並略過<xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>。</span><span class="sxs-lookup"><span data-stu-id="aec5b-126">Implementations can choose to perform all specific key combination handling in <xref:System.Windows.Interop.IKeyboardInputSink.TranslateChar%2A>.and bypass <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
        <altmember cref="T:System.Windows.Input.AccessKeyManager" />
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Public Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberSignature Language="F#" Value="abstract member RegisterKeyboardInputSink : System.Windows.Interop.IKeyboardInputSink -&gt; System.Windows.Interop.IKeyboardInputSite" Usage="iKeyboardInputSink.RegisterKeyboardInputSink sink" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink">
          <span data-ttu-id="aec5b-127">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-127">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aec5b-128">註冊所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 介面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-128">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aec5b-129">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站台。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-129">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aec5b-130">應該維護站台的內部集合並使用這個方法來加入新的接收並傳回新的站台與子元件的元件。</span><span class="sxs-lookup"><span data-stu-id="aec5b-130">Components with child components should maintain internal collections of sites and use this method to add a new sink and return the new site.</span></span> <span data-ttu-id="aec5b-131">您只需要維護網站集合，因為接收可以從網站取得。</span><span class="sxs-lookup"><span data-stu-id="aec5b-131">You only need to maintain the site collection, because the sink can be obtained from the site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabInto">
      <MemberSignature Language="C#" Value="public bool TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function TabInto (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TabInto(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member TabInto : System.Windows.Input.TraversalRequest -&gt; bool" Usage="iKeyboardInputSink.TabInto request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="aec5b-132">指定是否應將焦點設定為第一個或最後一個定位停駐點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-132">Specifies whether focus should be set to the first or the last tab stop.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aec5b-133">將焦點設定在接收的第一個定位停駐點 (Tab Stop) 或最後一個定位停駐點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-133">Sets focus on either the first tab stop or the last tab stop of the sink.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aec5b-134">如果已依照要求設定焦點則為 <see langword="true" />，如果沒有定位停駐點則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-134">
              <see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aec5b-135"><xref:System.Windows.Input.FocusNavigationDirection.First> 並<xref:System.Windows.Input.FocusNavigationDirection.Last>應該傳遞至這個方法中才相關值<xref:System.Windows.Input.TraversalRequest>。</span><span class="sxs-lookup"><span data-stu-id="aec5b-135"><xref:System.Windows.Input.FocusNavigationDirection.First> and <xref:System.Windows.Input.FocusNavigationDirection.Last> are the only relevant values that should be passed to this method in the <xref:System.Windows.Input.TraversalRequest>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslateAccelerator">
      <MemberSignature Language="C#" Value="public bool TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateAccelerator :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateAccelerator (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="aec5b-136">訊息及相關聯資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-136">The message and associated data.</span>
          </span>
          <span data-ttu-id="aec5b-137">請勿修改這個結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-137">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="aec5b-138">參考僅基於效能考量而傳送它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-138">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="aec5b-139">輔助按鍵 (Modifier Key)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-139">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aec5b-140">在 Keydown 訊息層級處理鍵盤輸入。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-140">Processes keyboard input at the keydown message level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aec5b-141">如果訊息由方法實作處理則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-141">
              <see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aec5b-142">訊息必須是 WM_KEYDOWN 或 WM_SYSKEYDOWN。</span><span class="sxs-lookup"><span data-stu-id="aec5b-142">The message must either be WM_KEYDOWN or WM_SYSKEYDOWN.</span></span>  
  
 <span data-ttu-id="aec5b-143">如果元件無法處理輸入的翻譯，並有可能會有翻譯的子元件，它通常會呼叫<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>上傳回結果之前會保留目前焦點所在的子元件的方法。</span><span class="sxs-lookup"><span data-stu-id="aec5b-143">If the component is unable to handle the input translations and has child components that might have translations, it typically calls <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> method on the child component that holds the current focus before returning a result.</span></span>  
  
 <span data-ttu-id="aec5b-144">如果無法立即處理訊息，您可以重新分派它內在<xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A>實作，如果有必要，，然後再回到`false`。</span><span class="sxs-lookup"><span data-stu-id="aec5b-144">If the message cannot be handled immediately, you can re-dispatch it from within the <xref:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator%2A> implementation if necessary, and then return `false`.</span></span>  
  
 <span data-ttu-id="aec5b-145">轉譯快速鍵的主要案例是處理 VK_TAB keydown 訊息，並判斷是否要將設定中的元件，來呼叫的強調<xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>的子元件，或是呼叫<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>父站台上因為 索引標籤順序已達到開頭或結尾界限。</span><span class="sxs-lookup"><span data-stu-id="aec5b-145">A primary scenario for translating accelerator keys is handling the VK_TAB keydown message and determining whether to set focus within the component, to call <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> to a child component, or to call <xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A> on the parent site because the tab sequence has reached the beginning or end bounds.</span></span> <span data-ttu-id="aec5b-146">某些元件可能會選擇不處理 tab 鍵，以這種方式。</span><span class="sxs-lookup"><span data-stu-id="aec5b-146">Certain components may choose to not handle the tab key in this fashion.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateChar">
      <MemberSignature Language="C#" Value="public bool TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Public Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="abstract member TranslateChar :  * System.Windows.Input.ModifierKeys -&gt; bool" Usage="iKeyboardInputSink.TranslateChar (msg, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg">
          <span data-ttu-id="aec5b-147">訊息及相關聯資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-147">The message and associated data.</span>
          </span>
          <span data-ttu-id="aec5b-148">請勿修改這個結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-148">Do not modify this structure.</span>
          </span>
          <span data-ttu-id="aec5b-149">參考僅基於效能考量而傳送它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-149">It is passed by reference for performance reasons only.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="aec5b-150">輔助按鍵 (Modifier Key)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-150">Modifier keys.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="aec5b-151">請先處理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 輸入訊息，然後再呼叫 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-151">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> is called.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="aec5b-152">如果已處理訊息則為 <see langword="true" />，此時不應呼叫 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="aec5b-152">
              <see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="aec5b-153">如果您實作此方法以傳回`true`，將不會呼叫輸入的架構<xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A>該索引鍵的訊息。</span><span class="sxs-lookup"><span data-stu-id="aec5b-153">If you implement this method to return `true`, the input architecture will not call <xref:System.Windows.Interop.IKeyboardInputSink.OnMnemonic%2A> for that key message.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>