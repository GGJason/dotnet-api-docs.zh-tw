<Type Name="IKeyboardInputSite" FullName="System.Windows.Interop.IKeyboardInputSite">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62212e48122fb5f080c327b49194a0bed3917162" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30655992" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IKeyboardInputSite" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IKeyboardInputSite" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.IKeyboardInputSite" />
  <TypeSignature Language="VB.NET" Value="Public Interface IKeyboardInputSite" />
  <TypeSignature Language="C++ CLI" Value="public interface class IKeyboardInputSite" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>在容器內管理鍵盤焦點。  這個介面實作 WPF-Win32 交互操作案例中的鍵盤訊息管理。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 容器應該提供唯一的執行個體，這個介面的每個包含的元件。  
  
 <xref:System.Windows.Interop.IKeyboardInputSite>介面和<xref:System.Windows.Interop.IKeyboardInputSink>一起用來提供跨互通界限鍵盤動作的支援。 站台 (<xref:System.Windows.Interop.IKeyboardInputSite>實作) 代表接收的父系 (<xref:System.Windows.Interop.IKeyboardInputSink>)。 接收器 (<xref:System.Windows.Interop.IKeyboardInputSink>) 實作大部分鍵盤行為。 每個站台也必須提供接收，因為屬性所傳回的特定站台接收<xref:System.Windows.Interop.IKeyboardInputSite>介面。  
  
 如需特別針對實作的輸入架構的討論[!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)]交互操作，請參閱[Windows Form 和 WPF 互通性輸入架構](~/docs/framework/wpf/advanced/windows-forms-and-wpf-interoperability-input-architecture.md)。  
  
 如需有關[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] - [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]互通的案例，請參閱[WPF 和 Win32 互通](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
  </Docs>
  <Members>
    <Member MemberName="OnNoMoreTabStops">
      <MemberSignature Language="C#" Value="public bool OnNoMoreTabStops (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnNoMoreTabStops(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnNoMoreTabStops (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnNoMoreTabStops(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">指定是否應將焦點設定為第一個或最後一個定位停駐點。</param>
        <summary>由所包含的元件在到達其最後一個定位停駐點 (Tab Stop)，且沒有要定位到的其他項目時呼叫。</summary>
        <returns>如果這個方法傳回 <see langword="true" />，則站台會將焦點轉移到其他元件。 如果此方法傳回 <see langword="false" />，則焦點將仍位於呼叫元件內。 元件應「環繞」並將焦點設定至其所包含的第一個定位停駐點。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 元件呼叫<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>當元件嘗試要求的焦點移動，但沒有任何進一步的索引標籤會停止在該方向中該自己的元件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
      </Docs>
    </Member>
    <Member MemberName="Sink">
      <MemberSignature Language="C#" Value="public System.Windows.Interop.IKeyboardInputSink Sink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSink Sink" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.IKeyboardInputSite.Sink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sink As IKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Interop::IKeyboardInputSink ^ Sink { System::Windows::Interop::IKeyboardInputSink ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與這個站台相關聯的鍵盤接收。</summary>
        <value>目前站台的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 介面。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性不會傳回父系<xref:System.Windows.Interop.IKeyboardInputSink>介面。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Interop.IKeyboardInputSink" />
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public void Unregister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unregister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.IKeyboardInputSite.Unregister" />
      <MemberSignature Language="VB.NET" Value="Public Sub Unregister ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Unregister();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從此站台移除註冊子鍵盤輸入接收。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性不會影響容器上的站台。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>