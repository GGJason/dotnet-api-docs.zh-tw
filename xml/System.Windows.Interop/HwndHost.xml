<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HwndHost.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fd565933d14b6f23aa8c789d653f9f5a5791d2b2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fd565933d14b6f23aa8c789d653f9f5a5791d2b2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.HwndHost">
          <source>Hosts a Win32 window as an element within Windows Presentation Foundation (WPF) content.</source>
          <target state="translated">在 Windows Presentation Foundation (WPF) 內容中裝載 Win32 視窗作為項目。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>To host a <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> window, create a class that derives from <ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>.</source>
          <target state="translated">主機<ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>視窗中，建立衍生自類別<ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A&gt;</ph> method and create your <ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> window as a child of the parent window that is passed into the method.</source>
          <target state="translated">覆寫<ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A&gt;</ph>方法，並建立您<ph id="ph2">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph>做為傳遞至方法的父視窗的子視窗。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>Although <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> derives from <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, various properties of <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> that come from <ph id="ph4">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and other intermediate classes such as <ph id="ph5">&lt;xref:System.Windows.UIElement&gt;</ph> are not generally mapped to possible <ph id="ph6">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> equivalents.</source>
          <target state="translated">雖然<ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>衍生自<ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>的各種屬性<ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>來自<ph id="ph4">&lt;xref:System.Windows.FrameworkElement&gt;</ph>和其他中繼類別，例如<ph id="ph5">&lt;xref:System.Windows.UIElement&gt;</ph>通常不對應到可能<ph id="ph6">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>對等項目。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>Also, not all <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph><ph id="ph2"> / </ph><ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> input events transfer across the interoperation boundary.</source>
          <target state="translated">另外，並非所有<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> <ph id="ph2"> / </ph> <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph>交互操作界限之間輸入事件傳輸。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source><ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> derives from <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> primarily so that an <ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance can be inserted into the widest variety of possible content models, and so that default <ph id="ph4">&lt;xref:System.Windows.FrameworkElement&gt;</ph> layout characteristics can apply.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> 衍生自<ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>主要是使<ph id="ph3">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>執行個體可以插入到各種可能的內容模型，因此，預設和<ph id="ph4">&lt;xref:System.Windows.FrameworkElement&gt;</ph>可以套用配置的特性。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>For more details on <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>, see <bpt id="p1">[</bpt>WPF and Win32 Interoperation<ept id="p1">](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>，請參閱<bpt id="p1">[</bpt>WPF 和 Win32 互通<ept id="p1">](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.#ctor">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The window handle of the parent window.</source>
          <target state="translated">父視窗的視窗控制代碼 (Window Handle)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>When overridden in a derived class, creates the window to be hosted.</source>
          <target state="translated">在衍生類別中覆寫時，建立要裝載的視窗。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The handle to the child <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> window to create.</source>
          <target state="translated">要建立之子 <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> 視窗的控制代碼。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>This method's implementation is called from within the internal implementation of <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A&gt;</ph>.</source>
          <target state="translated">這個方法的實作中呼叫的內部實作<ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The child window will be created only if the window is owned by the calling thread.</source>
          <target state="translated">只有當呼叫的執行緒所擁有的視窗，將建立子視窗。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>Override this method to build the window being hosted.</source>
          <target state="translated">覆寫這個方法，建置要裝載的視窗。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The window that you return must be a child of the window specified by <ph id="ph1">&lt;paramref name="hwndParent" /&gt;</ph>.</source>
          <target state="translated">您所傳回的視窗必須是所指定視窗的子系<ph id="ph1">&lt;paramref name="hwndParent" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>In addition, the child window will only be created if the window is owned by the calling thread.</source>
          <target state="translated">此外，如果視窗由呼叫的執行緒所擁有，將只建立子視窗。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>A structure that contains the window handle.</source>
          <target state="translated">包含視窗控制代碼的結構。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>When overridden in a derived class, destroys the hosted window.</source>
          <target state="translated">在衍生類別中覆寫時，終結所裝載的視窗。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>Override this method to destroy the hosted window as created by <ph id="ph1">&lt;see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" /&gt;</ph>.</source>
          <target state="translated">覆寫這個方法終結託管的視窗，因為由建立<ph id="ph1">&lt;see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)">
          <source>The <ph id="ph1">&lt;paramref name="hwnd" /&gt;</ph> parameter should be the handle as returned by <ph id="ph2">&lt;see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hwnd" /&gt;</ph>參數應該是控制代碼所傳回<ph id="ph2">&lt;see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Windows.Interop.HwndHost">
          <source>Immediately frees any system resources that the object might hold.</source>
          <target state="translated">立即釋放物件可能佔用的任何系統資源。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Interop.HwndHost">
          <source>Derived classes can override this method (by the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph> signature) if they need to do additional cleanup.</source>
          <target state="translated">在衍生的類別可以覆寫這個方法 (由<ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph>簽章) 如果需要執行其他清除。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.Dispose">
          <source>Immediately frees any system resources that the object might hold.</source>
          <target state="translated">立即釋放物件可能佔用的任何系統資源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose">
          <source>This method can be overridden, but not by this signature.</source>
          <target state="translated">這個方法會覆寫，但不是此簽章。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph> for the overridable signature.</source>
          <target state="translated">請參閱<ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph>可覆寫的簽章。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose">
          <source>This parameterless signature is the one required by the interface contract, and it effectively calls the active <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph> implementation with <ph id="ph2">`disposing`</ph> being <ph id="ph3">`true`</ph>.</source>
          <target state="translated">此無參數的簽章是介面合約所需，且它會有效地呼叫使用中<ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29&gt;</ph>實作<ph id="ph2">`disposing`</ph>正在<ph id="ph3">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>Set to <ph id="ph1">&lt;see langword="true" /&gt;</ph> if called from an explicit disposer and <ph id="ph2">&lt;see langword="false" /&gt;</ph> otherwise.</source>
          <target state="translated">如果從明確處置器呼叫，則設定為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則設定為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>Immediately frees any system resources that the object might hold.</source>
          <target state="translated">立即釋放物件可能佔用的任何系統資源。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>Derived classes can override this method if they need to do additional cleanup.</source>
          <target state="translated">在衍生的類別可以覆寫這個方法，如果需要執行其他清除。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>However, they should also call the base implementation to ensure that all resources are freed.</source>
          <target state="translated">不過，它們也應該呼叫基底實作，以確保所有資源都已都釋放。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>The base implementation does fairly substantial work to free resources that are known to the base class.</source>
          <target state="translated">基底實作會執行大量的工作，以釋出已知的基底類別的資源。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>If a window is being hosted, it will be destroyed.</source>
          <target state="translated">如果裝載在視窗，也會終結。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)">
          <source>The calling thread must be the same as the dispatcher.</source>
          <target state="translated">呼叫的執行緒必須發送器相同。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.HwndHost.DpiChanged">
          <source>Occurs after the DPI of the screen on which the HwndHost is displayed changes.</source>
          <target state="translated">發生於顯示 HwndHost 的螢幕 DPI 變更之後。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Windows.Interop.HwndHost.DpiChangedEvent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEvent" /&gt;</ph> for when the DPI of the screen the HwndHost is on changes.</source>
          <target state="translated">在 HwndHost 變更時用於螢幕 DPI 的 <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEvent" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.Finalize">
          <source>Performs the final cleanup before the garbage collector destroys the object.</source>
          <target state="translated">在記憶體回收行程終結物件之前執行最後的清除。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.Finalize">
          <source>Like most finalizers, this calls <ph id="ph1">`Dispose(false)`</ph>.</source>
          <target state="translated">像大部分的完成項，這會呼叫<ph id="ph1">`Dispose(false)`</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndHost.Handle">
          <source>Gets the window handle  of the hosted window.</source>
          <target state="translated">取得所裝載之視窗的視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.Handle">
          <source>The window handle.</source>
          <target state="translated">視窗控制代碼 (Window Handle)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.Handle">
          <source>to get this object.</source>
          <target state="translated">若要取得此物件。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.Handle">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.HasFocusWithinCore">
          <source>Gets a value that indicates whether the sink or one of its contained components has focus.</source>
          <target state="translated">取得值，這個值表示接收或其包含的其中一個元件是否有焦點。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.HasFocusWithinCore">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sink or one of its contained components has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果接收或其包含的其中一個元件有焦點則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>The size of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> 物件的大小。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>Returns the size of the window represented by the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> object, as requested by layout engine operations.</source>
          <target state="translated">應配置引擎作業要求，傳回由 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> 物件表示之視窗的大小。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>The size of the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> 物件的大小。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>in order to adjust the layout (by having the layout engine act upon the hosted region).</source>
          <target state="translated">若要調整的版面配置 (讓版面配置引擎會在裝載的區域上作用)。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>In <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>, a window is expected to be the size requested by layout at the time the window is created.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>，視窗必須是在建立時的視窗配置所要求的大小。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>Derived classes should override this method only if they have additional information regarding required window size.</source>
          <target state="translated">在衍生的類別應該覆寫這個方法，只有在具有所需的視窗大小相關的其他資訊。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>The specific implementation here is already an override of the <ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph> virtual member, which bases size constraints on the window handle and treats a zero value in one or more dimensions as a non-constraint.</source>
          <target state="translated">特定的實作已經的覆寫<ph id="ph1">&lt;see cref="T:System.Windows.FrameworkElement" /&gt;</ph>虛擬的成員，基底大小的視窗控制代碼上的條件約束和一個或多個維度中的零值視為非條件約束。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /&gt;</ph> class also overrides a <ph id="ph2">&lt;see cref="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)" /&gt;</ph> implementation that will result in a clip of the form if it is too large.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /&gt;</ph>類別也會覆寫<ph id="ph2">&lt;see cref="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)" /&gt;</ph>太大時，會導致表單的剪輯的實作。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="E:System.Windows.Interop.HwndHost.MessageHook">
          <source>Occurs for each unhandled message that is received by the hosted window.</source>
          <target state="translated">裝載之視窗每接收一則未處理的訊息就會發生。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndHost.MessageHook">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndHost.MessageHook">
          <source>to add or remove handlers of this event.</source>
          <target state="translated">若要新增或移除此事件處理常式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Interop.HwndHost.MessageHook">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
          <source>Creates an <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> for <ph id="ph2">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> .</source>
          <target state="translated">建立 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 的 <ph id="ph2">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
          <source>The type-specific <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> implementation.</source>
          <target state="translated">因型別而異的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.AutomationPeer" /&gt;</ph> 實作。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
          <source>The implementation of this method is typically to call the constructor of a specific <ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph> implementation, and return it as the return value.</source>
          <target state="translated">這個方法的實作會在呼叫的特定建構函式通常是<ph id="ph1">&lt;xref:System.Windows.Automation.Peers.AutomationPeer&gt;</ph>實作中，並將其傳回做為傳回值。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> implementation of <ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost.OnCreateAutomationPeer%2A&gt;</ph> does this, but the automation peer that it returns is an internal class.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph>實作<ph id="ph2">&lt;xref:System.Windows.Interop.HwndHost.OnCreateAutomationPeer%2A&gt;</ph>做法，但它是內部的類別會傳回自動化對等。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>The original DPI scale setting.</source>
          <target state="translated">原始 DPI 縮放比例設定。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>The new DPI scale setting.</source>
          <target state="translated">新的 DPI 縮放比例設定。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>Called when the DPI at which this HwndHost is rendered changes.</source>
          <target state="translated">當轉譯此 HwndHost 的 DPI 變更時呼叫。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>The event data.</source>
          <target state="translated">事件資料。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>Called when the hosted window receives a <bpt id="p1">[</bpt>WM_KEYDOWN<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=161282)</ept> message.</source>
          <target state="translated">裝載的視窗收到 <bpt id="p1">[</bpt>WM_KEYDOWN<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=161282)</ept> 訊息時呼叫。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)">
          <source>This is an override of the class handler <ph id="ph1">&lt;xref:System.Windows.UIElement.OnKeyDown%2A&gt;</ph> and provides the behavior of translating the <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> message into a <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> event, marking the event as handled whenever appropriate.</source>
          <target state="translated">這是類別處理常式的覆寫<ph id="ph1">&lt;xref:System.Windows.UIElement.OnKeyDown%2A&gt;</ph>和提供的轉譯行為<ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>訊息到<ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>事件，將事件標示為已處理時適當。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>The event data.</source>
          <target state="translated">事件資料。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>Called when the hosted window receives a <bpt id="p1">[</bpt>WM_KEYUP<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=161283)</ept> message.</source>
          <target state="translated">裝載的視窗收到 <bpt id="p1">[</bpt>WM_KEYUP<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=161283)</ept> 訊息時呼叫。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)">
          <source>This is an override of the class handler <ph id="ph1">&lt;xref:System.Windows.UIElement.OnKeyUp%2A&gt;</ph> and provides the behavior of translating the <ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> message into a <ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> event, marking the event as handled whenever appropriate.</source>
          <target state="translated">這是類別處理常式的覆寫<ph id="ph1">&lt;xref:System.Windows.UIElement.OnKeyUp%2A&gt;</ph>和提供的轉譯行為<ph id="ph2">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>訊息到<ph id="ph3">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>事件，將事件標示為已處理時適當。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message for the mnemonic and associated data.</source>
          <target state="translated">助憶鍵及其相關聯資料的訊息。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Called when one of the mnemonics (access keys) for this sink is invoked.</source>
          <target state="translated">當叫用這個接收的其中一個助憶鍵 (便捷鍵 (Access Key)) 時呼叫。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
          <source>The window's position.</source>
          <target state="translated">視窗的位置。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
          <source>Called when the hosted window's position changes.</source>
          <target state="translated">當所裝載之視窗的位置變更時呼叫。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)">
          <source>Subclasses can override this method to resize the window based on the provided dimensions of <ph id="ph1">&lt;paramref name="rcBoundingBox" /&gt;</ph>.</source>
          <target state="translated">子類別可以覆寫這個方法，以根據提供維度的視窗大小調整<ph id="ph1">&lt;paramref name="rcBoundingBox" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> sink of the contained component.</source>
          <target state="translated">所包含之元件的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> 接收。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>Registers the <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> interface of a contained component.</source>
          <target state="translated">註冊所包含之元件的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> 介面。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> site of the contained component.</source>
          <target state="translated">所包含之元件的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> 站台。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the sink or one of its contained components has focus; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果接收或其包含的其中一個元件有焦點則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>A reference to the container's <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> interface.</source>
          <target state="translated">對容器之 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> 介面的參考。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message for the mnemonic and associated data.</source>
          <target state="translated">助憶鍵及其相關聯資料的訊息。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this message structure.</source>
          <target state="translated">請勿修改這個訊息結構。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">參考僅基於效能考量而傳送它。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已處理訊息，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> sink of the contained component.</source>
          <target state="translated">所包含之元件的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSink" /&gt;</ph> 接收。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> site of the contained component.</source>
          <target state="translated">所包含之元件的 <ph id="ph1">&lt;see cref="T:System.Windows.Interop.IKeyboardInputSite" /&gt;</ph> 站台。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>Specifies whether focus should be set to the first or the last tab stop.</source>
          <target state="translated">指定是否應將焦點設定為第一個或最後一個定位停駐點。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the focus has been set as requested; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, if there are no tab stops.</source>
          <target state="translated">如果已依照要求設定焦點則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，如果沒有定位停駐點則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">訊息及相關聯資料。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">請勿修改這個結構。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">參考僅基於效能考量而傳送它。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was handled by the method implementation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果訊息由方法實作處理則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">訊息及相關聯資料。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">請勿修改這個結構。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">參考僅基於效能考量而傳送它。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>.</source>
          <target state="translated">如需這個成員的說明，請參閱 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message was processed and <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> should not be called; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已處理訊息則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，此時不應呼叫 <ph id="ph2">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">這個成員是明確介面成員實作，</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> interface.</source>
          <target state="translated">只有在 <ph id="ph1">&lt;xref:System.Windows.Interop.HwndHost&gt;</ph> 執行個體轉換成 <ph id="ph2">&lt;xref:System.Windows.Interop.IKeyboardInputSink&gt;</ph> 介面時，才能使用這個成員。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
          <source>Specifies whether focus should be set to the first or the last tab stop.</source>
          <target state="translated">指定是否應將焦點設定為第一個或最後一個定位停駐點。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
          <source>Sets focus on either the first tab stop or the last tab stop of the sink.</source>
          <target state="translated">將焦點設定在接收的第一個定位停駐點 (Tab Stop) 或最後一個定位停駐點。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">訊息及相關聯資料。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">請勿修改這個結構。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">參考僅基於效能考量而傳送它。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Processes keyboard input at the keydown message level.</source>
          <target state="translated">在 Keydown 訊息層級處理鍵盤輸入。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>The message and associated data.</source>
          <target state="translated">訊息及相關聯資料。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Do not modify this structure.</source>
          <target state="translated">請勿修改這個結構。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>It is passed by reference for performance reasons only.</source>
          <target state="translated">參考僅基於效能考量而傳送它。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Modifier keys.</source>
          <target state="translated">輔助按鍵 (Modifier Key)。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> method is called.</source>
          <target state="translated">先處理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 輸入訊息，接著呼叫 <ph id="ph1">&lt;see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.UpdateWindowPos">
          <source>Updates the child window's size, visibility, and position to reflect the current state of the element.</source>
          <target state="translated">更新子視窗的大小、可視性和位置，以反映項目的目前狀態。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.UpdateWindowPos">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>The window handle of the hosted window.</source>
          <target state="translated">所裝載之視窗的視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>The message to act upon.</source>
          <target state="translated">要採取行動的訊息。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>Information that may be relevant to handling the message.</source>
          <target state="translated">可能與處理訊息相關的資訊。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>This is typically used to store small pieces of information, such as flags.</source>
          <target state="translated">這通常用來儲存較小的資訊，例如旗標。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>Information that may be relevant to handling the message.</source>
          <target state="translated">可能與處理訊息相關的資訊。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>This is typically used to reference an object.</source>
          <target state="translated">這通常用來參考物件。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>Whether events resulting should be marked handled.</source>
          <target state="translated">事件產生是否應該標示已處理。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>When overridden in a derived class, accesses the window process (handle) of the hosted child window.</source>
          <target state="translated">在衍生類別中覆寫時，存取所裝載之子視窗的視窗處理序 (控制代碼)。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>The window handle of the child window.</source>
          <target state="translated">子視窗的視窗控制代碼。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>This type or member is not available in the Internet security zone.</source>
          <target state="translated">這個類型或成員不是可用的網際網路安全性區域中。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>to call this method.</source>
          <target state="translated">呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">相關聯的列舉型別： <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)">
          <source>The base implementation in <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph> does not return a practical process, but will return <bpt id="p1">&lt;c&gt;</bpt>IntPtr.Zero<ept id="p1">&lt;/c&gt;</ept> as a failsafe.</source>
          <target state="translated">中的基底實作<ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndHost" /&gt;</ph>不會傳回實際的處理程序，但是會傳回<bpt id="p1">&lt;c&gt;</bpt>是 IntPtr.Zero<ept id="p1">&lt;/c&gt;</ept>為保全。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>