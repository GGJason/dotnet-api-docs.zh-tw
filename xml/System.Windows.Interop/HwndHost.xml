<Type Name="HwndHost" FullName="System.Windows.Interop.HwndHost">
  <TypeSignature Language="C#" Value="public abstract class HwndHost : System.Windows.FrameworkElement, IDisposable, System.Windows.Interop.IKeyboardInputSink, System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract HwndHost extends System.Windows.FrameworkElement implements class System.IDisposable, class System.Windows.Interop.IKeyboardInputSink, class System.Windows.Interop.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Interop.HwndHost" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HwndHost&#xA;Inherits FrameworkElement&#xA;Implements IDisposable, IKeyboardInputSink, IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class HwndHost abstract : System::Windows::FrameworkElement, IDisposable, System::Windows::Interop::IKeyboardInputSink, System::Windows::Interop::IWin32Window" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IKeyboardInputSink</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Interop.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="62406-101">在 Windows Presentation Foundation (WPF) 內容中裝載 Win32 視窗作為項目。</span><span class="sxs-lookup"><span data-stu-id="62406-101">Hosts a Win32 window as an element within Windows Presentation Foundation (WPF) content.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-102">主機[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]視窗中，建立衍生自類別<xref:System.Windows.Interop.HwndHost>。</span><span class="sxs-lookup"><span data-stu-id="62406-102">To host a [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window, create a class that derives from <xref:System.Windows.Interop.HwndHost>.</span></span> <span data-ttu-id="62406-103">覆寫<xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A>方法，並建立您[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]做為傳遞至方法的父視窗的子視窗。</span><span class="sxs-lookup"><span data-stu-id="62406-103">Override the <xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A> method and create your [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window as a child of the parent window that is passed into the method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-104">雖然<xref:System.Windows.Interop.HwndHost>衍生自<xref:System.Windows.FrameworkElement>的各種屬性<xref:System.Windows.Interop.HwndHost>來自<xref:System.Windows.FrameworkElement>和其他中繼類別，例如<xref:System.Windows.UIElement>通常不對應到可能[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]對等項目。</span><span class="sxs-lookup"><span data-stu-id="62406-104">Although <xref:System.Windows.Interop.HwndHost> derives from <xref:System.Windows.FrameworkElement>, various properties of <xref:System.Windows.Interop.HwndHost> that come from <xref:System.Windows.FrameworkElement> and other intermediate classes such as <xref:System.Windows.UIElement> are not generally mapped to possible [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] equivalents.</span></span> <span data-ttu-id="62406-105">另外，並非所有<xref:System.Windows.FrameworkElement>  /  <xref:System.Windows.UIElement>交互操作界限之間輸入事件傳輸。</span><span class="sxs-lookup"><span data-stu-id="62406-105">Also, not all <xref:System.Windows.FrameworkElement> / <xref:System.Windows.UIElement> input events transfer across the interoperation boundary.</span></span> <span data-ttu-id="62406-106"><xref:System.Windows.Interop.HwndHost> 衍生自<xref:System.Windows.FrameworkElement>主要是使<xref:System.Windows.Interop.HwndHost>執行個體可以插入到各種可能的內容模型，因此，預設和<xref:System.Windows.FrameworkElement>可以套用配置的特性。</span><span class="sxs-lookup"><span data-stu-id="62406-106"><xref:System.Windows.Interop.HwndHost> derives from <xref:System.Windows.FrameworkElement> primarily so that an <xref:System.Windows.Interop.HwndHost> instance can be inserted into the widest variety of possible content models, and so that default <xref:System.Windows.FrameworkElement> layout characteristics can apply.</span></span> <span data-ttu-id="62406-107">如需有關<xref:System.Windows.Interop.HwndHost>，請參閱[WPF 和 Win32 互通](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)。</span><span class="sxs-lookup"><span data-stu-id="62406-107">For more details on <xref:System.Windows.Interop.HwndHost>, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HwndHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HwndHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62406-108">初始化 <see cref="T:System.Windows.Interop.HwndHost" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="62406-108">Initializes a new instance of the <see cref="T:System.Windows.Interop.HwndHost" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-109">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-109">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildWindowCore">
      <MemberSignature Language="C#" Value="protected abstract System.Runtime.InteropServices.HandleRef BuildWindowCore (System.Runtime.InteropServices.HandleRef hwndParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Runtime.InteropServices.HandleRef BuildWindowCore(valuetype System.Runtime.InteropServices.HandleRef hwndParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function BuildWindowCore (hwndParent As HandleRef) As HandleRef" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Runtime::InteropServices::HandleRef BuildWindowCore(System::Runtime::InteropServices::HandleRef hwndParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.HandleRef</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwndParent" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="hwndParent"><span data-ttu-id="62406-110">父視窗的視窗控制代碼 (Window Handle)。</span><span class="sxs-lookup"><span data-stu-id="62406-110">The window handle of the parent window.</span></span></param>
        <summary><span data-ttu-id="62406-111">在衍生類別中覆寫時，建立要裝載的視窗。</span><span class="sxs-lookup"><span data-stu-id="62406-111">When overridden in a derived class, creates the window to be hosted.</span></span></summary>
        <returns><span data-ttu-id="62406-112">要建立之子 [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] 視窗的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="62406-112">The handle to the child [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] window to create.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-113">這個方法的實作中呼叫的內部實作<xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="62406-113">This method's implementation is called from within the internal implementation of <xref:System.Windows.Interop.HwndHost.BuildWindowCore%2A>.</span></span>  
  
 <span data-ttu-id="62406-114">只有當呼叫的執行緒所擁有的視窗，將建立子視窗。</span><span class="sxs-lookup"><span data-stu-id="62406-114">The child window will be created only if the window is owned by the calling thread.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="62406-115">覆寫這個方法，建置要裝載的視窗。</span><span class="sxs-lookup"><span data-stu-id="62406-115">Override this method to build the window being hosted.</span></span>  
  
 <span data-ttu-id="62406-116">您所傳回的視窗必須是所指定視窗的子系<paramref name="hwndParent" />。</span><span class="sxs-lookup"><span data-stu-id="62406-116">The window that you return must be a child of the window specified by <paramref name="hwndParent" />.</span></span>  
  
 <span data-ttu-id="62406-117">此外，如果視窗由呼叫的執行緒所擁有，將只建立子視窗。</span><span class="sxs-lookup"><span data-stu-id="62406-117">In addition, the child window will only be created if the window is owned by the calling thread.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DestroyWindowCore">
      <MemberSignature Language="C#" Value="protected abstract void DestroyWindowCore (System.Runtime.InteropServices.HandleRef hwnd);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void DestroyWindowCore(valuetype System.Runtime.InteropServices.HandleRef hwnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.DestroyWindowCore(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub DestroyWindowCore (hwnd As HandleRef)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void DestroyWindowCore(System::Runtime::InteropServices::HandleRef hwnd);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="62406-118">包含視窗控制代碼的結構。</span><span class="sxs-lookup"><span data-stu-id="62406-118">A structure that contains the window handle.</span></span></param>
        <summary><span data-ttu-id="62406-119">在衍生類別中覆寫時，終結所裝載的視窗。</span><span class="sxs-lookup"><span data-stu-id="62406-119">When overridden in a derived class, destroys the hosted window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-120">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-120">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="62406-121">覆寫這個方法終結託管的視窗，因為由建立<see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />。</span><span class="sxs-lookup"><span data-stu-id="62406-121">Override this method to destroy the hosted window as created by <see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />.</span></span> <span data-ttu-id="62406-122"><paramref name="hwnd" />參數應該是控制代碼所傳回<see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />。</span><span class="sxs-lookup"><span data-stu-id="62406-122">The <paramref name="hwnd" /> parameter should be the handle as returned by <see cref="M:System.Windows.Interop.HwndHost.BuildWindowCore(System.Runtime.InteropServices.HandleRef)" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="62406-123">立即釋放物件可能佔用的任何系統資源。</span><span class="sxs-lookup"><span data-stu-id="62406-123">Immediately frees any system resources that the object might hold.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-124">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-124">This type or member is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="62406-125">在衍生的類別可以覆寫這個方法 (由<xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29>簽章) 如果需要執行其他清除。</span><span class="sxs-lookup"><span data-stu-id="62406-125">Derived classes can override this method (by the <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> signature) if they need to do additional cleanup.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62406-126">立即釋放物件可能佔用的任何系統資源。</span><span class="sxs-lookup"><span data-stu-id="62406-126">Immediately frees any system resources that the object might hold.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-127">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-127">This type or member is not available in the Internet security zone.</span></span>  
>   
>  <span data-ttu-id="62406-128">這個方法會覆寫，但不是此簽章。</span><span class="sxs-lookup"><span data-stu-id="62406-128">This method can be overridden, but not by this signature.</span></span> <span data-ttu-id="62406-129">請參閱<xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29>可覆寫的簽章。</span><span class="sxs-lookup"><span data-stu-id="62406-129">See <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> for the overridable signature.</span></span> <span data-ttu-id="62406-130">此無參數的簽章是介面合約所需，且它會有效地呼叫使用中<xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29>實作`disposing`正在`true`。</span><span class="sxs-lookup"><span data-stu-id="62406-130">This parameterless signature is the one required by the interface contract, and it effectively calls the active <xref:System.Windows.Interop.HwndHost.Dispose%28System.Boolean%29> implementation with `disposing` being `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="62406-131">如果從明確處置器呼叫，則設定為 <see langword="true" />，否則設定為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-131">Set to <see langword="true" /> if called from an explicit disposer and <see langword="false" /> otherwise.</span></span></param>
        <summary><span data-ttu-id="62406-132">立即釋放物件可能佔用的任何系統資源。</span><span class="sxs-lookup"><span data-stu-id="62406-132">Immediately frees any system resources that the object might hold.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-133">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-133">This type or member is not available in the Internet security zone.</span></span>  
  
 <span data-ttu-id="62406-134">在衍生的類別可以覆寫這個方法，如果需要執行其他清除。</span><span class="sxs-lookup"><span data-stu-id="62406-134">Derived classes can override this method if they need to do additional cleanup.</span></span> <span data-ttu-id="62406-135">不過，它們也應該呼叫基底實作，以確保所有資源都已都釋放。</span><span class="sxs-lookup"><span data-stu-id="62406-135">However, they should also call the base implementation to ensure that all resources are freed.</span></span> <span data-ttu-id="62406-136">基底實作會執行大量的工作，以釋出已知的基底類別的資源。</span><span class="sxs-lookup"><span data-stu-id="62406-136">The base implementation does fairly substantial work to free resources that are known to the base class.</span></span>  
  
 <span data-ttu-id="62406-137">如果裝載在視窗，也會終結。</span><span class="sxs-lookup"><span data-stu-id="62406-137">If a window is being hosted, it will be destroyed.</span></span>  
  
 <span data-ttu-id="62406-138">呼叫的執行緒必須發送器相同。</span><span class="sxs-lookup"><span data-stu-id="62406-138">The calling thread must be the same as the dispatcher.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndHost.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62406-139">發生於顯示 HwndHost 的螢幕 DPI 變更之後。</span><span class="sxs-lookup"><span data-stu-id="62406-139">Occurs after the DPI of the screen on which the HwndHost is displayed changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DpiChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DpiChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Interop.HwndHost.DpiChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DpiChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DpiChangedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62406-140">在 HwndHost 變更時用於螢幕 DPI 的 <see cref="T:System.Windows.RoutedEvent" />。</span><span class="sxs-lookup"><span data-stu-id="62406-140">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the HwndHost is on changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~HwndHost ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!HwndHost ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62406-141">在記憶體回收行程終結物件之前執行最後的清除。</span><span class="sxs-lookup"><span data-stu-id="62406-141">Performs the final cleanup before the garbage collector destroys the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-142">像大部分的完成項，這會呼叫`Dispose(false)`。</span><span class="sxs-lookup"><span data-stu-id="62406-142">Like most finalizers, this calls `Dispose(false)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndHost.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Interop.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62406-143">取得所裝載之視窗的視窗控制代碼。</span><span class="sxs-lookup"><span data-stu-id="62406-143">Gets the window handle  of the hosted window.</span></span></summary>
        <value><span data-ttu-id="62406-144">視窗控制代碼 (Window Handle)。</span><span class="sxs-lookup"><span data-stu-id="62406-144">The window handle.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="62406-145">若要取得此物件。</span><span class="sxs-lookup"><span data-stu-id="62406-145">to get this object.</span></span> <span data-ttu-id="62406-146">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="62406-146">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="HasFocusWithinCore">
      <MemberSignature Language="C#" Value="protected virtual bool HasFocusWithinCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HasFocusWithinCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.HasFocusWithinCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HasFocusWithinCore () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HasFocusWithinCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62406-147">取得值，這個值表示接收或其包含的其中一個元件是否有焦點。</span><span class="sxs-lookup"><span data-stu-id="62406-147">Gets a value that indicates whether the sink or one of its contained components has focus.</span></span></summary>
        <returns>
          <span data-ttu-id="62406-148">如果接收或其包含的其中一個元件有焦點則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-148"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.HasFocusWithin" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size constraint);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size constraint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (constraint As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size constraint);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="constraint" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="constraint"><span data-ttu-id="62406-149"><see cref="T:System.Windows.Interop.HwndHost" /> 物件的大小。</span><span class="sxs-lookup"><span data-stu-id="62406-149">The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</span></span></param>
        <summary><span data-ttu-id="62406-150">應配置引擎作業要求，傳回由 <see cref="T:System.Windows.Interop.HwndHost" /> 物件表示之視窗的大小。</span><span class="sxs-lookup"><span data-stu-id="62406-150">Returns the size of the window represented by the <see cref="T:System.Windows.Interop.HwndHost" /> object, as requested by layout engine operations.</span></span></summary>
        <returns><span data-ttu-id="62406-151"><see cref="T:System.Windows.Interop.HwndHost" /> 物件的大小。</span><span class="sxs-lookup"><span data-stu-id="62406-151">The size of the <see cref="T:System.Windows.Interop.HwndHost" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-152">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-152">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="62406-153">若要調整的版面配置 (讓版面配置引擎會在裝載的區域上作用)。</span><span class="sxs-lookup"><span data-stu-id="62406-153">in order to adjust the layout (by having the layout engine act upon the hosted region).</span></span> <span data-ttu-id="62406-154">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="62406-154">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="62406-155">在[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]，視窗必須是在建立時的視窗配置所要求的大小。</span><span class="sxs-lookup"><span data-stu-id="62406-155">In [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)], a window is expected to be the size requested by layout at the time the window is created.</span></span> <span data-ttu-id="62406-156">在衍生的類別應該覆寫這個方法，只有在具有所需的視窗大小相關的其他資訊。</span><span class="sxs-lookup"><span data-stu-id="62406-156">Derived classes should override this method only if they have additional information regarding required window size.</span></span>  
  
 <span data-ttu-id="62406-157">特定的實作已經的覆寫<see cref="T:System.Windows.FrameworkElement" />虛擬的成員，基底大小的視窗控制代碼上的條件約束和一個或多個維度中的零值視為非條件約束。</span><span class="sxs-lookup"><span data-stu-id="62406-157">The specific implementation here is already an override of the <see cref="T:System.Windows.FrameworkElement" /> virtual member, which bases size constraints on the window handle and treats a zero value in one or more dimensions as a non-constraint.</span></span> <span data-ttu-id="62406-158"><see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" />類別也會覆寫<see cref="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)" />太大時，會導致表單的剪輯的實作。</span><span class="sxs-lookup"><span data-stu-id="62406-158">The <see cref="T:System.Windows.Forms.Integration.WindowsFormsHost" /> class also overrides a <see cref="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride(System.Windows.Size)" /> implementation that will result in a clip of the form if it is too large.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MessageHook">
      <MemberSignature Language="C#" Value="public event System.Windows.Interop.HwndSourceHook MessageHook;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Interop.HwndSourceHook MessageHook" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Interop.HwndHost.MessageHook" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MessageHook As HwndSourceHook " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Interop::HwndSourceHook ^ MessageHook;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.HwndSourceHook</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62406-159">裝載之視窗每接收一則未處理的訊息就會發生。</span><span class="sxs-lookup"><span data-stu-id="62406-159">Occurs for each unhandled message that is received by the hosted window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-160">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-160">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="62406-161">若要新增或移除此事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="62406-161">to add or remove handlers of this event.</span></span> <span data-ttu-id="62406-162">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="62406-162">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62406-163">建立 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 的 <see cref="T:System.Windows.Interop.HwndHost" />。</span><span class="sxs-lookup"><span data-stu-id="62406-163">Creates an <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> for <see cref="T:System.Windows.Interop.HwndHost" /> .</span></span></summary>
        <returns><span data-ttu-id="62406-164">因型別而異的 <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="62406-164">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-165">這個方法的實作會在呼叫的特定建構函式通常是<xref:System.Windows.Automation.Peers.AutomationPeer>實作中，並將其傳回做為傳回值。</span><span class="sxs-lookup"><span data-stu-id="62406-165">The implementation of this method is typically to call the constructor of a specific <xref:System.Windows.Automation.Peers.AutomationPeer> implementation, and return it as the return value.</span></span> <span data-ttu-id="62406-166"><xref:System.Windows.Interop.HwndHost>實作<xref:System.Windows.Interop.HwndHost.OnCreateAutomationPeer%2A>做法，但它是內部的類別會傳回自動化對等。</span><span class="sxs-lookup"><span data-stu-id="62406-166">The <xref:System.Windows.Interop.HwndHost> implementation of <xref:System.Windows.Interop.HwndHost.OnCreateAutomationPeer%2A> does this, but the automation peer that it returns is an internal class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Automation.Peers.AutomationPeer" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi"><span data-ttu-id="62406-167">原始 DPI 縮放比例設定。</span><span class="sxs-lookup"><span data-stu-id="62406-167">The original DPI scale setting.</span></span></param>
        <param name="newDpi"><span data-ttu-id="62406-168">新的 DPI 縮放比例設定。</span><span class="sxs-lookup"><span data-stu-id="62406-168">The new DPI scale setting.</span></span></param>
        <summary><span data-ttu-id="62406-169">當轉譯此 HwndHost 的 DPI 變更時呼叫。</span><span class="sxs-lookup"><span data-stu-id="62406-169">Called when the DPI at which this HwndHost is rendered changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="62406-170">事件資料。</span><span class="sxs-lookup"><span data-stu-id="62406-170">The event data.</span></span></param>
        <summary><span data-ttu-id="62406-171">裝載的視窗收到 [WM_KEYDOWN](http://go.microsoft.com/fwlink/?LinkId=161282) 訊息時呼叫。</span><span class="sxs-lookup"><span data-stu-id="62406-171">Called when the hosted window receives a [WM_KEYDOWN](http://go.microsoft.com/fwlink/?LinkId=161282) message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-172">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-172">This type or member is not available in the Internet security zone.</span></span>  
>   
>  <span data-ttu-id="62406-173">這是類別處理常式的覆寫<xref:System.Windows.UIElement.OnKeyDown%2A>和提供的轉譯行為[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]訊息到[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]事件，將事件標示為已處理時適當。</span><span class="sxs-lookup"><span data-stu-id="62406-173">This is an override of the class handler <xref:System.Windows.UIElement.OnKeyDown%2A> and provides the behavior of translating the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] message into a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event, marking the event as handled whenever appropriate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="62406-174">事件資料。</span><span class="sxs-lookup"><span data-stu-id="62406-174">The event data.</span></span></param>
        <summary><span data-ttu-id="62406-175">裝載的視窗收到 [WM_KEYUP](http://go.microsoft.com/fwlink/?LinkId=161283) 訊息時呼叫。</span><span class="sxs-lookup"><span data-stu-id="62406-175">Called when the hosted window receives a [WM_KEYUP](http://go.microsoft.com/fwlink/?LinkId=161283) message.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-176">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-176">This type or member is not available in the Internet security zone.</span></span>  
>   
>  <span data-ttu-id="62406-177">這是類別處理常式的覆寫<xref:System.Windows.UIElement.OnKeyUp%2A>和提供的轉譯行為[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]訊息到[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]事件，將事件標示為已處理時適當。</span><span class="sxs-lookup"><span data-stu-id="62406-177">This is an override of the class handler <xref:System.Windows.UIElement.OnKeyUp%2A> and provides the behavior of translating the [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] message into a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] event, marking the event as handled whenever appropriate.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMnemonicCore">
      <MemberSignature Language="C#" Value="protected virtual bool OnMnemonicCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnMnemonicCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnMnemonicCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMnemonicCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnMnemonicCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="62406-178">助憶鍵及其相關聯資料的訊息。</span><span class="sxs-lookup"><span data-stu-id="62406-178">The message for the mnemonic and associated data.</span></span></param>
        <param name="modifiers"><span data-ttu-id="62406-179">輔助按鍵 (Modifier Key)。</span><span class="sxs-lookup"><span data-stu-id="62406-179">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="62406-180">當叫用這個接收的其中一個助憶鍵 (便捷鍵 (Access Key)) 時呼叫。</span><span class="sxs-lookup"><span data-stu-id="62406-180">Called when one of the mnemonics (access keys) for this sink is invoked.</span></span></summary>
        <returns><span data-ttu-id="62406-181">一律傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-181">Always returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="OnWindowPositionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnWindowPositionChanged (System.Windows.Rect rcBoundingBox);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWindowPositionChanged(valuetype System.Windows.Rect rcBoundingBox) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.OnWindowPositionChanged(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnWindowPositionChanged (rcBoundingBox As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnWindowPositionChanged(System::Windows::Rect rcBoundingBox);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rcBoundingBox" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rcBoundingBox"><span data-ttu-id="62406-182">視窗的位置。</span><span class="sxs-lookup"><span data-stu-id="62406-182">The window's position.</span></span></param>
        <summary><span data-ttu-id="62406-183">當所裝載之視窗的位置變更時呼叫。</span><span class="sxs-lookup"><span data-stu-id="62406-183">Called when the hosted window's position changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-184">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-184">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="62406-185">子類別可以覆寫這個方法，以根據提供維度的視窗大小調整<paramref name="rcBoundingBox" />。</span><span class="sxs-lookup"><span data-stu-id="62406-185">Subclasses can override this method to resize the window based on the provided dimensions of <paramref name="rcBoundingBox" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RegisterKeyboardInputSinkCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite RegisterKeyboardInputSinkCore(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.RegisterKeyboardInputSinkCore(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RegisterKeyboardInputSinkCore (sink As IKeyboardInputSink) As IKeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Interop::IKeyboardInputSite ^ RegisterKeyboardInputSinkCore(System::Windows::Interop::IKeyboardInputSink ^ sink);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="62406-186">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收。</span><span class="sxs-lookup"><span data-stu-id="62406-186">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="62406-187">註冊所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="62406-187">Registers the <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> interface of a contained component.</span></span></summary>
        <returns><span data-ttu-id="62406-188">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站台。</span><span class="sxs-lookup"><span data-stu-id="62406-188">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.HasFocusWithin">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.HasFocusWithin ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#HasFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Function HasFocusWithin () As Boolean Implements IKeyboardInputSink.HasFocusWithin" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.HasFocusWithin() = System::Windows::Interop::IKeyboardInputSink::HasFocusWithin;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62406-189">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />。</span><span class="sxs-lookup"><span data-stu-id="62406-189">For a description of this member, see <see cref="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="62406-190">如果接收或其包含的其中一個元件有焦點則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-190"><see langword="true" /> if the sink or one of its contained components has focus; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-191">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="62406-191">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="62406-192">只有在 <xref:System.Windows.Interop.HwndHost> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="62406-192">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#KeyboardInputSite" />
      <MemberSignature Language="VB.NET" Value=" Property KeyboardInputSite As IKeyboardInputSite Implements IKeyboardInputSink.KeyboardInputSite" />
      <MemberSignature Language="C++ CLI" Value="property System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite { System::Windows::Interop::IKeyboardInputSite ^ get(); void set(System::Windows::Interop::IKeyboardInputSite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="62406-193">如需這個成員的說明，請參閱 <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />。</span><span class="sxs-lookup"><span data-stu-id="62406-193">For a description of this member, see <see cref="P:System.Windows.Interop.IKeyboardInputSink.KeyboardInputSite" />.</span></span></summary>
        <value><span data-ttu-id="62406-194">對容器之 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 介面的參考。</span><span class="sxs-lookup"><span data-stu-id="62406-194">A reference to the container's <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> interface.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-195">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="62406-195">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="62406-196">只有在 <xref:System.Windows.Interop.HwndHost> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="62406-196">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="62406-197">呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="62406-197">to call this method.</span></span> <span data-ttu-id="62406-198">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="62406-198">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.OnMnemonic">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.OnMnemonic (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function OnMnemonic (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.OnMnemonic" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::OnMnemonic;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="62406-199">助憶鍵及其相關聯資料的訊息。</span><span class="sxs-lookup"><span data-stu-id="62406-199">The message for the mnemonic and associated data.</span></span> <span data-ttu-id="62406-200">請勿修改這個訊息結構。</span><span class="sxs-lookup"><span data-stu-id="62406-200">Do not modify this message structure.</span></span> <span data-ttu-id="62406-201">參考僅基於效能考量而傳送它。</span><span class="sxs-lookup"><span data-stu-id="62406-201">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="62406-202">輔助按鍵 (Modifier Key)。</span><span class="sxs-lookup"><span data-stu-id="62406-202">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="62406-203">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span><span class="sxs-lookup"><span data-stu-id="62406-203">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="62406-204">如果已處理訊息，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-204"><see langword="true" /> if the message was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-205">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="62406-205">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="62406-206">只有在 <xref:System.Windows.Interop.HwndHost> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="62406-206">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink">
      <MemberSignature Language="C#" Value="System.Windows.Interop.IKeyboardInputSite IKeyboardInputSink.RegisterKeyboardInputSink (System.Windows.Interop.IKeyboardInputSink sink);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Windows.Interop.IKeyboardInputSite System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(class System.Windows.Interop.IKeyboardInputSink sink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />
      <MemberSignature Language="VB.NET" Value="Function RegisterKeyboardInputSink (sink As IKeyboardInputSink) As IKeyboardInputSite Implements IKeyboardInputSink.RegisterKeyboardInputSink" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Interop::IKeyboardInputSite ^ System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System::Windows::Interop::IKeyboardInputSink ^ sink) = System::Windows::Interop::IKeyboardInputSink::RegisterKeyboardInputSink;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Interop.IKeyboardInputSite</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sink" Type="System.Windows.Interop.IKeyboardInputSink" />
      </Parameters>
      <Docs>
        <param name="sink"><span data-ttu-id="62406-207">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> 接收。</span><span class="sxs-lookup"><span data-stu-id="62406-207">The <see cref="T:System.Windows.Interop.IKeyboardInputSink" /> sink of the contained component.</span></span></param>
        <summary><span data-ttu-id="62406-208">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />。</span><span class="sxs-lookup"><span data-stu-id="62406-208">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.RegisterKeyboardInputSink(System.Windows.Interop.IKeyboardInputSink)" />.</span></span></summary>
        <returns><span data-ttu-id="62406-209">所包含之元件的 <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> 站台。</span><span class="sxs-lookup"><span data-stu-id="62406-209">The <see cref="T:System.Windows.Interop.IKeyboardInputSite" /> site of the contained component.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-210">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="62406-210">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="62406-211">只有在 <xref:System.Windows.Interop.HwndHost> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="62406-211">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="62406-212">呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="62406-212">to call this method.</span></span> <span data-ttu-id="62406-213">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="62406-213">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TabInto">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TabInto (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TabInto(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TabInto(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Function TabInto (request As TraversalRequest) As Boolean Implements IKeyboardInputSink.TabInto" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TabInto(System::Windows::Input::TraversalRequest ^ request) = System::Windows::Interop::IKeyboardInputSink::TabInto;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="62406-214">指定是否應將焦點設定為第一個或最後一個定位停駐點。</span><span class="sxs-lookup"><span data-stu-id="62406-214">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="62406-215">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />。</span><span class="sxs-lookup"><span data-stu-id="62406-215">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="62406-216">如果已依照要求設定焦點則為 <see langword="true" />，如果沒有定位停駐點則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-216"><see langword="true" /> if the focus has been set as requested; <see langword="false" />, if there are no tab stops.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-217">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="62406-217">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="62406-218">只有在 <xref:System.Windows.Interop.HwndHost> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="62406-218">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="62406-219">呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="62406-219">to call this method.</span></span> <span data-ttu-id="62406-220">相關聯的列舉型別： <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="62406-220">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateAccelerator (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateAccelerator (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateAccelerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateAccelerator;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="62406-221">訊息及相關聯資料。</span><span class="sxs-lookup"><span data-stu-id="62406-221">The message and associated data.</span></span> <span data-ttu-id="62406-222">請勿修改這個結構。</span><span class="sxs-lookup"><span data-stu-id="62406-222">Do not modify this structure.</span></span> <span data-ttu-id="62406-223">參考僅基於效能考量而傳送它。</span><span class="sxs-lookup"><span data-stu-id="62406-223">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="62406-224">輔助按鍵 (Modifier Key)。</span><span class="sxs-lookup"><span data-stu-id="62406-224">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="62406-225">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span><span class="sxs-lookup"><span data-stu-id="62406-225">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="62406-226">如果訊息由方法實作處理則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-226"><see langword="true" /> if the message was handled by the method implementation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-227">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="62406-227">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="62406-228">只有在 <xref:System.Windows.Interop.HwndHost> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="62406-228">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="62406-229">呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="62406-229">to call this method.</span></span> <span data-ttu-id="62406-230">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="62406-230">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Interop.IKeyboardInputSink.TranslateChar">
      <MemberSignature Language="C#" Value="bool IKeyboardInputSink.TranslateChar (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.System#Windows#Interop#IKeyboardInputSink#TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Function TranslateChar (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean Implements IKeyboardInputSink.TranslateChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Interop.IKeyboardInputSink.TranslateChar(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers) = System::Windows::Interop::IKeyboardInputSink::TranslateChar;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="62406-231">訊息及相關聯資料。</span><span class="sxs-lookup"><span data-stu-id="62406-231">The message and associated data.</span></span> <span data-ttu-id="62406-232">請勿修改這個結構。</span><span class="sxs-lookup"><span data-stu-id="62406-232">Do not modify this structure.</span></span> <span data-ttu-id="62406-233">參考僅基於效能考量而傳送它。</span><span class="sxs-lookup"><span data-stu-id="62406-233">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="62406-234">輔助按鍵 (Modifier Key)。</span><span class="sxs-lookup"><span data-stu-id="62406-234">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="62406-235">如需這個成員的說明，請參閱 <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />。</span><span class="sxs-lookup"><span data-stu-id="62406-235">For a description of this member, see <see cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="62406-236">如果已處理訊息則為 <see langword="true" />，此時不應呼叫 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-236"><see langword="true" /> if the message was processed and <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> should not be called; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62406-237">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="62406-237">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="62406-238">只有在 <xref:System.Windows.Interop.HwndHost> 執行個體轉換成 <xref:System.Windows.Interop.IKeyboardInputSink> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="62406-238">It can be used only when the <xref:System.Windows.Interop.HwndHost> instance is cast to an <xref:System.Windows.Interop.IKeyboardInputSink> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabIntoCore">
      <MemberSignature Language="C#" Value="protected virtual bool TabIntoCore (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TabIntoCore(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.TabIntoCore(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TabIntoCore (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TabIntoCore(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="62406-239">指定是否應將焦點設定為第一個或最後一個定位停駐點。</span><span class="sxs-lookup"><span data-stu-id="62406-239">Specifies whether focus should be set to the first or the last tab stop.</span></span></param>
        <summary><span data-ttu-id="62406-240">將焦點設定在接收的第一個定位停駐點 (Tab Stop) 或最後一個定位停駐點。</span><span class="sxs-lookup"><span data-stu-id="62406-240">Sets focus on either the first tab stop or the last tab stop of the sink.</span></span></summary>
        <returns><span data-ttu-id="62406-241">一律傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-241">Always returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TabInto(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateAcceleratorCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateAcceleratorCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateAcceleratorCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.TranslateAcceleratorCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateAcceleratorCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateAcceleratorCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="62406-242">訊息及相關聯資料。</span><span class="sxs-lookup"><span data-stu-id="62406-242">The message and associated data.</span></span> <span data-ttu-id="62406-243">請勿修改這個結構。</span><span class="sxs-lookup"><span data-stu-id="62406-243">Do not modify this structure.</span></span> <span data-ttu-id="62406-244">參考僅基於效能考量而傳送它。</span><span class="sxs-lookup"><span data-stu-id="62406-244">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="62406-245">輔助按鍵 (Modifier Key)。</span><span class="sxs-lookup"><span data-stu-id="62406-245">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="62406-246">在 Keydown 訊息層級處理鍵盤輸入。</span><span class="sxs-lookup"><span data-stu-id="62406-246">Processes keyboard input at the keydown message level.</span></span></summary>
        <returns><span data-ttu-id="62406-247">一律傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-247">Always returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateAccelerator(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="TranslateCharCore">
      <MemberSignature Language="C#" Value="protected virtual bool TranslateCharCore (ref System.Windows.Interop.MSG msg, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool TranslateCharCore(valuetype System.Windows.Interop.MSG&amp; msg, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.TranslateCharCore(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function TranslateCharCore (ByRef msg As MSG, modifiers As ModifierKeys) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool TranslateCharCore(System::Windows::Interop::MSG % msg, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Interop.MSG&amp;" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="msg"><span data-ttu-id="62406-248">訊息及相關聯資料。</span><span class="sxs-lookup"><span data-stu-id="62406-248">The message and associated data.</span></span> <span data-ttu-id="62406-249">請勿修改這個結構。</span><span class="sxs-lookup"><span data-stu-id="62406-249">Do not modify this structure.</span></span> <span data-ttu-id="62406-250">參考僅基於效能考量而傳送它。</span><span class="sxs-lookup"><span data-stu-id="62406-250">It is passed by reference for performance reasons only.</span></span></param>
        <param name="modifiers"><span data-ttu-id="62406-251">輔助按鍵 (Modifier Key)。</span><span class="sxs-lookup"><span data-stu-id="62406-251">Modifier keys.</span></span></param>
        <summary><span data-ttu-id="62406-252">先處理 WM_CHAR、WM_SYSCHAR、WM_DEADCHAR 和 WM_SYSDEADCHAR 輸入訊息，接著呼叫 <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="62406-252">Processes WM_CHAR, WM_SYSCHAR, WM_DEADCHAR, and WM_SYSDEADCHAR input messages before the <see cref="M:System.Windows.Interop.IKeyboardInputSink.OnMnemonic(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" /> method is called.</span></span></summary>
        <returns><span data-ttu-id="62406-253">一律傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="62406-253">Always returns <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Interop.IKeyboardInputSink.TranslateChar(System.Windows.Interop.MSG@,System.Windows.Input.ModifierKeys)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateWindowPos">
      <MemberSignature Language="C#" Value="public void UpdateWindowPos ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateWindowPos() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.UpdateWindowPos" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateWindowPos ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateWindowPos();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="62406-254">更新子視窗的大小、可視性和位置，以反映項目的目前狀態。</span><span class="sxs-lookup"><span data-stu-id="62406-254">Updates the child window's size, visibility, and position to reflect the current state of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-255">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-255">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual IntPtr WndProc (IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, ref bool handled);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance native int WndProc(native int hwnd, int32 msg, native int wParam, native int lParam, bool&amp; handled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Interop.HwndHost.WndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function WndProc (hwnd As IntPtr, msg As Integer, wParam As IntPtr, lParam As IntPtr, ByRef handled As Boolean) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IntPtr WndProc(IntPtr hwnd, int msg, IntPtr wParam, IntPtr lParam, bool % handled);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hwnd" Type="System.IntPtr" />
        <Parameter Name="msg" Type="System.Int32" />
        <Parameter Name="wParam" Type="System.IntPtr" />
        <Parameter Name="lParam" Type="System.IntPtr" />
        <Parameter Name="handled" Type="System.Boolean&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="hwnd"><span data-ttu-id="62406-256">所裝載之視窗的視窗控制代碼。</span><span class="sxs-lookup"><span data-stu-id="62406-256">The window handle of the hosted window.</span></span></param>
        <param name="msg"><span data-ttu-id="62406-257">要採取行動的訊息。</span><span class="sxs-lookup"><span data-stu-id="62406-257">The message to act upon.</span></span></param>
        <param name="wParam"><span data-ttu-id="62406-258">可能與處理訊息相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="62406-258">Information that may be relevant to handling the message.</span></span> <span data-ttu-id="62406-259">這通常用來儲存較小的資訊，例如旗標。</span><span class="sxs-lookup"><span data-stu-id="62406-259">This is typically used to store small pieces of information, such as flags.</span></span></param>
        <param name="lParam"><span data-ttu-id="62406-260">可能與處理訊息相關的資訊。</span><span class="sxs-lookup"><span data-stu-id="62406-260">Information that may be relevant to handling the message.</span></span> <span data-ttu-id="62406-261">這通常用來參考物件。</span><span class="sxs-lookup"><span data-stu-id="62406-261">This is typically used to reference an object.</span></span></param>
        <param name="handled"><span data-ttu-id="62406-262">事件產生是否應該標示已處理。</span><span class="sxs-lookup"><span data-stu-id="62406-262">Whether events resulting should be marked handled.</span></span></param>
        <summary><span data-ttu-id="62406-263">在衍生類別中覆寫時，存取所裝載之子視窗的視窗處理序 (控制代碼)。</span><span class="sxs-lookup"><span data-stu-id="62406-263">When overridden in a derived class, accesses the window process (handle) of the hosted child window.</span></span></summary>
        <returns><span data-ttu-id="62406-264">子視窗的視窗控制代碼。</span><span class="sxs-lookup"><span data-stu-id="62406-264">The window handle of the child window.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="62406-265">這個類型或成員不是可用的網際網路安全性區域中。</span><span class="sxs-lookup"><span data-stu-id="62406-265">This type or member is not available in the Internet security zone.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="62406-266">呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="62406-266">to call this method.</span></span> <span data-ttu-id="62406-267">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="62406-267">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="62406-268">中的基底實作<see cref="T:System.Windows.Interop.HwndHost" />不會傳回實際的處理程序，但是會傳回<c>是 IntPtr.Zero</c>為保全。</span><span class="sxs-lookup"><span data-stu-id="62406-268">The base implementation in <see cref="T:System.Windows.Interop.HwndHost" /> does not return a practical process, but will return <c>IntPtr.Zero</c> as a failsafe.</span></span></para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>