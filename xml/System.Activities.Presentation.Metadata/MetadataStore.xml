<Type Name="MetadataStore" FullName="System.Activities.Presentation.Metadata.MetadataStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2d7328213c01192b638e4b928ceabbb5f98ccd01" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32687958" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MetadataStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed MetadataStore extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Metadata.MetadataStore" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataStore abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6fb08-101">雜湊表的記憶體中集合，此集合允許依 <see cref="T:System.Type" /> 快速查閱設計工具元素。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6fb08-101">An in-memory collection of hash tables that allows the rapid lookup of designer elements by <see cref="T:System.Type" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fb08-102">中繼資料存放區包含自訂屬性中繼資料，例如設計工具與型別之間的關聯。</span><span class="sxs-lookup"><span data-stu-id="6fb08-102">The metadata store contains custom attribute metadata, such as the association between designers and types.</span></span> <span data-ttu-id="6fb08-103">自訂屬性可以在 <xref:System.Activities.Presentation.Metadata.AttributeTable> 中定義，並加入至中繼資料存放區。</span><span class="sxs-lookup"><span data-stu-id="6fb08-103">Custom attributes can be defined in an <xref:System.Activities.Presentation.Metadata.AttributeTable> and added to the metadata store.</span></span> <span data-ttu-id="6fb08-104">加入屬性之後，這些屬性就會出現在針對 <xref:System.ComponentModel.TypeDescriptor> 所進行的呼叫中。</span><span class="sxs-lookup"><span data-stu-id="6fb08-104">After the attributes are added, they will appear in calls made to <xref:System.ComponentModel.TypeDescriptor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6fb08-105">下列程式碼範例顯示如何讓 `AcitivityDesigner1` 自訂活動設計工具與自訂活動產生關聯。</span><span class="sxs-lookup"><span data-stu-id="6fb08-105">The following code example shows how to associate the `AcitivityDesigner1` custom activity designer with a custom activity.</span></span> <span data-ttu-id="6fb08-106">如需如何建立自訂活動設計工具的詳細資訊，請參閱[How to： 建立自訂活動設計工具](~/docs/framework/windows-workflow-foundation/how-to-create-a-custom-activity-designer.md)。</span><span class="sxs-lookup"><span data-stu-id="6fb08-106">For more information about how to create custom activity designers, see [How to: Create a Custom Activity Designer](~/docs/framework/windows-workflow-foundation/how-to-create-a-custom-activity-designer.md).</span></span>  
  
```csharp  
internal class Metadata : IRegisterMetadata  
{  
    private AttributeTable attributes;  
  
    // Called by the designer to register any design-time metadata.  
    public void Register()  
    {  
        AttributeTableBuilder builder = new AttributeTableBuilder();  
  
        // Add the custom attributes to associate the ActivityDesigner1 custom designer  
        // with the custom activity MyActivity.  
        builder.AddCustomAttributes(  
            typeof(MyActivity),  
            new DesignerAttribute(typeof(ActivityDesigner1)));  
        MetadataStore.AddAttributeTable(builder.CreateTable());  
  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAttributeTable">
      <MemberSignature Language="C#" Value="public static void AddAttributeTable (System.Activities.Presentation.Metadata.AttributeTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAttributeTable(class System.Activities.Presentation.Metadata.AttributeTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Metadata.MetadataStore.AddAttributeTable(System.Activities.Presentation.Metadata.AttributeTable)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddAttributeTable (table As AttributeTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddAttributeTable(System::Activities::Presentation::Metadata::AttributeTable ^ table);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Activities.Presentation.Metadata.AttributeTable" />
      </Parameters>
      <Docs>
        <param name="table">
          <span data-ttu-id="6fb08-107">要加入的資料表。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fb08-107">The table to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6fb08-108">將給定資料表加入至目前 <see cref="T:System.AppDomain" /> 物件的屬性存放區中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6fb08-108">Adds the given table to the current <see cref="T:System.AppDomain" /> object’s attribute store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6fb08-109">加入資料表之後，<xref:System.ComponentModel.TypeDescriptor> 的呼叫將會使用在新加入之資料表中定義的屬性。</span><span class="sxs-lookup"><span data-stu-id="6fb08-109">After the table is added, calls to <xref:System.ComponentModel.TypeDescriptor> will use attributes defined in the newly added table.</span></span> <span data-ttu-id="6fb08-110">您可以將多個資料表加入至屬性存放區。</span><span class="sxs-lookup"><span data-stu-id="6fb08-110">Multiple tables can be added to the attribute store.</span></span> <span data-ttu-id="6fb08-111">如果發生衝突，則會使用最近加入之資料表中的屬性。</span><span class="sxs-lookup"><span data-stu-id="6fb08-111">In the case of conflicts, attributes in the most recently added table are used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>