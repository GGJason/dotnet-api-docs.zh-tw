<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="074615eb82b92ca4e3ece76654cd584251fd5a54" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597634" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供屬性和方法，用於定義 URL 對應至實體檔案的方式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您傳遞的執行個體<xref:System.Web.Routing.PageRouteHandler>至<xref:System.Web.Routing.Route>建構函式對應的實體檔案的 URL。 <xref:System.Web.Routing.PageRouteHandler>物件指定的虛擬路徑的實體檔案，並決定是否要檢查授權規則的實體的 URL。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Routing.PageRouteHandler" /> 類別的新執行個體。</summary>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">此 <see cref="P:System.Web.Routing.RouteData.Route" /> 物件之實體檔案的虛擬路徑。 檔案必須位於目前應用程式中。 因此，路徑必須以波狀符號 (~) 開始。</param>
        <summary>初始化 <see cref="T:System.Web.Routing.PageRouteHandler" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您使用這個建構函式，<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性設定為`true`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> 參數是 <see langword="null" /> 或空字串，或者不是以"~ /" 開頭。</exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">此 <see cref="P:System.Web.Routing.RouteData.Route" /> 物件之實體檔案的虛擬路徑。 檔案必須位於目前應用程式中。 因此，路徑必須以波狀符號 (~) 開始。</param>
        <param name="checkPhysicalUrlAccess">如果此屬性設為 <see langword="false" />，授權規則將套用至要求 URL，而非實體頁面的 URL。 如果此屬性設為 <see langword="true" />，授權規則將同時套用至要求 URL 和實體頁面的 URL。</param>
        <summary>初始化 <see cref="T:System.Web.Routing.PageRouteHandler" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性是`true`。 因此，如果您想要套用至實體頁面的 URL 和路由 URL 授權規則，您可以使用<xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29>建構函式，而不是這個建構函式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="virtualPath" /> 參數是 <see langword="null" /> 或空字串，或者不是以"~ /" 開頭。</exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值決定是否將授權規則套用至實體檔案的 URL。</summary>
        <value>如果要針對與路由相關之實體檔案的 URL 檢查授權則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以設定<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性，當您使用<xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29>建構函式。  
  
 值<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性會決定是否<xref:System.Web.Routing.PageRouteHandler>物件會檢查安全性權限僅適用於路由 URL，或在實體頁面及路由 URL。  
  
 當<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性設定為`true`（此為其預設值），使用者必須擁有存取的路由 URL 及實體的 URL 的權限。 當<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性設定為`false`使用者需要存取的路由 URL 的權限，不檢查權限的實體的 URL。  
  
 在 Web.config 檔案中，會定義權限，如下列範例所示：  
  
```  
<configuration>  
  <location path="categoriespage.aspx">  
    <system.web>  
      <authorization>  
        <allow roles="admin"/>  
        <deny users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
  <location path="category">  
    <system.web>  
      <authorization>  
        <allow users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
</configuration>  
```  
  
 包含在要求 URL 的`Category/food/show`網域名稱之後，該路由的 URL 模式`Category/{action}/{categoryName}`實體頁面且 Categoriespage.aspx，[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]適用於下列方式之一，在上述範例中定義的權限：  
  
-   如果<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性是`false`會授與所有使用者存取，因為所有的使用者授都與存取權開頭的 URL 模式`category`。  
  
-   如果<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性是`true`，則只`admin`會授與使用者存取。 所有使用者都有權存取開頭的 URL 模式`category`，但只`admin`使用者都有權存取 Categoriespage.aspx 在實體頁面。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">封裝要求相關資訊的物件。</param>
        <summary>傳回處理要求的物件。</summary>
        <returns>處理要求的物件。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestContext" /> 參數為 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">封裝要求相關資訊的物件。</param>
        <summary>在任何取代參數套用至替代項目之後，傳回路由之實體檔案的虛擬路徑。</summary>
        <returns>從路由產生之實體檔案的 URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>值不包含任何取代參數，<xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A>方法會傳回相同的值<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="requestContext" /> 參數為 <see langword="null" />。</exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與此路由相關聯之網頁的虛擬路徑。</summary>
        <value>在替代項目套用於任何取代參數之前的網頁 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您設定<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>屬性<xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType>建構函式或在<xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType>建構函式。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
  </Members>
</Type>