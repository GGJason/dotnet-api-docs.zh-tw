<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e57b2750234e1844025e285e7241399f3129ce1b" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39989598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d39b3-101">提供屬性和方法，用於定義 URL 對應至實體檔案的方式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d39b3-101">Provides properties and methods for defining how a URL maps to a physical file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d39b3-102">傳遞的執行個體<xref:System.Web.Routing.PageRouteHandler>至<xref:System.Web.Routing.Route>建構函式，以便將對應的實體檔案的 URL。</span><span class="sxs-lookup"><span data-stu-id="d39b3-102">You pass an instance of <xref:System.Web.Routing.PageRouteHandler> to the <xref:System.Web.Routing.Route> constructor in order to map a URL of a physical file.</span></span> <span data-ttu-id="d39b3-103"><xref:System.Web.Routing.PageRouteHandler>物件指定之實體檔案的虛擬路徑，並決定是否要檢查的實體 URL 授權規則。</span><span class="sxs-lookup"><span data-stu-id="d39b3-103">The <xref:System.Web.Routing.PageRouteHandler> object specifies the virtual path of the physical file and determines whether authorization rules for the physical URL is checked.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d39b3-104">初始化 <see cref="T:System.Web.Routing.PageRouteHandler" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-104">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="d39b3-105">此 <see cref="P:System.Web.Routing.RouteData.Route" /> 物件之實體檔案的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-105">The virtual path of the physical file for this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span>
          </span>
          <span data-ttu-id="d39b3-106">檔案必須位於目前應用程式中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-106">The file must be located in the current application.</span>
          </span>
          <span data-ttu-id="d39b3-107">因此，路徑必須以波狀符號 (~) 開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-107">Therefore, the path must begin with a tilde (~).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d39b3-108">初始化 <see cref="T:System.Web.Routing.PageRouteHandler" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-108">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d39b3-109">當您使用這個建構函式，<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="d39b3-109">When you use this constructor, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d39b3-110">
            <paramref name="virtualPath" /> 參數是 <see langword="null" /> 或空字串，或者不是以"~ /" 開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-110">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="d39b3-111">此 <see cref="P:System.Web.Routing.RouteData.Route" /> 物件之實體檔案的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-111">The virtual path of the physical file of this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span>
          </span>
          <span data-ttu-id="d39b3-112">檔案必須位於目前應用程式中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-112">The file must be located in the current application.</span>
          </span>
          <span data-ttu-id="d39b3-113">因此，路徑必須以波狀符號 (~) 開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-113">Therefore, the path must begin with a tilde (~).</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="d39b3-114">如果此屬性設為 <see langword="false" />，授權規則將套用至要求 URL，而非實體頁面的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-114">If this property is set to <see langword="false" />, authorization rules will be applied to the request URL and not to the URL of the physical page.</span>
          </span>
          <span data-ttu-id="d39b3-115">如果此屬性設為 <see langword="true" />，授權規則將同時套用至要求 URL 和實體頁面的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-115">If this property is set to <see langword="true" />, authorization rules will be applied to both the request URL and to the URL of the physical page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d39b3-116">初始化 <see cref="T:System.Web.Routing.PageRouteHandler" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-116">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d39b3-117">根據預設，<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性是`true`。</span><span class="sxs-lookup"><span data-stu-id="d39b3-117">By default, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`.</span></span> <span data-ttu-id="d39b3-118">因此，如果您想要套用至實體頁面的 URL 和路由 URL 的授權規則，您可以使用<xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29>建構函式，而不是這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="d39b3-118">Therefore, if you want authorization rules to be applied to both the URL of the physical page and to the route URL, you can use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> constructor instead of this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d39b3-119">
            <paramref name="virtualPath" /> 參數是 <see langword="null" /> 或空字串，或者不是以"~ /" 開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-119">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d39b3-120">取得值，這個值決定是否將授權規則套用至實體檔案的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-120">Gets a value that determines whether authorization rules are applied to the physical file's URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d39b3-121">如果要針對與路由相關之實體檔案的 URL 檢查授權則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-121">
              <see langword="true" /> if authorization is checked for the URL of the physical file that is associated with the route; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d39b3-122">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-122">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d39b3-123">您可以設定<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性，當您使用<xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="d39b3-123">You can set the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property when you use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> constructor.</span></span>  
  
 <span data-ttu-id="d39b3-124">值<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性會決定是否<xref:System.Web.Routing.PageRouteHandler>物件會檢查安全性權限只針對路由 URL 或實體的頁面和路由 URL。</span><span class="sxs-lookup"><span data-stu-id="d39b3-124">The value of the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property determines whether the <xref:System.Web.Routing.PageRouteHandler> object will check security permissions only for the route URL or for both the physical page and the route URL.</span></span>  
  
 <span data-ttu-id="d39b3-125">當<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性設定為`true`（此為其預設值），使用者必須具備權限存取的路由 URL 和實體的 URL。</span><span class="sxs-lookup"><span data-stu-id="d39b3-125">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true` (which is its default value), a user must have permission to access both the route URL and the physical URL.</span></span> <span data-ttu-id="d39b3-126">當<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性設定為`false`使用者需要存取的路由 URL 的權限，不會檢查實體的 URL 的權限。</span><span class="sxs-lookup"><span data-stu-id="d39b3-126">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `false`, a user requires only permission to access the route URL, and permissions for the physical URL are not checked.</span></span>  
  
 <span data-ttu-id="d39b3-127">權限定義在 Web.config 檔案中，如下列範例所示：</span><span class="sxs-lookup"><span data-stu-id="d39b3-127">Permissions are defined in the Web.config file, as shown in the following example:</span></span>  
  
```  
<configuration>  
  <location path="categoriespage.aspx">  
    <system.web>  
      <authorization>  
        <allow roles="admin"/>  
        <deny users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
  <location path="category">  
    <system.web>  
      <authorization>  
        <allow users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
</configuration>  
```  
  
 <span data-ttu-id="d39b3-128">要求 url，其中包含`Category/food/show`網域名稱，該路由的 URL 模式之後`Category/{action}/{categoryName}`實體的頁面，且 Categoriespage.aspx，[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]適用於其中一種以下列方式在上述範例中定義的權限：</span><span class="sxs-lookup"><span data-stu-id="d39b3-128">For a request URL that contains `Category/food/show` after the domain name, if the route URL pattern is `Category/{action}/{categoryName}` and the physical page is Categoriespage.aspx, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applies the permissions defined in the previous example in one of the following ways:</span></span>  
  
-   <span data-ttu-id="d39b3-129">如果<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性是`false`所有的使用者被授與存取，因為所有的使用者授與存取權的開頭的 URL 模式`category`。</span><span class="sxs-lookup"><span data-stu-id="d39b3-129">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `false`, all users are granted access, because all users are granted access to the URL pattern that starts with `category`.</span></span>  
  
-   <span data-ttu-id="d39b3-130">如果<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>屬性是`true`，則僅`admin`會授與使用者存取。</span><span class="sxs-lookup"><span data-stu-id="d39b3-130">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`, only `admin` users are granted access.</span></span> <span data-ttu-id="d39b3-131">所有的使用者可以存取開頭的 URL 模式`category`，但只有`admin`使用者具有存取權的實體頁面 Categoriespage.aspx。</span><span class="sxs-lookup"><span data-stu-id="d39b3-131">All users have access to the URL pattern that begins with `category`, but only `admin` users have access to the physical page Categoriespage.aspx.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="d39b3-132">封裝要求相關資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-132">An object that encapsulates information about the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d39b3-133">傳回處理要求的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-133">Returns the object that processes the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d39b3-134">處理要求的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-134">The object that processes the request.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d39b3-135">
            <paramref name="requestContext" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-135">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="d39b3-136">封裝要求相關資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-136">An object that encapsulates information about the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d39b3-137">在任何取代參數套用至替代項目之後，傳回路由之實體檔案的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-137">Returns the virtual path of the physical file for the route after substitutions have been applied to any replacement parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d39b3-138">從路由產生之實體檔案的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-138">The URL of the physical file that was generated from a route.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d39b3-139">如果<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>值不包含任何取代參數，<xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A>方法會傳回相同的值<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d39b3-139">If the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> value does not contain any replacement parameters, the <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> method returns the same value as the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d39b3-140">
            <paramref name="requestContext" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-140">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d39b3-141">取得與此路由相關聯之網頁的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-141">Gets the virtual path of the Web page that is associated with this route.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d39b3-142">在替代項目套用於任何取代參數之前的網頁 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d39b3-142">The URL of the Web page, before substitutions have been applied for any replacement parameters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d39b3-143">您設定<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>中的屬性<xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType>建構函式或<xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType>建構函式。</span><span class="sxs-lookup"><span data-stu-id="d39b3-143">You set the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor or in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
  </Members>
</Type>