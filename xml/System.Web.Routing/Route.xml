<Type Name="Route" FullName="System.Web.Routing.Route">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f2fbba1ee47650bf3611800dd67cd5e74d70e519" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52245804" /></Metadata><TypeSignature Language="C#" Value="public class Route : System.Web.Routing.RouteBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Route extends System.Web.Routing.RouteBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.Route" />
  <TypeSignature Language="VB.NET" Value="Public Class Route&#xA;Inherits RouteBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Route : System::Web::Routing::RouteBase" />
  <TypeSignature Language="F#" Value="type Route = class&#xA;    inherit RouteBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Routing.RouteBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>提供用於定義路由及取得路由相關資訊的屬性和方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Routing.Route>類別可讓您指定的 ASP.NET 應用程式中的路由處理方式。 您建立<xref:System.Web.Routing.Route>物件中每個您想要對應至類別，可處理的 URL 模式會要求對應至該模式。 然後，您新增的路由<xref:System.Web.Routing.RouteTable.Routes%2A>集合。 當應用程式收到要求時，ASP.NET 路由逐一中的路由<xref:System.Web.Routing.RouteTable.Routes%2A>来尋找符合 URL 模式的第一個路由集合。  
  
 設定<xref:System.Web.Routing.Route.Url%2A>URL 模式的屬性。 URL 模式是由 HTTP 要求中的應用程式名稱後面出現的區段所組成。 例如，在 URL `http://www.contoso.com/products/show/beverages`，若要套用的模式`products/show/beverages`。 具有三個模式區段，例如`{controller}/{action}/{id}`，符合 URL `http://www.contoso.com/products/show/beverages`。 每個區段以分隔`/`字元。 當將區段括在大括弧 (`{`和`}`)，該區段指 URL 參數。 ASP.NET 路由要求中擷取值，並將它指派至的 URL 參數。 在上一個範例中，URL 參數`action`會將值指派給`show`。 如果區段不括在大括弧，值會視為常值中。  
  
 設定<xref:System.Web.Routing.Route.Defaults%2A>屬性設<xref:System.Web.Routing.RouteValueDictionary>物件，其中包含遺漏某參數從 URL，或在 URL 中設定為尚未參數化的其他值時，所使用的值。 設定<xref:System.Web.Routing.Route.Constraints%2A>屬性，以<xref:System.Web.Routing.RouteValueDictionary>物件，其中包含屬於其中一個規則運算式的值或<xref:System.Web.Routing.IRouteConstraint>物件。 這些值來判斷是否為有效的參數值。  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Web.Routing.Route>物件，並將它新增至<xref:System.Web.Routing.RouteTable.Routes%2A>屬性。  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.Routing.Route" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.Route : string * System.Web.Routing.IRouteHandler -&gt; System.Web.Routing.Route" Usage="new System.Web.Routing.Route (url, routeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">路由的 URL 模式。</param>
        <param name="routeHandler">此物件會處理路徑的要求。</param>
        <summary>使用指定的 URL 模式和處理常式類別，初始化 <see cref="T:System.Web.Routing.Route" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例示範如何建立<xref:System.Web.Routing.Route>物件，並將它新增至<xref:System.Web.Routing.RouteTable.Routes%2A>屬性。  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.Route : string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.IRouteHandler -&gt; System.Web.Routing.Route" Usage="new System.Web.Routing.Route (url, defaults, routeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">路由的 URL 模式。</param>
        <param name="defaults">URL 中遺漏之任何參數所使用的值。</param>
        <param name="routeHandler">此物件會處理路徑的要求。</param>
        <summary>使用指定的 URL 模式、預設參數值和處理常式類別，初始化 <see cref="T:System.Web.Routing.Route" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, constraints As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.Route : string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.IRouteHandler -&gt; System.Web.Routing.Route" Usage="new System.Web.Routing.Route (url, defaults, constraints, routeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">路由的 URL 模式。</param>
        <param name="defaults">URL 未包含所有參數時所要使用的值。</param>
        <param name="constraints">指定 URL 參數之有效值的規則運算式。</param>
        <param name="routeHandler">此物件會處理路徑的要求。</param>
        <summary>使用指定的 URL 模式、預設參數值、條件約束和處理常式類別，初始化 <see cref="T:System.Web.Routing.Route" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Constraints" />
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.Route : string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.IRouteHandler -&gt; System.Web.Routing.Route" Usage="new System.Web.Routing.Route (url, defaults, constraints, dataTokens, routeHandler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">路由的 URL 模式。</param>
        <param name="defaults">URL 未包含所有參數時所要使用的值。</param>
        <param name="constraints">指定 URL 參數之有效值的規則運算式。</param>
        <param name="dataTokens">傳遞給路由處理常式的自訂值，但不會用來判斷路由是否符合特定 URL 模式。 這些值會傳遞至路由處理常式，以用來處理要求。</param>
        <param name="routeHandler">此物件會處理路徑的要求。</param>
        <summary>使用指定的 URL 模式、預設參數值、條件約束、自訂值和處理常式類別，初始化 <see cref="T:System.Web.Routing.Route" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Constraints" />
        <altmember cref="P:System.Web.Routing.Route.DataTokens" />
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary Constraints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public Property Constraints As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ Constraints { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Constraints : System.Web.Routing.RouteValueDictionary with get, set" Usage="System.Web.Routing.Route.Constraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定運算式的字典，這些運算式指定 URL 參數的有效值。</summary>
        <value>物件，包含參數名稱和運算式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Routing.Route.Constraints%2A>屬性可讓您限制處理的路由 URL 參數的可接受的值。 您指派<xref:System.Web.Routing.RouteValueDictionary>物件至<xref:System.Web.Routing.Route.Constraints%2A>屬性。 在每個項目<xref:System.Web.Routing.RouteValueDictionary>物件包含名稱的參數和下列其中之一：  
  
-   定義規則運算式的字串。 規則運算式是不區分大小寫。  
  
-   物件，實作<xref:System.Web.Routing.IRouteConstraint>介面，且包含<xref:System.Web.Routing.IRouteConstraint.Match%2A>方法。  
  
 <xref:System.Web.Routing.HttpMethodConstraint> 類別會實作 <xref:System.Web.Routing.IRouteConstraint> 介面。 您可以包含的執行個體<xref:System.Web.Routing.HttpMethodConstraint>作為以指定的 HTTP 動詞命令是可接受的路由條件約束的類別。  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Web.Routing.Route>物件，並設定<xref:System.Web.Routing.Route.Constraints%2A>， <xref:System.Web.Routing.Route.DataTokens%2A>，和<xref:System.Web.Routing.Route.Defaults%2A>屬性。  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 下列範例所示<xref:System.Web.Routing.Route>物件，其<xref:System.Web.Routing.Route.Constraints%2A>屬性包含名為的參數`httpMethod`的執行個體<xref:System.Web.Routing.HttpMethodConstraint>值的類別。  
  
 [!code-csharp[System.Web.Routing.Route.Constraints#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.Constraints/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.Constraints#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.Constraints/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName="DataTokens">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary DataTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary DataTokens" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.DataTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property DataTokens As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ DataTokens { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTokens : System.Web.Routing.RouteValueDictionary with get, set" Usage="System.Web.Routing.Route.DataTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定自訂值，這些自訂值會傳遞給路由處理常式，但不會用來判斷路由是否符合 URL 模式。</summary>
        <value>包含自訂值的物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Web.Routing.RouteData.DataTokens%2A>屬性來擷取，或指派與路由相關聯的值不會用來判斷路由是否符合 URL 模式。 這些值會傳遞至路由處理常式，以用來處理要求。  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Web.Routing.Route>物件，並設定<xref:System.Web.Routing.Route.Constraints%2A>， <xref:System.Web.Routing.Route.DataTokens%2A>，和<xref:System.Web.Routing.Route.Defaults%2A>屬性。  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary Defaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary Defaults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public Property Defaults As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ Defaults { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Defaults : System.Web.Routing.RouteValueDictionary with get, set" Usage="System.Web.Routing.Route.Defaults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 URL 未包含所有參數時所要使用的值。</summary>
        <value>物件，包含參數名稱和預設值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Routing.Route.Defaults%2A>屬性可讓您設定 URL 參數的值，如果 URL 未包含該參數的區段。 您指派<xref:System.Web.Routing.RouteValueDictionary>物件至<xref:System.Web.Routing.Route.Defaults%2A>屬性。 在每個項目<xref:System.Web.Routing.RouteValueDictionary>物件包含的參數和值，如果缺少此參數的名稱。  
  
 您可以包含中未定義參數的預設值<xref:System.Web.Routing.Route.Url%2A>為區段的屬性。 當 ASP.NET 路由處理要求時，此預設值一律會傳遞至路由處理常式。 當您建構 URL 並將包含未定義的區段的預設參數的值時，路由將只會視為相符的話您所提供的值符合路由的預設值。  
  
   
  
## Examples  
 下列範例示範如何建立<xref:System.Web.Routing.Route>物件，並設定<xref:System.Web.Routing.Route.Constraints%2A>， <xref:System.Web.Routing.Route.DataTokens%2A>，和<xref:System.Web.Routing.Route.Defaults%2A>屬性。  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 下列範例所示<xref:System.Web.Routing.Route>物件，其<xref:System.Web.Routing.Route.Defaults%2A>屬性包含不是組件中的模式參數<xref:System.Web.Routing.Route.Url%2A>屬性。  
  
 [!code-csharp[System.Web.Routing.Route.Defaults#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.Defaults/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.Defaults#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.Defaults/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="override this.GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="route.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">封裝 HTTP 要求相關資訊的物件。</param>
        <summary>傳回所要求路由的相關資訊。</summary>
        <returns>包含路由定義值的物件。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="route.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">封裝所要求路由相關資訊的物件。</param>
        <param name="values">包含路由參數的物件。</param>
        <summary>傳回與路由相關聯之 URL 的相關資訊。</summary>
        <returns>物件，包含與路由相關聯之 URL 的相關資訊。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName="ProcessConstraint">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessConstraint (System.Web.HttpContextBase httpContext, object constraint, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessConstraint(class System.Web.HttpContextBase httpContext, object constraint, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.ProcessConstraint(System.Web.HttpContextBase,System.Object,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessConstraint(System::Web::HttpContextBase ^ httpContext, System::Object ^ constraint, System::String ^ parameterName, System::Web::Routing::RouteValueDictionary ^ values, System::Web::Routing::RouteDirection routeDirection);" />
      <MemberSignature Language="F#" Value="abstract member ProcessConstraint : System.Web.HttpContextBase * obj * string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteDirection -&gt; bool&#xA;override this.ProcessConstraint : System.Web.HttpContextBase * obj * string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteDirection -&gt; bool" Usage="route.ProcessConstraint (httpContext, constraint, parameterName, values, routeDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="constraint" Type="System.Object" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">封裝 HTTP 要求相關資訊的物件。</param>
        <param name="constraint">要用來測試 <paramref name="parameterName" /> 的規則運算式或物件。</param>
        <param name="parameterName">要測試之參數的名稱。</param>
        <param name="values">要測試的值。</param>
        <param name="routeDirection">指定 URL 路由將處理傳入要求還是建構 URL 的值。</param>
        <summary>判斷參數值是否符合該參數的條件約束。</summary>
        <returns>如果參數值符合條件約束，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><paramref name="constraint" /> 不是包含規則運算式的字串。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName="RouteHandler">
      <MemberSignature Language="C#" Value="public System.Web.Routing.IRouteHandler RouteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.IRouteHandler RouteHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.RouteHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteHandler As IRouteHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::IRouteHandler ^ RouteHandler { System::Web::Routing::IRouteHandler ^ get(); void set(System::Web::Routing::IRouteHandler ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RouteHandler : System.Web.Routing.IRouteHandler with get, set" Usage="System.Web.Routing.Route.RouteHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.IRouteHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定處理路由要求的物件。</summary>
        <value>處理要求的物件。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Url : string with get, set" Usage="System.Web.Routing.Route.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定路由的 URL 模式。</summary>
        <value>比對路由與 URL 的模式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您將值指派給<xref:System.Web.Routing.Route.Url%2A>屬性，`/`剖析 URL 時，將會解譯為分隔符號的字元。 使用大括號 (`{}`) 來定義的變數，指*URL 參數*。 在 URL 中的對應區段中的值指派給 URL 參數。 中的任何值<xref:System.Web.Routing.Route.Url%2A>未加上大括號的屬性會被視為常值的常數。  
  
 `?`中不允許字元<xref:System.Web.Routing.Route.Url%2A>屬性。 必須以分隔符號或常值常數分隔每個 URL 區段。 您可以使用`{{`或`}}`為逸出大括號字元的字元。  
  
   
  
## Examples  
 下列範例示範如何設定<xref:System.Web.Routing.Route.Url%2A>類別建構函式中的屬性。 模式包含的第一個區段和下面兩個區段的 URL 參數的常值的 [類別]。  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">下列任何一項： 
-   值以 <c>~</c> 或 <c>/</c> 開頭。  
  
-   值包含 <c>?</c> 字元取代的三併詞序列。  
  
-   catch-all 參數不是最後一個參數。</exception>
        <exception cref="T:System.Exception">沒有以分隔符號或常值常數分隔 URL 區段。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET 路由</related>
      </Docs>
    </Member>
  </Members>
</Type>