<Type Name="RouteCollection" FullName="System.Web.Routing.RouteCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7a56076e84a4a4a1b8779b51e10321651f3424f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39850625" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RouteCollection : System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.RouteCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteCollection&#xA;Inherits Collection(Of RouteBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteCollection : System::Collections::ObjectModel::Collection&lt;System::Web::Routing::RouteBase ^&gt;" />
  <TypeSignature Language="F#" Value="type RouteCollection = class&#xA;    inherit Collection&lt;RouteBase&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Web.Routing.RouteBase</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d1281-101">提供進行 ASP.NET 路由之路由的集合。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d1281-101">Provides a collection of routes for ASP.NET routing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-102"><xref:System.Web.Routing.RouteCollection>類別提供方法，讓您能夠管理衍生自物件的集合<xref:System.Web.Routing.RouteBase>類別。</span><span class="sxs-lookup"><span data-stu-id="d1281-102">The <xref:System.Web.Routing.RouteCollection> class provides methods that enable you to manage a collection of objects that derive from the <xref:System.Web.Routing.RouteBase> class.</span></span>  
  
 <span data-ttu-id="d1281-103">一般而言，您會使用`static`<xref:System.Web.Routing.RouteTable.Routes%2A>屬性<xref:System.Web.Routing.RouteTable>類別來擷取<xref:System.Web.Routing.RouteCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="d1281-103">Typically, you will use the `static`<xref:System.Web.Routing.RouteTable.Routes%2A> property of the <xref:System.Web.Routing.RouteTable> class to retrieve a <xref:System.Web.Routing.RouteCollection> object.</span></span> <span data-ttu-id="d1281-104"><xref:System.Web.Routing.RouteTable.Routes%2A>屬性會儲存為 ASP.NET 應用程式的所有路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-104">The <xref:System.Web.Routing.RouteTable.Routes%2A> property stores all the routes for an ASP.NET application.</span></span> <span data-ttu-id="d1281-105">ASP.NET 路由中的路由會逐一<xref:System.Web.Routing.RouteTable.Routes%2A>屬性，以尋找符合 URL 的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-105">ASP.NET routing iterates through the routes in the <xref:System.Web.Routing.RouteTable.Routes%2A> property to find the route that matches a URL.</span></span>  
  
 <span data-ttu-id="d1281-106">若要建構的 URL，請呼叫<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>方法並傳入值的集合。</span><span class="sxs-lookup"><span data-stu-id="d1281-106">To construct a URL, you call the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method and pass in a collection of values.</span></span> <span data-ttu-id="d1281-107"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>方法會尋找第一個路由，以符合您傳入，並傳回值的參數<xref:System.Web.Routing.VirtualPathData>物件，其中包含相符的路由的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="d1281-107">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method finds the first route with parameters that match the values that you passed in, and returns a <xref:System.Web.Routing.VirtualPathData> object that contains information about the matching route.</span></span> <span data-ttu-id="d1281-108">擷取透過 URL<xref:System.Web.Routing.VirtualPathData.VirtualPath%2A>屬性<xref:System.Web.Routing.VirtualPathData>物件。</span><span class="sxs-lookup"><span data-stu-id="d1281-108">You retrieve the URL through the <xref:System.Web.Routing.VirtualPathData.VirtualPath%2A> property of the <xref:System.Web.Routing.VirtualPathData> object.</span></span>  
  
 <span data-ttu-id="d1281-109">您可以新增路由的名稱，或是沒有名稱。</span><span class="sxs-lookup"><span data-stu-id="d1281-109">You can add a route either with a name or without a name.</span></span> <span data-ttu-id="d1281-110">其中包括名稱，可讓您區分類似的路由，建構 Url 時。</span><span class="sxs-lookup"><span data-stu-id="d1281-110">Including a name enables you to distinguish between similar routes when URLs are constructed.</span></span> <span data-ttu-id="d1281-111">如果您未指定名稱，ASP.NET 路由會使用第一個相符的路由集合中建構 URL。</span><span class="sxs-lookup"><span data-stu-id="d1281-111">If you do not specify a name, ASP.NET routing uses the first matching route in the collection to construct a URL.</span></span>  
  
 <span data-ttu-id="d1281-112">當您加入未命名的通往<xref:System.Web.Routing.RouteCollection>物件時，您無法加入已存在於集合中的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-112">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span> <span data-ttu-id="d1281-113">當您將具名的路由時，您無法使用已識別的路由集合中的名稱。</span><span class="sxs-lookup"><span data-stu-id="d1281-113">When you add a named route, you cannot use a name that already identifies a route in the collection.</span></span>  
  
 <span data-ttu-id="d1281-114">您使用<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法和<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>藉此確定您的集合，而不發生衝突，來自其他處理序與互動的方法。</span><span class="sxs-lookup"><span data-stu-id="d1281-114">You use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 <span data-ttu-id="d1281-115">如需如何將路由新增至路由集合的詳細資訊，請參閱[ASP.NET 路由](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)。</span><span class="sxs-lookup"><span data-stu-id="d1281-115">For more information about how to add a route to a route collection, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d1281-116">初始化 <see cref="T:System.Web.Routing.RouteCollection" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-116">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d1281-117">初始化 <see cref="T:System.Web.Routing.RouteCollection" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-117">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection (System.Web.Hosting.VirtualPathProvider virtualPathProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Hosting.VirtualPathProvider virtualPathProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor(System.Web.Hosting.VirtualPathProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection(System::Web::Hosting::VirtualPathProvider ^ virtualPathProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.RouteCollection : System.Web.Hosting.VirtualPathProvider -&gt; System.Web.Routing.RouteCollection" Usage="new System.Web.Routing.RouteCollection virtualPathProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPathProvider" Type="System.Web.Hosting.VirtualPathProvider" />
      </Parameters>
      <Docs>
        <param name="virtualPathProvider">
          <span data-ttu-id="d1281-118">從虛擬檔案系統中擷取資源的提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-118">A provider for retrieving resources from a virtual file system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-119">使用指定的虛擬路徑提供者，初始化 <see cref="T:System.Web.Routing.RouteCollection" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-119">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class by using the specified virtual path provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Add(System.String,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.Add : string * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.Add (name, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d1281-120">識別路由的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-120">The value that identifies the route.</span>
          </span>
          <span data-ttu-id="d1281-121">這個值可以為 <see langword="null" /> 或是空字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-121">The value can be <see langword="null" /> or an empty string.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="d1281-122">要加入集合結尾的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-122">The route to add to the end of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-123">在 <see cref="T:System.Web.Routing.RouteCollection" /> 物件結尾處，加入一個路由並且為該路由指定名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-123">Adds a route to the end of the <see cref="T:System.Web.Routing.RouteCollection" /> object and assigns the specified name to the route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-124"><xref:System.Web.Routing.RouteCollection.Add%2A>方法可讓您定義的路由名稱，並將其新增至路由集合。</span><span class="sxs-lookup"><span data-stu-id="d1281-124">The <xref:System.Web.Routing.RouteCollection.Add%2A> method enables you to define a name for a route when you add it to the route collection.</span></span> <span data-ttu-id="d1281-125">藉由定義路由的名稱，您可以指定當您使用路由來建構 URL 時使用的特定路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-125">By defining a name for the route, you can specify a particular route to use when you use routing to construct a URL.</span></span> <span data-ttu-id="d1281-126">當多個路由相符的值，您將傳遞至指定的特定路由是重要<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d1281-126">Specifying a particular route is important when more than one route matches the values that you pass to the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method.</span></span> <span data-ttu-id="d1281-127">如果您未指定具名的路由，則 ASP.NET 路由會使用比對的值集合中的第一個路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-127">If you do not specify a named route, ASP.NET routing will use the first route in the collection that matches the values.</span></span> <span data-ttu-id="d1281-128">如需詳細資訊，請參閱 <<c0> [ 如何： 建構的 Url，從路由](http://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650)。</span><span class="sxs-lookup"><span data-stu-id="d1281-128">For more information, see [How to: Construct URLs from Routes](http://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650).</span></span>  
  
 <span data-ttu-id="d1281-129">名稱可以用一次只能在<xref:System.Web.Routing.RouteCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="d1281-129">A name can be used only one time in the <xref:System.Web.Routing.RouteCollection> object.</span></span>  
  
 <span data-ttu-id="d1281-130">如果您沒有指定路由名稱，您還可以新增路由，藉由呼叫<xref:System.Collections.ObjectModel.Collection%601.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d1281-130">If you do not have to specify a name for the route, you can add the route by calling the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method.</span></span>  
  
 <span data-ttu-id="d1281-131">使用<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法和<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>藉此確定您的集合，而不發生衝突，來自其他處理序與互動的方法。</span><span class="sxs-lookup"><span data-stu-id="d1281-131">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-132">下列範例示範如何新增至路由<xref:System.Web.Routing.RouteCollection>物件，並將名稱指派至路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-132">The following example shows how to add a route to a <xref:System.Web.Routing.RouteCollection> object and assign a name to the route.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#1)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1281-133">
            <paramref name="item" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-133">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d1281-134">此集合中已經有使用 <paramref name="name" /> 的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-134">
              <paramref name="name" /> is already used in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public bool AppendTrailingSlash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendTrailingSlash { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AppendTrailingSlash : bool with get, set" Usage="System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d1281-135">取得或設定值，指出當標準化虛擬路徑時，是否加入結尾斜線。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-135">Gets or sets a value that indicates whether trailing slashes are added when virtual paths are normalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d1281-136">如果加入結尾斜線，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-136">
              <see langword="true" /> if trailing slashes are added; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d1281-137">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-137">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="routeCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d1281-138">從 <see cref="T:System.Web.Routing.RouteCollection" /> 物件中移除所有項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-138">Removes all the elements from the <see cref="T:System.Web.Routing.RouteCollection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-139">使用<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法和<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>藉此確定您的集合，而不發生衝突，來自其他處理序與互動的方法。</span><span class="sxs-lookup"><span data-stu-id="d1281-139">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReadLock">
      <MemberSignature Language="C#" Value="public IDisposable GetReadLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetReadLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetReadLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetReadLock();" />
      <MemberSignature Language="F#" Value="member this.GetReadLock : unit -&gt; IDisposable" Usage="routeCollection.GetReadLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d1281-140">提供物件，以便您從集合中擷取物件時用於管理執行緒安全性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-140">Provides an object for managing thread safety when you retrieve an object from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1281-141">管理執行緒安全性的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-141">An object that manages thread safety.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-142"><xref:System.Web.Routing.RouteCollection>物件可用於應用程式中的多個處理序。</span><span class="sxs-lookup"><span data-stu-id="d1281-142">The <xref:System.Web.Routing.RouteCollection> object is available to multiple processes in the application.</span></span> <span data-ttu-id="d1281-143">因此，如果您有擷取路由，在執行應用程式時，使用<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法，以確保執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="d1281-143">Therefore, if you have to retrieve a route when the application is running, use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method in order to guarantee thread safety.</span></span> <span data-ttu-id="d1281-144">取得路由集合的讀取的鎖定，您要確定您嘗試擷取它時，不會修改集合項目。</span><span class="sxs-lookup"><span data-stu-id="d1281-144">By obtaining a read lock on the route collection, you make sure that the collection will not be modified while you are trying to retrieve it.</span></span>  
  
 <span data-ttu-id="d1281-145"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法停止執行緒取得鎖定為止。</span><span class="sxs-lookup"><span data-stu-id="d1281-145">The <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method stops the thread from continuing until the lock can be acquired.</span></span> <span data-ttu-id="d1281-146">如果寫入鎖定處於位置時，執行緒會等候直到更新完成，而且會釋放寫入鎖定。</span><span class="sxs-lookup"><span data-stu-id="d1281-146">If a write lock is in place, the thread waits until the update is completed and the write lock is released.</span></span> <span data-ttu-id="d1281-147">在發行上的路由集合的讀取的鎖定時<xref:System.IDisposable>處置此方法所傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="d1281-147">The read lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>  
  
 <span data-ttu-id="d1281-148">如果您不要使用<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>，您可能會發生錯誤，而您正在閱讀<xref:System.Web.Routing.RouteCollection>集合。</span><span class="sxs-lookup"><span data-stu-id="d1281-148">If you do not use <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>, you might get an error while you are reading through the <xref:System.Web.Routing.RouteCollection> collection.</span></span> <span data-ttu-id="d1281-149">例如，假設 循環使用中的物件<xref:System.Web.Routing.RouteCollection>集合來讀取，而不需呼叫<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>。</span><span class="sxs-lookup"><span data-stu-id="d1281-149">For example, suppose you loop through the objects in the <xref:System.Web.Routing.RouteCollection> collection to read them, without calling <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span> <span data-ttu-id="d1281-150">而會這麼做，可能會呼叫另一個要求中的另一個執行緒<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>並將路由新增至集合。</span><span class="sxs-lookup"><span data-stu-id="d1281-150">While you are doing that, another thread from another request might call <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> and add a route to the collection.</span></span> <span data-ttu-id="d1281-151">第一個執行緒即會失敗並發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="d1281-151">The first thread will then fail with an error.</span></span>  
  
 <span data-ttu-id="d1281-152">有兩個案例中您不需要呼叫<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>:</span><span class="sxs-lookup"><span data-stu-id="d1281-152">There are two scenarios in which you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>:</span></span>  
  
-   <span data-ttu-id="d1281-153">公用方法<xref:System.Web.Routing.RouteCollection>這類類別<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>並<xref:System.Web.Routing.RouteCollection.GetRouteData%2A>呼叫<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>內部。</span><span class="sxs-lookup"><span data-stu-id="d1281-153">Public methods of the <xref:System.Web.Routing.RouteCollection> class such as <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> and <xref:System.Web.Routing.RouteCollection.GetRouteData%2A> call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> internally.</span></span> <span data-ttu-id="d1281-154">因此，您並不需要明確地呼叫<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>當您呼叫的公用方法<xref:System.Web.Routing.RouteCollection>類別來擷取集合中的資料。</span><span class="sxs-lookup"><span data-stu-id="d1281-154">Therefore, you do not have to explicitly call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> when you call a public method of the <xref:System.Web.Routing.RouteCollection> class to retrieve data from the collection.</span></span>  
  
-   <span data-ttu-id="d1281-155">當應用程式正在啟動，且沒有尚未處理要求，例如在`Application_Start`事件處理常式中，只有一個執行緒正在執行。</span><span class="sxs-lookup"><span data-stu-id="d1281-155">When the application is starting and is not yet processing requests, such as in the `Application_Start` event handler, only one thread is running.</span></span> <span data-ttu-id="d1281-156">因為有可能會更新集合，而您正在閱讀它沒有其他執行緒，所以您不必呼叫<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>。</span><span class="sxs-lookup"><span data-stu-id="d1281-156">Because there are no other threads that might update the collection while you are reading it, you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-157">下列範例示範如何使用<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法時執行的應用程式時，擷取路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-157">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method when you retrieve a route while the application is running.</span></span> <span data-ttu-id="d1281-158">`Using`陳述式可確保無論在執行階段，當您從讀取集合 （不論程式碼會正常完成或發生例外狀況） 發生什麼事就安全地釋放鎖定的結尾`Using`程式碼區塊。</span><span class="sxs-lookup"><span data-stu-id="d1281-158">The `Using` statement ensures that no matter what happens at run time when you read from the collection (whether the code completes normally or an exception is thrown) the lock will be safely released at the end of the `Using` code block.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="member this.GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="routeCollection.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">
          <span data-ttu-id="d1281-159">封裝 HTTP 要求相關資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-159">An object that encapsulates information about the HTTP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-160">傳回集合中符合指定值的路徑相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-160">Returns information about the route in the collection that matches the specified values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1281-161">包含路由定義值的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-161">An object that contains the values from the route definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1281-162">
            <paramref name="context" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-162">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d1281-163">
            <paramref name="context" /> 參數中物件的 <see cref="P:System.Web.HttpContextBase.Request" /> 屬性為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-163">The <see cref="P:System.Web.HttpContextBase.Request" /> property of the object in the <paramref name="context" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetVirtualPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d1281-164">傳回與該路由關聯之 URL 路徑的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-164">Returns information about the URL path that is associated with the route.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="d1281-165">封裝所要求路由相關資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-165">An object that encapsulates information about the requested route.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="d1281-166">包含路由參數的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-166">An object that contains the parameters for a route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-167">傳回指定內容和參數值之與路由相關聯的 URL 路徑相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-167">Returns information about the URL path that is associated with the route, given the specified context and parameter values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1281-168">物件，包含與路由相關聯之 URL 路徑的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-168">An object that contains information about the URL path that is associated with the route.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, string name, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, string name, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::String ^ name, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="d1281-169">封裝所要求路由相關資訊的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-169">An object that encapsulates information about the requested route.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="d1281-170">已擷取 URL 路徑資訊時要使用的路由名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-170">The name of the route to use when information about the URL path is retrieved.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="d1281-171">包含路由參數的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-171">An object that contains the parameters for a route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-172">傳回指定內容、路由名稱和參數值之與具名路由相關聯的 URL 路徑相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-172">Returns information about the URL path that is associated with the named route, given the specified context, route name, and parameter values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1281-173">物件，包含與路由相關聯之 URL 路徑的相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-173">An object that contains information about the URL path that is associated with the route.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d1281-174">找不到任何含有在 <paramref name="name" /> 參數中指定的名稱的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-174">No route could be found that has the name specified in the <paramref name="name" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWriteLock">
      <MemberSignature Language="C#" Value="public IDisposable GetWriteLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetWriteLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetWriteLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWriteLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetWriteLock();" />
      <MemberSignature Language="F#" Value="member this.GetWriteLock : unit -&gt; IDisposable" Usage="routeCollection.GetWriteLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d1281-175">提供物件，以便您在集合中加入或移除項目時用於管理執行緒安全性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-175">Provides an object for managing thread safety when you add or remove elements in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1281-176">管理執行緒安全性的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-176">An object that manages thread safety.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-177">ASP.NET 應用程式中定義的路由的建議的方法是新增至路由<xref:System.Web.Routing.RouteTable.Routes%2A>中的事件處理常式屬性`Application_Start`Global.asax 檔案中的事件。</span><span class="sxs-lookup"><span data-stu-id="d1281-177">The recommended approach for defining routes in an ASP.NET application is to add the routes to the <xref:System.Web.Routing.RouteTable.Routes%2A> property in an event handler for the `Application_Start` event in the Global.asax file.</span></span> <span data-ttu-id="d1281-178">如需詳細資訊，請參閱<xref:System.Web.Routing.RouteCollection>。</span><span class="sxs-lookup"><span data-stu-id="d1281-178">For more information, see <xref:System.Web.Routing.RouteCollection>.</span></span>  
  
 <span data-ttu-id="d1281-179">如果您有以新增路由，在執行應用程式時，您會使用<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>方法，以確保執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="d1281-179">If you have to add a route when the application is running, you use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to guarantee thread safety.</span></span> <span data-ttu-id="d1281-180">路由集合上的寫入鎖定解除時<xref:System.IDisposable>處置此方法所傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="d1281-180">The write lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-181">下列範例示範如何使用<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>方法時執行的應用程式時，會新增路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-181">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method when you add a route while the application is running.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ignore">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d1281-182">定義不需檢查是否符合路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-182">Defines a URL pattern that should not be checked for matches against routes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-183">這個方法會建立對應至路由<xref:System.Web.Routing.StopRoutingHandler>路由處理常式。</span><span class="sxs-lookup"><span data-stu-id="d1281-183">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="d1281-184">呼叫這個方法之後，符合指定的 URL 模式的要求將不會處理路由要求。</span><span class="sxs-lookup"><span data-stu-id="d1281-184">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="d1281-185">ASP.NET 路由自動時，會忽略要求 URL 符合實體檔案，例如影像檔。</span><span class="sxs-lookup"><span data-stu-id="d1281-185">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="d1281-186">在某些情況下您可能也想沒有實體的檔案時，請略過要求的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-186">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="d1281-187">例如，ASP.NET 會自動將變成選用.axd 檔案的要求應該不被視為要求路由傳送即使沒有任何對應至.axd 副檔名的實體檔案。</span><span class="sxs-lookup"><span data-stu-id="d1281-187">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string -&gt; unit" Usage="routeCollection.Ignore url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="d1281-188">要忽略的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-188">The URL pattern to be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-189">定義不需檢查是否符合路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-189">Defines a URL pattern that should not be checked for matches against routes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-190">這個方法會建立對應至路由<xref:System.Web.Routing.StopRoutingHandler>路由處理常式。</span><span class="sxs-lookup"><span data-stu-id="d1281-190">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="d1281-191">呼叫這個方法之後，符合指定的 URL 模式的要求將不會處理路由要求。</span><span class="sxs-lookup"><span data-stu-id="d1281-191">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="d1281-192">ASP.NET 路由自動時，會忽略要求 URL 符合實體檔案，例如影像檔。</span><span class="sxs-lookup"><span data-stu-id="d1281-192">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="d1281-193">在某些情況下您可能也想沒有實體的檔案時，請略過要求的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-193">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="d1281-194">例如，ASP.NET 會自動將變成選用.axd 檔案的要求應該不被視為要求路由傳送即使沒有任何對應至.axd 副檔名的實體檔案。</span><span class="sxs-lookup"><span data-stu-id="d1281-194">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-195">MVC 專案的預設範本會使用這個方法來排除.axd 檔案路由，如下列範例所示：</span><span class="sxs-lookup"><span data-stu-id="d1281-195">The default template for MVC projects uses this method to exclude .axd files from routing, as shown in the following example:</span></span>  
  
 [!code-csharp[MvcDefaultApp#2](~/samples/snippets/csharp/VS_Snippets_WebNet/mvcdefaultapp/cs/global.asax.cs#2)]
 [!code-vb[MvcDefaultApp#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/mvcdefaultapp/vb/global.asax.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url, object constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url, object constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String, constraints As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url, System::Object ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string * obj -&gt; unit" Usage="routeCollection.Ignore (url, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="constraints" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="d1281-196">要忽略的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-196">The URL pattern to be ignored.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="d1281-197">其他準則，可用來判斷是否忽略與 URL 模式相符的要求。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-197">Additional criteria that determine whether a request that matches the URL pattern will be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-198">定義 URL 模式，此模式在要求 URL 符合指定的條件約束時並不需要進行檢查是否與路由相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-198">Defines a URL pattern that should not be checked for matches against routes if a request URL meets the specified constraints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-199">這個方法會建立對應至路由<xref:System.Web.Routing.StopRoutingHandler>路由處理常式。</span><span class="sxs-lookup"><span data-stu-id="d1281-199">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="d1281-200">呼叫這個方法之後，符合指定的 URL 模式的要求將不會處理路由要求。</span><span class="sxs-lookup"><span data-stu-id="d1281-200">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="d1281-201">ASP.NET 路由自動時，會忽略要求 URL 符合實體檔案，例如影像檔。</span><span class="sxs-lookup"><span data-stu-id="d1281-201">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="d1281-202">在某些情況下您可能也想沒有實體的檔案時，請略過要求的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-202">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="d1281-203">例如，ASP.NET 會自動將變成選用.axd 檔案的要求應該不被視為要求路由傳送即使沒有任何對應至.axd 副檔名的實體檔案。</span><span class="sxs-lookup"><span data-stu-id="d1281-203">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-204">下列範例示範如何使用這個方法來略過具有.aspx 副檔名的所有 Url。</span><span class="sxs-lookup"><span data-stu-id="d1281-204">The following example shows how to use this method to ignore all URLs that have an .aspx extension.</span></span> <span data-ttu-id="d1281-205">您可能想要這樣做，如果您註冊自訂的 HTTP 處理常式來處理的所有 Url 的副檔名為".aspx"的檔案。</span><span class="sxs-lookup"><span data-stu-id="d1281-205">You might want to do this if you register a custom HTTP handler to handle all URLs for files that have the extension ".aspx".</span></span> <span data-ttu-id="d1281-206">單一 URL 模式會比對所有的.aspx 要求，例如需要雜物箱的兩個參數`{*path}.aspx/{*pathinfo}`。</span><span class="sxs-lookup"><span data-stu-id="d1281-206">A single URL pattern that would match all .aspx requests would require two catchall parameters such as `{*path}.aspx/{*pathinfo}`.</span></span> <span data-ttu-id="d1281-207">（此模式會比對任何結尾為.aspx，包括具有查詢字串參數的 URL。）不過，路由允許只有一個 catchall 參數結尾。</span><span class="sxs-lookup"><span data-stu-id="d1281-207">(This pattern would match any URL that ends in .aspx, including those that have query-string parameters.) However, routing allows only one catchall parameter at the end.</span></span> <span data-ttu-id="d1281-208">或者，您可以指定具有單一雜物箱參數符合所有 Url 的 URL 模式，然後指定 排除的所有項目並沒有.aspx 擴充功能，如下列範例所示的條件約束：</span><span class="sxs-lookup"><span data-stu-id="d1281-208">As an alternative, you can specify a URL pattern that has a single catchall parameter that matches all URLs and then specify constraints that exclude everything that does not have the .aspx extension, as shown in the following example:</span></span>  
  
```vb  
routes.Ignore("{*allaspx}", new With {.allaspx = ".*\.aspx(/.*)?"})  
```  
  
```csharp  
routes.Ignore("{*allaspx}", new {allaspx=@".*\.aspx(/.*)?"});  
```  
  
 <span data-ttu-id="d1281-209">前的一行程式碼通常會加入從呼叫的方法`Application_Start`方法中的範例所示 Global.asax<xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29>多載。</span><span class="sxs-lookup"><span data-stu-id="d1281-209">The previous line of code would typically be added to a method that is called from the `Application_Start` method in the Global.asax, as shown in the example for the <xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1281-210">
            <paramref name="url" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-210">The <paramref name="url" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.InsertItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d1281-211">插入 <c>item</c> 處之以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-211">The zero-based index at which <c>item</c> is inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="d1281-212">要插入的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-212">The route to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-213">將指定的路由插入 <see cref="T:System.Web.Routing.RouteCollection" /> 物件中的指定索引處。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-213">Inserts the specified route into the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-214">當您加入未命名的通往<xref:System.Web.Routing.RouteCollection>物件時，您無法加入已存在於集合中的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-214">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>  
  
 <span data-ttu-id="d1281-215">使用<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法和<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>藉此確定您的集合，而不發生衝突，來自其他處理序與互動的方法。</span><span class="sxs-lookup"><span data-stu-id="d1281-215">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1281-216">
            <paramref name="item" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-216">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d1281-217">
            <paramref name="item" /> 已存在於集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-217">
              <paramref name="item" /> is already in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteBase this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteBase Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As RouteBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteBase ^ default[System::String ^] { System::Web::Routing::RouteBase ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.Routing.RouteBase" Usage="System.Web.Routing.RouteCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="d1281-218">識別要取得之路由的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-218">The value that identifies the route to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-219">取得集合中具有所指定名稱的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-219">Gets the route in the collection that has the specified name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d1281-220">具有指定名稱的物件、空字串或不符合集合中任一路由的物件，或是當 <paramref name="name" /> 為 <see langword="null" /> 時，此值亦可為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-220">An object that has the specified name, or <see langword="null" /> if <paramref name="name" /> is <see langword="null" />, is an empty string, or does not match any route in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-221">使用<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法和<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>藉此確定您的集合，而不發生衝突，來自其他處理序與互動的方法。</span><span class="sxs-lookup"><span data-stu-id="d1281-221">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowercaseUrls">
      <MemberSignature Language="C#" Value="public bool LowercaseUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LowercaseUrls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property LowercaseUrls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LowercaseUrls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LowercaseUrls : bool with get, set" Usage="System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d1281-222">取得或設定值，指出當標準化虛擬路徑時，是否將 URL 轉換成小寫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-222">Gets or sets a value that indicates whether URLs are converted to lower case when virtual paths are normalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d1281-223">
            <see langword="true" /> 表示要將 URL 轉換成小寫，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-223">
              <see langword="true" /> to convert URLs to lower case; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d1281-224">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-224">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-225">如果在 URL 中包含查詢字串，該 URL 的部分不會轉換成小寫。</span><span class="sxs-lookup"><span data-stu-id="d1281-225">If a query string is included in the URL, that part of the URL is not converted to lower case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPageRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d1281-226">提供一種方式來定義 Web Form 應用程式的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-226">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-227">這個方法會提供方便撰寫程式碼。</span><span class="sxs-lookup"><span data-stu-id="d1281-227">This method is provided for coding convenience.</span></span> <span data-ttu-id="d1281-228">它相當於呼叫<xref:System.Web.Routing.RouteCollection.Add%2A>方法並傳遞<xref:System.Web.Routing.Route>物件，建立使用<xref:System.Web.Routing.PageRouteHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="d1281-228">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-229">下列範例示範如何使用這個方法來定義 Web Form 應用程式的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-229">The following example shows how to define routes for a Web Forms application by using this method.</span></span> <span data-ttu-id="d1281-230">此範例示範一個名為方法`RegisterRoutes`呼叫從`Application_Start`Global.asax 檔案中。</span><span class="sxs-lookup"><span data-stu-id="d1281-230">The example shows a method named `RegisterRoutes` that is called from `Application_Start` in the Global.asax file.</span></span> <span data-ttu-id="d1281-231">此方法會使用的每個多載<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>將路由新增至應用程式。</span><span class="sxs-lookup"><span data-stu-id="d1281-231">The method uses each overload of <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> to add a route to the application.</span></span> <span data-ttu-id="d1281-232">如需如何定義 Web Form 應用程式的路由的詳細資訊，請參閱[如何： 定義 Web Form 應用程式的路由](http://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678)。</span><span class="sxs-lookup"><span data-stu-id="d1281-232">For more information about how to define routes for Web Forms applications, see [How to: Define Routes for Web Forms Applications](http://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678).</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#122)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="d1281-233">路徑的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-233">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="d1281-234">路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-234">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="d1281-235">路由的實體 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-235">The physical URL for the route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-236">提供一種方式來定義 Web Form 應用程式的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-236">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1281-237">加入至路由集合的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-237">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-238">這個方法會提供方便撰寫程式碼。</span><span class="sxs-lookup"><span data-stu-id="d1281-238">This method is provided for coding convenience.</span></span> <span data-ttu-id="d1281-239">它相當於呼叫<xref:System.Web.Routing.RouteCollection.Add%2A>方法並傳遞<xref:System.Web.Routing.Route>物件，建立使用<xref:System.Web.Routing.PageRouteHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="d1281-239">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-240">下列範例示範如何使用此方法中定義的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-240">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="d1281-241">第一個陳述式會定義並沒有名稱的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-241">The first statement defines a route that does not have a name.</span></span> <span data-ttu-id="d1281-242">第二個陳述式中定義具名的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-242">The second statement defines a named route.</span></span> <span data-ttu-id="d1281-243">這個範例屬於較大的範例中提供的<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>方法概觀。</span><span class="sxs-lookup"><span data-stu-id="d1281-243">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#140)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#140)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="d1281-244">路徑的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-244">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="d1281-245">路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-245">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="d1281-246">路由的實體 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-246">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="d1281-247">值，表示 ASP.NET 是否應該驗證使用者是否已獲得授權可存取實體 URL (若是路由 URL 則一律會檢查)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-247">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="d1281-248">這個參數會設定 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-248">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-249">提供一種方式來定義 Web Form 應用程式的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-249">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1281-250">加入至路由集合的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-250">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-251">這個方法會提供方便撰寫程式碼。</span><span class="sxs-lookup"><span data-stu-id="d1281-251">This method is provided for coding convenience.</span></span> <span data-ttu-id="d1281-252">它相當於呼叫<xref:System.Web.Routing.RouteCollection.Add%2A>方法並傳遞<xref:System.Web.Routing.Route>物件，建立使用<xref:System.Web.Routing.PageRouteHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="d1281-252">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-253">下列範例示範如何使用此方法中定義的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-253">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="d1281-254">這個範例屬於較大的範例中提供的<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>方法概觀。</span><span class="sxs-lookup"><span data-stu-id="d1281-254">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#145)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="d1281-255">路徑的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-255">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="d1281-256">路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-256">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="d1281-257">路由的實體 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-257">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="d1281-258">值，表示 ASP.NET 是否應該驗證使用者是否已獲得授權可存取實體 URL (若是路由 URL 則一律會檢查)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-258">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="d1281-259">這個參數會設定 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-259">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="d1281-260">路由參數的預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-260">Default values for the route parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-261">提供一種方式來定義 Web Form 應用程式的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-261">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1281-262">加入至路由集合的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-262">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-263">這個方法會提供方便撰寫程式碼。</span><span class="sxs-lookup"><span data-stu-id="d1281-263">This method is provided for coding convenience.</span></span> <span data-ttu-id="d1281-264">它相當於呼叫<xref:System.Web.Routing.RouteCollection.Add%2A>方法並傳遞<xref:System.Web.Routing.Route>物件，建立使用<xref:System.Web.Routing.PageRouteHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="d1281-264">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-265">下列範例示範如何使用此方法中定義的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-265">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="d1281-266">這個範例屬於較大的範例中提供的<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>方法概觀。</span><span class="sxs-lookup"><span data-stu-id="d1281-266">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#150)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="d1281-267">路徑的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-267">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="d1281-268">路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-268">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="d1281-269">路由的實體 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-269">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="d1281-270">值，表示 ASP.NET 是否應該驗證使用者是否已獲得授權可存取實體 URL (若是路由 URL 則一律會檢查)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-270">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="d1281-271">這個參數會設定 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-271">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="d1281-272">路由的預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-272">Default values for the route.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="d1281-273">條件約束，指 URL 要求必須符合此條件約束，才能當做這個路由來加以處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-273">Constraints that a URL request must meet in order to be processed as this route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-274">提供一種方式來定義 Web Form 應用程式的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-274">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1281-275">加入至路由集合的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-275">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-276">這個方法會提供方便撰寫程式碼。</span><span class="sxs-lookup"><span data-stu-id="d1281-276">This method is provided for coding convenience.</span></span> <span data-ttu-id="d1281-277">它相當於呼叫<xref:System.Web.Routing.RouteCollection.Add%2A>方法並傳遞<xref:System.Web.Routing.Route>物件，建立使用<xref:System.Web.Routing.PageRouteHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="d1281-277">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-278">下列範例示範如何使用此方法中定義的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-278">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="d1281-279">這個範例屬於較大的範例中提供的<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>方法概觀。</span><span class="sxs-lookup"><span data-stu-id="d1281-279">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#155)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints, dataTokens)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="d1281-280">路徑的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-280">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="d1281-281">路由的 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-281">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="d1281-282">路由的實體 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-282">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="d1281-283">值，表示 ASP.NET 是否應該驗證使用者是否已獲得授權可存取實體 URL (若是路由 URL 則一律會檢查)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-283">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="d1281-284">這個參數會設定 <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-284">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="d1281-285">路由參數的預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-285">Default values for the route parameters.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="d1281-286">條件約束，指 URL 要求必須符合此條件約束，才能當做這個路由來加以處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-286">Constraints that a URL request must meet in order to be processed as this route.</span>
          </span>
        </param>
        <param name="dataTokens">
          <span data-ttu-id="d1281-287">與路由關聯的值，這些值不會用來判斷路由是否符合 URL 模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-287">Values that are associated with the route that are not used to determine whether a route matches a URL pattern.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-288">提供一種方式來定義 Web Form 應用程式的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-288">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1281-289">加入至路由集合的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-289">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-290">這個方法會提供方便撰寫程式碼。</span><span class="sxs-lookup"><span data-stu-id="d1281-290">This method is provided for coding convenience.</span></span> <span data-ttu-id="d1281-291">它相當於呼叫<xref:System.Web.Routing.RouteCollection.Add%2A>方法並傳遞<xref:System.Web.Routing.Route>物件，建立使用<xref:System.Web.Routing.PageRouteHandler>類別。</span><span class="sxs-lookup"><span data-stu-id="d1281-291">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1281-292">下列範例示範如何使用此方法中定義的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-292">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="d1281-293">這個範例屬於較大的範例中提供的<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>方法概觀。</span><span class="sxs-lookup"><span data-stu-id="d1281-293">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#160)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#160)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1281-294">
            <paramref name="routeUrl" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-294">The <paramref name="routeUrl" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="routeCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d1281-295">要移除之路由中從零開始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-295">The zero-based index of the route to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-296">在指定索引處將路由自 <see cref="T:System.Web.Routing.RouteCollection" /> 物件移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-296">Removes the route from the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-297">使用<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法和<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>藉此確定您的集合，而不發生衝突，來自其他處理序與互動的方法。</span><span class="sxs-lookup"><span data-stu-id="d1281-297">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteExistingFiles">
      <MemberSignature Language="C#" Value="public bool RouteExistingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RouteExistingFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteExistingFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RouteExistingFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RouteExistingFiles : bool with get, set" Usage="System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d1281-298">取得或設定值，指出 ASP.NET 路由是否應該處理符合現有檔案的 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-298">Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d1281-299">如果 ASP.NET 路由會處理所有要求 (包括符合現有檔案的要求)，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-299">
              <see langword="true" /> if ASP.NET routing handles all requests, even those that match an existing file; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d1281-300">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-300">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-301">雖然此值可以動態變更，使用 ASP.NET 路由整合時，將會忽略服務已啟動後所做的任何變更。</span><span class="sxs-lookup"><span data-stu-id="d1281-301">Although this value can be changed dynamically, any change made after a service has been activated will be ignored when using ASP.NET routing integration.</span></span> <span data-ttu-id="d1281-302">如需詳細資訊，請參閱 < [ASP.NET 路由整合](http://go.microsoft.com/fwlink/?LinkId=195235)。</span><span class="sxs-lookup"><span data-stu-id="d1281-302">For more information, see [ASP.NET Routing Integration](http://go.microsoft.com/fwlink/?LinkId=195235).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.SetItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="d1281-303">要取代的路由之以零為起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-303">The zero-based index of the route to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="d1281-304">要在指定索引處加入的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-304">The route to add at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1281-305">取代指定索引處的路由。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-305">Replaces the route at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1281-306">當您加入未命名的通往<xref:System.Web.Routing.RouteCollection>物件時，您無法加入已存在於集合中的路由。</span><span class="sxs-lookup"><span data-stu-id="d1281-306">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>  
  
 <span data-ttu-id="d1281-307">使用<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>方法和<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>藉此確定您的集合，而不發生衝突，來自其他處理序與互動的方法。</span><span class="sxs-lookup"><span data-stu-id="d1281-307">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d1281-308">
            <paramref name="item" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-308">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d1281-309">
            <paramref name="item" /> 已存在於集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1281-309">
              <paramref name="item" /> is already in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>