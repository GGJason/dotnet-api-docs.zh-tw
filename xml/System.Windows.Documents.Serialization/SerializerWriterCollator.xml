<Type Name="SerializerWriterCollator" FullName="System.Windows.Documents.Serialization.SerializerWriterCollator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="66239f9bf4896792380f7448fc82b729fd5049ae" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30628882" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SerializerWriterCollator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SerializerWriterCollator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SerializerWriterCollator" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializerWriterCollator abstract" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定義實作外掛文件序列化 <see cref="T:System.Windows.Media.Visual" /> 自動分頁器所需的抽象方法。</summary>
    <remarks>To be added.</remarks>
    <block subset="none" type="overrides">
      <para>A<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />會透過<see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" />方法<see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />類別。  
  
 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />寫入的寫入到相同的輸出資料流<see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />建立<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializerWriterCollator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SerializerWriterCollator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>A<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />會透過<see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" />方法<see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />類別。  
  
 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />寫入的寫入到相同的輸出資料流<see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />建立<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="BeginBatchWrite">
      <MemberSignature Language="C#" Value="public abstract void BeginBatchWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginBatchWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.BeginBatchWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginBatchWrite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginBatchWrite();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，啟始批次寫入作業的開頭。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.EndBatchWrite" />
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public abstract void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，取消同步的 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" /> 作業。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public abstract void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelAsync();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，取消非同步的 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" /> 作業。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel" />
      </Docs>
    </Member>
    <Member MemberName="EndBatchWrite">
      <MemberSignature Language="C#" Value="public abstract void EndBatchWrite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndBatchWrite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.EndBatchWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndBatchWrite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndBatchWrite();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，完成批次寫入作業。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.BeginBatchWrite" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素寫入至序列化資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.Write%2A>方法寫入資料流相關聯<xref:System.Windows.Documents.Serialization.SerializerWriter>建立<xref:System.Windows.Documents.Serialization.SerializerWriterCollator>呼叫<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的視覺化項目。</param>
        <summary>在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素寫入至序列化資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.Write%2A>方法寫入資料流相關聯<xref:System.Windows.Documents.Serialization.SerializerWriter>建立<xref:System.Windows.Documents.Serialization.SerializerWriterCollator>呼叫<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">寫入至資料流的 <see cref="T:System.Windows.Media.Visual" />。</param>
        <param name="printTicket">物件，指定資料列印方式的喜好設定。</param>
        <summary>在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素連同相關聯的 Print Ticket 一起寫入至序列化資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.Write%2A>方法寫入資料流相關聯<xref:System.Windows.Documents.Serialization.SerializerWriter>建立<xref:System.Windows.Documents.Serialization.SerializerWriterCollator>呼叫<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.Cancel" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素寫入至序列化資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync%2A>方法寫入資料流相關聯<xref:System.Windows.Documents.Serialization.SerializerWriter>建立<xref:System.Windows.Documents.Serialization.SerializerWriterCollator>呼叫<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的視覺化項目。</param>
        <summary>在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素寫入至序列化資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync%2A>方法寫入資料流相關聯<xref:System.Windows.Documents.Serialization.SerializerWriter>建立<xref:System.Windows.Documents.Serialization.SerializerWriterCollator>呼叫<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的視覺化項目。</param>
        <param name="userState">識別非同步寫入作業的呼叫端指定物件。</param>
        <summary>在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素與指定的事件識別碼寫入至序列化資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync%2A>方法寫入資料流相關聯<xref:System.Windows.Documents.Serialization.SerializerWriter>建立<xref:System.Windows.Documents.Serialization.SerializerWriterCollator>呼叫<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>。  
  
 `userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的視覺化項目。</param>
        <param name="printTicket">
          <c>visual</c> 元素的預設列印喜好設定。</param>
        <summary>在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素連同相關聯的 Print Ticket 一起寫入至序列化資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync%2A>方法寫入資料流相關聯<xref:System.Windows.Documents.Serialization.SerializerWriter>建立<xref:System.Windows.Documents.Serialization.SerializerWriterCollator>呼叫<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>。  
  
 `printTicket` 可以是`null`如果沒有任何慣用的列印設定。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的視覺化項目。</param>
        <param name="printTicket">
          <c>visual</c> 元素的預設列印喜好設定。</param>
        <param name="userState">識別非同步寫入作業的呼叫端指定物件。</param>
        <summary>在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素連同相關聯的 Print Ticket 和識別碼一起寫入至序列化資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Serialization.SerializerWriterCollator.WriteAsync%2A>方法寫入資料流相關聯<xref:System.Windows.Documents.Serialization.SerializerWriter>建立<xref:System.Windows.Documents.Serialization.SerializerWriterCollator>呼叫<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>。  
  
 `printTicket` 可以是`null`如果沒有任何慣用的列印設定。  
  
 `userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriterCollator.CancelAsync" />
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriterCollator.Write" />
      </Docs>
    </Member>
  </Members>
</Type>