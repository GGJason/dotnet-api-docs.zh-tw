<Type Name="SerializerWriter" FullName="System.Windows.Documents.Serialization.SerializerWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6b590bc351dcc6793bf5d8aedb6e8e63707c994" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36363731" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class SerializerWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SerializerWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Serialization.SerializerWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SerializerWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class SerializerWriter abstract" />
  <TypeSignature Language="F#" Value="type SerializerWriter = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="796a8-101">定義實作外掛程式文件輸出序列化程式所需的抽象方法與事件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="796a8-101">Defines the abstract methods and events that are required to implement a plug-in document output serializer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="796a8-102">下列範例說明使用<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-102">The following example illustrates the use of <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 [!code-csharp[DocumentSerialize#DocSerializeFileFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializefilefilter)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SerializerWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SerializerWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="796a8-103">初始化 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-103">Initializes a new instance of the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-104">執行個體<xref:System.Windows.Documents.Serialization.SerializerWriter>應該利用建立<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A>方法<xref:System.Windows.Documents.Serialization.SerializerProvider>物件，不<xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A>方法<xref:System.Windows.Documents.Serialization.ISerializerFactory>物件。</span><span class="sxs-lookup"><span data-stu-id="796a8-104">Instances of <xref:System.Windows.Documents.Serialization.SerializerWriter> should be created by using the <xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A> method of a <xref:System.Windows.Documents.Serialization.SerializerProvider> object, not the <xref:System.Windows.Documents.Serialization.ISerializerFactory.CreateSerializerWriter%2A> method of an <xref:System.Windows.Documents.Serialization.ISerializerFactory> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-105">下列範例示範如何建立<xref:System.Windows.Documents.Serialization.SerializerWriter>使用<xref:System.Windows.Documents.Serialization.SerializerProvider>。<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A></span><span class="sxs-lookup"><span data-stu-id="796a8-105">The following example shows how to create a <xref:System.Windows.Documents.Serialization.SerializerWriter> using the <xref:System.Windows.Documents.Serialization.SerializerProvider>.<xref:System.Windows.Documents.Serialization.SerializerProvider.CreateSerializerWriter%2A></span></span> <span data-ttu-id="796a8-106">方法。</span><span class="sxs-lookup"><span data-stu-id="796a8-106">method.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelAsync">
      <MemberSignature Language="C#" Value="public abstract void CancelAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CancelAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CancelAsync ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CancelAsync();" />
      <MemberSignature Language="F#" Value="abstract member CancelAsync : unit -&gt; unit" Usage="serializerWriter.CancelAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="796a8-107">在衍生類別中覆寫時，取消非同步寫入作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-107">When overridden in a derived class, cancels an asynchronous write operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateVisualsCollator">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="796a8-108">在衍生類別中覆寫時，傳回將自動分頁之 <see cref="T:System.Windows.Media.Visual" /> 元素寫入至序列化 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-108">When overridden in a derived class, returns a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="796a8-109">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="796a8-109">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> method.</span></span>  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateVisualsCollator () As SerializerWriterCollator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Documents::Serialization::SerializerWriterCollator ^ CreateVisualsCollator();" />
      <MemberSignature Language="F#" Value="abstract member CreateVisualsCollator : unit -&gt; System.Windows.Documents.Serialization.SerializerWriterCollator" Usage="serializerWriter.CreateVisualsCollator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="796a8-110">在衍生類別中覆寫時，傳回寫入自動分頁之 <see cref="T:System.Windows.Media.Visual" /> 項目的 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-110">When overridden in a derived class, returns a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="796a8-111">將自動分頁之 <see cref="T:System.Windows.Media.Visual" /> 元素寫入至文件輸出序列化 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-111">A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements to the document output serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="796a8-112">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="796a8-112">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> method.</span></span>  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="796a8-113">
            <para>
              <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" /> 應傳回<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />寫入同一個序列化<see cref="T:System.IO.Stream" />為<see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />用來建立它。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-113">
              <para>
                <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator" /> should return a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes to the same serialization <see cref="T:System.IO.Stream" /> as the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> that is used to create it.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateVisualsCollator">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator (System.Printing.PrintTicket documentSequencePT, System.Printing.PrintTicket documentPT);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Documents.Serialization.SerializerWriterCollator CreateVisualsCollator(class System.Printing.PrintTicket documentSequencePT, class System.Printing.PrintTicket documentPT) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateVisualsCollator (documentSequencePT As PrintTicket, documentPT As PrintTicket) As SerializerWriterCollator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Documents::Serialization::SerializerWriterCollator ^ CreateVisualsCollator(System::Printing::PrintTicket ^ documentSequencePT, System::Printing::PrintTicket ^ documentPT);" />
      <MemberSignature Language="F#" Value="abstract member CreateVisualsCollator : System.Printing.PrintTicket * System.Printing.PrintTicket -&gt; System.Windows.Documents.Serialization.SerializerWriterCollator" Usage="serializerWriter.CreateVisualsCollator (documentSequencePT, documentPT)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.SerializerWriterCollator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentSequencePT" Type="System.Printing.PrintTicket" />
        <Parameter Name="documentPT" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentSequencePT">
          <span data-ttu-id="796a8-114">
            <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-114">The default print preferences for <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> content.</span>
          </span>
        </param>
        <param name="documentPT">
          <span data-ttu-id="796a8-115">
            <see cref="T:System.Windows.Documents.FixedDocument" /> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-115">The default print preferences for <see cref="T:System.Windows.Documents.FixedDocument" /> content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-116">在衍生類別中覆寫時，傳回寫入自動分頁之 <see cref="T:System.Windows.Media.Visual" /> 項目及指定列印票證的 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-116">When overridden in a derived class, returns a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements together with the given print tickets.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="796a8-117">將自動分頁之 <see cref="T:System.Windows.Media.Visual" /> 元素寫入至文件輸出序列化 <see cref="T:System.IO.Stream" /> 的 <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-117">A <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes collated <see cref="T:System.Windows.Media.Visual" /> elements to the document output serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-118">`documentSequencePT` 或`documentPT`可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-118">`documentSequencePT` or `documentPT` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-119">這個方法不會驗證或修改特定指定列印票證<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-119">This method does not validate or modify the given print tickets for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-120">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-120">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-121">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="796a8-121">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator%2A> method.</span></span>  
  
 [!code-csharp[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpsSaveHelper.cs#createandwritetovisualscollator)]
 [!code-vb[XpsSave#CreateAndWriteToVisualsCollator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpssavehelper.vb#createandwritetovisualscollator)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="796a8-122">
            <para>
              <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> 應傳回<see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" />寫入同一個序列化<see cref="T:System.IO.Stream" />為<see cref="T:System.Windows.Documents.Serialization.SerializerWriter" />會建立它。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-122">
              <para>
                <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CreateVisualsCollator(System.Printing.PrintTicket,System.Printing.PrintTicket)" /> should return a <see cref="T:System.Windows.Documents.Serialization.SerializerWriterCollator" /> that writes to the same serialization <see cref="T:System.IO.Stream" /> as the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> that creates it.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="796a8-123">在衍生類別中覆寫時，以同步方式將內容寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-123">When overridden in a derived class, synchronously writes content to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-124">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-124">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-125">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-125">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::DocumentPaginator ^ documentPaginator);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.DocumentPaginator -&gt; unit" Usage="serializerWriter.Write documentPaginator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">
          <span data-ttu-id="796a8-126">文件分頁符號，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-126">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-127">在衍生類別中覆寫時，以同步方式將指定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的內容寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-127">When overridden in a derived class, synchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-128">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-128">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-129">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-129">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocument ^ fixedDocument);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocument -&gt; unit" Usage="serializerWriter.Write fixedDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">
          <span data-ttu-id="796a8-130">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-130">The document to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-131">在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-131">When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-132">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-132">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-133">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-133">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocumentSequence -&gt; unit" Usage="serializerWriter.Write fixedDocumentSequence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">
          <span data-ttu-id="796a8-134">文件順序，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-134">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-135">在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-135">When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-136">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-136">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-137">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-137">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedPage ^ fixedPage);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedPage -&gt; unit" Usage="serializerWriter.Write fixedPage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">
          <span data-ttu-id="796a8-138">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的頁面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-138">The page to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-139">在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Documents.FixedPage" /> 寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-139">When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-140">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-140">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-141">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-141">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Media.Visual -&gt; unit" Usage="serializerWriter.Write visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="796a8-142">寫入至序列化 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.IO.Stream" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-142">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-143">在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-143">When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-144">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-144">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-145">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-145">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.DocumentPaginator * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (documentPaginator, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">
          <span data-ttu-id="796a8-146">文件分頁符號，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-146">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-147">
            <c>documentPaginator</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-147">The default print preferences for the <c>documentPaginator</c> content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-148">在衍生類別中覆寫時，以同步方式將分頁內容連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-148">When overridden in a derived class, synchronously writes paginated content together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-149">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-149">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-150">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-150">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-151">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-151">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-152">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-152">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-153">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-153">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocument * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (fixedDocument, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">
          <span data-ttu-id="796a8-154">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-154">The document to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-155">
            <c>fixedDocument</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-155">The default print preferences for the <c>fixedDocument</c> content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-156">在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-156">When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-157">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-157">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-158">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-158">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-159">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-159">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-160">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-160">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-161">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-161">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedDocumentSequence * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (fixedDocumentSequence, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">
          <span data-ttu-id="796a8-162">文件順序，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-162">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-163">
            <c>fixedDocumentSequence</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-163">The default print preferences for the <c>fixedDocumentSequence</c> content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-164">在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-164">When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-165">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-165">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-166">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-166">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-167">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-167">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-168">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-168">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-169">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-169">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Documents.FixedPage * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (fixedPage, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">
          <span data-ttu-id="796a8-170">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的頁面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-170">The page to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-171">
            <c>fixedPage</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-171">The default print preferences for the <c>fixedPage</c> content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-172">在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Documents.FixedPage" /> 連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-172">When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-173">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-173">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-174">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-174">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-175">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-175">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-176">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-176">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-177">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-177">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public abstract void Write (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Write(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.Write (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="796a8-178">寫入至序列化 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.IO.Stream" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-178">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-179">
            <c>visual</c> 元素的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-179">The default print preferences for the <c>visual</c> element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-180">在衍生類別中覆寫時，以同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-180">When overridden in a derived class, synchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-181">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-181">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-182">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-182">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-183">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-183">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-184">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-184">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="796a8-185">下列範例示範使用<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29>方法，以序列化至輸出檔的固定格式文件。</span><span class="sxs-lookup"><span data-stu-id="796a8-185">The following example shows the use of the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%28System.Windows.Documents.DocumentPaginator%2CSystem.Printing.PrintTicket%29> method to serialize a flow document to an output file.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerializePlugIn](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserializeplugin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="796a8-186">在衍生類別中覆寫時，以非同步方式將內容寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-186">When overridden in a derived class, asynchronously writes content to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-187">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-187">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator -&gt; unit" Usage="serializerWriter.WriteAsync documentPaginator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">
          <span data-ttu-id="796a8-188">文件分頁符號，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-188">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-189">在衍生類別中覆寫時，以非同步方式將指定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的內容寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-189">When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-190">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-190">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument -&gt; unit" Usage="serializerWriter.WriteAsync fixedDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">
          <span data-ttu-id="796a8-191">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-191">The document to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-192">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-192">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-193">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-193">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence -&gt; unit" Usage="serializerWriter.WriteAsync fixedDocumentSequence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">
          <span data-ttu-id="796a8-194">文件順序，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-194">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-195">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-195">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-196">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-196">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage -&gt; unit" Usage="serializerWriter.WriteAsync fixedPage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
      </Parameters>
      <Docs>
        <param name="fixedPage">
          <span data-ttu-id="796a8-197">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的頁面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-197">The page to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-198">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedPage" /> 寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-198">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-199">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-199">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual -&gt; unit" Usage="serializerWriter.WriteAsync visual" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="796a8-200">寫入至序列化 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.IO.Stream" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-200">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-201">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-201">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-202">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-202">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator * obj -&gt; unit" Usage="serializerWriter.WriteAsync (documentPaginator, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">
          <span data-ttu-id="796a8-203">文件分頁符號，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-203">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="796a8-204">識別非同步寫入作業的呼叫端指定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-204">A caller-specified object to identify the asynchronous write operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-205">在衍生類別中覆寫時，以非同步方式將指定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的內容寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-205">When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-206">`userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="796a8-206">`userState` is passed to the <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> when the <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="796a8-207">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-207">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (documentPaginator, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">
          <span data-ttu-id="796a8-208">文件分頁符號，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-208">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-209">
            <c>documentPaginator</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-209">The default print preferences for the <c>documentPaginator</c> content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-210">在衍生類別中覆寫時，以非同步方式將指定 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 的內容寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-210">When overridden in a derived class, asynchronously writes the content of a given <see cref="T:System.Windows.Documents.DocumentPaginator" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-211">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-211">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-212">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-212">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-213">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-213">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-214">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-214">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocument, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">
          <span data-ttu-id="796a8-215">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-215">The document to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="796a8-216">識別非同步寫入作業的呼叫端指定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-216">A caller-specified object to identify the asynchronous write operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-217">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-217">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-218">`userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="796a8-218">`userState` is passed to the <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> when the <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="796a8-219">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-219">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocument, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">
          <span data-ttu-id="796a8-220">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-220">The document to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-221">
            <c>fixedDocument</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-221">The default print preferences for the <c>fixedDocument</c> content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-222">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-222">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-223">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-223">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-224">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-224">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-225">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-225">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-226">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-226">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocumentSequence, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">
          <span data-ttu-id="796a8-227">文件順序，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-227">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="796a8-228">識別非同步寫入作業的呼叫端指定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-228">A caller-specified object to identify the asynchronous write operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-229">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-229">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-230">`userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="796a8-230">`userState` is passed to the <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> when the <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="796a8-231">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-231">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocumentSequence, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">
          <span data-ttu-id="796a8-232">文件順序，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-232">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-233">
            <c>fixedDocumentSequence</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-233">The default print preferences for the <c>fixedDocumentSequence</c> content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-234">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-234">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-235">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-235">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-236">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-236">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-237">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-237">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-238">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-238">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedPage, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">
          <span data-ttu-id="796a8-239">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的頁面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-239">The page to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="796a8-240">識別非同步寫入作業的呼叫端指定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-240">A caller-specified object to identify the asynchronous write operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-241">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedPage" /> 寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-241">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-242">`userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="796a8-242">`userState` is passed to the <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> when the <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="796a8-243">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-243">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (fixedPage, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="fixedPage">
          <span data-ttu-id="796a8-244">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的頁面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-244">The page to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-245">
            <c>fixedPage</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-245">The default print preferences for the <c>fixedPage</c> content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-246">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedPage" /> 連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-246">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-247">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-247">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-248">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-248">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-249">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-249">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-250">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-250">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * obj -&gt; unit" Usage="serializerWriter.WriteAsync (visual, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="796a8-251">寫入至序列化 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.IO.Stream" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-251">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="796a8-252">識別非同步寫入作業的呼叫端指定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-252">A caller-specified object to identify the asynchronous write operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-253">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-253">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-254">`userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="796a8-254">`userState` is passed to the <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> when the <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="796a8-255">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-255">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket -&gt; unit" Usage="serializerWriter.WriteAsync (visual, printTicket)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="796a8-256">寫入至序列化 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.IO.Stream" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-256">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-257">
            <c>visual</c> 元素的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-257">The default print preferences for the <c>visual</c> element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-258">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-258">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-259">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-259">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-260">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-260">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-261">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-261">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Media.Visual,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.DocumentPaginator documentPaginator, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.DocumentPaginator documentPaginator, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::DocumentPaginator ^ documentPaginator, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.DocumentPaginator * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (documentPaginator, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentPaginator" Type="System.Windows.Documents.DocumentPaginator" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="documentPaginator">
          <span data-ttu-id="796a8-262">文件分頁符號，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-262">The document paginator that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-263">
            <c>documentPaginator</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-263">The default print preferences for the <c>documentPaginator</c> content.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="796a8-264">識別非同步寫入作業的呼叫端指定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-264">A caller-specified object to identify the asynchronous write operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-265">在衍生類別中覆寫時，以非同步方式將分頁內容連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-265">When overridden in a derived class, asynchronously writes paginated content together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-266">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-266">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-267">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-267">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-268">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-268">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-269">`userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="796a8-269">`userState` is passed to the <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> when the <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="796a8-270">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-270">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocument fixedDocument, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocument fixedDocument, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocument ^ fixedDocument, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocument * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocument, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocument" Type="System.Windows.Documents.FixedDocument" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocument">
          <span data-ttu-id="796a8-271">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的文件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-271">The document to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-272">
            <c>fixedDocument</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-272">The default print preferences for the <c>fixedDocument</c> content.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="796a8-273">識別非同步寫入作業的呼叫端指定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-273">A caller-specified object to identify the asynchronous write operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-274">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocument" /> 連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-274">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocument" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-275">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-275">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-276">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-276">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-277">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-277">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-278">`userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="796a8-278">`userState` is passed to the <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> when the <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="796a8-279">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-279">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.DocumentPaginator,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedDocumentSequence fixedDocumentSequence, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedDocumentSequence,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedDocumentSequence ^ fixedDocumentSequence, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedDocumentSequence * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedDocumentSequence, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedDocumentSequence" Type="System.Windows.Documents.FixedDocumentSequence" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedDocumentSequence">
          <span data-ttu-id="796a8-280">文件順序，用來定義寫入至序列化 <see cref="T:System.IO.Stream" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-280">The document sequence that defines the content to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-281">
            <c>fixedDocumentSequence</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-281">The default print preferences for the <c>fixedDocumentSequence</c> content.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="796a8-282">識別非同步寫入作業的呼叫端指定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-282">A caller-specified object to identify the asynchronous write operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-283">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> 連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-283">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedDocumentSequence" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-284">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-284">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-285">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-285">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-286">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-286">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-287">`userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="796a8-287">`userState` is passed to the <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> when the <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="796a8-288">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-288">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedDocument,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Documents.FixedPage fixedPage, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Documents.FixedPage fixedPage, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Documents.FixedPage,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Documents::FixedPage ^ fixedPage, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Documents.FixedPage * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (fixedPage, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixedPage" Type="System.Windows.Documents.FixedPage" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="fixedPage">
          <span data-ttu-id="796a8-289">要寫入至序列化 <see cref="T:System.IO.Stream" /> 的頁面。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-289">The page to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-290">
            <c>fixedPage</c> 內容的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-290">The default print preferences for the <c>fixedPage</c> content.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="796a8-291">識別非同步寫入作業的呼叫端指定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-291">A caller-specified object to identify the asynchronous write operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-292">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Documents.FixedPage" /> 連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-292">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Documents.FixedPage" /> together with an associated <see cref="T:System.Printing.PrintTicket" /> to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-293">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-293">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-294">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-294">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-295">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-295">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-296">`userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="796a8-296">`userState` is passed to the <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> when the <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="796a8-297">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-297">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.Write(System.Windows.Documents.FixedPage,System.Printing.PrintTicket)" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public abstract void WriteAsync (System.Windows.Media.Visual visual, System.Printing.PrintTicket printTicket, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAsync(class System.Windows.Media.Visual visual, class System.Printing.PrintTicket printTicket, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync(System.Windows.Media.Visual,System.Printing.PrintTicket,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteAsync(System::Windows::Media::Visual ^ visual, System::Printing::PrintTicket ^ printTicket, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Windows.Media.Visual * System.Printing.PrintTicket * obj -&gt; unit" Usage="serializerWriter.WriteAsync (visual, printTicket, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
        <Parameter Name="printTicket" Type="System.Printing.PrintTicket" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="796a8-298">寫入至序列化 <see cref="T:System.Windows.Media.Visual" /> 的 <see cref="T:System.IO.Stream" /> 項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-298">The <see cref="T:System.Windows.Media.Visual" /> element to write to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </param>
        <param name="printTicket">
          <span data-ttu-id="796a8-299">
            <c>visual</c> 元素的預設列印喜好設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-299">The default print preferences for the <c>visual</c> element.</span>
          </span>
        </param>
        <param name="userState">
          <span data-ttu-id="796a8-300">識別非同步寫入作業的呼叫端指定物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-300">A caller-specified object to identify the asynchronous write operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="796a8-301">在衍生類別中覆寫時，以非同步方式將指定的 <see cref="T:System.Windows.Media.Visual" /> 元素連同相關聯的 <see cref="T:System.Printing.PrintTicket" /> 和識別碼一起寫入至序列化 <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-301">When overridden in a derived class, asynchronously writes a given <see cref="T:System.Windows.Media.Visual" /> element together with an associated <see cref="T:System.Printing.PrintTicket" /> and identifier to the serialization <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-302">`printTicket` 可以是`null`如果沒有任何慣用的列印設定。</span><span class="sxs-lookup"><span data-stu-id="796a8-302">`printTicket` can be `null` if there are no preferred print settings.</span></span>  
  
 <span data-ttu-id="796a8-303">這個方法不會驗證或修改指定`printTicket`特定<xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="796a8-303">This method does not validate or modify the given `printTicket` for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="796a8-304">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="796a8-304">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A?displayProperty=nameWithType> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
 <span data-ttu-id="796a8-305">`userState` 傳遞至<xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler>時<xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted>就會發生事件。</span><span class="sxs-lookup"><span data-stu-id="796a8-305">`userState` is passed to the <xref:System.Windows.Documents.Serialization.WritingCompletedEventHandler> when the <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted> event occurs.</span></span>  
  
 <span data-ttu-id="796a8-306">輸出<xref:System.IO.Stream>寫入的作業通常指定為參數，以實作的衍生類別的建構函式<xref:System.Windows.Documents.Serialization.SerializerWriter>。</span><span class="sxs-lookup"><span data-stu-id="796a8-306">The output <xref:System.IO.Stream> of the write operation is normally specified as a parameter to the constructor of the derived class that implements <xref:System.Windows.Documents.Serialization.SerializerWriter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingCancelled">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCancelledEventHandler WritingCancelled" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingCancelled As WritingCancelledEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingCancelledEventHandler ^ WritingCancelled;" />
      <MemberSignature Language="F#" Value="member this.WritingCancelled : System.Windows.Documents.Serialization.WritingCancelledEventHandler " Usage="member this.WritingCancelled : System.Windows.Documents.Serialization.WritingCancelledEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCancelledEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="796a8-307">在衍生類別中覆寫時，發生於 <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> 作業執行的時候。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-307">When overridden in a derived class, occurs when a <see cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" /> operation is performed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="M:System.Windows.Documents.Serialization.SerializerWriter.CancelAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingCompleted">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingCompletedEventHandler WritingCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingCompleted As WritingCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingCompletedEventHandler ^ WritingCompleted;" />
      <MemberSignature Language="F#" Value="member this.WritingCompleted : System.Windows.Documents.Serialization.WritingCompletedEventHandler " Usage="member this.WritingCompleted : System.Windows.Documents.Serialization.WritingCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="796a8-308">在衍生類別中覆寫時，發生於寫入作業完成的時候。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-308">When overridden in a derived class, occurs when a write operation finishes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingPrintTicketRequired">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler WritingPrintTicketRequired" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingPrintTicketRequired As WritingPrintTicketRequiredEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingPrintTicketRequiredEventHandler ^ WritingPrintTicketRequired;" />
      <MemberSignature Language="F#" Value="member this.WritingPrintTicketRequired : System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler " Usage="member this.WritingPrintTicketRequired : System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingPrintTicketRequiredEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="796a8-309">在衍生類別中發生覆寫時，發生在以 <see cref="T:System.Printing.PrintTicket" /> 或 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> 方法將 <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> 加入至資料流之前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-309">When overridden in a derived class, occurs just before a <see cref="T:System.Printing.PrintTicket" /> is added to a stream by a <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.Write" /> or <see cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-310"><xref:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired>事件可讓事件處理常式以取代新<xref:System.Printing.PrintTicket>中所指定的<xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A>或<xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="796a8-310">The <xref:System.Windows.Documents.Serialization.SerializerWriter.WritingPrintTicketRequired> event enables the event handler to substitute a new <xref:System.Printing.PrintTicket> for the one specified in the <xref:System.Windows.Documents.Serialization.SerializerWriter.Write%2A> or <xref:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync%2A> method call.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      </Docs>
    </Member>
    <Member MemberName="WritingProgressChanged">
      <MemberSignature Language="C#" Value="public abstract event System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Documents.Serialization.WritingProgressChangedEventHandler WritingProgressChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Documents.Serialization.SerializerWriter.WritingProgressChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event WritingProgressChanged As WritingProgressChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::Windows::Documents::Serialization::WritingProgressChangedEventHandler ^ WritingProgressChanged;" />
      <MemberSignature Language="F#" Value="member this.WritingProgressChanged : System.Windows.Documents.Serialization.WritingProgressChangedEventHandler " Usage="member this.WritingProgressChanged : System.Windows.Documents.Serialization.WritingProgressChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Serialization.WritingProgressChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="796a8-311">在衍生類別中覆寫時，發生在 <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> 更新進度的時候。</span>
          <span class="sxs-lookup">
            <span data-stu-id="796a8-311">When overridden in a derived class, occurs when the <see cref="T:System.Windows.Documents.Serialization.SerializerWriter" /> updates its progress.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="796a8-312">例如，<xref:System.Windows.Documents.Serialization.SerializerWriter>每一頁或多重文件中的每個文件寫入作業之後，無法更新其進度。</span><span class="sxs-lookup"><span data-stu-id="796a8-312">For example, the <xref:System.Windows.Documents.Serialization.SerializerWriter> could update its progress after every page or after every document in a multi-document write operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Documents.Serialization.SerializerWriter.WriteAsync" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCancelled" />
        <altmember cref="E:System.Windows.Documents.Serialization.SerializerWriter.WritingCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>