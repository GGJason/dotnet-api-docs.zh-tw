<Type Name="Cer" FullName="System.Runtime.ConstrainedExecution.Cer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="23cdbbda92dc12a56457f1d88e9fa3cae6c7ff8a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58725607" /></Metadata><TypeSignature Language="C#" Value="public enum Cer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed Cer extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ConstrainedExecution.Cer" />
  <TypeSignature Language="VB.NET" Value="Public Enum Cer" />
  <TypeSignature Language="C++ CLI" Value="public enum class Cer" />
  <TypeSignature Language="F#" Value="type Cer = " />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定在限制之執行區域內呼叫時的方法行為。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.ConstrainedExecution.Cer>列舉會指定方法、 類型或限制的執行區域 (CER) 內的組件的行為。 使用其中一個可用的三個值，表示的實體將會成功，CER，不知道，或者 （具決定性） 可能就能夠報告成功或失敗。  
  
 CER 提供將執行的程式碼區域可確保不中斷即使發生非同步中止的執行緒的記憶體不足例外狀況或堆疊溢位等例外狀況。  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.Runtime.ConstrainedExecution.Cer>列舉型別指定一種方法的限制的執行區域時。 此程式碼範例是針對提供之較大範例的一部分<xref:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute.%23ctor%2A>建構函式。  
  
 [!code-csharp[System.Runtime.ConstrainedExecution#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/cs/program.cs#3)]
 [!code-vb[System.Runtime.ConstrainedExecution#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.ConstrainedExecution/vb/program.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareConstrainedRegions" />
    <altmember cref="M:System.Runtime.CompilerServices.RuntimeHelpers.PrepareMethod(System.RuntimeMethodHandle)" />
    <related type="Article" href="https://msdn.microsoft.com/library/99354547-39c1-4b0b-8553-938e8f8d1808">限制的執行區域</related>
    <related type="Article" href="https://msdn.microsoft.com/library/cf624c1f-c160-46a1-bb2b-213587688da7">可靠性最佳作法</related>
  </Docs>
  <Members>
    <Member MemberName="MayFail">
      <MemberSignature Language="C#" Value="MayFail" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer MayFail = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberSignature Language="VB.NET" Value="MayFail" />
      <MemberSignature Language="C++ CLI" Value="MayFail" />
      <MemberSignature Language="F#" Value="MayFail = 1" Usage="System.Runtime.ConstrainedExecution.Cer.MayFail" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>在例外條件下，此方法可能失敗。 在這種情況下，此方法會向呼叫方法報告成功或失敗。 此方法必須在方法主體的週圍具備 CER 以確保它可以報告傳回值。</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Runtime.ConstrainedExecution.Cer.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>方法、型別或組件沒有 CER 概念。 它不會利用 CER 保證。 這具有如下表示：</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   在例外條件下，此方法可能會失敗。  
  
-   此方法可能會或可能不會報告失敗 （它是不具決定性的）。  
  
-   此方法不會寫入利用 Cer 記住 （這是最可能的案例）。  
  
 如果方法、 類型或組件不明確標記為成功，它會隱含地標示為`Cer.None`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="Success" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.ConstrainedExecution.Cer Success = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberSignature Language="VB.NET" Value="Success" />
      <MemberSignature Language="C++ CLI" Value="Success" />
      <MemberSignature Language="F#" Value="Success = 2" Usage="System.Runtime.ConstrainedExecution.Cer.Success" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ConstrainedExecution.Cer</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>在例外條件下，此方法會保證成功。 應永遠在呼叫的方法週圍建構 CER，即使它是從非 CER 區域中呼叫的也如此。 如果完成其預定要做的，則方法會成功。 例如，以 <c>ReliabilityContractAttribute(Cer.Success)</c> 標記 <see cref="P:System.Collections.ArrayList.Count" />，表示在 CER 下執行時，一律傳回 <see cref="T:System.Collections.ArrayList" /> 中的項目計數，絕不會讓內部欄位處於未定狀態。</summary>
      </Docs>
    </Member>
  </Members>
</Type>