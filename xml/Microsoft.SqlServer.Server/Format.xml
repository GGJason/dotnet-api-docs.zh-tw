<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5cdac326672d175a2dba7e191c1395d8db66b27" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52912594" /></Metadata><TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>由 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> 和 <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> 使用，以指示使用者定義型別 (UDT) 或彙總 (Aggregate) 的序列化 (Serialization) 格式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> 和 <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> 使用，以指示使用者定義型別 (UDT) 或彙總 (Aggregate) 的序列化 (Serialization) 格式。  
  
   
  
## Examples  
 下列範例所示`UserDefinedType`Point UDT 屬性。  UDT 是位元組排序名為 「 點 」，有一個名為"ValidatePoint，"的驗證方法，會使用原生序列化格式。  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><see langword="Native" /> 序列化格式使用非常簡單的演算法，可讓 SQL Server 在磁碟上儲存 UDT 的有效表示。 標記為 <see langword="Native" /> 序列化的型別只能具有實值型別 (Microsoft Visual C# 中的結構 (Struct) 和 Microsoft Visual Basic .NET 中的結構 (Structure)) 做為成員。 不支援參考型別的成員 (例如，Visual C# 和 Visual Basic 中的類別 (Class))，無論是使用者定義的還是框架中現有的成員 (例如 <see cref="T:System.String" />)。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這種格式的需求如下：  
  
-   `StructLayout.LayoutKindSequential`屬性必須套用至彙總或 UDT，如果已定義類別而非以結構中。 這控制資料欄位的實體配置，而用來強制執行循序配置其出現的順序中的成員。 SQL Server 會使用這個屬性來判斷之 Udt 的欄位順序，使用多個欄位。  
  
-   類型必須包含至少一個成員 （序列化的值不能是零個位元組大小）。  
  
-   彙總的所有欄位都必須都是*blittable*，也就是必須在 managed 和 unmanaged 記憶體中有常見的表示法，並不需要特殊處理，interop 封送處理器。  
  
-   UDT 的所有欄位應該都是其中一種可以序列化下列類型： `bool`， `byte`， `sbyte`， `short`， `ushort`， `int`， `uint`， `long`， `ulong`， `float``double`， <xref:System.Data.SqlTypes.SqlByte>， <xref:System.Data.SqlTypes.SqlInt16>， <xref:System.Data.SqlTypes.SqlInt32>， <xref:System.Data.SqlTypes.SqlInt64>， <xref:System.Data.SqlTypes.SqlDateTime>， <xref:System.Data.SqlTypes.SqlSingle>， <xref:System.Data.SqlTypes.SqlDouble>， <xref:System.Data.SqlTypes.SqlMoney>，或其他實值型別定義使用者所包含的其中一個欄位型別。  
  
-   彙總不得指定的值`MaxByteSize`。  
  
-   彙總不能有任何 [NonSerialized] 欄位。  
  
-   欄位不能標示為明確的配置 (<xref:System.Runtime.InteropServices.StructLayoutAttribute>)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>序列化格式不明。</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><see langword="UserDefined" /> 序列化格式透過 <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> 和 <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" /> 方法，為開發人員提供對二進位格式的完全控制。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 彙總必須指定值`MaxByteSize`。  
  
 指定<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>屬性。 預設值為 false。  
  
 如果您省略中的任何欄位<xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A>或<xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A>方法，該欄位的狀態不會序列化。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>