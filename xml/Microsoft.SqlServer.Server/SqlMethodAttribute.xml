<Type Name="SqlMethodAttribute" FullName="Microsoft.SqlServer.Server.SqlMethodAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="932e3af089d010f4578e488cfc1b3ae44c390913" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52915623" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlMethodAttribute : Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit SqlMethodAttribute extends Microsoft.SqlServer.Server.SqlFunctionAttribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlMethodAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlMethodAttribute&#xA;Inherits SqlFunctionAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMethodAttribute sealed : Microsoft::SqlServer::Server::SqlFunctionAttribute" />
  <TypeSignature Language="F#" Value="type SqlMethodAttribute = class&#xA;    inherit SqlFunctionAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.SqlServer.Server.SqlFunctionAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;dotnet-plat-ext-2.2">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示使用者定義型別 (UDT) 之方法或屬性的決定機制和資料存取屬性。 該屬性 (Attribute) 上的屬性 (Property) 反映使用 SQL Server 註冊型別時使用的實體特性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 屬性，<xref:Microsoft.SqlServer.Server.SqlMethodAttribute>應該直接使用 setter 或 getter。  
  
 <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> 繼承自<xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>，因此<xref:Microsoft.SqlServer.Server.SqlMethodAttribute>繼承`FillRowMethodName`並`TableDefinition`欄位從<xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>。 請注意，不可能撰寫資料表值方法，雖然這些欄位的名稱可能會建議，都可以。  
  
   
  
## Examples  
 下列範例示範 UDT 方法的屬性表示，此方法將不會叫用型別的 null 執行個體方法不會變更的類型、 狀態和，將不會呼叫此方法時`null`參數提供給方法的引動過程。  
  
 [!code-csharp[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMethodAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMethodAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>使用者定義型別 (UDT) 上的屬性 (Attribute)，用於表示 UDT 之方法或屬性 (Property) 的決定機制和資料存取屬性 (Property)。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIfReceiverIsNull">
      <MemberSignature Language="C#" Value="public bool InvokeIfReceiverIsNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InvokeIfReceiverIsNull" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberSignature Language="VB.NET" Value="Public Property InvokeIfReceiverIsNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InvokeIfReceiverIsNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InvokeIfReceiverIsNull : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指示 SQL Server 是否應在 null 執行個體上叫用方法。</summary>
        <value>如果 SQL Server 應在 null 執行個體上叫用方法則為 <see langword="true" />；否則為 <see langword="false" />。 如果方法無法叫用 （因為屬性的方法），SQL Server<see langword="DbNull" />會傳回。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設值<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A>屬性是`false`。  
  
 也就是說，方法不是 null 執行個體上呼叫。 如果<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A>為 true，此方法的傳回值取決於其型別。 如果方法的傳回型別可為 null，則會傳回型別的辨別的 null 值。 如果傳回的型別是不可為 null，則會傳回型別的預設 CLR 值。 參考類型的預設值為 null。 實值類型的預設值是當您呼叫類型的預設建構函式會傳回的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMutator">
      <MemberSignature Language="C#" Value="public bool IsMutator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMutator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMutator As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMutator { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMutator : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指出使用者定義型別 (UDT) 上的方法是否為更動子。</summary>
        <value>如果方法是更動子，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A>屬性設定為`true`方法的傳回型別，而且`void`，SQL Server 會將標示為 mutator 方法。 Mutator 方法就是導致 UDT 執行個體的狀態變更。 Mutator 方法可以在指派陳述式或資料修改陳述式，呼叫，但不能用於查詢。 如果方法標示為 mutator，但不會傳回 void，然後建立型別不會失敗並發生錯誤。 即使以外傳回值`void`會引發錯誤，傳回的值不能存取並無法使用。  
  
 預設值<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A>屬性是`false`。  
  
 如果屬性可以是 mutator <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> set 存取子上使用及<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A>設定為`true`。 不過，屬性 setter 會隱含地視為 mutator，如此就不需要設定<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A>的屬性<xref:Microsoft.SqlServer.Server.SqlMethodAttribute>至`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNullCall">
      <MemberSignature Language="C#" Value="public bool OnNullCall { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OnNullCall" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberSignature Language="VB.NET" Value="Public Property OnNullCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OnNullCall { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OnNullCall : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指出在方法引動過程中指定 <see langword="null" /> 輸入引數時是否呼叫使用者定義型別 (UDT) 上的方法。</summary>
        <value>如果方法會在方法引動過程中指定 <see langword="null" /> 輸入引數時呼叫，則為 <see langword="true" />；如果方法的任何輸入參數為 <see langword="null" /> 時傳回 <see langword="null" /> 值，則為 <see langword="false" />。 如果方法無法叫用 （因為屬性的方法），SQL Server<see langword="DbNull" />會傳回。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設值<xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A>屬性是`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>