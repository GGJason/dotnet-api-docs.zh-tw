<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="925c62c41e322e116fd365bf090d9efd2a63835d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36730210" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <TypeSignature Language="F#" Value="type SqlContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0d290-101">Represents an abstraction of the caller's context, which provides access to the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, and <see cref="T:System.Security.Principal.WindowsIdentity" /> objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d290-101">Represents an abstraction of the caller's context, which provides access to the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, and <see cref="T:System.Security.Principal.WindowsIdentity" /> objects.</span>
      </span>
      <span data-ttu-id="0d290-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0d290-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d290-103"><xref:Microsoft.SqlServer.Server.SqlContext>物件可以用來取得該觸發程序內容 （適用於觸發程序中執行的程式碼） 和管道物件 （可用時，例如預存程序）。</span><span class="sxs-lookup"><span data-stu-id="0d290-103">The <xref:Microsoft.SqlServer.Server.SqlContext> object can be used to obtain the trigger context (for code executing in a trigger) and the pipe object (when available, such as in stored procedures).</span></span> <span data-ttu-id="0d290-104">它也可用來取得<xref:System.Security.Principal.WindowsIdentity>物件，表示呼叫的用戶端，Microsoft Windows 身分識別，如果用戶端驗證伺服器使用整合式驗證。</span><span class="sxs-lookup"><span data-stu-id="0d290-104">It can also be used to obtain a <xref:System.Security.Principal.WindowsIdentity> object that represents the Microsoft Windows identity of the calling client, if the client authenticated with the server using integrated authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d290-105">下列範例會建立新<xref:Microsoft.SqlServer.Server.SqlDataRecord>及其<xref:Microsoft.SqlServer.Server.SqlMetaData>。</span><span class="sxs-lookup"><span data-stu-id="0d290-105">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="0d290-106">範例接著標示結果集使用的開頭<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>方法，會將範例資料與記錄傳送回用戶端會使用<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，並以設定結果的結尾標記<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0d290-106">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d290-107">Specifies whether the calling code is running within SQL Server, and if the context connection can be accessed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d290-107">Specifies whether the calling code is running within SQL Server, and if the context connection can be accessed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d290-108">
            <see langword="True" /> 如果使用內容連接和其他<see cref="T:Microsoft.SqlServer.Server.SqlContext" />可以存取的成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d290-108">
              <see langword="True" /> if the context connection is available and the other <see cref="T:Microsoft.SqlServer.Server.SqlContext" /> members can be accessed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d290-109">如果這個屬性會傳回 false，所有其他<xref:Microsoft.SqlServer.Server.SqlContext>成員擲回<xref:System.InvalidOperationException>如果使用。</span><span class="sxs-lookup"><span data-stu-id="0d290-109">If this property returns false, all the other <xref:Microsoft.SqlServer.Server.SqlContext> members throw an <xref:System.InvalidOperationException> if used.</span></span>  
  
 <span data-ttu-id="0d290-110">如果這個屬性會傳回 false，任何嘗試開啟連接物件的 「 內容連接 = true"的連接字串中會失敗。</span><span class="sxs-lookup"><span data-stu-id="0d290-110">If this property returns false, any attempt to open a connection object that has "context connection=true" in the connection string fails.</span></span>  
  
 <span data-ttu-id="0d290-111">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="0d290-111">This property is read-only.</span></span>  
  
 <span data-ttu-id="0d290-112">如果一段程式碼可能會執行 （使用 common language runtime 整合） 的 SQL Server 內部和外部 SQL Server，請使用 ADO.NET 存取資料，這個屬性可用來檢查是否可以使用內容連接。</span><span class="sxs-lookup"><span data-stu-id="0d290-112">When using ADO.NET for data-access, if a piece of code may run both inside SQL Server (using common language runtime integration) and outside SQL Server, this property can be used to check whether the context connection is available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pipe : Microsoft.SqlServer.Server.SqlPipe" Usage="Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d290-113">Gets the pipe object that allows the caller to send result sets, messages, and the results of executing commands back to the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d290-113">Gets the pipe object that allows the caller to send result sets, messages, and the results of executing commands back to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d290-114">執行個體<see cref="T:Microsoft.SqlServer.Server.SqlPipe" />管道是否可用，或<see langword="null" />如果在內容中呼叫管道不可用 （例如，在使用者定義的函式）。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d290-114">An instance of <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> if a pipe is available, or <see langword="null" /> if called in a context where pipe is not available (for example, in a user-defined function).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d290-115">如果從 SQL Server 外部，叫用<xref:System.NotSupportedException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="0d290-115">If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="0d290-116">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="0d290-116">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerContext : Microsoft.SqlServer.Server.SqlTriggerContext" Usage="Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d290-117">Gets the trigger context used to provide the caller with information about what caused the trigger to fire, and a map of the columns that were updated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d290-117">Gets the trigger context used to provide the caller with information about what caused the trigger to fire, and a map of the columns that were updated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d290-118">執行個體<see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />觸發程序內容是否可用，或<see langword="null" />如果觸發程序引動過程之外呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d290-118">An instance of <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> if a trigger context is available, or <see langword="null" /> if called outside of a trigger invocation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d290-119"><xref:Microsoft.SqlServer.Server.SqlTriggerContext>只可擷取物件從通用語言執行階段觸發程序內。</span><span class="sxs-lookup"><span data-stu-id="0d290-119">The <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object can only be retrieved from within a common language runtime trigger.</span></span>  
  
 <span data-ttu-id="0d290-120">如果<xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A>從 SQL Server 外部存取屬性<xref:System.NotSupportedException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="0d290-120">If the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property is accessed from outside of SQL Server, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="0d290-121">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="0d290-121">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0d290-122">The Microsoft Windows identity of the caller.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d290-122">The Microsoft Windows identity of the caller.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0d290-123">A<see cref="T:System.Security.Principal.WindowsIdentity" />代表 Windows 身分識別的呼叫端，執行個體或<see langword="null" />如果用戶端驗證使用 SQL Server 驗證。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0d290-123">A <see cref="T:System.Security.Principal.WindowsIdentity" /> instance representing the Windows identity of the caller, or <see langword="null" /> if the client was authenticated using SQL Server Authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d290-124">在 SQL Server 內的 common language runtime (CLR) 程式碼會永遠叫用處理序帳戶的內容中。</span><span class="sxs-lookup"><span data-stu-id="0d290-124">Common language runtime (CLR) code inside SQL Server is always invoked in the context of the process account.</span></span> <span data-ttu-id="0d290-125">如果有必要的程式碼執行的動作，使用呼叫使用者的身分識別，而不 SQL Server 處理序身分識別，然後模擬語彙基元應該透過這個屬性取得。</span><span class="sxs-lookup"><span data-stu-id="0d290-125">If it is necessary for the code to perform an action using calling user’s identity instead of the SQL Server process identity, then an impersonation token should be obtained through this property.</span></span> <span data-ttu-id="0d290-126">取得 <xref:System.Security.Principal.WindowsIdentity> 物件之後，呼叫端可以模擬用戶端帳戶，並代表它執行動作。</span><span class="sxs-lookup"><span data-stu-id="0d290-126">After obtaining the <xref:System.Security.Principal.WindowsIdentity> object, callers can impersonate the client account and perform actions on their behalf.</span></span>  
  
 <span data-ttu-id="0d290-127">如果從 SQL Server 外部，叫用<xref:System.NotSupportedException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="0d290-127">If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="0d290-128">只有以 `EXTERNAL_ACCESS` 或 `UNSAFE` 使用權限標記的組件才能存取此屬性。</span><span class="sxs-lookup"><span data-stu-id="0d290-128">Only assemblies marked with `EXTERNAL_ACCESS` or `UNSAFE` permissions can access this property.</span></span>  
  
 <span data-ttu-id="0d290-129">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="0d290-129">This property is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0d290-130">下列範例會示範如何取得呼叫用戶端的 Windows 身分識別，並模擬用戶端。</span><span class="sxs-lookup"><span data-stu-id="0d290-130">The following example shows how to get the Windows identity of the calling client and impersonate the client.</span></span> <span data-ttu-id="0d290-131">「 模擬範例 」 SQL Server 線上叢書 》 中的模擬使用範例，請參閱 <<c0> <xref:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0d290-131">See "Impersonation Sample" in SQL Server Books Online for an example of impersonation using the <xref:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity%2A> property.</span></span>  
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>