<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f715fd742165d7d4ffbc7cb2e9be3f2dfa6d157e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37715744" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <TypeSignature Language="F#" Value="type SqlPipe = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="edddc-101">允許 SQL Server 資料庫上同處理序 (In-Process) 執行的 Managed 預存程序 (Stored Procedure) 將結果傳回呼叫端。</span><span class="sxs-lookup"><span data-stu-id="edddc-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span></span> <span data-ttu-id="edddc-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="edddc-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edddc-103">此類別的執行個體可透過受管理的預存程序<xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A>屬性<xref:Microsoft.SqlServer.Server.SqlContext>類別。</span><span class="sxs-lookup"><span data-stu-id="edddc-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edddc-104">下列範例會使用<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlCommand>從預存程序中的資料來源選取資料列。</span><span class="sxs-lookup"><span data-stu-id="edddc-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="edddc-105">然後此範例使用<xref:Microsoft.SqlServer.Server.SqlPipe>來執行命令，並將結果傳送回用戶端。</span><span class="sxs-lookup"><span data-stu-id="edddc-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAndSend : System.Data.SqlClient.SqlCommand -&gt; unit" Usage="sqlPipe.ExecuteAndSend command" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="edddc-106">要執行的 <see cref="T:System.Data.SqlClient.SqlCommand" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="edddc-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span></span></param>
        <summary><span data-ttu-id="edddc-107">執行做為參數傳遞的命令，並將結果傳送至用戶端。</span><span class="sxs-lookup"><span data-stu-id="edddc-107">Executes the command passed as a parameter and sends the results to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edddc-108">任何實際的結果，除了其他訊息和錯誤會也直接傳送到用戶端。</span><span class="sxs-lookup"><span data-stu-id="edddc-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="edddc-109">輸出參數和傳回值不會傳送到用戶端中;這些可供呼叫端，透過命令物件的參數集合。</span><span class="sxs-lookup"><span data-stu-id="edddc-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="edddc-110">如果命令未繫結至同處理序連線，<xref:System.InvalidOperationException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="edddc-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="edddc-111">繫結至跨處理序 (Out-Of-Process) 連接的命令不支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="edddc-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="edddc-112">如果錯誤<xref:System.Data.SqlClient.SqlCommand>原先送出，例外狀況都會傳送至管道，但複本也會傳送至呼叫的 managed 程式碼的物件。</span><span class="sxs-lookup"><span data-stu-id="edddc-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="edddc-113">如果呼叫程式碼不會攔截例外狀況，它會散佈到堆疊的 TRANSACT-SQL 程式碼，並在輸出中出現兩次。</span><span class="sxs-lookup"><span data-stu-id="edddc-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="edddc-114">如果呼叫的程式碼攔截例外狀況，管道取用者還是會看到錯誤，但不是會有重複的錯誤。</span><span class="sxs-lookup"><span data-stu-id="edddc-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edddc-115">下列範例會使用<xref:System.Data.SqlClient.SqlConnection>和<xref:System.Data.SqlClient.SqlCommand>從預存程序中的資料來源選取資料列。</span><span class="sxs-lookup"><span data-stu-id="edddc-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="edddc-116">然後此範例使用<xref:Microsoft.SqlServer.Server.SqlPipe>來執行命令，並將結果傳送回用戶端。</span><span class="sxs-lookup"><span data-stu-id="edddc-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="edddc-117"><paramref name="command" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edddc-117">The <paramref name="command" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="edddc-118">繫結至跨處理序 (Out-Of-Process) 連接的命令不支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="edddc-118">This method is not supported on commands bound to out-of-process connections.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSendingResults : bool" Usage="Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="edddc-119">取得值，指出 <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> 是否處於將單一結果集 (Result Set) 傳送回用戶端的模式。</span><span class="sxs-lookup"><span data-stu-id="edddc-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span></span> <span data-ttu-id="edddc-120">這個屬性是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="edddc-120">This property is read-only.</span></span></summary>
        <value><span data-ttu-id="edddc-121">如果已呼叫 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 方法，且 <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> 處於將單一結果集傳送回用戶端的模式，則為 <see langword="true" />，否則為 <see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="edddc-121"><see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="edddc-122">將結果直接傳送至用戶端或目前的輸出消費者。</span><span class="sxs-lookup"><span data-stu-id="edddc-122">Sends results directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edddc-123">**傳送**方法的資料將直接傳送至用戶端或呼叫端。</span><span class="sxs-lookup"><span data-stu-id="edddc-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="edddc-124">它通常是用戶端取用的輸出**管道**方法，但在巢狀 CLR 的情況下預存程序，輸出取用者也可以是預存程序。</span><span class="sxs-lookup"><span data-stu-id="edddc-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="edddc-125">例如，Procedure1 呼叫<xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>命令文字"EXEC Procedure2"。</span><span class="sxs-lookup"><span data-stu-id="edddc-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="edddc-126">Procedure2 也是受管理的預存程序。</span><span class="sxs-lookup"><span data-stu-id="edddc-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="edddc-127">如果 Procedure2 此時呼叫<xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>，資料列會傳送至 Procedure1 的讀取器，不會對用戶端。</span><span class="sxs-lookup"><span data-stu-id="edddc-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.Send : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.Send record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="edddc-128">要傳送至用戶端的單一資料列結果集：<see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="edddc-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span></span></param>
        <summary><span data-ttu-id="edddc-129">將單一資料列結果集直接傳送至用戶端或目前的輸出消費者。</span><span class="sxs-lookup"><span data-stu-id="edddc-129">Sends a single-row result set directly to the client or current output consumer.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="edddc-130"><paramref name="record" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edddc-130">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberSignature Language="F#" Value="member this.Send : System.Data.SqlClient.SqlDataReader -&gt; unit" Usage="sqlPipe.Send reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="edddc-131">要傳送至用戶端的多資料列結果集：<see cref="T:System.Data.SqlClient.SqlDataReader" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="edddc-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span></span></param>
        <summary><span data-ttu-id="edddc-132">將多資料列結果集直接傳送至用戶端或目前的輸出消費者。</span><span class="sxs-lookup"><span data-stu-id="edddc-132">Sends a multirow result set directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edddc-133">如果<xref:System.Data.SqlClient.SqlDataReader>物件傳遞為參數已隱藏資料行、 資料行不會傳播至結果集傳送至用戶端。</span><span class="sxs-lookup"><span data-stu-id="edddc-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="edddc-134"><paramref name="reader" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edddc-134">The <paramref name="reader" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberSignature Language="F#" Value="member this.Send : string -&gt; unit" Usage="sqlPipe.Send message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="edddc-135">要傳送至用戶端的訊息字串。</span><span class="sxs-lookup"><span data-stu-id="edddc-135">The message string to be sent to the client.</span></span></param>
        <summary><span data-ttu-id="edddc-136">將字串訊息直接傳送至用戶端或目前的輸出消費者。</span><span class="sxs-lookup"><span data-stu-id="edddc-136">Sends a string message directly to the client or current output consumer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edddc-137">訊息字串做為參考用訊息傳送至用戶端。</span><span class="sxs-lookup"><span data-stu-id="edddc-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="edddc-138">用戶端應用程式可以透過不同的機制，根據資料存取應用程式開發介面 (API)，它們會使用接聽訊息。</span><span class="sxs-lookup"><span data-stu-id="edddc-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="edddc-139">例如，如果用戶端使用 ADO.NET，訊息傳輸到<xref:System.Data.SqlClient.SqlConnection.InfoMessage>事件。</span><span class="sxs-lookup"><span data-stu-id="edddc-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edddc-140">下列範例會使用<xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>訊息字串直接傳送到用戶端的方法。</span><span class="sxs-lookup"><span data-stu-id="edddc-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="edddc-141"><paramref name="message" /> 超過 4,000 個字元。</span><span class="sxs-lookup"><span data-stu-id="edddc-141">The <paramref name="message" /> is greater than 4,000 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="edddc-142"><paramref name="message" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edddc-142">The <paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberSignature Language="F#" Value="member this.SendResultsEnd : unit -&gt; unit" Usage="sqlPipe.SendResultsEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="edddc-143">標記結果集的結尾，並將 <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> 執行個體返回初始狀態。</span><span class="sxs-lookup"><span data-stu-id="edddc-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edddc-144">Managed 預存程序可以將結果集傳送給未實作的用戶端<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="edddc-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="edddc-145">這種方法，連同<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>，允許自訂結果集傳送至用戶端的預存程序。</span><span class="sxs-lookup"><span data-stu-id="edddc-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edddc-146">下列範例會建立新<xref:Microsoft.SqlServer.Server.SqlDataRecord>及其<xref:Microsoft.SqlServer.Server.SqlMetaData>。</span><span class="sxs-lookup"><span data-stu-id="edddc-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="edddc-147">範例接著標示結果集使用的開頭<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>方法，將範例資料的記錄傳送回用戶端會使用<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，並將標記為結尾的結果集<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="edddc-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="edddc-148">未先呼叫 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="edddc-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsRow : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsRow record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="edddc-149"><see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 物件，具有要傳送至用戶端之資料列的資料行值。</span><span class="sxs-lookup"><span data-stu-id="edddc-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span></span> <span data-ttu-id="edddc-150">記錄的結構描述必須符合傳遞至 <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 方法之 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 的中繼資料 (Metadata) 所描述的結構描述。</span><span class="sxs-lookup"><span data-stu-id="edddc-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span></span></param>
        <summary><span data-ttu-id="edddc-151">將資料的單一資料列傳送回用戶端。</span><span class="sxs-lookup"><span data-stu-id="edddc-151">Sends a single row of data back to the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edddc-152">Managed 預存程序可以將結果集傳送給未實作的用戶端<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="edddc-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="edddc-153">這種方法，連同<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>，允許自訂結果集傳送至用戶端的預存程序。</span><span class="sxs-lookup"><span data-stu-id="edddc-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="edddc-154"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法會傳回給用戶端來傳送單一資料列。</span><span class="sxs-lookup"><span data-stu-id="edddc-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="edddc-155">資料列可以接著傳回給呼叫者藉由呼叫<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>，一次傳送每個資料列。</span><span class="sxs-lookup"><span data-stu-id="edddc-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="edddc-156">已傳送所有資料列，呼叫之後<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法，才能標示結果集的結尾。</span><span class="sxs-lookup"><span data-stu-id="edddc-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edddc-157">下列範例會建立新<xref:Microsoft.SqlServer.Server.SqlDataRecord>及其<xref:Microsoft.SqlServer.Server.SqlMetaData>。</span><span class="sxs-lookup"><span data-stu-id="edddc-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="edddc-158">範例接著標示結果集使用的開頭<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>方法，將範例資料的記錄傳送回用戶端會使用<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，並將標記為結尾的結果集<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="edddc-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="edddc-159"><paramref name="record" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edddc-159">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="edddc-160">未先呼叫 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="edddc-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberSignature Language="F#" Value="member this.SendResultsStart : Microsoft.SqlServer.Server.SqlDataRecord -&gt; unit" Usage="sqlPipe.SendResultsStart record" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record"><span data-ttu-id="edddc-161"><see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> 物件，您可以從中擷取中繼資料，也可用它來描述結果集。</span><span class="sxs-lookup"><span data-stu-id="edddc-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span></span></param>
        <summary><span data-ttu-id="edddc-162">標記要傳送回用戶端之結果集的開頭，並使用這個 record 參數，建構描述結果集的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="edddc-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="edddc-163">Managed 預存程序可以將結果集傳送給未實作的用戶端<xref:System.Data.SqlClient.SqlDataReader>。</span><span class="sxs-lookup"><span data-stu-id="edddc-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="edddc-164">這種方法，連同<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>，允許自訂結果集傳送至用戶端的預存程序。</span><span class="sxs-lookup"><span data-stu-id="edddc-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="edddc-165"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>方法標示結果集的開頭，並使用這個 record 參數來建構描述結果集的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="edddc-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="edddc-166">所有後續資料列，使用傳送<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，必須符合該中繼資料定義。</span><span class="sxs-lookup"><span data-stu-id="edddc-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="edddc-167">請注意，在呼叫<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>，則僅<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>和<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>可以呼叫。</span><span class="sxs-lookup"><span data-stu-id="edddc-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="edddc-168">在相同的執行個體中的任何其他方法<xref:Microsoft.SqlServer.Server.SqlPipe>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="edddc-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="edddc-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> 設定<xref:Microsoft.SqlServer.Server.SqlPipe>回到其中可以呼叫其他方法的初始狀態。</span><span class="sxs-lookup"><span data-stu-id="edddc-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="edddc-170">從 CLR 執行 TRANSACT-SQL 傳回控制項之後，請勿嘗試使用靜態或本機變數初始化為 CLR 的記憶體。</span><span class="sxs-lookup"><span data-stu-id="edddc-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="edddc-171">例如，不要儲存在程序的執行個體類別，例如`SQLDataRecord`，以用之後，控制權會從 CLR。</span><span class="sxs-lookup"><span data-stu-id="edddc-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="edddc-172">其中一個例外是`SQLMetaData`process 類別中。</span><span class="sxs-lookup"><span data-stu-id="edddc-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="edddc-173">下列範例會建立新<xref:Microsoft.SqlServer.Server.SqlDataRecord>及其<xref:Microsoft.SqlServer.Server.SqlMetaData>。</span><span class="sxs-lookup"><span data-stu-id="edddc-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="edddc-174">範例接著標示結果集使用的開頭<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>方法，將範例資料的記錄傳送回用戶端會使用<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>方法，並將標記為結尾的結果集<xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="edddc-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="edddc-175"><paramref name="record" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="edddc-175">The <paramref name="record" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="edddc-176"><paramref name="record" /> 沒有資料行或尚未初始化。</span><span class="sxs-lookup"><span data-stu-id="edddc-176">The <paramref name="record" /> has no columns or has not been initialized.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="edddc-177">在呼叫 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> 方法之後，呼叫了 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> 或 <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> 之外的方法。</span><span class="sxs-lookup"><span data-stu-id="edddc-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span></span></exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>