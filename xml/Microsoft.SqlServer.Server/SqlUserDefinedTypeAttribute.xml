<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d81fff2e49c763810252a9fac6a775c1d5d70824" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="40de4-101">用於將組件中的型別定義在 SQL Server 中標記為使用者定義型別 (UDT)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="40de4-101">Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server.</span>
      </span>
      <span data-ttu-id="40de4-102">該屬性 (Attribute) 上的屬性 (Property) 反映使用 SQL Server 註冊型別時使用的實體特性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="40de4-102">The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</span>
      </span>
      <span data-ttu-id="40de4-103">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="40de4-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40de4-104">SQL Server 建立使用者定義型別繫結至類型定義具有<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="40de4-104">SQL Server creates a user-defined type that is bound to the type definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> custom attribute.</span></span> <span data-ttu-id="40de4-105">每個 UDT 必須標註，以這個屬性。</span><span class="sxs-lookup"><span data-stu-id="40de4-105">Every UDT must be annotated with this attribute.</span></span> <span data-ttu-id="40de4-106">請參閱[clr 使用者定義型別](http://go.microsoft.com/fwlink/?LinkId=128028)如需 Udt 的詳細資訊，包括之 UDT 的範例。</span><span class="sxs-lookup"><span data-stu-id="40de4-106">See [CLR User-Defined Types](http://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="40de4-107">下列範例所示`UserDefinedType`Point UDT 的屬性。</span><span class="sxs-lookup"><span data-stu-id="40de4-107">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="40de4-108">UDT 是位元組排序、 名為 「 點 」，具有名為"ValidatePoint 」，驗證方法和使用原生序列化格式。</span><span class="sxs-lookup"><span data-stu-id="40de4-108">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="40de4-109">其中一個 <see cref="T:Microsoft.SqlServer.Server.Format" /> 值，表示型別的序列化 (Serialization) 格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-109">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40de4-110">使用者定義型別 (UDT) 上的必要屬性，用於確認指定的型別是 UDT，並指出 UDT 的儲存格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-110">A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40de4-111">下列範例會指定`Format`使用者定義型別`SerializedDataWithMetadata`和`MaxByteSize`為 8000 個位元組。</span><span class="sxs-lookup"><span data-stu-id="40de4-111">The following example specifies that the `Format` of the user-defined type is `SerializedDataWithMetadata` and the `MaxByteSize` is 8000 bytes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40de4-112">做為 <see cref="T:Microsoft.SqlServer.Server.Format" /> 的序列化格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-112">The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40de4-113">表示序列化格式的 <see cref="T:Microsoft.SqlServer.Server.Format" /> 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-113">A <see cref="T:Microsoft.SqlServer.Server.Format" /> value representing the serialization format.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40de4-114">指出使用者定義型別是否依位元組排序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-114">Indicates whether the user-defined type is byte ordered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40de4-115">如果使用者定義型別是依位元組排序，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-115">
              <see langword="true" /> if the user-defined type is byte ordered; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40de4-116">當設定為`true`、<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>屬性實際上可以確保已序列化的二進位資料可以用於資訊的語意排序。</span><span class="sxs-lookup"><span data-stu-id="40de4-116">When set to `true`, the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> property in effect guarantees that the serialized binary data can be used for semantic ordering of the information.</span></span> <span data-ttu-id="40de4-117">因此，每個位元組排序的 UDT 物件執行個體只能有一個序列化表示法。</span><span class="sxs-lookup"><span data-stu-id="40de4-117">Thus, each instance of a byte-ordered UDT object can only have one serialized representation.</span></span> <span data-ttu-id="40de4-118">當比較運算在 SQL Server 上執行序列化的位元組，則其結果應該是相同如同相同的比較作業已在 managed 程式碼...</span><span class="sxs-lookup"><span data-stu-id="40de4-118">When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code..</span></span>  
  
 <span data-ttu-id="40de4-119">支援下列功能時<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>設`true`:</span><span class="sxs-lookup"><span data-stu-id="40de4-119">The following features are supported when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="40de4-120">此類型的資料行上建立索引功能。</span><span class="sxs-lookup"><span data-stu-id="40de4-120">The ability to create indexes on columns of this type.</span></span>  
  
-   <span data-ttu-id="40de4-121">建立主要和外部索引鍵，以及此類型的資料行的核取和 UNIQUE 條件約束的能力。</span><span class="sxs-lookup"><span data-stu-id="40de4-121">The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.</span></span>  
  
-   <span data-ttu-id="40de4-122">使用 TRANSACT-SQL ORDER BY、 GROUP BY 和 PARTITION BY 子句的功能。</span><span class="sxs-lookup"><span data-stu-id="40de4-122">The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses.</span></span> <span data-ttu-id="40de4-123">在這些情況下，類型的二進位表示法用於決定順序。</span><span class="sxs-lookup"><span data-stu-id="40de4-123">In these cases, the binary representation of the type is used to determine the order.</span></span>  
  
-   <span data-ttu-id="40de4-124">能夠在 TRANSACT-SQL 陳述式中使用比較運算子。</span><span class="sxs-lookup"><span data-stu-id="40de4-124">The ability to use comparison operators in Transact-SQL statements.</span></span>  
  
-   <span data-ttu-id="40de4-125">保存計算資料行，此類型的能力。</span><span class="sxs-lookup"><span data-stu-id="40de4-125">The ability to persist computed columns of this type.</span></span>  
  
 <span data-ttu-id="40de4-126">請注意，同時`Native`和`UserDefined`序列化格式都支援下列比較運算子時<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>設`true`:</span><span class="sxs-lookup"><span data-stu-id="40de4-126">Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="40de4-127">等於 （=）</span><span class="sxs-lookup"><span data-stu-id="40de4-127">Equal to (=)</span></span>  
  
-   <span data-ttu-id="40de4-128">不等於 (!=)</span><span class="sxs-lookup"><span data-stu-id="40de4-128">Not equal to (!=)</span></span>  
  
-   <span data-ttu-id="40de4-129">大於 (>)</span><span class="sxs-lookup"><span data-stu-id="40de4-129">Greater than (>)</span></span>  
  
-   <span data-ttu-id="40de4-130">小於 (\<)</span><span class="sxs-lookup"><span data-stu-id="40de4-130">Less than (\<)</span></span>  
  
-   <span data-ttu-id="40de4-131">大於或等於 (>=)</span><span class="sxs-lookup"><span data-stu-id="40de4-131">Greater than or equal to (>=)</span></span>  
  
-   <span data-ttu-id="40de4-132">小於或等於 (<=)</span><span class="sxs-lookup"><span data-stu-id="40de4-132">Less than or equal to (<=)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40de4-133">指出這個使用者定義型別的所有執行個體 (Instance) 是否為同一長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-133">Indicates whether all instances of this user-defined type are the same length.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40de4-134">如果這個型別的所有執行個體長度相同，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-134">
              <see langword="true" /> if all instances of this type are the same length; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40de4-135">如果設定為`true`，Udt 對應到此 common language runtime (CLR) 類型的所有執行個體的長度必須以位元組為單位完全等於<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>。</span><span class="sxs-lookup"><span data-stu-id="40de4-135">If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span></span> <span data-ttu-id="40de4-136">這個屬性才有意義的 Udt 與`UserDefined`序列化<xref:Microsoft.SqlServer.Server.Format>。</span><span class="sxs-lookup"><span data-stu-id="40de4-136">This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40de4-137">執行個體的最大大小 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-137">The maximum size of the instance, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40de4-138">
            <see cref="T:System.Int32" /> 值，表示執行個體的最大大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-138">An <see cref="T:System.Int32" /> value representing the maximum size of the instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40de4-139">您必須指定<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>屬性`UserDefined`序列化<xref:Microsoft.SqlServer.Server.Format>。</span><span class="sxs-lookup"><span data-stu-id="40de4-139">You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 <span data-ttu-id="40de4-140">當連接到 SQL Server 2005 或更早版本，<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>必須是介於 1 到 8000 之間。</span><span class="sxs-lookup"><span data-stu-id="40de4-140">When connecting to SQL Server 2005 or earlier, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> must be between 1 and 8000.</span></span>  
  
 <span data-ttu-id="40de4-141">在連接到 SQL Server 2008 或更新版本時，設定<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>介於 1 到 8000，類型的執行個體永遠是 8,000 個位元組或更少。</span><span class="sxs-lookup"><span data-stu-id="40de4-141">When connecting to SQL Server 2008 or later, set <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> between 1 and 8000, for a type whose instances are always 8,000 bytes or less.</span></span> <span data-ttu-id="40de4-142">針對可以具有大於 8000 的執行個體的類型，指定-1。</span><span class="sxs-lookup"><span data-stu-id="40de4-142">For types that can have instances larger than 8000, specify -1.</span></span>  
  
 <span data-ttu-id="40de4-143">指定的使用者定義序列化 udt<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>所定義的使用者是指 UDT 在其序列化表單中的總大小。</span><span class="sxs-lookup"><span data-stu-id="40de4-143">For a UDT with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> refers to the total size of the UDT in its serialized form as defined by the user.</span></span> <span data-ttu-id="40de4-144">請考慮 UDT 屬性的 10 個字元的字串 (<xref:System.Char>)。</span><span class="sxs-lookup"><span data-stu-id="40de4-144">Consider a UDT with a property of a string of 10 characters (<xref:System.Char>).</span></span> <span data-ttu-id="40de4-145">當使用序列化 UDT 時<xref:System.IO.BinaryWriter>、 序列化字串的大小總計為 22 的位元組： 2 個位元組，每個 Unicode utf-16 字元乘以最大數目的字元，加上 2 控制位元組負擔所產生序列化的二進位資料流。</span><span class="sxs-lookup"><span data-stu-id="40de4-145">When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.</span></span> <span data-ttu-id="40de4-146">因此，判斷的值時<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>，必須考慮序列化 UDT 的總大小： 以二進位形式序列化資料，再加上序列化所造成的負擔的大小。</span><span class="sxs-lookup"><span data-stu-id="40de4-146">So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.</span></span>  
  
 <span data-ttu-id="40de4-147">這個屬性不應該使用與`Native`序列化<xref:Microsoft.SqlServer.Server.Format>。</span><span class="sxs-lookup"><span data-stu-id="40de4-147">This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40de4-148">使用者定義型別的 SQL Server 名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-148">The SQL Server name of the user-defined type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40de4-149">
            <see cref="T:System.String" /> 值，表示使用者定義型別的 SQL Server 名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-149">A <see cref="T:System.String" /> value representing the SQL Server name of the user-defined type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40de4-150"><xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A>屬性不會使用 SQL Server 中，但會使用由 Microsoft Visual Studio.NET 整合式開發環境 (IDE)。</span><span class="sxs-lookup"><span data-stu-id="40de4-150">The <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40de4-151">方法的名稱，用於驗證使用者定義型別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-151">The name of the method used to validate instances of the user-defined type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40de4-152">
            <see cref="T:System.String" />，表示方法的名稱，用於驗證使用者定義型別的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="40de4-152">A <see cref="T:System.String" /> representing the name of the method used to validate instances of the user-defined type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40de4-153">來自不受信任的二進位值，已還原序列化 UDT 時，這個屬性所指定的方法會驗證 UDT 執行個體。</span><span class="sxs-lookup"><span data-stu-id="40de4-153">The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>