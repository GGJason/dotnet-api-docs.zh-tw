<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0fe43b3833ae459a9e3cda81f20a4960853eb2e2" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52217728" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SqlUserDefinedTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>用於將組件中的型別定義在 SQL Server 中標記為使用者定義型別 (UDT)。 該屬性 (Attribute) 上的屬性 (Property) 反映使用 SQL Server 註冊型別時使用的實體特性。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL Server 建立繫結至具有型別定義的使用者定義型別<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute>自訂屬性。 每個 UDT 都必須有這個屬性註解。 請參閱[clr 使用者定義型別](https://go.microsoft.com/fwlink/?LinkId=128028)如需有關 Udt 的詳細資訊，包括之 UDT 的範例。  
  
   
  
## Examples  
 下列範例所示`UserDefinedType`Point UDT 屬性。  UDT 是位元組排序名為 「 點 」，有一個名為"ValidatePoint，"的驗證方法，會使用原生序列化格式。  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberSignature Language="F#" Value="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute : Microsoft.SqlServer.Server.Format -&gt; Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" Usage="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute format" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format">其中一個 <see cref="T:Microsoft.SqlServer.Server.Format" /> 值，表示型別的序列化 (Serialization) 格式。</param>
        <summary>使用者定義型別 (UDT) 上的必要屬性，用於確認指定的型別是 UDT，並指出 UDT 的儲存格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下列範例會指定`Format`使用者定義型別是`SerializedDataWithMetadata`而`MaxByteSize`為 8000 個位元組。  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberSignature Language="F#" Value="member this.Format : Microsoft.SqlServer.Server.Format" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>做為 <see cref="T:Microsoft.SqlServer.Server.Format" /> 的序列化格式。</summary>
        <value>表示序列化格式的 <see cref="T:Microsoft.SqlServer.Server.Format" /> 值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsByteOrdered : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指出使用者定義型別是否依位元組排序。</summary>
        <value>如果使用者定義型別是依位元組排序，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當設定為`true`，則<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>屬性實際上可保證序列化的二進位資料可以用於資訊的語意排序。 因此，每個位元組排序的 UDT 物件執行個體只能有一個序列化表示法。 比對作業執行時在 SQL Server 上序列化的位元組，其結果應該相同，如果相同的比較作業中發生的 managed 程式碼...  
  
 支援下列功能時<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>設為`true`:  
  
-   此類型的資料行上建立索引的能力。  
  
-   建立主要與外部索引鍵，以及此類型的資料行的核取和 UNIQUE 條件約束的能力。  
  
-   使用 TRANSACT-SQL ORDER BY、 GROUP BY 和 PARTITION BY 子句的功能。 在這些情況下，類型的二進位表示法用來決定的順序。  
  
-   能夠在 TRANSACT-SQL 陳述式中使用比較運算子。  
  
-   保存此類型的計算資料行的能力。  
  
 請注意，同時`Native`並`UserDefined`序列化格式支援下列比較運算子時<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A>設定為`true`:  
  
-   等於 （=）  
  
-   不等於 (!=)  
  
-   大於 (>)  
  
-   小於 (\<)  
  
-   大於或等於 (>=)  
  
-   小於或等於 (<=)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedLength : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指出這個使用者定義型別的所有執行個體 (Instance) 是否為同一長度。</summary>
        <value>如果這個型別的所有執行個體長度相同，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果設定為`true`，Udt 對應到此 common language runtime (CLR) 類型的所有執行個體必須具有長度以位元組為單位完全等於<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>。 這個屬性才適用與 udt`UserDefined`序列化<xref:Microsoft.SqlServer.Server.Format>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxByteSize : int with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>執行個體的最大大小 (以位元組為單位)。</summary>
        <value>
          <see cref="T:System.Int32" /> 值，表示執行個體的最大大小。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您必須指定<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>具有屬性`UserDefined`序列化<xref:Microsoft.SqlServer.Server.Format>。  
  
 當連接到 SQL Server 2005 或更早版本，<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>必須介於 1 到 8000 之間。  
  
 當連接到 SQL Server 2008 或更新版本，設定<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>介於 1 到 8000，類型的執行個體永遠是 8,000 個位元組或更少。 對於可以有超過 8000 的執行個體的型別，指定-1。  
  
 使用指定的使用者定義序列化 udt<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>指 UDT 在其序列化形式的大小總計，如使用者所定義。 請考慮與 10 個字元的字串屬性的 UDT (<xref:System.Char>)。 當使用序列化 UDT 時<xref:System.IO.BinaryWriter>、 序列化字串的總大小是 22 個位元組，第 2 個位元組，每個 Unicode utf-16 字元，乘以字元，最大數目加上 2 個控制位元組負擔所產生序列化的二進位資料流。 所以，當您決定的值<xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>，必須考慮序列化 UDT 的總大小： 以二進位格式序列化資料，再加上序列化所造成的負擔的大小。  
  
 這個屬性不應使用`Native`序列化<xref:Microsoft.SqlServer.Server.Format>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者定義型別的 SQL Server 名稱。</summary>
        <value>
          <see cref="T:System.String" /> 值，表示使用者定義型別的 SQL Server 名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A>屬性不會使用 SQL Server 內，但會使用由 Microsoft Visual Studio.NET 整合式開發環境 (IDE)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationMethodName : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>方法的名稱，用於驗證使用者定義型別的執行個體。</summary>
        <value>
          <see cref="T:System.String" />，表示方法的名稱，用於驗證使用者定義型別的執行個體。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 來自不受信任的二進位值，已還原序列化 UDT 時，這個屬性所指定的方法會驗證 UDT 執行個體。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>