<Type Name="DbFilterExpression" FullName="System.Data.Common.CommandTrees.DbFilterExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="911aa1acdd3e9d39e45f4e72e520f2cc1e303a06" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39824698" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbFilterExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbFilterExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbFilterExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbFilterExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbFilterExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbFilterExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示針對篩選輸入集所套用的述詞 (Predicate)。 這樣會產生滿足此述詞的項目集合。 這個類別無法被繼承。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbFilterExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> 的執行個體。</param>
        <summary>針對不會產生結果值的運算式而實作訪客模式。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbFilterExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbFilterExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">所產生之結果的型別<c>訪客</c>。</typeparam>
        <param name="visitor">型別 <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> 的執行個體，這個執行個體會產生特定型別的結果值。</param>
        <summary>針對產生特定型別之結果值的運算式而實作訪客模式。</summary>
        <returns>特定型別的結果值，由 <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> 所產生。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpressionBinding Input" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbFilterExpression.Input" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Input As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpressionBinding ^ Input { System::Data::Common::CommandTrees::DbExpressionBinding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Input : System.Data.Common.CommandTrees.DbExpressionBinding" Usage="System.Data.Common.CommandTrees.DbFilterExpression.Input" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</summary>
        <value>指定輸入集的 <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predicate">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Predicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Predicate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbFilterExpression.Predicate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predicate As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Predicate { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Predicate : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbFilterExpression.Predicate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它會指定用來篩選輸入集的述詞。</summary>
        <value>
          <see cref="T:System.Data.Common.CommandTrees.DbExpression" />，它會指定用來篩選輸入集的述詞。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">此運算式為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">運算式與 <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> 的命令樹沒有關聯，或其結果型別不是 <see langword="Boolean" /> 型別。</exception>
      </Docs>
    </Member>
  </Members>
</Type>