<Type Name="DefaultExpressionVisitor" FullName="System.Data.Common.CommandTrees.DefaultExpressionVisitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e851dc03b733829775f4e40aac991f5a341d4c23" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36692524" /></Metadata><TypeSignature Language="C#" Value="public class DefaultExpressionVisitor : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DefaultExpressionVisitor extends System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public Class DefaultExpressionVisitor&#xA;Inherits DbExpressionVisitor(Of DbExpression)" />
  <TypeSignature Language="C++ CLI" Value="public ref class DefaultExpressionVisitor : System::Data::Common::CommandTrees::DbExpressionVisitor&lt;System::Data::Common::CommandTrees::DbExpression ^&gt;" />
  <TypeSignature Language="F#" Value="type DefaultExpressionVisitor = class&#xA;    inherit DbExpressionVisitor&lt;DbExpression&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpressionVisitor&lt;System.Data.Common.CommandTrees.DbExpression&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TResultType">System.Data.Common.CommandTrees.DbExpression</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e57df-101">從指定的根運算式查閱運算式樹狀架構的每個項目。</span><span class="sxs-lookup"><span data-stu-id="e57df-101">Visits each element of an expression tree from a given root expression.</span></span> <span data-ttu-id="e57df-102">如果任何項目有所變更，樹狀結構會重建回根目錄，並傳回新的根運算式 ；否則會傳回原始的根運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-102">If any element changes, the tree is rebuilt back to the root and the new root expression is returned; otherwise the original root expression is returned.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DefaultExpressionVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DefaultExpressionVisitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e57df-103">初始化 <see cref="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="e57df-103">Initializes a new instance of the <see cref="T:System.Data.Common.CommandTrees.DefaultExpressionVisitor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEnterScope">
      <MemberSignature Language="C#" Value="protected virtual void OnEnterScope (System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; scopeVariables);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEnterScope(class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; scopeVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEnterScope (scopeVariables As IEnumerable(Of DbVariableReferenceExpression))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEnterScope(System::Collections::Generic::IEnumerable&lt;System::Data::Common::CommandTrees::DbVariableReferenceExpression ^&gt; ^ scopeVariables);" />
      <MemberSignature Language="F#" Value="abstract member OnEnterScope : seq&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; -&gt; unit&#xA;override this.OnEnterScope : seq&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt; -&gt; unit" Usage="defaultExpressionVisitor.OnEnterScope scopeVariables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeVariables" Type="System.Collections.Generic.IEnumerable&lt;System.Data.Common.CommandTrees.DbVariableReferenceExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="scopeVariables"><span data-ttu-id="e57df-104">範圍變數的集合。</span><span class="sxs-lookup"><span data-stu-id="e57df-104">The collection of scope variables.</span></span></param>
        <summary><span data-ttu-id="e57df-105">表示以指定範圍變數輸入運算式訪問項範圍的事件。</span><span class="sxs-lookup"><span data-stu-id="e57df-105">Represents an event when entering the scope for the expression visitor with specified scope variables.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExitScope">
      <MemberSignature Language="C#" Value="protected virtual void OnExitScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExitScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExitScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExitScope ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExitScope();" />
      <MemberSignature Language="F#" Value="abstract member OnExitScope : unit -&gt; unit&#xA;override this.OnExitScope : unit -&gt; unit" Usage="defaultExpressionVisitor.OnExitScope " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e57df-106">結束運算式訪客的範圍。</span><span class="sxs-lookup"><span data-stu-id="e57df-106">Exits the scope for the expression visitor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExpressionReplaced">
      <MemberSignature Language="C#" Value="protected virtual void OnExpressionReplaced (System.Data.Common.CommandTrees.DbExpression oldExpression, System.Data.Common.CommandTrees.DbExpression newExpression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExpressionReplaced(class System.Data.Common.CommandTrees.DbExpression oldExpression, class System.Data.Common.CommandTrees.DbExpression newExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnExpressionReplaced(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExpressionReplaced (oldExpression As DbExpression, newExpression As DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExpressionReplaced(System::Data::Common::CommandTrees::DbExpression ^ oldExpression, System::Data::Common::CommandTrees::DbExpression ^ newExpression);" />
      <MemberSignature Language="F#" Value="abstract member OnExpressionReplaced : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; unit&#xA;override this.OnExpressionReplaced : System.Data.Common.CommandTrees.DbExpression * System.Data.Common.CommandTrees.DbExpression -&gt; unit" Usage="defaultExpressionVisitor.OnExpressionReplaced (oldExpression, newExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
        <Parameter Name="newExpression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="oldExpression"><span data-ttu-id="e57df-107">舊運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-107">The old expression.</span></span></param>
        <param name="newExpression"><span data-ttu-id="e57df-108">新的運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-108">The new expression.</span></span></param>
        <summary><span data-ttu-id="e57df-109">以運算式訪問項的新運算式取代舊運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-109">Replaces an old expression with a new one for the expression visitor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVariableRebound">
      <MemberSignature Language="C#" Value="protected virtual void OnVariableRebound (System.Data.Common.CommandTrees.DbVariableReferenceExpression fromVarRef, System.Data.Common.CommandTrees.DbVariableReferenceExpression toVarRef);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnVariableRebound(class System.Data.Common.CommandTrees.DbVariableReferenceExpression fromVarRef, class System.Data.Common.CommandTrees.DbVariableReferenceExpression toVarRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnVariableRebound(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnVariableRebound (fromVarRef As DbVariableReferenceExpression, toVarRef As DbVariableReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnVariableRebound(System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ fromVarRef, System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ toVarRef);" />
      <MemberSignature Language="F#" Value="abstract member OnVariableRebound : System.Data.Common.CommandTrees.DbVariableReferenceExpression * System.Data.Common.CommandTrees.DbVariableReferenceExpression -&gt; unit&#xA;override this.OnVariableRebound : System.Data.Common.CommandTrees.DbVariableReferenceExpression * System.Data.Common.CommandTrees.DbVariableReferenceExpression -&gt; unit" Usage="defaultExpressionVisitor.OnVariableRebound (fromVarRef, toVarRef)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromVarRef" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
        <Parameter Name="toVarRef" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="fromVarRef"><span data-ttu-id="e57df-110">變數的位置。</span><span class="sxs-lookup"><span data-stu-id="e57df-110">The location of the variable.</span></span></param>
        <param name="toVarRef"><span data-ttu-id="e57df-111">變數的參考，它會在此重新繫結。</span><span class="sxs-lookup"><span data-stu-id="e57df-111">The reference of the variable where it is rebounded.</span></span></param>
        <summary><span data-ttu-id="e57df-112">表示變數因為運算式訪問項而重新繫結的事件。</span><span class="sxs-lookup"><span data-stu-id="e57df-112">Represents an event when the variable is rebound for the expression visitor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Visit">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e57df-113">實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-113">Implements the visitor pattern.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbAndExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbAndExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbAndExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbAndExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbAndExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbAndExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-114">邏輯 AND 運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-114">The logical AND expression.</span></span></param>
        <summary><span data-ttu-id="e57df-115">實作邏輯 AND 運算式的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-115">Implements the visitor pattern for the logical AND expression.</span></span></summary>
        <returns><span data-ttu-id="e57df-116">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-116">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbApplyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbApplyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbApplyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbApplyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbApplyExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbApplyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-117">APPLY 運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-117">The APPLY expression.</span></span></param>
        <summary><span data-ttu-id="e57df-118">針對指定之輸入集中每個項目的指定函式之引動過程，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-118">Implements the visitor pattern for the invocation of the specified function for each element in the specified input set.</span></span></summary>
        <returns><span data-ttu-id="e57df-119">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-119">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbArithmeticExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbArithmeticExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbArithmeticExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbArithmeticExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbArithmeticExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbArithmeticExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-120">算術運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-120">The arithmetic expression.</span></span></param>
        <summary><span data-ttu-id="e57df-121">針對套用至數值引數的算術運算，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-121">Implements the visitor pattern for the arithmetic operation applied to numeric arguments.</span></span></summary>
        <returns><span data-ttu-id="e57df-122">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-122">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCaseExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbCaseExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbCaseExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbCaseExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbCaseExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCaseExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-123">case 運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-123">The case expression.</span></span></param>
        <summary><span data-ttu-id="e57df-124">實作 When、Then 和 Else 子句的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-124">Implements the visitor pattern for the When, Then, and Else clauses.</span></span></summary>
        <returns><span data-ttu-id="e57df-125">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-125">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCastExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbCastExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbCastExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbCastExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbCastExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCastExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-126">cast 運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-126">The cast expression.</span></span></param>
        <summary><span data-ttu-id="e57df-127">針對將單一引數轉換成指定之型別的型別轉換，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-127">Implements the visitor pattern for the type conversion of a single argument to the specified type.</span></span></summary>
        <returns><span data-ttu-id="e57df-128">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-128">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbComparisonExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbComparisonExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbComparisonExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbComparisonExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbComparisonExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbComparisonExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-129">cast 運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-129">The cast expression.</span></span></param>
        <summary><span data-ttu-id="e57df-130">針對套用至兩個引數的比較作業，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-130">Implements the visitor pattern for the comparison operation applied to two arguments.</span></span></summary>
        <returns><span data-ttu-id="e57df-131">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-131">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbConstantExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbConstantExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbConstantExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbConstantExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbConstantExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbConstantExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-132">常數運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-132">The constant expression.</span></span></param>
        <summary><span data-ttu-id="e57df-133">針對不同種類的常數，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-133">Implements the visitor pattern for the different kinds of constants.</span></span></summary>
        <returns><span data-ttu-id="e57df-134">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-134">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbCrossJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbCrossJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbCrossJoinExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbCrossJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbCrossJoinExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-135">聯結運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-135">The join expression.</span></span></param>
        <summary><span data-ttu-id="e57df-136">針對給定集合引數之間的無條件聯結 (Join) 作業，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-136">Implements the visitor pattern for the unconditional join operation between the given collection arguments.</span></span></summary>
        <returns><span data-ttu-id="e57df-137">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-137">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbDerefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbDerefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbDerefExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbDerefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbDerefExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDerefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-138">DEREF 運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-138">The DEREF expression.</span></span></param>
        <summary><span data-ttu-id="e57df-139">針對根據指定之參考擷取實體的運算式，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-139">Implements the visitor pattern for the expression that retrieves an entity based on the specified reference.</span></span></summary>
        <returns><span data-ttu-id="e57df-140">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-140">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbDistinctExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbDistinctExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbDistinctExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbDistinctExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbDistinctExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDistinctExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-141">distinct 運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-141">The distinct expression.</span></span></param>
        <summary><span data-ttu-id="e57df-142">針對從指定的集合引數中移除的重複項目，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-142">Implements the visitor pattern for the removed duplicate elements from the specified set argument.</span></span></summary>
        <returns><span data-ttu-id="e57df-143">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-143">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbElementExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbElementExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbElementExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbElementExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbElementExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbElementExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-144">項目運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-144">The element expression.</span></span></param>
        <summary><span data-ttu-id="e57df-145">針對將指定的集合引數轉換成單一物件，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-145">Implements the visitor pattern for the conversion of the specified set argument to a singleton the conversion of the specified set argument to a singleton.</span></span></summary>
        <returns><span data-ttu-id="e57df-146">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-146">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbEntityRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbEntityRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbEntityRefExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbEntityRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbEntityRefExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbEntityRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-147">實體參考運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-147">The entity reference expression.</span></span></param>
        <summary><span data-ttu-id="e57df-148">針對從基礎實體執行個體中擷取參考的運算式，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-148">Implements the visitor pattern for the expression that extracts a reference from the underlying entity instance.</span></span></summary>
        <returns><span data-ttu-id="e57df-149">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-149">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbExceptExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbExceptExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbExceptExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbExceptExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbExceptExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExceptExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-150">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-150">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-151">針對左右運算元之間的集合相減作業，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-151">Implements the visitor pattern for the set subtraction operation between the left and right operands.</span></span></summary>
        <returns><span data-ttu-id="e57df-152">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-152">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-153">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-153">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-154">實作運算式型別所需基本功能的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-154">Implements the visitor pattern for the basic functionality required by expression types.</span></span></summary>
        <returns><span data-ttu-id="e57df-155">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-155">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbFilterExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbFilterExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbFilterExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbFilterExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbFilterExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFilterExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-156">篩選條件運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-156">The filter expression.</span></span></param>
        <summary><span data-ttu-id="e57df-157">針對套用來篩選輸入集的述詞，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-157">Implements the visitor pattern for a predicate applied to filter an input set.</span></span></summary>
        <returns><span data-ttu-id="e57df-158">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-158">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbFunctionExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbFunctionExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbFunctionExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbFunctionExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbFunctionExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-159">函式運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-159">The function expression.</span></span></param>
        <summary><span data-ttu-id="e57df-160">針對函式的引動過程，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-160">Implements the visitor pattern for an invocation of a function.</span></span></summary>
        <returns><span data-ttu-id="e57df-161">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-161">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbGroupByExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbGroupByExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbGroupByExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbGroupByExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbGroupByExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbGroupByExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-162">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-162">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-163">依作業實作群組的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-163">Implements the visitor pattern for a group by operation.</span></span></summary>
        <returns><span data-ttu-id="e57df-164">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-164">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIntersectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIntersectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIntersectExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIntersectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbIntersectExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIntersectExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-165">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-165">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-166">針對左右運算元之間的交集作業，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-166">Implements the visitor pattern for the set intersection operation between the left and right operands.</span></span></summary>
        <returns><span data-ttu-id="e57df-167">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-167">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsEmptyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIsEmptyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIsEmptyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIsEmptyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbIsEmptyExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-168">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-168">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-169">針對套用至單一集引數的空集合判斷，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-169">Implements the visitor pattern for an empty set determination applied to a single set argument.</span></span></summary>
        <returns><span data-ttu-id="e57df-170">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-170">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIsNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIsNullExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIsNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbIsNullExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-171">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-171">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-172">針對套用至單一引數的 null 判斷，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-172">Implements the visitor pattern for the null determination applied to a single argument.</span></span></summary>
        <returns><span data-ttu-id="e57df-173">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-173">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbIsOfExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbIsOfExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbIsOfExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbIsOfExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbIsOfExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsOfExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-174">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-174">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-175">針對指定之型別進行單一引數的型別比較，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-175">Implements the visitor pattern for the type comparison of a single argument against the specified type.</span></span></summary>
        <returns><span data-ttu-id="e57df-176">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-176">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbJoinExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbJoinExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-177">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-177">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-178">實作在指定的聯結條件 (Join Condition) 下，指定之集合引數間的內部聯結 (Inner Join)、左外部聯結 (Left Outer Join) 或完整外部聯結 (Full Outer Join) 作業的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-178">Implements the visitor pattern for an inner, left outer, or full outer join operation between the given collection arguments on the specified join condition.</span></span></summary>
        <returns><span data-ttu-id="e57df-179">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-179">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbLambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbLambdaExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbLambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbLambdaExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-180">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-180">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-181">針對將 Lambda 函式套用至以 DbExpression 物件表示的引數，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-181">Implements the visitor pattern for the application of a lambda function to arguments represented by DbExpression objects.</span></span></summary>
        <returns><span data-ttu-id="e57df-182">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-182">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLikeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbLikeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbLikeExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbLikeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbLikeExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLikeExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-183">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-183">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-184">實作針對指定的模式與選擇性逸出字串進行字串比較的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-184">Implements the visitor pattern for a string comparison against the specified pattern with an optional escape string.</span></span></summary>
        <returns><span data-ttu-id="e57df-185">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-185">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbLimitExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbLimitExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbLimitExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbLimitExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbLimitExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLimitExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-186">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-186">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-187">實作將引數集合中的項目數目限制為指定限制值的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-187">Implements the visitor pattern for the restriction of the number of elements in the argument collection to the specified limit value.</span></span></summary>
        <returns><span data-ttu-id="e57df-188">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-188">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNewInstanceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbNewInstanceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbNewInstanceExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbNewInstanceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbNewInstanceExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-189">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-189">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-190">實作建構指定型別 (包括集合和記錄類型) 之新執行個體的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-190">Implements the visitor pattern for the construction of a new instance of a given type, including set and record types.</span></span></summary>
        <returns><span data-ttu-id="e57df-191">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-191">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNotExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbNotExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbNotExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbNotExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbNotExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNotExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-192">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-192">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-193">針對單一布林引數的邏輯 NOT，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-193">Implements the visitor pattern for the logical NOT of a single Boolean argument.</span></span></summary>
        <returns><span data-ttu-id="e57df-194">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-194">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbNullExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbNullExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-195">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-195">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-196">針對具型別 null 常值的參考，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-196">Implements the visitor pattern for a reference to a typed null literal.</span></span></summary>
        <returns><span data-ttu-id="e57df-197">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-197">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbOfTypeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbOfTypeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbOfTypeExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbOfTypeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbOfTypeExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOfTypeExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-198">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-198">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-199">實作從指定集引數擷取指定之型別項目的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-199">Implements the visitor pattern for the retrieval of elements of the specified type from the given set argument.</span></span></summary>
        <returns><span data-ttu-id="e57df-200">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-200">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbOrExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbOrExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbOrExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbOrExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbOrExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOrExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-201">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-201">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-202">針對兩個布林引數的邏輯 OR，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-202">Implements the visitor pattern for the logical OR of two Boolean arguments.</span></span></summary>
        <returns><span data-ttu-id="e57df-203">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-203">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbParameterReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbParameterReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbParameterReferenceExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbParameterReferenceExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-204">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-204">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-205">實作在包含這個運算式之命令樹上所宣告參數之參考的造訪者模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-205">Implements the visitor pattern for a reference to a parameter declared on the command tree that contains this expression.</span></span></summary>
        <returns><span data-ttu-id="e57df-206">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-206">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbProjectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbProjectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbProjectExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbProjectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbProjectExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbProjectExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-207">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-207">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-208">針對在指定的運算式上指定之輸入集的投影，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-208">Implements the visitor pattern for the projection of a given input set over the specified expression.</span></span></summary>
        <returns><span data-ttu-id="e57df-209">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-209">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbPropertyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbPropertyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbPropertyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbPropertyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbPropertyExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbPropertyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-210">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-210">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-211">實作用來擷取執行個體屬性的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-211">Implements the visitor pattern for retrieving an instance property.</span></span></summary>
        <returns><span data-ttu-id="e57df-212">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-212">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbQuantifierExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbQuantifierExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbQuantifierExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbQuantifierExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbQuantifierExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbQuantifierExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-213">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-213">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-214">實作在所指定輸入集的項目上所指定類型之數量詞作業的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-214">Implements the visitor pattern for a quantifier operation of the specified kind over the elements of the specified input set.</span></span></summary>
        <returns><span data-ttu-id="e57df-215">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-215">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbRefExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbRefExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-216">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-216">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-217">針對實體集內特定執行個體的強型別參考，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-217">Implements the visitor pattern for a strongly typed reference to a specific instance within an entity set.</span></span></summary>
        <returns><span data-ttu-id="e57df-218">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-218">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRefKeyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbRefKeyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbRefKeyExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbRefKeyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbRefKeyExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefKeyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-219">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-219">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-220">針對從基礎參考值擷取索引鍵值，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-220">Implements the visitor pattern for the retrieval of the key value from the underlying reference value.</span></span></summary>
        <returns><span data-ttu-id="e57df-221">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-221">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbRelationshipNavigationExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbRelationshipNavigationExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-222">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-222">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-223">針對關聯性的巡覽，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-223">Implements the visitor pattern for the navigation of a relationship.</span></span></summary>
        <returns><span data-ttu-id="e57df-224">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-224">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbScanExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbScanExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbScanExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbScanExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbScanExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbScanExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-225">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-225">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-226">針對掃描實體集或關聯性集合 (如 Target 屬性所表示)，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-226">Implements the visitor pattern for a scan over an entity set or relationship set, as indicated by the Target property.</span></span></summary>
        <returns><span data-ttu-id="e57df-227">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-227">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbSkipExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbSkipExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbSkipExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbSkipExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbSkipExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSkipExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-228">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-228">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-229">實作略過運算式的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-229">Implements the visitor pattern for the skip expression.</span></span></summary>
        <returns><span data-ttu-id="e57df-230">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-230">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbSortExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbSortExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbSortExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbSortExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbSortExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSortExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-231">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-231">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-232">針對可做為排序次序一部分的排序鍵，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-232">Implements the visitor pattern for a sort key that can be used as part of the sort order.</span></span></summary>
        <returns><span data-ttu-id="e57df-233">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-233">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbTreatExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbTreatExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbTreatExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbTreatExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbTreatExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbTreatExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-234">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-234">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-235">針對套用至多型引數的型別轉換作業，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-235">Implements the visitor pattern for a type conversion operation applied to a polymorphic argument.</span></span></summary>
        <returns><span data-ttu-id="e57df-236">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-236">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbUnionAllExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbUnionAllExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbUnionAllExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbUnionAllExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbUnionAllExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbUnionAllExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-237">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-237">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-238">針對左右運算元之間的集合聯集作業，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-238">Implements the visitor pattern for the set union operation between the left and right operands.</span></span></summary>
        <returns><span data-ttu-id="e57df-239">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-239">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override System.Data.Common.CommandTrees.DbExpression Visit (System.Data.Common.CommandTrees.DbVariableReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.Common.CommandTrees.DbExpression Visit(class System.Data.Common.CommandTrees.DbVariableReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Visit (expression As DbVariableReferenceExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::Common::CommandTrees::DbExpression ^ Visit(System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="override this.Visit : System.Data.Common.CommandTrees.DbVariableReferenceExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-240">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-240">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-241">針對目前範圍中變數的參考，實作訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-241">Implements the visitor pattern for a reference to a variable that is currently in scope.</span></span></summary>
        <returns><span data-ttu-id="e57df-242">已實作的訪問項。</span><span class="sxs-lookup"><span data-stu-id="e57df-242">The implemented visitor.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAggregate">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbAggregate VisitAggregate (System.Data.Common.CommandTrees.DbAggregate aggregate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbAggregate VisitAggregate(class System.Data.Common.CommandTrees.DbAggregate aggregate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitAggregate (aggregate As DbAggregate) As DbAggregate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbAggregate ^ VisitAggregate(System::Data::Common::CommandTrees::DbAggregate ^ aggregate);" />
      <MemberSignature Language="F#" Value="abstract member VisitAggregate : System.Data.Common.CommandTrees.DbAggregate -&gt; System.Data.Common.CommandTrees.DbAggregate&#xA;override this.VisitAggregate : System.Data.Common.CommandTrees.DbAggregate -&gt; System.Data.Common.CommandTrees.DbAggregate" Usage="defaultExpressionVisitor.VisitAggregate aggregate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregate" Type="System.Data.Common.CommandTrees.DbAggregate" />
      </Parameters>
      <Docs>
        <param name="aggregate"><span data-ttu-id="e57df-243">彙總。</span><span class="sxs-lookup"><span data-stu-id="e57df-243">The aggregate.</span></span></param>
        <summary><span data-ttu-id="e57df-244">實作彙總的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-244">Implements the visitor pattern for the aggregate.</span></span></summary>
        <returns><span data-ttu-id="e57df-245">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-245">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEntitySet">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.EntitySetBase VisitEntitySet (System.Data.Metadata.Edm.EntitySetBase entitySet);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.EntitySetBase VisitEntitySet(class System.Data.Metadata.Edm.EntitySetBase entitySet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitEntitySet (entitySet As EntitySetBase) As EntitySetBase" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::EntitySetBase ^ VisitEntitySet(System::Data::Metadata::Edm::EntitySetBase ^ entitySet);" />
      <MemberSignature Language="F#" Value="abstract member VisitEntitySet : System.Data.Metadata.Edm.EntitySetBase -&gt; System.Data.Metadata.Edm.EntitySetBase&#xA;override this.VisitEntitySet : System.Data.Metadata.Edm.EntitySetBase -&gt; System.Data.Metadata.Edm.EntitySetBase" Usage="defaultExpressionVisitor.VisitEntitySet entitySet" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EntitySetBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entitySet" Type="System.Data.Metadata.Edm.EntitySetBase" />
      </Parameters>
      <Docs>
        <param name="entitySet"><span data-ttu-id="e57df-246">實體集。</span><span class="sxs-lookup"><span data-stu-id="e57df-246">The entity set.</span></span></param>
        <summary><span data-ttu-id="e57df-247">實作實體集的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-247">Implements the visitor pattern for the entity set.</span></span></summary>
        <returns><span data-ttu-id="e57df-248">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-248">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpression">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbExpression VisitExpression (System.Data.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbExpression VisitExpression(class System.Data.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpression (expression As DbExpression) As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbExpression ^ VisitExpression(System::Data::Common::CommandTrees::DbExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member VisitExpression : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression&#xA;override this.VisitExpression : System.Data.Common.CommandTrees.DbExpression -&gt; System.Data.Common.CommandTrees.DbExpression" Usage="defaultExpressionVisitor.VisitExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="e57df-249">運算式。</span><span class="sxs-lookup"><span data-stu-id="e57df-249">The expression.</span></span></param>
        <summary><span data-ttu-id="e57df-250">實作運算式的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-250">Implements the visitor pattern for the expression.</span></span></summary>
        <returns><span data-ttu-id="e57df-251">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-251">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionBinding">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbExpressionBinding VisitExpressionBinding (System.Data.Common.CommandTrees.DbExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbExpressionBinding VisitExpressionBinding(class System.Data.Common.CommandTrees.DbExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpressionBinding (binding As DbExpressionBinding) As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbExpressionBinding ^ VisitExpressionBinding(System::Data::Common::CommandTrees::DbExpressionBinding ^ binding);" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionBinding : System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbExpressionBinding&#xA;override this.VisitExpressionBinding : System.Data.Common.CommandTrees.DbExpressionBinding -&gt; System.Data.Common.CommandTrees.DbExpressionBinding" Usage="defaultExpressionVisitor.VisitExpressionBinding binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Common.CommandTrees.DbExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="e57df-252">運算式繫結。</span><span class="sxs-lookup"><span data-stu-id="e57df-252">The expression binding.</span></span></param>
        <summary><span data-ttu-id="e57df-253">實作運算式繫結的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-253">Implements the visitor pattern for expression binding.</span></span></summary>
        <returns><span data-ttu-id="e57df-254">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-254">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionBindingList">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; VisitExpressionBindingList (System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; VisitExpressionBindingList(class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpressionBinding&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpressionBindingList (list As IList(Of DbExpressionBinding)) As IList(Of DbExpressionBinding)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ VisitExpressionBindingList(System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpressionBinding ^&gt; ^ list);" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionBindingList : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;&#xA;override this.VisitExpressionBindingList : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" Usage="defaultExpressionVisitor.VisitExpressionBindingList list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpressionBinding&gt;" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="e57df-255">運算式繫結清單。</span><span class="sxs-lookup"><span data-stu-id="e57df-255">The expression binding list.</span></span></param>
        <summary><span data-ttu-id="e57df-256">實作運算式繫結清單的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-256">Implements the visitor pattern for the expression binding list.</span></span></summary>
        <returns><span data-ttu-id="e57df-257">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-257">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionList">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; VisitExpressionList (System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; list);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; VisitExpressionList(class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitExpressionList (list As IList(Of DbExpression)) As IList(Of DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ VisitExpressionList(System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ list);" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionList : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;&#xA;override this.VisitExpressionList : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Usage="defaultExpressionVisitor.VisitExpressionList list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="e57df-258">運算式清單。</span><span class="sxs-lookup"><span data-stu-id="e57df-258">The expression list.</span></span></param>
        <summary><span data-ttu-id="e57df-259">實作運算式清單的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-259">Implements the visitor pattern for the expression list.</span></span></summary>
        <returns><span data-ttu-id="e57df-260">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-260">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFunction">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.EdmFunction VisitFunction (System.Data.Metadata.Edm.EdmFunction functionMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.EdmFunction VisitFunction(class System.Data.Metadata.Edm.EdmFunction functionMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitFunction (functionMetadata As EdmFunction) As EdmFunction" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::EdmFunction ^ VisitFunction(System::Data::Metadata::Edm::EdmFunction ^ functionMetadata);" />
      <MemberSignature Language="F#" Value="abstract member VisitFunction : System.Data.Metadata.Edm.EdmFunction -&gt; System.Data.Metadata.Edm.EdmFunction&#xA;override this.VisitFunction : System.Data.Metadata.Edm.EdmFunction -&gt; System.Data.Metadata.Edm.EdmFunction" Usage="defaultExpressionVisitor.VisitFunction functionMetadata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmFunction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="functionMetadata" Type="System.Data.Metadata.Edm.EdmFunction" />
      </Parameters>
      <Docs>
        <param name="functionMetadata"><span data-ttu-id="e57df-261">函式中繼資料。</span><span class="sxs-lookup"><span data-stu-id="e57df-261">The function metadata.</span></span></param>
        <summary><span data-ttu-id="e57df-262">實作函式的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-262">Implements the visitor pattern for the function.</span></span></summary>
        <returns><span data-ttu-id="e57df-263">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-263">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFunctionAggregate">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbFunctionAggregate VisitFunctionAggregate (System.Data.Common.CommandTrees.DbFunctionAggregate aggregate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbFunctionAggregate VisitFunctionAggregate(class System.Data.Common.CommandTrees.DbFunctionAggregate aggregate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitFunctionAggregate (aggregate As DbFunctionAggregate) As DbFunctionAggregate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbFunctionAggregate ^ VisitFunctionAggregate(System::Data::Common::CommandTrees::DbFunctionAggregate ^ aggregate);" />
      <MemberSignature Language="F#" Value="abstract member VisitFunctionAggregate : System.Data.Common.CommandTrees.DbFunctionAggregate -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate&#xA;override this.VisitFunctionAggregate : System.Data.Common.CommandTrees.DbFunctionAggregate -&gt; System.Data.Common.CommandTrees.DbFunctionAggregate" Usage="defaultExpressionVisitor.VisitFunctionAggregate aggregate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbFunctionAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregate" Type="System.Data.Common.CommandTrees.DbFunctionAggregate" />
      </Parameters>
      <Docs>
        <param name="aggregate"><span data-ttu-id="e57df-264">彙總。</span><span class="sxs-lookup"><span data-stu-id="e57df-264">The aggregate.</span></span></param>
        <summary><span data-ttu-id="e57df-265">實作函式彙總的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-265">Implements the visitor pattern for the function aggregate.</span></span></summary>
        <returns><span data-ttu-id="e57df-266">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-266">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitGroupAggregate">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbGroupAggregate VisitGroupAggregate (System.Data.Common.CommandTrees.DbGroupAggregate aggregate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbGroupAggregate VisitGroupAggregate(class System.Data.Common.CommandTrees.DbGroupAggregate aggregate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupAggregate(System.Data.Common.CommandTrees.DbGroupAggregate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitGroupAggregate (aggregate As DbGroupAggregate) As DbGroupAggregate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbGroupAggregate ^ VisitGroupAggregate(System::Data::Common::CommandTrees::DbGroupAggregate ^ aggregate);" />
      <MemberSignature Language="F#" Value="abstract member VisitGroupAggregate : System.Data.Common.CommandTrees.DbGroupAggregate -&gt; System.Data.Common.CommandTrees.DbGroupAggregate&#xA;override this.VisitGroupAggregate : System.Data.Common.CommandTrees.DbGroupAggregate -&gt; System.Data.Common.CommandTrees.DbGroupAggregate" Usage="defaultExpressionVisitor.VisitGroupAggregate aggregate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupAggregate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregate" Type="System.Data.Common.CommandTrees.DbGroupAggregate" />
      </Parameters>
      <Docs>
        <param name="aggregate"><span data-ttu-id="e57df-267">彙總。</span><span class="sxs-lookup"><span data-stu-id="e57df-267">The aggregate.</span></span></param>
        <summary><span data-ttu-id="e57df-268">實作群組彙總的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-268">Implements the visitor pattern for the group aggregate.</span></span></summary>
        <returns><span data-ttu-id="e57df-269">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-269">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitGroupExpressionBinding">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbGroupExpressionBinding VisitGroupExpressionBinding (System.Data.Common.CommandTrees.DbGroupExpressionBinding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbGroupExpressionBinding VisitGroupExpressionBinding(class System.Data.Common.CommandTrees.DbGroupExpressionBinding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitGroupExpressionBinding (binding As DbGroupExpressionBinding) As DbGroupExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ VisitGroupExpressionBinding(System::Data::Common::CommandTrees::DbGroupExpressionBinding ^ binding);" />
      <MemberSignature Language="F#" Value="abstract member VisitGroupExpressionBinding : System.Data.Common.CommandTrees.DbGroupExpressionBinding -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding&#xA;override this.VisitGroupExpressionBinding : System.Data.Common.CommandTrees.DbGroupExpressionBinding -&gt; System.Data.Common.CommandTrees.DbGroupExpressionBinding" Usage="defaultExpressionVisitor.VisitGroupExpressionBinding binding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbGroupExpressionBinding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Data.Common.CommandTrees.DbGroupExpressionBinding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="e57df-270">繫結。</span><span class="sxs-lookup"><span data-stu-id="e57df-270">The binding.</span></span></param>
        <summary><span data-ttu-id="e57df-271">實作群組運算式繫結的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-271">Implements the visitor pattern for the group expression binding.</span></span></summary>
        <returns><span data-ttu-id="e57df-272">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-272">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLambda">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbLambda VisitLambda (System.Data.Common.CommandTrees.DbLambda lambda);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbLambda VisitLambda(class System.Data.Common.CommandTrees.DbLambda lambda) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitLambda (lambda As DbLambda) As DbLambda" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbLambda ^ VisitLambda(System::Data::Common::CommandTrees::DbLambda ^ lambda);" />
      <MemberSignature Language="F#" Value="abstract member VisitLambda : System.Data.Common.CommandTrees.DbLambda -&gt; System.Data.Common.CommandTrees.DbLambda&#xA;override this.VisitLambda : System.Data.Common.CommandTrees.DbLambda -&gt; System.Data.Common.CommandTrees.DbLambda" Usage="defaultExpressionVisitor.VisitLambda lambda" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbLambda</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lambda" Type="System.Data.Common.CommandTrees.DbLambda" />
      </Parameters>
      <Docs>
        <param name="lambda"><span data-ttu-id="e57df-273">lambda 函式。</span><span class="sxs-lookup"><span data-stu-id="e57df-273">The lambda function.</span></span></param>
        <summary><span data-ttu-id="e57df-274">實作 Lambda 函式的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-274">Implements the visitor pattern for the Lambda function.</span></span></summary>
        <returns><span data-ttu-id="e57df-275">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-275">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSortClause">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.CommandTrees.DbSortClause VisitSortClause (System.Data.Common.CommandTrees.DbSortClause clause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.CommandTrees.DbSortClause VisitSortClause(class System.Data.Common.CommandTrees.DbSortClause clause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSortClause (clause As DbSortClause) As DbSortClause" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::CommandTrees::DbSortClause ^ VisitSortClause(System::Data::Common::CommandTrees::DbSortClause ^ clause);" />
      <MemberSignature Language="F#" Value="abstract member VisitSortClause : System.Data.Common.CommandTrees.DbSortClause -&gt; System.Data.Common.CommandTrees.DbSortClause&#xA;override this.VisitSortClause : System.Data.Common.CommandTrees.DbSortClause -&gt; System.Data.Common.CommandTrees.DbSortClause" Usage="defaultExpressionVisitor.VisitSortClause clause" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbSortClause</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clause" Type="System.Data.Common.CommandTrees.DbSortClause" />
      </Parameters>
      <Docs>
        <param name="clause"><span data-ttu-id="e57df-276">排序子句。</span><span class="sxs-lookup"><span data-stu-id="e57df-276">The sort clause.</span></span></param>
        <summary><span data-ttu-id="e57df-277">實作排序子句的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-277">Implements the visitor pattern for the sort clause.</span></span></summary>
        <returns><span data-ttu-id="e57df-278">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-278">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSortOrder">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; VisitSortOrder (System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; VisitSortOrder(class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbSortClause&gt; sortOrder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitSortOrder (sortOrder As IList(Of DbSortClause)) As IList(Of DbSortClause)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ VisitSortOrder(System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbSortClause ^&gt; ^ sortOrder);" />
      <MemberSignature Language="F#" Value="abstract member VisitSortOrder : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;&#xA;override this.VisitSortOrder : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt; -&gt; System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" Usage="defaultExpressionVisitor.VisitSortOrder sortOrder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortOrder" Type="System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbSortClause&gt;" />
      </Parameters>
      <Docs>
        <param name="sortOrder"><span data-ttu-id="e57df-279">排序次序。</span><span class="sxs-lookup"><span data-stu-id="e57df-279">The sort order.</span></span></param>
        <summary><span data-ttu-id="e57df-280">實作排序次序的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-280">Implements the visitor pattern for the sort order.</span></span></summary>
        <returns><span data-ttu-id="e57df-281">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-281">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitType">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.EdmType VisitType (System.Data.Metadata.Edm.EdmType type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.EdmType VisitType(class System.Data.Metadata.Edm.EdmType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitType (type As EdmType) As EdmType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::EdmType ^ VisitType(System::Data::Metadata::Edm::EdmType ^ type);" />
      <MemberSignature Language="F#" Value="abstract member VisitType : System.Data.Metadata.Edm.EdmType -&gt; System.Data.Metadata.Edm.EdmType&#xA;override this.VisitType : System.Data.Metadata.Edm.EdmType -&gt; System.Data.Metadata.Edm.EdmType" Usage="defaultExpressionVisitor.VisitType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.EdmType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.EdmType" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e57df-282">類型。</span><span class="sxs-lookup"><span data-stu-id="e57df-282">The type.</span></span></param>
        <summary><span data-ttu-id="e57df-283">實作型別的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-283">Implements the visitor pattern for the type.</span></span></summary>
        <returns><span data-ttu-id="e57df-284">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-284">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeUsage">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Metadata.Edm.TypeUsage VisitTypeUsage (System.Data.Metadata.Edm.TypeUsage type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Metadata.Edm.TypeUsage VisitTypeUsage(class System.Data.Metadata.Edm.TypeUsage type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function VisitTypeUsage (type As TypeUsage) As TypeUsage" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Metadata::Edm::TypeUsage ^ VisitTypeUsage(System::Data::Metadata::Edm::TypeUsage ^ type);" />
      <MemberSignature Language="F#" Value="abstract member VisitTypeUsage : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Metadata.Edm.TypeUsage&#xA;override this.VisitTypeUsage : System.Data.Metadata.Edm.TypeUsage -&gt; System.Data.Metadata.Edm.TypeUsage" Usage="defaultExpressionVisitor.VisitTypeUsage type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.TypeUsage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Data.Metadata.Edm.TypeUsage" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="e57df-285">類型。</span><span class="sxs-lookup"><span data-stu-id="e57df-285">The type.</span></span></param>
        <summary><span data-ttu-id="e57df-286">實作類型使用狀況的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-286">Implements the visitor pattern for the type usage.</span></span></summary>
        <returns><span data-ttu-id="e57df-287">已實作的訪問項模式。</span><span class="sxs-lookup"><span data-stu-id="e57df-287">The implemented visitor pattern.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>