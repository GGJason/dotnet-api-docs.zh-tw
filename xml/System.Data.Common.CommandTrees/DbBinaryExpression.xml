<Type Name="DbBinaryExpression" FullName="System.Data.Common.CommandTrees.DbBinaryExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e69676de308cc3dc0b1c7048f28343cc68a73f7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30377822" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DbBinaryExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbBinaryExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbBinaryExpression" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbBinaryExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbBinaryExpression abstract : System::Data::Common::CommandTrees::DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>實作接受兩個運算式運算元之運算式所需的基本功能。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Left" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbBinaryExpression.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Left { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定定義左引數的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</summary>
        <value>定義左引數的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有設定 <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> 屬性時，衍生的運算式型別可能會執行更嚴格的型別檢查。 例如，<xref:System.Data.Common.CommandTrees.DbUnionAllExpression> 會要求其左運算式具有集合結果型別，而 <xref:System.Data.Common.CommandTrees.DbAndExpression> 會要求 Boolean 結果型別。 一般而言，衍生的運算式型別不允許 <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A> 設定為結果型別不等於或可提升為目前值之結果型別的運算式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">此運算式為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">運算式未與 <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" /> 的命令樹相關聯，  
  
 或其結果型別不等於或可提升為左引數所需的型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Right" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbBinaryExpression.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Right { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定定義右引數的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</summary>
        <value>定義右引數的 <see cref="T:System.Data.Common.CommandTrees.DbExpression" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有設定 <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> 屬性時，衍生的運算式型別可能會執行更嚴格的型別檢查。 例如，<xref:System.Data.Common.CommandTrees.DbUnionAllExpression> 會要求其右運算式具有集合結果型別，而 <xref:System.Data.Common.CommandTrees.DbAndExpression> 會要求 Boolean 結果型別。 一般而言，衍生的運算式型別不允許 <xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A> 設定為結果型別不等於或可提升為目前值之結果型別的運算式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">此運算式為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">運算式未與 <see cref="T:System.Data.Common.CommandTrees.DbBinaryExpression" /> 的命令樹相關聯，  
  
 或其結果型別不等於或可提升為右引數所需的型別。</exception>
      </Docs>
    </Member>
  </Members>
</Type>