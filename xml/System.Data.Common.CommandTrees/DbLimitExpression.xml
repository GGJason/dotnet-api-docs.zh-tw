<Type Name="DbLimitExpression" FullName="System.Data.Common.CommandTrees.DbLimitExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1090fc98ac990e1aed63777534bc9488f88d0e24" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37684206" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbLimitExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbLimitExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbLimitExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbLimitExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbLimitExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbLimitExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示將引數集合中的項目數限制為指定的限制值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.CommandTrees.DbLimitExpression> 可以套用到任何具有集合結果型別的 <xref:System.Data.Common.CommandTrees.DbExpression>，包括 <xref:System.Data.Common.CommandTrees.DbSkipExpression>。 <xref:System.Data.Common.CommandTrees.DbLimitExpression> 提供了與 Top 作業相等的作業。 不需要先在此實體的輸入上執行排序作業。 它有兩個`Expression`屬性，<xref:System.Data.Common.CommandTrees.DbLimitExpression.Argument%2A>和<xref:System.Data.Common.CommandTrees.DbLimitExpression.Limit%2A>，指定集合，並會分別傳回的資料列數目。 <xref:System.Data.Common.CommandTrees.DbLimitExpression> 也有`Boolean`<xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A>屬性來控制是否相同的資料列到最後一個資料列的次序傳回。 <xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> 預設為`false`。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbLimitExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> 的執行個體。</param>
        <summary>針對不會產生結果值的運算式而實作訪客模式。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbLimitExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbLimitExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">所產生之結果的型別<c>訪客</c>。</typeparam>
        <param name="visitor">型別 <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> 的執行個體，這個執行個體會產生特定型別的結果值。</param>
        <summary>針對產生特定型別之結果值的運算式而實作訪客模式。</summary>
        <returns>特定型別的結果值，由 <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> 所產生。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="visitor" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Argument">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Argument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Argument" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLimitExpression.Argument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Argument As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Argument { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Argument : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbLimitExpression.Argument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定指定輸入集合的運算式。</summary>
        <value>指定輸入集合的運算式。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">此運算式為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">運算式不與 <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> 的命令樹相關聯，或其結果型別並非集合型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="Limit">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Limit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Limit" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Limit As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Limit { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Limit : System.Data.Common.CommandTrees.DbExpression" Usage="System.Data.Common.CommandTrees.DbLimitExpression.Limit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定運算式，這個運算式指定從輸入集合所傳回項目數的限制。</summary>
        <value>運算式，指定從輸入集合所傳回項目數的限制。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">此運算式為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">運算式不與 <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> 的命令樹相關聯、並非 <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> 或 <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> 之一，或其結果型別不等於或可提升為 64 位元整數型別。</exception>
      </Docs>
    </Member>
    <Member MemberName="WithTies">
      <MemberSignature Language="C#" Value="public bool WithTies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WithTies" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbLimitExpression.WithTies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WithTies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WithTies { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.WithTies : bool" Usage="System.Data.Common.CommandTrees.DbLimitExpression.WithTies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得限制作業是否包含相等的結果。 包含相等結果所產生的結果數可能會比 <see cref="P:System.Data.Common.CommandTrees.DbLimitExpression.Limit" /> 值所指定的多。</summary>
        <value>如果限制運算將包括繫結結果則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.CommandTrees.DbLimitExpression.WithTies%2A> 屬性可控制是否傳回順位與最終資料列相同的資料列。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>