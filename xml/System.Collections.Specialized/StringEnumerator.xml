<Type Name="StringEnumerator" FullName="System.Collections.Specialized.StringEnumerator">
  <TypeSignature Language="C#" Value="public class StringEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StringEnumerator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Specialized.StringEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Class StringEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringEnumerator" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Specialized</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="44b4e-101">支援簡單反覆處理 <see cref="T:System.Collections.Specialized.StringCollection" />。</span><span class="sxs-lookup"><span data-stu-id="44b4e-101">Supports a simple iteration over a <see cref="T:System.Collections.Specialized.StringCollection" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b4e-102">C# 語言的 `foreach` 陳述式 (在 Visual Basic 中為 `for each`) 會隱藏列舉值的複雜度。</span><span class="sxs-lookup"><span data-stu-id="44b4e-102">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="44b4e-103">因此，建議您使用 `foreach`，而不要直接使用列舉值。</span><span class="sxs-lookup"><span data-stu-id="44b4e-103">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="44b4e-104">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</span><span class="sxs-lookup"><span data-stu-id="44b4e-104">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="44b4e-105">一開始，列舉程式位在集合中的第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="44b4e-105">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="44b4e-106"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> 也會將列舉值帶回至這個位置。</span><span class="sxs-lookup"><span data-stu-id="44b4e-106"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="44b4e-107">在這個位置上，呼叫<xref:System.Collections.Specialized.StringEnumerator.Current%2A>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="44b4e-107">At this position, calling <xref:System.Collections.Specialized.StringEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="44b4e-108">因此，在讀取 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 的值之前，必須呼叫 <xref:System.Collections.Specialized.StringEnumerator.Current%2A> 以將列舉值前移至集合的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="44b4e-108">Therefore, you must call <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="44b4e-109"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> 會傳回相同的物件直到呼叫 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 或 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>。</span><span class="sxs-lookup"><span data-stu-id="44b4e-109"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="44b4e-110"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> 會將 <xref:System.Collections.Specialized.StringEnumerator.Current%2A> 設定為下一個項目。</span><span class="sxs-lookup"><span data-stu-id="44b4e-110"><xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> sets <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="44b4e-111">如果<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="44b4e-111">If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="44b4e-112">列舉值位於這個位置上，後續呼叫<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>也會傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="44b4e-112">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="44b4e-113">如果最後一個呼叫<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>傳回`false`，則呼叫<xref:System.Collections.Specialized.StringEnumerator.Current%2A>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="44b4e-113">If the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.Specialized.StringEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="44b4e-114">若要再次將 <xref:System.Collections.Specialized.StringEnumerator.Current%2A> 設定為集合的第一個元素，您可以在呼叫 <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> 之後，接著呼叫 <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>。</span><span class="sxs-lookup"><span data-stu-id="44b4e-114">To set <xref:System.Collections.Specialized.StringEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> followed by <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="44b4e-115">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="44b4e-115">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="44b4e-116">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>或<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="44b4e-116">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="44b4e-117">如果之間修改集合<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>和<xref:System.Collections.Specialized.StringEnumerator.Current%2A>，<xref:System.Collections.Specialized.StringEnumerator.Current%2A>傳回項目所設定，即使列舉值已經無效。</span><span class="sxs-lookup"><span data-stu-id="44b4e-117">If the collection is modified between <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> and <xref:System.Collections.Specialized.StringEnumerator.Current%2A>, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="44b4e-118">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="44b4e-118">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="44b4e-119">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="44b4e-119">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="44b4e-120">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="44b4e-120">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44b4e-121">下列程式碼範例示範幾個屬性和方法<xref:System.Collections.Specialized.StringEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="44b4e-121">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="44b4e-122">公用靜態 (<see langword="Shared" />在 Visual Basic 中) 這種類型的成員都具備執行緒安全。</span><span class="sxs-lookup"><span data-stu-id="44b4e-122">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="44b4e-123">不保證任何執行個體成員是安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="44b4e-123">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="44b4e-124">透過集合進行列舉在本質上並非安全執行緒程序。</span><span class="sxs-lookup"><span data-stu-id="44b4e-124">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="44b4e-125">即使集合經過同步化，其他的執行緒仍可修改該集合，使列舉值擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="44b4e-125">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="44b4e-126">若要保證列舉過程的執行緒安全，您可以在整個列舉過程中鎖定集合，或攔截由其他執行緒的變更所造成的例外狀況。</span><span class="sxs-lookup"><span data-stu-id="44b4e-126">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Collections.IEnumerator" />
    <altmember cref="T:System.Collections.Specialized.StringCollection" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public string Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Current" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Specialized.StringEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Current { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="44b4e-127">取得集合中目前的項目。</span><span class="sxs-lookup"><span data-stu-id="44b4e-127">Gets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="44b4e-128">集合中目前的項目。</span><span class="sxs-lookup"><span data-stu-id="44b4e-128">The current element in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b4e-129">建立列舉值之後或在之後<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>呼叫時，<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>前移至集合，才能讀取值的第一個元素必須呼叫<xref:System.Collections.Specialized.StringEnumerator.Current%2A>，否則<xref:System.Collections.Specialized.StringEnumerator.Current%2A>是未定義。</span><span class="sxs-lookup"><span data-stu-id="44b4e-129">After an enumerator is created or after a <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called, <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>; otherwise, <xref:System.Collections.Specialized.StringEnumerator.Current%2A> is undefined.</span></span>  
  
 <span data-ttu-id="44b4e-130"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> 也會發生例外狀況，如果最後一個呼叫<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>傳回`false`，表示集合的結尾。</span><span class="sxs-lookup"><span data-stu-id="44b4e-130"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> also throws an exception if the last call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returned `false`, which indicates the end of the collection.</span></span>  
  
 <span data-ttu-id="44b4e-131"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> 不會移動的列舉程式及連續呼叫位置<xref:System.Collections.Specialized.StringEnumerator.Current%2A>傳回相同的物件直到<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>或<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="44b4e-131"><xref:System.Collections.Specialized.StringEnumerator.Current%2A> does not move the position of the enumerator, and consecutive calls to <xref:System.Collections.Specialized.StringEnumerator.Current%2A> return the same object until either <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> or <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="44b4e-132">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="44b4e-132">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="44b4e-133">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="44b4e-133">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="44b4e-134">如果之間修改集合<xref:System.Collections.IEnumerator.MoveNext%2A>和<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>傳回項目所設定，即使列舉值已經無效。</span><span class="sxs-lookup"><span data-stu-id="44b4e-134">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44b4e-135">下列程式碼範例示範幾個屬性和方法<xref:System.Collections.Specialized.StringEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="44b4e-135">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="44b4e-136">列舉值是放在集合的第一個項目之前，或最後一個項目之後。</span><span class="sxs-lookup"><span data-stu-id="44b4e-136">The enumerator is positioned before the first element of the collection or after the last element.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.Reset" />
        <altmember cref="P:System.Collections.IEnumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44b4e-137">將列舉值往前推至下集合中的下一個項目。</span><span class="sxs-lookup"><span data-stu-id="44b4e-137">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="44b4e-138">如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="44b4e-138"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b4e-139">建立列舉值之後或在之後<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>是呼叫，列舉程式位在集合中，且第一個呼叫的第一個元素之前<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>移到第一個的項目集合的列舉值。</span><span class="sxs-lookup"><span data-stu-id="44b4e-139">After an enumerator is created or after a <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called, an enumerator is positioned before the first element of the collection, and the first call to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> moves the enumerator over the first element of the collection.</span></span>  
  
 <span data-ttu-id="44b4e-140">如果<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="44b4e-140">If <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="44b4e-141">列舉值位於這個位置上，後續呼叫<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>也會傳回`false`直到<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="44b4e-141">When the enumerator is at this position, subsequent calls to <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> also return `false` until <xref:System.Collections.Specialized.StringEnumerator.Reset%2A> is called.</span></span>  
  
 <span data-ttu-id="44b4e-142">只要集合維持不變，列舉程式就持續有效。</span><span class="sxs-lookup"><span data-stu-id="44b4e-142">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="44b4e-143">如果變更集合，例如加入、 修改或刪除項目，列舉程式會永久失效，而且下次呼叫<xref:System.Collections.IEnumerator.MoveNext%2A>或<xref:System.Collections.IEnumerator.Reset%2A>會擲回<xref:System.InvalidOperationException>。</span><span class="sxs-lookup"><span data-stu-id="44b4e-143">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="44b4e-144">如果之間修改集合<xref:System.Collections.IEnumerator.MoveNext%2A>和<xref:System.Collections.IEnumerator.Current%2A>，<xref:System.Collections.IEnumerator.Current%2A>傳回項目所設定，即使列舉值已經無效。</span><span class="sxs-lookup"><span data-stu-id="44b4e-144">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44b4e-145">下列程式碼範例示範幾個屬性和方法<xref:System.Collections.Specialized.StringEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="44b4e-145">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="44b4e-146">建立列舉值之後，集合已修改。</span><span class="sxs-lookup"><span data-stu-id="44b4e-146">The collection was modified after the enumerator was created.</span></span></exception>
        <altmember cref="P:System.Collections.Specialized.StringEnumerator.Current" />
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.Reset" />
        <altmember cref="M:System.Collections.IEnumerator.MoveNext" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Specialized.StringEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Specialized</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="44b4e-147">設定列舉值至它的初始位置，這是在集合中第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="44b4e-147">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="44b4e-148"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> 將列舉值移至集合，第一個項目之前的開頭。</span><span class="sxs-lookup"><span data-stu-id="44b4e-148"><xref:System.Collections.Specialized.StringEnumerator.Reset%2A> moves the enumerator to the beginning of the collection, before the first element.</span></span> <span data-ttu-id="44b4e-149">之後<xref:System.Collections.Specialized.StringEnumerator.Reset%2A>，<xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A>前移至集合，才能讀取值的第一個元素必須呼叫<xref:System.Collections.Specialized.StringEnumerator.Current%2A>。</span><span class="sxs-lookup"><span data-stu-id="44b4e-149">After <xref:System.Collections.Specialized.StringEnumerator.Reset%2A>, <xref:System.Collections.Specialized.StringEnumerator.MoveNext%2A> must be called to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.Specialized.StringEnumerator.Current%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="44b4e-150">下列程式碼範例示範幾個屬性和方法<xref:System.Collections.Specialized.StringEnumerator>。</span><span class="sxs-lookup"><span data-stu-id="44b4e-150">The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.StringEnumerator>.</span></span>  
  
 [!code-cpp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CPP/stringenumerator.cpp#1)]
 [!code-csharp[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/CS/stringenumerator.cs#1)]
 [!code-vb[System.Collections.Specialized.StringEnumerator2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.Specialized.StringEnumerator2/VB/stringenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="44b4e-151">建立列舉值之後，集合已修改。</span><span class="sxs-lookup"><span data-stu-id="44b4e-151">The collection was modified after the enumerator was created.</span></span></exception>
        <altmember cref="M:System.Collections.Specialized.StringEnumerator.MoveNext" />
        <altmember cref="P:System.Collections.Specialized.StringEnumerator.Current" />
        <altmember cref="M:System.Collections.IEnumerator.Reset" />
      </Docs>
    </Member>
  </Members>
</Type>