<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IOrderedDictionary.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5445f2081060cc27f506f6e9a66e446bc9a223852.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">445f2081060cc27f506f6e9a66e446bc9a223852</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Represents an indexed collection of key/value pairs.</source>
          <target state="translated">表示索引鍵/值組的索引集合。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> elements can be accessed either with the key or with the index.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> 項目可以在具有索引鍵或索引存取。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Each element is a key/value pair stored in a <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph> structure.</source>
          <target state="translated">每個項目是儲存在索引鍵/值組<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>結構。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Each pair must have a unique key that is not <ph id="ph1">`null`</ph>, but the value can be <ph id="ph2">`null`</ph> and does not have to be unique.</source>
          <target state="translated">每個組必須有唯一的索引鍵不是<ph id="ph1">`null`</ph>，但這個值可以是<ph id="ph2">`null`</ph>並不需要是唯一的。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> interface allows the contained keys and values to be enumerated, but it does not imply any particular sort order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>介面可讓包含的索引鍵和要列舉的值，但它並不代表任何特定排序順序。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`For Each`</ph> in Visual Basic) returns an object of the type of the elements in the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> C# 語言的陳述式 (<ph id="ph2">`For Each`</ph>在 Visual Basic 中) 傳回集合中的項目類型的物件。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Because each element of the <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> is a key/value pair, the element type is not the type of the key or the type of the value.</source>
          <target state="translated">因為每個項目<ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>是索引鍵/值組，此項目類型不是索引鍵的類型或值的類型。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>Instead, the element type is <ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>, as the following example shows.</source>
          <target state="translated">相反地，項目型別是<ph id="ph1">&lt;xref:System.Collections.DictionaryEntry&gt;</ph>，如下列範例所示。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The <ph id="ph1">`foreach`</ph> statement is a wrapper around the enumerator, which allows only reading from, not writing to, the collection.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph>陳述式是可讓只有讀取，不寫入至集合的列舉值的包裝函式。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例示範簡單的實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>根據<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>做為索引鍵和姓氏的第一個名稱儲存的值，以加入每個名字都是唯一的需求。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Specialized.IOrderedDictionary">
          <source>The implementing class must have a means to compare keys.</source>
          <target state="translated">實作的類別必須要有方法來比較索引鍵。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Returns an enumerator that iterates through the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated">傳回逐一查看 <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> 集合的列舉值。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> for the entire <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated">整個 <ph id="ph1">&lt;see cref="T:System.Collections.IDictionaryEnumerator" /&gt;</ph> 集合的 <ph id="ph2">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>[Visual Basic, C#]</source>
          <target state="translated">[Visual Basic、 C#]</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
          <target state="translated">C# 語言的 <ph id="ph1">`foreach`</ph> 陳述式 (在 Visual Basic 中為 <ph id="ph2">`for each`</ph>) 會隱藏列舉值的複雜度。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended instead of directly manipulating the enumerator.</source>
          <target state="translated">因此，使用<ph id="ph1">`foreach`</ph>建議而不是直接管理 列舉值。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
          <target state="translated">列舉程式可以用來讀取集合中的資料，但是無法用來修改基礎集合。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
          <target state="translated">一開始，列舉程式位在集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 也會將列舉值帶回至這個位置。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
          <target state="translated">此位置<ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>未定義屬性。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
          <target state="translated">因此，在讀取 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 的值之前，必須呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 以將列舉值前移至集合的第一個項目。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 會傳回相同的物件直到呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 或 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next element.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> 會將 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為下一個項目。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>超過集合的列舉值的結尾會位於集合中的最後一個元素之後和<ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
          <target state="translated">列舉值位於這個位置上，後續呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>也會傳回<ph id="ph2">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">如果最後一個呼叫<ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>，<ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>是未定義。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first element of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
          <target state="translated">若要再次將 <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> 設定為集合的第一個元素，您可以在呼叫 <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> 之後，接著呼叫 <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
          <target state="translated">如果對集合進行變更，例如加入、修改或刪除項目，列舉程式會永久失效，且其行為未定義。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">列舉程式沒有集合的獨佔存取權，因此，列舉集合內容本質上並不是安全的執行緒程序。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
          <target state="translated">若要確保列舉期間的執行緒安全性，您可以在整個列舉期間鎖定集合。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
          <target state="translated">若要讓多重執行緒能夠存取集合以便進行讀取和寫入，您必須實作自己的同步處理。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例示範簡單的實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>根據<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>做為索引鍵和姓氏的第一個名稱儲存的值，以加入每個名字都是唯一的需求。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.GetEnumerator">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">此程式碼是提供之較大程式碼範例的一部分<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The zero-based index at which the key/value pair should be inserted.</source>
          <target state="translated">以零起始的索引，應該在該索引處插入索引鍵/值組。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The object to use as the key of the element to add.</source>
          <target state="translated">做為要加入項目之索引鍵的物件。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The object to use as the value of the element to add.</source>
          <target state="translated">做為要加入項目之值的物件。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The value can be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">這個值可以是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>Inserts a key/value pair into the collection at the specified index.</source>
          <target state="translated">將索引鍵/值組插入集合的指定索引處。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> 接受<ph id="ph2">`null`</ph>有效的值，並允許重複的項目。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>If the <ph id="ph1">`index`</ph> parameter is equal to <ph id="ph2">&lt;xref:System.Collections.ICollection.Count%2A&gt;</ph>, the <ph id="ph3">`value`</ph> parameter is added to the end of the <ph id="ph4">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> collection.</source>
          <target state="translated">如果<ph id="ph1">`index`</ph>參數等於<ph id="ph2">&lt;xref:System.Collections.ICollection.Count%2A&gt;</ph>、<ph id="ph3">`value`</ph>參數加入至結尾<ph id="ph4">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>集合。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">在連續項目的集合 (例如清單) 中，後面接著插入點的項目會向下移動以容納新項目。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，則移動之項目的索引也會更新。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</source>
          <target state="translated">對其中項目會在概念上分組在一起，例如雜湊資料表的集合不適用這項行為。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例示範簡單的實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>根據<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>做為索引鍵和姓氏的第一個名稱儲存的值，以加入每個名字都是唯一的需求。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">此程式碼是提供之較大程式碼範例的一部分<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於 0。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 大於 <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>An element with the same key already exists in the <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> 集合中已存在具有相同索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> 集合是唯讀的。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.Insert(System.Int32,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> 集合具有固定大小。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">要取得或設定之以零為起始的項目索引。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">在指定的索引位置上取得或設定項目。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">在指定索引上的項目。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> accepts <ph id="ph2">`null`</ph> as a valid value and allows duplicate elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> 接受<ph id="ph2">`null`</ph>有效的值，並允許重複的項目。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> property.</source>
          <target state="translated">C# 語言使用關鍵字來定義索引，而不必實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
          <target state="translated">Visual Basic 會將 <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary.Item%2A&gt;</ph> 實作為預設屬性，這樣會提供相同的索引功能。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>This property allows you to access a specific element in the collection by using the following syntax:</source>
          <target state="translated">這個屬性可讓您可以使用下列語法存取集合中的特定元素：</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例示範簡單的實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>根據<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>做為索引鍵和姓氏的第一個名稱儲存的值，以加入每個名字都是唯一的需求。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">此程式碼是提供之較大程式碼範例的一部分<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於 0。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Collections.Specialized.IOrderedDictionary.Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 等於或大於 <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The zero-based index of the element to remove.</source>
          <target state="translated">移除項目之以零為起始的索引。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>Removes the element at the specified index.</source>
          <target state="translated">移除指定索引中的項目。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">在相鄰元素的集合中，例如清單，接在移除的元素之後的元素會向上移動以佔用空出的位置。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">如果集合具有索引，則移動之項目的索引也會更新。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>This behavior does not apply to collections where elements are conceptually grouped together, such as a hash table.</source>
          <target state="translated">對其中項目會在概念上分組在一起，例如雜湊資料表的集合不適用這項行為。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The following code example demonstrates the implementation of a simple <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> based on the <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例示範簡單的實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>根據<ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The implemented <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> stores first names as the keys and last names as the values, with the added requirement that each first name is unique.</source>
          <target state="translated">實作<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>做為索引鍵和姓氏的第一個名稱儲存的值，以加入每個名字都是唯一的需求。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>This code is part of a larger code example provided for the <ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph> class.</source>
          <target state="translated">此程式碼是提供之較大程式碼範例的一部分<ph id="ph1">&lt;xref:System.Collections.Specialized.IOrderedDictionary&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than 0.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 小於 0。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> 等於或大於 <ph id="ph2">&lt;see cref="P:System.Collections.ICollection.Count" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> 集合是唯讀的。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Specialized.IOrderedDictionary.RemoveAt(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> collection has a fixed size.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Specialized.IOrderedDictionary" /&gt;</ph> 集合具有固定大小。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>