<Type Name="FederationManagement" FullName="System.IdentityModel.Services.FederationManagement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e508b688766d95a886fcd12d1bd03ade67430e9e" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51887118" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FederationManagement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FederationManagement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.FederationManagement" />
  <TypeSignature Language="VB.NET" Value="Public Class FederationManagement" />
  <TypeSignature Language="C++ CLI" Value="public ref class FederationManagement abstract sealed" />
  <TypeSignature Language="F#" Value="type FederationManagement = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>定義用來建立 Federation 中繼資料文件以及根據 Federation 中繼資料文件更新應用程式組態的靜態方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需同盟中繼資料文件的詳細資訊，請參閱下列規格的第三區段︰ [Web 服務同盟語言 （WS-同盟） 1.2 版](https://go.microsoft.com/fwlink/?LinkID=210152)(http://go.microsoft.com/fwlink/?LinkID=210152)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateApplicationFederationMetadata">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader CreateApplicationFederationMetadata (Uri applicationUri, System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, System.IdentityModel.Services.ApplicationType applicationType, System.Collections.ObjectModel.Collection&lt;Uri&gt; audienceUris);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader CreateApplicationFederationMetadata(class System.Uri applicationUri, class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, class System.Collections.ObjectModel.Collection`1&lt;class System.IdentityModel.Metadata.DisplayClaim&gt; claimsRequired, valuetype System.IdentityModel.Services.ApplicationType applicationType, class System.Collections.ObjectModel.Collection`1&lt;class System.Uri&gt; audienceUris) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata(System.Uri,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Collections.ObjectModel.Collection{System.IdentityModel.Metadata.DisplayClaim},System.IdentityModel.Services.ApplicationType,System.Collections.ObjectModel.Collection{System.Uri})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ CreateApplicationFederationMetadata(Uri ^ applicationUri, System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate, System::Collections::ObjectModel::Collection&lt;System::IdentityModel::Metadata::DisplayClaim ^&gt; ^ claimsRequired, System::IdentityModel::Services::ApplicationType applicationType, System::Collections::ObjectModel::Collection&lt;Uri ^&gt; ^ audienceUris);" />
      <MemberSignature Language="F#" Value="static member CreateApplicationFederationMetadata : Uri * System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt; * System.IdentityModel.Services.ApplicationType * System.Collections.ObjectModel.Collection&lt;Uri&gt; -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.CreateApplicationFederationMetadata (applicationUri, certificate, claimsRequired, applicationType, audienceUris)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationUri" Type="System.Uri" />
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="claimsRequired" Type="System.Collections.ObjectModel.Collection&lt;System.IdentityModel.Metadata.DisplayClaim&gt;" />
        <Parameter Name="applicationType" Type="System.IdentityModel.Services.ApplicationType" />
        <Parameter Name="audienceUris" Type="System.Collections.ObjectModel.Collection&lt;System.Uri&gt;" />
      </Parameters>
      <Docs>
        <param name="applicationUri">應用程式 URI。</param>
        <param name="certificate">用來簽署中繼資料的 X.509 憑證。</param>
        <param name="claimsRequired">應用程式所需的宣告。</param>
        <param name="applicationType">其中一個 <see cref="T:System.IdentityModel.Services.ApplicationType" /> 值，可指定中繼資料描述的應用程式類型。 這用來判斷要建立的端點。</param>
        <param name="audienceUris">可以用於這個應用程式的可接受 Uri 的集合。</param>
        <summary>建立包含 Federation 中繼資料的 XML 文件。</summary>
        <returns>包含使用參數所建立之中繼資料文件的 XML 讀取器。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UpdateIdentityProviderTrustInfo">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>如果需要的話，根據指定的 Federation 中繼資料文件，更新指定的應用程式組態。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, claimsOfferedUpdate As Boolean) As XmlReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, bool claimsOfferedUpdate);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * bool -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, claimsOfferedUpdate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataReader">包含中繼資料文件的 XML 讀取器。</param>
        <param name="inputConfiguration">包含組態的 XML 讀取器。</param>
        <param name="claimsOfferedUpdate">如果宣告提供給清單應進行更新，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>根據指定的 Federation 中繼資料文件和指定的值 (此值指定宣告提供的清單是否應進行更新)，視需要更新指定的應用程式組態。</summary>
        <returns>包含已更新組態的 XML 讀取器，如果無法更新組態則為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="inputConfiguration" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlReader UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlReader UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, bool claimsOfferedUpdate, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Boolean,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlReader ^ UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, bool claimsOfferedUpdate, System::IdentityModel::Metadata::MetadataSerializer ^ metadataSerializer);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader * bool * System.IdentityModel.Metadata.MetadataSerializer -&gt; System.Xml.XmlReader" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, claimsOfferedUpdate, metadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="claimsOfferedUpdate" Type="System.Boolean" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">包含中繼資料文件的 XML 讀取器。</param>
        <param name="inputConfiguration">包含組態的 XML 讀取器。</param>
        <param name="claimsOfferedUpdate">如果宣告提供給清單應進行更新，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="metadataSerializer">要用來讀取 STS 中繼資料的序列化程式。</param>
        <summary>根據指定的 Federation 中繼資料文件和指定的值 (此值指定宣告提供的清單是否應進行更新)，視需要更新指定的應用程式組態。 也指定了要用來讀取安全性權杖服務 (STS) 中繼資料的序列化程式。</summary>
        <returns>包含已更新組態的 XML 讀取器，如果無法更新組態則為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="inputConfiguration" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="metadataSerializer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateIdentityProviderTrustInfo (metadataReader As XmlReader, inputConfiguration As XmlReader, ByRef newIssuerNameRegistry As XmlNodeReader, ByRef claimTypesOffered As XmlNodeReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % newIssuerNameRegistry, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % claimTypesOffered);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader *  *  -&gt; unit" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, newIssuerNameRegistry, claimTypesOffered)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader" RefType="out" />
      </Parameters>
      <Docs>
        <param name="metadataReader">包含中繼資料文件的 XML 讀取器。</param>
        <param name="inputConfiguration">包含組態的 XML 讀取器。</param>
        <param name="newIssuerNameRegistry">這個方法傳回時，會包含 XML 節點讀取器，其中包含指定簽發者名稱登錄的項目。 如果沒有指定任何簽發者名稱登錄，則為 <see langword="null" />。 這個參數會被視為未初始化。</param>
        <param name="claimTypesOffered">這個方法傳回時，如果提供的宣告型別清單已經變更，會包含 XML 節點讀取器，其中包含指定新清單的項目。 如果清單尚未變更，則會傳回 <see langword="null" />。 這個參數會被視為未初始化。</param>
        <summary>如果需要的話，根據指定的 Federation 中繼資料文件，更新指定的應用程式組態。 傳回簽發者名稱登錄的組態項目，以及所提供之宣告型別更新清單的組態項目 (若該清單已更新)。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="inputConfiguration" /><paramref name="metadataReader" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateIdentityProviderTrustInfo">
      <MemberSignature Language="C#" Value="public static void UpdateIdentityProviderTrustInfo (System.Xml.XmlReader metadataReader, System.Xml.XmlReader inputConfiguration, out System.Xml.XmlNodeReader newIssuerNameRegistry, out System.Xml.XmlNodeReader claimTypesOffered, System.IdentityModel.Metadata.MetadataSerializer metadataSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateIdentityProviderTrustInfo(class System.Xml.XmlReader metadataReader, class System.Xml.XmlReader inputConfiguration, [out] class System.Xml.XmlNodeReader&amp; newIssuerNameRegistry, [out] class System.Xml.XmlNodeReader&amp; claimTypesOffered, class System.IdentityModel.Metadata.MetadataSerializer metadataSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo(System.Xml.XmlReader,System.Xml.XmlReader,System.Xml.XmlNodeReader@,System.Xml.XmlNodeReader@,System.IdentityModel.Metadata.MetadataSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateIdentityProviderTrustInfo(System::Xml::XmlReader ^ metadataReader, System::Xml::XmlReader ^ inputConfiguration, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % newIssuerNameRegistry, [Runtime::InteropServices::Out] System::Xml::XmlNodeReader ^ % claimTypesOffered, System::IdentityModel::Metadata::MetadataSerializer ^ metadataSerializer);" />
      <MemberSignature Language="F#" Value="static member UpdateIdentityProviderTrustInfo : System.Xml.XmlReader * System.Xml.XmlReader *  *  * System.IdentityModel.Metadata.MetadataSerializer -&gt; unit" Usage="System.IdentityModel.Services.FederationManagement.UpdateIdentityProviderTrustInfo (metadataReader, inputConfiguration, newIssuerNameRegistry, claimTypesOffered, metadataSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReader" Type="System.Xml.XmlReader" />
        <Parameter Name="inputConfiguration" Type="System.Xml.XmlReader" />
        <Parameter Name="newIssuerNameRegistry" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="claimTypesOffered" Type="System.Xml.XmlNodeReader" RefType="out" />
        <Parameter Name="metadataSerializer" Type="System.IdentityModel.Metadata.MetadataSerializer" />
      </Parameters>
      <Docs>
        <param name="metadataReader">包含中繼資料文件的 XML 讀取器。</param>
        <param name="inputConfiguration">包含組態的 XML 讀取器。</param>
        <param name="newIssuerNameRegistry">這個方法傳回時，會包含 XML 節點讀取器，其中包含指定簽發者名稱登錄的項目。 如果沒有指定任何簽發者名稱登錄，則為 <see langword="null" />。 這個參數會被視為未初始化。</param>
        <param name="claimTypesOffered">這個方法傳回時，如果提供的宣告型別清單已經變更，會包含 XML 節點讀取器，其中包含指定新清單的項目。 如果清單尚未變更，則會傳回 <see langword="null" />。 這個參數會被視為未初始化。</param>
        <param name="metadataSerializer">要用來讀取 STS 中繼資料的序列化程式。</param>
        <summary>如果需要的話，根據指定的 Federation 中繼資料文件，更新指定的應用程式組態。 傳回簽發者名稱登錄的組態項目，以及所提供之宣告型別更新清單的組態項目 (若該清單已更新)。 也指定了要用來讀取安全性權杖服務 (STS) 中繼資料的序列化程式。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataReader" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="inputConfiguration" /> 為 <see langword="null" />。  
  
-或- 
 <paramref name="metadataSerializer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>