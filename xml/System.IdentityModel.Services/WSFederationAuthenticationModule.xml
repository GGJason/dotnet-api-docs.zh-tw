<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4946a226efb8c22b2cb54ac00bf7e2cedea35d6e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36558372" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> 是 HTTP 模組，會藉由強制執行連入要求的聯合驗證設定，用來保護 ASP.NET 應用程式。 <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> 是 WIF 現成提供的主要模組，用於處理 ASP.NET 應用程式中的宣告式識別存取。  <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />會引發數個事件，它可讓 ASP.NET 開發人員變更預設行為，並控制驗證和宣告處理發生方式的詳細資訊。 <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />功能會分為特定工作的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule>類別會實作 HTTP 模組已知 WS-同盟驗證模組 (WSFAM)。 Windows Identity Foundation (WIF) 時，會立即可用的實作 WSFAM。 WSFAM 是 web.config 檔案中建立一個項目新增至 ASP.NET 管線。 它衍生自<xref:System.IdentityModel.Services.HttpModuleBase>，它會實作<xref:System.Web.IHttpModule>。 它會接聽的 ASP.NET 執行階段註冊<xref:System.Web.HttpApplication.EndRequest>和<xref:System.Web.HttpApplication.AuthenticateRequest>事件。 接聽<xref:System.Web.HttpApplication.EndRequest>事件，可讓用戶端重新導向至安全性權杖服務 (STS) 取得安全性權杖時所需資源上的授權失敗 WSFAM。 接聽<xref:System.Web.HttpApplication.AuthenticateRequest>事件可讓來監視 HTTP 要求的回應包含要求的語彙基元從 STS WSFAM。 當此權杖是存在且有效時，它會建立的執行個體<xref:System.Security.Claims.ClaimsPrincipal>已驗證的使用者使用的權杖中的宣告。  
  
 工作階段管理使用 WSFAM，當工作階段驗證模組 (SAM)，也就是執行個體所提供的<xref:System.IdentityModel.Services.SessionAuthenticationModule>從它衍生的類別或類別。 SAM 也會加入至組態檔中的 ASP.NET 管線。 SAM 監視 （工作階段） 的驗證 cookie 的要求。 當這些 cookie 確實存在且有效時，此模組會將擷取<xref:System.Security.Claims.ClaimsPrincipal>已驗證的使用者從<xref:System.IdentityModel.Tokens.SessionSecurityToken>並設定<xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType>屬性和執行緒主體<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>屬性。  
  
 WSFAM 提供：  
  
-   ASP.NET 應用程式將驗證外包給安全性權杖服務 (STS) 所使用的 WS-同盟通訊協定功能。 可以跨一個或多個身分識別領域同盟身分識別，並且包含多個 Sts。  
  
-   ASP.NET 應用程式的宣告型識別。 在驗證期間，WSFAM 建置從 STS 所傳送的安全性權杖中宣告的主體，並將這個宣告主體設定為主要執行緒。 您接著可以使用這個主體進行進一步授權、 展示和邏輯來判斷它所代表的使用者程式碼中。  
  
 WSFAM 會公開一些提供預設来使用的 WS-同盟登入和登出要求的訊息參數的屬性。 這些屬性通常初始化自[ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md)組態檔中的項目。 這些屬性的最重要的是：  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性，指定要將 WS-同盟登入和登出要求傳送至安全性權杖服務 (STS) 的位址。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A>屬性，指定要使用的 wtrealm 參數在 WS-同盟登入要求。 Wtrealm 參數識別要 STS 的信賴憑證者 (rp) 應用程式的安全性領域。  
  
 登入訊息參數也可以變更每個要求為基礎所提供的事件處理常式委派<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。  
  
 兩個屬性會控制行為的模組。 這兩個屬性通常也初始化自`<wsFederation>`組態中的項目。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>屬性會指定模組是否應該執行被動重新導向至 STS 進行驗證。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A>屬性會指定工作階段是否應為永久性。 如果這個屬性設定為 true，SAM 用來寫入至用戶端工作階段 cookie。 在後續要求中從用戶端，SAM 會提供使用語彙基元驗證保存在工作階段 cookie。  
  
 WSFAM 引發多個事件期間登入和登出，這可讓 ASP.NET 開發人員變更模組的預設行為，以及控制如何驗證和處理宣告進行的詳細資料。  
  
 WS-同盟登入要求傳送至 STS 前，會引發下列事件：  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>： 當被動式重新導向已啟用，且授權失敗要求的資源上引發。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>： 之前引發 WSFAM 會傳送至 STS WS-同盟登入要求。 若要變更登入要求中的參數，您可以使用此事件。  
  
 從 STS 收到登入回應 （發出安全性權杖） 時，會引發下列事件：  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>： 只在 STS 所傳送的安全性語彙基元讀取回應之後，才引發。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>： 只在已驗證權杖之後，才引發。 您可以使用這個事件來篩選或轉換，將宣告新增至宣告主體 (<xref:System.Security.Claims.ClaimsPrincipal>) 所建立的安全性權杖。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>： 引發之前工作階段權杖 (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) 主要用來設定執行緒主體的宣告和目前的使用者來建立並寫入工作階段 cookie。 可讓您有機會修改的工作階段權杖或啟用或停用寫入工作階段 cookie。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>： 在結束時引發的驗證之後已設定執行緒主體與目前使用者。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>： 引發登入期間發生的例外狀況。 您可以取消要求，並避免例外狀況傳回給呼叫端。  
  
 當簽章登出工作階段，或處理 WS-同盟登出清除要求 (wsignoutcleanup1.0) 時，會引發下列事件：  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>： 只在工作階段中刪除，讓您執行任何可能相依於工作階段的清除，或取消登出之前引發。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>： 只在已刪除工作階段之後，才引發。  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>： 引發登出期間發生的例外狀況。您可以取消登出，並避免例外狀況傳回給呼叫端。  
  
> [!NOTE]
>  登出在 STS 藉由呼叫時，不會引發登出事件<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法。  
  
 有兩種登入使用 WSFAM STS。 第一個是藉由啟用透過被動重新導向<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>屬性。 在此情況下，當授權失敗要求的資源，而不是傳回`401:Access Denied`回應給用戶端，WSFAM 建置其內容的 WS-同盟登入要求訊息，並將用戶端重新導向至 STS，以擷取安全性權杖。 第二種方式是明確地將對 STS 的用戶端重新導向藉由呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>來自網頁或應用程式中的自訂控制項的方法。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>方法也使用 WSFAM 屬性來建構登入要求。  
  
 任何多載<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>方法可用來登出工作階段。 這會刪除用戶端上的工作階段 cookie。 它不會傳送至 STS WS-同盟登出訊息 (「 wsignout1.0")。 若要登出在 STS，您必須使用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法。  
  
 WSFAM 會藉由使用用戶端刪除其工作階段處理 WS-同盟登出清除要求 (「 wsignoutcleanup1.0")。 如果未設定 wreply 訊息中的參數登出清除，WSFAM 傳送訊息的 STS 傳回綠色的核取記號的映像。 這項功能可供 STS，以完成其登出 RP 通知的形式。  
  
 WSFAM 會公開其功能-例如，其要求處理管線-透過數個特定工作的方法。 您可以覆寫這些方法，以變更 WSFAM 行為衍生類別中。  
  
 要使用此模組必須加入至管線，如下列 XML 所示：  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 一旦設定，<xref:System.IdentityModel.Services.WSFederationAuthenticationModule>處理 HTTP 要求的各個階段引發的事件。 ASP.NET 開發人員可以處理這些事件在 global.asax 檔案中。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>由衍生類別的建構函式呼叫，以初始化 <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> 類別。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在 WS-同盟登入要求 ("wsignin1.0") 中使用的 wauth 參數值。</summary>
        <value>指定驗證類型的 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wauth 參數是選擇性的。 如果<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A>屬性設定為`null`或登入要求中未包含空字串，wauth 參數。  
  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 只在模組重新導向至與 WS-同盟登入要求訊息的安全性權杖服務 (STS) 之前，會引發這個事件。 所指定 STS<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當模組正在判斷它是否應該將使用者重新導向至已設定的簽發者進行驗證時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>授權失敗的 HTTP 要求時，就會引發事件。 會引發此事件於<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>透過呼叫事件處理常式委派<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A>方法。  
  
 您可以設定<xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType>屬性，即可控制是否已重新導向至識別提供者。 架構會初始化此屬性為`false`如果使用者已經過驗證。 在此情況下，將屬性設定為`true`與 STS 可能會造成循環迴圈。  
  
> [!NOTE]
>  <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件可用來修改 URL 或取消重新導向。  
  
 若要處理這個 ASP.NET 應用程式中的事件，建立名為方法`WSFederationAuthentication_AuthorizationFailed`global.asax 檔中。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>取得值，這個值指出指定的 HTTP 要求是否為 WS-Federation 登入回應訊息。 如果訊息是 WS-同盟登出清除訊息 ("wsignoutcleanup1.0")，這個方法會處理該要求。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 登入回應訊息會傳送至信賴憑證者的合作對象 (RP)，以回應登入要求訊息安全性權杖服務 (STS)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">連入的 HTTP 要求。</param>
        <summary>取得值，這個值指出指定的 HTTP 要求是否為 WS-Federation 登入回應訊息。 如果訊息是 WS-同盟登出清除訊息 ("wsignoutcleanup1.0")，這個方法會處理該要求。</summary>
        <returns>如果指定的 HTTP 要求包含表單 POST，其中 wa 參數設定為 "wsignout1.0"，而且 wresult 參數不是空的，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會從傳入的 HTTP 要求包含 WS-同盟登入回應訊息的表單張貼要求處理管線叫用。  
  
 它會叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType>多載`onPage`參數集`false`表示處理網頁時，不是呼叫。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">連入的 HTTP 要求。</param>
        <param name="onPage">如果在處理網頁要求時會產生呼叫，則為 <see langword="true" />。 如果呼叫端是 HTTP 模組，則為 <see langword="false" />。 這個參數會決定如何結束處理或傳送重新導向，如果內送訊息是 WS-同盟登出清除訊息 ("wsignoutcleanup1.0")。</param>
        <summary>取得值，這個值指出指定的 HTTP 要求是否為 WS-Federation 登入回應訊息。 如果訊息是 WS-同盟登出清除訊息 ("wsignoutcleanup1.0")，這個方法會處理該要求。</summary>
        <returns>如果指定的 HTTP 要求包含表單 POST，其中 wa 參數設定為 "wsignout1.0"，而且 wresult 參數不是空的，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會叫用要求處理管線，透過從<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType>多載，以便判斷連入 HTTP 要求是否為表單 POST 包含 WS-同盟登入回應訊息。  
  
 預設實作會執行下列作業：  
  
-   如果內送要求的表單 POST，它會呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A>方法來判斷表單 POST 是否包含登入回應。  
  
-   如果連入要求的表單 POST，而且未要求包含 WS-同盟登出清除要求 （wa 參數會是"wsignoutcleanup1.0"），則會執行登出清除。 在此情況下，<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>叫用方法時 (以將參數設定為`true`指出登出清除) 登出工作階段。 這也會導致引發登出的事件。  
  
     接下來，如果登出清除要求包含 wreply 參數，用戶端重新導向至所傳回的 URL<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A>方法; 否則會對 STS 傳回綠色的核取記號的映像。 此映像的回條可以當做 sts 登出清除要求已接收並已順利處理 RP 所確認的訊息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM 會將這個值儲存在 WS-同盟登入要求中的 wctx 參數，但是模組不會在處理登入要求或登入回應時使用該值。 您可以將它設定為任何值。 不必是唯一的。</param>
        <param name="returnUrl">在驗證時模組應該傳回的 URL。</param>
        <param name="rememberMeSet">WSFAM 會將這個值儲存在 WS-同盟登入要求中的 wctx 參數，但是模組不會在處理登入要求或登入回應時使用該值。 您可以將它設定為 <see langword="true" /> 或 <see langword="false" />。</param>
        <summary>使用模組上設定的 WS-Federation 參數，建立 WS-Federation 登入要求訊息。</summary>
        <returns>WS-Federation 登入要求訊息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立由 WS-同盟登入要求<xref:System.IdentityModel.Services.SignInRequestMessage>物件。 新的屬性<xref:System.IdentityModel.Services.SignInRequestMessage>物件設定如下：  
  
-   <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A>屬性 （wctx 參數） 設定為建立使用的方法參數的值。  
  
-   <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A>屬性 （wct 參數） 設定為目前的時間。  
  
-   使用目前的執行個體的對等屬性會設定所有其他屬性。  
  
 傳遞給方法的參數用來建立 wctx 訊息參數。 這是以下列格式的字串： `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`。  
  
-   `ru`值設定的值為`returnUrl`參數中傳遞給方法，它會指定模組應該直接以下成功驗證瀏覽器的 URL。 這是唯一的值儲存在可由 WSFAM wctx 字串。 此模組會呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A>處理 WS-同盟登入回應時，從 wctx 參數擷取這個值的方法。 不應混淆的 wreply 訊息參數，指定由<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A>屬性和其提供安全性權杖服務 (STS) 應該將其回應導向的 RP 的位址。  
  
-   `cx`參數設定的值為<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A>屬性。 這個屬性會公開可讓您設定要 wctx 字串; 字串中儲存任何應用程式定義的內容不過，WSFAM 未公開的方法，以擷取回應中的這個值。 如果您的應用程式，就需要這個值，您必須提供程式碼來剖析 wctx 字串和處理回應時讀取這個值。 您可能會完成此作業藉由覆寫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A>方法。  
  
-   既不`rm`值，設定的值為`rememberMeSet`參數，也不`id`參數，設定的值為`uniqueId`WSFAM 所使用參數。 這些可以設定為任何值。  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>方法從呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> 屬性為 <see langword="null" /> 或空字串。  -或-  <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> 屬性為 <see langword="null" /> 或空字串。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">要接收 WS-Federation 登出要求訊息的 STS 的 URL。 不可為 <see langword="null" />。</param>
        <param name="replyUrl">要在登出要求訊息中以 wreply 值的方式傳送的 URL。</param>
        <summary>使用 WS-同盟通訊協定在指定的安全性權杖服務 (STS) 登出。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫此方法以傳送至指定的 STS WS-同盟登出要求訊息。 您可以選擇性地提供登出要求中 wreply 參數的值。  
  
 方法會執行下列動作：  
  
1.  使用指定的參數，以建立 WS-同盟登出要求訊息。  
  
2.  呼叫<xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType>上刪除工作階段 cookie SAM 方法。  
  
3.  重新導向至 STS 使用第一個步驟的登出要求訊息。  
  
 沒有登出事件： <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>， <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>，或<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>由這個方法所引發。 若要刪除工作階段而不需要登出要求訊息傳送給 STS，請呼叫其中一個多載<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>方法。  
  
> [!NOTE]
>  若要使用的工作階段權杖執行被動登出，模組會依賴值儲存於<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType>屬性在登入時，如需詳細資訊，請參閱<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutUrl" /> 不是 <see langword="null" />，也不是絕對 URI。  -或-  <paramref name="replyUrl" /> 不是 <see langword="null" />，也不是絕對 URI。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="signOutUrl" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在 WS-同盟登入要求 ("wsignin1.0") 中使用的 wfresh 參數值。</summary>
        <value>所需的驗證要求最長使用期限，以分鐘為單位。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wfresh 參數是選擇性的。 如果<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A>屬性設定為`null`或登入要求中未包含空字串，wfresh 參數。  
  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 只在模組重新導向至與 WS-同盟登入要求訊息的安全性權杖服務 (STS) 之前，會引發這個事件。 所指定 STS<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">簽發者位址。 安全性權杖服務 (STS) 的位址，要將要求導向此位址。</param>
        <param name="signOutReply">指定要在登出後返回之位址的 URL。這會在登出要求中設定 wreply 參數。 如果沒有應該包含在產生之登出要求中的 wreply 參數，則可以是 <see langword="null" /> 或空白。 這應該是絕對 URI。</param>
        <param name="signOutQueryString">要包含在登出要求中的其他查詢字串參數。 如果沒有其他要包含在產生之登出要求中的參數，則可以是 <see langword="null" /> 或空白。 這應該為相對 URI。</param>
        <summary>傳回 URL，代表對指定簽發者發出的 WS-同登出要求，且包含指定的 wreply 參數及指定的其他參數。</summary>
        <returns>包含使用指定之參數所建立之 WS-Federation 被動登出要求的 URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會傳回在 URL 中： 基底 URI 設定為`issuer`wa 參數設定為"wsignout1.0"; wreply 參數設定為`signOutReply`; 中指定的參數和`signOutQueryString`會呈現為其他查詢字串參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">會指定發行結果的位址的 URL。</param>
        <summary>從指定的 URL 取得發行結果 (通常是發出的權杖)。 解析登入回應訊息中的 wresultptr 參數中指定的 URL。</summary>
        <returns>URL 所參考的發行結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 由呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType>內處理管線的解析 URL 收到來自安全性權杖服務 (STS) 的登入回應訊息中 wresultptr 參數中指定的方法。  
  
 依預設這個方法會擲回<xref:System.NotSupportedException>。 覆寫這個方法在衍生的類別，以支援 wresultptr 參數。 URL 指向發行結果，也應為下列其中一項：`<wst:RequestSecurityTokenResponse>`項目，`<wst:RequestSecurityTokenResponseCollection>`項目、 SOAP 回應或 SOAP`<S:Fault>`項目。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">基底類別中不支援此方法。 您必須在衍生類別中覆寫它。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">包含表單張貼的 HTTP 要求，這項張貼則包含 WS-同盟登入回應訊息。</param>
        <summary>擷取原來從登入回應中要求之頁面的 URL。</summary>
        <returns>用戶端原先要求之頁面的 URL。 這是用戶端在成功登入後應重新導向到的 URL (在信賴憑證者)。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法呼叫從要求處理管線 (<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>方法) 以取得在信賴憑證者的合作對象 (RP) 將用戶端導向網頁的 URL 之後成功登入。 這是，一般而言，RP 的用戶端原先要求資源存取的 URL。  
  
 根據預設，WSFAM 將 WS-同盟登入要求傳送給安全性權杖服務 (STS) 時，儲存內 wctx 訊息參數的傳回 URL。 根據 WS-同盟規格，wctx 參數會保留的實體透過此訊息傳遞，而且是透過 WS-同盟登入回應訊息中傳送的 STS 原封不動地傳回。  
  
 預設實作會從 wctx 參數登入回應中取得的傳回 URL。 正由 WSFAM wctx 參數的格式的相關資訊，請參閱<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從指定的要求讀取安全性權杖。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">從中讀取權杖的登入回應訊息。</param>
        <summary>從指定的 WS 同盟登入回應訊息讀取安全性權杖。</summary>
        <returns>已從訊息讀取的安全性權杖。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設實作會叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType>方法來取得權杖，並讀取使用適當的處理常式中設定的安全性權杖處理常式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">要從其中讀取語彙基元的 HTTP 要求。</param>
        <summary>從指定的 HTTP 要求讀取安全性權杖。</summary>
        <returns>已讀取的安全性權杖。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要求處理管線，以取得做為 WS-同盟登入要求訊息從呼叫<xref:System.IdentityModel.Tokens.SecurityToken>物件。  
  
 預設實作會叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A>方法來取得<xref:System.IdentityModel.Services.SignInResponseMessage>物件，然後再叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType>多載。  
  
 您可以使用衍生的類別來解譯特定類型的要求。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得字串，這個值應該與工作階段 cookie 保存在 <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" /> 屬性中。</summary>
        <returns>要保存在工作階段 Cookie 中的字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A>處理 WS-同盟登入回應訊息，取得要在儲存的值時，方法從要求處理管線呼叫<xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType>屬性內的工作階段 cookie。  
  
 您可以覆寫這個方法以提供特定應用程式的值儲存在 cookie 中。 WSFAM 未公開任何方法來擷取 cookie 的值。 您必須提供邏輯讀取傳回的 cookie 的值，如果需要在應用程式中。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> 屬性為 <see langword="null" />。</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">從中讀取登入回應訊息的 HTTP 要求。 要求應該會表示表單 POST。</param>
        <summary>從指定的 HTTP 要求所代表的表單 POST 讀取 <see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> 物件。</summary>
        <returns>建立的登入回應訊息。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType>要求處理管線，以取得從表單 POST HTTP 要求中所含的登入回應訊息中的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">無法從指定的要求讀取登入回應訊息。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">登出清除要求。</param>
        <summary>決定處理包含 wreply 參數的 WS-Federation 登出清除要求 (wsignoutcleanup1.0) 時要重新導向到的 URL。</summary>
        <returns>要重新導向的目的 URL。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法從呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A>判定之後處理 WS-同盟登出清除要求重新導向至 URL 的要求處理管線中的方法。 它才會叫用如果訊息具有 wreply 參數 (`signOutMessage`參數具有<xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A>，既不是屬性`null`或空白)。  
  
 預設實作會驗證訊息中包含的回覆 URL (<xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType>屬性) 對安全性權杖服務 (STS) 所指定的位址<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。 下列條件必須是有效的回覆 url，則為 true:  
  
1.  回覆 URL 是絕對 URL。  
  
2.  回覆 URL 有簽發者相同的結構描述。  
  
3.  回覆 URL 有簽發者相同的通訊埠。  
  
4.  回覆 URL 已簽發者相同的主控件，或回覆 URL 指定簽發者的子網域。  
  
 如果下列所有條件都不成立，就會傳回回覆 URL （回覆）;否則，根據指定的 URL<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>會傳回屬性。  
  
 覆寫這個方法以提供額外的驗證回覆 URL。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutMessage" /> 具有 <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" /> 屬性，此屬性為 <see langword="null" /> 或空的。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signOutMessage" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從指定的 WS 同盟登入回應訊息擷取發行的權杖。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">要從中擷取權杖的登入回應訊息。 登入回應會包含 STS 簽發的權杖。</param>
        <summary>從指定的 WS 同盟登入回應訊息擷取發行的權杖。</summary>
        <returns>字串，包含表示已發佈之語彙基元的 XML。 這是 <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> 項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果登入回應訊息中，沒有 wresult 參數<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A>呼叫方法，嘗試取得權杖使用 wresultptr 參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="message" /> 不包含語彙基元。 (它不會包含有效的 wresult 或 wresultptr 參數)。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">要從中擷取權杖的登入回應訊息。 登入回應會包含 STS 簽發的權杖。</param>
        <param name="federationSerializer">要用來還原序列化登入回應訊息的 WS-同盟序列化程式。</param>
        <summary>使用指定的 WS-同盟序列化程式，從指定的 WS-同盟登入回應訊息中擷取發行的權杖。</summary>
        <returns>字串，包含表示已發佈之語彙基元的 XML。 這是 <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" /> 項目。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在 WS-同盟登入要求 ("wsignin1.0") 中使用的 whr 參數值。</summary>
        <value>識別提供者的位址。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Whr 參數是選擇性的。 如果<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A>屬性設定為`null`或登入要求中未包含空字串，whr 參數。  
  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 只在模組重新導向至與 WS-同盟登入要求訊息的安全性權杖服務 (STS) 之前，會引發這個事件。 所指定 STS<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">包含這個模組的 HTTP 應用程式物件。</param>
        <summary>初始化模組，並準備模組以處理來自模組之 [!INCLUDE[vstecasp] (~/includes/vstecasp-md.md)] 應用程式物件的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將根據下表的 ASP.NET 管線事件處理常式。  
  
|Event - 事件|處理常式|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  模組屬性，例如<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>，初始化自<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>根據模組的 <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" /> 屬性所指定的組態，初始化模組屬性。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 模組屬性會使用對等的屬性初始化<xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration>所指定物件<xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType>屬性。  
  
 您可以透過組態檔中指定設定[ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md)項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">連入的 HTTP 要求。</param>
        <summary>取得值，指出指定的要求是否為 WS-Federation 登入回應訊息。</summary>
        <returns>如果要求是 WS-Federation 登入回應訊息，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法從呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A>要求處理管線，以判斷連入 HTTP 要求是否為 WS-同盟登入回應訊息中的方法。  
  
 預設實作會傳回`true`如果 wa 參數是"wsignin1.0 」 和 wreq，且不能同時設定 wreqptr 參數。  
  
 您可以覆寫這個方法在衍生類別來執行額外的驗證。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 URI，識別想要的安全性權杖簽發者。</summary>
        <value>會識別安全性權杖服務 (STS) 的 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是必要的屬性。 如果啟用被動重新導向，則必須設定。 它會指定 WS-同盟要求應該發行安全性權杖服務 (STS) 的 URL。  
  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 只在模組重新導向至與 WS-同盟登入要求訊息的安全性權杖服務 (STS) 之前，會引發這個事件。 所指定 STS<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">嘗試將屬性設為 <see langword="null" /> 或空字串。  -或-  嘗試將屬性值設定為無效絕對 URI 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件的來源。 這個將會是 <see cref="T:System.Web.HttpApplication" /> 物件。</param>
        <param name="args">事件的資料。</param>
        <summary>處理來自 [!INCLUDE[vstecasp] (~/includes/vstecasp-md.md)] 管線的 <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>方法會實作 WS-同盟要求處理管線。 它會加入至<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>中的事件[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]由管線<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A>方法。  
  
 此方法會執行下列作業：  
  
1.  呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29>方法，以判斷是否已經接收到的 WS-同盟登入回應訊息 (「 wsignin1.0")。 如果回應的 WS-同盟登出清除要求 (「 wsignoutcleanup1.0 」)<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29>處理訊息，終止要求，並在要求中的 WS-同盟參數根據用戶端重新導向。 如果訊息不是登入回應或登出清除要求中，模組只會傳回。否則，它會執行下列步驟來處理登入回應。  
  
2.  呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29>方法還原序列化<xref:System.IdentityModel.Tokens.SecurityToken>從要求的物件。  
  
3.  引發 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> 事件。 您可以取消進一步處理，或修改此事件處理常式中接收的安全性權杖。 處理常式通常用來修改<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType>或<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType>屬性。  
  
4.  驗證安全性權杖，並建立<xref:System.Security.Claims.ClaimsPrincipal>從安全性權杖中宣告的物件。  
  
5.  引發 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> 事件。 您可以取消進一步處理，或修改此事件處理常式中的宣告主體。  
  
6.  若要建立使用設定的工作階段驗證模組 (SAM)<xref:System.IdentityModel.Tokens.SessionSecurityToken>物件。 (在設定 sam<xref:System.IdentityModel.Services.SessionAuthenticationModule>所傳回物件<xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType>屬性。)使用在步驟 5 中所傳回宣告主體建立的工作階段權杖。 <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType>和<xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType>屬性使用設定的<xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A>和<xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A>屬性<xref:System.IdentityModel.Tokens.SecurityToken>在步驟 3 傳回與目前時間與任一所指定的權杖存留期會驗證<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>或<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A>屬性<xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>WSFAM 正在使用的語彙基元處理常式集合中的物件。 權杖存留期在工作階段權杖處理常式可以透過組態中指定[ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md)項目。 注意：<xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A>屬性上設定不會使用 SAM cookie 處理常式。  
  
7.  呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A>方法包含用來撰寫工作階段 cookie 工作階段 token。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A>第一個方法會引發<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>事件。 您可以變更工作階段權杖上的屬性，或變更是否應該保存 cookie，此事件處理常式中。 引發事件之後，方法會再寫入使用 SAM 的 cookie。  
  
    > [!NOTE]
    >  <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler>組態的設定不會用來撰寫 cookie。  
  
8.  呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A>方法，以引發<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>事件。  
  
9. 呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A>方法來取得要用戶端重新導向至 [RP] 頁面。 根據預設，這個方法會讀取 wctx 參數，在登入回應中傳回的 URL。 如需如何 WSFAM 儲存傳回 URL 的詳細資訊，請參閱<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件的資料。</param>
        <summary>引發 <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>授權失敗時，事件處理常式委派。  
  
 初始化<xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType>屬性引發之前<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>事件以避免循環的重新導向，如果使用者已經過驗證。 如果使用者已經過驗證，屬性會初始化為`false`若要避免重新導向; 否則它會初始化為`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件的來源。 這個將會是 <see cref="T:System.Web.HttpApplication" /> 物件。</param>
        <param name="args">事件的資料。</param>
        <summary>處理來自 [!INCLUDE[vstecasp] (~/includes/vstecasp-md.md)] 管線的 <see cref="E:System.Web.HttpApplication.EndRequest" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 事件會被忽略，除非<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>屬性是`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">事件的來源。 這個將會是 <see cref="T:System.Web.HttpApplication" /> 物件。</param>
        <param name="e">事件的資料。</param>
        <summary>處理來自 [!INCLUDE[vstecasp] (~/includes/vstecasp-md.md)] 管線的 <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 根據預設，這會是空的處理常式。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件的資料。</param>
        <summary>引發 <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">事件的資料。</param>
        <summary>引發 <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">事件的資料。</param>
        <summary>引發 <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">事件的資料。</param>
        <summary>引發 <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>方法之後的工作階段遭到刪除。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">事件的資料。</param>
        <summary>引發 <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" /> 事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">事件的資料。</param>
        <summary>引發 <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>方法之前工作階段遭到刪除。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">事件的資料。</param>
        <summary>引發 <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>在處理期間發生的例外狀況的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指定此模組是否已啟用來啟始 WS-Federation 通訊協定重新導向。</summary>
        <value>
          <see langword="true" /> 表示啟用重新導向，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 未啟用此模式時，此模組將不會起始 WS-同盟通訊協定重新導向。 如果這個屬性是`true`、<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性必須設定的安全性權杖服務 (STS) 的呼叫端應該重新導向的 url。  
  
> [!WARNING]
>  應用程式程式碼可以明確發出 WS-同盟登入要求，使用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>方法，不論值<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指定是否要在成功驗證時發出永續性工作階段 cookie。</summary>
        <value>
          <see langword="true" /> 表示發出永續性工作階段 Cookie，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>事件。 從要求處理管線處理 WS-同盟登入回應訊息從安全性權杖服務 (STS) 時，會引發這個事件。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在 WS-同盟登入要求 ("wsignin1.0") 中使用的 wp 參數值。</summary>
        <value>識別要使用之原則的 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wp 參數是選擇性的。 如果<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A>屬性設定為`null`或登入要求中未包含空字串，wp 參數。  
  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 只在模組重新導向至與 WS-同盟登入要求訊息的安全性權杖服務 (STS) 之前，會引發這個事件。 所指定 STS<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要用於 WS-同盟登入要求 ("wsignin1.0") 的 wtrealm 參數值。</summary>
        <value>用來向 Security Token Service (STS) 表明信賴憑證者 (RP) 識別身分的 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是 WS-同盟登入要求的必要的屬性。 如果啟用被動重新導向，則必須設定。 URI 會識別對 STS RP。 (如識別 rp STS，請參閱<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性)。  
  
 這個屬性的值會序列化為 WS-同盟通訊協定中 wtrealm 查詢字串參數。 它會識別對 STS RP。 它用來決定要套用的權杖發行及如何將使用者重新導向後權杖發行哪些原則 STS。 (如識別 rp STS，請參閱<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>。)  
  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 只在模組重新導向至與 WS-同盟登入要求訊息的安全性權杖服務 (STS) 之前，會引發這個事件。 所指定 STS<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">嘗試將屬性設為 <see langword="null" /> 或空字串。  -或-  嘗試將屬性值設定為無效絕對 URI 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當模組要將使用者重新導向到識別提供者時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以存取和修改 WS-同盟登入要求透過<xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType>屬性。 例如，您可以修改<xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A>登入訊息變更要求會重新導向的身分識別提供者中的屬性。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件是可取消事件，您可以設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`取消重新導向。  
  
 事件引發時，從內<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>方法透過呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A>方法。  
  
 若要處理這個 ASP.NET 應用程式中的事件，建立方法，稱為`WSFederationAuthentication_RedirectingToIdentityProvider`global.asax 檔中。  
  
   
  
## Examples  
 下列程式碼示範如何將加入的處理常式<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>中的事件`Application_Init`global.asax 檔案中的事件。 程式碼取自`FederationForWebApps`範例。 如需有關此範例的詳細資訊，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。  
  
  
  
 下列程式碼顯示的處理常式<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>中的事件 RP 的 global.asax 檔中。 程式碼會檢查以查看是否傳入 HTTP 要求包含 whr 參數傳送，而且如果是的話，它會設定這個參數會傳送至 STS WS-同盟登入要求。 程式碼取自`FederationForWebApps`範例。 如需有關此範例的詳細資訊，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。  
  
  
  
 下列程式碼顯示的處理常式<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>中的事件為同盟提供者 STS 的 global.asax 檔中。 程式碼會檢查傳入的 HTTP 要求是否包含 whr 參數。 如果要求包含 whr 參數，用戶端已導向至登入; IP STS如果沒有，則用戶端已導向至主領域探索頁面上，選取要登入 IP STS。 程式碼取自`FederationForWebApps`範例。 如需有關此範例的詳細資訊，請參閱[WIF 程式碼範例索引](~/docs/framework/security/wif-code-sample-index.md)。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">WSFAM 會將這個值儲存在 WS-同盟登入要求中的 wctx 參數，但是模組不會在處理登入要求或登入回應時使用該值。 您可以將它設定為任何值。 不必是唯一的。 如需詳細資訊，請參閱 <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> 方法。</param>
        <param name="returnUrl">在驗證時模組應該傳回的 URL。</param>
        <param name="persist">WSFAM 會將這個值儲存在 WS-同盟登入要求中的 wctx 參數，但是模組不會在處理登入要求或登入回應時使用該值。 您可以將它設定為 <see langword="true" /> 或 <see langword="false" />。</param>
        <summary>將使用者重新導向至 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> 屬性指定的安全性權杖服務 (STS)，以取得使用 WS-同盟通訊協定的安全性權杖。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>方法從呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>方法時所呈現的信賴憑證者的合作對象 (RP) 或從網頁上發出要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>上執行被動重新導向至身分識別提供者的事件處理常式委派授權失敗。  
  
 傳遞給方法的參數用來建立 wctx 訊息參數。 唯一顯著的參數是`returnUrl`參數。 這會指定 RP 應導向瀏覽器以下列驗證成功的 URL。 不應混淆的 wreply 訊息參數，指定由<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A>屬性和其提供安全性權杖服務 (STS) 應該將其回應導向的 RP 的位址。  
  
 此方法會執行下列作業：  
  
1.  叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A>方法，以確保有效的登入要求可以所簽發的模組。  
  
2.  叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>方法來建立登入要求，從在模組上設定的屬性。  
  
3.  叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A>方法，以引發<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 您可以取消重新導向，或修改此事件的事件處理常式中的登入要求訊息。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> 為 <see langword="null" /> 或空字串。  -或-  <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> 為 <see langword="null" /> 或空字串。  -或-  <see cref="P:System.Web.HttpContext.Current" /> 屬性為 <see langword="null" /> 或空白。  -或-  <see cref="P:System.Web.HttpContext.Current" /> 所傳回內容的 <see cref="P:System.Web.HttpContext.Response" /> 屬性為 <see langword="null" /> 或空白。</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在 WS-同盟登入要求 ("wsignin1.0") 中使用的 wreply 參數值。</summary>
        <value>識別信賴憑證者 (RP) 應用程式要用來接收 Security Token Service (STS) 回覆之位址的 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wreply 參數是選擇性的。 如果<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A>屬性設定為`null`或登入要求中未包含空字串，wreply 參數。  
  
 Wreply 參數由 STS 用於決定要將使用者重新導向後權杖發行的位置。 您不使用這個位址重新導向使用者，因為這類的重新導向有安全性弱點 STS 的建議。 STS （可能藉由比較一組預先設定的回覆地址的目的或透過其他方法） 必須驗證的回覆地址，請確定傳送回覆至了解已知且安全的位置。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">嘗試將屬性設為不是有效的絕對 URI 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在 WS-同盟登入要求 ("wsignin1.0") 中使用的 wreq 參數值。</summary>
        <value>以 <see langword="&lt;wst:RequestSecurityToken&gt;" /> 項目表示的權杖發佈要求。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wreq 參數是選擇性的。 如果<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A>屬性設定為`null`或登入要求中未包含空字串，wreq 參數。  
  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 只在模組重新導向至與 WS-同盟登入要求訊息的安全性權杖服務 (STS) 之前，會引發這個事件。 所指定 STS<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在 WS-同盟登入要求 ("wsignin1.0") 中使用的 wreqptr 參數值。</summary>
        <value>URL，指定以 <see langword="&lt;wst:RequestSecurityToken&gt;" /> 項目表示之語彙基元發行要求的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wreqptr 參數是選擇性的。 如果<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A>屬性設定為`null`或登入要求中未包含空字串，wreq 參數。  
  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 只在模組重新導向至與 WS-同盟登入要求訊息的安全性權杖服務 (STS) 之前，會引發這個事件。 所指定 STS<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">嘗試將屬性設為不是有效的絕對 URI 的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指定安全性權杖服務 (STS) 通訊是否必須使用 HTTPS 通訊協定。</summary>
        <value>如果必須使用 HTTPS 保護與 STS 的通訊，則為 <see langword="true" />，否則為<see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在 WS-同盟登入要求 ("wsignin1.0") 中使用的 wres 參數值。</summary>
        <value>用來向 Security Token Service (STS) 識別所存取之資源 (信賴憑證者 (RP)) 的 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wtrealm 參數，這是由<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A>應該使用屬性，而非這個參數。  
  
 Wres 參數是選擇性的。 如果<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A>屬性設定為`null`或登入要求中未包含空字串，wres 參數。  
  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 只在模組重新導向至與 WS-同盟登入要求訊息的安全性權杖服務 (STS) 之前，會引發這個事件。 所指定 STS<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>已經從安全性權杖服務 (STS) 收到安全性權杖時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以加入事件處理常式之前驗證修改語彙基元。 在事件處理常式您可以存取的安全性權杖，透過<xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType>屬性。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>事件是否可取消事件，您可以設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`終止處理 WS-同盟登入回應訊息的事件處理常式中。  
  
 會引發這個事件，從內<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>處理接收從安全性權杖服務 (STS) 的 WS-同盟登入回應訊息 (「 wsignin1.0 」) 時，事件處理常式委派。 從 wresult 或 wresultptr 參數在登入回應訊息中，但驗證安全性權杖之前，已還原序列化安全性權杖之後，就會引發此事件。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>從安全性權杖服務 (STS) 接收到的安全性權杖經過驗證之後，但在建立工作階段安全性權杖之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以加入事件處理常式來修改它用來建立工作階段權杖之前，處理從安全性權杖服務 (STS) 的 WS-同盟登入回應訊息時所建立的主體。 在事件處理常式，您可以存取透過主體<xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A>屬性。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>事件是否可取消事件，您可以設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>屬性`true`終止處理 WS-同盟登入回應訊息的事件處理常式中。  
  
 會引發這個事件，從內<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>處理接收從安全性權杖服務 (STS) 的 WS-同盟登入回應訊息 (「 wsignin1.0 」) 時，事件處理常式委派。 會引發此事件只會在還原序列化 wresult 從安全性權杖之後或 wresultptr 參數登入回應訊息中的已驗證，以及工作階段安全性權杖建立之前。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>根據從安全性權杖服務 (STS) 接收到的安全性權杖，已經建立工作階段安全性權杖時發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以加入事件處理常式若要修改的工作階段權杖，再用來設定執行緒主體並寫入至工作階段 cookie。 在事件處理常式，您可以存取透過工作階段權杖<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType>屬性。 您可以指定工作階段 cookie 是否應將設定寫入<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType>屬性。  
  
 會引發這個事件，從內<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>處理接收從安全性權杖服務 (STS) 的 WS-同盟登入回應訊息 (「 wsignin1.0 」) 時，事件處理常式委派。 會引發此事件之後已從 wresult 還原序列化安全性權杖或已驗證登入回應訊息中的 wresultptr 參數，並宣告前上設定主體<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>(以及<xref:System.Web.HttpContext.User%2A>屬性<xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  Microsoft 建議您提供的處理常式操作參考模式中的工作階段<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType>global.asax.cs 檔案，並在設定中的事件<xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType>屬性對這個語彙基元傳入<xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType>屬性。 這可確保工作階段權杖仍會為每個要求的參考模式運作，並會優先使用前者只設定<xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType>工作階段驗證模組上的屬性。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">從來自 STS 的 WS-Federation 登入回應訊息建立而成的工作階段安全性權杖。</param>
        <param name="isSession">
          <see langword="true" /> 表示要寫入 cookie，代表包含在回應中的工作階段，否則為 <see langword="false" />。</param>
        <summary>設定執行緒主體，並選擇性地寫入工作階段 cookie。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 從要求處理管線實作中呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>事件處理常式委派。 這個方法會執行下列動作：  
  
1.  叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A>方法，以引發<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>事件。 若要修改的工作階段權杖，再用來設定執行緒主體並寫入工作階段 cookie，並指定是否可寫入的工作階段 cookie，您可以使用此事件。  
  
2.  叫用<xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A>方法上設定的工作階段驗證模組 (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) 來設定執行緒主體以及 （選擇性） 撰寫工作階段 cookie。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sessionToken" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>使用者已登入之後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果要求張貼至登入頁面，頁面上的控制項會引發這個事件，不是此模組。  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>登出期間刪除工作階段之後發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 透過呼叫就會引發這個事件<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A>內的方法<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>方法並登出信賴憑證者的合作對象 (RP) 在工作階段。 當同盟登出功能，透過的這樣做時，不會引發事件<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法。  
  
 您可以加入之後已刪除的工作階段 cookie 應用程式所需執行任何其他處理的事件處理常式。  
  
 不保證會針對每個工作階段呼叫這個事件。 Cookie 可能會在刪除用戶端，比方說，因此永遠不會引發這個事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">WSFAM 會將這個值儲存在 WS-同盟登入要求中的 wctx 參數，但是模組不會在處理登入要求或登入回應時使用該值。 您可以將它設定為任何值。 不必是唯一的。 如需詳細資訊，請參閱 <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" /> 方法。</param>
        <summary>透過 WS-Federation 通訊協定執行安全性權杖服務 (STS) 登入。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 預設實作會叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>方法，以在登入時執行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要包含在 WS-Federation 登入要求之 wctx 參數中的應用程式特定內容值。</summary>
        <value>要加入至登入要求之 wctx 參數的應用程式特定內容值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>叫用方法時，就會產生登入訊息包含 wctx 參數具有下列格式： `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`。 值<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A>會儲存在`cx`參數。 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> 可以直接從您的程式碼呼叫。 它也稱為 WSFAM 執行被動重新導向時以及當任一<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A>方法或<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A>應用程式碼會叫用方法。  
  
 雖然 WSFAM 儲存<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A>登入要求訊息，如果應用程式回應處理期間所使用的值中的值，您必須提供邏輯解壓縮從 wctx 參數登入回應訊息中。  
  
 如需的格式和處理 wctx 參數的詳細資訊，請參閱<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A>方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當登入發生錯誤時引發。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果要求張貼至登入頁面，頁面上的控制項會引發這個事件，不是此模組。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>登出期間刪除工作階段之前發生。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 透過呼叫就會引發這個事件<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A>內的方法<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>方法並登出信賴憑證者的合作對象 (RP) 在工作階段。 當同盟登出功能，透過的這樣做時，不會引發事件<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法。  
  
 您可以加入事件處理常式來執行工作階段 cookie 中刪除之前，應用程式所需的任何其他處理。 您可以閱讀<xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*>屬性來判斷是否登出已接收 WS-同盟登出清除要求訊息 (「 wsignoutcleanup1.0") 的結果從安全性權杖服務 (STS)，或已在來起始事件處理常式RP。  
  
 不保證會針對每個工作階段呼叫這個事件。 Cookie 可能會在刪除用戶端，比方說，因此永遠不會引發這個事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定查詢字串，包含 WS-同盟登入要求 ("wsignin1.0") 中要傳送的任何其他參數。</summary>
        <value>URL 片段包含額外的訊息中的參數以下列格式： <c>param1 = value1&amp;param2 = value2&amp;paramN = 看值</c>。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個屬性在登入要求中傳送額外的參數。 這些是應用程式特有的參數不是其中一個參數所指定的 WS-同盟通訊協定。 若要從要求中移除額外的參數設定此屬性設為空字串。  
  
 您可以藉由新增的處理常式覆寫這項設定在每個 HTTP 要求<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>事件。 只在模組重新導向至與 WS-同盟登入要求訊息的安全性權杖服務 (STS) 之前，會引發這個事件。 所指定 STS<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">嘗試將屬性設為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>登出目前工作階段。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 刪除目前工作階段。  
  
 沒有登出要求訊息 (「 wsignout1.0 」) 會傳送給安全性權杖服務 (STS)。 若要登出在 STS 使用 WS-同盟通訊協定，使用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>豋出目前工作階段並要求重新導向至目前 HTTP 要求中指定的 URL。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 刪除目前工作階段，並將瀏覽器重新導向回到目前 HTTP 要求中指定的 URL。  
  
 叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType>方法`redirectUrl`參數設定為目前要求的 URL。  
  
 沒有登出要求訊息 (「 wsignout1.0 」) 會傳送給安全性權杖服務 (STS)。 若要登出在 STS 使用 WS-同盟通訊協定，使用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest">如果要求是由 IP-STS 透過 WS-同盟登出清除要求訊息 ("wsignoutcleanup1.0") 所啟始，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>登出目前工作階段並引發適當的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會執行刪除目前工作階段，並引發適當的登出事件的實際工作。 方法會執行下列動作：  
  
1.  叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A>方法，以引發<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>事件。 事件處理常式可以提供任何必要的處理工作階段遭到刪除。 <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType>屬性設定為根據`isIPRequest`參數。  
  
2.  呼叫<xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType>方法在目前工作階段驗證管理員若要刪除的工作階段 cookie。  
  
     叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A>方法，以引發<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>事件。  
  
3.  如果在登出處理期間發生錯誤，會叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A>方法，以引發<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>事件。 事件處理常式可以取消處理，並防止傳回給呼叫端的例外狀況 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 您可以呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType>方法`isIPRequest`參數集`false`登出工作階段，而不需執行重新導向。 所有的其他多載最終呼叫方法<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>方法 (具有`isIPRequest`參數設定為`false`) 來執行處理登出。 這個方法從呼叫<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType>方法`isIPRequest`參數集`true`登出工作階段，當它正在處理的 WS-同盟登出清除訊息 (「 wsignoutcleanup1.0")。  
  
 沒有登出要求訊息 (「 wsignout1.0 」) 會傳送給安全性權杖服務 (STS)。 若要登出在 STS 使用 WS-同盟通訊協定，使用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">工作階段刪除後瀏覽器應該重新導向的 URL。</param>
        <summary>登出目前工作階段並要求重新導向至指定的 URL。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 刪除目前工作階段，並將瀏覽器重新導向回到指定的 URL。  
  
 叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType>方法`redirectUrl`參數與`initiateSignoutCleanup`設定`false`。  
  
 沒有登出要求訊息 (「 wsignout1.0 」) 會傳送給安全性權杖服務 (STS)。 若要登出在 STS 使用 WS-同盟通訊協定，使用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> 不是有效的 URI。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">登出後瀏覽器應該重新導向的 URL。</param>
        <param name="initiateSignoutCleanup">一律設為 <see langword="false" />。 不支援將這個參數設為 <see langword="true" />。</param>
        <summary>登出目前工作階段並要求重新導向至指定的 URL。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 刪除目前工作階段，並將瀏覽器重新導向回到指定的 URL。  
  
 叫用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>方法`initiateSignoutCleanup`參數集`false`。  
  
 沒有登出要求訊息 (「 wsignout1.0 」) 會傳送給安全性權杖服務 (STS)。 若要登出在 STS 使用 WS-同盟通訊協定，使用<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> 不是有效的 URI。</exception>
        <exception cref="T:System.NotImplementedException">如果<paramref name="initiateSignoutCleanup" /> 是 <see langword="true" />，<see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> 類別會擲回此例外狀況。 不要將這個參數設定為 <see langword="true" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當登出發生錯誤時引發。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 透過呼叫就會引發這個事件<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A>內的方法<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType>方法並登出信賴憑證者的合作對象 (RP) 在工作階段。 當同盟登出功能，透過的這樣做時，不會引發事件<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法。  
  
 <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>是可取消事件。 您可以設定<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>中若要避免這個例外狀況傳回給啟動者的登出造成錯誤的事件處理常式屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定查詢字串，包含 WS-同盟登出要求 ("wsignout1.0") 中要傳送的任何其他參數。</summary>
        <value>URL 片段包含額外的訊息中的參數以下列格式： <c>param1 = value1&amp;param2 = value2&amp;paramN = 看值</c>。 預設為空字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 依預設，這個屬性會初始化從`signOutQueryString`屬性[ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md)組態檔中的項目。 它被要包含在 WS-同盟登出要求中傳送任何應用程式特有的參數。 若要移除這些參數，您可以設定此屬性設為空字串。  
  
 WSFAM 不會直接; 使用這個屬性不過，您可以將它傳遞給<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A>方法，以建立完整的 WS-同盟登出 URL，然後由您的程式碼。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">嘗試將屬性設為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要在 WS-同盟登出要求 ("wsignout1.0") 期間使用的 wreply 參數值。</summary>
        <value>登出後，應該由安全性權杖服務 (STS) 透過 WS-Federation 通訊協定將用戶端重新導向的 URL。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 依預設，這個屬性會初始化從`signOutReply`屬性[ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md)組態檔中的項目。 它被為了代表 wreply 參數 WS-同盟登出要求中。  
  
 Wreply 參數是選擇性的。 如果<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A>屬性設定為`null`或登出要求中未包含空字串，wreply 參數。  
  
 WSFAM 不直接使用這個屬性。 不過，您可以將它傳遞給<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A>方法時執行 WS-同盟登出從您的程式碼，或者您可以將它傳遞給<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A>方法，以建立完整的 WS-同盟登出 URL。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>確認 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> 和 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> 屬性不是空的，且如果 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> 屬性為 <see langword="true" />，則 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> 和 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> 的指定 URI 與 HTTPS 相容。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> 為 <see langword="null" /> 或空字串。  -或-  <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> 為 <see langword="null" /> 或空字串。  -或-  <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> 為 <see langword="true" />，而且 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> 不符合 HTTPS 標準。  -或-  <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> 為 <see langword="true" />，而且 <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> 不符合 HTTPS 標準。</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> 物件，以用於還原序列化 WS-Federation 登入回應訊息時，取得安全性權杖服務 (STS) 所發出的權杖。</summary>
        <value>
          <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> 物件，以用於還原序列化 WS-Federation 登入回應訊息時，取得安全性權杖服務 (STS) 所發出的權杖。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">嘗試將屬性設為 <see langword="null" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>