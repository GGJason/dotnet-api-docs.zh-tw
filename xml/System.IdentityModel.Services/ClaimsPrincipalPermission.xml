<Type Name="ClaimsPrincipalPermission" FullName="System.IdentityModel.Services.ClaimsPrincipalPermission">
  <TypeSignature Language="C#" Value="public sealed class ClaimsPrincipalPermission : System.Security.IPermission, System.Security.ISecurityEncodable, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ClaimsPrincipalPermission extends System.Object implements class System.Security.IPermission, class System.Security.ISecurityEncodable, class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClaimsPrincipalPermission&#xA;Implements IPermission, ISecurityEncodable, IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsPrincipalPermission sealed : System::Security::IPermission, System::Security::ISecurityEncodable, System::Security::Permissions::IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.IPermission</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.ISecurityEncodable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="09b44-101">表示權限，會使用<see cref="T:System.Security.Claims.ClaimsAuthorizationManager" />實作來判斷是否應授與使用中的主體資源存取權。</span><span class="sxs-lookup"><span data-stu-id="09b44-101">Represents a permission that uses a <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> implementation to determine if access to a resource should be granted to the active principal.</span></span> <span data-ttu-id="09b44-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="09b44-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09b44-103"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission>類別可讓您透過執行命令式存取檢查<xref:System.Security.Claims.ClaimsAuthorizationManager>針對應用程式設定。</span><span class="sxs-lookup"><span data-stu-id="09b44-103">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class provides the capability to perform imperative access checks by using the <xref:System.Security.Claims.ClaimsAuthorizationManager> that is configured for an application.</span></span> <span data-ttu-id="09b44-104">藉由叫用<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>方法或靜態<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A>方法，您可以提供保護您的程式碼，根據為您宣告的驗證管理員定義的授權原則的執行路徑中的資源。</span><span class="sxs-lookup"><span data-stu-id="09b44-104">By invoking the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method or the static <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method, you can provide protection to resources from within the execution path of your code according to the authorization policy defined for your claims authentication manager.</span></span> <span data-ttu-id="09b44-105">宣告式存取檢查可以藉由執行<xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>類別。</span><span class="sxs-lookup"><span data-stu-id="09b44-105">Declarative access checks can be performed by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> class.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09b44-106"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission>類別會使用所設定的宣告授權管理員<xref:System.IdentityModel.Configuration.IdentityConfiguration>設定下<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="09b44-106">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class uses the claims authorization manager configured by the <xref:System.IdentityModel.Configuration.IdentityConfiguration> that is set under the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="09b44-107">這是在所有情況下，即使其中未使用 WS-同盟; 的案例中，則為 true例如，作用中 (WCF) Web 應用程式和主控台應用程式。</span><span class="sxs-lookup"><span data-stu-id="09b44-107">This is true in all cases, even in scenarios where WS-Federation is not used; for example, active (WCF) Web applications and Console applications.</span></span> <span data-ttu-id="09b44-108">您可以指定在組態或以程式設計的方式宣告授權管理員。</span><span class="sxs-lookup"><span data-stu-id="09b44-108">You can specify the claims authorization manager either in configuration or programmatically.</span></span> <span data-ttu-id="09b44-109">在組態檔中指定的宣告授權管理員，請設定[ &lt;claimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)項目底下[ &lt;identityConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)項目，並確定這個身分識別組態由參考[ &lt;federationConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md)由執行階段載入的項目 （例如，藉由設定`identityConfigurationName`屬性)。</span><span class="sxs-lookup"><span data-stu-id="09b44-109">To specify the claims authorization manager in a configuration file, set the [&lt;claimsAuthorizationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element under an [&lt;identityConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) element and ensure that this identity configuration is referenced by the [&lt;federationConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) element that is loaded by the runtime (for example, by setting the `identityConfigurationName` attribute).</span></span> <span data-ttu-id="09b44-110">若要以程式設計方式設定 claims authorization manager 授權，提供的處理常式<xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType>事件。</span><span class="sxs-lookup"><span data-stu-id="09b44-110">To set the claims authorization manager programmatically, provide a handler for the <xref:System.IdentityModel.Services.FederatedAuthentication.FederationConfigurationCreated?displayProperty=nameWithType> event.</span></span>  
  
 <span data-ttu-id="09b44-111">上一層，所提供的功能<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>類似於透過提供以角色為基礎的存取檢查 (RBAC)<xref:System.Security.Permissions.PrincipalPermission>類別; 不過，<xref:System.Security.Claims.ClaimsAuthorizationManager>類別會執行使用中的主體所呈現的宣告為基礎的檢查。</span><span class="sxs-lookup"><span data-stu-id="09b44-111">On one level, the functionality provided by <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> is similar to the role-based access checks (RBAC) provided through the <xref:System.Security.Permissions.PrincipalPermission> class; however, the <xref:System.Security.Claims.ClaimsAuthorizationManager> class performs checks based on the claims presented by the active principal.</span></span> <span data-ttu-id="09b44-112">這可讓更多資料粒度而不是可透過純 RBAC，其中許多權限通常會收集在單一角色。</span><span class="sxs-lookup"><span data-stu-id="09b44-112">This enables far more granularity than is available through pure RBAC, where many permissions are typically collected under a single role.</span></span> <span data-ttu-id="09b44-113">或許，更重要的是，宣告為基礎的授權啟用更好的分隔的商務邏輯和授權原則，因為可以要求程式碼中的資源上的特定動作的權限和後端原則可以用來設定哪些宣告呈現實體必須擁有才能滿足要求。</span><span class="sxs-lookup"><span data-stu-id="09b44-113">Perhaps, more importantly, claims-based authorization enables better separation of business logic and authorization policy because permission can be demanded for a specific action on a resource in code and back-end policy can be used to configure which claims the presenting entity must possess in order to satisfy the demand.</span></span> <span data-ttu-id="09b44-114">喜歡 RBAC，<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>執行使用者為基礎的存取檢查，也就是與不同的是由衍生自的類別所實作的程式碼存取安全性<xref:System.Security.CodeAccessPermission>類別，並且使用以確定程式碼的所有呼叫端具有已授與權限時，堆疊查核行程<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>其上執行檢查只有目前的主體。</span><span class="sxs-lookup"><span data-stu-id="09b44-114">Like RBAC, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> performs a user-based access check, that is, unlike code access security implemented by classes that derive from the <xref:System.Security.CodeAccessPermission> class and use a stack walk to ensure that all callers of the code have been granted a permission, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> performs its check only on the current principal.</span></span>  
  
 <span data-ttu-id="09b44-115">靜態<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A>方法會檢查指定的動作，對指定資源的存取權。</span><span class="sxs-lookup"><span data-stu-id="09b44-115">The static <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method checks access for a specified action on a specified resource.</span></span> <span data-ttu-id="09b44-116">資源和動作都是字串，且通常是 Uri。</span><span class="sxs-lookup"><span data-stu-id="09b44-116">The resource and action are both strings and are typically URIs.</span></span> <span data-ttu-id="09b44-117">您也可以初始化的執行個體<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>與動作、 資源和呼叫<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09b44-117">You can also initialize an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> with an action and a resource and call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method.</span></span> <span data-ttu-id="09b44-118">雖然建構函式只接受單一資源和動作、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>物件可以透過結合<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A>和<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09b44-118">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="09b44-119">使用這些方法所建立的權限可能包含多個資源動作配對。</span><span class="sxs-lookup"><span data-stu-id="09b44-119">A permission created by using these methods may contain multiple resource-action pairs.</span></span>  
  
 <span data-ttu-id="09b44-120">這兩種方法叫用決定存取<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType>方法設定的 claims authorization manager 授權與<xref:System.Security.Claims.AuthorizationContext>作用中的主體所組成 (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>)、 資源和動作。</span><span class="sxs-lookup"><span data-stu-id="09b44-120">Both methods determine access by invoking the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>), the resource, and the action.</span></span> <span data-ttu-id="09b44-121">它們會擲回<xref:System.Security.SecurityException>如果目前的主體沒有權限資源上執行動作否則繼續執行。</span><span class="sxs-lookup"><span data-stu-id="09b44-121">They throw a <xref:System.Security.SecurityException> if the current principal is not authorized to perform the action on the resource; otherwise, execution proceeds.</span></span>  
  
 <span data-ttu-id="09b44-122">如果是<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>，其中包含多個資源動作組，<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType>資源動作組所包含的權限中的每個叫用方法。</span><span class="sxs-lookup"><span data-stu-id="09b44-122">In the case of a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> that contains multiple resource-action pairs, the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method is invoked for each of the resource-action pairs contained in the permission.</span></span>  <span data-ttu-id="09b44-123">呼叫<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>成功，作用中的主體必須經過授權，所有包含的權限中的資源動作組。</span><span class="sxs-lookup"><span data-stu-id="09b44-123">For the call to <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed, the active principal must be authorized for all of the resource-action pairs contained in the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09b44-124">下列範例示範如何使用來保護資源<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>方法，<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A>方法，或<xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute>宣告。</span><span class="sxs-lookup"><span data-stu-id="09b44-124">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method, the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method, or a <xref:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute> declaration.</span></span> <span data-ttu-id="09b44-125">在每個案例中，設定<xref:System.Security.Claims.ClaimsAuthorizationManager>會叫用來評估目前的主體，針對指定的資源和動作。</span><span class="sxs-lookup"><span data-stu-id="09b44-125">In each case, the configured <xref:System.Security.Claims.ClaimsAuthorizationManager> is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="09b44-126">如果目前的主體不在指定的資源上指定的動作所需的授權<xref:System.Security.SecurityException>便擲回，否則繼續執行。</span><span class="sxs-lookup"><span data-stu-id="09b44-126">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#1)]  
  
 <span data-ttu-id="09b44-127">下列 XML 說明使用自訂宣告授權所需的最小設定管理員<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>類別。</span><span class="sxs-lookup"><span data-stu-id="09b44-127">The following XML shows the minimum configuration required to use a custom claims authorization manager with the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> class.</span></span> <span data-ttu-id="09b44-128">您必須至少同時宣告`system.identityModel`和`system.identityModel.services`中`<configSection>`項目，然後指定您的授權管理員中[ &lt;claimsAuthorizationManager&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md)下預設身分識別組態項目。</span><span class="sxs-lookup"><span data-stu-id="09b44-128">You must, at a minimum, declare both the `system.identityModel` and the `system.identityModel.services` sections in the `<configSection>` element and then specify your authorization manager in a [&lt;claimsAuthorizationManager&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthorizationmanager.md) element under the default identity configuration.</span></span> <span data-ttu-id="09b44-129">這可確保您的授權管理員從預設同盟組態參考。</span><span class="sxs-lookup"><span data-stu-id="09b44-129">This will ensure that your authorization manager is referenced from the default federation configuration.</span></span> <span data-ttu-id="09b44-130">或者，您可以指定在其下中指定授權管理員的身分識別設定名稱`identityConfigurationName`屬性[ &lt;federationConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md)項目。</span><span class="sxs-lookup"><span data-stu-id="09b44-130">Alternatively, you can specify the name of the identity configuration under which your authorization manager is specified in the `identityConfigurationName` attribute of the [&lt;federationConfiguration&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/federationconfiguration.md) element.</span></span>  
  
```xml  
<?xml version="1.0" encoding="utf-8" ?>  
<configuration>  
  <configSections>  
    <!-- WIF configuration sections -->  
    <section name="system.identityModel" type="System.IdentityModel.Configuration.SystemIdentityModelSection, System.IdentityModel, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
    <section name="system.identityModel.services" type="System.IdentityModel.Services.Configuration.SystemIdentityModelServicesSection, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>  
  </configSections>  
  
  <startup>  
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />  
  </startup>  
  
  <system.identityModel>  
    <identityConfiguration>  
      <claimsAuthorizationManager type ="MyClaimsAuthorizationManager.MyClaimsAuthorizationManager, MyClaimsAuthorizationManager"/>  
    </identityConfiguration>  
  </system.identityModel>  
  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Services.ClaimsPrincipalPermissionAttribute" />
    <altmember cref="P:System.IdentityModel.Services.FederatedAuthentication.FederationConfiguration" />
    <altmember cref="T:System.Security.Claims.ClaimsAuthorizationManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsPrincipalPermission (string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsPrincipalPermission(System::String ^ resource, System::String ^ action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="09b44-131">其主體應該要授權的資源。</span><span class="sxs-lookup"><span data-stu-id="09b44-131">The resource on which the principal should be authorized.</span></span></param>
        <param name="action"><span data-ttu-id="09b44-132">應授權原則的動作。</span><span class="sxs-lookup"><span data-stu-id="09b44-132">The action for which the principal should be authorized.</span></span></param>
        <summary><span data-ttu-id="09b44-133">建立 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="09b44-133">Creates a new instance of the <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09b44-134"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission>物件使用指定的資源動作組初始化。</span><span class="sxs-lookup"><span data-stu-id="09b44-134">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> object is initialized with the specified resource-action pair.</span></span> <span data-ttu-id="09b44-135">您可以呼叫<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>方法，以執行存取檢查。</span><span class="sxs-lookup"><span data-stu-id="09b44-135">You can call the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method to perform an access check.</span></span>  
  
 <span data-ttu-id="09b44-136">雖然建構函式只接受單一資源和動作、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>物件可以透過結合<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A>和<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09b44-136">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="09b44-137">透過這些方法建立的權限可能包含多個資源動作配對。</span><span class="sxs-lookup"><span data-stu-id="09b44-137">The permission created through these methods may contain multiple resource-action pairs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="09b44-138"><paramref name="resource" /> 為 <see langword="null" /> 或空字串。</span><span class="sxs-lookup"><span data-stu-id="09b44-138"><paramref name="resource" /> is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="09b44-139"><paramref name="action" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09b44-139"><paramref name="action" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public static void CheckAccess (string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CheckAccess(string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub CheckAccess (resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void CheckAccess(System::String ^ resource, System::String ^ action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resource"><span data-ttu-id="09b44-140">其主體應該要授權的資源。</span><span class="sxs-lookup"><span data-stu-id="09b44-140">The resource on which the principal should be authorized.</span></span></param>
        <param name="action"><span data-ttu-id="09b44-141">應授權原則的動作。</span><span class="sxs-lookup"><span data-stu-id="09b44-141">The action for which the principal should be authorized.</span></span></param>
        <summary><span data-ttu-id="09b44-142">檢查目前主體獲得授權，可以對指定的資源執行指定的動作。</span><span class="sxs-lookup"><span data-stu-id="09b44-142">Checks if the current principal is authorized to perform the specified action on the specified resource.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09b44-143">主體必須經過授權，針對指定的資源上指定的動作或<xref:System.Security.SecurityException>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="09b44-143">The principal must be authorized for the specified action on the specified resource or the <xref:System.Security.SecurityException> exception is thrown.</span></span>  
  
 <span data-ttu-id="09b44-144"><xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType>設定的 claims authorization manager 授權的方法用來叫用<xref:System.Security.Claims.AuthorizationContext>作用中的主體所組成 (<xref:System.Threading.Thread.CurrentPrincipal%2A>)、 資源和動作。</span><span class="sxs-lookup"><span data-stu-id="09b44-144">The <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager is invoked with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09b44-145">下列範例示範如何使用來保護資源<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09b44-145">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.CheckAccess%2A> method.</span></span> <span data-ttu-id="09b44-146">設定的宣告授權管理員會叫用來評估目前的主體，針對指定的資源和動作。</span><span class="sxs-lookup"><span data-stu-id="09b44-146">The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="09b44-147">如果目前的主體不在指定的資源上指定的動作所需的授權<xref:System.Security.SecurityException>便擲回，否則繼續執行。</span><span class="sxs-lookup"><span data-stu-id="09b44-147">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09b44-148">不可以從 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 指派目前的主體。</span><span class="sxs-lookup"><span data-stu-id="09b44-148">The current principal is not assignable from <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span></span>  
  
 <span data-ttu-id="09b44-149">-或-</span><span class="sxs-lookup"><span data-stu-id="09b44-149">-or-</span></span>  
  
 <span data-ttu-id="09b44-150">沒有己設定的 <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" />。</span><span class="sxs-lookup"><span data-stu-id="09b44-150">There is no <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> configured.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="09b44-151">授權檢查失敗。</span><span class="sxs-lookup"><span data-stu-id="09b44-151">The authorization check failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Security", "CA2103:ReviewImperativeSecurity", Justification="It is expected that the runtime’s behavior would rely on changing data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09b44-152">傳回目前 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 執行個體的複本。</span><span class="sxs-lookup"><span data-stu-id="09b44-152">Returns a copy of the current <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> instance.</span></span></summary>
        <returns><span data-ttu-id="09b44-153">從目前執行個體複製的 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />。</span><span class="sxs-lookup"><span data-stu-id="09b44-153">A <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> copied from the current instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Demand">
      <MemberSignature Language="C#" Value="public void Demand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Demand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Demand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Demand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09b44-154">檢查目前主體是否獲得使用與目前執行個體相關聯之資源/動作配對的授權。</span><span class="sxs-lookup"><span data-stu-id="09b44-154">Checks if the current principal is authorized for the resource-action pairs associated with the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09b44-155">目前的主體必須經過授權，所有與這個執行個體相關聯的資源動作組或<xref:System.Security.SecurityException>擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="09b44-155">The current principal must be authorized for all of the resource-action pairs associated with this instance or the <xref:System.Security.SecurityException> exception is thrown.</span></span>  
  
 <span data-ttu-id="09b44-156">雖然建構函式只接受單一資源和動作、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>物件可以透過結合<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A>和<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09b44-156">Although the constructor only takes a single resource and action, <xref:System.IdentityModel.Services.ClaimsPrincipalPermission> objects can be combined through the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Union%2A> and <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect%2A> methods.</span></span> <span data-ttu-id="09b44-157">透過這些方法建立的權限可能包含多個資源動作配對。</span><span class="sxs-lookup"><span data-stu-id="09b44-157">The permission created through these methods may contain multiple resource-action pairs.</span></span>  
  
 <span data-ttu-id="09b44-158"><xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>方法會叫用<xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType>方法設定的 claims authorization manager 授權與<xref:System.Security.Claims.AuthorizationContext>作用中的主體所組成 (<xref:System.Threading.Thread.CurrentPrincipal%2A>)，資源，並針對每個資源動作組所包含的動作在 權限。</span><span class="sxs-lookup"><span data-stu-id="09b44-158">The <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method invokes the <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A?displayProperty=nameWithType> method of the configured claims authorization manager with an <xref:System.Security.Claims.AuthorizationContext> composed of the active principal (<xref:System.Threading.Thread.CurrentPrincipal%2A>), the resource, and the action for each of the resource-action pairs contained in the permission.</span></span> <span data-ttu-id="09b44-159">如<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>必須成對資源動作的權限中所包含的所有授權成功作用中主體。</span><span class="sxs-lookup"><span data-stu-id="09b44-159">For the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed the active principal must be authorized for all of the resource-action pairs that are contained in the permission.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09b44-160">下列範例示範如何使用來保護資源<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09b44-160">The following example shows how to protect a resource by using the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> method.</span></span> <span data-ttu-id="09b44-161">設定的宣告授權管理員會叫用來評估目前的主體，針對指定的資源和動作。</span><span class="sxs-lookup"><span data-stu-id="09b44-161">The configured claims authorization manager is invoked to evaluate the current principal against the specified resource and action.</span></span> <span data-ttu-id="09b44-162">如果目前的主體不在指定的資源上指定的動作所需的授權<xref:System.Security.SecurityException>便擲回，否則繼續執行。</span><span class="sxs-lookup"><span data-stu-id="09b44-162">If the current principal is not authorized for the specified action on the specified resource, a <xref:System.Security.SecurityException> is thrown; otherwise, execution proceeds.</span></span>  
  
 [!code-csharp[WifCppWithCam#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcppwithcam/cs/wifcppwithcam/program.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09b44-163">不可以從 <see cref="T:System.Security.Claims.ClaimsPrincipal" /> 指派目前的主體。</span><span class="sxs-lookup"><span data-stu-id="09b44-163">The current principal is not assignable from <see cref="T:System.Security.Claims.ClaimsPrincipal" />.</span></span>  
  
 <span data-ttu-id="09b44-164">-或-</span><span class="sxs-lookup"><span data-stu-id="09b44-164">-or-</span></span>  
  
 <span data-ttu-id="09b44-165">沒有己設定的 <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" />。</span><span class="sxs-lookup"><span data-stu-id="09b44-165">There is no <see cref="T:System.Security.Claims.ClaimsAuthorizationManager" /> configured.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="09b44-166">授權檢查失敗。</span><span class="sxs-lookup"><span data-stu-id="09b44-166">The authorization check failed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public void FromXml (System.Security.SecurityElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXml(class System.Security.SecurityElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub FromXml (element As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXml(System::Security::SecurityElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="09b44-167">用來重新建構權限的 XML 編碼。</span><span class="sxs-lookup"><span data-stu-id="09b44-167">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="09b44-168">使用指定的 XML 編碼重新建構目前的權限和它的狀態。</span><span class="sxs-lookup"><span data-stu-id="09b44-168">Reconstructs the current permission and its state from the specified XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09b44-169">重新建構權限的呼叫所建立的 XML 編碼<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09b44-169">Reconstructs a permission from the XML encoding created by a call to the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="09b44-170"><paramref name="element" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09b44-170"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="09b44-171">編碼方式包含無法辨識的項目或屬性或格式不正確的 XML。</span><span class="sxs-lookup"><span data-stu-id="09b44-171">The encoding contains unrecognized elements or attributes or improperly formed XML.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="09b44-172">與目前使用權限交集的使用權限。</span><span class="sxs-lookup"><span data-stu-id="09b44-172">The permission to intersect with the current permission.</span></span> <span data-ttu-id="09b44-173">這必須是 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="09b44-173">It must be an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="09b44-174">傳回新的使用權限，其為目前使用權限和指定之使用權限的交集。</span><span class="sxs-lookup"><span data-stu-id="09b44-174">Returns a permission that is the intersection of the current permission and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="09b44-175">新的 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />，表示目前使用權限和指定使用權限的交集；如果 <paramref name="target" /> 是 <paramref name="null" /> 或不是 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 的執行個體，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09b44-175">A new <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> that represents the intersection of the current permission and the specified permission; or <see langword="null" /> if <paramref name="target" /> is <paramref name="null" /> or is not an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09b44-176">傳回的權限有只出現在目前的權限和指定的權限中的資源動作組。</span><span class="sxs-lookup"><span data-stu-id="09b44-176">The permission that is returned has only the resource-action pairs that were present both in the current permission and in the specified permission.</span></span> <span data-ttu-id="09b44-177">存在於其中之一或其他的權限的資源動作組不包含。</span><span class="sxs-lookup"><span data-stu-id="09b44-177">Resource-action pairs that existed in only one or the other of the permissions are not included.</span></span> <span data-ttu-id="09b44-178">如<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>成功新權限，目前的主體只需要獲得目前權限與指定權限的共用資源動作組。</span><span class="sxs-lookup"><span data-stu-id="09b44-178">For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal only needs to be authorized for the resource-action pairs that were common to the current permission and the specified permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="09b44-179">要測試是否有子集關聯性的使用權限。</span><span class="sxs-lookup"><span data-stu-id="09b44-179">The permission to be tested for the subset relationship.</span></span> <span data-ttu-id="09b44-180">這必須是 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="09b44-180">It must be an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="09b44-181">傳回值，指出目前的使用權限是否為指定之使用權限的子集。</span><span class="sxs-lookup"><span data-stu-id="09b44-181">Returns a value that indicates whether current permission is a subset of the specified permission.</span></span></summary>
        <returns>
          <span data-ttu-id="09b44-182">如果目前的使用權限是指定之使用權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09b44-182"><see langword="true" /> if current permission is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09b44-183">目前的權限是指定權限的子集，如果所有包含在目前的權限的資源動作組也會出現在指定的權限。</span><span class="sxs-lookup"><span data-stu-id="09b44-183">The current permission is a subset of the specified permission if all of the resource-action pairs contained in the current permission are also present in the specified permission.</span></span> <span data-ttu-id="09b44-184">如果`target`是`null`或不是執行個體的<xref:System.IdentityModel.Services.ClaimsPrincipalPermission>、<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A>傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="09b44-184">If `target` is `null` or is not an instance of <xref:System.IdentityModel.Services.ClaimsPrincipalPermission>, the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.IsSubsetOf%2A> returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09b44-185">傳回指示權限是否不受限制的值。</span><span class="sxs-lookup"><span data-stu-id="09b44-185">Returns a value that indicates whether the permission is unrestricted.</span></span></summary>
        <returns>
          <span data-ttu-id="09b44-186">如果權限不受限制，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="09b44-186"><see langword="true" /> if the permission is unrestricted; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="09b44-187">一律傳回指出權限不受限制的 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="09b44-187">Always returns <see langword="true" /> indicating that permission is unrestricted.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::SecurityElement ^ ToXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09b44-188">傳回 XML 編碼格式的目前權限和其狀態。</span><span class="sxs-lookup"><span data-stu-id="09b44-188">Returns the XML encoded form of the current permission and its state.</span></span></summary>
        <returns><span data-ttu-id="09b44-189">XML 編碼格式的目前權限和其狀態。</span><span class="sxs-lookup"><span data-stu-id="09b44-189">The XML encoded form of the current permission and its state.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09b44-190">主體就可以重新建構的 XML 編碼格式藉由呼叫<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="09b44-190">The principal can be reconstructed from its XML encoded form by calling the <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.FromXml%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.ClaimsPrincipalPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="09b44-191">與目前使用權限結合的使用權限。</span><span class="sxs-lookup"><span data-stu-id="09b44-191">The permission to combine with current permission.</span></span> <span data-ttu-id="09b44-192">它必須是 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 型別。</span><span class="sxs-lookup"><span data-stu-id="09b44-192">It must be of type <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></param>
        <summary><span data-ttu-id="09b44-193">傳回新的使用權限，其為目前使用權限和指定之使用權限的聯集。</span><span class="sxs-lookup"><span data-stu-id="09b44-193">Returns a new permission that is the union of the current permission and the specified permission.</span></span> <span data-ttu-id="09b44-194"><see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />物件，含有所有出現在目前執行個體及目標執行個體的來源-動作組。</span><span class="sxs-lookup"><span data-stu-id="09b44-194"><see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> object that has all of the resource-action pairs that are present in the current instance and the target instance.</span></span></summary>
        <returns><span data-ttu-id="09b44-195">新的 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />，表示目前使用權限和指定使用權限的聯集；如果 <paramref name="target" /> 是 <paramref name="null" /> 或不是 <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> 的執行個體，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="09b44-195">A new <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" /> that represents the union of the current permission and the specified permission; or <see langword="null" /> if <paramref name="target" /> is <paramref name="null" /> or is not an instance of <see cref="T:System.IdentityModel.Services.ClaimsPrincipalPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09b44-196">傳回的權限都具有所有會在目前的權限的資源動作組和所有的資源動作組指定的權限。</span><span class="sxs-lookup"><span data-stu-id="09b44-196">The permission that is returned has all of the resource-action pairs that are present in the current permission and all of the resource-action pairs that are present the specified permission.</span></span> <span data-ttu-id="09b44-197">如<xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A>成功新權限，目前的主體必須經過授權，為存在於目前的權限的資源動作組與所有存在於指定的權限的資源動作組。</span><span class="sxs-lookup"><span data-stu-id="09b44-197">For a <xref:System.IdentityModel.Services.ClaimsPrincipalPermission.Demand%2A> to succeed on the new permission, the current principal must be authorized for all of the resource-action pairs that existed in the current permission and all of the resource-action pairs that existed in the specified permission.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>