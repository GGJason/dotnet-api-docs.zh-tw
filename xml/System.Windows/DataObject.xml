<Type Name="DataObject" FullName="System.Windows.DataObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15d195519d29a03d6b90fdce3b36eee9e28ce8be" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30680552" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataObject : System.Runtime.InteropServices.ComTypes.IDataObject, System.Windows.IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataObject extends System.Object implements class System.Runtime.InteropServices.ComTypes.IDataObject, class System.Windows.IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataObject" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataObject&#xA;Implements IDataObject, IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataObject sealed : System::Runtime::InteropServices::ComTypes::IDataObject, System::Windows::IDataObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.ComTypes.IDataObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IDataObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>提供 <see cref="T:System.Windows.IDataObject" /> 介面的基本實作，以定義不受格式影響的資料傳輸機制。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例將示範如何使用這個類別。  
  
 [!code-csharp[dragdrop_dragdropmisccode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring)]
 [!code-vb[dragdrop_dragdropmisccode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.DataObject" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.DataObject" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::Object ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">物件，表示儲存於這個資料物件的資料。</param>
        <summary>初始化 <see cref="T:System.Windows.DataObject" /> 類別的新執行個體，這個執行個體包含指定的資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會建立新的資料物件，並使用這個建構函式來初始化資料物件的字串。  在此情況下，根據儲存的資料類型自動決定適當的資料格式，預設會允許儲存資料的自動轉換。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_simple)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_simple)]  
  
 下列範例是先前範例的壓縮的版本。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_simple_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Simple_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_simple_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="data" /> 會參考 <see cref="T:System.Windows.DataObject" /> 物件。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">指定資料格式的字串。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <param name="data">物件，表示儲存於這個資料物件的資料。</param>
        <summary>初始化 <see cref="T:System.Windows.DataObject" /> 類別的新執行個體，這個執行個體包含指定的資料和其相關格式。格式是以字串指定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會建立新的資料物件，並使用這個建構函式來初始化資料物件和指定的資料格式的字串。  在此情況下，字串; 字串所指定的資料格式<xref:System.Windows.DataFormats>類別會提供一組預先定義的型別字串。 根據預設，允許使用預存資料的自動轉換。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring)]  
  
 下列範例是先前範例的壓縮的版本。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_typestring_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_TypeString_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_typestring_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 或 <paramref name="format" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(Type ^ format, System::Object ^ data);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">指定資料格式的 <see cref="T:System.Type" />。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <param name="data">要儲存在這個資料物件中的資料。</param>
        <summary>初始化 <see cref="T:System.Windows.DataObject" /> 類別的新執行個體，這個執行個體包含指定的資料和其相關格式；資料格式是以 <see cref="T:System.Type" /> 物件指定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會建立新的資料物件，並使用這個建構函式來初始化資料物件和指定的資料格式的字串。  在此情況下，所指定的資料格式<xref:System.Type>參數。  根據預設，允許使用預存資料的自動轉換。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_type)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_type)]  
  
 下列範例是先前範例的壓縮的版本。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_type_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_Type_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_type_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 或 <paramref name="format" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataObject (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.#ctor(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (format As String, data As Object, autoConvert As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataObject(System::String ^ format, System::Object ^ data, bool autoConvert);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">指定資料格式的字串。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <param name="data">要儲存在這個資料物件中的資料。</param>
        <param name="autoConvert">
          <see langword="true" /> 表示允許資料在擷取時轉換為其他格式。<see langword="false" /> 則表示禁止資料在擷取時轉換為其他格式。</param>
        <summary>初始化 <see cref="T:System.Windows.DataObject" /> 類別的新執行個體，這個執行個體包含指定的資料和其相關格式。格式是以字串指定。 這個多載包含 <see langword="Boolean" /> 旗標，表示資料是否可以在擷取時轉換為其他格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會建立新的資料物件，並使用這個建構函式來初始化資料物件和指定的資料格式的字串。  在此情況下，字串; 字串所指定的資料格式<xref:System.Windows.DataFormats>類別會提供一組預先定義的型別字串。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_autoconvert)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_autoconvert)]  
  
 下列範例是前述範例中的壓縮的版本。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert_Condensed](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_createdataobject_autoconvert_condensed)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_CreateDataObject_AutoConvert_Condensed](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_createdataobject_autoconvert_condensed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 或 <paramref name="format" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="AddCopyingHandler">
      <MemberSignature Language="C#" Value="public static void AddCopyingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectCopyingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddCopyingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectCopyingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddCopyingHandler (element As DependencyObject, handler As DataObjectCopyingEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddCopyingHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectCopyingEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectCopyingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要在其中加入事件處理常式的相依性物件  (<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />)。</param>
        <param name="handler">委派，參考處理常式方法以加入。</param>
        <summary>將 <see cref="E:System.Windows.DataObject.Copying" /> 事件處理常式加入指定的相依性物件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DataObject.Copying>事件發生時複製作業已完成將選取的內容轉換為所有指定的資料格式、 已儲存在相關聯的資料物件中的所有資料格式和準備資料物件放入系統剪貼簿，或開始拖放到作業。  
  
 若要檢查或修改資料物件，複製作業完成之後，並繼續進行後續的作業之前，使用此事件。 在整個複製作業可以取消藉由呼叫<xref:System.Windows.DataObjectEventArgs.CancelCommand%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.RemoveCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddPastingHandler">
      <MemberSignature Language="C#" Value="public static void AddPastingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectPastingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPastingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectPastingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddPastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPastingHandler (element As DependencyObject, handler As DataObjectPastingEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPastingHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectPastingEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectPastingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要在其中加入事件處理常式的相依性物件  (<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />)。</param>
        <param name="handler">委派，參考處理常式方法以加入。</param>
        <summary>將 <see cref="E:System.Windows.DataObject.Pasting" /> 事件處理常式加入指定的相依性物件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個事件來檢查資料物件，在貼上資料之前，並可能替代的動作，例如決定：  
  
-   **取消貼上**-取消整個貼上作業，藉由呼叫<xref:System.Windows.DataObjectEventArgs.CancelCommand%2A>方法。  
  
-   **選取替代格式**-指定的新值來變更選取貼上格式<xref:System.Windows.DataObjectPastingEventArgs.FormatToApply%2A>屬性。 選取新的格式必須支援要貼上的資料物件。  
  
    > [!NOTE]
    >  如果貼上格式已變更，請貼上目標支援新指定的格式。  
  
-   **插入新的格式**-如果您判斷，貼上資料物件中不支援所需的格式，更新以包含資料的版本中所需的格式資料物件。 自訂資料轉換器常用此程序的一部分。  
  
 變更貼上資料物件的內容 (<xref:System.Windows.DataObjectPastingEventArgs.DataObject%2A>) 不會變更資料儲存在系統剪貼簿，則任何這類變更只會套用至相關聯的貼上 命令相關聯的資料物件。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.RemovePastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="AddSettingDataHandler">
      <MemberSignature Language="C#" Value="public static void AddSettingDataHandler (System.Windows.DependencyObject element, System.Windows.DataObjectSettingDataEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSettingDataHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectSettingDataEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.AddSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSettingDataHandler (element As DependencyObject, handler As DataObjectSettingDataEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSettingDataHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectSettingDataEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectSettingDataEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要在其中加入事件處理常式的相依性物件  (<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />)。</param>
        <param name="handler">委派，參考處理常式方法以加入。</param>
        <summary>將 <see cref="E:System.Windows.DataObject.SettingData" /> 事件處理常式加入指定的相依性物件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DataObject.SettingData>複製或拖曳命令，針對每個要加入相關聯的資料物件的資料格式執行一次就會發生事件。 通常，此事件會連線至內容控制項，例如<xref:System.Windows.Controls.TextBox>。  
  
 這個事件處理常式可以用來選擇性地防止不必要的資料格式加入至資料物件，因此消除重複的資料格式的資料轉換處理並改善整體效能的複製作業。 若要跳過特定的資料格式，請呼叫<xref:System.Windows.DataObjectEventArgs.CancelCommand%2A>方法並指定要在中略過的格式<xref:System.Windows.DataObjectSettingDataEventArgs.Format%2A>屬性。 呼叫<xref:System.Windows.DataObjectEventArgs.CancelCommand%2A>這個事件的方法不會取消相關聯的複製或拖曳命令。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.RemoveSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsAudio">
      <MemberSignature Language="C#" Value="public bool ContainsAudio ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsAudio() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsAudio" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsAudio () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsAudio();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>查詢資料物件中是否有 <see cref="F:System.Windows.DataFormats.WaveAudio" /> 資料格式的資料。</summary>
        <returns>
          如果資料物件包含 <see cref="F:System.Windows.DataFormats.WaveAudio" /> 資料格式的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回`true`只有當指定的資料格式原本就存在於資料物件，這個方法就不會檢查是否存在的自動轉換的資料格式。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="Overload:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="ContainsFileDropList">
      <MemberSignature Language="C#" Value="public bool ContainsFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsFileDropList () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>查詢資料物件中是否有 <see cref="F:System.Windows.DataFormats.FileDrop" /> 資料格式的資料。</summary>
        <returns>
          如果資料物件包含 <see cref="F:System.Windows.DataFormats.FileDrop" /> 資料格式的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回`true`只有當指定的資料格式原本就存在於資料物件，這個方法就不會檢查是否存在的自動轉換的資料格式。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="Overload:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="ContainsImage">
      <MemberSignature Language="C#" Value="public bool ContainsImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsImage" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsImage () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>查詢資料物件中是否有 <see cref="F:System.Windows.DataFormats.Bitmap" /> 資料格式的資料。</summary>
        <returns>
          如果資料物件包含 <see cref="F:System.Windows.DataFormats.Bitmap" /> 資料格式的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回`true`只有當指定的資料格式原本就存在於資料物件，這個方法就不會檢查是否存在的自動轉換的資料格式。  
  
 點陣圖表示電腦圖形為記憶體中的位元陣列，而這些位元代表屬性的映像中的個別像素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="Overload:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ContainsText">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>查詢資料物件中是否有採用有效文字資料格式的資料。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsText" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsText () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>查詢資料物件中是否有 <see cref="F:System.Windows.DataFormats.UnicodeText" /> 格式的資料。</summary>
        <returns>
          如果資料物件包含 <see cref="F:System.Windows.DataFormats.UnicodeText" /> 資料格式的資料，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回`true`只有當指定的資料格式原本就存在於資料物件，這個方法就不會檢查是否存在的自動轉換的資料格式。  
  
 <xref:System.Windows.DataFormats.UnicodeText>資料格式表示的 16 位元的字元編碼的 Unicode，也稱為 utf-16 和 USC-2。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.DataObject.ContainsText(System.Windows.TextDataFormat)" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="ContainsText">
      <MemberSignature Language="C#" Value="public bool ContainsText (System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsText(valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.ContainsText(System.Windows.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsText (format As TextDataFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsText(System::Windows::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Windows.TextDataFormat" /> 列舉型別的成員，用以指定要查詢的文字資料格式。</param>
        <summary>查詢資料物件中是否有文字資料格式的資料。</summary>
        <returns>
          如果資料物件包含文字資料格式的資料則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回`true`只有當指定的資料格式原本就存在於資料物件，這個方法就不會檢查是否存在的自動轉換的資料格式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> 沒有指定有效的 <see cref="T:System.Windows.TextDataFormat" /> 成員。</exception>
        <altmember cref="M:System.Windows.DataObject.ContainsAudio" />
        <altmember cref="M:System.Windows.DataObject.ContainsFileDropList" />
        <altmember cref="M:System.Windows.DataObject.ContainsImage" />
        <altmember cref="M:System.Windows.DataObject.ContainsText" />
        <altmember cref="T:System.Windows.DataFormats" />
      </Docs>
    </Member>
    <Member MemberName="Copying">
      <MemberSignature Language="C#" Value="see AddCopyingHandler, and RemoveCopyingHandler" />
      <MemberSignature Language="ILAsm" Value="see AddCopyingHandler, and RemoveCopyingHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DataObject.Copying" />
      <MemberSignature Language="VB.NET" Value="see AddCopyingHandler, and RemoveCopyingHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CopyingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CopyingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.CopyingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CopyingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CopyingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="E:System.Windows.DataObject.Copying" /> 附加事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAudioStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetAudioStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream GetAudioStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetAudioStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAudioStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ GetAudioStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回資料流，這個資料流包含 <see cref="F:System.Windows.DataFormats.WaveAudio" /> 資料格式的資料。</summary>
        <returns>資料流，其中包含 <see cref="F:System.Windows.DataFormats.WaveAudio" /> 格式的資料。如果資料無法使用這個格式，則會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回資料流才指定格式原本就存在於資料物件。這個方法不會傳回自動轉換的資料。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="Overload:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>以指定的資料格式傳回資料。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetData(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">指定資料格式的字串。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <summary>以字串指定的格式傳回資料。</summary>
        <returns>物件，包含指定之格式的資料，如果資料無法使用指定的格式，則傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例會使用這個方法，以第一次檢查指定的資料格式是否可用，（原生或自動轉換）。如果指定的格式使用時，此範例會擷取資料使用<xref:System.Windows.DataObject.GetData%28System.String%29>方法。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getspecificdataformat)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getspecificdataformat)]  
  
 下列程式碼範例會使用<xref:System.Windows.DataObject.GetDataPresent%28System.String%2CSystem.Boolean%29>，先檢查是否指定的資料格式是使用原生方法 （自動轉換的資料格式已篩選）; 如果指定的格式使用時，此範例會擷取資料使用<xref:System.Windows.DataObject.GetData%28System.String%29>方法。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat_Native](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getspecificdataformat_native)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetSpecificDataFormat_Native](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getspecificdataformat_native)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(Type ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetData(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">指定資料格式的 <see cref="T:System.Type" />。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <summary>以 <see cref="T:System.Type" /> 物件指定的格式傳回資料物件。</summary>
        <returns>包含所指定格式之資料的資料物件，如果資料無法使用指定的格式，則會傳回 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetData(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">指定資料格式的字串。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <param name="autoConvert">
          <see langword="true" /> 表示嘗試自動將資料轉換為指定的格式；<see langword="false" /> 表示不進行資料格式轉換。</param>
        <summary>以指定的格式傳回資料物件，並選擇性地將資料轉換為指定的格式。</summary>
        <returns>包含所指定格式之資料的資料物件，如果資料無法使用指定的格式，則會傳回 <see langword="null" />。  
  
 如果 <paramref name="autoConvert" /> 參數為 <see langword="true" />，而資料無法轉換為指定的格式，或已停用自動轉換 (在 <paramref name="autoConvert" /> 參數為 <see langword="false" /> 的情況下呼叫 <see cref="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)" />)，則這個方法會傳回 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> 為 **null**。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>判斷資料是否以指定的格式儲存，或是否可轉換成指定的格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.DataObject.GetDataPresent%2A>判斷格式中是否有提供這個資料物件，然後再呼叫<xref:System.Windows.DataObject.GetData%2A>。 呼叫<xref:System.Windows.DataObject.GetFormats%2A>來取得這個資料物件中可用的所有格式的清單。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetDataPresent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">指定資料格式的字串。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <summary>判斷資料是否以字串指定的格式儲存，或是否可轉換成該格式。</summary>
        <returns>
          如果資料在指定的格式中，或是可以轉換成指定的格式則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.DataObject.GetDataPresent%2A>判斷格式中是否有提供這個資料物件，然後再呼叫<xref:System.Windows.DataObject.GetData%2A>。 呼叫<xref:System.Windows.DataObject.GetFormats%2A>來取得這個資料物件中可用的所有格式的清單。  
  
   
  
## Examples  
 下列範例會使用這個方法來查詢有特定的資料格式的描述項字串。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_String](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_string)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_String](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_string)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(Type ^ format);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetDataPresent(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Type" />，指定要檢查的資料格式。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <summary>判斷資料是否可以使用 <see cref="T:System.Type" /> 物件所指定的格式，或是否可轉換成該格式。</summary>
        <returns>
          如果資料在指定的格式中，或是可以轉換成指定的格式則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.DataObject.GetDataPresent%2A>判斷格式中是否有提供這個資料物件，然後再呼叫<xref:System.Windows.DataObject.GetData%2A>。 呼叫<xref:System.Windows.DataObject.GetFormats%2A>來取得這個資料物件中可用的所有格式的清單。  
  
   
  
## Examples  
 下列範例會使用這個方法來查詢特定的資料格式的類型存在。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Type](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_type)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Type](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_type)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">可指定要檢查之資料格式的字串。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <param name="autoConvert">
          <see langword="false" /> 表示只會檢查指定的格式，<see langword="true" /> 則表示會同時檢查這個資料物件中所儲存的資料是否可轉換為指定的格式。</param>
        <summary>判斷資料是否以指定的格式儲存，或是否可轉換成指定的格式。 <see langword="Boolean" /> 旗標表示如果資料無法使用指定的格式，是否檢查該資料能否轉換為該格式。</summary>
        <returns>
          如果資料在指定的格式中，或是可以轉換成指定的格式則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫<xref:System.Windows.DataObject.GetDataPresent%2A>判斷格式中是否有提供這個資料物件，然後再呼叫<xref:System.Windows.DataObject.GetData%2A>。 呼叫<xref:System.Windows.DataObject.GetFormats%2A>來取得這個資料物件中可用的所有格式的清單。  
  
   
  
## Examples  
 下列範例會使用這個方法來查詢資料的描述項字串，並指定如何處理自動轉換的資料格式。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Autoconvert](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_querydataformats_autoconvert)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_QueryDataFormats_Autoconvert](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_querydataformats_autoconvert)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileDropList">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection GetFileDropList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Specialized.StringCollection GetFileDropList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFileDropList" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileDropList () As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::StringCollection ^ GetFileDropList();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回字串集合，這個集合包含已置放之檔案的清單。</summary>
        <returns>字串集合，其中每個字串都指定已置放之檔案清單中的某個檔案的名稱，如果資料無法使用這個格式，則會傳回 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="Overload:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回格式清單，這個資料物件中的資料是以這些格式儲存，或是可以轉換成這些格式。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetFormats</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回格式清單，這個資料物件中的資料是以這些格式儲存，或是可以轉換成這些格式。</summary>
        <returns>字串陣列，其中每個字串都指定這個資料物件所支援之格式的名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需一組預先定義的資料格式，請參閱 <xref:System.Windows.DataFormats> 類別。  
  
   
  
## Examples  
 下列範例會使用這個方法，取得表示可用的資料物件 （原生和自動轉換） 中的所有資料格式的字串陣列。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getalldataformats)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getalldataformats)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.GetFormats(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert">
          <see langword="true" /> 表示擷取這個資料物件中的資料在儲存時所使用的所有格式，或所有其可轉換到的格式。<see langword="false" /> 則表示只擷取這個資料物件中的資料在儲存時所使用的格式。</param>
        <summary>傳回這個資料物件中的資料在儲存時所使用之格式的清單。 <see langword="Boolean" /> 旗標指出是否同時納入資料可自動轉換到的格式。</summary>
        <returns>字串陣列，其中每個字串都指定這個資料物件所支援之格式的名稱。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需一組預先定義的資料格式，請參閱 <xref:System.Windows.DataFormats> 類別。  
  
   
  
## Examples  
 下列範例會使用這個方法，以取得此項表示應只可用的資料格式的資料物件 （自動轉換的資料格式會篩選） 中的字串陣列。  
  
 [!code-csharp[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats_NativeOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/CSharp/Window1.xaml.cs#_dragdrop_getalldataformats_nativeonly)]
 [!code-vb[DragDrop_DragDropMiscCode#_DragDrop_GetAllDataFormats_NativeOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DragDrop_DragDropMiscCode/visualbasic/window1.xaml.vb#_dragdrop_getalldataformats_nativeonly)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Imaging.BitmapSource GetImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Imaging.BitmapSource GetImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetImage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImage () As BitmapSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Imaging::BitmapSource ^ GetImage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Imaging.BitmapSource</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回 <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> 物件，這個物件包含 <see cref="F:System.Windows.DataFormats.Bitmap" /> 格式的資料。</summary>
        <returns>
          <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> 物件，其中包含 <see cref="F:System.Windows.DataFormats.Bitmap" /> 格式的資料，如果資料無法使用這個格式，則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會傳回<xref:System.Windows.Media.Imaging.BitmapSource>物件是原生有可用資料時，或當資料可以是自動轉換成<xref:System.Windows.DataFormats.Bitmap>資料格式。  
  
 點陣圖表示電腦圖形為記憶體中的位元陣列，而這些位元代表屬性的映像中的個別像素。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="Overload:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetText">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回字串，這個字串包含這個資料物件中的文字資料。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetText" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回字串，這個字串包含這個資料物件中的 <see cref="F:System.Windows.DataFormats.UnicodeText" /> 資料。</summary>
        <returns>包含 <see cref="F:System.Windows.DataFormats.UnicodeText" /> 資料的字串，如果沒有可用的 <see cref="F:System.Windows.DataFormats.UnicodeText" /> 資料，則會傳回空字串。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DataFormats.UnicodeText>資料格式表示的 16 位元的字元編碼的 Unicode，也稱為 utf-16 和 USC-2。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="M:System.Windows.DataObject.GetText(System.Windows.TextDataFormat)" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.GetText(System.Windows.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (format As TextDataFormat) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(System::Windows::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.Windows.TextDataFormat" /> 的成員，指定要擷取的特定文字資料格式。</param>
        <summary>傳回字串，這個字串包含這個資料物件中使用所指定格式的文字資料。</summary>
        <returns>字串，其中包含指定之資料格式的文字資料，如果沒有可用的對應文字資料，則傳回空字串。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="format" /> 沒有指定有效的 <see cref="T:System.Windows.TextDataFormat" /> 成員。</exception>
        <altmember cref="M:System.Windows.DataObject.GetAudioStream" />
        <altmember cref="M:System.Windows.DataObject.GetFileDropList" />
        <altmember cref="M:System.Windows.DataObject.GetImage" />
        <altmember cref="M:System.Windows.DataObject.GetText" />
      </Docs>
    </Member>
    <Member MemberName="Pasting">
      <MemberSignature Language="C#" Value="see AddPastingHandler, and RemovePastingHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPastingHandler, and RemovePastingHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DataObject.Pasting" />
      <MemberSignature Language="VB.NET" Value="see AddPastingHandler, and RemovePastingHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PastingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PastingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PastingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.PastingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PastingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PastingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="E:System.Windows.DataObject.Pasting" /> 附加事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCopyingHandler">
      <MemberSignature Language="C#" Value="public static void RemoveCopyingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectCopyingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveCopyingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectCopyingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemoveCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveCopyingHandler (element As DependencyObject, handler As DataObjectCopyingEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveCopyingHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectCopyingEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectCopyingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要移除其中事件處理常式的相依性物件 (<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />)。</param>
        <param name="handler">委派，參考處理常式方法以移除。</param>
        <summary>從指定的相依性物件中移除 <see cref="E:System.Windows.DataObject.Copying" /> 事件處理常式。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.AddCopyingHandler(System.Windows.DependencyObject,System.Windows.DataObjectCopyingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemovePastingHandler">
      <MemberSignature Language="C#" Value="public static void RemovePastingHandler (System.Windows.DependencyObject element, System.Windows.DataObjectPastingEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePastingHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectPastingEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemovePastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePastingHandler (element As DependencyObject, handler As DataObjectPastingEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePastingHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectPastingEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectPastingEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要移除其中事件處理常式的相依性物件 (<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />)。</param>
        <param name="handler">委派，參考處理常式方法以移除。</param>
        <summary>從指定的相依性物件中移除 <see cref="E:System.Windows.DataObject.Pasting" /> 事件處理常式。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.AddPastingHandler(System.Windows.DependencyObject,System.Windows.DataObjectPastingEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSettingDataHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSettingDataHandler (System.Windows.DependencyObject element, System.Windows.DataObjectSettingDataEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSettingDataHandler(class System.Windows.DependencyObject element, class System.Windows.DataObjectSettingDataEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.RemoveSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSettingDataHandler (element As DependencyObject, handler As DataObjectSettingDataEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSettingDataHandler(System::Windows::DependencyObject ^ element, System::Windows::DataObjectSettingDataEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.DataObjectSettingDataEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">要移除其中事件處理常式的相依性物件 (<see cref="T:System.Windows.UIElement" /> 或 <see cref="T:System.Windows.ContentElement" />)。</param>
        <param name="handler">委派，參考處理常式方法以移除。</param>
        <summary>從指定的相依性物件中移除 <see cref="E:System.Windows.DataObject.SettingData" /> 事件處理常式。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.DataObject.AddSettingDataHandler(System.Windows.DependencyObject,System.Windows.DataObjectSettingDataEventHandler)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAudio">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>儲存這個資料物件中的音訊資料 (<see cref="F:System.Windows.DataFormats.WaveAudio" /> 資料格式)。  音訊資料可以是位元組陣列或資料流。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (byte[] audioBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudio(unsigned int8[] audioBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetAudio(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAudio (audioBytes As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAudio(cli::array &lt;System::Byte&gt; ^ audioBytes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBytes" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="audioBytes">位元組陣列，包含要儲存到資料物件中的音訊資料。</param>
        <summary>儲存這個資料物件中的音訊資料 (<see cref="F:System.Windows.DataFormats.WaveAudio" /> 資料格式)。 音訊資料會指定為位元組陣列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會將資料加入停用自動轉換 (呼叫相同<xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29>與`autoConvert`設`false`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioBytes" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
        <altmember cref="Overload:System.Windows.DataObject.SetText" />
      </Docs>
    </Member>
    <Member MemberName="SetAudio">
      <MemberSignature Language="C#" Value="public void SetAudio (System.IO.Stream audioStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudio(class System.IO.Stream audioStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetAudio(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAudio (audioStream As Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAudio(System::IO::Stream ^ audioStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="audioStream">資料流，包含要儲存到資料物件中的音訊資料。</param>
        <summary>儲存這個資料物件中的音訊資料 (<see cref="F:System.Windows.DataFormats.WaveAudio" /> 資料格式)。  音訊資料可指定為資料流。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會將資料加入停用自動轉換 (呼叫相同<xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29>與`autoConvert`設`false`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="audioStream" /> 為 <see langword="null" />。</exception>
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
        <altmember cref="Overload:System.Windows.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將指定的資料儲存到這個資料物件中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.SetData(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">物件，表示儲存於這個資料物件的資料。</param>
        <summary>將指定的資料儲存到這個資料物件中，從來源物件型別自動判斷資料格式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法會將資料與啟用的自動轉換 (呼叫相同<xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29>與`autoConvert`設`true`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 為 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">將資料傳送至系統剪貼簿的權限。  列舉型別相關聯： **AllClipboard**。</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.SetData(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">指定資料格式的字串。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <param name="data">物件，表示儲存於這個資料物件的資料。</param>
        <summary>將指定的資料連同一個或多個指定的資料格式儲存到這個資料物件中；資料格式是以字串指定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法會將資料與啟用的自動轉換 (呼叫相同<xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29>與`autoConvert`設`true`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 或 <paramref name="format" /> 為 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">將資料傳送至系統剪貼簿的權限。  列舉型別相關聯： **AllClipboard**。</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(Type ^ format, System::Object ^ data);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.SetData(System.Type,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">指定資料格式的 <see cref="T:System.Type" /> 物件。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <param name="data">物件，表示儲存於這個資料物件的資料。</param>
        <summary>使用一個或多個資料格式，將指定的資料儲存到這個資料物件中。資料格式是以 <see cref="T:System.Type" /> 物件指定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法會將資料與啟用的自動轉換 (呼叫相同<xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29>與`autoConvert`設`true`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 或 <paramref name="format" /> 為 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">將資料傳送至系統剪貼簿的權限。  列舉型別相關聯： **AllClipboard**。</permission>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object, autoConvert As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetData(System::String ^ format, System::Object ^ data, bool autoConvert);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">指定資料格式的字串。 如需一組預先定義的資料格式，請參閱 <see cref="T:System.Windows.DataFormats" /> 類別。</param>
        <param name="data">物件，表示儲存於這個資料物件的資料。</param>
        <param name="autoConvert">
          <see langword="true" /> 表示允許資料在擷取時轉換為其他格式。<see langword="false" /> 則表示禁止資料在擷取時轉換為其他格式。</param>
        <summary>使用一個或多個資料格式，將指定的資料儲存到這個資料物件中。 這個多載包含 <see langword="Boolean" /> 旗標，表示資料是否可在擷取時轉換為其他格式。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="data" /> 或 <paramref name="format" /> 為 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.UIPermission">將資料傳送至系統剪貼簿的權限。  列舉型別相關聯： **AllClipboard**。</permission>
      </Docs>
    </Member>
    <Member MemberName="SetFileDropList">
      <MemberSignature Language="C#" Value="public void SetFileDropList (System.Collections.Specialized.StringCollection fileDropList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetFileDropList(class System.Collections.Specialized.StringCollection fileDropList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetFileDropList (fileDropList As StringCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFileDropList(System::Collections::Specialized::StringCollection ^ fileDropList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileDropList" Type="System.Collections.Specialized.StringCollection" />
      </Parameters>
      <Docs>
        <param name="fileDropList">字串集合，其中包含要儲存在資料物件中的已置放檔案清單。</param>
        <summary>將 <see cref="F:System.Windows.DataFormats.FileDrop" /> 資料儲存到這個資料物件中。  已置放的檔案清單會指定為字串集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此方法會將資料與啟用的自動轉換 (呼叫相同<xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29>與`autoConvert`設`true`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fileDropList" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fileDropList" /> 包含零字串，或是無法解析清單中所指定之檔案的完整路徑。</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      </Docs>
    </Member>
    <Member MemberName="SetImage">
      <MemberSignature Language="C#" Value="public void SetImage (System.Windows.Media.Imaging.BitmapSource image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImage(class System.Windows.Media.Imaging.BitmapSource image) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImage (image As BitmapSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImage(System::Windows::Media::Imaging::BitmapSource ^ image);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="System.Windows.Media.Imaging.BitmapSource" />
      </Parameters>
      <Docs>
        <param name="image">
          <see cref="T:System.Windows.Media.Imaging.BitmapSource" /> 物件，包含要儲存到資料物件中的影像資料。</param>
        <summary>將 <see cref="F:System.Windows.DataFormats.Bitmap" /> 資料儲存到這個資料物件中。  影像資料會指定為 <see cref="T:System.Windows.Media.Imaging.BitmapSource" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 點陣圖表示電腦圖形為記憶體中的位元陣列，而這些位元代表屬性的映像中的個別像素。  
  
 此方法會將資料與啟用的自動轉換 (呼叫相同<xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29>與`autoConvert`設`true`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="image" /> 為 <see langword="null" />。</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
        <altmember cref="Overload:System.Windows.DataObject.SetText" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetText">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將指定為字串的文字資料儲存到這個資料物件中。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetText(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">字串，包含要儲存到資料物件中的 <see cref="F:System.Windows.DataFormats.UnicodeText" /> 資料。</param>
        <summary>將指定為字串的 <see cref="F:System.Windows.DataFormats.UnicodeText" /> 資料儲存到這個資料物件中。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此資料格式表示 16 位元的字元編碼的 Unicode，也稱為 utf-16 和 USC-2。  
  
 這個方法會將資料加入停用自動轉換 (呼叫相同<xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29>與`autoConvert`設`false`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> 為 <see langword="null" />。</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      </Docs>
    </Member>
    <Member MemberName="SetText">
      <MemberSignature Language="C#" Value="public void SetText (string textData, System.Windows.TextDataFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetText(string textData, valuetype System.Windows.TextDataFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.SetText(System.String,System.Windows.TextDataFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetText (textData As String, format As TextDataFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetText(System::String ^ textData, System::Windows::TextDataFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
        <Parameter Name="format" Type="System.Windows.TextDataFormat" />
      </Parameters>
      <Docs>
        <param name="textData">字串，包含要儲存到資料物件中的文字資料。</param>
        <param name="format">
          <see cref="T:System.Windows.TextDataFormat" /> 的成員，指定要儲存的文字資料格式。</param>
        <summary>將文字資料儲存到這個資料物件中。 要儲存的文字資料格式是以 <see cref="T:System.Windows.TextDataFormat" /> 的成員指定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會將資料加入停用自動轉換 (呼叫相同<xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29>與`autoConvert`設`false`)。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="textData" /> 為 <see langword="null" />。</exception>
        <altmember cref="Overload:System.Windows.DataObject.SetAudio" />
        <altmember cref="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)" />
        <altmember cref="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)" />
      </Docs>
    </Member>
    <Member MemberName="SettingData">
      <MemberSignature Language="C#" Value="see AddSettingDataHandler, and RemoveSettingDataHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSettingDataHandler, and RemoveSettingDataHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.DataObject.SettingData" />
      <MemberSignature Language="VB.NET" Value="see AddSettingDataHandler, and RemoveSettingDataHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SettingDataEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SettingDataEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SettingDataEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.DataObject.SettingDataEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SettingDataEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SettingDataEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="E:System.Windows.DataObject.SettingData" /> 附加事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.DAdvise (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetc, System.Runtime.InteropServices.ComTypes.ADVF advf, System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, out int pdwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetc, valuetype System.Runtime.InteropServices.ComTypes.ADVF advf, class System.Runtime.InteropServices.ComTypes.IAdviseSink pAdvSink, [out] int32&amp; pdwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetc, System::Runtime::InteropServices::ComTypes::ADVF advf, System::Runtime::InteropServices::ComTypes::IAdviseSink ^ pAdvSink, [Runtime::InteropServices::Out] int % pdwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="advf" Type="System.Runtime.InteropServices.ComTypes.ADVF" />
        <Parameter Name="pAdvSink" Type="System.Runtime.InteropServices.ComTypes.IAdviseSink" />
        <Parameter Name="pdwConnection" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pFormatetc">以傳址 (By Reference) 方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構，定義用於後續告知的格式、目標裝置、外觀和媒體。</param>
        <param name="advf">其中一個 <see cref="T:System.Runtime.InteropServices.ComTypes.ADVF" /> 值，指定用於控制諮詢連接的一組旗標。</param>
        <param name="pAdvSink">
          <see cref="T:System.Runtime.InteropServices.ComTypes.IAdviseSink" /> 介面的指標，該介面位於接收變更告知的通知接收上。</param>
        <param name="pdwConnection">當這個方法傳回時，會包含識別這個連接的 DWORD 語彙基元 (Token) 的指標。 您可以在稍後將這個語彙基元傳遞到 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)" />，以便用它來刪除諮詢連接。 如果這個值是零，就不會建立連接。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>建立資料物件和通知接收之間的連接。 這個方法是由支援通知接收的物件所呼叫，而且可以讓接收通知收到物件資料變更的通知。</summary>
        <returns>這個方法支援標準傳回值 E_INVALIDARG、E_UNEXPECTED 和 E_OUTOFMEMORY，以及下列值：</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.DataObject> 執行個體轉換成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise">
      <MemberSignature Language="C#" Value="void IDataObject.DUnadvise (int dwConnection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int32 dwConnection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#DUnadvise(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub DUnadvise (dwConnection As Integer) Implements IDataObject.DUnadvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(int dwConnection) = System::Runtime::InteropServices::ComTypes::IDataObject::DUnadvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwConnection" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwConnection">DWORD 語彙基元，指定要移除的連接。 使用原來建立連接時 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)" /> 所傳回的值。</param>
        <summary>終結先前已經建立的告知連接。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.DataObject> 執行個體轉換成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise">
      <MemberSignature Language="C#" Value="int IDataObject.EnumDAdvise (out System.Runtime.InteropServices.ComTypes.IEnumSTATDATA enumAdvise);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([out] class System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp; enumAdvise) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumDAdvise(System.Runtime.InteropServices.ComTypes.IEnumSTATDATA@)" />
      <MemberSignature Language="VB.NET" Value="Function EnumDAdvise (ByRef enumAdvise As IEnumSTATDATA) As Integer Implements IDataObject.EnumDAdvise" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.EnumDAdvise([Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::IEnumSTATDATA ^ % enumAdvise) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumDAdvise;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumAdvise" Type="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumAdvise">當這個方法傳回時，會包含接收新列舉程式 (Enumerator) 物件介面指標的 <see cref="T:System.Runtime.InteropServices.ComTypes.IEnumSTATDATA" />。 如果實作時將 <c>enumAdvise</c> 設定為 <see langword="null" />，這個時候就不會有諮詢接收的連接。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>建立可以用來列舉目前諮詢連接的物件。</summary>
        <returns>這個方法支援標準傳回值 E_OUTOFMEMORY，以及下列值：  
  
 <list type="table"><listheader><term> 值  
  
 </term><description> 描述  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> 已成功具現化列舉值物件，或是沒有連接。  
  
 </description></item><item><term> OLE_E_ADVISENOTSUPPORTED  
  
 </term><description> 這個物件不支援諮詢通知。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.DataObject> 執行個體轉換成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc">
      <MemberSignature Language="C#" Value="System.Runtime.InteropServices.ComTypes.IEnumFORMATETC IDataObject.EnumFormatEtc (System.Runtime.InteropServices.ComTypes.DATADIR dwDirection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Runtime.InteropServices.ComTypes.IEnumFORMATETC System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.DATADIR dwDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#EnumFormatEtc(System.Runtime.InteropServices.ComTypes.DATADIR)" />
      <MemberSignature Language="VB.NET" Value="Function EnumFormatEtc (dwDirection As DATADIR) As IEnumFORMATETC Implements IDataObject.EnumFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Runtime::InteropServices::ComTypes::IEnumFORMATETC ^ System.Runtime.InteropServices.ComTypes.IDataObject.EnumFormatEtc(System::Runtime::InteropServices::ComTypes::DATADIR dwDirection) = System::Runtime::InteropServices::ComTypes::IDataObject::EnumFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.ComTypes.IEnumFORMATETC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwDirection" Type="System.Runtime.InteropServices.ComTypes.DATADIR" />
      </Parameters>
      <Docs>
        <param name="dwDirection">其中一個 <see cref="T:System.Runtime.InteropServices.ComTypes.DATADIR" /> 值，指定資料的方向。</param>
        <summary>建立物件，用於列舉資料物件的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構。 呼叫 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 或 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" /> 時會使用這些結構。</summary>
        <returns>這個方法支援標準傳回值 E_INVALIDARG 和 E_OUTOFMEMORY，以及下列值：  
  
 <list type="table"><listheader><term> 值  
  
 </term><description> 描述  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> 已成功建立列舉值物件。  
  
 </description></item><item><term> E_NOTIMPL  
  
 </term><description> 不支援 <paramref name="direction" /> 參數所指定的方向。  
  
 </description></item><item><term> OLE_S_USEREG  
  
 </term><description> 要求 OLE 列舉登錄中的格式。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.DataObject> 執行個體轉換成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc">
      <MemberSignature Language="C#" Value="int IDataObject.GetCanonicalFormatEtc (ref System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcIn, out System.Runtime.InteropServices.ComTypes.FORMATETC pformatetcOut);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcIn, [out] valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pformatetcOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function GetCanonicalFormatEtc (ByRef pformatetcIn As FORMATETC, ByRef pformatetcOut As FORMATETC) As Integer Implements IDataObject.GetCanonicalFormatEtc" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcIn, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::FORMATETC % pformatetcOut) = System::Runtime::InteropServices::ComTypes::IDataObject::GetCanonicalFormatEtc;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pformatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pformatetcOut" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pformatetcIn">以傳址方傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構的指標，定義呼叫端在後續呼叫 (例如 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />) 中要用來擷取資料的格式、媒體和目標裝置。 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 成員在這種情況下並不重要，可以略過。</param>
        <param name="pformatetcOut">當這個方法傳回時，會包含 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構的指標，結構中含有特定轉譯可能適用的最普遍資訊，使它在標準上相當於 <c>formatetIn</c>。 呼叫端必須配置這個結構，而且 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)" /> 方法必須填入資料。 為了在後續呼叫 (例如 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />) 中擷取資料，除非提供值為 <see langword="null" />，否則呼叫者會使用 <c>formatOut</c> 的提供值。 如果方法傳回 <see langword="null" />，這個值便為 <see langword="DATA_S_SAMEFORMATETC" />。 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 成員在這種情況下並不重要，可以略過。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>提供標準的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構，這個結構在邏輯上相當於更複雜的結構。 使用這個方法判斷兩個不同的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結果是否會傳回相同的資料，而不需要重複呈現。</summary>
        <returns>這個方法支援標準傳回值 E_INVALIDARG、E_UNEXPECTED 和 E_OUTOFMEMORY，以及下列值：  
  
 <list type="table"><listheader><term> 值  
  
 </term><description> 描述  
  
 </description></listheader><item><term> S_OK  
  
 </term><description> 傳回的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構與傳遞的結構不同。  
  
 </description></item><item><term> DATA_S_SAMEFORMATETC  
  
 </term><description><see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構相同，而且 <paramref name="formatOut" /> 參數中傳回 <see langword="null" />。  
  
 </description></item><item><term> DV_E_LINDEX  
  
 </term><description><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> 有一個無效的值；目前只支援 -1。  
  
 </description></item><item><term> DV_E_FORMATETC  
  
 </term><description><paramref name="pFormatetc" /> 參數有一個無效值。  
  
 </description></item><item><term> OLE_E_NOTRUNNING  
  
 </term><description> 沒有執行應用程式。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.DataObject> 執行個體轉換成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetData">
      <MemberSignature Language="C#" Value="void IDataObject.GetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, out System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, [out] valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetData (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, [Runtime::InteropServices::Out] System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="formatetc">以傳址方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構的指標，定義傳遞資料時所要使用的格式、媒體和目標裝置。 您可以使用布林值 OR 運算子指定多個媒體，好讓方法可以在指定的媒體中選擇最適合的媒體。</param>
        <param name="medium">當這個方法傳回時，會包含 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 方法的指標，指出包含透過其 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed" /> 成員傳回資料的存放媒體，以及透過其 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 成員值釋放媒體的責任。 如果 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 為 <see langword="null" />，便由媒體的接收者負責釋放媒體；否則 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 會指向適當物件上的 <see langword="IUnknown" /> 介面，以便呼叫其 <see langword="Release" /> 方法。 媒體必須由 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 配置及填入。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>從來源資料物件取得資料。 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 方法由資料消費者 (Data Consumer) 呼叫，以呈現指定的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構所描述的資料，並透過指定的 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 結構傳輸這些資料。 接著再由呼叫端負責釋放 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 結構。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.DataObject> 執行個體轉換成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere">
      <MemberSignature Language="C#" Value="void IDataObject.GetDataHere (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM medium);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; medium) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetDataHere (ByRef formatetc As FORMATETC, ByRef medium As STGMEDIUM) Implements IDataObject.GetDataHere" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc, System::Runtime::InteropServices::ComTypes::STGMEDIUM % medium) = System::Runtime::InteropServices::ComTypes::IDataObject::GetDataHere;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="medium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">以傳址方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構的指標，定義傳遞資料時所要使用的格式、媒體和目標裝置。 只能在 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 指定一個媒體，而且只有下列 <see cref="T:System.Runtime.InteropServices.ComTypes.TYMED" /> 值有效：<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE" />、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM" />、<see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL" /> 或 <see cref="F:System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE" />。</param>
        <param name="medium">以傳址方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" />，定義包含要傳輸之資料的存放媒體。 媒體必須由 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 配置及填入。 呼叫端也必須釋放媒體。 這個方法的實作必須永遠提供 <see langword="null" /> 的值給這個參數所指向之 <see cref="F:System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease" /> 結構的 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 成員。</param>
        <summary>從來源資料物件取得資料。 這個方法 (由資料消費者呼叫) 與 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 方法不同，呼叫端必須針對後者配置及釋放指定的存放媒體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.DataObject> 執行個體轉換成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData">
      <MemberSignature Language="C#" Value="int IDataObject.QueryGetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC formatetc);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; formatetc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#QueryGetData(System.Runtime.InteropServices.ComTypes.FORMATETC@)" />
      <MemberSignature Language="VB.NET" Value="Function QueryGetData (ByRef formatetc As FORMATETC) As Integer Implements IDataObject.QueryGetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Runtime.InteropServices.ComTypes.IDataObject.QueryGetData(System::Runtime::InteropServices::ComTypes::FORMATETC % formatetc) = System::Runtime::InteropServices::ComTypes::IDataObject::QueryGetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formatetc" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="formatetc">以傳址方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構的指標，定義用於查詢的格式、媒體和目標裝置。</param>
        <summary>判斷資料物件是否能夠呈現 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構中所描述的資料。 嘗試執行貼上或置放作業的物件可以在呼叫 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 之前呼叫這個方法，以指出作業是否成功。</summary>
        <returns>這個方法支援標準傳回值 E_INVALIDARG、E_UNEXPECTED 和 E_OUTOFMEMORY，以及下列值：  
  
 <list type="table"><listheader><term> 值  
  
 </term><description> 描述  
  
 </description></listheader><item><term> S_OK  
  
 </term><description><see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)" /> 的後續呼叫可能成功。  
  
 </description></item><item><term> DV_E_LINDEX  
  
 </term><description><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.lindex" /> 的值無效；目前只支援 -1。  
  
 </description></item><item><term> DV_E_FORMATETC  
  
 </term><description><paramref name="pFormatetc" /> 參數的值無效。  
  
 </description></item><item><term> DV_E_TYMED  
  
 </term><description><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.tymed" /> 值無效。  
  
 </description></item><item><term> DV_E_DVASPECT  
  
 </term><description><see cref="F:System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect" /> 值無效。  
  
 </description></item><item><term> OLE_E_NOTRUNNING  
  
 </term><description> 沒有執行應用程式。  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.DataObject> 執行個體轉換成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.ComTypes.IDataObject.SetData">
      <MemberSignature Language="C#" Value="void IDataObject.SetData (ref System.Runtime.InteropServices.ComTypes.FORMATETC pFormatetcIn, ref System.Runtime.InteropServices.ComTypes.STGMEDIUM pmedium, bool fRelease);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(valuetype System.Runtime.InteropServices.ComTypes.FORMATETC&amp; pFormatetcIn, valuetype System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp; pmedium, bool fRelease) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataObject.System#Runtime#InteropServices#ComTypes#IDataObject#SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub SetData (ByRef pFormatetcIn As FORMATETC, ByRef pmedium As STGMEDIUM, fRelease As Boolean) Implements IDataObject.SetData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System::Runtime::InteropServices::ComTypes::FORMATETC % pFormatetcIn, System::Runtime::InteropServices::ComTypes::STGMEDIUM % pmedium, bool fRelease) = System::Runtime::InteropServices::ComTypes::IDataObject::SetData;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pFormatetcIn" Type="System.Runtime.InteropServices.ComTypes.FORMATETC&amp;" RefType="ref" />
        <Parameter Name="pmedium" Type="System.Runtime.InteropServices.ComTypes.STGMEDIUM&amp;" RefType="ref" />
        <Parameter Name="fRelease" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pFormatetcIn">以傳址方式傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.FORMATETC" /> 結構，定義資料物件在解譯存放媒體內含資料時所使用的格式。</param>
        <param name="pmedium">以傳址方傳遞的 <see cref="T:System.Runtime.InteropServices.ComTypes.STGMEDIUM" /> 結構，定義用來傳遞資料的存放媒體。</param>
        <param name="fRelease">
          <see langword="true" /> 指定在呼叫傳回之後，呼叫的資料物件 (實作 <see cref="M:System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)" />) 便會擁有存放媒體。 這表示資料物件必須在使用媒體之後，呼叫 <see langword="ReleaseStgMedium" /> 函式來釋放媒體。 <see langword="false" /> 則指定呼叫端仍保留存放媒體的擁有權，而呼叫的物件資料只在呼叫期間使用存放媒體。</param>
        <summary>將資料傳輸給實作這個方法的物件。 這個方法是由包含資料來源的物件所呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.DataObject> 執行個體轉換成 <xref:System.Runtime.InteropServices.ComTypes.IDataObject> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>