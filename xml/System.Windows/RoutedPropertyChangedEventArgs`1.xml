<Type Name="RoutedPropertyChangedEventArgs&lt;T&gt;" FullName="System.Windows.RoutedPropertyChangedEventArgs&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5a4916a26066f4ef6e74acfc3898d2dc17db65bd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36457520" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoutedPropertyChangedEventArgs&lt;T&gt; : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoutedPropertyChangedEventArgs`1&lt;T&gt; extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
  <TypeSignature Language="VB.NET" Value="Public Class RoutedPropertyChangedEventArgs(Of T)&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class RoutedPropertyChangedEventArgs : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type RoutedPropertyChangedEventArgs&lt;'T&gt; = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="93c11-101">已變更之相依性屬性的類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="93c11-101">The type of the dependency property that has changed.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="93c11-102">提供特定路由事件所報告相依性屬性值變更的相關資料 (包括所變更屬性的先前和目前值)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="93c11-102">Provides data about a change in value to a dependency property as reported by particular routed events, including the previous and current value of the property that changed.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c11-103">這是泛型類別類別用於不同事件的事件資料的位置。</span><span class="sxs-lookup"><span data-stu-id="93c11-103">This is a generic class where the class is used for event data of different events.</span></span> <span data-ttu-id="93c11-104">不同的路由的事件，可以指定以產生特定類型的事件資料類別的泛型類型條件約束。</span><span class="sxs-lookup"><span data-stu-id="93c11-104">Different routed events can specify the type constraint of the generic to produce a type-specific event data class.</span></span> <span data-ttu-id="93c11-105">類別會受到限制，一旦<xref:System.Windows.RoutedPropertyChangedEventArgs%601.OldValue%2A>和<xref:System.Windows.RoutedPropertyChangedEventArgs%601.NewValue%2A>屬性也會反映這些型別條件約束; 因此，您可以針對不同的屬性變更事件使用通用的事件資料類別而不需要每個可能的不同的委派屬性型別。</span><span class="sxs-lookup"><span data-stu-id="93c11-105">Once the class is constrained, the <xref:System.Windows.RoutedPropertyChangedEventArgs%601.OldValue%2A> and <xref:System.Windows.RoutedPropertyChangedEventArgs%601.NewValue%2A> properties also reflect these type constraints; thus you can use a common event data class for different property changed events without requiring different delegates for each possible property type.</span></span>  
  
 <span data-ttu-id="93c11-106">路由的事件的屬性變更，其中委派併入這個事件資料類別會報告包含<xref:System.Windows.Controls.Primitives.RangeBase.ValueChanged>，其中的型別條件約束 （和舊的和新值引數中傳遞） 是類型的<xref:System.Double>，和<xref:System.Windows.Controls.TreeView.SelectedItemChanged>，其中型別條件約束是<xref:System.Object>。</span><span class="sxs-lookup"><span data-stu-id="93c11-106">Routed events that reports a property change where the delegate incorporates this event data class include <xref:System.Windows.Controls.Primitives.RangeBase.ValueChanged>, where the type constraint (and old and new values passed in the arguments) is of type <xref:System.Double>, and <xref:System.Windows.Controls.TreeView.SelectedItemChanged>, where the type constraint is <xref:System.Object>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RoutedPropertyChangedEventHandler`1" />
    <altmember cref="T:System.Windows.RoutedEventArgs" />
    <altmember cref="T:System.Windows.DependencyPropertyChangedEventArgs" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedPropertyChangedEventArgs (T oldValue, T newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T oldValue, !T newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (oldValue As T, newValue As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedPropertyChangedEventArgs(T oldValue, T newValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.RoutedPropertyChangedEventArgs&lt;'T&gt; : 'T * 'T -&gt; System.Windows.RoutedPropertyChangedEventArgs&lt;'T&gt;" Usage="new System.Windows.RoutedPropertyChangedEventArgs&lt;'T&gt; (oldValue, newValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="93c11-107">引發事件之前，屬性先前的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-107">Previous value of the property, prior to the event being raised.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="93c11-108">事件發生時屬性的目前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-108">Current value of the property at the time of the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c11-109">使用提供的舊值和新值初始化 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> 類別的新執行個體 (Instance)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-109">Initializes a new instance of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> class, with provided old and new values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c11-110">傳遞的型別必須符合特定泛型宣告的條件約束。</span><span class="sxs-lookup"><span data-stu-id="93c11-110">The types passed must match the declared constraints of the specific generic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoutedPropertyChangedEventArgs (T oldValue, T newValue, System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T oldValue, !T newValue, class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedPropertyChangedEventArgs`1.#ctor(`0,`0,System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoutedPropertyChangedEventArgs(T oldValue, T newValue, System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberSignature Language="F#" Value="new System.Windows.RoutedPropertyChangedEventArgs&lt;'T&gt; : 'T * 'T * System.Windows.RoutedEvent -&gt; System.Windows.RoutedPropertyChangedEventArgs&lt;'T&gt;" Usage="new System.Windows.RoutedPropertyChangedEventArgs&lt;'T&gt; (oldValue, newValue, routedEvent)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="oldValue" Type="T" />
        <Parameter Name="newValue" Type="T" />
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="93c11-111">引發事件之前，屬性先前的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-111">Previous value of the property, prior to the event being raised.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="93c11-112">事件發生時屬性的目前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-112">Current value of the property at the time of the event.</span>
          </span>
        </param>
        <param name="routedEvent">
          <span data-ttu-id="93c11-113">這個引數類別具有其資訊的路由事件識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-113">Identifier of the routed event that this arguments class carries information for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c11-114">使用提供的舊值和新值與事件識別項，初始化 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-114">Initializes a new instance of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> class, with provided old and new values, and an event identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c11-115">傳遞型別`oldValue`和`newValue`必須符合特定泛型宣告的條件約束。</span><span class="sxs-lookup"><span data-stu-id="93c11-115">The types passed for `oldValue` and `newValue` must match the declared constraints of the specific generic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedPropertyChangedEventArgs`1.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="routedPropertyChangedEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">
          <span data-ttu-id="93c11-116">以特定型別的方式呼叫的泛型處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-116">The generic handler to call in a type-specific way.</span>
          </span>
        </param>
        <param name="genericTarget">
          <span data-ttu-id="93c11-117">對其呼叫處理常式的目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-117">The target to call the handler on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="93c11-118">以型別專屬的方式叫用事件處理常式，這樣做能夠提升事件系統的效率。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-118">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c11-119">此實作會轉換為一般處理常式時為<xref:System.Windows.RoutedPropertyChangedEventHandler%601>然後再叫用。</span><span class="sxs-lookup"><span data-stu-id="93c11-119">This implementation casts the generic handler as a <xref:System.Windows.RoutedPropertyChangedEventHandler%601> and then invokes it.</span></span> <span data-ttu-id="93c11-120">如需這項實作模式及它的理由的詳細資訊，請參閱<xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A>和[路由傳送事件概觀](~/docs/framework/wpf/advanced/routed-events-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="93c11-120">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public T NewValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedPropertyChangedEventArgs`1.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValue As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T NewValue { T get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValue : 'T" Usage="System.Windows.RoutedPropertyChangedEventArgs&lt;'T&gt;.NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93c11-121">依已變更屬性之事件的報告，取得屬性的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-121">Gets the new value of a property as reported by a property changed event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93c11-122">泛型值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-122">The generic value.</span>
          </span>
          <span data-ttu-id="93c11-123">在 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> 的特定實作中，這個屬性的泛型型別會置換為實作之受條件約束的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-123">In a practical implementation of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />, the generic type of this property is replaced with the constrained type of the implementation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c11-124">這個屬性的值和類型條件約束將會建立建構函式。</span><span class="sxs-lookup"><span data-stu-id="93c11-124">The value and type constraint of this property will be established by the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValue">
      <MemberSignature Language="C#" Value="public T OldValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T OldValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedPropertyChangedEventArgs`1.OldValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValue As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T OldValue { T get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValue : 'T" Usage="System.Windows.RoutedPropertyChangedEventArgs&lt;'T&gt;.OldValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93c11-125">依已變更屬性之事件的報告，取得屬性先前的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-125">Gets the previous value of the property as reported by a property changed event.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93c11-126">泛型值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-126">The generic value.</span>
          </span>
          <span data-ttu-id="93c11-127">在 <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> 的特定實作中，這個屬性的泛型型別會置換為實作之受條件約束的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93c11-127">In a practical implementation of the <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />, the generic type of this property is replaced with the constrained type of the implementation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93c11-128">這個屬性的值和類型條件約束將會建立由<xref:System.Windows.RoutedPropertyChangedEventArgs%601>建構函式的型別引數。</span><span class="sxs-lookup"><span data-stu-id="93c11-128">The value and type constraint of this property will be established by the <xref:System.Windows.RoutedPropertyChangedEventArgs%601> constructor's type arguments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>