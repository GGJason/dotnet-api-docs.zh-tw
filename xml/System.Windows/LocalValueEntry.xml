<Type Name="LocalValueEntry" FullName="System.Windows.LocalValueEntry">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4ee41f062aab00f36548f639d52ec12bfdeed6ae" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39994503" /></Metadata><TypeSignature Language="C#" Value="public struct LocalValueEntry" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalValueEntry extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LocalValueEntry" />
  <TypeSignature Language="VB.NET" Value="Public Structure LocalValueEntry" />
  <TypeSignature Language="C++ CLI" Value="public value class LocalValueEntry" />
  <TypeSignature Language="F#" Value="type LocalValueEntry = struct" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示屬性識別項和本機設定相依性屬性的屬性值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 取得的值時，會傳回這個類別的執行個體<xref:System.Windows.LocalValueEnumerator.Current%2A>屬性<xref:System.Windows.LocalValueEnumerator>。 所有<xref:System.Windows.LocalValueEntry>屬性是唯讀。  
  
 這個類別會有任何公用建構函式。 若要取得您必須先呼叫這個類別的執行個體<xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>，然後取得的值<xref:System.Windows.LocalValueEnumerator.Current%2A>從傳回<xref:System.Windows.LocalValueEnumerator>。  
  
   
  
## Examples  
 下列範例會逐一查看在本機設定值<xref:System.Windows.DependencyObject>和查詢<xref:System.Windows.LocalValueEntry>屬性。  
  
 [!code-csharp[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/csharp/VS_Snippets_Wpf/DPClearValue/CSharp/default.xaml.cs#iteratelocalvaluesandclear)]
 [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPClearValue/VisualBasic/default.xaml.vb#iteratelocalvaluesandclear)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.LocalValueEnumerator" />
  </Docs>
  <Members>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="localValueEntry.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">與目前的 <see cref="T:System.Windows.LocalValueEntry" /> 相比較的 <see cref="T:System.Windows.LocalValueEntry" />。</param>
        <summary>判斷兩個 <see cref="T:System.Windows.LocalValueEntry" /> 執行個體是否相等。</summary>
        <returns>此 <see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /> 實作會比較 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的值，而且也可能比較 <see cref="P:System.Windows.LocalValueEntry.Value" /> 的值。 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的 <see cref="T:System.Windows.LocalValueEntry" /> 元件為值型別，因此永遠都是位元 (Bitwise) 比較。 如果 <see cref="P:System.Windows.LocalValueEntry.Value" /> 元件是值型別，這個實作會運用位元比較。 針對擁有參考型別的本機設定屬性，行為會受到此型別相等判斷機制的延後，因為它只會在兩個數值上內部使用 == 運算子。 根據預設，這會是值的參考相等，所以整個 <see cref="T:System.Windows.LocalValueEntry" /> 的相等將會變成參考相等。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="localValueEntry.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回這個 <see cref="T:System.Windows.LocalValueEntry" /> 的雜湊程式碼。</summary>
        <returns>帶正負號的 32 位元整數值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.LocalValueEntry obj1, System.Windows.LocalValueEntry obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.LocalValueEntry obj1, valuetype System.Windows.LocalValueEntry obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (obj1 As LocalValueEntry, obj2 As LocalValueEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::LocalValueEntry obj1, System::Windows::LocalValueEntry obj2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.LocalValueEntry * System.Windows.LocalValueEntry -&gt; bool" Usage="obj1 = obj2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEntry" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEntry" />
      </Parameters>
      <Docs>
        <param name="obj1">要比較的第一個執行個體。</param>
        <param name="obj2">要比較的第二個執行個體。</param>
        <summary>比較指定的 <see cref="T:System.Windows.LocalValueEntry" /> 執行個體，判斷它們是否相同。</summary>
        <returns>若 <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEntry" /> 等於 <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEntry" /> 則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此 <xref:System.Windows.LocalValueEntry.op_Equality%2A> 實作會比較 <xref:System.Windows.LocalValueEntry.Property%2A> 的值，而且也可能比較 <xref:System.Windows.LocalValueEntry.Value%2A> 的值。 <xref:System.Windows.LocalValueEntry.Property%2A>元件<xref:System.Windows.LocalValueEntry>一律是實值類型，因此這項比較會永遠都是位元的值比較。 如果 <xref:System.Windows.LocalValueEntry.Value%2A> 元件是值型別，這個實作會運用位元比較。  
  
 針對擁有參考型別的本機設定屬性，行為會受到此型別相等判斷機制的延後，因為它只會在兩個數值上內部使用 `==` 運算子。 根據預設，這是值的參考相等。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.LocalValueEntry.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.LocalValueEntry obj1, System.Windows.LocalValueEntry obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.LocalValueEntry obj1, valuetype System.Windows.LocalValueEntry obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (obj1 As LocalValueEntry, obj2 As LocalValueEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::LocalValueEntry obj1, System::Windows::LocalValueEntry obj2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.LocalValueEntry * System.Windows.LocalValueEntry -&gt; bool" Usage="System.Windows.LocalValueEntry.op_Inequality (obj1, obj2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEntry" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEntry" />
      </Parameters>
      <Docs>
        <param name="obj1">要比較的第一個執行個體。</param>
        <param name="obj2">要比較的第二個執行個體。</param>
        <summary>比較指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 執行個體，判斷它們是否不同。</summary>
        <returns>此實作會比較 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的值和 <see cref="P:System.Windows.LocalValueEntry.Value" /> 的 <see cref="T:System.Windows.LocalValueEntry" /> 元件。 <see cref="P:System.Windows.LocalValueEntry.Property" /> 的 <see cref="T:System.Windows.LocalValueEntry" /> 元件永遠為值型別，因此這個比較永遠都是位元比較。 如果 <see cref="P:System.Windows.LocalValueEntry.Value" /> 元件是值型別，這個實作會運用位元比較。  
  
針對擁有參考型別的本機設定屬性，行為會受到此型別相等判斷機制的延後，因為它只會在兩個數值上內部使用 <see langword="==" /> 運算子。 根據預設，這是值的參考相等。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.LocalValueEntry.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEntry.Property" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty" Usage="System.Windows.LocalValueEntry.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得以這個項目表示之本機設定相依性屬性的識別項。</summary>
        <value>本機設定之相依性屬性的識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此屬性用於查詢的識別項的本機設定相依性屬性，並取得它的中繼資料。 此取得中繼資料可能包含屬性的屬性是否支援屬性值繼承的初始預設值。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEntry.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Windows.LocalValueEntry.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得本機設定之相依性屬性的值。</summary>
        <value>本機設定之相依性屬性的值，以物件表示。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要判斷此值的更特定類型，請檢查<xref:System.Windows.LocalValueEntry.Property%2A>目前<xref:System.Windows.LocalValueEntry>，並取得其<xref:System.Windows.DependencyProperty.PropertyType%2A>。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
  </Members>
</Type>