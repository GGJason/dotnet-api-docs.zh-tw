<Type Name="Condition" FullName="System.Windows.Condition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="85b82b0f68e5c64c781e1d4a4215dd38d12d51a9" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52229064" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Condition : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Condition extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Condition" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Condition&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Condition sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type Condition = class&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示 <see cref="T:System.Windows.MultiTrigger" /> 和 <see cref="T:System.Windows.MultiDataTrigger" /> 的條件，會根據一組條件套用變更至屬性值。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiTrigger>s 和<xref:System.Windows.MultiDataTrigger>s 可讓您設定一組條件所依據的屬性值。 條件成立，當屬性值的項目或資料的項目符合指定<xref:System.Windows.Condition.Value%2A>（參考相等檢查）。 如果符合所有指定的條件，則會套用觸發程序。  
  
 以下是會導致例外狀況的情況下的清單：  
  
-   每個<xref:System.Windows.Condition>，您只能設定其中一個<xref:System.Windows.Condition.Property%2A>屬性或<xref:System.Windows.Condition.Binding%2A>屬性。 如果設定這兩個屬性，則會擲回例外狀況。  
  
-   如果<xref:System.Windows.Condition>適合<xref:System.Windows.MultiTrigger>，則<xref:System.Windows.Condition.Property%2A>屬性不可為 null。  
  
-   如果<xref:System.Windows.Condition>適合<xref:System.Windows.MultiDataTrigger>，則<xref:System.Windows.Condition.Binding%2A>屬性不可為 null。  
  
-   如果將會擲回例外狀況指定<xref:System.Windows.Condition.Value%2A>不適用於指定的型別<xref:System.Windows.Condition.Property%2A>。  
  
 請注意，如果<xref:System.Windows.Condition>適合<xref:System.Windows.MultiTrigger>，則<xref:System.Windows.Condition.Property%2A>和<xref:System.Windows.Condition.Value%2A>屬性必須設定。 如果基於<xref:System.Windows.MultiDataTrigger>，則<xref:System.Windows.Condition.Binding%2A>和<xref:System.Windows.Condition.Value%2A>屬性必須設定。  
  
   
  
## Examples  
 下列範例包含兩個<xref:System.Windows.MultiTrigger>s。 第一組**MinWidth**屬性值時**HasItems**屬性為 false，**寬度**屬性**自動**。第二個類似，但適用於**MinHeight**屬性。  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 請參閱<xref:System.Windows.Condition.Binding%2A>條件中使用的範例屬性<xref:System.Windows.MultiDataTrigger>。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Condition" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Condition" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.Data.BindingBase binding, object conditionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Data.BindingBase binding, object conditionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.Data.BindingBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (binding As BindingBase, conditionValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition(System::Windows::Data::BindingBase ^ binding, System::Object ^ conditionValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Condition : System.Windows.Data.BindingBase * obj -&gt; System.Windows.Condition" Usage="new System.Windows.Condition (binding, conditionValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
        <Parameter Name="conditionValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="binding">指定條件屬性的繫結。</param>
        <param name="conditionValue">條件的值。</param>
        <summary>初始化 <see cref="T:System.Windows.Condition" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.DependencyProperty conditionProperty, object conditionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty conditionProperty, object conditionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionProperty As DependencyProperty, conditionValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition(System::Windows::DependencyProperty ^ conditionProperty, System::Object ^ conditionValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Condition : System.Windows.DependencyProperty * obj -&gt; System.Windows.Condition" Usage="new System.Windows.Condition (conditionProperty, conditionValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="conditionProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="conditionValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="conditionProperty">條件的屬性。</param>
        <param name="conditionValue">條件的值。</param>
        <summary>使用指定的屬性和值，初始化 <see cref="T:System.Windows.Condition" /> 類別的新執行個體。 這個建構函式會執行參數驗證。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.DependencyProperty conditionProperty, object conditionValue, string sourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty conditionProperty, object conditionValue, string sourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionProperty As DependencyProperty, conditionValue As Object, sourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition(System::Windows::DependencyProperty ^ conditionProperty, System::Object ^ conditionValue, System::String ^ sourceName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Condition : System.Windows.DependencyProperty * obj * string -&gt; System.Windows.Condition" Usage="new System.Windows.Condition (conditionProperty, conditionValue, sourceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="conditionValue" Type="System.Object" />
        <Parameter Name="sourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionProperty">條件的屬性。</param>
        <param name="conditionValue">條件的值。</param>
        <param name="sourceName">具有 <paramref name="conditionProperty" /> 的物件 <c>x:Name</c>。</param>
        <summary>使用指定的屬性、值和來源物件名稱，初始化 <see cref="T:System.Windows.Condition" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.Condition.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定指定條件之屬性的繫結。 這只適用於 <see cref="T:System.Windows.MultiDataTrigger" /> 物件。</summary>
        <value>預設值為 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiDataTrigger>s 可讓您設定根據傳回的資料值的屬性值。 比方說，如果您要顯示工作項目清單，您可能想要顯示具有紅色背景工作，如果它是高優先順序，且具有未瀏覽過在超過兩週。  
  
 您建立的繫結，並使用<xref:System.Windows.Data.Binding.Path%2A>屬性繫結至特定的物件 （繫結來源物件） 的屬性。 例如，您可以繫結，來*優先權*屬性*工作*。 如需詳細資訊，請參閱 [資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。  
  
 請注意，如果它是一個條件，以便<xref:System.Windows.MultiDataTrigger>，則<xref:System.Windows.Condition.Binding%2A>和<xref:System.Windows.Condition.Value%2A>屬性必須設定。 設定<xref:System.Windows.Condition.Property%2A>值會在此情況下造成例外狀況。  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>XAML Attribute Usage  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>XAML 屬性項目用法  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>XAML 值  
 *declaration*  
 繫結宣告。 請參閱[繫結宣告概觀](~/docs/framework/wpf/data/binding-declarations-overview.md)如需詳細資訊。  
  
   
  
## Examples  
 在下列範例中，<xref:System.Windows.Controls.ItemsControl.ItemsSource%2A>的<xref:System.Windows.Controls.ListBox>繫結至*上的芳鄰*，則<xref:System.Collections.ObjectModel.ObservableCollection%601>的*位置*物件。 *地方*物件具有屬性*名稱*並*狀態*。  
  
 每個<xref:System.Windows.Controls.ListBoxItem>的<xref:System.Windows.Controls.ListBox>會顯示*地方*物件。 <xref:System.Windows.Style>在此範例會套用至每個<xref:System.Windows.Controls.ListBoxItem>。 <xref:System.Windows.Condition>之<xref:System.Windows.MultiDataTrigger>所指定，如果*名稱*和*狀態*的*位置*資料項目是"波特蘭 」 和 「 或者 」 分別則對應的背景<xref:System.Windows.Controls.ListBoxItem>設為青色。  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Condition.Property" />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); void set(System::Windows::DependencyProperty ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty with get, set" Usage="System.Windows.Condition.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定條件的屬性。 這只適用於 <see cref="T:System.Windows.MultiTrigger" /> 物件。</summary>
        <value>
          <see cref="T:System.Windows.DependencyProperty" />，指定條件的屬性。 預設值為 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiTrigger>s 可讓您設定一組條件所依據的屬性值。 條件時滿足屬性的值 (依<xref:System.Windows.Condition.Property%2A>屬性) 的項目符合指定<xref:System.Windows.Condition.Value%2A>（參考相等檢查）。 如果符合所有指定的條件，則會套用觸發程序。  
  
 如果`TargetType`樣式的樣板，含有觸發程序上未設定。 您必須限定屬性名稱使用`ClassName.PropertyName`語法。  
  
 請注意，如果它是一個條件，以便<xref:System.Windows.MultiTrigger>，則<xref:System.Windows.Condition.Property%2A>和<xref:System.Windows.Condition.Value%2A>屬性必須設定。 設定<xref:System.Windows.Condition.Binding%2A>值會在此情況下造成例外狀況。  
  
 針對<xref:System.Windows.Condition>中的 s <xref:System.Windows.MultiDataTrigger>s，<xref:System.Windows.Condition.Binding%2A>屬性應該用來取代這個屬性。  
  
   
  
## Examples  
 下列範例包含兩個<xref:System.Windows.MultiTrigger>s。 第一組**MinWidth**屬性值時**HasItems**屬性為 false，**寬度**屬性**自動**。第二個類似，但適用於**MinHeight**屬性。  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Condition.Binding" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.Condition.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">標記延伸會在此設定值的物件。</param>
        <param name="eventArgs">與標記延伸處理相關的資料。</param>
        <summary>處理標記延伸對 <see cref="T:System.Windows.Condition" /> 物件的屬性提供值的情況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是套用所參考的方法<xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>在類別層級，這表示這個方法會處理所有嘗試設定值的屬性<xref:System.Windows.Condition>與標記延伸。 您不通常直接呼叫這個方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTypeConverter">
      <MemberSignature Language="C#" Value="public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveTypeConverter(object targetObject, class System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveTypeConverter (targetObject As Object, eventArgs As XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveTypeConverter(System::Object ^ targetObject, System::Windows::Markup::XamlSetTypeConverterEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveTypeConverter : obj * System.Windows.Markup.XamlSetTypeConverterEventArgs -&gt; unit" Usage="System.Windows.Condition.ReceiveTypeConverter (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetObject">型別轉換子會在此設定值的物件。</param>
        <param name="eventArgs">與型別轉換子處理相關的資料。</param>
        <summary>處理類型轉換子對 <see cref="T:System.Windows.Condition" /> 物件的屬性提供值的情況。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這是套用所參考的方法<xref:System.Windows.Markup.XamlSetTypeConverterAttribute>在類別層級，這表示這個方法會處理所有嘗試設定值的屬性<xref:System.Windows.Condition>與型別轉換子。 您不通常直接呼叫這個方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceName : string with get, set" Usage="System.Windows.Condition.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定物件名稱，這個物件具有會套用相關聯之 setter 的屬性。 這只適用於 <see cref="T:System.Windows.MultiTrigger" /> 物件。</summary>
        <value>預設屬性為 <see langword="null" />。 如果這個屬性為 <see langword="null" />，則加上樣式之物件的屬性會套用關聯的 setter。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以設定此屬性的位置套用觸發程序集合 （包含此條件的觸發程序屬於的集合） 的範圍內的任何項目名稱。 這通常是具名的項目內包含觸發程序的範本。  
  
 您可以使用物件的名稱[X:name 指示詞](~/docs/framework/xaml-services/x-name-directive.md)語法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">在 <see cref="T:System.Windows.Condition" /> 變成使用中狀態之後，便無法對其進行修改。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表示物件正在啟動初始設定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Condition> 執行個體轉換成 <xref:System.ComponentModel.ISupportInitialize> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>表示物件已完成初始設定。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Windows.Condition> 執行個體轉換成 <xref:System.ComponentModel.ISupportInitialize> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Condition.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.SetterTriggerConditionValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定條件的值。</summary>
        <value>特定 <see cref="P:System.Windows.Condition.Value" /> 的 <see cref="T:System.Windows.Condition" /> 屬性不可以是 null。  
  
請參閱「例外狀況」一節。 預設值為 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiTrigger>s 和<xref:System.Windows.MultiDataTrigger>s 可讓您設定一組條件所依據的屬性值。 條件成立，當屬性值的項目或資料的項目符合指定<xref:System.Windows.Condition.Value%2A>。 如果符合所有指定的條件，則會套用觸發程序。 如果符合所有指定的條件，則會套用觸發程序。  
  
   
  
## Examples  
 下列範例包含兩個<xref:System.Windows.MultiTrigger>s。 第一組**MinWidth**屬性值時**HasItems**屬性為 false，**寬度**屬性**自動**。第二個類似，但適用於**MinHeight**屬性。  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 請參閱<xref:System.Windows.Condition.Binding%2A>條件中使用的範例屬性<xref:System.Windows.MultiDataTrigger>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">不支援運算式。</exception>
      </Docs>
    </Member>
  </Members>
</Type>