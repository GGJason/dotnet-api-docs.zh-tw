<Type Name="DependencyObjectType" FullName="System.Windows.DependencyObjectType">
  <TypeSignature Language="C#" Value="public class DependencyObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DependencyObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyObjectType" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyObjectType" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="183aa-101">實作針對所有 <see cref="T:System.Windows.DependencyObject" /> 衍生型別 (Derived Type) 的基礎型別快取。</span><span class="sxs-lookup"><span data-stu-id="183aa-101">Implements an underlying type cache for all <see cref="T:System.Windows.DependencyObject" /> derived types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="183aa-102"><xref:System.Windows.DependencyObjectType> 代表特定的基礎系統 ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)])<xref:System.Type>的<xref:System.Windows.DependencyObject>。</span><span class="sxs-lookup"><span data-stu-id="183aa-102"><xref:System.Windows.DependencyObjectType> represents a specific underlying system ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> of a <xref:System.Windows.DependencyObject>.</span></span> <span data-ttu-id="183aa-103"><xref:System.Windows.DependencyObjectType> 是基本上包裝函式 ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> ，讓它可以擴充其功能。</span><span class="sxs-lookup"><span data-stu-id="183aa-103"><xref:System.Windows.DependencyObjectType> is essentially a wrapper for the ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> so that it can extend some of its capabilities.</span></span>  
  
 <span data-ttu-id="183aa-104">這個類別具有公用建構函式。</span><span class="sxs-lookup"><span data-stu-id="183aa-104">This class has no public constructor.</span></span> <span data-ttu-id="183aa-105">這個類別的執行個體只能取得透過對其他物件的屬性 (例如<xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=nameWithType>)，或透過靜態方法<xref:System.Windows.DependencyObjectType.FromSystemType%2A>。</span><span class="sxs-lookup"><span data-stu-id="183aa-105">Instances of this class can only be obtained through properties on other objects (such as <xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=nameWithType>), or through the static method <xref:System.Windows.DependencyObjectType.FromSystemType%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObjectType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObjectType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObjectType ^ BaseType { System::Windows::DependencyObjectType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="183aa-106">取得目前 <see cref="T:System.Windows.DependencyObjectType" /> 之直接基底類別的 <see cref="T:System.Windows.DependencyObjectType" />。</span><span class="sxs-lookup"><span data-stu-id="183aa-106">Gets the <see cref="T:System.Windows.DependencyObjectType" /> of the immediate base class of the current <see cref="T:System.Windows.DependencyObjectType" />.</span></span></summary>
        <value><span data-ttu-id="183aa-107">基底類別的型別。</span><span class="sxs-lookup"><span data-stu-id="183aa-107">The type of the base class.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSystemType">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObjectType FromSystemType (Type systemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObjectType FromSystemType(class System.Type systemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSystemType (systemType As Type) As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObjectType ^ FromSystemType(Type ^ systemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="systemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="systemType"><span data-ttu-id="183aa-108">要轉換的系統 ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) 型別。</span><span class="sxs-lookup"><span data-stu-id="183aa-108">The system ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) type to convert.</span></span></param>
        <summary><span data-ttu-id="183aa-109">傳回 <see cref="T:System.Windows.DependencyObjectType" />，表示指定的系統 ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) 型別。</span><span class="sxs-lookup"><span data-stu-id="183aa-109">Returns a <see cref="T:System.Windows.DependencyObjectType" /> that represents a given system ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) type.</span></span></summary>
        <returns><span data-ttu-id="183aa-110"><see cref="T:System.Windows.DependencyObjectType" />，表示系統 ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) 型別。</span><span class="sxs-lookup"><span data-stu-id="183aa-110">A <see cref="T:System.Windows.DependencyObjectType" /> that represents the system ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="183aa-111">每個<xref:System.Windows.DependencyObject>維護<xref:System.Windows.DependencyObject.DependencyObjectType%2A>屬性，傳回<xref:System.Windows.DependencyObjectType>，但這需要具有特定<xref:System.Windows.DependencyObject>執行個體。</span><span class="sxs-lookup"><span data-stu-id="183aa-111">Each <xref:System.Windows.DependencyObject> maintains a <xref:System.Windows.DependencyObject.DependencyObjectType%2A> property that returns a <xref:System.Windows.DependencyObjectType>, but this requires having a particular <xref:System.Windows.DependencyObject> instance.</span></span> <span data-ttu-id="183aa-112">您可以使用這個靜態公用程式方法，如果您還沒有<xref:System.Windows.DependencyObject>執行個體，並需要<xref:System.Windows.DependencyObjectType>。</span><span class="sxs-lookup"><span data-stu-id="183aa-112">You can use this static utility method if you do not yet have a <xref:System.Windows.DependencyObject> instance and require a <xref:System.Windows.DependencyObjectType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="183aa-113">下列範例會呼叫<xref:System.Windows.DependencyObjectType.FromSystemType%2A>、 建立<xref:System.Windows.DependencyObjectType>根據類型<xref:System.Windows.Window>類別。</span><span class="sxs-lookup"><span data-stu-id="183aa-113">The following example calls <xref:System.Windows.DependencyObjectType.FromSystemType%2A> , creating a <xref:System.Windows.DependencyObjectType> based on the type of the <xref:System.Windows.Window> class.</span></span>  
  
 [!code-csharp[PropertiesOvwSupport#DOTFromSystemType](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertiesOvwSupport/CSharp/page3.xaml.cs#dotfromsystemtype)]
 [!code-vb[PropertiesOvwSupport#DOTFromSystemType](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertiesOvwSupport/visualbasic/page3.xaml.vb#dotfromsystemtype)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="183aa-114">傳回這個 <see cref="T:System.Windows.DependencyObjectType" /> 的雜湊程式碼。</span><span class="sxs-lookup"><span data-stu-id="183aa-114">Returns the hash code for this <see cref="T:System.Windows.DependencyObjectType" />.</span></span></summary>
        <returns><span data-ttu-id="183aa-115">32 位元帶正負號的整數雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="183aa-115">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="183aa-116">此實作會連結到的值<xref:System.Windows.DependencyObjectType.Id%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="183aa-116">This implementation is linked to the value of the <xref:System.Windows.DependencyObjectType.Id%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="183aa-117">取得常數時間陣列查閱作業之以零起始的唯一識別項。</span><span class="sxs-lookup"><span data-stu-id="183aa-117">Gets a zero-based unique identifier for constant-time array lookup operations.</span></span></summary>
        <value><span data-ttu-id="183aa-118">內部識別項。</span><span class="sxs-lookup"><span data-stu-id="183aa-118">An internal identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="183aa-119">請勿使用一般的雜湊函式。</span><span class="sxs-lookup"><span data-stu-id="183aa-119">Do not use for general hashing functions.</span></span> <span data-ttu-id="183aa-120">並不保證這個值。</span><span class="sxs-lookup"><span data-stu-id="183aa-120">There is no guarantee on this value.</span></span> <span data-ttu-id="183aa-121">它會因應用程式執行。</span><span class="sxs-lookup"><span data-stu-id="183aa-121">It can vary between application runs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceOfType">
      <MemberSignature Language="C#" Value="public bool IsInstanceOfType (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInstanceOfType(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInstanceOfType(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="183aa-122">要與目前 <see cref="T:System.Windows.DependencyObjectType" /> 比較的物件。</span><span class="sxs-lookup"><span data-stu-id="183aa-122">The object to compare with the current <see cref="T:System.Windows.DependencyObjectType" />.</span></span></param>
        <summary><span data-ttu-id="183aa-123">判斷指定的物件是否為目前 <see cref="T:System.Windows.DependencyObjectType" /> 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="183aa-123">Determines whether the specified object is an instance of the current <see cref="T:System.Windows.DependencyObjectType" />.</span></span></summary>
        <returns>
          <span data-ttu-id="183aa-124">如果目前 <see cref="T:System.Windows.DependencyObjectType" /> 所表示的類別位於以 <paramref name="d" /> 形式傳遞之 <see cref="T:System.Windows.DependencyObject" /> 的繼承階層架構中，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="183aa-124"><see langword="true" /> if the class represented by the current <see cref="T:System.Windows.DependencyObjectType" /> is in the inheritance hierarchy of the <see cref="T:System.Windows.DependencyObject" /> passed as <paramref name="d" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="183aa-125">物件的完全相同的類型傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="183aa-125">Objects of the exact same type return `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public bool IsSubclassOf (System.Windows.DependencyObjectType dependencyObjectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubclassOf(class System.Windows.DependencyObjectType dependencyObjectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubclassOf(System::Windows::DependencyObjectType ^ dependencyObjectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObjectType" Type="System.Windows.DependencyObjectType" />
      </Parameters>
      <Docs>
        <param name="dependencyObjectType"><span data-ttu-id="183aa-126">要比較的 <see cref="T:System.Windows.DependencyObjectType" />。</span><span class="sxs-lookup"><span data-stu-id="183aa-126">The <see cref="T:System.Windows.DependencyObjectType" /> to compare.</span></span></param>
        <summary><span data-ttu-id="183aa-127">判斷目前 <see cref="T:System.Windows.DependencyObjectType" /> 是否衍生自指定的 <see cref="T:System.Windows.DependencyObjectType" />。</span><span class="sxs-lookup"><span data-stu-id="183aa-127">Determines whether the current <see cref="T:System.Windows.DependencyObjectType" /> derives from the specified <see cref="T:System.Windows.DependencyObjectType" />.</span></span></summary>
        <returns>
          <span data-ttu-id="183aa-128">如果 <paramref name="dependencyObjectType" /> 參數和目前的 <see cref="T:System.Windows.DependencyObjectType" /> 表示類別的型別，而且目前的 <see cref="T:System.Windows.DependencyObjectType" /> 所表示的類別衍生自 <paramref name="dependencyObjectType" /> 所表示的類別，則為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="183aa-128"><see langword="true" /> if the <paramref name="dependencyObjectType" /> parameter and the current <see cref="T:System.Windows.DependencyObjectType" /> represent types of classes, and the class represented by the current <see cref="T:System.Windows.DependencyObjectType" /> derives from the class represented by <paramref name="dependencyObjectType" />.</span></span> <span data-ttu-id="183aa-129">否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="183aa-129">Otherwise, <see langword="false" />.</span></span> <span data-ttu-id="183aa-130">如果 <paramref name="dependencyObjectType" /> 和目前的 <see cref="T:System.Windows.DependencyObjectType" /> 皆表示相同的類別，這個方法也會傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="183aa-130">This method also returns <see langword="false" /> if <paramref name="dependencyObjectType" /> and the current <see cref="T:System.Windows.DependencyObjectType" /> represent the same class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="183aa-131">取得所表示之 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 系統型別的名稱。</span><span class="sxs-lookup"><span data-stu-id="183aa-131">Gets the name of the represented [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] system type.</span></span></summary>
        <value><span data-ttu-id="183aa-132">所表示之 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 系統型別的名稱。</span><span class="sxs-lookup"><span data-stu-id="183aa-132">The name of the represented [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] system type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="183aa-133">值<xref:System.Windows.DependencyObjectType.Name%2A>是相同的型別名稱的名稱的字串<xref:System.Type>。</span><span class="sxs-lookup"><span data-stu-id="183aa-133">The value of <xref:System.Windows.DependencyObjectType.Name%2A> is the same string as the name of the type name of the <xref:System.Type>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="SystemType">
      <MemberSignature Language="C#" Value="public Type SystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.SystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="183aa-134">取得這個 <see cref="T:System.Windows.DependencyObjectType" /> 所表示的 [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] 系統型別。</span><span class="sxs-lookup"><span data-stu-id="183aa-134">Gets the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] system type represented by this <see cref="T:System.Windows.DependencyObjectType" />.</span></span></summary>
        <value><span data-ttu-id="183aa-135">這個 <see cref="T:System.Windows.DependencyObjectType" /> 所表示的 [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] 系統型別。</span><span class="sxs-lookup"><span data-stu-id="183aa-135">The [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] system type represented by this <see cref="T:System.Windows.DependencyObjectType" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>