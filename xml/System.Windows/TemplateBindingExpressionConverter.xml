<Type Name="TemplateBindingExpressionConverter" FullName="System.Windows.TemplateBindingExpressionConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bef8570575e3cf30e494e7573c919c275e2891f0" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39967872" /></Metadata><TypeSignature Language="C#" Value="public class TemplateBindingExpressionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TemplateBindingExpressionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateBindingExpressionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class TemplateBindingExpressionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateBindingExpressionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type TemplateBindingExpressionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="df50b-101">型別轉換子，用於在序列化 (Serialization) 期間從 <see cref="T:System.Windows.TemplateBindingExpression" /> 執行個體建構標記延伸。</span><span class="sxs-lookup"><span data-stu-id="df50b-101">A type converter that is used to construct a markup extension from a <see cref="T:System.Windows.TemplateBindingExpression" /> instance during serialization.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateBindingExpressionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExpressionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateBindingExpressionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="df50b-102">初始化 <see cref="T:System.Windows.TemplateBindingExpressionConverter" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="df50b-102">Initializes a new instance of the <see cref="T:System.Windows.TemplateBindingExpressionConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExpressionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="templateBindingExpressionConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="df50b-103">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="df50b-103">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="df50b-104">轉換之輸出的所需型別。</span><span class="sxs-lookup"><span data-stu-id="df50b-104">The desired type of the conversion's output.</span></span></param>
        <summary><span data-ttu-id="df50b-105">傳回這個轉換器是否可以使用指定的內容，將物件轉換成指定的類型。</span><span class="sxs-lookup"><span data-stu-id="df50b-105">Returns whether this converter can convert the object to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="df50b-106">如果這個轉換子可以執行要求的轉換則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="df50b-106"><see langword="true" /> if this converter can perform the requested conversion; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="df50b-107">只有 <see cref="T:System.Windows.Markup.MarkupExtension" /> 的 <paramref name="destinationType" /> 會傳回 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="df50b-107">Only a <paramref name="destinationType" /> of <see cref="T:System.Windows.Markup.MarkupExtension" /> returns <see langword="true" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateBindingExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="templateBindingExpressionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="df50b-108">提供格式內容的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> 實作。</span><span class="sxs-lookup"><span data-stu-id="df50b-108">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> implementation that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="df50b-109"><see cref="T:System.Globalization.CultureInfo" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="df50b-109">A <see cref="T:System.Globalization.CultureInfo" /> object.</span></span> <span data-ttu-id="df50b-110">如果傳遞 Null 參考，則會假設使用目前的文化特性。</span><span class="sxs-lookup"><span data-stu-id="df50b-110">If a null reference is passed, the current culture is assumed.</span></span></param>
        <param name="value"><span data-ttu-id="df50b-111">要進行轉換的值。</span><span class="sxs-lookup"><span data-stu-id="df50b-111">The value to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="df50b-112">要轉換成的型別。</span><span class="sxs-lookup"><span data-stu-id="df50b-112">The desired type to convert to.</span></span></param>
        <summary><span data-ttu-id="df50b-113">將指定的值物件轉換為 <see cref="T:System.Windows.Markup.MarkupExtension" /> 型別。</span><span class="sxs-lookup"><span data-stu-id="df50b-113">Converts the given value object to a <see cref="T:System.Windows.Markup.MarkupExtension" /> type.</span></span></summary>
        <returns><span data-ttu-id="df50b-114">轉換的值。</span><span class="sxs-lookup"><span data-stu-id="df50b-114">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df50b-115">只有`destinationType`的<xref:System.Windows.Markup.MarkupExtension>傳回值，這個值來自此實作。</span><span class="sxs-lookup"><span data-stu-id="df50b-115">Only a `destinationType` of <xref:System.Windows.Markup.MarkupExtension> returns a value originating from this implementation.</span></span> <span data-ttu-id="df50b-116">提供的其他任何型別`destinationType`會導致呼叫基底，這個方法會產生沒有可用的轉換值，並只提供基本驗證的其他參數。</span><span class="sxs-lookup"><span data-stu-id="df50b-116">Any other type provided for `destinationType` causes this method to call base, which results in no usable converted value and only serves for basic validation of the remaining parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>