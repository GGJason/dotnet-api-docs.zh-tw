<Type Name="LocalValueEnumerator" FullName="System.Windows.LocalValueEnumerator">
  <TypeSignature Language="C#" Value="public struct LocalValueEnumerator : System.Collections.IEnumerator" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LocalValueEnumerator extends System.ValueType implements class System.Collections.IEnumerator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LocalValueEnumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure LocalValueEnumerator&#xA;Implements IEnumerator" />
  <TypeSignature Language="C++ CLI" Value="public value class LocalValueEnumerator : System::Collections::IEnumerator" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="d30d9-101">為任何存在於 <see cref="T:System.Windows.DependencyObject" /> 之相依性屬性的區域數值提供列舉支援。</span><span class="sxs-lookup"><span data-stu-id="d30d9-101">Provides enumeration support for the local values of any dependency properties that exist on a <see cref="T:System.Windows.DependencyObject" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d30d9-102">A*區域數值*是藉由呼叫設定直接在相依性屬性的相依性屬性的值<xref:System.Windows.DependencyObject.SetValue%2A>，或更常使用的 set 存取子[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]屬性包裝函式呼叫<xref:System.Windows.DependencyObject.SetValue%2A>在內部。</span><span class="sxs-lookup"><span data-stu-id="d30d9-102">A *local value* is a value for a dependency property that was set directly on a dependency property, by calling <xref:System.Windows.DependencyObject.SetValue%2A>, or more typically by using the set accessor of a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] property wrapper that calls <xref:System.Windows.DependencyObject.SetValue%2A> internally.</span></span> <span data-ttu-id="d30d9-103">其他屬性系統行列式沒有區域數值的範例包括透過樣式，設定的值或相依性屬性的預設值。</span><span class="sxs-lookup"><span data-stu-id="d30d9-103">Examples of other property system determinants that are not local values are values set through styles, or dependency property default values.</span></span> <span data-ttu-id="d30d9-104">如需詳細資訊，請參閱[相依性屬性值優先順序](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</span><span class="sxs-lookup"><span data-stu-id="d30d9-104">For details, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 <span data-ttu-id="d30d9-105">A<xref:System.Windows.LocalValueEnumerator>傳回<xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>方法，而且會實作<xref:System.Collections.IEnumerator>介面。</span><span class="sxs-lookup"><span data-stu-id="d30d9-105">A <xref:System.Windows.LocalValueEnumerator> is returned by the <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> method and implements the <xref:System.Collections.IEnumerator> interface.</span></span> <span data-ttu-id="d30d9-106">公用<xref:System.Windows.LocalValueEnumerator>建構函式不存在; 因此，您必須呼叫<xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A>取得這個類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="d30d9-106">A public <xref:System.Windows.LocalValueEnumerator> constructor does not exist; therefore, you must call <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> to obtain an instance of this class.</span></span>  
  
 <span data-ttu-id="d30d9-107">請勿修改本機值 (藉由呼叫<xref:System.Windows.DependencyObject.SetValue%2A>或<xref:System.Windows.DependencyObject.ClearValue%2A>) 列舉本機值時發生。</span><span class="sxs-lookup"><span data-stu-id="d30d9-107">Do not modify local values (by calling <xref:System.Windows.DependencyObject.SetValue%2A> or <xref:System.Windows.DependencyObject.ClearValue%2A>) while enumerating local values.</span></span> <span data-ttu-id="d30d9-108">如果您變更或取消選取的屬性值會根據傳回的列舉值的屬性，變更或清除作業不會使無效列舉值集合中，在此情況下讓許多<xref:System.Collections.IEnumerator>實作。</span><span class="sxs-lookup"><span data-stu-id="d30d9-108">If you change or clear the property values based on properties that are returned by the enumerator, the change or clear operations do not invalidate the enumerator collection, as is the case for many <xref:System.Collections.IEnumerator> implementations.</span></span> <span data-ttu-id="d30d9-109">此外，列舉程式檢視是快照集。</span><span class="sxs-lookup"><span data-stu-id="d30d9-109">Also, the enumerator view is a snapshot.</span></span> <span data-ttu-id="d30d9-110">集合的變更並不一定都具備執行緒安全，不會鎖定會強制執行。</span><span class="sxs-lookup"><span data-stu-id="d30d9-110">A change to the collection is not guaranteed to be thread safe, and no lock is enforced.</span></span> <span data-ttu-id="d30d9-111">其他執行緒仍然必須免費存取本機值從列舉值以外的內容。</span><span class="sxs-lookup"><span data-stu-id="d30d9-111">Other threads still have free access to the local values from a context other than the enumerator.</span></span>  
  
 <span data-ttu-id="d30d9-112">使用此類型如果您在您的類別作業很重要知道屬性的值是否來自本機值。</span><span class="sxs-lookup"><span data-stu-id="d30d9-112">Use this type if you have operations in your class where it is important to know whether a property's value came from a local value.</span></span> <span data-ttu-id="d30d9-113">例如，使用這個型別<xref:System.Windows.DependencyObject.OnPropertyChanged%2A>實作，或您想要查詢在本機上所有的中繼資料的地方設定屬性。</span><span class="sxs-lookup"><span data-stu-id="d30d9-113">For example, use this type in an <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> implementation, or where you want to query the metadata on all locally set properties.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyObject" />
  </Docs>
  <Members>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d30d9-114">取得集合中表示的項目數。</span><span class="sxs-lookup"><span data-stu-id="d30d9-114">Gets the number of items that are represented in the collection.</span></span></summary>
        <value><span data-ttu-id="d30d9-115">集合中的項目數目</span><span class="sxs-lookup"><span data-stu-id="d30d9-115">The number of items in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d30d9-116">這個屬性不是已定義的成員<xref:System.Collections.IEnumerator>但為了方便起見而提供。</span><span class="sxs-lookup"><span data-stu-id="d30d9-116">This property is not a defined member of <xref:System.Collections.IEnumerator> but is provided as a convenience.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.LocalValueEntry Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LocalValueEntry Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As LocalValueEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LocalValueEntry Current { System::Windows::LocalValueEntry get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LocalValueEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d30d9-117">取得集合中目前的項目。</span><span class="sxs-lookup"><span data-stu-id="d30d9-117">Gets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="d30d9-118">集合中目前的 <see cref="T:System.Windows.LocalValueEntry" />。</span><span class="sxs-lookup"><span data-stu-id="d30d9-118">The current <see cref="T:System.Windows.LocalValueEntry" /> in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d30d9-119">此版普遍可存取的屬性會依賴的集合，會在建立快照集。</span><span class="sxs-lookup"><span data-stu-id="d30d9-119">This generally accessible version of the property relies on a snapshot of the collection that is taken at creation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d30d9-120">與目前的 <see cref="T:System.Windows.LocalValueEnumerator" /> 相比較的 <see cref="T:System.Windows.LocalValueEnumerator" />。</span><span class="sxs-lookup"><span data-stu-id="d30d9-120">The <see cref="T:System.Windows.LocalValueEnumerator" /> to compare with the current <see cref="T:System.Windows.LocalValueEnumerator" />.</span></span></param>
        <summary><span data-ttu-id="d30d9-121">判斷提供的 <see cref="T:System.Windows.LocalValueEnumerator" /> 是否與這個 <see cref="T:System.Windows.LocalValueEnumerator" /> 相等。</span><span class="sxs-lookup"><span data-stu-id="d30d9-121">Determines whether the provided <see cref="T:System.Windows.LocalValueEnumerator" /> is equivalent to this <see cref="T:System.Windows.LocalValueEnumerator" />.</span></span></summary>
        <returns>
          <span data-ttu-id="d30d9-122">如果指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 和目前的 <see cref="T:System.Windows.LocalValueEnumerator" /> 相等，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d30d9-122"><see langword="true" /> if the specified <see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the current <see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d30d9-123">這個實作會支援僅參考相等。</span><span class="sxs-lookup"><span data-stu-id="d30d9-123">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d30d9-124">傳回目前 <see cref="T:System.Windows.LocalValueEnumerator" /> 的雜湊程式碼。</span><span class="sxs-lookup"><span data-stu-id="d30d9-124">Returns a hash code for the current <see cref="T:System.Windows.LocalValueEnumerator" />.</span></span></summary>
        <returns><span data-ttu-id="d30d9-125">32 位元整數雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="d30d9-125">A 32-bit integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d30d9-126">將列舉值往前推至下集合中的下一個項目。</span><span class="sxs-lookup"><span data-stu-id="d30d9-126">Advances the enumerator to the next element of the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="d30d9-127">如果列舉值成功前移至下一個項目，則為 <see langword="true" />；如果列舉值超過集合的結尾，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d30d9-127"><see langword="true" /> if the enumerator was successfully advanced to the next element; <see langword="false" /> if the enumerator has passed the end of the collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.LocalValueEnumerator obj1, valuetype System.Windows.LocalValueEnumerator obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.op_Equality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (obj1 As LocalValueEnumerator, obj2 As LocalValueEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::LocalValueEnumerator obj1, System::Windows::LocalValueEnumerator obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEnumerator" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="d30d9-128">要比較的第一個物件。</span><span class="sxs-lookup"><span data-stu-id="d30d9-128">The first object to compare.</span></span></param>
        <param name="obj2"><span data-ttu-id="d30d9-129">要比較的第二個物件。</span><span class="sxs-lookup"><span data-stu-id="d30d9-129">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="d30d9-130">比較兩個指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 物件是否相同。</span><span class="sxs-lookup"><span data-stu-id="d30d9-130">Compares whether two specified <see cref="T:System.Windows.LocalValueEnumerator" /> objects are the same.</span></span></summary>
        <returns>
          <span data-ttu-id="d30d9-131">若 <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> 等於 <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" /> 則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d30d9-131"><see langword="true" /> if the <paramref name="obj1" /><see cref="T:System.Windows.LocalValueEnumerator" /> is equal to the <paramref name="obj2" /><see cref="T:System.Windows.LocalValueEnumerator" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d30d9-132">這個實作會支援僅參考相等。</span><span class="sxs-lookup"><span data-stu-id="d30d9-132">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.LocalValueEnumerator obj1, System.Windows.LocalValueEnumerator obj2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.LocalValueEnumerator obj1, valuetype System.Windows.LocalValueEnumerator obj2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.op_Inequality(System.Windows.LocalValueEnumerator,System.Windows.LocalValueEnumerator)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (obj1 As LocalValueEnumerator, obj2 As LocalValueEnumerator) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::LocalValueEnumerator obj1, System::Windows::LocalValueEnumerator obj2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj1" Type="System.Windows.LocalValueEnumerator" />
        <Parameter Name="obj2" Type="System.Windows.LocalValueEnumerator" />
      </Parameters>
      <Docs>
        <param name="obj1"><span data-ttu-id="d30d9-133">要比較的第一個物件。</span><span class="sxs-lookup"><span data-stu-id="d30d9-133">The first object to compare.</span></span></param>
        <param name="obj2"><span data-ttu-id="d30d9-134">要比較的第二個物件。</span><span class="sxs-lookup"><span data-stu-id="d30d9-134">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="d30d9-135">比較兩個指定的 <see cref="T:System.Windows.LocalValueEnumerator" /> 物件，判斷它們是否不相同。</span><span class="sxs-lookup"><span data-stu-id="d30d9-135">Compares two specified <see cref="T:System.Windows.LocalValueEnumerator" /> objects to determine whether they are not the same.</span></span></summary>
        <returns>
          <span data-ttu-id="d30d9-136">如果執行個體不相等則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d30d9-136"><see langword="true" /> if the instances are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d30d9-137">這個實作會支援僅參考相等。</span><span class="sxs-lookup"><span data-stu-id="d30d9-137">This implementation supports reference equality only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LocalValueEnumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d30d9-138">設定列舉值至它的初始位置，這是在集合中第一個項目之前。</span><span class="sxs-lookup"><span data-stu-id="d30d9-138">Sets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d30d9-139">如需這個成員的說明，請參閱 <see cref="P:System.Collections.IEnumerator.Current" />。</span><span class="sxs-lookup"><span data-stu-id="d30d9-139">For a description of this members, see <see cref="P:System.Collections.IEnumerator.Current" />.</span></span></summary>
        <value><span data-ttu-id="d30d9-140">集合中目前的項目。</span><span class="sxs-lookup"><span data-stu-id="d30d9-140">The current element in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d30d9-141">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="d30d9-141">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d30d9-142">只有在 <xref:System.Windows.LocalValueEnumerator> 執行個體轉換成 <xref:System.Collections.IEnumerator> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="d30d9-142">It can be used only when the <xref:System.Windows.LocalValueEnumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.LocalValueEnumerator.Current" />
      </Docs>
    </Member>
  </Members>
</Type>