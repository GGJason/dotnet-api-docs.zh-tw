<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1e616e4ddce4ac249d5636d5cd6f017ded4ec5fa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36461729" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <TypeSignature Language="F#" Value="type CoerceValueCallback = delegate of DependencyObject * obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d">The object that the property exists on. When the callback is invoked, the property system will pass this value.</param>
    <param name="baseValue">The new value of the property, prior to any coercion attempt.</param>
    <summary>Provides a template for a method that is called whenever a dependency property value is being re-evaluated, or coercion is specifically requested.</summary>
    <returns>The coerced value (with appropriate type).</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 回呼根據<xref:System.Windows.CoerceValueCallback>可以指派給透過數種不同技術的相依性屬性。 這些技術的每個需要您先建立新的屬性中繼資料物件 (<xref:System.Windows.PropertyMetadata>，或衍生的類別，例如<xref:System.Windows.FrameworkPropertyMetadata>)。 建立使用會採用的建構函式簽章的中繼資料物件`coerceValueCallback`參數，並將該參數指派給您的回呼處理常式。 建構的任何簽章和集合的中繼資料或<xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>屬性，再將中繼資料放在使用中。  
  
 當您有這個中繼資料時，您可以：  
  
-   在新的類別，並使用其中一個簽章上定義新的相依性屬性<xref:System.Windows.DependencyProperty.Register%2A>，讓中繼資料當做`typeMetadata`值。  
  
-   覆寫中繼資料 (呼叫<xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) 針對現有的相依性屬性，當您從擁有相依性屬性的類別衍生。  
  
-   將現有的相依性屬性加入至新<xref:System.Windows.DependencyObject>類別，使用新的中繼資料，藉由呼叫<xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>。  
  
 此回呼的實作應該檢查值`baseValue`並判斷這是否需要進一步強制轉型的值為基礎的值或型別。  
  
 <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>相依性屬性會叫用屬性系統或其他呼叫端呼叫任何時間<xref:System.Windows.DependencyObject.CoerceValue%2A>上<xref:System.Windows.DependencyObject>執行個體，並指定該屬性的識別碼，則為`dp`。  
  
 屬性值的變更可能會有來自屬性系統中任何可能的參與者。 這包括樣式、 泛型失效，觸發程序、 屬性值繼承，以及本機值設定。  
  
 您通常應該避免指定一個以上的<xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>針對任何指定的相依性屬性 (覆寫或新增具有新的中繼資料已經有相依性屬性的<xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>)。 只有其中一個回呼會起作用。做回呼將會套用到繼承相較之下中最常衍生的類別的一個<xref:System.Windows.DependencyObject>呼叫端。 中繼資料遭到覆寫時，會取代其他回呼仍所指派的相依性屬性的中繼資料的擁有者階層更高版本存在。  
  
   
  
## Examples  
 下列範例包含實作此回呼，強制轉型儲存其他輸入，例如另一個屬性的值為基礎的相依性屬性的值。 在此情況下，回呼會檢查以查看是否`ShirtType`屬性會對應至一種按鈕的上衣; 如果是的話，它會建立為預設的開始色彩`ButtonColor`，如果 shirt 類型不具有任何按鈕時，會強制`ButtonColor`值回到起始值，因而導致[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]（未顯示） 的下拉式清單中移除的有效選項。  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>