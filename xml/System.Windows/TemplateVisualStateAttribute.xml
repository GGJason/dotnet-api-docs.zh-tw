<Type Name="TemplateVisualStateAttribute" FullName="System.Windows.TemplateVisualStateAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a69249690f1e064f462a6ca645a0bd3f16bec666" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36456691" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TemplateVisualStateAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateVisualStateAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateVisualStateAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TemplateVisualStateAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateVisualStateAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TemplateVisualStateAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示控制項可以處於特定狀態，而且 <see cref="T:System.Windows.VisualState" /> 是控制項的 <see cref="T:System.Windows.Controls.ControlTemplate" /> 中的預期項目。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 控制項作者會使用這個屬性來指定<xref:System.Windows.VisualState>和<xref:System.Windows.VisualStateGroup>屬於其控制項中的物件<xref:System.Windows.Controls.ControlTemplate>。  例如，假設您建立新的控制項有兩個名為的視覺狀態`Focused`和`Unfocused`，這是中的<xref:System.Windows.VisualStateGroup>名為`FocusStates`。  若要指定<xref:System.Windows.Controls.ControlTemplate>它們可以使用這些視覺狀態的作者加入兩個<xref:System.Windows.TemplateVisualStateAttribute>屬性，將控制項的類別簽章。  指定<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>屬性是`FocusStates`而且<xref:System.Windows.TemplateVisualStateAttribute.Name%2A>屬性是`Focused`其中一個與`Unfocused`其他。  
  
   
  
## Examples  
 下列範例示範類別簽章`NumericUpDown`控制項。  這個範例會指定`NumericUpDown`控制項使用四個視覺狀態。  兩個狀態，名為`Positive`和`Negative`，位於<xref:System.Windows.VisualStateGroup>名為`ValueStates`。  兩個狀態，命名`Focused`和`Unfocused`，位於<xref:System.Windows.VisualStateGroup>名為`FocusedStates`。  對於整個範例，請參閱[建立控制項的可自訂外觀](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)。  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateVisualStateAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateVisualStateAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.TemplateVisualStateAttribute" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupName">
      <MemberSignature Language="C#" Value="public string GroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupName : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定狀態所屬的群組之名稱。</summary>
        <value>狀態所屬之 <see cref="T:System.Windows.VisualStateGroup" /> 的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>屬性會對應至<xref:System.Windows.VisualStateGroup.Name%2A?displayProperty=nameWithType>屬性<xref:System.Windows.VisualStateGroup>物件。 若要指定的項目<xref:System.Windows.VisualStateGroup><xref:System.Windows.VisualState>所屬在中，設定<xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>屬性。  
  
   
  
## Examples  
 下列範例示範類別簽章`NumericUpDown`控制項。  這個範例會指定`NumericUpDown`控制項使用四個視覺狀態。  兩個狀態，名為`Positive`和`Negative`，位於<xref:System.Windows.VisualStateGroup>名為`ValueStates`。  兩個狀態，命名`Focused`和`Unfocused`，位於<xref:System.Windows.VisualStateGroup>名為`FocusedStates`。  對於整個範例，請參閱[建立控制項的可自訂外觀](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)。  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定控制項可以處於的狀態名稱。</summary>
        <value>控制項可以處於的狀態名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType>屬性會對應至<xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType>屬性<xref:System.Windows.VisualState>。 若要指定的項目<xref:System.Windows.VisualState>屬於控制項的<xref:System.Windows.Controls.ControlTemplate>，將<xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType>屬性。  
  
   
  
## Examples  
 下列範例示範類別簽章`NumericUpDown`控制項。  這個範例會指定`NumericUpDown`控制項使用四個視覺狀態。  兩個狀態，名為`Positive`和`Negative`，位於<xref:System.Windows.VisualStateGroup>名為`ValueStates`。  兩個狀態，命名`Focused`和`Unfocused`，位於<xref:System.Windows.VisualStateGroup>名為`FocusedStates`。  對於整個範例，請參閱[建立控制項的可自訂外觀](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)。  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>