<Type Name="FrameworkElement" FullName="System.Windows.FrameworkElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f9436c4c983e3940bfa7043e2eac92986b636f8f" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56389351" /></Metadata><TypeSignature Language="C#" Value="public class FrameworkElement : System.Windows.UIElement, System.ComponentModel.ISupportInitialize, System.Windows.IFrameworkInputElement, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FrameworkElement extends System.Windows.UIElement implements class System.ComponentModel.ISupportInitialize, class System.Windows.IFrameworkInputElement, class System.Windows.IInputElement, class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkElement" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElement&#xA;Inherits UIElement&#xA;Implements IFrameworkInputElement, IQueryAmbient, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElement : System::Windows::UIElement, System::ComponentModel::ISupportInitialize, System::Windows::IFrameworkInputElement, System::Windows::Markup::IQueryAmbient" />
  <TypeSignature Language="F#" Value="type FrameworkElement = class&#xA;    inherit UIElement&#xA;    interface IFrameworkInputElement&#xA;    interface IInputElement&#xA;    interface ISupportInitialize&#xA;    interface IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.UIElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IFrameworkInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.UsableDuringInitialization(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.XmlLangProperty("Language")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="FocusVisualStyle", StyleTargetType=typeof(System.Windows.Controls.Control))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="98f6b-101">為 Windows Presentation Foundation (WPF) 項目提供一組 WPF 架構層級的屬性、事件和方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-101">Provides a WPF framework-level set of properties, events, and methods for Windows Presentation Foundation (WPF) elements.</span></span> <span data-ttu-id="98f6b-102">這個類別代表所提供的 WPF 架構層級實作，此實作建置在由 <see cref="T:System.Windows.UIElement" /> 所定義的 WPF 核心層級 API 之上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-102">This class represents the provided WPF framework-level implementation that is built on the WPF core-level APIs that are defined by <see cref="T:System.Windows.UIElement" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-103"><xref:System.Windows.FrameworkElement> 是 WPF 架構層級項目類別以及 WPF 核心層級的集合之間的連接點<xref:System.Windows.UIElement>展示服務。</span><span class="sxs-lookup"><span data-stu-id="98f6b-103"><xref:System.Windows.FrameworkElement> is the connecting point between WPF framework-level element classes and the WPF core-level set of <xref:System.Windows.UIElement> presentation services.</span></span> <span data-ttu-id="98f6b-104">如需有關這些概念的詳細資訊，請參閱 < [WPF 架構](~/docs/framework/wpf/advanced/wpf-architecture.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-104">For more information about these concepts, see [WPF Architecture](~/docs/framework/wpf/advanced/wpf-architecture.md).</span></span>  
  
 <span data-ttu-id="98f6b-105"><xref:System.Windows.FrameworkElement> 擴充<xref:System.Windows.UIElement>並新增下列功能：</span><span class="sxs-lookup"><span data-stu-id="98f6b-105"><xref:System.Windows.FrameworkElement> extends <xref:System.Windows.UIElement> and adds the following capabilities:</span></span>  
  
-   <span data-ttu-id="98f6b-106">**版面配置系統定義**:<xref:System.Windows.FrameworkElement>提供特定的 WPF 架構層級實作特定方法中的虛擬成員所定義的<xref:System.Windows.UIElement>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-106">**Layout system definition**: <xref:System.Windows.FrameworkElement> provides specific WPF framework-level implementations for certain methods that were defined as virtual members in  <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="98f6b-107">最值得注意的是，<xref:System.Windows.FrameworkElement>密封特定 WPF 核心層級的版面配置覆寫，並改為提供 WPF 架構層級對等項目，衍生類別應該覆寫。</span><span class="sxs-lookup"><span data-stu-id="98f6b-107">Most notably, <xref:System.Windows.FrameworkElement> seals certain WPF core-level layout overrides, and instead provides a WPF framework-level equivalent that derived classes should override instead.</span></span> <span data-ttu-id="98f6b-108">例如，<xref:System.Windows.FrameworkElement>標誌<xref:System.Windows.UIElement.ArrangeCore%2A>提供，但<xref:System.Windows.FrameworkElement.ArrangeOverride%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-108">For example, <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.UIElement.ArrangeCore%2A> but provides <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span> <span data-ttu-id="98f6b-109">這些變更會反映在 WPF 架構層級沒有完整的版面配置系統可呈現任何就地<xref:System.Windows.FrameworkElement>衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-109">These changes reflect the fact that at the WPF framework-level there is a full layout system in place that can render any <xref:System.Windows.FrameworkElement> derived class.</span></span> <span data-ttu-id="98f6b-110">在 WPF 核心層級的特定成員，將結構一般[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]配置方案已備妥，但未定義的版面配置系統實際的引擎。</span><span class="sxs-lookup"><span data-stu-id="98f6b-110">At the WPF core level, certain members that will structure a general [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] based layout solution are in place, but the actual engine of the layout system is not defined.</span></span> <span data-ttu-id="98f6b-111">如需詳細資訊，請參閱[配置](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-111">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
-   <span data-ttu-id="98f6b-112">**邏輯樹狀結構中：** 一般[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]程式設計模型以在元素樹狀結構通常表示。</span><span class="sxs-lookup"><span data-stu-id="98f6b-112">**The logical tree:** The general [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programming model is often expressed in terms of being a tree of elements.</span></span> <span data-ttu-id="98f6b-113">讓您表示的項目樹狀結構，為邏輯樹狀結構中，並隨附支援，如在標記中定義該樹狀結構在實作<xref:System.Windows.FrameworkElement>層級。</span><span class="sxs-lookup"><span data-stu-id="98f6b-113">Support for expressing the tree of elements as a logical tree, and accompanying support for defining that tree in markup is implemented at the <xref:System.Windows.FrameworkElement> level.</span></span> <span data-ttu-id="98f6b-114">請注意，不過<xref:System.Windows.FrameworkElement>刻意不會定義內容的模型，並將保留該衍生類別的責任。</span><span class="sxs-lookup"><span data-stu-id="98f6b-114">Note however that <xref:System.Windows.FrameworkElement> deliberately does not define a content model, and leaves that responsibility to derived classes.</span></span> <span data-ttu-id="98f6b-115">如需詳細資訊，請參閱 [WPF 中的樹狀結構](~/docs/framework/wpf/advanced/trees-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-115">For more information, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
-   <span data-ttu-id="98f6b-116">**物件存留期事件：** 它通常是很有幫助 初始化項目時 （稱為建構函式） 或當項目是第一次載入邏輯樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="98f6b-116">**Object lifetime events:** It is often useful to know when an element is initialized (the constructor is called) or when the element is first loaded into a logical tree.</span></span> <span data-ttu-id="98f6b-117"><xref:System.Windows.FrameworkElement> 定義數個事件與物件存留期，為包含項目，例如新增更多的子元素的程式碼後置作業提供有用的勾點。</span><span class="sxs-lookup"><span data-stu-id="98f6b-117"><xref:System.Windows.FrameworkElement> defines several events related to object lifetime that provide useful hooks for code-behind operations that involve elements, such as adding more child elements.</span></span> <span data-ttu-id="98f6b-118">如需詳細資訊，請參閱 <<c0> [ 物件存留期事件](~/docs/framework/wpf/advanced/object-lifetime-events.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-118">For more information, see [Object Lifetime Events](~/docs/framework/wpf/advanced/object-lifetime-events.md).</span></span>  
  
-   <span data-ttu-id="98f6b-119">**支援資料繫結和動態資源參考：** 資料繫結和資源的屬性層級支援由實作<xref:System.Windows.DependencyProperty>類別，並在屬性系統，但能夠解析成員值儲存為<xref:System.Windows.Expression>（程式設計建構之下同時資料繫結和動態資源） 藉由<xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-119">**Support for data binding and dynamic resource references:** The property-level support for data binding and resources is implemented by the <xref:System.Windows.DependencyProperty> class and embodied in the property system, but the ability to resolve a member value that is stored as an <xref:System.Windows.Expression> (the programming construct that underlies both data binding and dynamic resources) is implemented by <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="98f6b-120">如需詳細資訊，請參閱 <<c0> [ 資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)並[XAML 資源](~/docs/framework/wpf/advanced/xaml-resources.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-120">For more information, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md) and [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
-   <span data-ttu-id="98f6b-121">**樣式：** <xref:System.Windows.FrameworkElement>定義<xref:System.Windows.FrameworkElement.Style%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-121">**Styles:** <xref:System.Windows.FrameworkElement> defines the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="98f6b-122">不過，<xref:System.Windows.FrameworkElement>尚未定義支援範本，或支援的裝飾項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-122">However, <xref:System.Windows.FrameworkElement> does not yet define support for templates, or support decorators.</span></span> <span data-ttu-id="98f6b-123">這些功能導入的控制項類別這類<xref:System.Windows.Controls.Control>和<xref:System.Windows.Controls.ContentControl>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-123">These features are introduced by control classes such as <xref:System.Windows.Controls.Control> and <xref:System.Windows.Controls.ContentControl>.</span></span>  
  
-   <span data-ttu-id="98f6b-124">**更多的動畫支援：** 某些動畫支援已定義在 WPF 核心層級，但<xref:System.Windows.FrameworkElement>延伸此程式碼藉由實作<xref:System.Windows.FrameworkElement.BeginStoryboard%2A>和相關的成員。</span><span class="sxs-lookup"><span data-stu-id="98f6b-124">**More animation support:** Some animation support was already defined at the WPF core level, but <xref:System.Windows.FrameworkElement> extends this by implementing <xref:System.Windows.FrameworkElement.BeginStoryboard%2A> and related members.</span></span>  
  
 <span data-ttu-id="98f6b-125">可以從類別階層架構中，看出許多[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]類別衍生自<xref:System.Windows.FrameworkElement>，直接或透過中繼基底類別，例如<xref:System.Windows.Controls.Panel>或<xref:System.Windows.Controls.Control>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-125">As can be seen from the class hierarchy, many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] classes derive from <xref:System.Windows.FrameworkElement>, either directly or through intermediate base classes such as <xref:System.Windows.Controls.Panel> or <xref:System.Windows.Controls.Control>.</span></span>  
  
 <span data-ttu-id="98f6b-126">如果您想要使用<xref:System.Windows.FrameworkElement>做為基底類別，您可能想要先檢查現有的衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-126">If you intend to use <xref:System.Windows.FrameworkElement> as a base class, you might want to first examine the existing derived classes.</span></span> <span data-ttu-id="98f6b-127"><xref:System.Windows.FrameworkElement> 支援許多基本案例，但因為缺乏一些令人期待的 「 項目 」，因為您用來建立的建置區塊的功能[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]在[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="98f6b-127"><xref:System.Windows.FrameworkElement> provides support for a number of basic scenarios, but also lacks a number of features that are desirable for an "element" in the sense of a building block that you use to create [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span> <span data-ttu-id="98f6b-128">比方說，<xref:System.Windows.FrameworkElement>並未定義任何真實的內容模型;<xref:System.Windows.FrameworkElement>基底類別並未定義此屬性，可以建立如[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]子項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-128">For instance, a <xref:System.Windows.FrameworkElement> does not define any true content model; <xref:System.Windows.FrameworkElement> as a base class does not define a property that can create [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] child elements.</span></span> <span data-ttu-id="98f6b-129">特別是，您可能想要看看<xref:System.Windows.Controls.Control>和<xref:System.Windows.Controls.ContentControl>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-129">In particular, you might want to look at <xref:System.Windows.Controls.Control> and <xref:System.Windows.Controls.ContentControl>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyObject" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-130">初始化 <see cref="T:System.Windows.FrameworkElement" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="98f6b-130">Initializes a new instance of the <see cref="T:System.Windows.FrameworkElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualHeight">
      <MemberSignature Language="C#" Value="public double ActualHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ActualHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.ActualHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActualHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ActualHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ActualHeight : double" Usage="System.Windows.FrameworkElement.ActualHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-131">取得呈現此項目的高度。</span><span class="sxs-lookup"><span data-stu-id="98f6b-131">Gets the rendered height of this element.</span></span></summary>
        <value><span data-ttu-id="98f6b-132">項目的高度，做為[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 內的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-132">The element's height, as a value in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span> <span data-ttu-id="98f6b-133">預設值是 0 (零)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-133">The default value is 0 (zero).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-134">這個屬性是根據其他高度輸入和版面配置系統的導出的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-134">This property is a calculated value based on other height inputs, and the layout system.</span></span> <span data-ttu-id="98f6b-135">值，由配置系統本身根據實際轉譯階段，並可能因此會落後稍有設定的值屬性的這類<xref:System.Windows.FrameworkElement.Height%2A>所輸入變更的基礎。</span><span class="sxs-lookup"><span data-stu-id="98f6b-135">The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as <xref:System.Windows.FrameworkElement.Height%2A> that are the basis of the input change.</span></span>  
  
 <span data-ttu-id="98f6b-136">因為<xref:System.Windows.FrameworkElement.ActualHeight%2A>是計算的值，您應該注意可能是多個，或是設定報告的累加式變更為其各種作業的結果由配置系統。</span><span class="sxs-lookup"><span data-stu-id="98f6b-136">Because <xref:System.Windows.FrameworkElement.ActualHeight%2A> is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system.</span></span> <span data-ttu-id="98f6b-137">配置系統可能會計算子項目所需的測量空間、父項目的條件約束，依此類推。</span><span class="sxs-lookup"><span data-stu-id="98f6b-137">The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.</span></span>  
  
 <span data-ttu-id="98f6b-138">雖然您無法設定這個屬性從[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，您可以根據<xref:System.Windows.Trigger>其樣式中的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-138">Although you cannot set this property from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], you can base a <xref:System.Windows.Trigger> upon its value in a style.</span></span>  
  
<a name="dependencyPropertyInfo_ActualHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-139">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-139">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-140">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-140">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ActualHeightProperty>|  
|<span data-ttu-id="98f6b-141">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-141">Metadata properties set to `true`</span></span>|<span data-ttu-id="98f6b-142">無</span><span class="sxs-lookup"><span data-stu-id="98f6b-142">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-143">下列範例會顯示各種高度屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-143">The following example displays various height properties.</span></span>  
  
 [!code-csharp[HeightMinHeightMaxHeight#3](~/samples/snippets/csharp/VS_Snippets_Wpf/HeightMinHeightMaxHeight/CSharp/Window1.xaml.cs#3)]
 [!code-vb[HeightMinHeightMaxHeight#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HeightMinHeightMaxHeight/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActualHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActualHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ActualHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActualHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActualHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActualHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.ActualHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-144">識別 <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-144">Identifies the <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualWidth">
      <MemberSignature Language="C#" Value="public double ActualWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ActualWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.ActualWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActualWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ActualWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ActualWidth : double" Usage="System.Windows.FrameworkElement.ActualWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-145">取得呈現此項目的寬度。</span><span class="sxs-lookup"><span data-stu-id="98f6b-145">Gets the rendered width of this element.</span></span></summary>
        <value><span data-ttu-id="98f6b-146">項目的寬度，做為[!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 內的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-146">The element's width, as a value in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span> <span data-ttu-id="98f6b-147">預設值是 0 (零)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-147">The default value is 0 (zero).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-148">這個屬性是根據其他寬度輸入和版面配置系統的導出的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-148">This property is a calculated value based on other width inputs, and the layout system.</span></span> <span data-ttu-id="98f6b-149">值，由配置系統本身根據實際轉譯階段，並可能因此會落後稍有設定的值屬性的這類<xref:System.Windows.FrameworkElement.Width%2A>所輸入變更的基礎。</span><span class="sxs-lookup"><span data-stu-id="98f6b-149">The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as <xref:System.Windows.FrameworkElement.Width%2A> that are the basis of the input change.</span></span>  
  
 <span data-ttu-id="98f6b-150">因為<xref:System.Windows.FrameworkElement.ActualWidth%2A>是計算的值，您應該注意可能是多個，或是設定報告的累加式變更為其各種作業的結果由配置系統。</span><span class="sxs-lookup"><span data-stu-id="98f6b-150">Because <xref:System.Windows.FrameworkElement.ActualWidth%2A> is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system.</span></span> <span data-ttu-id="98f6b-151">配置系統可能會計算子項目所需的測量空間、父項目的條件約束，依此類推。</span><span class="sxs-lookup"><span data-stu-id="98f6b-151">The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.</span></span>  
  
 <span data-ttu-id="98f6b-152">雖然您無法設定這個屬性從[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，您可以根據<xref:System.Windows.Trigger>其樣式中的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-152">Although you cannot set this property from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], you can base a <xref:System.Windows.Trigger> upon its value in a style.</span></span>  
  
<a name="dependencyPropertyInfo_ActualWidth"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-153">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-153">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-154">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-154">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ActualWidthProperty>|  
|<span data-ttu-id="98f6b-155">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-155">Metadata properties set to `true`</span></span>|<span data-ttu-id="98f6b-156">無</span><span class="sxs-lookup"><span data-stu-id="98f6b-156">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-157">下列範例會顯示各種寬度屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-157">The following example displays various width properties.</span></span>  
  
 [!code-csharp[WidthMinWidthMaxWidth#3](~/samples/snippets/csharp/VS_Snippets_Wpf/WidthMinWidthMaxWidth/CSharp/Window1.xaml.cs#3)]
 [!code-vb[WidthMinWidthMaxWidth#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WidthMinWidthMaxWidth/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActualWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActualWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ActualWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActualWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActualWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActualWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.ActualWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-158">識別 <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-158">Identifies the <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLogicalChild">
      <MemberSignature Language="C#" Value="protected internal void AddLogicalChild (object child);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddLogicalChild(object child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddLogicalChild (child As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddLogicalChild(System::Object ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddLogicalChild : obj -&gt; unit" Usage="frameworkElement.AddLogicalChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="98f6b-159">要加入的子項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-159">Child element to be added.</span></span></param>
        <summary><span data-ttu-id="98f6b-160">將所提供的物件加入至此項目的邏輯樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="98f6b-160">Adds the provided object to the logical tree of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-161">使用此方法實作的物件，表示項目的邏輯子項目的集合。</span><span class="sxs-lookup"><span data-stu-id="98f6b-161">Use this method for the implementation of collections on objects that represent logical child elements of an element.</span></span> <span data-ttu-id="98f6b-162">子項目集合的集合維護可能會在屬性 getter 或 setter，類別處理的 Changed 事件，建構函式，或將集合型別本身內完成。</span><span class="sxs-lookup"><span data-stu-id="98f6b-162">Collection maintenance for child element collections might be done in property getters or setters, class handling of Changed events, constructors, or within the collection types themselves.</span></span>  
  
 <span data-ttu-id="98f6b-163">針對控制項作者，操作邏輯樹狀結構，在此層級不是建議的作法，除非使用的基底控制項類別的內容模型都適用於您控制的案例。</span><span class="sxs-lookup"><span data-stu-id="98f6b-163">For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the content models for available base control classes are appropriate for your control scenario.</span></span> <span data-ttu-id="98f6b-164">層級的子類別化，請考慮<xref:System.Windows.Controls.ContentControl>， <xref:System.Windows.Controls.ItemsControl>，和<xref:System.Windows.Controls.HeaderedItemsControl>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-164">Consider subclassing at the level of <xref:System.Windows.Controls.ContentControl>, <xref:System.Windows.Controls.ItemsControl>, and <xref:System.Windows.Controls.HeaderedItemsControl>.</span></span> <span data-ttu-id="98f6b-165">這些類別提供特定的強制執行的邏輯樹狀結構子項目，透過專用的內容模型[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]，以及通常希望出現在其他功能的支援[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]控制項，例如透過範本的樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-165">These classes provide a content model with particular enforcement of logical tree child elements through dedicated [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], as well as support for other features typically desirable in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] control such as styling through templates.</span></span> <span data-ttu-id="98f6b-166">如需有關如何使用<xref:System.Windows.FrameworkElement.LogicalChildren%2A>並<xref:System.Windows.FrameworkElement.AddLogicalChild%2A>，請參閱[WPF 中的樹狀結構](~/docs/framework/wpf/advanced/trees-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-166">For more information on how to use <xref:System.Windows.FrameworkElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 <span data-ttu-id="98f6b-167"><xref:System.Windows.FrameworkElement.AddLogicalChild%2A> 如果當邏輯樹狀結構會進行逐一查看另一個處理序一次呼叫，則可能會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-167"><xref:System.Windows.FrameworkElement.AddLogicalChild%2A> may throw an exception if called at a time when the logical tree is being iterated by another process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-168">下列範例會實作`Child`自訂屬性<xref:System.Windows.FrameworkElement>執行它自己的視覺分層實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-168">The following example implements a `Child` property on a custom <xref:System.Windows.FrameworkElement> that does its own visual layer implementation.</span></span> <span data-ttu-id="98f6b-169">屬性 setter 經過設計，如果值變更時，從邏輯樹狀結構，以及特定類別的視覺集合移除的舊值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-169">The property setter is designed so that if the value changes, the old value is removed from the logical tree, as well as a class-specific visual collection.</span></span> <span data-ttu-id="98f6b-170">快取的屬性值時，，然後新增至邏輯樹狀結構和自訂的視覺集合的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-170">The property value is cached, and then the new value is added to both the logical tree and the custom visual collection.</span></span>  
  
 [!code-csharp[CompositionTargetRenderingAnimations#AddRemoveLogicalChild](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositionTargetRenderingAnimations/CSharp/ParticleEffectExamples/OverlayRenderDecorator.cs#addremovelogicalchild)]
 [!code-vb[CompositionTargetRenderingAnimations#AddRemoveLogicalChild](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CompositionTargetRenderingAnimations/visualbasic/particleeffectexamples/overlayrenderdecorator.vb#addremovelogicalchild)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyTemplate">
      <MemberSignature Language="C#" Value="public bool ApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyTemplate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ApplyTemplate();" />
      <MemberSignature Language="F#" Value="member this.ApplyTemplate : unit -&gt; bool" Usage="frameworkElement.ApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-171">如有必要，則建置目前範本的視覺化樹狀結構，並傳回值，指出此呼叫是否已重建視覺化樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="98f6b-171">Builds the current template's visual tree if necessary, and returns a value that indicates whether the visual tree was rebuilt by this call.</span></span></summary>
        <returns><span data-ttu-id="98f6b-172">如果視覺項目已加入樹狀結構，則為 <see langword="true" />；否則傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-172"><see langword="true" /> if visuals were added to the tree; returns <see langword="false" /> otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-173">應用程式可以呼叫這個方法，以保證元素的視覺化樹狀結構已完成。</span><span class="sxs-lookup"><span data-stu-id="98f6b-173">Applications can call this method to guarantee that the visual tree of an element is complete.</span></span> <span data-ttu-id="98f6b-174">這項確認步驟可能需要的程式碼會檢查樹狀結構中的子項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-174">This guarantee step might be necessary if code will be checking the child elements in the tree.</span></span> <span data-ttu-id="98f6b-175">在應用程式，呼叫的典型的項目邏輯<xref:System.Windows.FrameworkElement.ApplyTemplate%2A>並非必要，因為範本會在適當的時間點的項目在其存留期自動套用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-175">For typical element logic within applications, calling <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> is not necessary, because templates will be applied to elements at an appropriate point in their lifetimes automatically.</span></span>  
  
 <span data-ttu-id="98f6b-176"><xref:System.Windows.FrameworkElement.ApplyTemplate%2A> 每個量值上呼叫傳遞由 WPF 架構層級配置系統。</span><span class="sxs-lookup"><span data-stu-id="98f6b-176"><xref:System.Windows.FrameworkElement.ApplyTemplate%2A> is called on every Measure pass by the WPF framework-level layout system.</span></span>  
  
 <span data-ttu-id="98f6b-177"><xref:System.Windows.FrameworkElement> 在衍生的類別可以使用<xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>的情況下，明確地呼叫這個方法後，或由配置系統通知的類別處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-177"><xref:System.Windows.FrameworkElement> derived classes can use the <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> class handler to be notified of cases where this method was called explicitly, or by the layout system.</span></span> <span data-ttu-id="98f6b-178"><xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> 會呼叫後範本完全產生，並附加至邏輯樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="98f6b-178"><xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> is called after the template is completely generated and attached to the logical tree.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ControlTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeCore">
      <MemberSignature Language="C#" Value="protected override sealed void ArrangeCore (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ArrangeCore(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ArrangeCore (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ArrangeCore(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="override this.ArrangeCore : System.Windows.Rect -&gt; unit" Usage="frameworkElement.ArrangeCore finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="98f6b-179">父系內這個項目應該用來排列本身和其子系的最終區域。</span><span class="sxs-lookup"><span data-stu-id="98f6b-179">The final area within the parent that this element should use to arrange itself and its children.</span></span></param>
        <summary><span data-ttu-id="98f6b-180">實作 <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (在 <see cref="T:System.Windows.UIElement" /> 內定義為 Virtual)，並密封實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-180">Implements <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (defined as virtual in <see cref="T:System.Windows.UIElement" />) and seals the implementation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-181">這個方法是密封格式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-181">This method is sealed.</span></span> <span data-ttu-id="98f6b-182">若要覆寫您自訂的項目，特別是針對項目配置的排列傳遞中的邏輯您<xref:System.Windows.FrameworkElement>衍生的類別必須覆寫<xref:System.Windows.FrameworkElement.ArrangeOverride%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-182">In order to override the logic in your custom element specifically for the arrange pass of element layout, your <xref:System.Windows.FrameworkElement> derived class must override <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size finalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ArrangeOverride (finalSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size ArrangeOverride(System::Windows::Size finalSize);" />
      <MemberSignature Language="F#" Value="abstract member ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size&#xA;override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="frameworkElement.ArrangeOverride finalSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="finalSize"><span data-ttu-id="98f6b-183">父系內這個項目應該用來排列本身和其子系的最終區域。</span><span class="sxs-lookup"><span data-stu-id="98f6b-183">The final area within the parent that this element should use to arrange itself and its children.</span></span></param>
        <summary><span data-ttu-id="98f6b-184">在衍生類別中覆寫時，放置子項目，並且判斷 <see cref="T:System.Windows.FrameworkElement" /> 衍生類別的大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-184">When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement" /> derived class.</span></span></summary>
        <returns><span data-ttu-id="98f6b-185">使用的實際大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-185">The actual size used.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-186">想要自訂版面配置處理的排列傳遞的控制項作者應該覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-186">Control authors who want to customize the arrange pass of layout processing should override this method.</span></span> <span data-ttu-id="98f6b-187">實作模式應該呼叫<see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />的每個可見的子元素和傳遞最終想要為每個子項目的大小<paramref name="finalRect" />參數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-187">The implementation pattern should call <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each visible child element, and pass the final desired size for each child element as the <paramref name="finalRect" /> parameter.</span></span> <span data-ttu-id="98f6b-188">父項目應該呼叫<see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />上每個子系，否則為子項目將無法呈現。</span><span class="sxs-lookup"><span data-stu-id="98f6b-188">Parent elements should call <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each child, otherwise the child elements will not be rendered.</span></span>  
  
<span data-ttu-id="98f6b-189">許多衍生的類別會提供這個方法的實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-189">Many derived classes offer implementations of this method.</span></span> <span data-ttu-id="98f6b-190">重要的方法包括： <see cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />，<see cref="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)" />和<see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-190">Prominent ones include: <see cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />, <see cref="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)" /> and <see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" />.</span></span></para></block>
        <altmember cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="frameworkElement.BeginInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-191">啟動這個項目的初始化處理序 (Process)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-191">Starts the initialization process for this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-192">如果您正在調整它們的方式，尚未公開 （expose） 或連接到任何項目樹狀結構的項目，您可以在個別的項目上呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-192">You can call this method on individual elements if you are adjusting them in ways that do not yet expose or connect the element to any element tree.</span></span> <span data-ttu-id="98f6b-193">比方說，您可能已建立新<xref:System.Windows.FrameworkElement>，但不是尚未將它附加到任何邏輯樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="98f6b-193">For instance, you might have created a new <xref:System.Windows.FrameworkElement>, but have not yet attached it to any logical tree.</span></span> <span data-ttu-id="98f6b-194">或者，您的項目所在其內的子項目邏輯樹狀結構可能未連線至視窗或應用程式頁面。</span><span class="sxs-lookup"><span data-stu-id="98f6b-194">Or, the logical tree where your element is a child element within it might not be connected to a window or page of the application.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-195">實作這個方法，以提供特殊處理，您的項目初始化期間載入程序的項目之前會發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-195">Implement this method to provide special handling that should happen before your element is initialized during the element loading process.</span></span>  
  
<span data-ttu-id="98f6b-196">您的實作應該呼叫基底實作，因為基底 （預設值） 的實作會設定一些內部的旗標，以追蹤的初始化。</span><span class="sxs-lookup"><span data-stu-id="98f6b-196">Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.</span></span> <span data-ttu-id="98f6b-197">一個可能的實作是使用這個方法來攔截，到您自己尚未啟用的建構函式的私用類別初始化常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-197">One possible implementation is to use this method as a hook into your own private class initialization routines that are not already enabled by constructors.</span></span>  
  
<span data-ttu-id="98f6b-198">基底實作會擲回例外狀況，如果<see cref="M:System.Windows.FrameworkElement.BeginInit" />呼叫一次以上相同的項目之前<see cref="M:System.Windows.FrameworkElement.EndInit" />所呼叫。</span><span class="sxs-lookup"><span data-stu-id="98f6b-198">The base implementation will throw an exception if <see cref="M:System.Windows.FrameworkElement.BeginInit" /> is called more than one time on the same element prior to <see cref="M:System.Windows.FrameworkElement.EndInit" /> being called.</span></span></para></block>
        <altmember cref="M:System.Windows.FrameworkElement.EndInit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginStoryboard">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98f6b-199">開始提供之腳本中包含的動作順序。</span><span class="sxs-lookup"><span data-stu-id="98f6b-199">Begins the sequence of actions contained in the provided storyboard.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard);" />
      <MemberSignature Language="F#" Value="member this.BeginStoryboard : System.Windows.Media.Animation.Storyboard -&gt; unit" Usage="frameworkElement.BeginStoryboard storyboard" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
      </Parameters>
      <Docs>
        <param name="storyboard"><span data-ttu-id="98f6b-200">要開始的腳本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-200">The storyboard to begin.</span></span></param>
        <summary><span data-ttu-id="98f6b-201">開始提供之腳本中包含的動作順序。</span><span class="sxs-lookup"><span data-stu-id="98f6b-201">Begins the sequence of actions that are contained in the provided storyboard.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-202">最常見的動畫案例不會使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-202">Most typical animation scenarios do not use this method.</span></span> <span data-ttu-id="98f6b-203">通常您會建立<xref:System.Windows.Media.Animation.Storyboard>或是<xref:System.Windows.Media.Animation.BeginStoryboard>項目在標記中，然後將這些稱為<xref:System.Windows.EventTrigger>內容項目上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-203">Typically, you create the <xref:System.Windows.Media.Animation.Storyboard> or <xref:System.Windows.Media.Animation.BeginStoryboard> element in markup, and then you place these as the <xref:System.Windows.EventTrigger> content on an element.</span></span> <span data-ttu-id="98f6b-204">事件所觸發，動畫就會執行。</span><span class="sxs-lookup"><span data-stu-id="98f6b-204">When triggered by the event, the animation then runs.</span></span> <span data-ttu-id="98f6b-205">大部分的控制層面的<xref:System.Windows.Media.Animation.Storyboard>可以解決會在標記中公開的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-205">Most of the control aspects of a <xref:System.Windows.Media.Animation.Storyboard> can be addressed by properties that are exposed in markup.</span></span>  
  
 <span data-ttu-id="98f6b-206">請勿使用簽章`isControllable`，參數，或指定該參數時`false`，當動畫到達"Fill"期間，會移除相關聯的動畫的時刻表時鐘。</span><span class="sxs-lookup"><span data-stu-id="98f6b-206">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</span></span> <span data-ttu-id="98f6b-207">因此動畫無法重新啟動之後執行一次。</span><span class="sxs-lookup"><span data-stu-id="98f6b-207">Therefore the animation cannot be restarted after running once.</span></span> <span data-ttu-id="98f6b-208">控制動畫也必須具備的分鏡腳本[X:name 指示詞](~/docs/framework/xaml-services/x-name-directive.md)或可供程式碼中參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-208">Controlling an animation also requires that the storyboard have an [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) or be accessible by reference in code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-209">下列範例會擷取<xref:System.Windows.Media.Animation.Storyboard>從 [資源]，然後執行，<xref:System.Windows.Media.Animation.Storyboard>內部事件時處理的類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-209">The following example retrieves a <xref:System.Windows.Media.Animation.Storyboard> from resources, and then runs that <xref:System.Windows.Media.Animation.Storyboard> when an internal event is class handled.</span></span>  
  
 [!code-csharp[CubeAnimation#FEBeginStoryboard](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Page1.xaml.cs#febeginstoryboard)]
 [!code-vb[CubeAnimation#FEBeginStoryboard](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/page1.xaml.vb#febeginstoryboard)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.BeginStoryboard : System.Windows.Media.Animation.Storyboard * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="frameworkElement.BeginStoryboard (storyboard, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="storyboard"><span data-ttu-id="98f6b-210">要開始的腳本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-210">The storyboard to begin.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="98f6b-211">列舉型別的值，其描述若腳本中描述的屬性已顯示動畫時，所要使用的行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-211">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</span></span></param>
        <summary><span data-ttu-id="98f6b-212">使用若屬性已經顯示動畫時應發生之情形的指定選項，開始提供之腳本中包含的動作順序。</span><span class="sxs-lookup"><span data-stu-id="98f6b-212">Begins the sequence of actions contained in the provided storyboard, with options specified for what should happen if the property is already animated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-213">最常見的動畫案例不會使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-213">Most typical animation scenarios do not use this method.</span></span> <span data-ttu-id="98f6b-214">通常您會建立<xref:System.Windows.Media.Animation.Storyboard>或是<xref:System.Windows.Media.Animation.BeginStoryboard>項目在標記中，然後將這些稱為<xref:System.Windows.EventTrigger>內容項目上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-214">Typically, you create the <xref:System.Windows.Media.Animation.Storyboard> or <xref:System.Windows.Media.Animation.BeginStoryboard> element in markup, and then you place these as the <xref:System.Windows.EventTrigger> content on an element.</span></span> <span data-ttu-id="98f6b-215">事件所觸發，動畫就會執行。</span><span class="sxs-lookup"><span data-stu-id="98f6b-215">When triggered by the event, the animation then runs.</span></span> <span data-ttu-id="98f6b-216">大部分的控制層面的<xref:System.Windows.Media.Animation.Storyboard>可以解決會在標記中公開的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-216">Most of the control aspects of a <xref:System.Windows.Media.Animation.Storyboard> can be addressed by properties that are exposed in markup.</span></span>  
  
 <span data-ttu-id="98f6b-217">請勿使用簽章`isControllable`，參數，或指定該參數時`false`，當動畫到達"Fill"期間，會移除相關聯的動畫的時刻表時鐘。</span><span class="sxs-lookup"><span data-stu-id="98f6b-217">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</span></span> <span data-ttu-id="98f6b-218">因此動畫無法重新啟動之後執行一次。</span><span class="sxs-lookup"><span data-stu-id="98f6b-218">Therefore the animation cannot be restarted after running once.</span></span> <span data-ttu-id="98f6b-219">控制動畫也必須具備的分鏡腳本[X:name 指示詞](~/docs/framework/xaml-services/x-name-directive.md)或可供程式碼中參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-219">Controlling an animation also requires that the storyboard have an [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) or be accessible by reference in code.</span></span>  
  
 <span data-ttu-id="98f6b-220">遞移式行為可將指定的屬性為<xref:System.Windows.Media.Animation.BeginStoryboard>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-220">Handoff behavior can be specified as an attribute of <xref:System.Windows.Media.Animation.BeginStoryboard>.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="98f6b-221">使用 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="98f6b-221">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="98f6b-222">當您套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性，以使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、 任何<xref:System.Windows.Media.Animation.Clock>先前該屬性相關聯的物件會繼續耗用系統資源，計時系統會執行不會自動移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="98f6b-222">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</span></span>  
  
 <span data-ttu-id="98f6b-223">若要避免發生效能問題，當您藉由套用大量時鐘<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="98f6b-223">To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="98f6b-224">有數種方式可移除時鐘：</span><span class="sxs-lookup"><span data-stu-id="98f6b-224">There are several ways to remove a clock:</span></span>  
  
-   <span data-ttu-id="98f6b-225">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-225">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="98f6b-226">指定的第一個參數，要繪製之屬性和`null`作為第二個。</span><span class="sxs-lookup"><span data-stu-id="98f6b-226">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="98f6b-227">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="98f6b-227">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="98f6b-228">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>從時鐘清單，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-228">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="98f6b-229">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-229">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="98f6b-230">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>的子系時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-230">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="98f6b-231">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-231">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="98f6b-232">在此情況下，使用者必須決定何時要呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-232">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-233">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="98f6b-233">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="98f6b-234">回收物件時，其時鐘也會中斷連接，並進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="98f6b-234">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="98f6b-235">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-235">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-236">下列範例會擷取<xref:System.Windows.Media.Animation.Storyboard>從 [資源]，然後執行，<xref:System.Windows.Media.Animation.Storyboard>內部事件時處理的類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-236">The following example retrieves a <xref:System.Windows.Media.Animation.Storyboard> from resources, and then runs that <xref:System.Windows.Media.Animation.Storyboard> when an internal event is class handled.</span></span>  
  
 [!code-csharp[CubeAnimation#FEBeginStoryboard](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Page1.xaml.cs#febeginstoryboard)]
 [!code-vb[CubeAnimation#FEBeginStoryboard](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/page1.xaml.vb#febeginstoryboard)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.BeginStoryboard : System.Windows.Media.Animation.Storyboard * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="frameworkElement.BeginStoryboard (storyboard, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="storyboard"><span data-ttu-id="98f6b-237">要開始的腳本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-237">The storyboard to begin.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="98f6b-238">列舉型別的值，其描述若腳本中描述的屬性已顯示動畫時，所要使用的行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-238">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</span></span></param>
        <param name="isControllable"><span data-ttu-id="98f6b-239">宣告在動畫啟動後，是否可以控制 (暫停) 該動畫。</span><span class="sxs-lookup"><span data-stu-id="98f6b-239">Declares whether the animation is controllable (can be paused) after it is started.</span></span></param>
        <summary><span data-ttu-id="98f6b-240">使用控制啟動後之動畫的指定狀態，開始提供之腳本中包含的動作順序。</span><span class="sxs-lookup"><span data-stu-id="98f6b-240">Begins the sequence of actions contained in the provided storyboard, with specified state for control of the animation after it is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-241">最常見的動畫案例不會使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-241">Most typical animation scenarios do not use this method.</span></span> <span data-ttu-id="98f6b-242">通常您會建立<xref:System.Windows.Media.Animation.Storyboard>或是<xref:System.Windows.Media.Animation.BeginStoryboard>項目在標記中，然後將這些稱為<xref:System.Windows.EventTrigger>內容項目上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-242">Typically, you create the <xref:System.Windows.Media.Animation.Storyboard> or <xref:System.Windows.Media.Animation.BeginStoryboard> element in markup, and then you place these as the <xref:System.Windows.EventTrigger> content on an element.</span></span> <span data-ttu-id="98f6b-243">事件所觸發，動畫就會執行。</span><span class="sxs-lookup"><span data-stu-id="98f6b-243">When triggered by the event, the animation then runs.</span></span> <span data-ttu-id="98f6b-244">大部分的控制層面的<xref:System.Windows.Media.Animation.Storyboard>可以解決會在標記中公開的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-244">Most of the control aspects of a <xref:System.Windows.Media.Animation.Storyboard> can be addressed by properties that are exposed in markup.</span></span>  
  
 <span data-ttu-id="98f6b-245">請勿使用簽章`isControllable`，參數，或指定該參數時`false`，當動畫到達"Fill"期間，會移除相關聯的動畫的時刻表時鐘。</span><span class="sxs-lookup"><span data-stu-id="98f6b-245">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</span></span> <span data-ttu-id="98f6b-246">因此動畫無法重新啟動之後執行一次。</span><span class="sxs-lookup"><span data-stu-id="98f6b-246">Therefore the animation cannot be restarted after running once.</span></span> <span data-ttu-id="98f6b-247">控制動畫也必須具備的分鏡腳本[X:name 指示詞](~/docs/framework/xaml-services/x-name-directive.md)或可供程式碼中參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-247">Controlling an animation also requires that the storyboard have an [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) or be accessible by reference in code.</span></span>  
  
 <span data-ttu-id="98f6b-248">遞移式行為可將指定的屬性為<xref:System.Windows.Media.Animation.BeginStoryboard>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-248">Handoff behavior can be specified as an attribute of <xref:System.Windows.Media.Animation.BeginStoryboard>.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="98f6b-249">使用 Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="98f6b-249">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="98f6b-250">當您套用<xref:System.Windows.Media.Animation.Storyboard>， <xref:System.Windows.Media.Animation.AnimationTimeline>，或<xref:System.Windows.Media.Animation.AnimationClock>屬性，以使用<xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>、 任何<xref:System.Windows.Media.Animation.Clock>先前該屬性相關聯的物件會繼續耗用系統資源，計時系統會執行不會自動移除時鐘。</span><span class="sxs-lookup"><span data-stu-id="98f6b-250">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</span></span>  
  
 <span data-ttu-id="98f6b-251">若要避免發生效能問題，當您藉由套用大量時鐘<xref:System.Windows.Media.Animation.HandoffBehavior.Compose>，完成之後，您應該從動畫屬性移除組成的時鐘。</span><span class="sxs-lookup"><span data-stu-id="98f6b-251">To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="98f6b-252">有數種方式可移除時鐘：</span><span class="sxs-lookup"><span data-stu-id="98f6b-252">There are several ways to remove a clock:</span></span>  
  
-   <span data-ttu-id="98f6b-253">若要從屬性移除所有時鐘，請使用<xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29>或<xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29>動畫物件的方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-253">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="98f6b-254">指定的第一個參數，要繪製之屬性和`null`作為第二個。</span><span class="sxs-lookup"><span data-stu-id="98f6b-254">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="98f6b-255">這會從屬性移除所有動畫時鐘。</span><span class="sxs-lookup"><span data-stu-id="98f6b-255">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="98f6b-256">若要移除特定<xref:System.Windows.Media.Animation.AnimationClock>從時鐘清單，使用<xref:System.Windows.Media.Animation.Clock.Controller%2A>屬性<xref:System.Windows.Media.Animation.AnimationClock>擷取<xref:System.Windows.Media.Animation.ClockController>，然後呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>方法<xref:System.Windows.Media.Animation.ClockController>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-256">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="98f6b-257">這通常是<xref:System.Windows.Media.Animation.Clock.Completed>時鐘的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-257">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="98f6b-258">請注意，只有根時鐘可以控制<xref:System.Windows.Media.Animation.ClockController>;<xref:System.Windows.Media.Animation.Clock.Controller%2A>的子系時鐘的屬性會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-258">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="98f6b-259">也請注意，<xref:System.Windows.Media.Animation.Clock.Completed>是否有效的持續時間的時鐘永遠不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-259">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="98f6b-260">在此情況下，使用者必須決定何時要呼叫<xref:System.Windows.Media.Animation.ClockController.Remove%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-260">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-261">這主要是在存留期較長的物件才會發生的動畫問題。</span><span class="sxs-lookup"><span data-stu-id="98f6b-261">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="98f6b-262">回收物件時，其時鐘也會中斷連接，並進行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="98f6b-262">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="98f6b-263">如需時鐘物件的詳細資訊，請參閱[動畫和計時系統概觀](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-263">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup BindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup BindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.BindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ BindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.FrameworkElement.BindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-264">取得或設定用於項目的 <see cref="T:System.Windows.Data.BindingGroup" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-264">Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</span></span></summary>
        <value><span data-ttu-id="98f6b-265">用於項目的 <see cref="T:System.Windows.Data.BindingGroup" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-265">The <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-266">A<xref:System.Windows.Data.BindingGroup>可用於驗證之物件的多個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-266">A <xref:System.Windows.Data.BindingGroup> can be used to validate the values of multiple properties of an object.</span></span> <span data-ttu-id="98f6b-267">例如，假設應用程式會提示使用者輸入的地址，並接著會填入型別的物件`Address`，其中具有屬性`Street`， `City`， `ZipCode`，和`Country`，值的使用者提供。</span><span class="sxs-lookup"><span data-stu-id="98f6b-267">For example, suppose that an application prompts the user to enter an address and then populates an object of type `Address`, which has the properties `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="98f6b-268">應用程式必須包含四個面板<xref:System.Windows.Controls.TextBox>控制項，其中每個繫結至其中一個物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-268">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is bound to one of the object's properties.</span></span> <span data-ttu-id="98f6b-269">您可以使用<xref:System.Windows.Controls.ValidationRule>中<xref:System.Windows.Data.BindingGroup>驗證`Address`物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-269">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="98f6b-270">比方說，<xref:System.Windows.Controls.ValidationRule>可以確保郵遞區號是有效的地址的國家/地區。</span><span class="sxs-lookup"><span data-stu-id="98f6b-270">For example, the <xref:System.Windows.Controls.ValidationRule> can ensure that the zip code is valid for the country of the address.</span></span>  
  
 <span data-ttu-id="98f6b-271">項目子系繼承<xref:System.Windows.Data.BindingGroup>從其父項目，就如同任何其他可繼承的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-271">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span>  
  
<a name="dependencyPropertyInfo_BindingGroup"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-272">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-272">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-273">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-273">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.BindingGroupProperty>|  
|<span data-ttu-id="98f6b-274">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-274">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-275">下列範例會是一部分的應用程式，會檢查使用者是否已設定為相同值的兩個物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-275">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="98f6b-276">第一個範例會建立兩個<xref:System.Windows.Controls.TextBox>控制項，其中每個繫結至不同的資料來源。</span><span class="sxs-lookup"><span data-stu-id="98f6b-276">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is bound to a different data source.</span></span> <span data-ttu-id="98f6b-277"><xref:System.Windows.Controls.StackPanel>已經<xref:System.Windows.Data.BindingGroup>包含<xref:System.Windows.Controls.ValidationRule>檢查兩個字串是否相等。</span><span class="sxs-lookup"><span data-stu-id="98f6b-277">The <xref:System.Windows.Controls.StackPanel> has a <xref:System.Windows.Data.BindingGroup> that contains a <xref:System.Windows.Controls.ValidationRule> that checks that the two strings are equal.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupComplete](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupcomplete)]  
  
 <span data-ttu-id="98f6b-278">下列範例所示<xref:System.Windows.Controls.ValidationRule>，先前的範例使用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-278">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span>  <span data-ttu-id="98f6b-279">在 <xref:System.Windows.Controls.ValidationRule.Validate%2A>方法覆寫，此範例會取得每個來源物件<xref:System.Windows.Data.BindingGroup>並檢查物件的屬性是否相等。</span><span class="sxs-lookup"><span data-stu-id="98f6b-279">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method override, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 <span data-ttu-id="98f6b-280">若要叫用<xref:System.Windows.Controls.ValidationRule>，呼叫<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-280">To invoke the <xref:System.Windows.Controls.ValidationRule>, call the <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> method.</span></span>  <span data-ttu-id="98f6b-281">下列範例會呼叫<xref:System.Windows.Data.BindingGroup.UpdateSources%2A>按鈕的 click 事件發生時。</span><span class="sxs-lookup"><span data-stu-id="98f6b-281">The following example calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> when the click event of the button occurs.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSourcesClick](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#updatesourcesclick)]
 [!code-vb[BindingGroupSnippets#UpdateSourcesClick](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#updatesourcesclick)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingGroupProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BindingGroupProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BindingGroupProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.BindingGroupProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BindingGroupProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BindingGroupProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BindingGroupProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.BindingGroupProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-282">識別 <see cref="P:System.Windows.FrameworkElement.BindingGroup" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-282">Identifies the <see cref="P:System.Windows.FrameworkElement.BindingGroup" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BringIntoView">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98f6b-283">在內含此項目的任何可捲動區域內，嘗試將此項目帶入檢視。</span><span class="sxs-lookup"><span data-stu-id="98f6b-283">Attempts to bring this element into view, within any scrollable regions it is contained within.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public void BringIntoView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringIntoView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BringIntoView" />
      <MemberSignature Language="VB.NET" Value="Public Sub BringIntoView ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BringIntoView();" />
      <MemberSignature Language="F#" Value="member this.BringIntoView : unit -&gt; unit" Usage="frameworkElement.BringIntoView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-284">在內含此項目的任何可捲動區域內，嘗試將此項目帶入檢視。</span><span class="sxs-lookup"><span data-stu-id="98f6b-284">Attempts to bring this element into view, within any scrollable regions it is contained within.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-285">藉由呼叫這個方法，您將提高<xref:System.Windows.FrameworkElement.RequestBringIntoView>源自目前的項目中的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-285">By calling this method, you raise a <xref:System.Windows.FrameworkElement.RequestBringIntoView> event that originates from the current element.</span></span> <span data-ttu-id="98f6b-286">會引發這個事件，以便它可以藉由處理<xref:System.Windows.Controls.ScrollViewer>，或衍生或類似的類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-286">This event is raised so that it can be handled by a <xref:System.Windows.Controls.ScrollViewer>, or a derived or similar class.</span></span> <span data-ttu-id="98f6b-287">預期的行為是，事件由父項目，標示為已處理事件資料，在處理事件的來源帶入檢視的邏輯內嵌在透過<xref:System.Windows.Controls.ScrollViewer>控制項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-287">The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the <xref:System.Windows.Controls.ScrollViewer> control.</span></span> <span data-ttu-id="98f6b-288">既不<xref:System.Windows.FrameworkElement.RequestBringIntoView>事件或<xref:System.Windows.FrameworkElement.BringIntoView%2A>方法傳輸相關的成功或失敗，以外，這個事件通常是標示為在處理的成功的任何資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-288">Neither the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event nor the <xref:System.Windows.FrameworkElement.BringIntoView%2A> method transmit any information about success or failure, other than that the event is typically marked handled on success.</span></span> <span data-ttu-id="98f6b-289">失敗可能包含項目設定，如的原因<xref:System.Windows.UIElement.Visibility%2A>以外的某些值<xref:System.Windows.Visibility.Visible>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-289">Reasons for failure can include the element settings, such as <xref:System.Windows.UIElement.Visibility%2A> being some value other than <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 <span data-ttu-id="98f6b-290">如果您使用未指定的簽章`targetRectangle`，然後整個項目大小 (其<xref:System.Windows.UIElement.RenderSize%2A>) 會成為可見。</span><span class="sxs-lookup"><span data-stu-id="98f6b-290">If you use the signature that does not specify a `targetRectangle`, then the entire element size (its <xref:System.Windows.UIElement.RenderSize%2A>) will be made visible.</span></span>  
  
 <span data-ttu-id="98f6b-291">藉由呼叫這個方法，您可能會呼叫<xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A>上包含的項目中任何父系可捲動區域。</span><span class="sxs-lookup"><span data-stu-id="98f6b-291">By calling this method, you potentially will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element.</span></span> <span data-ttu-id="98f6b-292">如果這個項目不包含在可捲動區域<xref:System.Windows.FrameworkElement.RequestBringIntoView>仍然會引發事件，但是不會有任何作用因為沒有任何事件接聽程式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-292">If this element is not contained in a scrollable area, the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event is still raised, but there will be no effect because there are no event listeners.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-293">下列範例會實作應用程式瀏覽事件，每當回應的處理常式[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]正在瀏覽至包含片段。</span><span class="sxs-lookup"><span data-stu-id="98f6b-293">The following example implements a handler for an application navigation event that responds whenever the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] being navigated to includes a fragment.</span></span> <span data-ttu-id="98f6b-294">在名為片段[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]遵循雜湊符號 （#），並實作的行為會導致要捲動進入檢視框架內的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-294">The fragment is named in the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] following the hash sign (#), and the implemented behavior causes the element to scroll into view within the frame.</span></span> <span data-ttu-id="98f6b-295"><xref:System.Windows.FrameworkElement.BringIntoView%2A> 和<xref:System.Windows.FrameworkElement.RequestBringIntoView>要求在範例中，捲動行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-295"><xref:System.Windows.FrameworkElement.BringIntoView%2A> and <xref:System.Windows.FrameworkElement.RequestBringIntoView> request that scrolling behavior in the example.</span></span>  
  
 [!code-csharp[FragmentNavigationSample#FEBringIntoView](~/samples/snippets/csharp/VS_Snippets_Wpf/FragmentNavigationSample/CSharp/MainWindow.xaml.cs#febringintoview)]
 [!code-vb[FragmentNavigationSample#FEBringIntoView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FragmentNavigationSample/VisualBasic/MainWindow.xaml.vb#febringintoview)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ScrollViewer" />
      </Docs>
    </Member>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public void BringIntoView (System.Windows.Rect targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringIntoView(valuetype System.Windows.Rect targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BringIntoView (targetRectangle As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BringIntoView(System::Windows::Rect targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.BringIntoView : System.Windows.Rect -&gt; unit" Usage="frameworkElement.BringIntoView targetRectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetRectangle" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="targetRectangle"><span data-ttu-id="98f6b-296">指定同樣應帶入檢視的項目大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-296">Specified size of the element that should also be brought into view.</span></span></param>
        <summary><span data-ttu-id="98f6b-297">在內含此項目的任何可捲動區域內，嘗試將此項目所提供的區域大小帶入檢視。</span><span class="sxs-lookup"><span data-stu-id="98f6b-297">Attempts to bring the provided region size of this element into view, within any scrollable regions it is contained within.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-298">藉由呼叫這個方法，您將提高<xref:System.Windows.FrameworkElement.RequestBringIntoView>源自目前的項目中的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-298">By calling this method, you raise a <xref:System.Windows.FrameworkElement.RequestBringIntoView> event that originates from the current element.</span></span> <span data-ttu-id="98f6b-299">會引發這個事件，以便它可以藉由處理<xref:System.Windows.Controls.ScrollViewer>，或衍生或類似的類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-299">This event is raised so that it can be handled by a <xref:System.Windows.Controls.ScrollViewer>, or a derived or similar class.</span></span> <span data-ttu-id="98f6b-300">預期的行為是，事件由父項目，標示為已處理事件資料，在處理事件的來源帶入檢視的邏輯內嵌在透過<xref:System.Windows.Controls.ScrollViewer>控制項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-300">The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the <xref:System.Windows.Controls.ScrollViewer> control.</span></span> <span data-ttu-id="98f6b-301">既不<xref:System.Windows.FrameworkElement.RequestBringIntoView>事件或<xref:System.Windows.FrameworkElement.BringIntoView%2A>方法傳輸相關的成功或失敗，以外，這個事件通常是標示為在處理的成功的任何資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-301">Neither the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event nor the <xref:System.Windows.FrameworkElement.BringIntoView%2A> method transmit any information about success or failure, other than that the event is typically marked handled on success.</span></span> <span data-ttu-id="98f6b-302">失敗可能包含項目設定，如的原因<xref:System.Windows.UIElement.Visibility%2A>以外的某些值<xref:System.Windows.Visibility.Visible>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-302">Reasons for failure can include the element settings, such as <xref:System.Windows.UIElement.Visibility%2A> being some value other than <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 <span data-ttu-id="98f6b-303">如果您使用未指定的簽章`targetRectangle`，然後整個項目大小 (其<xref:System.Windows.UIElement.RenderSize%2A>) 會成為可見。</span><span class="sxs-lookup"><span data-stu-id="98f6b-303">If you use the signature that does not specify a `targetRectangle`, then the entire element size (its <xref:System.Windows.UIElement.RenderSize%2A>) will be made visible.</span></span>  
  
 <span data-ttu-id="98f6b-304">藉由呼叫這個方法，您可能會呼叫<xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A>上包含的項目中任何父系可捲動區域。</span><span class="sxs-lookup"><span data-stu-id="98f6b-304">By calling this method, you potentially will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element.</span></span> <span data-ttu-id="98f6b-305">如果這個項目不包含在可捲動區域<xref:System.Windows.FrameworkElement.RequestBringIntoView>仍然會引發事件，但是不會有任何作用因為沒有任何事件接聽程式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-305">If this element is not contained in a scrollable area, the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event is still raised, but there will be no effect because there are no event listeners.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-306">下列範例會在受條件約束的捲動區域中有大型的圖形。</span><span class="sxs-lookup"><span data-stu-id="98f6b-306">The following example has a large graphic in a constrained scrolling region.</span></span> <span data-ttu-id="98f6b-307">頁面上的按鈕有捲動檢視來大量圖形的特定區域的處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-307">A button on the page has a handler that scrolls the view to a particular region of the large graphic.</span></span>  
  
 [!code-xaml[BaseElementsSmorgasbord#BringIntoViewRectMarkup](~/samples/snippets/csharp/VS_Snippets_Wpf/BaseElementsSmorgasbord/CSharp/Page1.xaml#bringintoviewrectmarkup)]  
  
 [!code-csharp[BaseElementsSmorgasbord#BringIntoViewRectCode](~/samples/snippets/csharp/VS_Snippets_Wpf/BaseElementsSmorgasbord/CSharp/Page1.xaml.cs#bringintoviewrectcode)]
 [!code-vb[BaseElementsSmorgasbord#BringIntoViewRectCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BaseElementsSmorgasbord/visualbasic/page1.xaml.vb#bringintoviewrectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ContextMenu ^ ContextMenu { System::Windows::Controls::ContextMenu ^ get(); void set(System::Windows::Controls::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Controls.ContextMenu with get, set" Usage="System.Windows.FrameworkElement.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-308">取得或設定透過操作功能表項目的 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 要求操作功能表時應該出現的操作功能表項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-308">Gets or sets the context menu element that should appear whenever the context menu is requested through [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] from within this element.</span></span></summary>
        <value><span data-ttu-id="98f6b-309">指派給這個項目的操作功能表。</span><span class="sxs-lookup"><span data-stu-id="98f6b-309">The context menu assigned to this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-310"><xref:System.Windows.Controls.ContextMenu> 本身是<xref:System.Windows.FrameworkElement>衍生類別，然後就技術上來說可能<xref:System.Windows.Controls.ContextMenu>本身有<xref:System.Windows.FrameworkElement.ContextMenu%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-310"><xref:System.Windows.Controls.ContextMenu> itself is a <xref:System.Windows.FrameworkElement> derived class, and it is technically possible for <xref:System.Windows.Controls.ContextMenu> itself to have a <xref:System.Windows.FrameworkElement.ContextMenu%2A> property.</span></span> <span data-ttu-id="98f6b-311">不過，這會建立令人混淆的內容功能表經驗的使用者，並不建議這種做法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-311">However, this creates a confusing context menu experience for the user and this practice is not recommended.</span></span>  
  
<a name="dependencyPropertyInfo_ContextMenu"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-312">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-312">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-313">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-313">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ContextMenuProperty>|  
|<span data-ttu-id="98f6b-314">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-314">Metadata properties set to `true`</span></span>|<span data-ttu-id="98f6b-315">無</span><span class="sxs-lookup"><span data-stu-id="98f6b-315">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ContextMenuEventHandler ContextMenuClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ContextMenuEventHandler ContextMenuClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.ContextMenuClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuClosing As ContextMenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ContextMenuEventHandler ^ ContextMenuClosing;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuClosing : System.Windows.Controls.ContextMenuEventHandler " Usage="member this.ContextMenuClosing : System.Windows.Controls.ContextMenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-316">在項目上的任何內容功能表正要關閉之前發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-316">Occurs just before any context menu on the element is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-317">若要隱藏關閉快顯功能表，事件處理常式應將其標記為已處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-317">To suppress closing context menus, handlers of the event should mark it as handled.</span></span>  
  
 <span data-ttu-id="98f6b-318">若要使用此事件為<xref:System.Windows.EventTrigger>在樣式中，您必須參考事件的基礎服務的定義：</span><span class="sxs-lookup"><span data-stu-id="98f6b-318">To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service's definition of the event:</span></span>  
  
 [!code-xaml[CorePseudocode#FEContextMenuClosing](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuclosing)]  
  
 <span data-ttu-id="98f6b-319">(這種用法是必要的因為上的事件實作<xref:System.Windows.FrameworkElement>，會公開基礎服務事件不會對應<xref:System.Windows.FrameworkElement.ContextMenuClosing>識別項，您可以使用它作為觸發程序)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-319">(This usage is required because the event implementation on <xref:System.Windows.FrameworkElement> that exposes the underlying service event does not map the <xref:System.Windows.FrameworkElement.ContextMenuClosing> identifier such that you can use it as a trigger).</span></span>  
  
 <span data-ttu-id="98f6b-320"><xref:System.Windows.Controls.ContextMenu> 本身是<xref:System.Windows.FrameworkElement>衍生類別，但<xref:System.Windows.FrameworkElement.ContextMenuClosing>事件就不會引發由操作功能表直接。</span><span class="sxs-lookup"><span data-stu-id="98f6b-320"><xref:System.Windows.Controls.ContextMenu> itself is a <xref:System.Windows.FrameworkElement> derived class, but the <xref:System.Windows.FrameworkElement.ContextMenuClosing> event will not be raised by a context menu directly.</span></span> <span data-ttu-id="98f6b-321">相反地，會引發事件，從 「 擁有 」 做為屬性的內容功能表，並只會在使用者嘗試關閉 UI 中的操作功能表時所引發的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-321">Instead, the event is raised from the element that "owns" the context menu as a property and is only raised when a user attempts to close a context menu in the UI.</span></span> <span data-ttu-id="98f6b-322">但是它有可能<xref:System.Windows.Controls.ContextMenu>本身有<xref:System.Windows.FrameworkElement.ContextMenu%2A>屬性 （巢狀的內容功能表）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-322">However it is possible for <xref:System.Windows.Controls.ContextMenu> itself to have a <xref:System.Windows.FrameworkElement.ContextMenu%2A> property (a nested context menu).</span></span> <span data-ttu-id="98f6b-323">在此情況下<xref:System.Windows.Controls.ContextMenu>實際上未擁有巢狀<xref:System.Windows.Controls.ContextMenu>及可能引發事件，與在巢狀的內容功能表中的事件來源。</span><span class="sxs-lookup"><span data-stu-id="98f6b-323">In this case the <xref:System.Windows.Controls.ContextMenu> really does own the nested <xref:System.Windows.Controls.ContextMenu> and might raise the event, with the source of the event being the nested context menu.</span></span>  
  
 <span data-ttu-id="98f6b-324"><xref:System.Windows.Controls.ContextMenu>類別本身也有類似的事件 (<xref:System.Windows.Controls.ContextMenu.Closed>)，但<xref:System.Windows.Controls.ContextMenu.Closed>事件不會提供您取消的使用者動作的機會。</span><span class="sxs-lookup"><span data-stu-id="98f6b-324">The <xref:System.Windows.Controls.ContextMenu> class itself also has a similar event (<xref:System.Windows.Controls.ContextMenu.Closed>) but the <xref:System.Windows.Controls.ContextMenu.Closed> event does not provide you the opportunity to cancel the user action.</span></span>  
  
<a name="routedEventInfo_ContextMenuClosing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="98f6b-325">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-325">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-326">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-326">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ContextMenuClosingEvent>|  
|<span data-ttu-id="98f6b-327">路由策略</span><span class="sxs-lookup"><span data-stu-id="98f6b-327">Routing strategy</span></span>|<span data-ttu-id="98f6b-328">事件反昇</span><span class="sxs-lookup"><span data-stu-id="98f6b-328">Bubbling</span></span>|  
|<span data-ttu-id="98f6b-329">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="98f6b-329">Delegate</span></span>|<xref:System.Windows.Controls.ContextMenuEventHandler>|  
  
-   <span data-ttu-id="98f6b-330">覆寫<xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A>實作在衍生類別中這個事件的類別處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-330">Override <xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuClosingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ContextMenuClosingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ContextMenuClosingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ContextMenuClosingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuClosingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ContextMenuClosingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextMenuClosingEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.ContextMenuClosingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-331">識別 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-331">Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-332">註冊路由事件時，會建立路由事件識別項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-332">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="98f6b-333">這些識別項包含用於加入事件擁有者的識別名稱、擁有者類型、處理常式類型、路由策略和公用程式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-333">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="98f6b-334">您可以使用這些識別項來加入類別處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-334">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="98f6b-335">如需註冊路由事件的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-335">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="98f6b-336">如需使用路由事件識別項來加入類別處理常式的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-336">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuOpening">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ContextMenuEventHandler ContextMenuOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ContextMenuEventHandler ContextMenuOpening" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.ContextMenuOpening" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuOpening As ContextMenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ContextMenuEventHandler ^ ContextMenuOpening;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuOpening : System.Windows.Controls.ContextMenuEventHandler " Usage="member this.ContextMenuOpening : System.Windows.Controls.ContextMenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-337">當項目上的任何內容功能表開啟時發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-337">Occurs when any context menu on the element is opened.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-338">若要手動開啟操作功能表，為已處理的事件處理常式時，應該標示相關的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-338">To manually open context menus, handlers of the events should mark the relevant event as handled.</span></span> <span data-ttu-id="98f6b-339">否則，現有的值<xref:System.Windows.FrameworkElement.ContextMenu%2A>屬性會用來自動開啟操作功能表。</span><span class="sxs-lookup"><span data-stu-id="98f6b-339">Otherwise, the existing value of the <xref:System.Windows.FrameworkElement.ContextMenu%2A> property will be used to automatically open a context menu.</span></span> <span data-ttu-id="98f6b-340">標記處理的事件會有效地取消的預設動作，並可能是重設的值有機會<xref:System.Windows.FrameworkElement.ContextMenu%2A>屬性，然後開啟 新<xref:System.Windows.Controls.ContextMenu>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-340">Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkElement.ContextMenu%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>.</span></span> <span data-ttu-id="98f6b-341">不過，還有您應該要注意的時間問題。</span><span class="sxs-lookup"><span data-stu-id="98f6b-341">However, there is a timing issue you should be aware of.</span></span> <span data-ttu-id="98f6b-342">為了完全取代透過操作功能表<xref:System.Windows.FrameworkElement.ContextMenuOpening>處理常式中，初始的操作功能表不能為 null 或空白。</span><span class="sxs-lookup"><span data-stu-id="98f6b-342">In order to completely replace the context menu through a <xref:System.Windows.FrameworkElement.ContextMenuOpening> handler, the initial context menu must not be null / empty.</span></span> <span data-ttu-id="98f6b-343">或者，您可能需要處理的事件，然後以手動方式開啟新的操作功能表。</span><span class="sxs-lookup"><span data-stu-id="98f6b-343">Alternatively, you might need to handle the event and then manually open a new context menu.</span></span> <span data-ttu-id="98f6b-344">如需詳細資訊，請參閱[如何：處理 ContextMenuOpening 事件](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-344">For details, see [How to: Handle the ContextMenuOpening Event](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md).</span></span>  
  
 <span data-ttu-id="98f6b-345">若要使用此事件為<xref:System.Windows.EventTrigger>在樣式中，您必須參考基礎附加的事件：</span><span class="sxs-lookup"><span data-stu-id="98f6b-345">To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying attached event:</span></span>  
  
 [!code-xaml[CorePseudocode#FEContextMenuOpening](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuopening)]  
  
 <span data-ttu-id="98f6b-346">(這種用法是必要的因為上的事件實作<xref:System.Windows.FrameworkElement>，會公開基礎服務事件不會對應<xref:System.Windows.FrameworkElement.ContextMenuOpening>識別項，您可以在觸發程序中使用它)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-346">(This usage is required because the event implementation on <xref:System.Windows.FrameworkElement> that exposes the underlying service event does not map the <xref:System.Windows.FrameworkElement.ContextMenuOpening> identifier such that you can use it in triggers).</span></span>  
  
 <span data-ttu-id="98f6b-347"><xref:System.Windows.Controls.ContextMenu> 本身是<xref:System.Windows.FrameworkElement>衍生類別，但不是會從內容功能表中開啟做為來源引發此事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-347"><xref:System.Windows.Controls.ContextMenu> itself is a <xref:System.Windows.FrameworkElement> derived class, but this event will not be raised from the context menu being opened as a source.</span></span> <span data-ttu-id="98f6b-348">從 「 擁有 」 做為屬性的內容功能表，並只會在使用者嘗試在 UI 中，開啟操作功能表時所引發的項目，會引發事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-348">The event is raised from the element that "owns" the context menu as a property and is only raised when a user attempts to open a context menu in the UI.</span></span> <span data-ttu-id="98f6b-349">可能<xref:System.Windows.Controls.ContextMenu>本身能夠<xref:System.Windows.FrameworkElement.ContextMenu%2A>屬性，但您應該避免這種情況 (如需詳細資訊，請參閱<xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-349">It is possible for <xref:System.Windows.Controls.ContextMenu> itself to have a <xref:System.Windows.FrameworkElement.ContextMenu%2A> property, but you should avoid this scenario (for details, see <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="98f6b-350"><xref:System.Windows.Controls.ContextMenu>類別本身也有類似的事件 (<xref:System.Windows.Controls.ContextMenu.Opened>)，但<xref:System.Windows.Controls.ContextMenu.Opened>將不提供取消的使用者動作的機會。</span><span class="sxs-lookup"><span data-stu-id="98f6b-350">The <xref:System.Windows.Controls.ContextMenu> class itself also has a similar event (<xref:System.Windows.Controls.ContextMenu.Opened>) but <xref:System.Windows.Controls.ContextMenu.Opened> does not provide you the opportunity to cancel the user action.</span></span>  
  
<a name="routedEventInfo_ContextMenuOpening"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="98f6b-351">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-351">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-352">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-352">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ContextMenuOpeningEvent>|  
|<span data-ttu-id="98f6b-353">路由策略</span><span class="sxs-lookup"><span data-stu-id="98f6b-353">Routing strategy</span></span>|<span data-ttu-id="98f6b-354">事件反昇</span><span class="sxs-lookup"><span data-stu-id="98f6b-354">Bubbling</span></span>|  
|<span data-ttu-id="98f6b-355">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="98f6b-355">Delegate</span></span>|<xref:System.Windows.Controls.ContextMenuEventHandler>|  
  
-   <span data-ttu-id="98f6b-356">覆寫<xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A>實作在衍生類別中這個事件的類別處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-356">Override <xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuOpeningEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ContextMenuOpeningEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ContextMenuOpeningEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuOpeningEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ContextMenuOpeningEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextMenuOpeningEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.ContextMenuOpeningEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-357">識別 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-357">Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-358">註冊路由事件時，會建立路由事件識別項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-358">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="98f6b-359">這些識別項包含用於加入事件擁有者的識別名稱、擁有者類型、處理常式類型、路由策略和公用程式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-359">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="98f6b-360">您可以使用這些識別項來加入類別處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-360">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="98f6b-361">如需註冊路由事件的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-361">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="98f6b-362">如需使用路由事件識別項來加入類別處理常式的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-362">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ContextMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextMenuProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextMenuProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.ContextMenuProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-363">識別 <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-363">Identifies the <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Cursor ^ Cursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.FrameworkElement.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-364">取得或設定滑鼠指標在此元素上方時所顯示的游標。</span><span class="sxs-lookup"><span data-stu-id="98f6b-364">Gets or sets the cursor that displays when the mouse pointer is over this element.</span></span></summary>
        <value><span data-ttu-id="98f6b-365">要顯示的游標。</span><span class="sxs-lookup"><span data-stu-id="98f6b-365">The cursor to display.</span></span> <span data-ttu-id="98f6b-366">預設值依這個相依性屬性定義為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-366">The default value is defined as <see langword="null" /> per this dependency property.</span></span> <span data-ttu-id="98f6b-367">不過，執行階段的實際預設值會受各種因素影響。</span><span class="sxs-lookup"><span data-stu-id="98f6b-367">However, the practical default at run time will come from a variety of factors.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-368">中設定這個屬性時， [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，則[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]處理器依賴的型別轉換<xref:System.Windows.Input.Cursor>類別來評估的字串。</span><span class="sxs-lookup"><span data-stu-id="98f6b-368">When you set this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor relies on type conversion for the <xref:System.Windows.Input.Cursor> class to evaluate the string.</span></span> <span data-ttu-id="98f6b-369">提供的字串應該評估為<xref:System.Windows.Input.CursorType>值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-369">The provided string should evaluate to a <xref:System.Windows.Input.CursorType> value.</span></span> <span data-ttu-id="98f6b-370">如需詳細資訊，請參閱<xref:System.Windows.Input.Cursor>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-370">See <xref:System.Windows.Input.Cursor> for details.</span></span>  
  
 <span data-ttu-id="98f6b-371">這個屬性所建立的資料指標是否將，或當滑鼠指標位於此項目上方時，不會顯示主要取決於值<xref:System.Windows.FrameworkElement.ForceCursor%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-371">Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <xref:System.Windows.FrameworkElement.ForceCursor%2A> property.</span></span> <span data-ttu-id="98f6b-372">此外，事件相關的考量，例如使用中的拖放、 滑鼠捕捉、 文字編輯模式中的控制項，並依此類推，也會影響資料指標具有較高的優先順序比您指定這個屬性中的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-372">Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.</span></span>  
  
 <span data-ttu-id="98f6b-373">若要還原的此屬性設定為最終的預設行為，將它設定為`null`一次。</span><span class="sxs-lookup"><span data-stu-id="98f6b-373">To revert the behavior of setting this property to the eventual default, set it to `null` again.</span></span>  
  
 <span data-ttu-id="98f6b-374">`null`預設實際上會判斷實際的資料指標的值此處延後和應從別處取得。</span><span class="sxs-lookup"><span data-stu-id="98f6b-374">The `null` default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere.</span></span> <span data-ttu-id="98f6b-375">如果看到不含以程式設計方式從任何來源的值時，預設資料指標，是以視覺化方式超過[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]應用程式是在箭號。</span><span class="sxs-lookup"><span data-stu-id="98f6b-375">If presented without programmatic values from any source, the default cursor that is visually over a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application will be an arrow.</span></span> <span data-ttu-id="98f6b-376">不過，暫時性的資料指標變更不會設定為<xref:System.Windows.FrameworkElement.Cursor%2A>時它們會透過傳遞的項目值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-376">However, the transient cursor changes are not set to the <xref:System.Windows.FrameworkElement.Cursor%2A> values of the elements when they are passed over.</span></span> <span data-ttu-id="98f6b-377"><xref:System.Windows.FrameworkElement.Cursor%2A>屬性會唯一報表非 null 值在實際設於何處，例如透過程式碼或樣式的情況下。</span><span class="sxs-lookup"><span data-stu-id="98f6b-377">The <xref:System.Windows.FrameworkElement.Cursor%2A> property will only report non null values in cases where it was actually set, for instance through code or a style.</span></span> <span data-ttu-id="98f6b-378">每次移動滑鼠停留[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]應用程式引發<xref:System.Windows.UIElement.QueryCursor>事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-378">Each movement of the mouse over a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application raises a <xref:System.Windows.UIElement.QueryCursor> event.</span></span> <span data-ttu-id="98f6b-379">事件反昇和路由中的任何項目有機會處理事件，並設定透過此事件的引數的資料指標的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-379">The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor through the arguments of this event.</span></span> <span data-ttu-id="98f6b-380">這是產生在大部分情況下以視覺化方式明顯的資料指標的機制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-380">This is the mechanism that produces the visually apparent cursor in most cases.</span></span> <span data-ttu-id="98f6b-381">如果<xref:System.Windows.UIElement.QueryCursor>處理常式傳回一個資料指標結果，則事件處理，而且引數中已變更的值優先於 windows 7<xref:System.Windows.FrameworkElement.Cursor%2A>屬性，在任何層級，除非<xref:System.Windows.FrameworkElement.ForceCursor%2A>設定。</span><span class="sxs-lookup"><span data-stu-id="98f6b-381">If a <xref:System.Windows.UIElement.QueryCursor> handler returns a cursor result, then the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the <xref:System.Windows.FrameworkElement.Cursor%2A> property at any level, unless <xref:System.Windows.FrameworkElement.ForceCursor%2A> is set.</span></span>  
  
 <span data-ttu-id="98f6b-382">您如果不建立自訂游標，通常有設定此屬性的靜態屬性值<xref:System.Windows.Input.Cursors>類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-382">If not are not creating a custom cursor, you typically set this property to a static property value of the <xref:System.Windows.Input.Cursors> class.</span></span> <span data-ttu-id="98f6b-383">設定<xref:System.Windows.FrameworkElement.Cursor%2A>在程式碼需要下列其中之一：</span><span class="sxs-lookup"><span data-stu-id="98f6b-383">Setting <xref:System.Windows.FrameworkElement.Cursor%2A> in code requires one of the following:</span></span>  
  
-   <span data-ttu-id="98f6b-384">呼叫<xref:System.Windows.Input.Cursor>建構函式來取得<xref:System.Windows.Input.Cursor>執行個體。</span><span class="sxs-lookup"><span data-stu-id="98f6b-384">Call the <xref:System.Windows.Input.Cursor> constructor to get a <xref:System.Windows.Input.Cursor> instance.</span></span> <span data-ttu-id="98f6b-385">這兩個簽章<xref:System.Windows.Input.Cursor>建構函式使用資料流或檔案，您要建立的預期<xref:System.Windows.Input.Cursor>自訂的資料指標的物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-385">Both signatures of the <xref:System.Windows.Input.Cursor> constructor use streams or files, in anticipation that you are creating the <xref:System.Windows.Input.Cursor> object for a custom cursor.</span></span>  
  
-   <span data-ttu-id="98f6b-386">使用<xref:System.Windows.Input.CursorConverter>類別和其<xref:System.Windows.Input.CursorConverter.ConvertFrom%2A>方法，以指定的資料指標<xref:System.Windows.Input.CursorType>，或可評估為字串<xref:System.Windows.Input.CursorType>，並轉換回到<xref:System.Windows.Input.Cursor>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-386">Use the <xref:System.Windows.Input.CursorConverter> class and its <xref:System.Windows.Input.CursorConverter.ConvertFrom%2A> method to specify a cursor by <xref:System.Windows.Input.CursorType>, or a string that can evaluate to a <xref:System.Windows.Input.CursorType>, and cast the return to <xref:System.Windows.Input.Cursor>.</span></span>  
  
 <span data-ttu-id="98f6b-387">設定<xref:System.Windows.Input.Cursor>在部分信任中不會啟用為某個自訂值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-387">Setting the <xref:System.Windows.Input.Cursor> to a custom value is not enabled in partial trust.</span></span> <span data-ttu-id="98f6b-388">如需有關自訂的資料指標的詳細資訊，請參閱 <<c0> [ 輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-388">For more information on custom cursors, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_Cursor"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-389">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-389">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-390">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-390">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.CursorProperty>|  
|<span data-ttu-id="98f6b-391">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-391">Metadata properties set to `true`</span></span>|<span data-ttu-id="98f6b-392">無</span><span class="sxs-lookup"><span data-stu-id="98f6b-392">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-393">下列範例示範如何刻意設定資料指標圖形。</span><span class="sxs-lookup"><span data-stu-id="98f6b-393">The following example shows how to deliberately set the cursor graphic.</span></span>  
  
 [!code-csharp[cursors#ChangeCursorsSample](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#changecursorssample)]
 [!code-vb[cursors#ChangeCursorsSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#changecursorssample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryCursor" />
        <altmember cref="P:System.Windows.FrameworkElement.ForceCursor" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="CursorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CursorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CursorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.CursorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CursorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CursorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CursorProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.CursorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-394">識別 <see cref="P:System.Windows.FrameworkElement.Cursor" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-394">Identifies the <see cref="P:System.Windows.FrameworkElement.Cursor" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContext">
      <MemberSignature Language="C#" Value="public object DataContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.DataContext" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataContext { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataContext : obj with get, set" Usage="System.Windows.FrameworkElement.DataContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-395">取得或設定項目在參與資料繫結時的資料內容。</span><span class="sxs-lookup"><span data-stu-id="98f6b-395">Gets or sets the data context for an element when it participates in data binding.</span></span></summary>
        <value><span data-ttu-id="98f6b-396">用做為資料內容的物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-396">The object to use as data context.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-397">*資料內容*是一種概念，可讓項目繼承其父項目，用於繫結，以及其他特性，繫結，例如路徑的資料來源的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-397">*Data context* is a concept that allows elements to inherit information from their parent elements about the data source that is used for binding, as well as other characteristics of the binding, such as the path.</span></span>  
  
 <span data-ttu-id="98f6b-398">資料內容可以會直接設定為.NET 物件，以評估該物件的屬性繫結。</span><span class="sxs-lookup"><span data-stu-id="98f6b-398">Data context can be set directly to a .NET object, with the bindings evaluating to properties of that object.</span></span> <span data-ttu-id="98f6b-399">或者，您可以設定資料內容<xref:System.Windows.Data.DataSourceProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-399">Alternatively, you can set the data context to a <xref:System.Windows.Data.DataSourceProvider> object.</span></span>  
  
 <span data-ttu-id="98f6b-400">這個相依性屬性繼承的屬性值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-400">This dependency property inherits property values.</span></span> <span data-ttu-id="98f6b-401">如果有子項目，而不需要的其他值<xref:System.Windows.FrameworkElement.DataContext%2A>透過本機值或樣式，來建立，則屬性系統會設定這個值為<xref:System.Windows.FrameworkElement.DataContext%2A>指派此值最接近的父項目的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-401">If there are child elements without other values for <xref:System.Windows.FrameworkElement.DataContext%2A> established through local values or styles, then the property system will set the value to be the <xref:System.Windows.FrameworkElement.DataContext%2A> value of the nearest parent element with this value assigned.</span></span>  
  
 <span data-ttu-id="98f6b-402">或者，您可以使用下列屬性之一<xref:System.Windows.Data.Binding>類別來明確指定繫結來源：</span><span class="sxs-lookup"><span data-stu-id="98f6b-402">Alternatively, you can use one of the following properties of the <xref:System.Windows.Data.Binding> class to specify the binding source explicitly:</span></span>
  
    - <span data-ttu-id="98f6b-403"><xref:System.Windows.Data.Binding.ElementName%2A>.</span><span class="sxs-lookup"><span data-stu-id="98f6b-403"><xref:System.Windows.Data.Binding.ElementName%2A>.</span></span>
    - <span data-ttu-id="98f6b-404"><xref:System.Windows.Data.Binding.Source%2A>.</span><span class="sxs-lookup"><span data-stu-id="98f6b-404"><xref:System.Windows.Data.Binding.Source%2A>.</span></span>
    - <span data-ttu-id="98f6b-405"><xref:System.Windows.Data.Binding.RelativeSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="98f6b-405"><xref:System.Windows.Data.Binding.RelativeSource%2A>.</span></span> 
  
  <span data-ttu-id="98f6b-406">如需詳細資訊，請參閱[如何：指定繫結來源](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-406">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="98f6b-407">在 XAML 中，<xref:System.Windows.FrameworkElement.DataContext%2A>通常會設定為<xref:System.Windows.Data.Binding>宣告。</span><span class="sxs-lookup"><span data-stu-id="98f6b-407">In XAML, <xref:System.Windows.FrameworkElement.DataContext%2A> is most typically set as a <xref:System.Windows.Data.Binding> declaration.</span></span> <span data-ttu-id="98f6b-408">您可以使用屬性元素語法或屬性語法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-408">You can use either property element syntax or attribute syntax.</span></span> <span data-ttu-id="98f6b-409">屬性語法會顯示在此頁面上的範例。</span><span class="sxs-lookup"><span data-stu-id="98f6b-409">Attribute syntax is shown in the example on this page.</span></span> <span data-ttu-id="98f6b-410">您也可以使用程式碼來設定<xref:System.Windows.FrameworkElement.DataContext%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-410">You can also use code to set <xref:System.Windows.FrameworkElement.DataContext%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-411"><xref:System.Windows.FrameworkElement.DataContext%2A> 是可繫結為 dbtype_iunknown 其中一個內容可能會繫結到另一個屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-411"><xref:System.Windows.FrameworkElement.DataContext%2A> is a bindable property to facilitate scenarios where one context might be bound to another.</span></span> <span data-ttu-id="98f6b-412">不過，如果您繫結至<xref:System.Windows.FrameworkElement.DataContext%2A>，請小心不要建立循環的繫結參考 (不會繫結<xref:System.Windows.FrameworkElement.DataContext%2A>本身，這很可能會由於屬性值繼承的情況進行<xref:System.Windows.FrameworkElement.DataContext%2A>屬性)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-412">However, if you bind to <xref:System.Windows.FrameworkElement.DataContext%2A>, be careful to not create circular binding references (do not bind a <xref:System.Windows.FrameworkElement.DataContext%2A> to itself, which it is possible to do because of the property value inheritance nature of the <xref:System.Windows.FrameworkElement.DataContext%2A> property).</span></span>  
  
<a name="xamlPropertyElementUsage_DataContext"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="98f6b-413">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="98f6b-413">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.DataContext>  
    <dataContextObject />  
  </object.DataContext>  
</object>  
```  
  
<a name="xamlAttributeUsage_DataContext"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-414">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-414">XAML Attribute Usage</span></span>  
  
```  
<object DataContext="bindingUsage"/>  
- or -  
<object DataContext="{resourceExtension contextResourceKey}"/>  
```  
  
<a name="xamlValues_DataContext"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-415">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-415">XAML Values</span></span>  
 <span data-ttu-id="98f6b-416">*dataContextObject*</span><span class="sxs-lookup"><span data-stu-id="98f6b-416">*dataContextObject*</span></span>  
 <span data-ttu-id="98f6b-417">直接內嵌的物件，用做為父項目中的任何繫結的資料內容。</span><span class="sxs-lookup"><span data-stu-id="98f6b-417">A directly embedded object that serves as data context for any bindings within the parent element.</span></span> <span data-ttu-id="98f6b-418">一般而言，這個物件是<xref:System.Windows.Data.Binding>或另一個<xref:System.Windows.Data.BindingBase>衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-418">Typically, this object is a <xref:System.Windows.Data.Binding> or another <xref:System.Windows.Data.BindingBase> derived class.</span></span> <span data-ttu-id="98f6b-419">或者，可能會在這裡，放適用於繫結的任何物件類型的未經處理資料實際稍後定義的繫結。</span><span class="sxs-lookup"><span data-stu-id="98f6b-419">Alternatively, raw data of any object type intended for binding may be placed here, with the actual bindings defined later.</span></span>  
  
 <span data-ttu-id="98f6b-420">*bindingUsage*</span><span class="sxs-lookup"><span data-stu-id="98f6b-420">*bindingUsage*</span></span>  
 <span data-ttu-id="98f6b-421">評估為不適當的資料內容繫結使用方式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-421">A binding usage that evaluates to an appropriate data context.</span></span> <span data-ttu-id="98f6b-422">如需詳細資訊，請參閱[Binding 標記延伸模組](~/docs/framework/wpf/advanced/binding-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-422">For details, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md).</span></span>  
  
 <span data-ttu-id="98f6b-423">*resourceExtension*</span><span class="sxs-lookup"><span data-stu-id="98f6b-423">*resourceExtension*</span></span>  
 <span data-ttu-id="98f6b-424">下列其中之一： [ `StaticResource` ](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)或是[ `DynamicResource` ](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-424">One of the following: [`StaticResource`](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [`DynamicResource`](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).</span></span> <span data-ttu-id="98f6b-425">指的定義為資源中之物件的未經處理資料時，會使用這種使用方式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-425">This usage is used when referring to raw data defined as an object in resources.</span></span> <span data-ttu-id="98f6b-426">請參閱[XAML 資源](~/docs/framework/wpf/advanced/xaml-resources.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-426">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="98f6b-427">*contextResourceKey*</span><span class="sxs-lookup"><span data-stu-id="98f6b-427">*contextResourceKey*</span></span>  
 <span data-ttu-id="98f6b-428">從所要求之物件的索引鍵識別碼<xref:System.Windows.ResourceDictionary>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-428">The key identifier for the object being requested from within a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
<a name="dependencyPropertyInfo_DataContext"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-429">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-429">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-430">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-430">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.DataContextProperty>|  
|<span data-ttu-id="98f6b-431">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-431">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-432">下列範例說明如何將資料內容處理程式碼繫結，並提供定義的繫結屬性的特定值的資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-432">The following example illustrates how a data context acts on a binding and provides the information that defines the specific values of bound properties.</span></span>  
  
 [!code-xaml[MasterDetail#DataContextProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/MasterDetail/CSharp/Page1.xaml#datacontextproperty)]  
[!code-xaml[MasterDetail#DataContextProperty2](~/samples/snippets/csharp/VS_Snippets_Wpf/MasterDetail/CSharp/Page1.xaml#datacontextproperty2)]  
[!code-xaml[MasterDetail#DataContextProperty3](~/samples/snippets/csharp/VS_Snippets_Wpf/MasterDetail/CSharp/Page1.xaml#datacontextproperty3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler DataContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler DataContextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.DataContextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataContextChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ DataContextChanged;" />
      <MemberSignature Language="F#" Value="member this.DataContextChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.DataContextChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-433">這個項目的資料內容變更時發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-433">Occurs when the data context for this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-434">如需資料內容和資料繫結的說明，請參閱 <<c0> [ 資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-434">For an explanation of data contexts and data binding, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="98f6b-435">當<xref:System.Windows.FrameworkElement.DataContext%2A>項目變更時，可能會受影響這個項目上的所有資料繫結屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-435">When the <xref:System.Windows.FrameworkElement.DataContext%2A> for an element changes, all data-bound properties on this element are potentially affected.</span></span> <span data-ttu-id="98f6b-436">這適用於所有項目都會邏輯樹狀結構中目前項目的子項目繼承的資料內容，以及目前的項目本身。</span><span class="sxs-lookup"><span data-stu-id="98f6b-436">This applies to any elements that are child elements of the current element in the logical tree, which inherit the data context, and also the current element itself.</span></span> <span data-ttu-id="98f6b-437">所有這類現有的繫結必須重新解譯新<xref:System.Windows.FrameworkElement.DataContext%2A>並會重新評估繫結結果。</span><span class="sxs-lookup"><span data-stu-id="98f6b-437">All such existing bindings must re-interpret the new <xref:System.Windows.FrameworkElement.DataContext%2A> and will reevaluate the binding results.</span></span> <span data-ttu-id="98f6b-438">資料繫結引擎不具決定性的這些困擾，相對於引發順序<xref:System.Windows.FrameworkElement.DataContextChanged>事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-438">The data binding engine is not deterministic about the order of these reevaluations, relative to the raising of the <xref:System.Windows.FrameworkElement.DataContextChanged> event.</span></span> <span data-ttu-id="98f6b-439">事件之後，或以任何混合，可以會在事件中之前, 發生的重新評估。</span><span class="sxs-lookup"><span data-stu-id="98f6b-439">The reevaluations can occur before the event, after the event, or in any mixture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.DataContext" />
      </Docs>
    </Member>
    <Member MemberName="DataContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DataContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DataContextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.DataContextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataContextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DataContextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DataContextProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.DataContextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-440">識別 <see cref="P:System.Windows.FrameworkElement.DataContext" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-440">Identifies the <see cref="P:System.Windows.FrameworkElement.DataContext" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStyleKey">
      <MemberSignature Language="C#" Value="protected internal object DefaultStyleKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.DefaultStyleKey" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property DefaultStyleKey As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Object ^ DefaultStyleKey { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultStyleKey : obj with get, set" Usage="System.Windows.FrameworkElement.DefaultStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-441">取得或設定可在使用或定義佈景主題樣式時，用來參考這個控制項之樣式的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="98f6b-441">Gets or sets the key to use to reference the style for this control, when theme styles are used or defined.</span></span></summary>
        <value><span data-ttu-id="98f6b-442">樣式索引鍵。</span><span class="sxs-lookup"><span data-stu-id="98f6b-442">The style key.</span></span> <span data-ttu-id="98f6b-443">若要當做佈景主題樣式查閱一部分正常運作，這個值必須是要加上樣式之控制項的 <see cref="T:System.Type" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-443">To work correctly as part of theme style lookup, this value is expected to be the <see cref="T:System.Type" /> of the control being styled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-444">這個屬性通常是透過其直接屬性存取子的任何未設定。</span><span class="sxs-lookup"><span data-stu-id="98f6b-444">This property is typically not set through any of its direct property accessors.</span></span> <span data-ttu-id="98f6b-445">相反地，您會覆寫這個相依性屬性的型別特定中繼資料每次您建立新<xref:System.Windows.FrameworkElement>衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-445">Instead, you override the type-specific metadata of this dependency property every time you create a new <xref:System.Windows.FrameworkElement> derived class.</span></span> <span data-ttu-id="98f6b-446">當您衍生的控制項時，呼叫<xref:System.Windows.DependencyProperty.OverrideMetadata%2A>針對方法<xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty>內控制項的靜態建構函式的識別碼，衍生類別 （或對等的類別初始化）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-446">When you derive a control, call the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method against the <xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty> identifier, within the static constructor of the control derived class (or equivalent class initialization).</span></span>  
  
 <span data-ttu-id="98f6b-447">控制項通常會覆寫它自己的型別，這個屬性的預設值，但在某些情況下也可以使用基底類型存在佈景主題字典中的樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-447">A control typically overrides the default value of this property to be its own type, but in some cases could also use a base type for which a style in the theme dictionaries exists.</span></span> <span data-ttu-id="98f6b-448">如果基底控制項的 [控制項] 範本完全定義該衍生的視覺表示法，而且衍生的型別公開 （expose） 任何其他成員不需要額外的項目控制項範本的一部分，這是控制項的只有實用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-448">This is only practical if the control templates of the base control entirely define the visual representation of that derived control, and if whatever additional members the derived types expose do not require additional elements as part of the control template.</span></span>  
  
 <span data-ttu-id="98f6b-449">如果您想要您的項目或故意不使用佈景主題樣式的控制項，設定<xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A>屬性設`true`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-449">If you want your element or control to deliberately not use theme styles, set the <xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A> property to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_DefaultStyleKey"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-450">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-450">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-451">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-451">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty>|  
|<span data-ttu-id="98f6b-452">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-452">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-453">下列範例說明的 < 備註 > 所述的相依性屬性中繼資料覆寫使用量。</span><span class="sxs-lookup"><span data-stu-id="98f6b-453">The following example illustrates the dependency property metadata override usage discussed in Remarks.</span></span> <span data-ttu-id="98f6b-454">此程式碼會定義自訂控制項類別`NumericUpDown`適用於從專用的控制項程式庫組件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-454">This code defines a custom control class `NumericUpDown` intended to be used from a dedicated control library assembly.</span></span> <span data-ttu-id="98f6b-455">詳述的靜態建構函式參考一些私用的初始化函式時，註冊類別處理常式 (另一個常見的控制項子類別化案例; 請參閱[路由事件標記為已處理以及類別處理](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md))，最後覆寫<xref:System.Windows.FrameworkElement.DefaultStyleKey%2A>上的相依性屬性中繼資料`NumericUpDown`類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-455">The illustrated static constructor references some private initialization function, registers a class handler (another common control subclassing scenario; see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)) and finally overrides the <xref:System.Windows.FrameworkElement.DefaultStyleKey%2A> dependency property metadata on the `NumericUpDown` class.</span></span> <span data-ttu-id="98f6b-456"><xref:System.Windows.FrameworkElement.DefaultStyleKey%2A> 預期的索引鍵，也就是用來查閱某些任意的非樣式控制項的樣式的佈景主題樣式系統的慣例，一律會傳回它自己的類型。</span><span class="sxs-lookup"><span data-stu-id="98f6b-456"><xref:System.Windows.FrameworkElement.DefaultStyleKey%2A> always returns its own type as the intended key, which is the convention that the theme style system uses to look up the style for some arbitrary otherwise non-styled control.</span></span> <span data-ttu-id="98f6b-457">完整的範例也會定義該金鑰; 所參考的實際控制項的佈景主題樣式請參閱[NumericUpDown 自訂控制項，具有佈景主題和 UI 自動化支援範例](https://go.microsoft.com/fwlink/?LinkID=160025)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-457">The complete sample also defines the actual control's theme style that is referenced by that key; see [NumericUpDown Custom Control with Theme and UI Automation Support Sample](https://go.microsoft.com/fwlink/?LinkID=160025).</span></span>  
  
 [!code-csharp[CustomControlNumericUpDown#StaticCtorOfCustomClassCommonTasks](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/NumericUpDown2.cs)]
 [!code-vb[CustomControlNumericUpDown#StaticCtorOfCustomClassCommonTasks](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDown/visualbasic/customcontrollibrary/numericupdown2.vb)]  

  <span data-ttu-id="98f6b-458">此範例的完整原始程式碼位於 GitHub 兩者[ C# ](https://github.com/dotnet/samples/tree/master/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary)並[Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDown/visualbasic/customcontrollibrary)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-458">The complete source code for this example is available on GitHub for both [C#](https://github.com/dotnet/samples/tree/master/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary) and [Visual Basic](https://github.com/dotnet/samples/tree/master/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDown/visualbasic/customcontrollibrary).</span></span>

 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160025"><span data-ttu-id="98f6b-459">具有佈景主題和 UI 自動化支援範例的 NumericUpDown 自訂控制項</span><span class="sxs-lookup"><span data-stu-id="98f6b-459">NumericUpDown Custom Control with Theme and UI Automation Support Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="DefaultStyleKeyProperty">
      <MemberSignature Language="C#" Value="protected internal static readonly System.Windows.DependencyProperty DefaultStyleKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly static initonly class System.Windows.DependencyProperty DefaultStyleKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.DefaultStyleKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared ReadOnly DefaultStyleKeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="protected public: static initonly System::Windows::DependencyProperty ^ DefaultStyleKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultStyleKeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.DefaultStyleKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-460">識別 <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-460">Identifies the <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="frameworkElement.EndInit " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-461">表示項目的初始設定程序已完成。</span><span class="sxs-lookup"><span data-stu-id="98f6b-461">Indicates that the initialization process for the element is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-462">如果<xref:System.Windows.FrameworkElement.BeginInit%2A>先前已呼叫，基底實作會引發<xref:System.Windows.FrameworkElement.Initialized>事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-462">If <xref:System.Windows.FrameworkElement.BeginInit%2A> was previously called, the base implementation will raise the <xref:System.Windows.FrameworkElement.Initialized> event.</span></span> <span data-ttu-id="98f6b-463">否則，如果<xref:System.Windows.FrameworkElement.BeginInit%2A>，不會呼叫或可能不是決定是否<xref:System.Windows.FrameworkElement.BeginInit%2A>呼叫，則會<xref:System.Windows.FrameworkElement.Initialized>就不會引發，並改為擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-463">Otherwise, if <xref:System.Windows.FrameworkElement.BeginInit%2A> was not called or it could not be determined whether <xref:System.Windows.FrameworkElement.BeginInit%2A> was called, <xref:System.Windows.FrameworkElement.Initialized> is not raised and an exception is thrown instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="98f6b-464">呼叫 <see cref="M:System.Windows.FrameworkElement.EndInit" /> 時，沒有在項目上先呼叫 <see cref="M:System.Windows.FrameworkElement.BeginInit" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-464"><see cref="M:System.Windows.FrameworkElement.EndInit" /> was called without <see cref="M:System.Windows.FrameworkElement.BeginInit" /> having previously been called on the element.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-465">實作這個方法，以提供您的項目初始化期間載入程序的項目時應該發生的特殊處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-465">Implement this method to provide special handling that should happen when your element is initialized during the element loading process.</span></span>  
  
<span data-ttu-id="98f6b-466">您的實作應該呼叫基底實作，因為基底 （預設值） 的實作會設定一些內部的旗標，以追蹤的初始化。</span><span class="sxs-lookup"><span data-stu-id="98f6b-466">Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.FindName : string -&gt; obj" Usage="frameworkElement.FindName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98f6b-467">要求之項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="98f6b-467">The name of the requested element.</span></span></param>
        <summary><span data-ttu-id="98f6b-468">尋找具有所提供之識別項名稱的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-468">Finds an element that has the provided identifier name.</span></span></summary>
        <returns><span data-ttu-id="98f6b-469">要求的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-469">The requested element.</span></span> <span data-ttu-id="98f6b-470">如果找不到相符的項目，這可能會是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-470">This can be <see langword="null" /> if no matching element was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-471">如果項目具有子項目，這些子元素會遞迴地搜尋所有要求的具名項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-471">If the element has child elements, these child elements are all searched recursively for the requested named element.</span></span>  
  
 <span data-ttu-id="98f6b-472"><xref:System.Windows.FrameworkElement.FindName%2A> 可在目前的項目名稱範圍內操作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-472"><xref:System.Windows.FrameworkElement.FindName%2A> operates within the current element's namescope.</span></span> <span data-ttu-id="98f6b-473">如需詳細資訊，請參閱 < [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-473">For details, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
        <altmember cref="P:System.Windows.FrameworkElement.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/b7e61222-e8cf-48d2-acd0-6df3b7685d48"><span data-ttu-id="98f6b-474">X:name 屬性</span><span class="sxs-lookup"><span data-stu-id="98f6b-474">x:Name Attribute</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FindResource">
      <MemberSignature Language="C#" Value="public object FindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindResource(System::Object ^ resourceKey);" />
      <MemberSignature Language="F#" Value="member this.FindResource : obj -&gt; obj" Usage="frameworkElement.FindResource resourceKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey"><span data-ttu-id="98f6b-475">所要求資源的索引鍵識別項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-475">The key identifier for the requested resource.</span></span></param>
        <summary><span data-ttu-id="98f6b-476">以指定的索引鍵搜尋資源，如果找不到要求的資源時會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-476">Searches for a resource with the specified key, and throws an exception if the requested resource is not found.</span></span></summary>
        <returns><span data-ttu-id="98f6b-477">要求的資源。</span><span class="sxs-lookup"><span data-stu-id="98f6b-477">The requested resource.</span></span> <span data-ttu-id="98f6b-478">如果找不到含有所提供索引鍵的資源，便會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-478">If no resource with the provided key was found, an exception is thrown.</span></span> <span data-ttu-id="98f6b-479">在擲回例外狀況時，可能也會傳回 <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> 值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-479">An <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> value might also be returned in the exception case.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="98f6b-480">如果您找不到索引鍵呼叫這個方法，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-480">If you call this method for a key that cannot be found, an exception is thrown.</span></span> <span data-ttu-id="98f6b-481">如果您不想處理的呼叫會造成例外狀況<xref:System.Windows.FrameworkElement.FindResource%2A>，呼叫<xref:System.Windows.FrameworkElement.TryFindResource%2A>改。</span><span class="sxs-lookup"><span data-stu-id="98f6b-481">If you do not want to handle exceptions that result from calling <xref:System.Windows.FrameworkElement.FindResource%2A>, call <xref:System.Windows.FrameworkElement.TryFindResource%2A> instead.</span></span> <span data-ttu-id="98f6b-482"><xref:System.Windows.FrameworkElement.TryFindResource%2A> 傳回`null`當要求的資源無法找到，且不擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-482"><xref:System.Windows.FrameworkElement.TryFindResource%2A> returns `null` when a requested resource cannot be found, and does not throw an exception.</span></span>  
  
 <span data-ttu-id="98f6b-483">如果呼叫的項目上找不到資源，邏輯樹狀結構中的父項目是搜尋的下一步，應用程式，則佈景主題，然後最後系統資源。</span><span class="sxs-lookup"><span data-stu-id="98f6b-483">If the resource is not found on the calling element, the parent element in the logical tree is searched next, then the application, then themes, and finally system resources.</span></span> <span data-ttu-id="98f6b-484">這項查閱方法等同於在標記中的動態資源參考所要求資源如果樹狀結構搜尋的方式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-484">This lookup methodology is identical to how the tree is searched if a resource were requested by a dynamic resource reference in markup.</span></span> <span data-ttu-id="98f6b-485">如需有關資源查閱的詳細資訊，請參閱[XAML 資源](~/docs/framework/wpf/advanced/xaml-resources.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-485">For more information about resource lookup, see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="98f6b-486">一般而言，您立即轉換<xref:System.Windows.FrameworkElement.FindResource%2A>值傳回至屬性的型別，您可以使用傳回的資源值設定。</span><span class="sxs-lookup"><span data-stu-id="98f6b-486">Typically, you immediately cast a <xref:System.Windows.FrameworkElement.FindResource%2A> return value to the type of the property that you setting with the returned resource value.</span></span>  
  
 <span data-ttu-id="98f6b-487">資源索引鍵不一定是字串。</span><span class="sxs-lookup"><span data-stu-id="98f6b-487">Resource keys are not necessarily strings.</span></span> <span data-ttu-id="98f6b-488">比方說，樣式的佈景主題層級的控制項索引鍵，<xref:System.Type>的控制項，以及應用程式或頁面的樣式的控制項通常會使用這個相同的金鑰慣例。</span><span class="sxs-lookup"><span data-stu-id="98f6b-488">For instance, styles for controls at the theme level are deliberately keyed to the <xref:System.Type> of the control, and application or page styles for controls typically use this same key convention.</span></span> <span data-ttu-id="98f6b-489">如需詳細資訊，請參閱 <<c0> [ 設定樣式和範本](~/docs/framework/wpf/controls/styling-and-templating.md)或是[XAML 資源](~/docs/framework/wpf/advanced/xaml-resources.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-489">For details, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md) or [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-490">下列範例會取得一個具名的資源，並將它轉換成適當的型別來填滿屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-490">The following example obtains a named resource and casts it to an appropriate type to fill a property.</span></span>  
  
 [!code-csharp[PropertiesOvwSupport#ResourceProceduralGet](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertiesOvwSupport/CSharp/page3.xaml.cs#resourceproceduralget)]
 [!code-vb[PropertiesOvwSupport#ResourceProceduralGet](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertiesOvwSupport/visualbasic/page3.xaml.vb#resourceproceduralget)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException"><span data-ttu-id="98f6b-491">找不到 <paramref name="resourceKey" />，<see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 事件的事件處理常式也不存在。</span><span class="sxs-lookup"><span data-stu-id="98f6b-491"><paramref name="resourceKey" /> was not found and an event handler does not exist for the <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> event.</span></span>  
  
<span data-ttu-id="98f6b-492">-或-</span><span class="sxs-lookup"><span data-stu-id="98f6b-492">-or-</span></span> 
 <span data-ttu-id="98f6b-493">找不到 <paramref name="resourceKey" />，而且 <see cref="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" /> 屬性是 <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> 事件中的 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-493"><paramref name="resourceKey" /> was not found and the <see cref="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" /> property is <see langword="false" /> in the <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> event.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="98f6b-494"><paramref name="resourceKey" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-494"><paramref name="resourceKey" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.FrameworkElement.TryFindResource(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.FrameworkElement.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-495">取得或設定文字和其他 [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 項目在控制其配置的任何父項目中的流向。</span><span class="sxs-lookup"><span data-stu-id="98f6b-495">Gets or sets the direction that text and other [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements flow within any parent element that controls their layout.</span></span></summary>
        <value><span data-ttu-id="98f6b-496">文字和其他 [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] 項目在其父項目中的流向，以列舉值表示。</span><span class="sxs-lookup"><span data-stu-id="98f6b-496">The direction that text and other [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elements flow within their parent element, as a value of the enumeration.</span></span> <span data-ttu-id="98f6b-497">預設值為 <see cref="F:System.Windows.FlowDirection.LeftToRight" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-497">The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-498">相依性屬性的使用方式設定<xref:System.Windows.FrameworkElement.FlowDirection%2A>這個項目上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-498">The dependency property usage sets the <xref:System.Windows.FrameworkElement.FlowDirection%2A> on this element.</span></span> <span data-ttu-id="98f6b-499">因為設定的屬性值繼承<xref:System.Windows.FrameworkElement.FlowDirection%2A>可能可以設定項目上<xref:System.Windows.FrameworkElement.FlowDirection%2A>上未設定的所有子項目<xref:System.Windows.FrameworkElement.FlowDirection%2A>在本機或透過其他方式，例如樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-499">Because of property value inheritance, setting <xref:System.Windows.FrameworkElement.FlowDirection%2A> on an element can potentially set <xref:System.Windows.FrameworkElement.FlowDirection%2A> on all child elements that did not set <xref:System.Windows.FrameworkElement.FlowDirection%2A> locally or though other means such as styles.</span></span>  
  
 <span data-ttu-id="98f6b-500">這個屬性未自動設定做為一部分的任何應用程式的文化特性資訊，因為項目可能包含不一定是要遵守的文化特性資訊所隱含的一般流程方向的內容。</span><span class="sxs-lookup"><span data-stu-id="98f6b-500">This property is not automatically set as part of any application culture information, because an element might contain content that is not necessarily intended to obey the general flow direction implied by the culture information.</span></span> <span data-ttu-id="98f6b-501">如需有關全球化考量的詳細資訊，請參閱[WPF 的全球化](~/docs/framework/wpf/advanced/globalization-for-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-501">For more information on globalization considerations, see [Globalization for WPF](~/docs/framework/wpf/advanced/globalization-for-wpf.md).</span></span>  
  
 <span data-ttu-id="98f6b-502">此屬性具有已定義[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]屬性存取子，因此它可作為相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-502">This property has a defined [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property accessor, so it functions as a dependency property.</span></span> <span data-ttu-id="98f6b-503">不過，它也會註冊為附加，因此它也可以當作附加屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-503">However, it is also registered as attached, so it can also function as an attached property.</span></span> <span data-ttu-id="98f6b-504">附加的註冊是主要是讓屬性值繼承支援，但屬性也可用來當做真正的附加屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-504">The attached registration is mainly so that property value inheritance is supported, but the property can also be used as a true attached property.</span></span> <span data-ttu-id="98f6b-505">附加的屬性使用方式，才會相關，如果您想要設定文字方向的物件具有<xref:System.Windows.FrameworkElement>父元素中會執行配置時，不是本身<xref:System.Windows.FrameworkElement>，而且已沒有更直接定義`FlowDirection`屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-505">The attached property usage is only relevant if the object you intend to set the flow direction on has a <xref:System.Windows.FrameworkElement> parent element that performs layout upon it, is itself not a <xref:System.Windows.FrameworkElement>, and does not already have a more directly defined `FlowDirection` property.</span></span> <span data-ttu-id="98f6b-506">(某些流程這類文件類別<xref:System.Windows.Documents.Block>並<xref:System.Windows.Documents.Inline>定義自己的`FlowDirection`，這個屬性也可以設定文字方向。</span><span class="sxs-lookup"><span data-stu-id="98f6b-506">(Some of the flow document classes such as <xref:System.Windows.Documents.Block> and <xref:System.Windows.Documents.Inline> define their own `FlowDirection`, and this property can also set the flow direction.</span></span> <span data-ttu-id="98f6b-507">屬性值再由讀取最終內容主機而不需要附加的屬性使用方式。）</span><span class="sxs-lookup"><span data-stu-id="98f6b-507">The property value is then read by the eventual content host without requiring attached property usage.)</span></span>  
  
<a name="xamlAttributeUsage_FlowDirection"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-508">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-508">XAML Attribute Usage</span></span>  
 <span data-ttu-id="98f6b-509">\<*object* **FlowDirection**="<xref:System.Windows.FlowDirection>"/></span><span class="sxs-lookup"><span data-stu-id="98f6b-509">\<*object* **FlowDirection**="<xref:System.Windows.FlowDirection>"/></span></span>  
  
<a name="xamlTextUsage_FlowDirection"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="98f6b-510">XAML 文字使用方式</span><span class="sxs-lookup"><span data-stu-id="98f6b-510">XAML Text Usage</span></span>  
 <span data-ttu-id="98f6b-511">這個屬性也可以設定不是類別上<xref:System.Windows.FrameworkElement>衍生類別，由下列[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]附加屬性使用方式：</span><span class="sxs-lookup"><span data-stu-id="98f6b-511">This property can also be set on classes that are not <xref:System.Windows.FrameworkElement> derived classes, by the following [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attached property usage:</span></span>  
  
 <span data-ttu-id="98f6b-512">`<` *object* `FrameworkElement.`**FlowDirection**="<xref:System.Windows.FlowDirection>`"/>`</span><span class="sxs-lookup"><span data-stu-id="98f6b-512">`<` *object* `FrameworkElement.`**FlowDirection**="<xref:System.Windows.FlowDirection>`"/>`</span></span>  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-513">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-513">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-514">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-514">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.FlowDirectionProperty>|  
|<span data-ttu-id="98f6b-515">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-515">Metadata properties set to `true`</span></span>|<span data-ttu-id="98f6b-516"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="98f6b-516"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 <span data-ttu-id="98f6b-517">這個屬性是相依性屬性和附加的屬性;請參閱 < 備註 >。</span><span class="sxs-lookup"><span data-stu-id="98f6b-517">This property is both a dependency property and an attached property; see Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FlowDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-518">識別 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-518">Identifies the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusVisualStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style FocusVisualStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style FocusVisualStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.FocusVisualStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusVisualStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ FocusVisualStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FocusVisualStyle : System.Windows.Style with get, set" Usage="System.Windows.FrameworkElement.FocusVisualStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-519">取得或設定屬性，這個屬性可自訂外觀、效果或其他樣式特性，以在這個項目捕捉到鍵盤焦點時套用至項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-519">Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.</span></span></summary>
        <value><span data-ttu-id="98f6b-520">要在取得焦點時套用的樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-520">The desired style to apply on focus.</span></span> <span data-ttu-id="98f6b-521">相依性屬性中所宣告的預設值是空的靜態 <see cref="T:System.Windows.Style" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-521">The default value as declared in the dependency property is an empty static <see cref="T:System.Windows.Style" />.</span></span> <span data-ttu-id="98f6b-522">不過，執行階段的有效值通常是 (但不一定總是) 佈景主題支援為控制項所提供的樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-522">However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-523">這個屬性會影響視覺外觀，但不會報告<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>中繼資料中。</span><span class="sxs-lookup"><span data-stu-id="98f6b-523">This property affects visual appearance but does not report <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> in metadata.</span></span> <span data-ttu-id="98f6b-524">這是因為視覺外觀變更事件驅動，隨時可能不適用且因此通常不應該報告中繼資料中的任何視覺效果] 或 [版面配置資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-524">This is because the visual appearance change is event-driven and may not apply at all times, and therefore should not generally report any visual or layout information in metadata.</span></span>  
  
 <span data-ttu-id="98f6b-525">就概念而言，套用至控制項的焦點視覺行為應該保持一致控制項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-525">Conceptually, the visual behavior of focus applied to a control should be coherent from control to control.</span></span> <span data-ttu-id="98f6b-526">若要只變更焦點視覺化樣式，當您在撰寫整個佈景主題，是最合理的方式，來強制執行一致性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-526">The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme.</span></span> <span data-ttu-id="98f6b-527">設定這個屬性上個別控制項的樣式，而不是屬於佈景主題不是預定的使用方式，此屬性，因為它可能會導致令人困惑的使用者體驗，關於鍵盤焦點。</span><span class="sxs-lookup"><span data-stu-id="98f6b-527">Setting this property on individual control styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus.</span></span> <span data-ttu-id="98f6b-528">如果您打算是刻意不一致整個佈景主題的控制項特定行為，更好的方法是使用觸發程序在樣式中個別輸入的狀態屬性，這類<xref:System.Windows.UIElement.IsFocused%2A>或<xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>，以及若要這樣做並不會的方式以視覺化方式會影響任何現有的焦點視覺化樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-528">If you are intending control-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <xref:System.Windows.UIElement.IsFocused%2A> or <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>, and to do so in a way that does not visually interfere with any existing focus visual style.</span></span> <span data-ttu-id="98f6b-529">如需有關的設計用意<xref:System.Windows.FrameworkElement.FocusVisualStyle%2A>及替代專注屬性，請參閱 <<c2> [ 設定在控制項和 FocusVisualStyle 焦點的樣式](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-529">For more information on the design intention of <xref:System.Windows.FrameworkElement.FocusVisualStyle%2A> and alternative focus properties, see [Styling for Focus in Controls, and FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md).</span></span>  
  
<a name="xamlAttributeUsage_FocusVisualStyle"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-530">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-530">XAML Attribute Usage</span></span>  
  
```  
<object FocusVisualStyle="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_FocusVisualStyle"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="98f6b-531">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="98f6b-531">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_FocusVisualStyle"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-532">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-532">XAML Values</span></span>  
 <span data-ttu-id="98f6b-533">*resourceExtension*</span><span class="sxs-lookup"><span data-stu-id="98f6b-533">*resourceExtension*</span></span>  
 <span data-ttu-id="98f6b-534">下列其中之一:、 或。</span><span class="sxs-lookup"><span data-stu-id="98f6b-534">One of the following: , or .</span></span> <span data-ttu-id="98f6b-535">請參閱[XAML 資源](~/docs/framework/wpf/advanced/xaml-resources.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-535">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="98f6b-536">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="98f6b-536">*styleResourceKey*</span></span>  
 <span data-ttu-id="98f6b-537">識別所要求的樣式索引鍵。</span><span class="sxs-lookup"><span data-stu-id="98f6b-537">The key that identifies the style being requested.</span></span> <span data-ttu-id="98f6b-538">索引鍵參考中的現有資源<xref:System.Windows.ResourceDictionary>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-538">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98f6b-539">屬性元素語法是技術上可行，但不是建議使用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-539">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="98f6b-540">請參閱[內嵌樣式和範本](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-540">See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span> <span data-ttu-id="98f6b-541">使用繫結參考或<xref:System.Windows.Data.Binding>也是可行的但不常見。</span><span class="sxs-lookup"><span data-stu-id="98f6b-541">A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.</span></span>  
  
<a name="dependencyPropertyInfo_FocusVisualStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-542">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-542">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-543">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-543">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.FocusVisualStyleProperty>|  
|<span data-ttu-id="98f6b-544">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-544">Metadata properties set to `true`</span></span>|<span data-ttu-id="98f6b-545">無</span><span class="sxs-lookup"><span data-stu-id="98f6b-545">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="FocusVisualStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusVisualStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusVisualStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.FocusVisualStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusVisualStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusVisualStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusVisualStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.FocusVisualStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-546">識別 <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-546">Identifies the <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCursor">
      <MemberSignature Language="C#" Value="public bool ForceCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.ForceCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ForceCursor : bool with get, set" Usage="System.Windows.FrameworkElement.ForceCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-547">取得或設定值，這個值表示此 <see cref="T:System.Windows.FrameworkElement" /> 是否應強制[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 呈現游標，如 <see cref="P:System.Windows.FrameworkElement.Cursor" /> 屬性所宣告。</span><span class="sxs-lookup"><span data-stu-id="98f6b-547">Gets or sets a value that indicates whether this <see cref="T:System.Windows.FrameworkElement" /> should force the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] to render the cursor as declared by the <see cref="P:System.Windows.FrameworkElement.Cursor" /> property.</span></span></summary>
        <value><span data-ttu-id="98f6b-548">如果游標位於此項目上方時，強制游標展示使用目前游標的 <see cref="P:System.Windows.FrameworkElement.Cursor" /> 設定 (包括在所有子項目上) 則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-548"><see langword="true" /> if cursor presentation while over this element is forced to use current <see cref="P:System.Windows.FrameworkElement.Cursor" /> settings for the cursor (including on all child elements); otherwise <see langword="false" />.</span></span> <span data-ttu-id="98f6b-549">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-549">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-550">如果您將這個屬性設定為`true`您將會覆寫的子項目所建立的資料指標喜好設定。</span><span class="sxs-lookup"><span data-stu-id="98f6b-550">If you set this property to `true` you will override the cursor preferences established by child elements.</span></span> <span data-ttu-id="98f6b-551">因此一般應用程式這麼做[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]可能會造成混淆使用者，特別是如果子元素正嘗試將指定資料指標。</span><span class="sxs-lookup"><span data-stu-id="98f6b-551">Doing so in general application [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] might be confusing for the user, particularly if child elements are attempting to specify cursors.</span></span> <span data-ttu-id="98f6b-552">設定<xref:System.Windows.FrameworkElement.ForceCursor%2A>在控制項的子類別化或複合 （compositing） 的情況下更適合。</span><span class="sxs-lookup"><span data-stu-id="98f6b-552">Setting <xref:System.Windows.FrameworkElement.ForceCursor%2A> is more appropriate in control subclassing or compositing scenarios.</span></span>  
  
<a name="dependencyPropertyInfo_ForceCursor"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-553">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-553">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-554">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-554">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ForceCursorProperty>|  
|<span data-ttu-id="98f6b-555">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-555">Metadata properties set to `true`</span></span>|<span data-ttu-id="98f6b-556">無</span><span class="sxs-lookup"><span data-stu-id="98f6b-556">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-557">下列範例會強制資料指標的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-557">The following example forces the cursor value.</span></span>  
  
 [!code-xaml[ForceCursor#ForceCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/ForceCursor/CS/default.xaml#forcecursor)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="ForceCursorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForceCursorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForceCursorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ForceCursorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ForceCursorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ForceCursorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ForceCursorProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.ForceCursorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-558">識別 <see cref="P:System.Windows.FrameworkElement.ForceCursor" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-558">Identifies the <see cref="P:System.Windows.FrameworkElement.ForceCursor" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBindingExpression (dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.GetBindingExpression : System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpression" Usage="frameworkElement.GetBindingExpression dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="98f6b-559">要從中取得繫結的目標 <see cref="T:System.Windows.DependencyProperty" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-559">The target <see cref="T:System.Windows.DependencyProperty" /> to get the binding from.</span></span></param>
        <summary><span data-ttu-id="98f6b-560">傳回 <see cref="T:System.Windows.Data.BindingExpression" />，代表指定屬性的繫結。</span><span class="sxs-lookup"><span data-stu-id="98f6b-560">Returns the <see cref="T:System.Windows.Data.BindingExpression" /> that represents the binding on the specified property.</span></span></summary>
        <returns><span data-ttu-id="98f6b-561">如果目標屬性具有使用中的繫結程序，則為 <see cref="T:System.Windows.Data.BindingExpression" />；否則會傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-561">A <see cref="T:System.Windows.Data.BindingExpression" /> if the target property has an active binding; otherwise, returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-562">檢查傳回值的`null`是一種技術，可用來判斷屬性是否具有使用中的繫結。</span><span class="sxs-lookup"><span data-stu-id="98f6b-562">Checking the return value for `null` is a technique you can use to determine whether a property has an active binding.</span></span>  
  
 <span data-ttu-id="98f6b-563">這個方法是其實只是為了方便起見包裝<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-563">This method is really just a convenience wrapper around the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="98f6b-564"><xref:System.Windows.FrameworkElement.GetBindingExpression%2A> 將目前的執行個體傳遞並`dp`參數來<xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-564"><xref:System.Windows.FrameworkElement.GetBindingExpression%2A> passes the current instance and the `dp` parameter to <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.BindingOperations" />
      </Docs>
    </Member>
    <Member MemberName="GetFlowDirection">
      <MemberSignature Language="C#" Value="public static System.Windows.FlowDirection GetFlowDirection (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FlowDirection GetFlowDirection(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFlowDirection (element As DependencyObject) As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FlowDirection GetFlowDirection(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFlowDirection : System.Windows.DependencyObject -&gt; System.Windows.FlowDirection" Usage="System.Windows.FrameworkElement.GetFlowDirection element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="98f6b-565">要為其傳回 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-565">The element to return a <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> for.</span></span></param>
        <summary><span data-ttu-id="98f6b-566">取得所指定 <see cref="T:System.Windows.DependencyObject" /> 的 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 附加屬性值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-566">Gets the value of the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</span></span></summary>
        <returns><span data-ttu-id="98f6b-567">要求的流程方向，作為列舉值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-567">The requested flow direction, as a value of the enumeration.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-568">這個方法的主要目的是支援的附加的屬性語法<xref:System.Windows.FrameworkElement.FlowDirection%2A>屬性，因此允許的提供項目子系<xref:System.Windows.FrameworkElement>以指定其父項目中排列的流程方向。</span><span class="sxs-lookup"><span data-stu-id="98f6b-568">The main purpose of this method is to support attached property syntax for the <xref:System.Windows.FrameworkElement.FlowDirection%2A> property, therefore allowing child elements of a provided <xref:System.Windows.FrameworkElement> to specify flow direction for the arrangement within their parent element.</span></span> <span data-ttu-id="98f6b-569">若要取得值，在目前<xref:System.Windows.FrameworkElement>，使用 direct[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]存取子<xref:System.Windows.FrameworkElement.FlowDirection%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-569">To get the value on the current <xref:System.Windows.FrameworkElement>, use the direct [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] accessor <xref:System.Windows.FrameworkElement.FlowDirection%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.FlowDirection" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberSignature Language="F#" Value="override this.GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry" Usage="frameworkElement.GetLayoutClip layoutSlotSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize"><span data-ttu-id="98f6b-570">視覺呈現的項目部分大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-570">The size of the part of the element that does visual presentation.</span></span></param>
        <summary><span data-ttu-id="98f6b-571">傳回裁剪遮罩的幾何。</span><span class="sxs-lookup"><span data-stu-id="98f6b-571">Returns a geometry for a clipping mask.</span></span> <span data-ttu-id="98f6b-572">如果配置系統嘗試排列大於可用顯示空間的項目，則會套用這個遮罩。</span><span class="sxs-lookup"><span data-stu-id="98f6b-572">The mask applies if the layout system attempts to arrange an element that is larger than the available display space.</span></span></summary>
        <returns><span data-ttu-id="98f6b-573">裁剪幾何。</span><span class="sxs-lookup"><span data-stu-id="98f6b-573">The clipping geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-574">邊界將被減去`layoutSlotSize`版面配置系統行為的一部分。</span><span class="sxs-lookup"><span data-stu-id="98f6b-574">Margins will be subtracted from the `layoutSlotSize` as part of layout system behavior.</span></span>  
  
 <span data-ttu-id="98f6b-575">傳回的 null 參考，表示會發生任何裁剪。</span><span class="sxs-lookup"><span data-stu-id="98f6b-575">A returned null reference indicates that no clipping will occur.</span></span> <span data-ttu-id="98f6b-576">預設實作永遠會傳回`null`時<xref:System.Windows.UIElement.ClipToBounds%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-576">The default implementation always returns `null` when <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`.</span></span> <span data-ttu-id="98f6b-577">這個方法覆寫 <xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-577">This method overrides <xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="98f6b-578"><xref:System.Windows.FrameworkElement>實作會使用<xref:System.Windows.FrameworkElement.MaxHeight%2A>和<xref:System.Windows.FrameworkElement.MaxWidth%2A>其計算中。</span><span class="sxs-lookup"><span data-stu-id="98f6b-578">The <xref:System.Windows.FrameworkElement> implementation uses <xref:System.Windows.FrameworkElement.MaxHeight%2A> and <xref:System.Windows.FrameworkElement.MaxWidth%2A> in its calculations.</span></span> <span data-ttu-id="98f6b-579">數個類別的子<xref:System.Windows.FrameworkElement>覆寫這個方法一次。</span><span class="sxs-lookup"><span data-stu-id="98f6b-579">Several subclasses of <xref:System.Windows.FrameworkElement> override this method again.</span></span> <span data-ttu-id="98f6b-580"><xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=nameWithType>會覆寫以一律傳回`null`因為裝飾項通常是刻意一般範圍外。</span><span class="sxs-lookup"><span data-stu-id="98f6b-580"><xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=nameWithType>, overrides to always return `null` because adorners are often deliberately outside the ordinary bounds.</span></span> <span data-ttu-id="98f6b-581"><xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=nameWithType> 並<xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=nameWithType>會傳回`null`如果<xref:System.Windows.UIElement.ClipToBounds%2A>是`false`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-581"><xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=nameWithType> and <xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=nameWithType> return `null` if <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-582">預設實作永遠會傳回<see langword="null" />時<see cref="P:System.Windows.UIElement.ClipToBounds" />是<see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-582">The default implementation always returns <see langword="null" /> when <see cref="P:System.Windows.UIElement.ClipToBounds" /> is <see langword="false" />.</span></span> <span data-ttu-id="98f6b-583">覆寫通常都是保留這項行為，但有例外狀況，根據關聯性和衍生的類別和其版面配置邏輯，而不是基底類別的用途。</span><span class="sxs-lookup"><span data-stu-id="98f6b-583">Overrides are generally expected to preserve this behavior, although there are exceptions, depending on the relationship and purpose of the derived class and its layout logic as opposed to the base class.</span></span></para></block>
        <altmember cref="P:System.Windows.UIElement.Clip" />
        <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
      </Docs>
    </Member>
    <Member MemberName="GetTemplateChild">
      <MemberSignature Language="C#" Value="protected internal System.Windows.DependencyObject GetTemplateChild (string childName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Windows.DependencyObject GetTemplateChild(string childName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetTemplateChild (childName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::DependencyObject ^ GetTemplateChild(System::String ^ childName);" />
      <MemberSignature Language="F#" Value="member this.GetTemplateChild : string -&gt; System.Windows.DependencyObject" Usage="frameworkElement.GetTemplateChild childName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childName"><span data-ttu-id="98f6b-584">要尋找的子項目名稱。</span><span class="sxs-lookup"><span data-stu-id="98f6b-584">Name of the child to find.</span></span></param>
        <summary><span data-ttu-id="98f6b-585">傳回具現化 <see cref="T:System.Windows.Controls.ControlTemplate" /> 視覺化樹狀結構中的具名項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-585">Returns the named element in the visual tree of an instantiated <see cref="T:System.Windows.Controls.ControlTemplate" />.</span></span></summary>
        <returns><span data-ttu-id="98f6b-586">要求的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-586">The requested element.</span></span> <span data-ttu-id="98f6b-587">如果所要求名稱的項目不存在，則可能為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-587">May be <see langword="null" /> if no element of the requested name exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-588">中的範本[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]有獨立的名稱範圍。</span><span class="sxs-lookup"><span data-stu-id="98f6b-588">Templates in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] have a self-contained namescope.</span></span> <span data-ttu-id="98f6b-589">這是因為範本是重複使用，並在範本中定義的任何名稱不能是唯一的當每個控制項的多個執行個體具現化其範本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-589">This is because templates are re-used, and any name defined in a template cannot remain unique when multiple instances of a control each instantiate its template.</span></span> <span data-ttu-id="98f6b-590">呼叫<xref:System.Windows.FrameworkElement.GetTemplateChild%2A>方法，以傳回來自範本之後它會具現化, 物件的參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-590">Call the <xref:System.Windows.FrameworkElement.GetTemplateChild%2A> method to return references to objects that come from the template after it is instantiated.</span></span> <span data-ttu-id="98f6b-591">您無法使用<xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType>方法來尋找範本中的項目，因為<xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType>作用中的多個一般範圍，以及之間沒有連線<xref:System.Windows.Controls.ControlTemplate>類別本身和具現化的範本，一旦套用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-591">You cannot use the <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> method to find items from templates because <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> acts in a more general scope, and there is no connection between the <xref:System.Windows.Controls.ControlTemplate> class itself and the instantiated template once it is applied.</span></span>  
  
 <span data-ttu-id="98f6b-592"><xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> 提供這個方法相同的功能。</span><span class="sxs-lookup"><span data-stu-id="98f6b-592"><xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> supplies the same function as this method.</span></span> <span data-ttu-id="98f6b-593"><xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> 已受到保護而不是公用，並使用正確名稱範圍，使其得以存取項目] 和 [尋找名為其內的項目內的範本考量。</span><span class="sxs-lookup"><span data-stu-id="98f6b-593"><xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> is public instead of protected, and it uses correct name-scoping considerations that allow it to access the template within an element and find named items within it.</span></span> <span data-ttu-id="98f6b-594">使用<xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType>當您需要取得其父控制項之外的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-594">Use <xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> when you need to get an element outside of its parent control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="frameworkElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-595">如果沒有視覺父代，則傳回這個項目的替代邏輯父代。</span><span class="sxs-lookup"><span data-stu-id="98f6b-595">Returns an alternative logical parent for this element if there is no visual parent.</span></span></summary>
        <returns><span data-ttu-id="98f6b-596">每當這個方法的 WPF 架構層級實作具有非視覺父連線時，傳回 <see langword="null" /> 以外的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-596">Returns something other than <see langword="null" /> whenever a WPF framework-level implementation of this method has a non-visual parent connection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-597">這個方法覆寫 <xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-597">This method overrides <xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="98f6b-598">預設值<xref:System.Windows.FrameworkElement>實作會傳回預期單一視覺化父項目，也就是相同的結果，以取得<xref:System.Windows.FrameworkElement.Parent%2A>值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-598">The default <xref:System.Windows.FrameworkElement> implementation returns the expected single visual parent, which is the same result as getting the <xref:System.Windows.FrameworkElement.Parent%2A> value.</span></span> <span data-ttu-id="98f6b-599">在衍生的類別實作可能會傳回替代的父代關聯性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-599">Derived class implementations might return alternate parent relationships.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberSignature Language="F#" Value="override this.GetVisualChild : int -&gt; System.Windows.Media.Visual" Usage="frameworkElement.GetVisualChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="98f6b-600">集合中要求的子項目之以零為起始的索引。</span><span class="sxs-lookup"><span data-stu-id="98f6b-600">The zero-based index of the requested child element in the collection.</span></span></param>
        <summary><span data-ttu-id="98f6b-601">覆寫 <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />，並從子項目集合傳回指定索引處的子系。</span><span class="sxs-lookup"><span data-stu-id="98f6b-601">Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.</span></span></summary>
        <returns><span data-ttu-id="98f6b-602">要求的子項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-602">The requested child element.</span></span> <span data-ttu-id="98f6b-603">這應該不會傳回 <see langword="null" />；如果提供的索引超出範圍，則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-603">This should not return <see langword="null" />; if the provided index is out of range, an exception is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-604">在 <xref:System.Windows.FrameworkElement>實作中，唯一有效的索引為零。</span><span class="sxs-lookup"><span data-stu-id="98f6b-604">In the <xref:System.Windows.FrameworkElement> implementation, the only valid index is zero.</span></span> <span data-ttu-id="98f6b-605">內容模型的<xref:System.Windows.FrameworkElement.GetVisualChild%2A>支援零個或一個子項目，不是集合。</span><span class="sxs-lookup"><span data-stu-id="98f6b-605">The content model for <xref:System.Windows.FrameworkElement.GetVisualChild%2A> supports either zero or one child elements, not a collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-606">下列範例示範如何自訂裝飾項會使用所宣告的值<xref:System.Windows.Media.VisualCollection>，它會維護其多個視覺子系。</span><span class="sxs-lookup"><span data-stu-id="98f6b-606">The following example shows how a custom adorner uses the values declared by a <xref:System.Windows.Media.VisualCollection> that it maintains for its multiple visual children.</span></span> <span data-ttu-id="98f6b-607">這些值會透過覆寫的報告<xref:System.Windows.FrameworkElement.VisualChildrenCount%2A>和<xref:System.Windows.FrameworkElement.GetVisualChild%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-607">These values are reported through overrides of <xref:System.Windows.FrameworkElement.VisualChildrenCount%2A> and <xref:System.Windows.FrameworkElement.GetVisualChild%2A>.</span></span>  
  
 [!code-csharp[Adorners_ResizingAdorner#FEVisualOverridesPre](~/samples/snippets/csharp/VS_Snippets_Wpf/Adorners_ResizingAdorner/CSharp/ResizingAdorner.cs#fevisualoverridespre)]
 [!code-vb[Adorners_ResizingAdorner#FEVisualOverridesPre](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_ResizingAdorner/visualbasic/resizingadorner.vb#fevisualoverridespre)]  
[!code-csharp[Adorners_ResizingAdorner#FEVisualOverrides](~/samples/snippets/csharp/VS_Snippets_Wpf/Adorners_ResizingAdorner/CSharp/ResizingAdorner.cs#fevisualoverrides)]
[!code-vb[Adorners_ResizingAdorner#FEVisualOverrides](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_ResizingAdorner/visualbasic/resizingadorner.vb#fevisualoverrides)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-608">此實作僅適用於不會維護任何更具描述性的視覺子項目集合的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-608">This implementation is only valid for elements that do not maintain any more descriptive collection of visual child elements.</span></span> <span data-ttu-id="98f6b-609">沒有這類集合的任何項目必須覆寫這個方法，並將索引對應至對等的索引，該項目支援子項目集合中。</span><span class="sxs-lookup"><span data-stu-id="98f6b-609">Any element that does have such a collection must override this method and map the index to an equivalent index in the child element collection that is supported by that element.</span></span> <span data-ttu-id="98f6b-610">索引，範圍從 0 到<see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" />（減一） 應該會傳回有效的項目; 任何其他索引應該擲回例外狀況超出範圍。</span><span class="sxs-lookup"><span data-stu-id="98f6b-610">An index in the range from zero to <see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" /> (minus one) should return a valid element; any other index should throw an out-of-range exception.</span></span> <span data-ttu-id="98f6b-611">範例中的項目型別支援子集合，且會覆寫<see cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />若要傳回多個可能的子項<see cref="T:System.Windows.Controls.Panel" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-611">An example of an element type that does support a child collection and overrides <see cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" /> to return more than one possible child is <see cref="T:System.Windows.Controls.Panel" />.</span></span>  
  
<span data-ttu-id="98f6b-612">中的預設實作<see cref="T:System.Windows.FrameworkElement" />是假設只能有一個視覺子系。</span><span class="sxs-lookup"><span data-stu-id="98f6b-612">The default implementation in <see cref="T:System.Windows.FrameworkElement" /> presumes only one visual child.</span></span> <span data-ttu-id="98f6b-613">針對傳遞任何值<paramref name="index" />非零的例外狀況擲回的原因。</span><span class="sxs-lookup"><span data-stu-id="98f6b-613">Any value passed for <paramref name="index" /> other than zero causes an exception to be thrown.</span></span> <span data-ttu-id="98f6b-614">數個常見的項目，例如裝飾項目、 裝飾項或具有特定的呈現的項目覆寫<see cref="T:System.Windows.FrameworkElement" />實作 （從中繼的基底類別實作）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-614">Several common elements, such as decorators, adorners, or elements with specialized rendering, override the <see cref="T:System.Windows.FrameworkElement" /> implementation (of the implementation from intermediate base classes).</span></span> <span data-ttu-id="98f6b-615">某些實作仍強制執行一個視覺子系，而有些則可讓集合。</span><span class="sxs-lookup"><span data-stu-id="98f6b-615">Some implementations still enforce one visual child whereas others allow a collection.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.FrameworkElement.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-616">取得或設定項目的建議高度。</span><span class="sxs-lookup"><span data-stu-id="98f6b-616">Gets or sets the suggested height of the element.</span></span></summary>
        <value><span data-ttu-id="98f6b-617">項目的高度 (以 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 為單位)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-617">The height of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span> <span data-ttu-id="98f6b-618">預設值為 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-618">The default value is <see cref="F:System.Double.NaN" />.</span></span> <span data-ttu-id="98f6b-619">這個值必須等於或大於 0.0。</span><span class="sxs-lookup"><span data-stu-id="98f6b-619">This value must be equal to or greater than 0.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-620"><xref:System.Windows.FrameworkElement.Height%2A> 其中三個可寫入屬性位於<xref:System.Windows.FrameworkElement>指定高度資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-620"><xref:System.Windows.FrameworkElement.Height%2A> is one of three writable properties on <xref:System.Windows.FrameworkElement> that specify height information.</span></span> <span data-ttu-id="98f6b-621">其他兩種方式<xref:System.Windows.FrameworkElement.MinHeight%2A>和<xref:System.Windows.FrameworkElement.MaxHeight%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-621">The other two are <xref:System.Windows.FrameworkElement.MinHeight%2A> and <xref:System.Windows.FrameworkElement.MaxHeight%2A>.</span></span> <span data-ttu-id="98f6b-622">如果沒有之間有衝突，這些值，實際高度判斷的應用程式的順序是第一個<xref:System.Windows.FrameworkElement.MinHeight%2A>必須能被接受，然後<xref:System.Windows.FrameworkElement.MaxHeight%2A>，最後，如果在範圍中，內<xref:System.Windows.FrameworkElement.Height%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-622">If there is a conflict between these values, the order of application for actual height determination is that first <xref:System.Windows.FrameworkElement.MinHeight%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxHeight%2A>, and finally, if it is within bounds, <xref:System.Windows.FrameworkElement.Height%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-623">如果此項目是某個其他項目內的子項目，然後將此屬性設為值其實只是建議的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-623">If this element is a child element within some other element, then setting this property to a value is really only a suggested value.</span></span> <span data-ttu-id="98f6b-624">版面配置系統，以及特定配置的邏輯父項目會使用值為非繫結輸入版面配置程序。</span><span class="sxs-lookup"><span data-stu-id="98f6b-624">The layout system as well as the particular layout logic of the parent element will use the value as a nonbinding input during the layout process.</span></span> <span data-ttu-id="98f6b-625">實際上<xref:System.Windows.FrameworkElement>幾乎都是其他; 的子項目設定時，即使<xref:System.Windows.FrameworkElement.Height%2A>上<xref:System.Windows.Window>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-625">In practical terms, a <xref:System.Windows.FrameworkElement> is almost always the child element of something else; even when you set the <xref:System.Windows.FrameworkElement.Height%2A> on <xref:System.Windows.Window>.</span></span> <span data-ttu-id="98f6b-626">(如<xref:System.Windows.Window>，會使用值，當基礎的應用程式模型會建立基本的轉譯假設建立 Hwnd 裝載的應用程式。)</span><span class="sxs-lookup"><span data-stu-id="98f6b-626">(For <xref:System.Windows.Window>, that value is used when the underlying application model establishes the basic rendering assumptions that create the Hwnd that hosts the application.)</span></span>  
  
 <span data-ttu-id="98f6b-627">除了為可接受<xref:System.Double>值，這個屬性也可以是<xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-627">In addition to acceptable <xref:System.Double> values, this property can also be <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="98f6b-628">這是您在程式碼中指定自動調整大小行為的方式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-628">This is how you specify auto sizing behavior in code.</span></span> <span data-ttu-id="98f6b-629">在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]您將值設定為字串"Auto"（不區分大小寫） 若要啟用自動調整大小行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-629">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] you set the value to the string "Auto" (case insensitive) to enable the auto sizing behavior.</span></span> <span data-ttu-id="98f6b-630">自動調整大小行為表示項目將會填滿可用的高度。</span><span class="sxs-lookup"><span data-stu-id="98f6b-630">Auto sizing behavior implies that the element will fill the height available to it.</span></span> <span data-ttu-id="98f6b-631">不過請注意，特定的控制項通常會提供透過其將會停用自動調整大小行為，除非它是特別重新啟用的預設佈景主題樣式的預設值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-631">Note however that specific controls frequently supply default values through their default theme styles that will disable the auto sizing behavior unless it is specifically re-enabled.</span></span>  
  
 <span data-ttu-id="98f6b-632">這個屬性傳回的值一定是與任何已設定為它的值相同。</span><span class="sxs-lookup"><span data-stu-id="98f6b-632">The return value of this property is always the same as any value that was set to it.</span></span> <span data-ttu-id="98f6b-633">相較之下，windows 7<xref:System.Windows.FrameworkElement.ActualHeight%2A>而有所不同。</span><span class="sxs-lookup"><span data-stu-id="98f6b-633">In contrast, the value of the <xref:System.Windows.FrameworkElement.ActualHeight%2A> may vary.</span></span> <span data-ttu-id="98f6b-634">這種情形是以靜態方式配置拒絕建議的大小，基於某些原因，因為或立刻顯示。</span><span class="sxs-lookup"><span data-stu-id="98f6b-634">This can happen either statically because the layout rejected the suggested size for some reason, or momentarily.</span></span> <span data-ttu-id="98f6b-635">版面配置系統本身會在相對於屬性系統的組以非同步方式運作<xref:System.Windows.FrameworkElement.Height%2A>和可能處理該特定尚未調整大小屬性變更。</span><span class="sxs-lookup"><span data-stu-id="98f6b-635">The layout system itself works asynchronously relative to the property system's set of <xref:System.Windows.FrameworkElement.Height%2A> and may not have processed that particular sizing property change yet.</span></span>  
  
 <span data-ttu-id="98f6b-636">值的限制<xref:System.Double>值會強制執行<xref:System.Windows.ValidateValueCallback>機制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-636">The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism.</span></span> <span data-ttu-id="98f6b-637">如果您嘗試設定無效的值，則會擲回執行階段例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-637">If you attempt to set an invalid value, a run-time exception is thrown.</span></span>  
  
 <span data-ttu-id="98f6b-638">驗證檢查，除了沒有不具決定性的上限值，用於繫結<xref:System.Windows.FrameworkElement.Height%2A>，會由配置系統強制執行 (這是非常大數目，大於<xref:System.Single.MaxValue?displayProperty=nameWithType>但小於<xref:System.Double.MaxValue?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-638">In addition to the validation check, there is a nondeterministic upper value bound for <xref:System.Windows.FrameworkElement.Height%2A> that is enforced by the layout system (this is a very large number, larger than <xref:System.Single.MaxValue?displayProperty=nameWithType> but smaller than <xref:System.Double.MaxValue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="98f6b-639">如果您超過此限制，將不會呈現項目，並擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-639">If you exceed this bound, the element will not render, and no exception is thrown.</span></span> <span data-ttu-id="98f6b-640">請勿設定<xref:System.Windows.FrameworkElement.Height%2A>大幅超過大小上限的任何可能的視覺顯示，或者您可能會超過此不具決定性的上限值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-640">Do not set <xref:System.Windows.FrameworkElement.Height%2A> to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.</span></span>  
  
<a name="xamlAttributeUsage_Height"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-641">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-641">XAML Attribute Usage</span></span>  
  
```  
<object Height="double"/>  
- or -  
<object Height="qualifiedDouble"/>  
- or -  
<object Height="Auto"/>  
```  
  
<a name="xamlValues_Height"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-642">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-642">XAML Values</span></span>  
 <span data-ttu-id="98f6b-643">*double*</span><span class="sxs-lookup"><span data-stu-id="98f6b-643">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="98f6b-644">字串表示法<xref:System.Double>等於或大於 0.0 的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-644">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-645">如需上限資訊，請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="98f6b-645">See Remarks for upper bound information.</span></span> <span data-ttu-id="98f6b-646">這個值會解譯為[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="98f6b-646">This value is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="98f6b-647">字串不需要明確包含小數位數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-647">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="98f6b-648">執行個體的值`1`是可以接受的。</span><span class="sxs-lookup"><span data-stu-id="98f6b-648">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="98f6b-649">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="98f6b-649">*qualifiedDouble*</span></span>  
 <span data-ttu-id="98f6b-650">A*雙*值，如上所述，後面接著一個的下列單位宣告字串： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-650">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="98f6b-651">`px` （預設值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="98f6b-651">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="98f6b-652">`in` 是英吋為單位;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="98f6b-652">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="98f6b-653">`cm` 是公釐。1cm==(96/2.54) 像素</span><span class="sxs-lookup"><span data-stu-id="98f6b-653">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="98f6b-654">`pt` is points; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="98f6b-654">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="98f6b-655">**Auto**</span><span class="sxs-lookup"><span data-stu-id="98f6b-655">**Auto**</span></span>  
 <span data-ttu-id="98f6b-656">啟用自動調整大小行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-656">Enables autosizing behavior.</span></span> <span data-ttu-id="98f6b-657">請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="98f6b-657">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_Height"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-658">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-658">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-659">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-659">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.HeightProperty>|  
|<span data-ttu-id="98f6b-660">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-660">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.ActualHeight" />
      </Docs>
    </Member>
    <Member MemberName="HeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.HeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.HeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-661">識別 <see cref="P:System.Windows.FrameworkElement.Height" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-661">Identifies the <see cref="P:System.Windows.FrameworkElement.Height" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.HorizontalAlignment HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.HorizontalAlignment HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::HorizontalAlignment HorizontalAlignment { System::Windows::HorizontalAlignment get(); void set(System::Windows::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlignment : System.Windows.HorizontalAlignment with get, set" Usage="System.Windows.FrameworkElement.HorizontalAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-662">取得或設定套用至此元素在父項元素 (例如面板或項目控制項) 中組成時的水平對齊特性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-662">Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control.</span></span></summary>
        <value><span data-ttu-id="98f6b-663">此水平對齊方式設定作為列舉值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-663">A horizontal alignment setting, as a value of the enumeration.</span></span> <span data-ttu-id="98f6b-664">預設為 <see cref="F:System.Windows.HorizontalAlignment.Stretch" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-664">The default is <see cref="F:System.Windows.HorizontalAlignment.Stretch" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-665">當<xref:System.Windows.FrameworkElement.Height%2A>和<xref:System.Windows.FrameworkElement.Width%2A>項目上明確設定屬性，這些測量結果在配置期間會較高優先，並將取消設定的一般效果<xref:System.Windows.FrameworkElement.HorizontalAlignment%2A>至<xref:System.Windows.HorizontalAlignment.Stretch>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-665">When <xref:System.Windows.FrameworkElement.Height%2A> and <xref:System.Windows.FrameworkElement.Width%2A> properties are explicitly set on an element, these measurements take higher precedent during layout and will cancel the typical effects of setting <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> to <xref:System.Windows.HorizontalAlignment.Stretch>.</span></span>  
  
 <span data-ttu-id="98f6b-666"><xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> 是[!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)]屬性存取子是相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-666"><xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="98f6b-667">這個特定的相依性屬性很頻繁已設定不同的子類別化之項目，特別是控制項在其明顯的 「 預設 」 值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-667">This particular dependency property quite frequently has its apparent "default" value set differently in subclassed elements, particularly controls.</span></span> <span data-ttu-id="98f6b-668">這通常發生於兩種方式之一： 相依性屬性重新加以註冊特定的子類別，但具有不同的中繼資料，設定其預設值;或以不同的方式設定該相依性屬性值的預設樣式套用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-668">This generally occurs in one of two ways: the dependency property is re-registered to a particular subclass, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently.</span></span> <span data-ttu-id="98f6b-669">比方說，明顯 「 預設 」 的<xref:System.Windows.FrameworkElement.HorizontalAlignment%2A>for<xref:System.Windows.Controls.Label>控制項將會是<xref:System.Windows.HorizontalAlignment.Left>，即使<xref:System.Windows.Controls.Label>繼承<xref:System.Windows.FrameworkElement.HorizontalAlignment%2A>直接從<xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-669">For example, the apparent "default" of <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> for a <xref:System.Windows.Controls.Label> control will be <xref:System.Windows.HorizontalAlignment.Left>, even though <xref:System.Windows.Controls.Label> inherits <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> direct from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="98f6b-670">這是因為該值重設的預設樣式內<xref:System.Windows.Controls.Label>，樣式的控制項範本內。</span><span class="sxs-lookup"><span data-stu-id="98f6b-670">This is because that value was reset within the default style of <xref:System.Windows.Controls.Label>, within the style's control template.</span></span>  
  
 <span data-ttu-id="98f6b-671"><xref:System.Windows.Controls.Canvas> 不會使用<xref:System.Windows.FrameworkElement.HorizontalAlignment%2A>當您在撰寫版面配置，因為<xref:System.Windows.Controls.Canvas>根據絕對位置。</span><span class="sxs-lookup"><span data-stu-id="98f6b-671"><xref:System.Windows.Controls.Canvas> does not use <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> when composing layout, because <xref:System.Windows.Controls.Canvas> is based on absolute positioning.</span></span>  
  
 <span data-ttu-id="98f6b-672">當繼承<xref:System.Windows.Controls.Label>或衍生類別，<xref:System.Windows.Controls.Label>重新定義此相依性屬性的預設值<xref:System.Windows.HorizontalAlignment.Left>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-672">When inherited by <xref:System.Windows.Controls.Label> or derived classes, <xref:System.Windows.Controls.Label> redefines the default value of this dependency property to be <xref:System.Windows.HorizontalAlignment.Left>.</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-673">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-673">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-674">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-674">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.HorizontalAlignmentProperty>|  
|<span data-ttu-id="98f6b-675">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-675">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.HorizontalAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-676">識別 <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-676">Identifies the <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Windows.InheritanceBehavior InheritanceBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.InheritanceBehavior InheritanceBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.InheritanceBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property InheritanceBehavior As InheritanceBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::InheritanceBehavior InheritanceBehavior { System::Windows::InheritanceBehavior get(); void set(System::Windows::InheritanceBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceBehavior : System.Windows.InheritanceBehavior with get, set" Usage="System.Windows.FrameworkElement.InheritanceBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.InheritanceBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-677">取得或設定屬性值繼承的範圍限制、資源索引鍵查閱，以及 RelativeSource FindAncestor 查閱。</span><span class="sxs-lookup"><span data-stu-id="98f6b-677">Gets or sets the scope limits for property value inheritance, resource key lookup, and RelativeSource FindAncestor lookup.</span></span></summary>
        <value><span data-ttu-id="98f6b-678">列舉值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-678">A value of the enumeration.</span></span> <span data-ttu-id="98f6b-679">預設為 <see cref="F:System.Windows.InheritanceBehavior.Default" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-679">The default is <see cref="F:System.Windows.InheritanceBehavior.Default" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-680">項目中的特定界限樹狀組<xref:System.Windows.FrameworkElement.InheritanceBehavior%2A>刻意限制的繼承行為，來檢查應用程式資源，或防止 RelativeSource FindAncestor 查閱查詢目前的項目強制資源查閱範圍或任何進一步。</span><span class="sxs-lookup"><span data-stu-id="98f6b-680">Certain boundaries in the element tree set <xref:System.Windows.FrameworkElement.InheritanceBehavior%2A> to deliberately limit the scope of inheritance behavior, to a force resource lookup to check the application resources, or to prevent a RelativeSource FindAncestor lookup from querying the current element or any further.</span></span> <span data-ttu-id="98f6b-681">當使用繫結時，就會發生 RelativeSource FindAncestor 查閱<xref:System.Windows.Data.RelativeSource>具有其<xref:System.Windows.Data.RelativeSource.Mode%2A>屬性設定為<xref:System.Windows.Data.RelativeSourceMode.FindAncestor?displayProperty=nameWithType>值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-681">RelativeSource FindAncestor lookup occurs when a binding uses a <xref:System.Windows.Data.RelativeSource> that has its <xref:System.Windows.Data.RelativeSource.Mode%2A> property set to the <xref:System.Windows.Data.RelativeSourceMode.FindAncestor?displayProperty=nameWithType> value.</span></span>  
  
 <span data-ttu-id="98f6b-682">若要讓您設定此屬性的衍生的類別，您應該這麼做在靜態建構函式或其他初始化常式中。</span><span class="sxs-lookup"><span data-stu-id="98f6b-682">If you want your derived class to set this property, you should do so within the static constructor or in other initialization routines.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Frame" />
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Initialized;" />
      <MemberSignature Language="F#" Value="member this.Initialized : EventHandler " Usage="member this.Initialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-683">當這個 <see cref="T:System.Windows.FrameworkElement" /> 初始化時發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-683">Occurs when this <see cref="T:System.Windows.FrameworkElement" /> is initialized.</span></span> <span data-ttu-id="98f6b-684">這個事件符合 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 屬性值從 <see langword="false" /> (或未定義) 變更為 <see langword="true" /> 的案例。</span><span class="sxs-lookup"><span data-stu-id="98f6b-684">This event coincides with cases where the value of the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property changes from <see langword="false" /> (or undefined) to <see langword="true" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-685">此事件時引發<xref:System.Windows.FrameworkElement.EndInit%2A>或<xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A>方法受到呼叫。</span><span class="sxs-lookup"><span data-stu-id="98f6b-685">This event will be raised whenever the <xref:System.Windows.FrameworkElement.EndInit%2A> or <xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A> methods are called.</span></span> <span data-ttu-id="98f6b-686">這兩種方法的呼叫可以有來自應用程式程式碼，或透過[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]處理器的行為時[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]處理頁面。</span><span class="sxs-lookup"><span data-stu-id="98f6b-686">Calls to either method could have come from application code, or through the [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] processor behavior when a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] page is processed.</span></span>  
  
 <span data-ttu-id="98f6b-687">您是否選擇處理<xref:System.Windows.FrameworkElement.Loaded>或<xref:System.Windows.FrameworkElement.Initialized>取決於您的需求。</span><span class="sxs-lookup"><span data-stu-id="98f6b-687">Whether you choose to handle <xref:System.Windows.FrameworkElement.Loaded> or <xref:System.Windows.FrameworkElement.Initialized> depends on your requirements.</span></span> <span data-ttu-id="98f6b-688">如果您不需要讀取項目屬性，想要重設屬性，而且不需要任何版面配置的資訊，<xref:System.Windows.FrameworkElement.Initialized>可能要採取更好的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-688">If you do not need to read element properties, intend to reset properties, and do not need any layout information, <xref:System.Windows.FrameworkElement.Initialized> might be the better event to act upon.</span></span> <span data-ttu-id="98f6b-689">如果您需要的項目，可供使用，所有屬性，而且您會設定屬性，可能會重設配置，<xref:System.Windows.FrameworkElement.Loaded>可能要採取更好的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-689">If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, <xref:System.Windows.FrameworkElement.Loaded> might be the better event to act upon.</span></span> <span data-ttu-id="98f6b-690">如果您的處理常式會由配置系統來表示需要新的版面配置階段解譯的任何屬性重設，則是小心重新進入。</span><span class="sxs-lookup"><span data-stu-id="98f6b-690">Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required.</span></span> <span data-ttu-id="98f6b-691">(您可能需要檢查<xref:System.Windows.FrameworkPropertyMetadata>上如果您不確定哪些屬性可能需要新的版面配置屬性的值傳遞，在變更時。)</span><span class="sxs-lookup"><span data-stu-id="98f6b-691">(You might need to check the <xref:System.Windows.FrameworkPropertyMetadata> values on the property if you are unsure of which properties can require a new layout pass if they are changed.)</span></span>  
  
 <span data-ttu-id="98f6b-692">如需序列的物件事件<xref:System.Windows.FrameworkElement>，也針對幾個相關應用程式和項目類別，會看到[物件存留期事件](~/docs/framework/wpf/advanced/object-lifetime-events.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-692">For more information about the sequence of object events for a <xref:System.Windows.FrameworkElement>, and also for several related application and element classes, see [Object Lifetime Events](~/docs/framework/wpf/advanced/object-lifetime-events.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InputScope">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputScope InputScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputScope InputScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.InputScope" />
      <MemberSignature Language="VB.NET" Value="Public Property InputScope As InputScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputScope ^ InputScope { System::Windows::Input::InputScope ^ get(); void set(System::Windows::Input::InputScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InputScope : System.Windows.Input.InputScope with get, set" Usage="System.Windows.FrameworkElement.InputScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-693">取得或設定此 <see cref="T:System.Windows.FrameworkElement" /> 使用的輸入內容。</span><span class="sxs-lookup"><span data-stu-id="98f6b-693">Gets or sets the context for input used by this <see cref="T:System.Windows.FrameworkElement" />.</span></span></summary>
        <value><span data-ttu-id="98f6b-694">輸入範圍，可修改替代輸入法之輸入的解譯方式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-694">The input scope, which modifies how input from alternative input methods is interpreted.</span></span> <span data-ttu-id="98f6b-695">預設值為 <see langword="null" /> (採用預設的命令處理方式)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-695">The default value is <see langword="null" /> (which results in a default handling of commands).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-696">這個相依性屬性繼承的屬性值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-696">This dependency property inherits property values.</span></span> <span data-ttu-id="98f6b-697">如果有子項目，而不需要的其他值<xref:System.Windows.FrameworkElement.InputScope%2A>透過本機值或樣式，來建立，則屬性系統會設定這個值為<xref:System.Windows.FrameworkElement.InputScope%2A>指派此值最接近的祖系項目的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-697">If there are child elements without other values for <xref:System.Windows.FrameworkElement.InputScope%2A> established through local values or styles, then the property system will set the value to be the <xref:System.Windows.FrameworkElement.InputScope%2A> value of the nearest ancestor element with this value assigned.</span></span>  
  
 <span data-ttu-id="98f6b-698">雖然[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]語法用法列為和語法上允許，設定這個屬性[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]不常見。</span><span class="sxs-lookup"><span data-stu-id="98f6b-698">Although a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax usage is listed and is syntactically allowed, setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is not common.</span></span>  
  
<a name="dependencyPropertyInfo_InputScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-699">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-699">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-700">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-700">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.InputScopeProperty>|  
|<span data-ttu-id="98f6b-701">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-701">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.InputScope" />
        <altmember cref="T:System.Windows.IInputElement" />
      </Docs>
    </Member>
    <Member MemberName="InputScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.InputScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InputScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.InputScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-702">識別 <see cref="P:System.Windows.FrameworkElement.InputScope" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-702">Identifies the <see cref="P:System.Windows.FrameworkElement.InputScope" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="System.Windows.FrameworkElement.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-703">取得值，指出在由 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 處理器處理期間，或是明確地呼叫 <see cref="M:System.Windows.FrameworkElement.EndInit" /> 方法時，是否已初始化這個項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-703">Gets a value that indicates whether this element has been initialized, either during processing by a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor, or by explicitly having its <see cref="M:System.Windows.FrameworkElement.EndInit" /> method called.</span></span></summary>
        <value><span data-ttu-id="98f6b-704">如果對於每個先前提及的 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 處理或方法呼叫將項目初始化，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-704"><see langword="true" /> if the element is initialized per the aforementioned [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processing or method calls; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-705">這個屬性也可能`true`如果此項目具有移動邏輯樹狀結構內，使它有新的父項目，並且因此變成一次重新載入。</span><span class="sxs-lookup"><span data-stu-id="98f6b-705">This property may also be `true` if this element has been moved within the logical tree such that it has a new parent element, and therefore becomes reloaded again.</span></span>  
  
 <span data-ttu-id="98f6b-706">此屬性相當實用，如果您也使用<xref:System.Windows.FrameworkElement.BeginInit%2A>和<xref:System.Windows.FrameworkElement.EndInit%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-706">This property is useful if you also are using <xref:System.Windows.FrameworkElement.BeginInit%2A> and <xref:System.Windows.FrameworkElement.EndInit%2A>.</span></span> <span data-ttu-id="98f6b-707">載入邏輯樹狀結構中的項目[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]處理器可確保系統能夠進行初始化。</span><span class="sxs-lookup"><span data-stu-id="98f6b-707">Elements in the logical tree that is loaded by a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor are assured to be initialized.</span></span> <span data-ttu-id="98f6b-708">不在邏輯樹狀結構中的項目都初始化時<xref:System.Windows.FrameworkElement.EndInit%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="98f6b-708">Elements not in the logical tree are initialized when <xref:System.Windows.FrameworkElement.EndInit%2A> is called.</span></span> <span data-ttu-id="98f6b-709">任何特定處理缺少<xref:System.Windows.FrameworkElement.BeginInit%2A>和<xref:System.Windows.FrameworkElement.EndInit%2A>，會發生這只要建構函式會傳回初始化的結果。</span><span class="sxs-lookup"><span data-stu-id="98f6b-709">In absence of any specific handling of <xref:System.Windows.FrameworkElement.BeginInit%2A> and <xref:System.Windows.FrameworkElement.EndInit%2A>, this will happen as soon as the constructor returns the initialized result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="System.Windows.FrameworkElement.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-710">取得值，這個值表示此項目是否已載入以供展示。</span><span class="sxs-lookup"><span data-stu-id="98f6b-710">Gets a value that indicates whether this element has been loaded for presentation.</span></span></summary>
        <value><span data-ttu-id="98f6b-711">如果目前項目是附加至項目樹狀結構則為 <see langword="true" />，如果項目從未附加至已載入的項目樹狀結構則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-711"><see langword="true" /> if the current element is attached to an element tree; <see langword="false" /> if the element has never been attached to a loaded element tree.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-712">從新的建構<xref:System.Windows.FrameworkElement>，此屬性一開始`false`，且會維持`true`設為之後`true`，即使之後移除元素從已連線的邏輯樹狀結構的程式碼。</span><span class="sxs-lookup"><span data-stu-id="98f6b-712">From a newly constructed <xref:System.Windows.FrameworkElement>, this property starts off `false`, and remains `true` after it is set to `true`, even if the element is subsequently removed from a connected logical tree by code.</span></span> <span data-ttu-id="98f6b-713">`true` 狀態是由一般的展示邏輯時設定項目載入至展示引擎。</span><span class="sxs-lookup"><span data-stu-id="98f6b-713">`true` state is set by the general presentation logic when elements are loaded into the presentation engine.</span></span>  
  
 <span data-ttu-id="98f6b-714">一般而言，載入的項目會轉譯，但並非全部<xref:System.Windows.FrameworkElement>衍生的類別中有一份簡報和其他屬性，例如<xref:System.Windows.UIElement.Visibility%2A>可能會影響呈現。</span><span class="sxs-lookup"><span data-stu-id="98f6b-714">Typically, loaded elements are rendered, but not all <xref:System.Windows.FrameworkElement> derived classes have a presentation, and other properties such as <xref:System.Windows.UIElement.Visibility%2A> can influence presentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-715">下列範例會實作兩個處理常式： 一個處理<xref:System.Windows.FrameworkElement.Loaded>事件的根項目，因此它是特定的頁面根項目，載入，因為這是事件的重要性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-715">The following example implements two handlers: one is handling the <xref:System.Windows.FrameworkElement.Loaded> event of the root element, so it is certain that the page root element is loaded because that is the significance of the event.</span></span> <span data-ttu-id="98f6b-716">其他處理常式會攔截到的使用者控制項，並呼叫<xref:System.Windows.FrameworkElement.IsLoaded%2A>，以確保根項目會載入完整。</span><span class="sxs-lookup"><span data-stu-id="98f6b-716">The other handler is hooked to a user control, and calls <xref:System.Windows.FrameworkElement.IsLoaded%2A> to assure that the root element is loaded completely.</span></span> <span data-ttu-id="98f6b-717">這兩個處理常式呼叫相同的函式 （未顯示），將會填入新資料的子項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-717">Both handlers call the same function (not shown) that will populate child elements with fresh data.</span></span>  
  
 [!code-csharp[GroupBoxExample#FEIsLoaded](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupBoxExample/CSharp/Page1.xaml.cs#feisloaded)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlLanguage Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlLanguage Language" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlLanguage ^ Language { System::Windows::Markup::XmlLanguage ^ get(); void set(System::Windows::Markup::XmlLanguage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : System.Windows.Markup.XmlLanguage with get, set" Usage="System.Windows.FrameworkElement.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-718">取得或設定套用至項目的當地語系化/全球化語言資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-718">Gets or sets localization/globalization language information that applies to an element.</span></span></summary>
        <value><span data-ttu-id="98f6b-719">這個項目的語言資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-719">The language information for this element.</span></span> <span data-ttu-id="98f6b-720">預設值是 <see cref="T:System.Windows.Markup.XmlLanguage" /> 及其設定為字串 "en-US" 的 <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> 值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-720">The default value is an <see cref="T:System.Windows.Markup.XmlLanguage" /> with its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value set to the string "en-US".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-721">字串格式會遵循 RFC 3066 標準。</span><span class="sxs-lookup"><span data-stu-id="98f6b-721">The string formats follow the RFC 3066 standard.</span></span> <span data-ttu-id="98f6b-722">例如，美國英文是"EN-US"。</span><span class="sxs-lookup"><span data-stu-id="98f6b-722">For example, U.S. English is "en-US".</span></span> <span data-ttu-id="98f6b-723">如需有關值和格式的詳細資訊，請參閱<xref:System.Windows.Markup.XmlLanguage>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-723">For more information on the values and format, see <xref:System.Windows.Markup.XmlLanguage>.</span></span>  
  
 <span data-ttu-id="98f6b-724">這個相依性屬性繼承的屬性值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-724">This dependency property inherits property values.</span></span> <span data-ttu-id="98f6b-725">如果有子項目，而不需要的其他值<xref:System.Windows.FrameworkElement.Language%2A>建立透過本機值或樣式，屬性系統會將值設為可<xref:System.Windows.FrameworkElement.Language%2A>指派此值最接近的祖系項目的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-725">If there are child elements without other values for <xref:System.Windows.FrameworkElement.Language%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.Language%2A> value of the nearest ancestor element with this value assigned.</span></span>  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] <span data-ttu-id="98f6b-726">定義的一般意義`xml:lang`屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-726">defines the general meaning of the `xml:lang` attribute.</span></span> <span data-ttu-id="98f6b-727"><xref:System.Windows.FrameworkElement.Language%2A> 基本上會公開這個屬性為相依性屬性的意義。</span><span class="sxs-lookup"><span data-stu-id="98f6b-727"><xref:System.Windows.FrameworkElement.Language%2A> essentially exposes the meaning of this attribute as a dependency property.</span></span> <span data-ttu-id="98f6b-728"><xref:System.Windows.FrameworkElement.Language%2A> 可以以程式設計的方式，調整，而且可以參與平行的方式的屬性系統值繼承如何`xml:lang`屬性可以繼承中的子系項目範圍[!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="98f6b-728"><xref:System.Windows.FrameworkElement.Language%2A> can be adjusted programmatically, and can participate in property system value inheritance in a way that parallels how the `xml:lang` attribute can inherit to child element scope in [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="98f6b-729">如果您設定<xref:System.Windows.FrameworkElement.Language%2A>，此值會變成`xml:lang`並覆寫任何先前的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-729">If you set <xref:System.Windows.FrameworkElement.Language%2A>, that value becomes the `xml:lang` and overwrites any previous value.</span></span> <span data-ttu-id="98f6b-730">如需詳細資訊，請參閱 < [xml: lang 處理中 XAML](~/docs/framework/xaml-services/xml-lang-handling-in-xaml.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-730">For more information, see [xml:lang Handling in XAML](~/docs/framework/xaml-services/xml-lang-handling-in-xaml.md).</span></span>  
  
<a name="dependencyPropertyInfo_CultureInfo"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-731">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-731">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-732">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-732">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.LanguageProperty>|  
|<span data-ttu-id="98f6b-733">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-733">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LanguageProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LanguageProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.LanguageProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LanguageProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LanguageProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LanguageProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.LanguageProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-734">識別 <see cref="P:System.Windows.FrameworkElement.Language" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-734">Identifies the <see cref="P:System.Windows.FrameworkElement.Language" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform LayoutTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform LayoutTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.LayoutTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property LayoutTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ LayoutTransform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.FrameworkElement.LayoutTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-735">取得或設定應在執行配置時，套用在這個項目圖形轉換。</span><span class="sxs-lookup"><span data-stu-id="98f6b-735">Gets or sets a graphics transformation that should apply to this element when  layout is performed.</span></span></summary>
        <value><span data-ttu-id="98f6b-736">這個項目應使用的轉換。</span><span class="sxs-lookup"><span data-stu-id="98f6b-736">The transform this element should use.</span></span> <span data-ttu-id="98f6b-737">預設為 <see cref="P:System.Windows.Media.Transform.Identity" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-737">The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-738">相對於<xref:System.Windows.UIElement.RenderTransform%2A>，<xref:System.Windows.FrameworkElement.LayoutTransform%2A>會影響版面配置的結果。</span><span class="sxs-lookup"><span data-stu-id="98f6b-738">In contrast to <xref:System.Windows.UIElement.RenderTransform%2A>, <xref:System.Windows.FrameworkElement.LayoutTransform%2A> will affect results of layout.</span></span>  
  
 <span data-ttu-id="98f6b-739">設定轉換，可提供縮放和旋轉的強大的功能。</span><span class="sxs-lookup"><span data-stu-id="98f6b-739">Setting a transform provides powerful capabilities of scaling and rotating.</span></span> <span data-ttu-id="98f6b-740">不過，<xref:System.Windows.FrameworkElement.LayoutTransform%2A>會忽略<xref:System.Windows.Media.TranslateTransform>作業。</span><span class="sxs-lookup"><span data-stu-id="98f6b-740">However, <xref:System.Windows.FrameworkElement.LayoutTransform%2A> ignores <xref:System.Windows.Media.TranslateTransform> operations.</span></span> <span data-ttu-id="98f6b-741">這是因為子元素的版面配置系統行為<xref:System.Windows.FrameworkElement>自動更正任何位移的位置插入版面配置的縮放或旋轉項目和父項目的的座標系統。</span><span class="sxs-lookup"><span data-stu-id="98f6b-741">This is because the layout system behavior for child elements of a <xref:System.Windows.FrameworkElement> auto-corrects any offsets to the position of a scaled or rotated element into the layout and coordinate system of the parent element.</span></span>  
  
 <span data-ttu-id="98f6b-742"><xref:System.Windows.FrameworkElement.LayoutTransform%2A> 可能會導致不佳的應用程式效能，如果您不需要完整檢查由配置系統的案例中叫用的。</span><span class="sxs-lookup"><span data-stu-id="98f6b-742"><xref:System.Windows.FrameworkElement.LayoutTransform%2A> can lead to poor application performance if you invoke it in a scenario that does not require a full pass by the layout system.</span></span> <span data-ttu-id="98f6b-743">當您套用<xref:System.Windows.FrameworkElement.LayoutTransform%2A>要<xref:System.Windows.Controls.Panel.Children%2A>的集合<xref:System.Windows.Controls.Panel>觸發配置系統的新階段，強制所有螢幕上要能重新測量和重新排列物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-743">When you apply a <xref:System.Windows.FrameworkElement.LayoutTransform%2A> to the <xref:System.Windows.Controls.Panel.Children%2A> collection of the <xref:System.Windows.Controls.Panel>, it triggers a new pass by the layout system and forces all on-screen objects to be remeasured and rearranged.</span></span> <span data-ttu-id="98f6b-744">如果您要更新的完整應用程式[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]，這項功能可能會完全您的需要。</span><span class="sxs-lookup"><span data-stu-id="98f6b-744">If you are updating the complete application [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], this functionality might be exactly what you need.</span></span> <span data-ttu-id="98f6b-745">不過，如果您不需要完整的版面配置階段，使用<xref:System.Windows.UIElement.RenderTransform%2A>屬性，它不會叫用配置系統，並因此，通常是較好的選擇，在此案例。</span><span class="sxs-lookup"><span data-stu-id="98f6b-745">However, if you do not need a full layout pass, use the <xref:System.Windows.UIElement.RenderTransform%2A> property, which does not invoke the layout system, and therefore, is typically a better choice for this scenario.</span></span>  
  
 <span data-ttu-id="98f6b-746">範例案例，<xref:System.Windows.FrameworkElement.LayoutTransform%2A>很有用的包括： 旋轉項目，例如功能表元件從水平改成垂直，反之亦然，調整元素 （拉近） 焦點，提供編輯行為，依此類推。</span><span class="sxs-lookup"><span data-stu-id="98f6b-746">Example scenarios where <xref:System.Windows.FrameworkElement.LayoutTransform%2A> would be useful include: rotating elements such as menu components from horizontal to vertical or vice versa, scaling elements (zooming in) on focus, providing editing behavior, etc.</span></span>  
  
<a name="dependencyPropertyInfo_LayoutTransform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-747">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-747">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-748">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-748">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.LayoutTransformProperty>|  
|<span data-ttu-id="98f6b-749">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-749">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-750">下列範例示範如何套用<xref:System.Windows.FrameworkElement.LayoutTransform%2A>的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-750">The following example shows how to apply a <xref:System.Windows.FrameworkElement.LayoutTransform%2A> to an element.</span></span> <span data-ttu-id="98f6b-751">此範例會建立的執行個體<xref:System.Windows.Controls.Button>並將它裝載在父<xref:System.Windows.Controls.Grid>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-751">The example creates an instance of <xref:System.Windows.Controls.Button> and hosts it within a parent <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="98f6b-752">它也會使用<xref:System.Windows.FrameworkElement.LayoutTransform%2A>屬性，將套用<xref:System.Windows.Media.RotateTransform>至<xref:System.Windows.Controls.Button>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-752">It also uses the <xref:System.Windows.FrameworkElement.LayoutTransform%2A> property to apply a <xref:System.Windows.Media.RotateTransform> to the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-cpp[LayoutTransform#1](~/samples/snippets/cpp/VS_Snippets_Wpf/LayoutTransform/CPP/LayoutTransform.cpp#1)]
 [!code-csharp[LayoutTransform#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LayoutTransform/CSharp/LayoutTransform.cs#1)]
 [!code-vb[LayoutTransform#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/LayoutTransform/VisualBasic/LayoutTransform.vb#1)]
 [!code-xaml[LayoutTransform#1](~/samples/snippets/xaml/VS_Snippets_Wpf/LayoutTransform/XAML/default.xaml#1)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=158252"><span data-ttu-id="98f6b-753">2d 轉換範例</span><span class="sxs-lookup"><span data-stu-id="98f6b-753">2-D Transforms Sample</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="LayoutTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LayoutTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LayoutTransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.LayoutTransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayoutTransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LayoutTransformProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayoutTransformProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.LayoutTransformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-754">識別 <see cref="P:System.Windows.FrameworkElement.LayoutTransform" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-754">Identifies the <see cref="P:System.Windows.FrameworkElement.LayoutTransform" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Loaded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Loaded;" />
      <MemberSignature Language="F#" Value="member this.Loaded : System.Windows.RoutedEventHandler " Usage="member this.Loaded : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-755">當項目已配置版面、呈現以及可以互動時發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-755">Occurs when the element is laid out, rendered, and ready for interaction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-756"><xref:System.Windows.FrameworkElement.Loaded> 通常的最後一個事件中引發的項目初始化順序。</span><span class="sxs-lookup"><span data-stu-id="98f6b-756"><xref:System.Windows.FrameworkElement.Loaded> is usually the last event raised in an element initialization sequence.</span></span> <span data-ttu-id="98f6b-757">它將會引發這個事件之後<xref:System.Windows.FrameworkElement.Initialized>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-757">It will always be raised after <xref:System.Windows.FrameworkElement.Initialized>.</span></span> <span data-ttu-id="98f6b-758">您是否選擇處理<xref:System.Windows.FrameworkElement.Loaded>或<xref:System.Windows.FrameworkElement.Initialized>取決於您的需求。</span><span class="sxs-lookup"><span data-stu-id="98f6b-758">Whether you choose to handle <xref:System.Windows.FrameworkElement.Loaded> or <xref:System.Windows.FrameworkElement.Initialized> depends on your requirements.</span></span> <span data-ttu-id="98f6b-759">如果您不需要讀取項目屬性，想要重設屬性，而且不需要任何版面配置的資訊，<xref:System.Windows.FrameworkElement.Initialized>可能要採取更好的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-759">If you do not need to read element properties, intend to reset properties, and do not need any layout information, <xref:System.Windows.FrameworkElement.Initialized> might be the better event to act upon.</span></span> <span data-ttu-id="98f6b-760">如果您需要的項目，可供使用，所有屬性，而且您會設定屬性，可能會重設配置，<xref:System.Windows.FrameworkElement.Loaded>可能要採取更好的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-760">If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, <xref:System.Windows.FrameworkElement.Loaded> might be the better event to act upon.</span></span> <span data-ttu-id="98f6b-761">如果您的處理常式會由配置系統來表示需要新的版面配置階段解譯的任何屬性重設，則是小心重新進入。</span><span class="sxs-lookup"><span data-stu-id="98f6b-761">Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required.</span></span> <span data-ttu-id="98f6b-762">(您可能需要檢查<xref:System.Windows.FrameworkPropertyMetadata>上如果您不確定哪些屬性可能需要新的版面配置屬性的值傳遞，在變更時。)</span><span class="sxs-lookup"><span data-stu-id="98f6b-762">(You might need to check the <xref:System.Windows.FrameworkPropertyMetadata> values on the property if you are unsure of which properties can require a new layout pass if they are changed.)</span></span>  
  
 <span data-ttu-id="98f6b-763">如需序列的物件事件<xref:System.Windows.FrameworkElement>，也針對幾個相關應用程式和項目類別，會看到[物件存留期事件](~/docs/framework/wpf/advanced/object-lifetime-events.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-763">For more information about the sequence of object events for a <xref:System.Windows.FrameworkElement>, and also for several related application and element classes, see [Object Lifetime Events](~/docs/framework/wpf/advanced/object-lifetime-events.md).</span></span>  
  
 <span data-ttu-id="98f6b-764">直接路由的事件不會遵循路由，它們才會處理在相同的項目，其引發。</span><span class="sxs-lookup"><span data-stu-id="98f6b-764">Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</span></span> <span data-ttu-id="98f6b-765">直接路由的事件支援其他路由的事件的行為： 它們支援的可存取的處理常式集合，且可用來當做<xref:System.Windows.EventTrigger>樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-765">Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.</span></span>  
  
 <span data-ttu-id="98f6b-766"><xref:System.Windows.FrameworkElement.Loaded> 和<xref:System.Windows.FrameworkElement.Unloaded>可能同時會引發因為使用者起始系統佈景主題變更控制項上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-766"><xref:System.Windows.FrameworkElement.Loaded> and <xref:System.Windows.FrameworkElement.Unloaded> might both be raised on controls as a result of user-initiated system theme changes.</span></span> <span data-ttu-id="98f6b-767">佈景主題變更會導致控制項範本以及包含視覺化樹狀結構，這樣又會卸載並重新載入整個控制項失效。</span><span class="sxs-lookup"><span data-stu-id="98f6b-767">A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload.</span></span> <span data-ttu-id="98f6b-768">因此<xref:System.Windows.FrameworkElement.Loaded>無法假設發生只有當頁面是第一次載入透過 巡覽至頁面。</span><span class="sxs-lookup"><span data-stu-id="98f6b-768">Therefore <xref:System.Windows.FrameworkElement.Loaded> cannot be assumed to occur only when a page is first loaded through navigation to the page.</span></span>  
  
<a name="routedEventInfo_Loaded"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="98f6b-769">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-769">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-770">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-770">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.LoadedEvent>|  
|<span data-ttu-id="98f6b-771">路由策略</span><span class="sxs-lookup"><span data-stu-id="98f6b-771">Routing strategy</span></span>|<span data-ttu-id="98f6b-772">直接</span><span class="sxs-lookup"><span data-stu-id="98f6b-772">Direct</span></span>|  
|<span data-ttu-id="98f6b-773">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="98f6b-773">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      </Docs>
    </Member>
    <Member MemberName="LoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.LoadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LoadedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LoadedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LoadedEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.LoadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-774">識別 <see cref="E:System.Windows.FrameworkElement.Loaded" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-774">Identifies the <see cref="E:System.Windows.FrameworkElement.Loaded" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-775">註冊路由事件時，會建立路由事件識別項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-775">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="98f6b-776">這些識別項包含用於加入事件擁有者的識別名稱、擁有者類型、處理常式類型、路由策略和公用程式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-776">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="98f6b-777">您可以使用這些識別項來加入類別處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-777">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="98f6b-778">如需註冊路由事件的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-778">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="98f6b-779">如需使用路由事件識別項來加入類別處理常式的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-779">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.FrameworkElement.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-780">為此項目的邏輯子項目取得列舉值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-780">Gets an enumerator for logical child elements of this element.</span></span></summary>
        <value><span data-ttu-id="98f6b-781">此項目之邏輯子項目的列舉值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-781">An enumerator for logical child elements of this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-782"><xref:System.Windows.FrameworkElement.LogicalChildren%2A> 可讓您逐一查看子項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-782"><xref:System.Windows.FrameworkElement.LogicalChildren%2A> allows you to iterate over child elements.</span></span> <span data-ttu-id="98f6b-783">這是適用於項目可能沒有定義、 專用的集合，但仍會包含一個以上的子項目，特別是<xref:System.Windows.FrameworkContentElement>子項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-783">This is useful for elements that may not have a defined, dedicated collection but still contain more than one child element, particularly <xref:System.Windows.FrameworkContentElement> child elements.</span></span>  
  
 <span data-ttu-id="98f6b-784">如需有關如何使用<xref:System.Windows.FrameworkElement.LogicalChildren%2A>並<xref:System.Windows.FrameworkElement.AddLogicalChild%2A>，請參閱[WPF 中的樹狀結構](~/docs/framework/wpf/advanced/trees-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-784">For more information on how to use <xref:System.Windows.FrameworkElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c5358e14-d24c-44c7-b5eb-6062a4fd981c"><span data-ttu-id="98f6b-785">x:Array 標記延伸</span><span class="sxs-lookup"><span data-stu-id="98f6b-785">x:Array Markup Extension</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Thickness with get, set" Usage="System.Windows.FrameworkElement.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-786">取得或設定項目的外邊界。</span><span class="sxs-lookup"><span data-stu-id="98f6b-786">Gets or sets the outer margin of an element.</span></span></summary>
        <value><span data-ttu-id="98f6b-787">提供項目的邊界值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-787">Provides margin values for the element.</span></span> <span data-ttu-id="98f6b-788">預設值為其所有屬性皆等於 0 (零) 的 <see cref="T:System.Windows.Thickness" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-788">The default value is a <see cref="T:System.Windows.Thickness" /> with all properties equal to 0 (zero).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-789">邊界是這個項目和其他版面配置建立時將會是相鄰的項目之間的間距[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="98f6b-789">The margin is the space between this element and other elements that will be adjacent when layout creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span> <span data-ttu-id="98f6b-790">共用項目可能會對等項目 （例如其他項目通用的父控制項的集合中），或也可能是這個項目的父代。</span><span class="sxs-lookup"><span data-stu-id="98f6b-790">Shared elements might be peer elements (such as other elements in the collection of a common parent control), or might also be this element's parent.</span></span>  
  
 <span data-ttu-id="98f6b-791"><xref:System.Windows.FrameworkElement.Margin%2A> 已設定為<xref:System.Windows.Thickness>結構，而不是數字邊界可設定對稱性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-791"><xref:System.Windows.FrameworkElement.Margin%2A> is set as a <xref:System.Windows.Thickness> structure rather than as a number so that the margin can be set asymmetrically.</span></span> <span data-ttu-id="98f6b-792"><xref:System.Windows.Thickness>結構本身支援字串類型轉換，好讓您可以指定非對稱<xref:System.Windows.FrameworkElement.Margin%2A>在[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]也屬性語法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-792">The <xref:System.Windows.Thickness> structure itself supports string type conversion so that you can specify an asymmetric <xref:System.Windows.FrameworkElement.Margin%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute syntax also.</span></span>  
  
 <span data-ttu-id="98f6b-793">非零的邊界適用於外部項目配置的空間<xref:System.Windows.FrameworkElement.ActualWidth%2A>和<xref:System.Windows.FrameworkElement.ActualHeight%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-793">A non-zero margin applies space outside the element layout's <xref:System.Windows.FrameworkElement.ActualWidth%2A> and <xref:System.Windows.FrameworkElement.ActualHeight%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-794">邊界的加總的同層級項目中的版面配置。比方說，兩者皆擁有 30 的邊界設定相鄰型 edge 的兩個相鄰項目會有 60 個兩者之間的空間。</span><span class="sxs-lookup"><span data-stu-id="98f6b-794">Margins are additive for sibling elements in a layout; for example, two adjacent elements both with a margin of 30 set on the adjoining edge would have 60 units of space between them.</span></span>  
  
 <span data-ttu-id="98f6b-795">具有邊界設定的項目將不會通常限制的指定大小<xref:System.Windows.FrameworkElement.Margin%2A>配置的矩形空間不是已夠大，邊界，再加上項目的內容區域。</span><span class="sxs-lookup"><span data-stu-id="98f6b-795">Elements that have margins set will not typically constrain the size of the specified <xref:System.Windows.FrameworkElement.Margin%2A> if the allotted rectangle space is not large enough for the margin plus the element content area.</span></span> <span data-ttu-id="98f6b-796">計算配置時，將會改為限制的項目內容的區域。</span><span class="sxs-lookup"><span data-stu-id="98f6b-796">The element content area will be constrained instead when layout is calculated.</span></span> <span data-ttu-id="98f6b-797">邊界會受限於的唯一情況也是內容已被限制，一直到零。</span><span class="sxs-lookup"><span data-stu-id="98f6b-797">The only case where margins would be constrained also is if the content is already constrained all the way to zero.</span></span>  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-798">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-798">XAML Attribute Usage</span></span>  
  
```  
<object Margin="left,top,right,bottom"/>  
- or -  
<object Margin="left,top"/>  
- or -  
<object Margin="thicknessReference"/>  
```  
  
<a name="xamlPropertyElementUsage_Margin"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="98f6b-799">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="98f6b-799">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Margin>  
    <Thickness Left="left" Top="top" Right="right" Bottom="bottom"/>  
  </object.Margin>  
</object>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-800">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-800">XAML Values</span></span>  
 <span data-ttu-id="98f6b-801">*left、 頂端、 右下*</span><span class="sxs-lookup"><span data-stu-id="98f6b-801">*left, top, right, bottom*</span></span>  
 <span data-ttu-id="98f6b-802">數字值介於 0 和<xref:System.Double.PositiveInfinity>會指定四個可能的維度屬性的<xref:System.Windows.Thickness>結構。</span><span class="sxs-lookup"><span data-stu-id="98f6b-802">Number values between 0 and <xref:System.Double.PositiveInfinity> that specify the four possible dimension properties of a <xref:System.Windows.Thickness> structure.</span></span>  
  
 <span data-ttu-id="98f6b-803">屬性使用方式也會接受縮寫對稱和邏輯的方式提供的順序套用的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-803">The attribute usage will also accept abbreviated values that apply in the order provided, symmetrically and logically.</span></span> <span data-ttu-id="98f6b-804">比方說，`Margin="20"`會解譯成表示<xref:System.Windows.Thickness>具有設定為 20 的所有屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-804">For instance, `Margin="20"` will be interpreted to mean a <xref:System.Windows.Thickness> with all properties set to 20.</span></span> <span data-ttu-id="98f6b-805">`Margin="20,50"` 將被解譯成表示<xref:System.Windows.Thickness>與<xref:System.Windows.Thickness.Left%2A>並<xref:System.Windows.Thickness.Right%2A>設定為 20，和<xref:System.Windows.Thickness.Top%2A>和<xref:System.Windows.Thickness.Bottom%2A>設為 50。</span><span class="sxs-lookup"><span data-stu-id="98f6b-805">`Margin="20,50"` will be interpreted to mean a <xref:System.Windows.Thickness> with <xref:System.Windows.Thickness.Left%2A> and <xref:System.Windows.Thickness.Right%2A> set to 20, and <xref:System.Windows.Thickness.Top%2A> and <xref:System.Windows.Thickness.Bottom%2A> set to 50.</span></span>  
  
 <span data-ttu-id="98f6b-806">預設單位<xref:System.Windows.Thickness>量值是[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="98f6b-806">The default unit for a <xref:System.Windows.Thickness> measure is [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)].</span></span> <span data-ttu-id="98f6b-807">您也可以藉由附加單位類型字串來指定其他單位`cm`， `in`，或`pt`任何量值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-807">You can also specify other units by appending the unit type strings `cm`, `in`, or `pt` to any measure.</span></span>  
  
 <span data-ttu-id="98f6b-808">數字值依現狀[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]屬性不需要指定小數位數 （0 是可以接受的不需要提供為 0.0)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-808">Number values provided as [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attributes need not specify decimal points (0 is acceptable, does not have to be provided as 0.0).</span></span> <span data-ttu-id="98f6b-809">如需詳細資訊[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]使用量，請參閱<xref:System.Windows.Thickness>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-809">For more information on [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] usage, see <xref:System.Windows.Thickness>.</span></span>  
  
 <span data-ttu-id="98f6b-810">*thicknessReference*</span><span class="sxs-lookup"><span data-stu-id="98f6b-810">*thicknessReference*</span></span>  
 <span data-ttu-id="98f6b-811">將現有的物件參考<xref:System.Windows.Thickness>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-811">An object reference to an existing <xref:System.Windows.Thickness>.</span></span> <span data-ttu-id="98f6b-812">這可能是`}`、 a 或`}`參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-812">This might be a `}`, a , or `}` reference.</span></span> <span data-ttu-id="98f6b-813">如需詳細資訊[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]使用量，請參閱<xref:System.Windows.Thickness>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-813">For more information on [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] usage, see <xref:System.Windows.Thickness>.</span></span>  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-814">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-814">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-815">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-815">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.MarginProperty>|  
|<span data-ttu-id="98f6b-816">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-816">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Thickness" />
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.MarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-817">識別 <see cref="P:System.Windows.FrameworkElement.Margin" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-817">Identifies the <see cref="P:System.Windows.FrameworkElement.Margin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxHeight">
      <MemberSignature Language="C#" Value="public double MaxHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.MaxHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxHeight : double with get, set" Usage="System.Windows.FrameworkElement.MaxHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-818">取得或設定元素的最大高度限制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-818">Gets or sets the maximum height constraint of the element.</span></span></summary>
        <value><span data-ttu-id="98f6b-819">項目的最大高度 (以 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 為單位)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-819">The maximum height of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span> <span data-ttu-id="98f6b-820">預設值為 <see cref="F:System.Double.PositiveInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-820">The default value is <see cref="F:System.Double.PositiveInfinity" />.</span></span> <span data-ttu-id="98f6b-821">這個值可以是等於或大於 0.0 的任何值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-821">This value can be any value equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-822"><see cref="F:System.Double.PositiveInfinity" /> 也有效。</span><span class="sxs-lookup"><span data-stu-id="98f6b-822"><see cref="F:System.Double.PositiveInfinity" /> is also valid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-823">這是三個屬性上<xref:System.Windows.FrameworkElement>指定高度資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-823">This is one of three properties on <xref:System.Windows.FrameworkElement> that specify height information.</span></span> <span data-ttu-id="98f6b-824">其他兩種方式<xref:System.Windows.FrameworkElement.MinHeight%2A>和<xref:System.Windows.FrameworkElement.Height%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-824">The other two are <xref:System.Windows.FrameworkElement.MinHeight%2A> and <xref:System.Windows.FrameworkElement.Height%2A>.</span></span>  <span data-ttu-id="98f6b-825">如果這些值之間沒有衝突，這是第一次應用程式的實際高度判斷順序<xref:System.Windows.FrameworkElement.MinHeight%2A>必須能被接受，然後<xref:System.Windows.FrameworkElement.MaxHeight%2A>，最後每一個位於範圍中，如果<xref:System.Windows.FrameworkElement.Height%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-825">If there is a conflict between these values, the order of application for actual height determination is first <xref:System.Windows.FrameworkElement.MinHeight%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxHeight%2A>, and finally if each of these are within bounds, <xref:System.Windows.FrameworkElement.Height%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-826">值的限制<xref:System.Double>值會強制執行<xref:System.Windows.ValidateValueCallback>機制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-826">The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism.</span></span> <span data-ttu-id="98f6b-827">如果您嘗試設定無效的值會擲回執行階段例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-827">If you attempt to set an invalid value a run-time exception is thrown.</span></span>  
  
<a name="xamlAttributeUsage_MaxHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-828">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-828">XAML Attribute Usage</span></span>  
  
```  
<object MaxHeight="double"/>  
- or -  
<object MaxHeight ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MaxHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-829">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-829">XAML Values</span></span>  
 <span data-ttu-id="98f6b-830">*double*</span><span class="sxs-lookup"><span data-stu-id="98f6b-830">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="98f6b-831">字串表示法<xref:System.Double>等於或大於 0.0 的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-831">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-832">這會解譯為[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="98f6b-832">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="98f6b-833">字串不需要明確包含小數位數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-833">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="98f6b-834">執行個體的值`1`是可以接受的。</span><span class="sxs-lookup"><span data-stu-id="98f6b-834">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="98f6b-835">相同<xref:System.Double>套用範圍限制的屬性值一節中所述，不同之處在於您必須使用[X:static 標記延伸](~/docs/framework/xaml-services/x-static-markup-extension.md)如果您需要明確地設定這個值為<xref:System.Double.PositiveInfinity>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-835">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply, except that you must use [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md) if you need to explicitly set the value to be <xref:System.Double.PositiveInfinity>.</span></span>  
  
 <span data-ttu-id="98f6b-836">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="98f6b-836">*qualifiedDouble*</span></span>  
 <span data-ttu-id="98f6b-837">A*雙*值，如上所述，後面接著一個的下列單位宣告字串： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-837">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="98f6b-838">`px` （預設值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="98f6b-838">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="98f6b-839">`in` 是英吋為單位;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="98f6b-839">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="98f6b-840">`cm` 是公釐。1cm==(96/2.54) 像素</span><span class="sxs-lookup"><span data-stu-id="98f6b-840">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="98f6b-841">`pt` is points; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="98f6b-841">`pt` is points; 1pt==(96/72) px</span></span>  
  
<a name="dependencyPropertyInfo_MaxHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-842">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-842">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-843">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-843">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.MaxHeightProperty>|  
|<span data-ttu-id="98f6b-844">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-844">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.MaxHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.MaxHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-845">識別 <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-845">Identifies the <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="C#" Value="public double MaxWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.MaxWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWidth : double with get, set" Usage="System.Windows.FrameworkElement.MaxWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-846">取得或設定元素的最大寬度限制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-846">Gets or sets the maximum width constraint of the element.</span></span></summary>
        <value><span data-ttu-id="98f6b-847">項目的最大寬度 (以 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 為單位)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-847">The maximum width of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span> <span data-ttu-id="98f6b-848">預設值為 <see cref="F:System.Double.PositiveInfinity" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-848">The default value is <see cref="F:System.Double.PositiveInfinity" />.</span></span> <span data-ttu-id="98f6b-849">這個值可以是等於或大於 0.0 的任何值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-849">This value can be any value equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-850"><see cref="F:System.Double.PositiveInfinity" /> 也有效。</span><span class="sxs-lookup"><span data-stu-id="98f6b-850"><see cref="F:System.Double.PositiveInfinity" /> is also valid.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-851">這是三個屬性上<xref:System.Windows.FrameworkElement>指定寬度的資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-851">This is one of three properties on <xref:System.Windows.FrameworkElement> that specify width information.</span></span> <span data-ttu-id="98f6b-852">其他兩種方式<xref:System.Windows.FrameworkElement.MinWidth%2A>和<xref:System.Windows.FrameworkElement.Width%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-852">The other two are <xref:System.Windows.FrameworkElement.MinWidth%2A> and <xref:System.Windows.FrameworkElement.Width%2A>.</span></span> <span data-ttu-id="98f6b-853">如果這些值之間沒有衝突，實際寬度判斷的應用程式的順序是第一個<xref:System.Windows.FrameworkElement.MinWidth%2A>必須能被接受，然後<xref:System.Windows.FrameworkElement.MaxWidth%2A>，最後每一個位於範圍中，如果<xref:System.Windows.FrameworkElement.Width%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-853">If there is a conflict between these values, the order of application for actual width determination is first <xref:System.Windows.FrameworkElement.MinWidth%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxWidth%2A>, and finally if each of these are within bounds, <xref:System.Windows.FrameworkElement.Width%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-854">值的限制<xref:System.Double>值會強制執行<xref:System.Windows.ValidateValueCallback>機制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-854">The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism.</span></span> <span data-ttu-id="98f6b-855">如果您嘗試設定無效的值，則會擲回執行階段例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-855">If you attempt to set an invalid value, a run-time exception is thrown.</span></span>  
  
<a name="xamlAttributeUsage_MaxWidth"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-856">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-856">XAML Attribute Usage</span></span>  
  
```  
<object MaxWidth="double"/>  
- or -  
<object MaxWidth="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MaxWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-857">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-857">XAML Values</span></span>  
 <span data-ttu-id="98f6b-858">*double*</span><span class="sxs-lookup"><span data-stu-id="98f6b-858">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="98f6b-859">字串表示法<xref:System.Double>等於或大於 0.0 的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-859">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-860">這會解譯為[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="98f6b-860">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="98f6b-861">字串不需要明確包含小數位數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-861">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="98f6b-862">執行個體的值`1`是可以接受的。</span><span class="sxs-lookup"><span data-stu-id="98f6b-862">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="98f6b-863">相同<xref:System.Double>套用範圍限制的屬性值一節中所述，不同之處在於您必須使用[X:static 標記延伸](~/docs/framework/xaml-services/x-static-markup-extension.md)來設定這個值為<xref:System.Double.PositiveInfinity>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-863">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply, except that you must use [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md) to set the value to be <xref:System.Double.PositiveInfinity>.</span></span>  
  
 <span data-ttu-id="98f6b-864">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="98f6b-864">*qualifiedDouble*</span></span>  
 <span data-ttu-id="98f6b-865">A*雙*值，如上所述，後面接著一個的下列單位宣告字串： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-865">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="98f6b-866">`px` （預設值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="98f6b-866">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="98f6b-867">`in` 是英吋為單位;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="98f6b-867">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="98f6b-868">`cm` 是公釐。1cm==(96/2.54) 像素</span><span class="sxs-lookup"><span data-stu-id="98f6b-868">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="98f6b-869">`pt` is points; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="98f6b-869">`pt` is points; 1pt==(96/72) px</span></span>  
  
<a name="dependencyPropertyInfo_MaxWidth"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-870">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-870">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-871">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-871">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.MaxWidthProperty>|  
|<span data-ttu-id="98f6b-872">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-872">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.MaxWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.MaxWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-873">識別 <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-873">Identifies the <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCore">
      <MemberSignature Language="C#" Value="protected override sealed System.Windows.Size MeasureCore (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureCore(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function MeasureCore (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureCore(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureCore : System.Windows.Size -&gt; System.Windows.Size" Usage="frameworkElement.MeasureCore availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="98f6b-874">父項目可以提供給子項目使用的大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-874">The available size that the parent element can give to the child elements.</span></span></param>
        <summary><span data-ttu-id="98f6b-875">為 <see cref="T:System.Windows.FrameworkElement" /> 實作基本的測量傳遞配置系統行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-875">Implements basic measure-pass layout system behavior for <see cref="T:System.Windows.FrameworkElement" />.</span></span></summary>
        <returns><span data-ttu-id="98f6b-876">這個項目在配置中需要的大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-876">The desired size of this element in layout.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-877">這個方法會覆寫<xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType>連接 WPF 核心層級和 WPF 架構層級配置量值實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-877">This method overrides <xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType> to connect the  WPF core-level and WPF framework-level layout measure implementations.</span></span> <span data-ttu-id="98f6b-878"><xref:System.Windows.FrameworkElement>實作密封方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-878">The <xref:System.Windows.FrameworkElement> implementation seals the method.</span></span> <span data-ttu-id="98f6b-879">若要調整的任何項目，WPF 架構層級為基礎的量值傳遞版面配置行為，請覆寫<xref:System.Windows.FrameworkElement.MeasureOverride%2A>改。</span><span class="sxs-lookup"><span data-stu-id="98f6b-879">To adjust the measure pass layout behavior of any element that builds on the WPF framework-level, override <xref:System.Windows.FrameworkElement.MeasureOverride%2A> instead.</span></span> <span data-ttu-id="98f6b-880">若要調整的測量行程，刻意不會在 WPF 架構層級上建置或使用項目的版面配置行為<xref:System.Windows.FrameworkElement>，覆寫<xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-880">To adjust the measure pass layout behavior of an element that deliberately does not build on the WPF framework-level or use <xref:System.Windows.FrameworkElement>, override <xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="abstract member MeasureOverride : System.Windows.Size -&gt; System.Windows.Size&#xA;override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="frameworkElement.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="98f6b-881">此項目可提供給子項目使用的大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-881">The available size that this element can give to child elements.</span></span> <span data-ttu-id="98f6b-882">此值可以指定為無限大，表示項目會隨著可用的內容而改變大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-882">Infinity can be specified as a value to indicate that the element will size to whatever content is available.</span></span></param>
        <summary><span data-ttu-id="98f6b-883">當在衍生類別中覆寫時，測量子項目所需配置的大小，並決定 <see cref="T:System.Windows.FrameworkElement" /> 衍生類別的大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-883">When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement" />-derived class.</span></span></summary>
        <returns><span data-ttu-id="98f6b-884">大小，此項目會依據其計算子項目的大小結果，決定配置時所需的大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-884">The size that this element determines it needs during layout, based on its calculations of child element sizes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-885">覆寫<xref:System.Windows.FrameworkElement.MeasureOverride%2A>若要實作自訂的版面配置調整大小行為，您的項目，因為它所參與[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]版面配置系統。</span><span class="sxs-lookup"><span data-stu-id="98f6b-885">Override <xref:System.Windows.FrameworkElement.MeasureOverride%2A> to implement custom layout sizing behavior for your element as it participates in the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] layout system.</span></span> <span data-ttu-id="98f6b-886">您的實作應該執行下列作業：</span><span class="sxs-lookup"><span data-stu-id="98f6b-886">Your implementation should do the following:</span></span>  
  
1.  <span data-ttu-id="98f6b-887">逐一查看您的項目特定版面配置，呼叫的一部分的子系集合<xref:System.Windows.UIElement.Measure%2A>每個子項目上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-887">Iterate your element's particular collection of children that are part of layout, call <xref:System.Windows.UIElement.Measure%2A> on each child element.</span></span>  
  
2.  <span data-ttu-id="98f6b-888">立即取得<xref:System.Windows.UIElement.DesiredSize%2A>子系上 (這設定為屬性之後<xref:System.Windows.UIElement.Measure%2A>稱為)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-888">Immediately get <xref:System.Windows.UIElement.DesiredSize%2A> on the child (this is set as a property after <xref:System.Windows.UIElement.Measure%2A> is called).</span></span>  
  
3.  <span data-ttu-id="98f6b-889">計算根據測量子項目的父代的網路所需的大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-889">Compute the net desired size of the parent based upon the measurement of the child elements.</span></span>  
  
 <span data-ttu-id="98f6b-890">傳回值<xref:System.Windows.FrameworkElement.MeasureOverride%2A>應的項目本身所需大小，就會變成目前的項目之父元素的輸入量值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-890">The return value of <xref:System.Windows.FrameworkElement.MeasureOverride%2A> should be the element's own desired size, which then becomes the measure input for the parent element of the current element.</span></span> <span data-ttu-id="98f6b-891">頁面的根項目為止，這個相同的程序會持續進行版面配置系統。</span><span class="sxs-lookup"><span data-stu-id="98f6b-891">This same process continues through the layout system until the root element of the page is reached.</span></span>  
  
 <span data-ttu-id="98f6b-892">在此過程中，子元素可能會傳回較大<xref:System.Windows.UIElement.DesiredSize%2A>大小比初始`availableSize`來表示子項目想更多空間。</span><span class="sxs-lookup"><span data-stu-id="98f6b-892">During this process, child elements might return a larger <xref:System.Windows.UIElement.DesiredSize%2A> size than the initial `availableSize` to indicate that the child element wants more space.</span></span> <span data-ttu-id="98f6b-893">這可能會處理您自己的實作中藉由引進可捲動區域，由父代調整控制項大小，藉由建立某種方式的堆疊順序或任何數目的測量或排列內容的解決方案。</span><span class="sxs-lookup"><span data-stu-id="98f6b-893">This might be handled in your own implementation by introducing a scrollable region, by resizing the parent control, by establishing some manner of stacked order, or any number of solutions for measuring or arranging content.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="98f6b-894">項目應該呼叫<xref:System.Windows.UIElement.Measure%2A>在此過程中每個子系，否則子項目將不會正確大小或排列。</span><span class="sxs-lookup"><span data-stu-id="98f6b-894">Elements should call <xref:System.Windows.UIElement.Measure%2A> on each child during this process, otherwise the child elements will not be correctly sized or arranged.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-895">下列非編譯程式碼會示範這項實作模式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-895">The following non-compiling code shows this implementation pattern.</span></span>  <span data-ttu-id="98f6b-896"><c>VisualChildren</c>代表您自己的項目應該定義的子系的可列舉集合屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-896"><c>VisualChildren</c> represents an enumerable collection property of children that your own element should define.</span></span> <span data-ttu-id="98f6b-897">屬性可以命名任何項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-897">The property can be named anything.</span></span> <span data-ttu-id="98f6b-898"><c>VisualChildren</c>是預留位置名稱，此範例中，以利<c>VisualChildren</c>不是[!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)]所提供[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]或部分的命名模式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-898"><c>VisualChildren</c> is a placeholder name for purposes of this example, <c>VisualChildren</c> is not an [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] as provided by [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] or a part of a naming pattern.</span></span> 
  
<span data-ttu-id="98f6b-899">[!code-csharp[CorePseudocode#FEMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#femeasureoverride)] [!code-vb[CorePseudocode#FEMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#femeasureoverride)]</span><span class="sxs-lookup"><span data-stu-id="98f6b-899">[!code-csharp[CorePseudocode#FEMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#femeasureoverride)] [!code-vb[CorePseudocode#FEMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#femeasureoverride)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="MinHeight">
      <MemberSignature Language="C#" Value="public double MinHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.MinHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MinHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MinHeight : double with get, set" Usage="System.Windows.FrameworkElement.MinHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-900">取得或設定元素的最小高度限制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-900">Gets or sets the minimum height constraint of the element.</span></span></summary>
        <value><span data-ttu-id="98f6b-901">項目的最小高度 (以 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 為單位)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-901">The minimum height of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span> <span data-ttu-id="98f6b-902">預設值為 0.0。</span><span class="sxs-lookup"><span data-stu-id="98f6b-902">The default value is 0.0.</span></span> <span data-ttu-id="98f6b-903">這個值可以是等於或大於 0.0 的任何值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-903">This value can be any value equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-904">不過，<see cref="F:System.Double.PositiveInfinity" /> 和 <see cref="F:System.Double.NaN" /> 都無效。</span><span class="sxs-lookup"><span data-stu-id="98f6b-904">However, <see cref="F:System.Double.PositiveInfinity" /> is NOT valid, nor is <see cref="F:System.Double.NaN" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-905">這是三個屬性上<xref:System.Windows.FrameworkElement>指定高度資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-905">This is one of three properties on <xref:System.Windows.FrameworkElement> that specify height information.</span></span>  <span data-ttu-id="98f6b-906">其他兩種方式<xref:System.Windows.FrameworkElement.Height%2A>和<xref:System.Windows.FrameworkElement.MaxHeight%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-906">The other two are <xref:System.Windows.FrameworkElement.Height%2A> and <xref:System.Windows.FrameworkElement.MaxHeight%2A>.</span></span> <span data-ttu-id="98f6b-907">如果這些值之間沒有衝突，這是第一次應用程式的實際高度判斷順序<xref:System.Windows.FrameworkElement.MinHeight%2A>必須能被接受，然後<xref:System.Windows.FrameworkElement.MaxHeight%2A>，最後每一個位於範圍中，如果<xref:System.Windows.FrameworkElement.Height%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-907">If there is a conflict between these values, the order of application for actual height determination is first <xref:System.Windows.FrameworkElement.MinHeight%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxHeight%2A>, and finally if each of these are within bounds, <xref:System.Windows.FrameworkElement.Height%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-908">值的限制<xref:System.Double>值會強制執行<xref:System.Windows.ValidateValueCallback>機制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-908">The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism.</span></span> <span data-ttu-id="98f6b-909">如果您嘗試設定無效的值，則會擲回執行階段例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-909">If you attempt to set an invalid value, a run-time exception is thrown.</span></span>  
  
<a name="xamlAttributeUsage_MinHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-910">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-910">XAML Attribute Usage</span></span>  
  
```  
<object MinHeight="double"/>  
- or -  
<object MinHeight="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MinHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-911">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-911">XAML Values</span></span>  
 <span data-ttu-id="98f6b-912">*double*</span><span class="sxs-lookup"><span data-stu-id="98f6b-912">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="98f6b-913">字串表示法<xref:System.Double>等於或大於 0.0 的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-913">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-914">這會解譯為[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="98f6b-914">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="98f6b-915">字串不需要明確包含小數位數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-915">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="98f6b-916">執行個體的值`1`是可以接受的。</span><span class="sxs-lookup"><span data-stu-id="98f6b-916">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="98f6b-917">相同<xref:System.Double>套用屬性值一節中所述的範圍限制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-917">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="98f6b-918">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="98f6b-918">*qualifiedDouble*</span></span>  
 <span data-ttu-id="98f6b-919">A*雙*值，如上所述，後面接著一個的下列單位宣告字串： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-919">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="98f6b-920">`px` （預設值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="98f6b-920">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="98f6b-921">`in` 是英吋為單位;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="98f6b-921">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="98f6b-922">`cm` 是公釐。1cm==(96/2.54) 像素</span><span class="sxs-lookup"><span data-stu-id="98f6b-922">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="98f6b-923">`pt` is points; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="98f6b-923">`pt` is points; 1pt==(96/72) px</span></span>  
  
<a name="dependencyPropertyInfo_MinHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-924">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-924">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-925">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-925">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.MinHeightProperty>|  
|<span data-ttu-id="98f6b-926">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-926">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.MinHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.MinHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-927">識別 <see cref="P:System.Windows.FrameworkElement.MinHeight" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-927">Identifies the <see cref="P:System.Windows.FrameworkElement.MinHeight" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public double MinWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MinWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MinWidth : double with get, set" Usage="System.Windows.FrameworkElement.MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-928">取得或設定元素的最小寬度限制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-928">Gets or sets the minimum width constraint of the element.</span></span></summary>
        <value><span data-ttu-id="98f6b-929">項目的最小寬度 (以 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 為單位)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-929">The minimum width of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span> <span data-ttu-id="98f6b-930">預設值為 0.0。</span><span class="sxs-lookup"><span data-stu-id="98f6b-930">The default value is 0.0.</span></span> <span data-ttu-id="98f6b-931">這個值可以是等於或大於 0.0 的任何值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-931">This value can be any value equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-932">不過，<see cref="F:System.Double.PositiveInfinity" /> 和 <see cref="F:System.Double.NaN" /> 則無效。</span><span class="sxs-lookup"><span data-stu-id="98f6b-932">However, <see cref="F:System.Double.PositiveInfinity" /> is not valid, nor is <see cref="F:System.Double.NaN" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-933">這是三個屬性上<xref:System.Windows.FrameworkElement>指定寬度的資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-933">This is one of three properties on <xref:System.Windows.FrameworkElement> that specify width information.</span></span>  <span data-ttu-id="98f6b-934">其他兩種方式<xref:System.Windows.FrameworkElement.Width%2A>和<xref:System.Windows.FrameworkElement.MaxWidth%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-934">The other two are <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span>  <span data-ttu-id="98f6b-935">如果這些值之間沒有衝突，實際寬度判斷的應用程式的順序是第一個<xref:System.Windows.FrameworkElement.MinWidth%2A>必須能被接受，然後<xref:System.Windows.FrameworkElement.MaxWidth%2A>，最後每一個位於範圍中，如果<xref:System.Windows.FrameworkElement.Width%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-935">If there is a conflict between these values, the order of application for actual width determination is first <xref:System.Windows.FrameworkElement.MinWidth%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxWidth%2A>, and finally if each of these are within bounds, <xref:System.Windows.FrameworkElement.Width%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-936">值的限制<xref:System.Double>值會強制執行<xref:System.Windows.ValidateValueCallback>機制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-936">The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism.</span></span> <span data-ttu-id="98f6b-937">如果您嘗試設定無效的值，則會擲回執行階段例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-937">If you attempt to set an invalid value, a run-time exception is thrown.</span></span>  
  
<a name="xamlAttributeUsage_MinWidth"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-938">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-938">XAML Attribute Usage</span></span>  
  
```  
<object MinWidth="double"/>  
- or -  
<object MinWidth="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-939">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-939">XAML Values</span></span>  
 <span data-ttu-id="98f6b-940">*double*</span><span class="sxs-lookup"><span data-stu-id="98f6b-940">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="98f6b-941">字串表示法<xref:System.Double>等於或大於 0.0 的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-941">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-942">這會解譯為[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="98f6b-942">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="98f6b-943">字串不需要明確包含小數位數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-943">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="98f6b-944">執行個體的值`1`是可以接受的。</span><span class="sxs-lookup"><span data-stu-id="98f6b-944">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="98f6b-945">相同<xref:System.Double>套用屬性值一節中所述的範圍限制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-945">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="98f6b-946">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="98f6b-946">*qualifiedDouble*</span></span>  
 <span data-ttu-id="98f6b-947">A*雙*值，如上所述，後面接著一個的下列單位宣告字串： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-947">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="98f6b-948">`px` （預設值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="98f6b-948">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="98f6b-949">`in` 是英吋為單位;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="98f6b-949">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="98f6b-950">`cm` 是公釐。1cm==(96/2.54) 像素</span><span class="sxs-lookup"><span data-stu-id="98f6b-950">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="98f6b-951">`pt` is points; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="98f6b-951">`pt` is points; 1pt==(96/72) px</span></span>  
  
<a name="dependencyPropertyInfo_MinWidth"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-952">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-952">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-953">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-953">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.MinWidthProperty>|  
|<span data-ttu-id="98f6b-954">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-954">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.MinWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.MinWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-955">識別 <see cref="P:System.Windows.FrameworkElement.MinWidth" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-955">Identifies the <see cref="P:System.Windows.FrameworkElement.MinWidth" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public override sealed bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="frameworkElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="98f6b-956">要移動焦點的方向，以列舉型別 (Enumeration) 的值表示。</span><span class="sxs-lookup"><span data-stu-id="98f6b-956">The direction that focus is to be moved, as a value of the enumeration.</span></span></param>
        <summary><span data-ttu-id="98f6b-957">以所提供的周遊方向，將鍵盤焦點從這個項目移到其他項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-957">Moves the keyboard focus away from this element and to another element in a provided traversal direction.</span></span></summary>
        <returns><span data-ttu-id="98f6b-958">若成功移動焦點則傳回 <see langword="true" />，若所指定之方向的目標項目不存在，或無法成為鍵盤導向，則傳回 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-958">Returns <see langword="true" /> if focus is moved successfully; <see langword="false" /> if the target element in direction as specified does not exist or could not be keyboard focused.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-959">此實作會覆寫<xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=nameWithType>並密封方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-959">This implementation overrides <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=nameWithType> and seals the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-960">下列範例會實作處理數種可能的按鈕輸入處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-960">The following example implements a handler that handles several possible button inputs.</span></span> <span data-ttu-id="98f6b-961">每個按鈕表示可能發生<xref:System.Windows.Input.FocusNavigationDirection>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-961">Each button represents a possible <xref:System.Windows.Input.FocusNavigationDirection>.</span></span> <span data-ttu-id="98f6b-962">處理常式會追蹤目前的鍵盤焦點和呼叫的項目<xref:System.Windows.FrameworkElement.MoveFocus%2A>該項目，指定適當<xref:System.Windows.Input.FocusNavigationDirection>初始化為<xref:System.Windows.Input.TraversalRequest>類型提供的參數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-962">The handler tracks the element with current keyboard focus, and calls <xref:System.Windows.FrameworkElement.MoveFocus%2A> on that element, by specifying the appropriate <xref:System.Windows.Input.FocusNavigationDirection> as initialization for the <xref:System.Windows.Input.TraversalRequest> type parameter provided.</span></span>  
  
 [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]
 [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.FrameworkElement.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IFrameworkInputElement.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Markup.DesignerSerializationOptions(System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0">
          <AttributeName>System.Windows.Markup.DesignerSerializationOptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-963">取得或設定項目的識別名稱。</span><span class="sxs-lookup"><span data-stu-id="98f6b-963">Gets or sets the identifying name of the element.</span></span> <span data-ttu-id="98f6b-964">此名稱提供參考，以便程式碼後置 (例如事件處理常式程式碼) 可以在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] 處理器處理期間建構標記項目之後參考此項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-964">The name provides a reference so that code-behind, such as event handler code, can refer to a markup element after it is constructed during processing by a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor.</span></span></summary>
        <value><span data-ttu-id="98f6b-965">項目的名稱。</span><span class="sxs-lookup"><span data-stu-id="98f6b-965">The name of the element.</span></span> <span data-ttu-id="98f6b-966">預設為空字串。</span><span class="sxs-lookup"><span data-stu-id="98f6b-966">The default is an empty string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-967">這個屬性的最常見的用法是指定[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]做為屬性標記的項目名稱。</span><span class="sxs-lookup"><span data-stu-id="98f6b-967">The most common usage of this property is to specify a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] element name as an attribute in markup.</span></span>  
  
 <span data-ttu-id="98f6b-968">這個屬性基本上會提供 WPF 架構層級方便的屬性來設定[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [X:name 指示詞](~/docs/framework/xaml-services/x-name-directive.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-968">This property essentially provides a WPF framework-level convenience property to set the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md).</span></span>  
  
 <span data-ttu-id="98f6b-969">名稱必須是唯一的名稱範圍內。</span><span class="sxs-lookup"><span data-stu-id="98f6b-969">Names must be unique within a namescope.</span></span> <span data-ttu-id="98f6b-970">如需詳細資訊，請參閱 < [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-970">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="98f6b-971">取得<xref:System.Windows.FrameworkElement.Name%2A>如果您要建立項目中的程式碼並不常見。</span><span class="sxs-lookup"><span data-stu-id="98f6b-971">Getting a <xref:System.Windows.FrameworkElement.Name%2A> if you are creating elements in code is not common.</span></span> <span data-ttu-id="98f6b-972">如果您沒有適當的參考程式碼中，您可以直接呼叫方法和項目上的屬性參考，而且通常不會需要<xref:System.Windows.FrameworkElement.Name%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-972">If you have the appropriate reference in code already, you can just call methods and properties on the element reference and will not generally need the <xref:System.Windows.FrameworkElement.Name%2A>.</span></span> <span data-ttu-id="98f6b-973">這個例外狀況是如果<xref:System.Windows.FrameworkElement.Name%2A>字串具有某些多載意義，例如它是否可顯示該名稱在[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="98f6b-973">An exception to this is if the <xref:System.Windows.FrameworkElement.Name%2A> string has some overloaded meaning, for instance if it is useful to display that name in [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="98f6b-974">設定<xref:System.Windows.FrameworkElement.Name%2A>從程式碼後置如果原始<xref:System.Windows.FrameworkElement.Name%2A>從標記已設定，也不建議，並載入之後變更的屬性[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]不會變更原始的物件參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-974">Setting a <xref:System.Windows.FrameworkElement.Name%2A> from code-behind if the original <xref:System.Windows.FrameworkElement.Name%2A> was set from markup is also not recommended, and changing the property after loading the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will not change the original object reference.</span></span> <span data-ttu-id="98f6b-975">只有在剖析期間明確建立基礎的名稱範圍時，會建立物件參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-975">The object references are created only when the underlying namescopes are explicitly created during parsing.</span></span> <span data-ttu-id="98f6b-976">您必須特別呼叫<xref:System.Windows.FrameworkElement.RegisterName%2A>來進行有效變更<xref:System.Windows.FrameworkElement.Name%2A>已載入元素的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-976">You must specifically call <xref:System.Windows.FrameworkElement.RegisterName%2A> to make an effective change to the <xref:System.Windows.FrameworkElement.Name%2A> property of an already loaded element.</span></span>  
  
 <span data-ttu-id="98f6b-977">一個值得注意案例設定<xref:System.Windows.FrameworkElement.Name%2A>從程式碼是很重要時，才能註冊名稱，將分鏡腳本的項目執行，以便在執行階段參考它們。</span><span class="sxs-lookup"><span data-stu-id="98f6b-977">One notable case where setting <xref:System.Windows.FrameworkElement.Name%2A> from code is important is when registering names for elements that storyboards will run against, so that they can be referenced at run time.</span></span> <span data-ttu-id="98f6b-978">您可以註冊的名稱之前，可能也需要具現化，並將指派<xref:System.Windows.NameScope>執行個體。</span><span class="sxs-lookup"><span data-stu-id="98f6b-978">Before you can register a name, might also need to instantiate and assign a <xref:System.Windows.NameScope> instance.</span></span> <span data-ttu-id="98f6b-979">請參閱 < 範例 > 一節中，或是[分鏡腳本概觀](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-979">See the Example section, or [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="98f6b-980">設定<xref:System.Windows.FrameworkElement.Name%2A>從程式碼具有有限的應用程式，但取得項目<xref:System.Windows.FrameworkElement.Name%2A>是更常見的。</span><span class="sxs-lookup"><span data-stu-id="98f6b-980">Setting <xref:System.Windows.FrameworkElement.Name%2A> from code has limited applications, but getting an element by <xref:System.Windows.FrameworkElement.Name%2A> is more common.</span></span> <span data-ttu-id="98f6b-981">一個特定案例中，這是您的應用程式是否支援頁面重新載入至應用程式，而執行的階段程式碼不一定是程式碼後置定義該頁面的瀏覽模型。</span><span class="sxs-lookup"><span data-stu-id="98f6b-981">One particular scenario is if your application supports a navigation model where pages reload into the application, and the run time code is not necessarily code-behind defined for that page.</span></span> <span data-ttu-id="98f6b-982">公用程式方法<xref:System.Windows.FrameworkElement.FindName%2A>，這是可從任何<xref:System.Windows.FrameworkElement>，可以找到任何項目<xref:System.Windows.FrameworkElement.Name%2A>該項目邏輯樹狀結構中搜尋必要的樹狀目錄中以遞迴方式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-982">The utility method <xref:System.Windows.FrameworkElement.FindName%2A>, which is available from any <xref:System.Windows.FrameworkElement>, can find any element by <xref:System.Windows.FrameworkElement.Name%2A> in the logical tree for that element, searching the tree recursively as necessary.</span></span> <span data-ttu-id="98f6b-983">或者您可以使用<xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>靜態方法<xref:System.Windows.LogicalTreeHelper>，也會採用<xref:System.Windows.FrameworkElement.Name%2A>做為引數的字串。</span><span class="sxs-lookup"><span data-stu-id="98f6b-983">Or you can use the <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> static method of <xref:System.Windows.LogicalTreeHelper>, which also takes a <xref:System.Windows.FrameworkElement.Name%2A> string as an argument.</span></span>  
  
 <span data-ttu-id="98f6b-984">常用根項目 (<xref:System.Windows.Window>，<xref:System.Windows.Controls.Page>比方說) 實作介面<xref:System.Windows.Markup.INameScope>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-984">Typically used root elements (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> for example) implement the interface <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="98f6b-985">這個介面的實作應該強制執行的名稱是模稜兩可在其範圍內。</span><span class="sxs-lookup"><span data-stu-id="98f6b-985">Implementations of this interface are expected to enforce that names be unambiguous within their scope.</span></span> <span data-ttu-id="98f6b-986">定義這個介面的根項目也定義名稱範圍行為界限的所有相關[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="98f6b-986">The root elements that define this interface also define the namescope behavior boundaries for all the related [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span></span>  
  
 <span data-ttu-id="98f6b-987"><xref:System.Windows.FrameworkElement.Name%2A>屬性也可做為其他處理序的識別碼。</span><span class="sxs-lookup"><span data-stu-id="98f6b-987">The <xref:System.Windows.FrameworkElement.Name%2A> property also serves as an identifier for other processes.</span></span> <span data-ttu-id="98f6b-988">比方說， [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation 模型會使用<xref:System.Windows.FrameworkElement.Name%2A>為用戶端和提供者的 AutomationId。</span><span class="sxs-lookup"><span data-stu-id="98f6b-988">For instance, the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation model will use <xref:System.Windows.FrameworkElement.Name%2A> as the AutomationId for clients and providers.</span></span>  
  
 <span data-ttu-id="98f6b-989">所用的字串值<xref:System.Windows.FrameworkElement.Name%2A>有一些限制，如基礎所加諸[X:name 指示詞](~/docs/framework/xaml-services/x-name-directive.md)所定義[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]規格。</span><span class="sxs-lookup"><span data-stu-id="98f6b-989">The string values used for <xref:System.Windows.FrameworkElement.Name%2A> have some restrictions, as imposed by the underlying [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) defined by the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] specification.</span></span> <span data-ttu-id="98f6b-990">最值得注意的是，<xref:System.Windows.FrameworkElement.Name%2A>必須以字母或底線字元 (_) 開頭，而且必須包含字母、 數字或底線。</span><span class="sxs-lookup"><span data-stu-id="98f6b-990">Most notably, a <xref:System.Windows.FrameworkElement.Name%2A> must start with a letter or the underscore character (_), and must contain only letters, digits, or underscores.</span></span> <span data-ttu-id="98f6b-991">如需詳細資訊，請參閱 < [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-991">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="98f6b-992"><xref:System.Windows.FrameworkElement.Name%2A> 是其中一個非常少無法變成動畫的相依性屬性 (<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>是`true`中繼資料中)，因為名稱本身是針對動畫很重要。</span><span class="sxs-lookup"><span data-stu-id="98f6b-992"><xref:System.Windows.FrameworkElement.Name%2A> is one of the very few dependency properties that cannot be animated (<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A> is `true` in metadata), because the name itself is vital for targeting an animation.</span></span> <span data-ttu-id="98f6b-993">資料繫結<xref:System.Windows.FrameworkElement.Name%2A>技術上可行，但是一個非常常見的案例，因為資料繫結<xref:System.Windows.FrameworkElement.Name%2A>無法提供屬性的主要用途： 為程式碼後置中提供識別碼的連接點。</span><span class="sxs-lookup"><span data-stu-id="98f6b-993">Data binding a <xref:System.Windows.FrameworkElement.Name%2A> is technically possible, but is an extremely uncommon scenario because a data-bound <xref:System.Windows.FrameworkElement.Name%2A> cannot serve the main intended purpose of the property: to provide an identifier connection point for code-behind.</span></span>  
  
<a name="dependencyPropertyInfo_Name"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-994">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-994">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-995">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-995">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.NameProperty>|  
|<span data-ttu-id="98f6b-996">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-996">Metadata properties set to `true`</span></span>|<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-997">下列範例會設定<xref:System.Windows.FrameworkElement.Name%2A>屬性中的程式碼，然後註冊到新建立的 名稱<xref:System.Windows.NameScope>藉由呼叫<xref:System.Windows.FrameworkElement.RegisterName%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-997">The following example sets the <xref:System.Windows.FrameworkElement.Name%2A> property in code, and then registers the name into the newly created <xref:System.Windows.NameScope> by calling <xref:System.Windows.FrameworkElement.RegisterName%2A>.</span></span> <span data-ttu-id="98f6b-998">如下圖所示的技巧是使用分鏡腳本，以動畫顯示的需求，因為分鏡腳本必須由目標<xref:System.Windows.FrameworkElement.Name%2A>，並不能設為目標的物件參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-998">The technique illustrated here is a requirement for animating with storyboards, because storyboards require targeting by the <xref:System.Windows.FrameworkElement.Name%2A>, and cannot be targeted by object reference.</span></span>  
  
 [!code-csharp[animateHeight_procedural#FEName](~/samples/snippets/csharp/VS_Snippets_Wpf/animateHeight_procedural/CSharp/AnimatedHeightExample.cs#fename)]
 [!code-vb[animateHeight_procedural#FEName](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animateHeight_procedural/visualbasic/animatedheightexample.vb#fename)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-999">識別 <see cref="P:System.Windows.FrameworkElement.Name" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-999">Identifies the <see cref="P:System.Windows.FrameworkElement.Name" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public virtual void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="abstract member OnApplyTemplate : unit -&gt; unit&#xA;override this.OnApplyTemplate : unit -&gt; unit" Usage="frameworkElement.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-1000">在衍生類別中被覆寫時，每當應用程式程式碼或內部處理序呼叫 <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" /> 時一都會叫用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1000">When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1001">這個方法沒有任何預設實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1001">This method has no default implementation.</span></span>  
  
 <span data-ttu-id="98f6b-1002">範本是區段的項目已完成的視覺化樹狀結構的 Template 屬性是來自<xref:System.Windows.Style>套用項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1002">Templates are the section of an element's completed visual tree that comes from the Template property of a <xref:System.Windows.Style> that is applied for the element.</span></span> <span data-ttu-id="98f6b-1003">如需詳細資訊，請參閱 [設定樣式和範本](~/docs/framework/wpf/controls/styling-and-templating.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1003">For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-1004">衍生的類別<see cref="T:System.Windows.FrameworkElement" />可以使用這個方法為通知的各種可能的案例：</span><span class="sxs-lookup"><span data-stu-id="98f6b-1004">Derived classes of <see cref="T:System.Windows.FrameworkElement" /> can use this method as a notification for a variety of possible scenarios:</span></span> 
<span data-ttu-id="98f6b-1005">-您可以呼叫您自己的建置項目視覺化樹狀結構的其餘部分的程式碼的實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1005">-   You can call your own implementation of code that builds the remainder of an element visual tree.</span></span>  
  
<span data-ttu-id="98f6b-1006">-您可以執行已套用至範本，例如取得來自範本的具名項目參考的視覺化樹狀結構所依賴的程式碼。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1006">-   You can run code that relies on the visual tree from templates having been applied, such as obtaining references to named elements that came from a template.</span></span>  
  
<span data-ttu-id="98f6b-1007">-您可以導入才有意義存在於範本位於視覺樹狀結構完成後的服務。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1007">-   You can introduce services that only make sense to exist after the visual tree from templates is complete.</span></span>  
  
<span data-ttu-id="98f6b-1008">-您可以設定狀態和屬性的範本內會相依於其他因素的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1008">-   You can set states and properties of elements within the template that are dependent on other factors.</span></span> <span data-ttu-id="98f6b-1009">比方說，屬性值可能只會設定為可探索藉由得知的父項目，或當特定衍生類別會使用常見的範本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1009">For instance, property values might only be discoverable by knowing the parent element, or when a specific derived class uses a common template.</span></span>  
  
<span data-ttu-id="98f6b-1010">實作者應該一律呼叫之前其自己實作的基底實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1010">Implementers should always call the base implementation before their own implementation.</span></span> <span data-ttu-id="98f6b-1011"><see cref="T:System.Windows.FrameworkElement" /> 本身具有沒有預設值可能會實作中，但中介類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1011"><see cref="T:System.Windows.FrameworkElement" /> itself has no default implementation, but intervening classes might.</span></span>  
  
 <span data-ttu-id="98f6b-1012"><see cref="T:System.Windows.Controls.Control" /> 提供類似的覆寫， <see cref="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1012"><see cref="T:System.Windows.Controls.Control" /> offers a similar override, <see cref="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuClosing (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuClosing(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuClosing (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuClosing(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuClosing : System.Windows.Controls.ContextMenuEventArgs -&gt; unit&#xA;override this.OnContextMenuClosing : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="frameworkElement.OnContextMenuClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="98f6b-1013">提供有關事件的資料。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1013">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="98f6b-1014">當未處理的 <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> 路由事件到達其路由中的這個類別時，便會叫用此方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1014">Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="98f6b-1015">實作這個方法可為此事件加入類別處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1015">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1016">這個方法沒有任何預設實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1016">This method has no default implementation.</span></span> <span data-ttu-id="98f6b-1017">如果在繼承的中繼類別已實作此方法，您仍應該呼叫基底實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1017">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="98f6b-1018">這個方法的目的是有點類似[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]上的事件模式 \* 方法： 它會提供方法來處理從衍生的類別，而不是執行個體處理常式的類別處理常式與相符的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1018">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="98f6b-1019">在此情況下，符合的事件是路由的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1019">In this case the matching event is a routed event.</span></span> <span data-ttu-id="98f6b-1020">On \* 方法的實作模式是不同的路由事件，因為路由的事件可能已引發由子項目，不一定會叫用處理常式，因此您的實作必須接受事件引數的來源項目帳戶屬性 （和不應該嘗試重新引發該事件，在大部分情況下）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1020">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="98f6b-1021">子類別<xref:System.Windows.FrameworkElement>可以選擇在路由收到事件時呼叫私用類別處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1021">Subclasses of <xref:System.Windows.FrameworkElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="98f6b-1022">一個可能的案例是取得事件的引數，並謹慎地將事件標示為已處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1022">One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit&#xA;override this.OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="frameworkElement.OnContextMenuOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="98f6b-1023">包含事件資料的 <see cref="T:System.Windows.RoutedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1023">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="98f6b-1024">當未處理的 <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> 路由事件到達其路由中的這個類別時，便會叫用此方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1024">Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="98f6b-1025">實作這個方法可為此事件加入類別處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1025">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1026">這個方法沒有任何預設實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1026">This method has no default implementation.</span></span> <span data-ttu-id="98f6b-1027">如果在繼承的中繼類別已實作此方法，您仍應該呼叫基底實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1027">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="98f6b-1028">這個方法的目的是有點類似[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]上的事件模式 \* 方法： 它會提供方法來處理從衍生的類別，而不是執行個體處理常式的類別處理常式與相符的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1028">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="98f6b-1029">在此情況下，符合的事件是路由的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1029">In this case the matching event is a routed event.</span></span> <span data-ttu-id="98f6b-1030">On \* 方法的實作模式是不同的路由事件，因為路由的事件可能已引發由子項目，不一定會叫用處理常式，因此您的實作必須接受事件引數的來源項目帳戶屬性 （和不應該嘗試重新引發該事件，在大部分情況下）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1030">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="98f6b-1031">子類別<xref:System.Windows.FrameworkElement>可以選擇在路由收到事件時呼叫私用類別處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1031">Subclasses of <xref:System.Windows.FrameworkElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="98f6b-1032">一個可能的案例是取得事件的引數，並謹慎地將事件標示為已處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1032">One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="frameworkElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="98f6b-1033">包含事件資料的 <see cref="T:System.Windows.RoutedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1033">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="98f6b-1034">當未處理的 <see cref="E:System.Windows.UIElement.GotFocus" /> 事件到達其路由中的這個項目時，便會叫用此方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1034">Invoked whenever an unhandled <see cref="E:System.Windows.UIElement.GotFocus" /> event reaches this element in its route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1035">不同於在某些其他 \* 基底的項目，所公開的方法<xref:System.Windows.FrameworkElement.OnGotFocus%2A>沒有預設實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1035">Unlike some other On\* methods exposed by the base elements, <xref:System.Windows.FrameworkElement.OnGotFocus%2A> does have a default implementation.</span></span> <span data-ttu-id="98f6b-1036">具體來說，它已關閉，就會覆寫基底元素的下一步 層級中的 null 實作的實作<xref:System.Windows.UIElement.OnGotFocus%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1036">Specifically, it has an implementation that overrides the null implementation in the next level of base element down, <xref:System.Windows.UIElement.OnGotFocus%2A>.</span></span> <span data-ttu-id="98f6b-1037">叫用時，<xref:System.Windows.FrameworkElement.OnGotFocus%2A>在目前的項目，因為鍵盤焦點從事件的起源的情況下此項目上設定適當的焦點行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1037">When invoked, <xref:System.Windows.FrameworkElement.OnGotFocus%2A> sets appropriate focus behavior on this element in cases where the event originated from the current element due to keyboard focus.</span></span> <span data-ttu-id="98f6b-1038"><xref:System.Windows.FrameworkElement.OnGotFocus%2A>處理常式不會標記為已處理，即使當焦點設定為目前的項目之事件引數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1038">The <xref:System.Windows.FrameworkElement.OnGotFocus%2A> handler does not mark the event arguments as handled, even when focus is set to the current element.</span></span> <span data-ttu-id="98f6b-1039">如果事件的來源是在樹狀目錄中 （不是目前項目） 的另一個項目，這個處理常式沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1039">If the event's source was another element in the tree (not the current element), the handler does nothing.</span></span>  
  
 <span data-ttu-id="98f6b-1040">您可以覆寫此方法，以變更預設的焦點行為，在您的項目，但請注意，變更焦點行為，如此一來可能會更好可藉由不允許 完全可設定焦點的項目 (請參閱<xref:System.Windows.UIElement.Focusable%2A>)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1040">You can override this method in order to change the default focus behavior on your element, but be aware that changing focus behavior in this way might be better accomplished by not allowing the element to be focusable at all (see <xref:System.Windows.UIElement.Focusable%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-1041">如果您想要將事件引數中處理標記，您應留意其他項目樹狀結構中的父元素中的事件處理的結果。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1041">If you intend to mark the event handled in the arguments, you should be aware of consequences on event handling in other parent elements in the element tree.</span></span> <span data-ttu-id="98f6b-1042">因為這個處理常式是事件反昇的路由，將焦點設定至目前<paramref name="sender" />每個事件引數可能不適當。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1042">Because this handler acts on an event with a bubbling routing, setting the focus to the current <paramref name="sender" /> per the event arguments may not be appropriate.</span></span> <span data-ttu-id="98f6b-1043">焦點，可能需要進入任一個複合的子項目或父項目，根據某些控制項的複合。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1043">Focus might need to go to either a composite child element or to a parent element, depending on the compositing of certain controls.</span></span> <span data-ttu-id="98f6b-1044">因此將焦點事件標示為已處理，才建議整個事件透過路由的視覺化樹狀結構是撰寫您所撰寫之控制項的一部分。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1044">Therefore marking a focus event as handled is only recommended if the entirety of the visual tree that the event is routing through is part of compositing of a control that you authored.</span></span></para></block>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInitialized : EventArgs -&gt; unit&#xA;override this.OnInitialized : EventArgs -&gt; unit" Usage="frameworkElement.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="98f6b-1045">包含事件資料的 <see cref="T:System.Windows.RoutedEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1045">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="98f6b-1046">引發 <see cref="E:System.Windows.FrameworkElement.Initialized" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1046">Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span></span> <span data-ttu-id="98f6b-1047">每當 <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> 在內部設為 <see langword="true" /> 便會叫用此方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1047">This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to <see langword="true" /> internally.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1048">在此特定 \* 方法並不是類別處理常式攔截。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1048">This particular On\* method is not a class handler hook.</span></span> <span data-ttu-id="98f6b-1049">或其不完全遵循既定[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]上 \* 方法慣例相符的事件可能會隱藏透過覆寫這個方法並不會呼叫基底實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1049">Nor does it exactly follow the established [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] On\* method convention that the matching event could be suppressed by overriding this method and not calling the base implementation.</span></span>  
  
 <span data-ttu-id="98f6b-1050">請注意，<xref:System.Windows.FrameworkElement.IsInitialized%2A>屬性是唯讀的因此您無法設定<xref:System.Windows.FrameworkElement.IsInitialized%2A>來強制初始化行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1050">Note that the <xref:System.Windows.FrameworkElement.IsInitialized%2A> property is read-only, so you cannot set <xref:System.Windows.FrameworkElement.IsInitialized%2A> to force initialization behavior.</span></span> <span data-ttu-id="98f6b-1051">設定初始設定狀態要進行只有[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]framework。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1051">Setting the initialization state is intended to be done only by the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-1052">此虛擬方法的預設實作會引發事件，如先前所述。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1052">The default implementation of this virtual method raises the event as described above.</span></span> <span data-ttu-id="98f6b-1053">覆寫應呼叫基底實作以保留此行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1053">Overrides should call the base implementation to preserve this behavior.</span></span> <span data-ttu-id="98f6b-1054">如果您無法呼叫基底實作，不只將您不會引發<see cref="E:System.Windows.FrameworkElement.Initialized" />事件，通常預計的<see cref="T:System.Windows.FrameworkElement" />衍生類別，但您也會隱藏兩個重要樣式和佈景主題樣式初始化作業藉由這個基底實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1054">If you fail to call the base implementation, not only will you not raise the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event as is generally expected of a <see cref="T:System.Windows.FrameworkElement" /> derived class, but you will also suppress two important style and theme style initialization operations that are implemented by this base implementation.</span></span></para></block>
        <altmember cref="M:System.Windows.FrameworkElement.OnApplyTemplate" />
        <altmember cref="E:System.Windows.FrameworkElement.Initialized" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="frameworkElement.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="98f6b-1055">事件資料，描述已變更的屬性，以及舊值和新值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1055">The event data that describes the property that changed, as well as old and new values.</span></span></param>
        <summary><span data-ttu-id="98f6b-1056">每當這個 <see cref="T:System.Windows.FrameworkElement" /> 上任何相依性屬性的有效值已更新時叫用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1056">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement" /> has been updated.</span></span> <span data-ttu-id="98f6b-1057">已變更的特定相依性屬性會在引數參數中報告。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1057">The specific dependency property that changed is reported in the arguments parameter.</span></span> <span data-ttu-id="98f6b-1058">覆寫 <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1058">Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1059">這個方法不是要用於偵測一般的屬性變更或失效。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1059">This method is not intended to generally detect property changes or invalidations.</span></span> <span data-ttu-id="98f6b-1060">它改為適用於一般失效模式修改如果已知廣泛分類屬性的特定資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1060">It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.</span></span>  
  
 <span data-ttu-id="98f6b-1061">這個方法是可能被叫用次數物件的存留期間。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1061">This method is potentially invoked many times during the life of an object.</span></span> <span data-ttu-id="98f6b-1062">因此，達到更佳的效能，如果您覆寫特定屬性的中繼資料，然後將附加<xref:System.Windows.CoerceValueCallback>或<xref:System.Windows.PropertyChangedCallback>個別屬性的函式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1062">Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions for individual properties.</span></span> <span data-ttu-id="98f6b-1063">不過，您會使用這個方法如果<xref:System.Windows.FrameworkElement>包含大量的值相互關聯的相依性屬性，或者如果它包含邏輯，例如轉譯行為，必須重新執行的許多相關的屬性失效的情況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1063">However, you would use this method if a <xref:System.Windows.FrameworkElement> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</span></span>  
  
 <span data-ttu-id="98f6b-1064">請注意，有同名`OnPropertyChanged`方法具有不同的簽章 (參數類型是<xref:System.ComponentModel.PropertyChangedEventArgs>) 可以出現在數個類別上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1064">Note that there is an identically named `OnPropertyChanged` method with a different signature (the parameter type is <xref:System.ComponentModel.PropertyChangedEventArgs>) that can appear on a number of classes.</span></span> <span data-ttu-id="98f6b-1065">該`OnPropertyChanged`用於資料物件的通知，而且是合約的一部分<xref:System.ComponentModel.INotifyPropertyChanged>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1065">That `OnPropertyChanged` is used for data object notifications, and is part of the contract for <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-1066">務必呼叫基底實作中，在實作中的第一個作業。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1066">Always call the base implementation, as the first operation in your implementation.</span></span> <span data-ttu-id="98f6b-1067">如果沒有這樣做會大幅停用整個[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]屬性系統中，這會導致報告不正確的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1067">Failure to do this will significantly disable the entire [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system, which causes incorrect values to be reported.</span></span> <span data-ttu-id="98f6b-1068">特定<see cref="T:System.Windows.FrameworkElement" />實作也會負責維護適當的狀態，針對各種會影響顯示的使用者介面的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1068">The specific <see cref="T:System.Windows.FrameworkElement" /> implementation is also responsible for maintaining proper state for a variety of properties that affect the visible user interface.</span></span> <span data-ttu-id="98f6b-1069">這些包括讓失效的變更樣式在適當的時間為基礎的視覺化樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1069">These include invalidating the visual tree based on changes to style at appropriate times.</span></span></para></block>
        <altmember cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo sizeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRenderSizeChanged (sizeInfo As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ sizeInfo);" />
      <MemberSignature Language="F#" Value="override this.OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit" Usage="frameworkElement.OnRenderSizeChanged sizeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInfo" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="sizeInfo"><span data-ttu-id="98f6b-1070">變更所涉及之舊和新大小的詳細資料。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1070">Details of the old and new size involved in the change.</span></span></param>
        <summary><span data-ttu-id="98f6b-1071">使用指定的資訊作為最終事件資料的一部分，引發 <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> 事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1071">Raises the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> event, using the specified information as part of the eventual event data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1072">這個方法覆寫 <xref:System.Windows.UIElement.OnRenderSizeChanged%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1072">This method overrides <xref:System.Windows.UIElement.OnRenderSizeChanged%2A>.</span></span> <span data-ttu-id="98f6b-1073">如果您呼叫這個方法則會重設<xref:System.Windows.FrameworkElement.ActualWidth%2A>屬性，<xref:System.Windows.FrameworkElement.ActualHeight%2A>中提供的引數，變更的屬性，或兩者，根據為指定的項目，並且您總是會引發此事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1073">If you call this method you will reset the <xref:System.Windows.FrameworkElement.ActualWidth%2A> property, the <xref:System.Windows.FrameworkElement.ActualHeight%2A> property, or both, depending on what is specified as changed in the supplied arguments, and will you always raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-1074">不會覆寫這個方法的典型版面配置案例。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1074">Do not override this method for typical layout scenarios.</span></span> <span data-ttu-id="98f6b-1075">版面配置系統會刻意非同步的方式，以確保所有可能的配置排列，並說明量值的情況下運作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1075">The layout system operates in a deliberately asynchronous way to assure that all possible layout arrange and measure cases are accounted for.</span></span> <span data-ttu-id="98f6b-1076">版面配置系統覆寫方法<see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />和<see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />通常已足夠完成任何必要的配置的自訂。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1076">The layout system override methods <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> and <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> are usually sufficient for any required layout customization.</span></span> <span data-ttu-id="98f6b-1077"><see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /> 會公開為虛擬機器。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1077"><see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /> is exposed as a virtual.</span></span> <span data-ttu-id="98f6b-1078">您可以覆寫<see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />更正執行階段行為的變更與輸入事件結合控制項的例外狀況的撰寫回應可能會提供不正確的版面配置資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1078">You can override <see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /> to correct for exceptional cases where a run-time behavioral change related to input events combined with control recomposition in response might give inaccurate layout information.</span></span>  
  
<span data-ttu-id="98f6b-1079">您可能仍會覆寫 （受保護但並未密封） 衍生類別中的，這個方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1079">You may still override this method in derived classes (it is protected but not sealed).</span></span> <span data-ttu-id="98f6b-1080">請務必呼叫基底實作，以保留先前所述，行為，除非您有非常特定的理由，停用預設 WPF 架構層級轉譯行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1080">Always call the base implementation to preserve the behavior mentioned above, unless you have very specific reasons for disabling default WPF framework-level rendering behavior.</span></span> <span data-ttu-id="98f6b-1081">無法引發<see cref="E:System.Windows.FrameworkElement.SizeChanged" />事件將會產生非標準的版面配置行為，如果使用標準的 WPF 架構層級的版面配置系統實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1081">Failing to raise the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> event will cause non-standard layout behavior if using the standard WPF framework-level layout system implementation.</span></span></para></block>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStyleChanged (System.Windows.Style oldStyle, System.Windows.Style newStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStyleChanged(class System.Windows.Style oldStyle, class System.Windows.Style newStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStyleChanged (oldStyle As Style, newStyle As Style)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStyleChanged(System::Windows::Style ^ oldStyle, System::Windows::Style ^ newStyle);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleChanged : System.Windows.Style * System.Windows.Style -&gt; unit&#xA;override this.OnStyleChanged : System.Windows.Style * System.Windows.Style -&gt; unit" Usage="frameworkElement.OnStyleChanged (oldStyle, newStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldStyle" Type="System.Windows.Style" />
        <Parameter Name="newStyle" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="oldStyle"><span data-ttu-id="98f6b-1082">舊樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1082">The old style.</span></span></param>
        <param name="newStyle"><span data-ttu-id="98f6b-1083">新樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1083">The new style.</span></span></param>
        <summary><span data-ttu-id="98f6b-1084">在這個項目上使用的樣式變更時叫用，如此將使配置失效。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1084">Invoked when the style in use on this element changes, which will invalidate the layout.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1085">這個方法有設定資訊的樣式變更條件的內部旗標的預設實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1085">This method has a default implementation that sets an internal flag that notes the style changed condition.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-1086">您應該通常不必覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1086">You should not typically have to override this method.</span></span> <span data-ttu-id="98f6b-1087">任何變更牽涉到量值為樣式或排列變更已經會觸發另一個轉譯週期，假設的典型實作<see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />  /  <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />，或預設值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1087">Any change to a style that involves a measure or arrange change would already trigger another render cycle, assuming a typical implementation of <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> / <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />, or the defaults.</span></span> <span data-ttu-id="98f6b-1088">覆寫<see cref="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" />可能適合如果您<see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />  /  <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />實作刻意將最佳化，或支援部分更新，但仍然會想要更直接將變更套用至樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1088">Overrides of <see cref="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" /> might be appropriate if your <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> / <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> implementations were deliberately optimizing or supporting partial updates, but still wanted to apply changes to styles more directly.</span></span> <span data-ttu-id="98f6b-1089">(部分更新會嘗試避免多個累加呼叫<see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" />和<see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />上任何子項目)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1089">(The partial updates would be an attempt to avoid multiple incremental calls to <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> and <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on any child elements).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnToolTipClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnToolTipClosing (System.Windows.Controls.ToolTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnToolTipClosing(class System.Windows.Controls.ToolTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnToolTipClosing (e As ToolTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnToolTipClosing(System::Windows::Controls::ToolTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnToolTipClosing : System.Windows.Controls.ToolTipEventArgs -&gt; unit&#xA;override this.OnToolTipClosing : System.Windows.Controls.ToolTipEventArgs -&gt; unit" Usage="frameworkElement.OnToolTipClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ToolTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="98f6b-1090">提供有關事件的資料。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1090">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="98f6b-1091">當未處理的 <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> 路由事件到達其路由中的這個類別時，便會叫用此方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1091">Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="98f6b-1092">實作這個方法可為此事件加入類別處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1092">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1093">這個方法沒有任何預設實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1093">This method has no default implementation.</span></span> <span data-ttu-id="98f6b-1094">如果在繼承的中繼類別已實作此方法，您仍應該呼叫基底實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1094">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="98f6b-1095">這個方法的目的是有點類似[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]上的事件模式 \* 方法： 它會提供方法來處理從衍生的類別，而不是執行個體處理常式的類別處理常式與相符的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1095">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="98f6b-1096">在此情況下，符合的事件是路由的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1096">In this case the matching event is a routed event.</span></span> <span data-ttu-id="98f6b-1097">On \* 方法的實作模式是不同的路由事件，因為路由的事件可能已引發由子項目，不一定會叫用處理常式，因此您的實作必須接受事件引數的來源項目帳戶屬性 （和不應該嘗試重新引發該事件，在大部分情況下）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1097">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="98f6b-1098">子類別<xref:System.Windows.FrameworkElement>可以選擇在路由收到事件時呼叫私用類別處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1098">Subclasses of <xref:System.Windows.FrameworkElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="98f6b-1099">一個可能的案例是取得事件的引數，並謹慎地將事件標示為已處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1099">One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnToolTipOpening">
      <MemberSignature Language="C#" Value="protected virtual void OnToolTipOpening (System.Windows.Controls.ToolTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnToolTipOpening(class System.Windows.Controls.ToolTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnToolTipOpening (e As ToolTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnToolTipOpening(System::Windows::Controls::ToolTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnToolTipOpening : System.Windows.Controls.ToolTipEventArgs -&gt; unit&#xA;override this.OnToolTipOpening : System.Windows.Controls.ToolTipEventArgs -&gt; unit" Usage="frameworkElement.OnToolTipOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ToolTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="98f6b-1100">提供有關事件的資料。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1100">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="98f6b-1101">當 <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> 路由事件到達其路由中的這個類別時，便會叫用此方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1101">Invoked whenever the <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="98f6b-1102">實作這個方法可為此事件加入類別處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1102">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1103">這個方法沒有任何預設實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1103">This method has no default implementation.</span></span> <span data-ttu-id="98f6b-1104">如果在繼承的中繼類別已實作此方法，您仍應該呼叫基底實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1104">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="98f6b-1105">這個方法的目的是有點類似[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]上的事件模式 \* 方法： 它會提供方法來處理從衍生的類別，而不是執行個體處理常式的類別處理常式與相符的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1105">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="98f6b-1106">在此情況下，符合的事件是路由的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1106">In this case the matching event is a routed event.</span></span> <span data-ttu-id="98f6b-1107">On \* 方法的實作模式是不同的路由事件，因為路由的事件可能已引發由子項目，不一定會叫用處理常式，因此您的實作必須接受事件引數的來源項目帳戶屬性 （和不應該嘗試重新引發該事件，在大部分情況下）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1107">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="98f6b-1108">子類別<xref:System.Windows.FrameworkElement>可以選擇在路由收到事件時呼叫私用類別處理常式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1108">Subclasses of <xref:System.Windows.FrameworkElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="98f6b-1109">一個可能的案例是取得事件的引數，並謹慎地將事件標示為已處理，以縮短路由。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1109">One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="frameworkElement.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="98f6b-1110">舊的父項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1110">The old parent element.</span></span> <span data-ttu-id="98f6b-1111">可能是 <see langword="null" />，表示項目之前沒有視覺父項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1111">May be <see langword="null" /> to indicate that the element did not have a visual parent previously.</span></span></param>
        <summary><span data-ttu-id="98f6b-1112">在視覺化樹狀結構中這個項目的父項目變更時叫用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1112">Invoked when the parent of this element in the visual tree is changed.</span></span> <span data-ttu-id="98f6b-1113">覆寫 <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1113">Overrides <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1114">視覺化樹狀結構是有別於邏輯樹狀結構，因為後者省略不 （例如集合），以視覺化的方式，呈現的項目，並展開其主題和樣式複合 （compositing） 根據某些項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1114">The visual tree is potentially different from the logical tree because it omits elements that do not render visually, such as collections, and expands some elements on the basis of their theme and style compositing.</span></span> <span data-ttu-id="98f6b-1115">如需詳細資訊，請參閱 [WPF 中的樹狀結構](~/docs/framework/wpf/advanced/trees-in-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1115">For more information, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-1116">這個虛擬方法的預設實作會查詢以取得新的父項、 引發各種初始化事件，及設定內部的旗標，初始化狀態的相關<see cref="T:System.Windows.FrameworkElement" />視情況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1116">The default implementation of this virtual method queries for the new parent, raises various initialization events, and sets internal flags about initialization state of the <see cref="T:System.Windows.FrameworkElement" /> as appropriate.</span></span> <span data-ttu-id="98f6b-1117">最後，它會呼叫後續的基底實作，做為宣告所<see cref="T:System.Windows.UIElement" />，接著呼叫其基底<see cref="T:System.Windows.Media.Visual" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1117">Finally, it calls the successive base implementations as declared by <see cref="T:System.Windows.UIElement" />, which in turn calls its base in <see cref="T:System.Windows.Media.Visual" />.</span></span> <span data-ttu-id="98f6b-1118">請務必呼叫基底實作，以保留此行為，否則宣告為另一個元素的子系時，這個項目的項目樹狀結構行為可能無法如預期般運作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1118">Always call the base implementation to preserve this behavior, otherwise the element tree behavior for this element when declared as a child of another element may not be as expected.</span></span>  
  
<span data-ttu-id="98f6b-1119">設定現有的少數[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]類別會覆寫這個方法，例如： <see cref="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />， <see cref="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1119">A few existing [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] classes override this method, for example: <see cref="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />, <see cref="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span></span> <span data-ttu-id="98f6b-1120">最常見的案例是強制執行新的父系必須是特定類型。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1120">The most common scenario is to enforce that the new parent must be a particular type.</span></span> <span data-ttu-id="98f6b-1121">這可能涉及新的父項失敗的型別測試的一些方式時擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1121">This might involve throwing an exception if the new parent failed some manner of type test.</span></span> <span data-ttu-id="98f6b-1122">此案例中的特製化的版本存在於清單項目和功能表項目，其中沒有意義的任何父代之外 visual 擁有適當的集合，來儲存它們的實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1122">A specialized version of this scenario exists in implementations for list items and menu items, which do not make any sense outside a parent visual that owns an appropriate collection to store them in.</span></span> <span data-ttu-id="98f6b-1123">請注意，這種情況下不一定會引發例外狀況，因為可能會依賴 「 一般 」 父母不屬於暫時的項目重設父代的設計工具案例。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1123">Note that these cases do not necessarily raise exceptions, because there might be designer scenarios that rely on reparenting elements that are momentarily without their "regular" parents.</span></span>  
  
<span data-ttu-id="98f6b-1124">這個方法也會覆寫中特定項目，它們通常是根項目，例如<see cref="T:System.Windows.Window" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1124">This method is also overridden in certain elements that are typically the root element, such as  <see cref="T:System.Windows.Window" />.</span></span> <span data-ttu-id="98f6b-1125">另一種情況是明顯的根目錄中的項目標記，但其中的項目自動產生更高的基礎結構已編譯的邏輯樹狀結構中 (例如<see cref="T:System.Windows.Controls.Page" />)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1125">Another case is elements that are the apparent root element in markup but which autogenerate a greater infrastructure in a compiled logical tree (such as <see cref="T:System.Windows.Controls.Page" />).</span></span> <span data-ttu-id="98f6b-1126"><see cref="T:System.Windows.Window" />和<see cref="T:System.Windows.Controls.Page" />實作刻意密封方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1126">The <see cref="T:System.Windows.Window" /> and <see cref="T:System.Windows.Controls.Page" /> implementations deliberately seal the method.</span></span></para></block>
        <altmember cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="OverridesDefaultStyle">
      <MemberSignature Language="C#" Value="public bool OverridesDefaultStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OverridesDefaultStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.OverridesDefaultStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property OverridesDefaultStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OverridesDefaultStyle { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OverridesDefaultStyle : bool with get, set" Usage="System.Windows.FrameworkElement.OverridesDefaultStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1127">取得或設定此元素的樣式屬性是否來自佈景主題樣式的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1127">Gets or sets a value that indicates whether this element incorporates style properties from theme styles.</span></span></summary>
        <value><span data-ttu-id="98f6b-1128">如果這個項目不會使用佈景主題樣式，所有從樣式產生的屬性都來自本機應用程式樣式，且佈景主題樣式屬性不會套用，則為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1128"><see langword="true" /> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply.</span></span> <span data-ttu-id="98f6b-1129">如果應用程式樣式先套用，然後針對不是在應用程式樣式中具體設定的屬性套用佈景主題樣式則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1129"><see langword="false" /> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.</span></span> <span data-ttu-id="98f6b-1130">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1130">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1131">這個屬性的最常見的用法是提供佈景主題樣式的樣式 setter 內間接使用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1131">The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="98f6b-1132">如果您設定<xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A>至`true`控制，您將會隱藏的佈景主題樣式所提供的預設控制項範本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1132">If you set <xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A> to `true` on a control, you will be suppressing the default control template supplied by the theme styles.</span></span> <span data-ttu-id="98f6b-1133">該控制項範本通常會包含內容的主講人和其他複合的項目，提供基本[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]功能和控制項的視覺效果。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1133">That control template typically includes the content presenter and other composited elements that provide basic [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] functionality and visualization for the control.</span></span> <span data-ttu-id="98f6b-1134">如果您想要繼續支援相同的功能，做為預設佈景主題樣式的控制項，您必須提供替代樣式與複寫相同的結構的控制項範本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1134">If you want the control to continue to support the same features as the default theme styles, you must supply an alternate style with a control template that replicates the same structure.</span></span> <span data-ttu-id="98f6b-1135">如需詳細資訊，請參閱[控制項撰寫概觀](~/docs/framework/wpf/controls/control-authoring-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1135">For more information, see [Control Authoring Overview](~/docs/framework/wpf/controls/control-authoring-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_OverridesDefaultStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-1136">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1136">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1137">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1137">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.OverridesDefaultStyleProperty>|  
|<span data-ttu-id="98f6b-1138">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-1138">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverridesDefaultStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OverridesDefaultStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OverridesDefaultStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.OverridesDefaultStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OverridesDefaultStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OverridesDefaultStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OverridesDefaultStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.OverridesDefaultStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1139">識別 <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1139">Identifies the <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.FrameworkElement.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1140">取得這個項目的邏輯父項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1140">Gets the logical parent  element of this element.</span></span></summary>
        <value><span data-ttu-id="98f6b-1141">此項目的邏輯父代。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1141">This element's logical parent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1142"><xref:System.Windows.FrameworkElement.Parent%2A> 可能是`null`中的項目已具現化，而未附加到任何最終會連接到的頁面層級的根項目中或應用程式物件的邏輯樹狀結構的情況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1142"><xref:System.Windows.FrameworkElement.Parent%2A> may be `null` in cases where an element was instantiated, but is not attached to any logical tree that eventually connects to the page level root element, or the application object.</span></span>  
  
 <span data-ttu-id="98f6b-1143">請注意，根據您的應用程式的功能，有可能變更邏輯父項目保留這個屬性的值並不會反映該變更。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1143">Note that the logical parent of an element can potentially change depending on your application's functionality, and keeping the value of this property will not reflect that change.</span></span> <span data-ttu-id="98f6b-1144">您通常應該取得的值之前您需要它。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1144">You typically should get the value immediately before you need it.</span></span>  
  
 <span data-ttu-id="98f6b-1145">請參閱[WPF 中的樹狀結構](~/docs/framework/wpf/advanced/trees-in-wpf.md)邏輯樹狀結構周遊的詳細資訊和案例，使用<xref:System.Windows.FrameworkElement.Parent%2A>適當探索是這項技術的父項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1145">See [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md) for more information about logical tree  traversal, and the scenarios where using  <xref:System.Windows.FrameworkElement.Parent%2A> as a technique of parent element discovery is appropriate.</span></span>  
  
 <span data-ttu-id="98f6b-1146">屬性引擎有可能重新計算之元素的所有屬性值時，它會重設父代，因為有些屬性繼承邏輯樹狀結構的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1146">The property engine will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree.</span></span> <span data-ttu-id="98f6b-1147"><xref:System.Windows.FrameworkElement.DataContext%2A>套用的項目會重設父代時，也可以變更繫結。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1147">The <xref:System.Windows.FrameworkElement.DataContext%2A> that applies for bindings can also change when elements are reparented.</span></span>  
  
 <span data-ttu-id="98f6b-1148">變更項目的父代通常只是透過操作的集合，使用專用新增或移除方法，或透過設定內容屬性的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1148">Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.</span></span>  
  
 <span data-ttu-id="98f6b-1149">使用的最常見的案例<xref:System.Windows.FrameworkElement.Parent%2A>屬性是要取得的參考，然後以取得各種<xref:System.Windows.FrameworkElement>從父代的屬性值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1149">The most typical scenario for using the <xref:System.Windows.FrameworkElement.Parent%2A> property is to obtain a reference and then get various <xref:System.Windows.FrameworkElement> property values from the parent.</span></span> <span data-ttu-id="98f6b-1150">如需範本，<xref:System.Windows.FrameworkElement.Parent%2A>範本的最終會`null`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1150">For templates, the <xref:System.Windows.FrameworkElement.Parent%2A> of the template eventually will be `null`.</span></span> <span data-ttu-id="98f6b-1151">取得略過此點，並將延伸至邏輯樹狀結構的範本會實際套用，請使用<xref:System.Windows.FrameworkElement.TemplatedParent%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1151">To get past this point and extend into the logical tree where the template is actually applied, use <xref:System.Windows.FrameworkElement.TemplatedParent%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-1152">請注意這個屬性不會報告從邏輯樹狀結構父項的變化的案例中的視覺化樹狀結構父代。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1152">Note that this property does not report visual tree parents in cases where these vary from the logical tree parents.</span></span> <span data-ttu-id="98f6b-1153">視覺化樹狀結構父代不是一般的應用程式的情況下通常特別重要，但可能會針對某些視覺層級的情況下所需的父項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1153">Visual tree parents are not typically important for general application cases but may be the desired parent elements for certain visual level cases.</span></span> <span data-ttu-id="98f6b-1154">請參閱 <xref:System.Windows.Media.VisualTreeHelper>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1154">See <xref:System.Windows.Media.VisualTreeHelper>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-1155">下列範例會顯示項目的父代，會檢查，然後再使用從父代的屬性值來比對的子系項目上設定屬性的程式碼。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1155">The following example shows code that checks for an element's parent, and then uses property values from the parent to set properties on the child element to match.</span></span> <span data-ttu-id="98f6b-1156">在此情況下，這些是會影響轉譯大小的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1156">In this case these are properties that affect the rendering size.</span></span>  
  
 [!code-csharp[GeometryDesigner#FEParentProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometryDesigner/CSharp/Window1.xaml.cs#feparentproperty)]
 [!code-vb[GeometryDesigner#FEParentProperty](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometryDesigner/visualbasic/window1.xaml.vb#feparentproperty)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.TemplatedParent" />
        <altmember cref="T:System.Windows.LogicalTreeHelper" />
      </Docs>
    </Member>
    <Member MemberName="ParentLayoutInvalidated">
      <MemberSignature Language="C#" Value="protected internal virtual void ParentLayoutInvalidated (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ParentLayoutInvalidated(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ParentLayoutInvalidated (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ParentLayoutInvalidated(System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member ParentLayoutInvalidated : System.Windows.UIElement -&gt; unit&#xA;override this.ParentLayoutInvalidated : System.Windows.UIElement -&gt; unit" Usage="frameworkElement.ParentLayoutInvalidated child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="98f6b-1157">報告變更的子項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1157">The child element reporting the change.</span></span></param>
        <summary><span data-ttu-id="98f6b-1158">在 <see cref="T:System.Windows.FrameworkElement" /> 的特定子類別中支援累加配置實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1158">Supports incremental layout implementations in specialized subclasses of <see cref="T:System.Windows.FrameworkElement" />.</span></span> <span data-ttu-id="98f6b-1159"><see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" /> 會在子項目使得屬性失效時叫用，該屬性在中繼資料內已標記，會在配置期間影響父代的測量或排列傳遞。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1159"><see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" /> is invoked when a child element has invalidated a property that is marked in metadata as affecting the parent's measure or arrange passes during layout.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1160">如果這個項目有子項目某些屬性已失效，及屬性已標記為<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>或<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>屬性中繼資料，在註冊期間，這個方法會叫用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1160">If this element has a child element on which some property was invalidated and the property was marked as <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> or <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> in property metadata during registration, this method is invoked.</span></span> <span data-ttu-id="98f6b-1161">方法引動過程會告知哪個特定子項目必須重新測量，如果這個項目支援部分的版面配置的 （累加） 更新的父項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1161">The method invocation notifies the parent element which particular child element must be re-measured if this element supports partial (incremental) update of layout.</span></span>  
  
 <span data-ttu-id="98f6b-1162">根據預設，<xref:System.Windows.FrameworkElement>不支援累加配置，然後在<xref:System.Windows.FrameworkElement>類別此方法有沒有預設的實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1162">By default, <xref:System.Windows.FrameworkElement> does not support incremental layout, and in the <xref:System.Windows.FrameworkElement> class this method has no default implementation.</span></span> <span data-ttu-id="98f6b-1163">覆寫此方法時，可能需要的案例並不常見，因為它需要您修改預設的版面配置系統行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1163">The scenario where overriding this method would be necessary is not common, because it requires you to modify the default layout system behavior.</span></span>  
  
 <span data-ttu-id="98f6b-1164">範例實作的狀況可能是類別是否有可能的子項目，明顯比 WPF 架構層級配置系統更嚴格的型別限制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1164">An example implementation scenario might be if a class had type limitations for possible child elements that are significantly more restrictive than the WPF framework-level layout system.</span></span> <span data-ttu-id="98f6b-1165">由於這些自訂項目，屬性變更可能會刻意延後當您實作一些自訂的版面配置行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1165">Because of the nature of these custom elements, property changes could be deliberately deferred when you implement some custom layout behavior.</span></span> <span data-ttu-id="98f6b-1166">比方說，量值/排列方法覆寫，嘗試最佳化的子項目會呈現階段，可能會延後，特定類型的變更通常會導致另一個版面配置階段。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1166">For instance, measure/arrange method overrides, which try to optimize the child element render pass, could be deferred for certain types of changes that would ordinarily result in another layout pass.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="frameworkElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="98f6b-1167">應用於決定預期焦點變更的方向。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1167">The direction for which a prospective focus change should be determined.</span></span></param>
        <summary><span data-ttu-id="98f6b-1168">決定下一個項目，該項目會針對所提供的焦點移動方向，接收相對於此項目的焦點，但是不會實際移動焦點。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1168">Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.</span></span></summary>
        <returns><span data-ttu-id="98f6b-1169">如果焦點實際上有周遊時，焦點會移動到的下一個項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1169">The next element that focus would move to if focus were actually traversed.</span></span> <span data-ttu-id="98f6b-1170">如果無法依所提供的方向相對於此項目移動焦點，則可能傳回 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1170">May return <see langword="null" /> if focus cannot be moved relative to this element for the provided direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1171"><xref:System.Windows.FrameworkElement.MoveFocus%2A> 是沒有實際移動焦點的相關的方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1171"><xref:System.Windows.FrameworkElement.MoveFocus%2A> is the related method that actually does move focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-1172">下列範例會實作處理數種可能的按鈕輸入，表示可能發生的每個按鈕處理常式<xref:System.Windows.Input.FocusNavigationDirection>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1172">The following example implements a handler that handles several possible button inputs, each button representing a possible <xref:System.Windows.Input.FocusNavigationDirection>.</span></span> <span data-ttu-id="98f6b-1173">處理常式會追蹤目前的鍵盤焦點和呼叫的項目<xref:System.Windows.FrameworkElement.PredictFocus%2A>該項目，並指定適當<xref:System.Windows.Input.FocusNavigationDirection>初始化為<xref:System.Windows.Input.TraversalRequest>類型提供的參數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1173">The handler tracks the element with current keyboard focus, and calls <xref:System.Windows.FrameworkElement.PredictFocus%2A> on that element, and specifies the appropriate <xref:System.Windows.Input.FocusNavigationDirection> as initialization for the <xref:System.Windows.Input.TraversalRequest> type parameter provided.</span></span> <span data-ttu-id="98f6b-1174">而不需要移動的項目，做為<xref:System.Windows.FrameworkElement.MoveFocus%2A>一樣，這個處理常式會變更的視覺效果進行預測的焦點目的地實體的維度。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1174">Instead of moving to that element as <xref:System.Windows.FrameworkElement.MoveFocus%2A> would do, the handler changes the physical dimensions of the predicted focus destination for visualization purposes.</span></span>  
  
 [!code-csharp[FocusSample#FEPredictFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#fepredictfocus)]
 [!code-vb[FocusSample#FEPredictFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#fepredictfocus)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="98f6b-1175">在 <see cref="T:System.Windows.Input.TraversalRequest" /> 中指定下列其中一個方向：<see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.First" />、<see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1175">Specified one of the following directions in the <see cref="T:System.Windows.Input.TraversalRequest" />: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />.</span></span> <span data-ttu-id="98f6b-1176">這些方向對 <see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> 而言不是合法的 (但對 <see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> 而言是合法的)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1176">These directions are not legal for <see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (but they are legal for <see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />).</span></span></exception>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="member this.RegisterName : string * obj -&gt; unit" Usage="frameworkElement.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98f6b-1177">要用於指定之「名稱-物件」對應的名稱。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1177">Name to use for the specified name-object mapping.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="98f6b-1178">對應的物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1178">Object for the mapping.</span></span></param>
        <summary><span data-ttu-id="98f6b-1179">提供可簡化對 <see cref="T:System.Windows.NameScope" /> 註冊方法之存取的存取子 (Accessor)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1179">Provides an accessor that simplifies access to the <see cref="T:System.Windows.NameScope" /> registration method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1180">這個方法是很便利的方法呼叫<xref:System.Windows.NameScope.RegisterName%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1180">This method is a convenience method for calling <xref:System.Windows.NameScope.RegisterName%2A>.</span></span> <span data-ttu-id="98f6b-1181">實作會檢查後續的父項目，直到它找到適用<xref:System.Windows.NameScope>實作中，找到所尋找的項目，實作<xref:System.Windows.Markup.INameScope>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1181">The implementation will check successive parent elements until it finds the applicable <xref:System.Windows.NameScope> implementation, which is found by finding an element that implements <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="98f6b-1182">如需有關命名範圍的詳細資訊，請參閱[WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1182">For more information about namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="98f6b-1183">呼叫<xref:System.Windows.FrameworkElement.RegisterName%2A>才能正確地將連結的應用程式程式碼中建立時的動畫分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1183">Calling <xref:System.Windows.FrameworkElement.RegisterName%2A> is necessary in order to correctly hook up animation storyboards for applications when created in code.</span></span> <span data-ttu-id="98f6b-1184">這是因為其中一個索引鍵屬性，分鏡腳本表現<xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>，使用執行階段名稱查閱，而不是能夠將目標項目的參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1184">This is because one of the key storyboard properties, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, uses a run-time name lookup instead of being able to take a reference to a target element.</span></span> <span data-ttu-id="98f6b-1185">這是，則為 true，即使該元素是由參考從程式碼存取。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1185">This is true even if that element is accessible by reference from the code.</span></span> <span data-ttu-id="98f6b-1186">如需有關為什麼您需要註冊的分鏡腳本目標名稱的詳細資訊，請參閱[分鏡腳本概觀](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1186">For more information on why you need to register names for storyboard targets, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#NameScopeExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/ScopeExample.cs#namescopeexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#NameScopeExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/scopeexample.vb#namescopeexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLogicalChild">
      <MemberSignature Language="C#" Value="protected internal void RemoveLogicalChild (object child);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RemoveLogicalChild(object child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RemoveLogicalChild (child As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RemoveLogicalChild(System::Object ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveLogicalChild : obj -&gt; unit" Usage="frameworkElement.RemoveLogicalChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="98f6b-1187">要移除的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1187">The element to remove.</span></span></param>
        <summary><span data-ttu-id="98f6b-1188">從這個項目的邏輯樹狀結構中移除提供的物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1188">Removes the provided object from this element's logical tree.</span></span> <span data-ttu-id="98f6b-1189"><see cref="T:System.Windows.FrameworkElement" /> 更新受影響的邏輯樹狀結構父指標，以便與刪除保持同步。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1189"><see cref="T:System.Windows.FrameworkElement" /> updates the affected logical tree parent pointers to keep in sync with this deletion.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1190">使用此方法實作的物件，表示項目的邏輯子項的集合。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1190">Use this method for the implementation of collections on objects that represent logical children of an element.</span></span> <span data-ttu-id="98f6b-1191">這可能會在屬性 getter 或 setter 的類別處理常式中完成`Changed`事件、 建構函式，或在集合中的類型本身。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1191">This might be done in property getters or setters, class handlers of `Changed` events, constructors, or within the collection types themselves.</span></span>  
  
 <span data-ttu-id="98f6b-1192">針對控制項作者，操作邏輯樹狀結構，在此層級不是建議的作法，除非提供基底控制項類別的內容模型沒有適當。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1192">For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the provided base control class' content models are appropriate.</span></span> <span data-ttu-id="98f6b-1193">層級的子類別化，請考慮<xref:System.Windows.Controls.ContentControl>， <xref:System.Windows.Controls.ItemsControl>，和<xref:System.Windows.Controls.HeaderedItemsControl>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1193">Consider subclassing at the level of <xref:System.Windows.Controls.ContentControl>, <xref:System.Windows.Controls.ItemsControl>, and <xref:System.Windows.Controls.HeaderedItemsControl>.</span></span> <span data-ttu-id="98f6b-1194">這些類別提供特定的強制執行，透過專用的邏輯子系的內容模型[!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)]，以及通常希望出現在其他功能的支援[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]控制項，例如透過範本的樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1194">These classes provide a content model with particular enforcement of logical children through dedicated [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], as well as support for other features typically desirable in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] control such as styling through templates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-1195">下列範例會實作`Child`自訂屬性<xref:System.Windows.FrameworkElement>執行它自己的視覺分層實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1195">The following example implements a `Child` property on a custom <xref:System.Windows.FrameworkElement> that does its own visual layer implementation.</span></span> <span data-ttu-id="98f6b-1196">屬性的 setter 經過設計，如果值變更時，從邏輯樹狀結構，以及特定類別的視覺集合移除的舊值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1196">The property's setter is designed so that if the value changes, the old value is removed from the logical tree, as well as a class-specific visual collection.</span></span> <span data-ttu-id="98f6b-1197">會快取的值，並再新增標準 WPF 架構層級邏輯樹狀結構和自訂的視覺集合的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1197">The values are cached, and then the new value is added to both the standard WPF framework level logical tree and the custom visual collection.</span></span>  
  
 [!code-csharp[CompositionTargetRenderingAnimations#AddRemoveLogicalChild](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositionTargetRenderingAnimations/CSharp/ParticleEffectExamples/OverlayRenderDecorator.cs#addremovelogicalchild)]
 [!code-vb[CompositionTargetRenderingAnimations#AddRemoveLogicalChild](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CompositionTargetRenderingAnimations/visualbasic/particleeffectexamples/overlayrenderdecorator.vb#addremovelogicalchild)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RequestBringIntoView">
      <MemberSignature Language="C#" Value="public event System.Windows.RequestBringIntoViewEventHandler RequestBringIntoView;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RequestBringIntoViewEventHandler RequestBringIntoView" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RequestBringIntoView As RequestBringIntoViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RequestBringIntoViewEventHandler ^ RequestBringIntoView;" />
      <MemberSignature Language="F#" Value="member this.RequestBringIntoView : System.Windows.RequestBringIntoViewEventHandler " Usage="member this.RequestBringIntoView : System.Windows.RequestBringIntoViewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RequestBringIntoViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1198">在這個項目上呼叫 <see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" /> 時發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1198">Occurs when <see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" /> is called on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1199">這個事件表示至父代<xref:System.Windows.Controls.ScrollViewer>（或衍生類別中） 所引發的項目<xref:System.Windows.FrameworkElement.RequestBringIntoView>事件應顯示出來的可捲動區域內。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1199">This event indicates to a parent <xref:System.Windows.Controls.ScrollViewer> (or derived class) that the element that raises the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event should be made visible within the scrollable region.</span></span> <span data-ttu-id="98f6b-1200"><xref:System.Windows.Controls.ScrollViewer>接著會將標示<xref:System.Windows.FrameworkElement.RequestBringIntoView>為已處理，所使用之事件的類別處理的事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1200">The <xref:System.Windows.Controls.ScrollViewer> will then mark the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event as handled, by using class handling of the event.</span></span> <span data-ttu-id="98f6b-1201">一般而言<xref:System.Windows.FrameworkElement.RequestBringIntoView>事件的資料應該不會標示為已處理的未控制的捲動區域，任何類別或任何執行個體處理常式，因為這樣會干擾呼叫的項目，目的是<xref:System.Windows.FrameworkElement.BringIntoView%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1201">In general <xref:System.Windows.FrameworkElement.RequestBringIntoView> event data should not be marked handled by any class that does control a scrolling region, or by any instance handler, because doing so would interfere with the intended goal of the element that called <xref:System.Windows.FrameworkElement.BringIntoView%2A>.</span></span>  
  
<a name="routedEventInfo_RequestBringIntoView"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="98f6b-1202">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1202">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1203">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1203">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.RequestBringIntoViewEvent>|  
|<span data-ttu-id="98f6b-1204">路由策略</span><span class="sxs-lookup"><span data-stu-id="98f6b-1204">Routing strategy</span></span>|<span data-ttu-id="98f6b-1205">事件反昇</span><span class="sxs-lookup"><span data-stu-id="98f6b-1205">Bubbling</span></span>|  
|<span data-ttu-id="98f6b-1206">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="98f6b-1206">Delegate</span></span>|<xref:System.Windows.RequestBringIntoViewEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
        <altmember cref="T:System.Windows.Controls.ScrollViewer" />
      </Docs>
    </Member>
    <Member MemberName="RequestBringIntoViewEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent RequestBringIntoViewEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent RequestBringIntoViewEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.RequestBringIntoViewEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RequestBringIntoViewEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ RequestBringIntoViewEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable RequestBringIntoViewEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.RequestBringIntoViewEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1207">識別 <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1207">Identifies the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resources : System.Windows.ResourceDictionary with get, set" Usage="System.Windows.FrameworkElement.Resources" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IHaveResources.Resources</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1208">取得或設定在本機定義的資源字典。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1208">Gets or sets the locally-defined resource dictionary.</span></span></summary>
        <value><span data-ttu-id="98f6b-1209">目前在本機定義的資源字典，其中每項資源都可以使用索引鍵存取。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1209">The current locally-defined dictionary of resources, where each resource can be accessed by key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1210">可以完全或部分中定義的資源字典[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]通常會建立為屬性項目，和通常是在針對任何個別的頁面或應用程式的根項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1210">Resource dictionaries that can be defined completely or partially in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] are typically created as a property element, and are typically on the root element for any individual page or for the application.</span></span> <span data-ttu-id="98f6b-1211">放置在此層級的資源字典可讓您更輕鬆地尋找從個別的子頁面中的項目 （或從任何頁面上，在應用程式的情況下）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1211">Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case).</span></span> <span data-ttu-id="98f6b-1212">在大部分的應用程式案例中，我們建議樣式定義為物件項目內的資源字典中，或定義為外部的資源，以便讓整個樣式資源可彼此獨立 （這種方法有助於個別設計工具團隊的職責區隔需要加以編輯的實體檔案的開發人員責任）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1212">In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).</span></span>  
  
 <span data-ttu-id="98f6b-1213">請注意，這個屬性會傳回該項目內直接宣告的資源字典。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1213">Note that this property returns only the resource dictionary declared directly within that element.</span></span> <span data-ttu-id="98f6b-1214">這是不同於實際資源查閱程序，其中的子元素可以存取任何遞迴地向上搜尋每個父項目中定義的資源。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1214">This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.</span></span>  
  
 <span data-ttu-id="98f6b-1215">資源也可以從集合中的程式碼所參考，但請注意，在建立資源[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]絕對無法供存取直到之後<xref:System.Windows.FrameworkElement.Loaded>宣告字典項目引發。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1215">Resources can also be referenced by code from within the collection, but be aware that resources created in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will definitely not be accessible until after <xref:System.Windows.FrameworkElement.Loaded> is raised by the element that declares the dictionary.</span></span> <span data-ttu-id="98f6b-1216">以非同步方式並不會剖析資源的事實上，甚至<xref:System.Windows.FrameworkElement.Loaded>事件可確保您可以參考[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]定義資源。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1216">In fact, resources are parsed asynchronously and not even the <xref:System.Windows.FrameworkElement.Loaded> event is an assurance that you can reference a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resource.</span></span> <span data-ttu-id="98f6b-1217">基於這個理由，您應該通常只能存取[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]定義為一部分的執行階段程式碼，或透過其他的資源[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]技術，例如樣式或屬性值的資源擴充功能參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1217">For this reason you should generally only access [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resources as part of run-time code, or through other [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] techniques such as styles or resource extension references for attribute values.</span></span> <span data-ttu-id="98f6b-1218">當您透過程式碼存取資源時，這基本上等於是從進行參考[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1218">When you access resources through code, it is essentially equivalent to a  reference made from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 <span data-ttu-id="98f6b-1219">基礎<xref:System.Windows.ResourceDictionary>支援加入、 移除或使用程式碼來查詢集合內的資源所需的方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1219">The underlying <xref:System.Windows.ResourceDictionary> supports the methods required to add, remove or query resources from within the collection by using code.</span></span> <span data-ttu-id="98f6b-1220"><xref:System.Windows.FrameworkElement.Resources%2A>屬性是可為支援的案例是完全取代的項目是一個新的或不同的資源集合<xref:System.Windows.ResourceDictionary>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1220">The <xref:System.Windows.FrameworkElement.Resources%2A> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <xref:System.Windows.ResourceDictionary>.</span></span>  
  
 <span data-ttu-id="98f6b-1221">請注意，[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]所示的語法不包括的項目<xref:System.Windows.ResourceDictionary>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1221">Notice that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax shown does not include an element for the <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="98f6b-1222">這是隱含的集合語法; 的範例代表集合項目的標記就可以省略。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1222">This is an example of implicit collection syntax; a tag representing the collection element can be omitted.</span></span> <span data-ttu-id="98f6b-1223">改為指定為項目加入至集合的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1223">The elements that are added as items to the collection are specified instead.</span></span> <span data-ttu-id="98f6b-1224">如需有關隱含集合並[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，請參閱 < [XAML 語法詳細資料](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1224">For more information about implicit collections and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span> <span data-ttu-id="98f6b-1225">一種情況其中<xref:System.Windows.ResourceDictionary>仍然明確指定為項目才不會導入合併的字典，在此情況下通常的任何子項目<xref:System.Windows.ResourceDictionary>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1225">One case where a <xref:System.Windows.ResourceDictionary> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="98f6b-1226">如需詳細資訊，請參閱 <<c0> [ 合併的資源字典](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1226">For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span></span>  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="98f6b-1227">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="98f6b-1227">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>  
```  
  
<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-1228">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-1228">XAML Values</span></span>  
 <span data-ttu-id="98f6b-1229">*oneOrMoreResourceElements*</span><span class="sxs-lookup"><span data-stu-id="98f6b-1229">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="98f6b-1230">一或多個物件項目，其中每個定義的資源。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1230">One or more object elements, each of which defines a resource.</span></span> <span data-ttu-id="98f6b-1231">每個資源屬性的項目在每個<xref:System.Windows.ResourceDictionary>必須有唯一的值[X:key 指示詞](~/docs/framework/xaml-services/x-key-directive.md)，從擷取的值時做為唯一的索引鍵<xref:System.Windows.ResourceDictionary>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1231">Each resource property element within each <xref:System.Windows.ResourceDictionary> must have a unique value for the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md), which serves as the unique key when values are retrieved from the <xref:System.Windows.ResourceDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Application.Resources" />
        <related type="Article" href="https://msdn.microsoft.com/library/1985cd45-f197-42d5-b75e-886add64b248"><span data-ttu-id="98f6b-1232">X:key 屬性</span><span class="sxs-lookup"><span data-stu-id="98f6b-1232">x:Key Attribute</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBinding">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="98f6b-1233">將繫結附加至指定相依性屬性的這個項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1233">Attaches a binding to this element for the specified dependency property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpression SetBinding (System.Windows.DependencyProperty dp, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpression SetBinding(class System.Windows.DependencyProperty dp, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBinding (dp As DependencyProperty, path As String) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpression ^ SetBinding(System::Windows::DependencyProperty ^ dp, System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetBinding : System.Windows.DependencyProperty * string -&gt; System.Windows.Data.BindingExpression" Usage="frameworkElement.SetBinding (dp, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="98f6b-1234">識別要建立繫結的目的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1234">Identifies the destination property where the binding should be established.</span></span></param>
        <param name="path"><span data-ttu-id="98f6b-1235">用於繫結之屬性的來源屬性名稱或路徑。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1235">The source property name or the path to the property used for the binding.</span></span></param>
        <summary><span data-ttu-id="98f6b-1236">根據提供給資料來源做為路徑限定性條件的來源屬性名稱，將繫結附加至這個項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1236">Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.</span></span></summary>
        <returns><span data-ttu-id="98f6b-1237">記錄繫結的條件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1237">Records the conditions of the binding.</span></span> <span data-ttu-id="98f6b-1238">這個傳回值對錯誤檢查很有用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1238">This return value can be useful for error checking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1239">這個方法是很便利的方法呼叫<xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>，傳遞做為目前的執行個體<xref:System.Windows.DependencyObject>，並建立新<xref:System.Windows.Data.Binding>根據所提供`path`參數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1239">This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, which passes the current instance as the <xref:System.Windows.DependencyObject>, and creates a new <xref:System.Windows.Data.Binding> based on the provided `path` parameter.</span></span> <span data-ttu-id="98f6b-1240">此簽章會更方便，如果您要建立簡單的預設繫結項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1240">This signature is more convenient if you are establishing a simple default binding.</span></span> <span data-ttu-id="98f6b-1241">如果您要指定非預設的條件，任何繫結屬性，或想要使用<xref:System.Windows.Data.MultiBinding>或是<xref:System.Windows.Data.PriorityBinding>，您應該使用<xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29>簽章。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1241">If you need to specify any binding properties to non-default conditions, or want to use a <xref:System.Windows.Data.MultiBinding> or <xref:System.Windows.Data.PriorityBinding>,you should use the <xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> signature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-1242">下列範例會設定使用特定路徑的繫結。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1242">The following example sets a binding using a specific path.</span></span>  
  
 [!code-csharp[BaseElementsSmorgasbord#SetBindingPath](~/samples/snippets/csharp/VS_Snippets_Wpf/BaseElementsSmorgasbord/CSharp/Page1.xaml.cs#setbindingpath)]
 [!code-vb[BaseElementsSmorgasbord#SetBindingPath](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BaseElementsSmorgasbord/visualbasic/page1.xaml.vb#setbindingpath)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBinding (dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="member this.SetBinding : System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; System.Windows.Data.BindingExpressionBase" Usage="frameworkElement.SetBinding (dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="98f6b-1243">識別應該要建立繫結的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1243">Identifies the property where the binding should be established.</span></span></param>
        <param name="binding"><span data-ttu-id="98f6b-1244">代表資料繫結的詳細規格。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1244">Represents the specifics of the data binding.</span></span></param>
        <summary><span data-ttu-id="98f6b-1245">根據提供的繫結物件，將繫結附加至這個項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1245">Attaches a binding to this element, based on the provided binding object.</span></span></summary>
        <returns><span data-ttu-id="98f6b-1246">記錄繫結的條件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1246">Records the conditions of the binding.</span></span> <span data-ttu-id="98f6b-1247">這個傳回值對錯誤檢查很有用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1247">This return value can be useful for error checking.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1248">這個方法是很便利的方法呼叫<xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>，傳遞做為目前的執行個體<xref:System.Windows.DependencyObject>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1248">This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, which passes the current instance as the <xref:System.Windows.DependencyObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFlowDirection">
      <MemberSignature Language="C#" Value="public static void SetFlowDirection (System.Windows.DependencyObject element, System.Windows.FlowDirection value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFlowDirection(class System.Windows.DependencyObject element, valuetype System.Windows.FlowDirection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFlowDirection (element As DependencyObject, value As FlowDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFlowDirection(System::Windows::DependencyObject ^ element, System::Windows::FlowDirection value);" />
      <MemberSignature Language="F#" Value="static member SetFlowDirection : System.Windows.DependencyObject * System.Windows.FlowDirection -&gt; unit" Usage="System.Windows.FrameworkElement.SetFlowDirection (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FlowDirection" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="98f6b-1249">指定流程方向的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1249">The element that specifies a flow direction.</span></span></param>
        <param name="value"><span data-ttu-id="98f6b-1250">指定方向的列舉值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1250">A value of the enumeration, specifying the direction.</span></span></param>
        <summary><span data-ttu-id="98f6b-1251">設定所提供項目的 <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> 附加屬性值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1251">Sets the value of the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> attached property for the provided element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1252">這個方法支援附加的屬性語法<xref:System.Windows.FrameworkElement.FlowDirection%2A>屬性，因此允許的提供項目子系<xref:System.Windows.FrameworkElement>以指定其父項目中排列的流程方向。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1252">This method supports attached property syntax for the <xref:System.Windows.FrameworkElement.FlowDirection%2A> property, therefore allowing child elements of a provided <xref:System.Windows.FrameworkElement> to specify flow direction for the arrangement within their parent element.</span></span> <span data-ttu-id="98f6b-1253">在目前設定的值<xref:System.Windows.FrameworkElement>，使用 direct[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]存取子<xref:System.Windows.FrameworkElement.FlowDirection%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1253">To set the value on the current <xref:System.Windows.FrameworkElement>, use the direct [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] accessor <xref:System.Windows.FrameworkElement.FlowDirection%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.FlowDirection" />
      </Docs>
    </Member>
    <Member MemberName="SetResourceReference">
      <MemberSignature Language="C#" Value="public void SetResourceReference (System.Windows.DependencyProperty dp, object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResourceReference(class System.Windows.DependencyProperty dp, object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceReference (dp As DependencyProperty, name As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResourceReference(System::Windows::DependencyProperty ^ dp, System::Object ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetResourceReference : System.Windows.DependencyProperty * obj -&gt; unit" Usage="frameworkElement.SetResourceReference (dp, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="98f6b-1254">資源繫結到的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1254">The property to which the resource is bound.</span></span></param>
        <param name="name"><span data-ttu-id="98f6b-1255">資源名稱。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1255">The name of the resource.</span></span></param>
        <summary><span data-ttu-id="98f6b-1256">搜尋具有指定名稱的資源，並針對指定的屬性建立該資源的資源參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1256">Searches for a resource with the specified name and sets up a resource reference to it for the specified property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1257">資源參考是使用類似[DynamicResource 標記延伸](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)標記中。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1257">A resource reference is similar to the use of a [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) in markup.</span></span> <span data-ttu-id="98f6b-1258">資源參考會建立內部運算式提供在執行階段延後基準上所指定屬性的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1258">The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis.</span></span> <span data-ttu-id="98f6b-1259">每次您的資源字典表示變更的值，透過內部事件，或目前的項目重設父代重新評估運算式 （父代變更會變更的字典查閱路徑）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1259">The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
        <altmember cref="P:System.Windows.Application.Resources" />
        <altmember cref="P:System.Windows.FrameworkElement.Resources" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeResources">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ShouldSerializeResources" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeResources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeResources();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeResources : unit -&gt; bool" Usage="frameworkElement.ShouldSerializeResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-1260">傳回序列化 (Serialization) 處理序是否應該將 <see cref="P:System.Windows.FrameworkElement.Resources" /> 屬性的內容序列化。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1260">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Resources" /> property.</span></span></summary>
        <returns><span data-ttu-id="98f6b-1261">如果應序列化 <see cref="P:System.Windows.FrameworkElement.Resources" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1261"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Resources" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1262">這會傳回`true`只要至少一個索引鍵的資源正在本機<xref:System.Windows.FrameworkElement.Resources%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1262">This will return `true` as long as there is at least one keyed resource in the local <xref:System.Windows.FrameworkElement.Resources%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeStyle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ShouldSerializeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeStyle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeStyle();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeStyle : unit -&gt; bool" Usage="frameworkElement.ShouldSerializeStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-1263">傳回序列化 (Serialization) 處理序是否應該將 <see cref="P:System.Windows.FrameworkElement.Style" /> 屬性的內容序列化。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1263">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Style" /> property.</span></span></summary>
        <returns><span data-ttu-id="98f6b-1264">如果應序列化 <see cref="P:System.Windows.FrameworkElement.Style" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1264"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Style" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1265">這會傳回`true`如果<xref:System.Windows.Style>本機設定。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1265">This will return `true` if the <xref:System.Windows.Style> is locally set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTriggers">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTriggers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTriggers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ShouldSerializeTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTriggers () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTriggers();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTriggers : unit -&gt; bool" Usage="frameworkElement.ShouldSerializeTriggers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-1266">傳回序列化 (Serialization) 處理序是否應該將 <see cref="P:System.Windows.FrameworkElement.Triggers" /> 屬性的內容序列化。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1266">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Triggers" /> property.</span></span></summary>
        <returns><span data-ttu-id="98f6b-1267">如果應序列化 <see cref="P:System.Windows.FrameworkElement.Triggers" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1267"><see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Triggers" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1268">這個方法會傳回`true`如果<xref:System.Windows.FrameworkElement.Triggers%2A>屬性在本機設定。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1268">This method returns `true` if the <xref:System.Windows.FrameworkElement.Triggers%2A> property is locally set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.SizeChangedEventHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.SizeChangedEventHandler SizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.SizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SizeChanged As SizeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::SizeChangedEventHandler ^ SizeChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeChanged : System.Windows.SizeChangedEventHandler " Usage="member this.SizeChanged : System.Windows.SizeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1269">當這個項目的 <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> 或 <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> 屬性變更值時發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1269">Occurs when either the <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> or the <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> properties change value on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1270">直接路由的事件不會遵循路由，它們才會處理在相同的項目，其引發。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1270">Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</span></span> <span data-ttu-id="98f6b-1271">直接路由的事件支援其他路由的事件的行為： 它們支援的可存取的處理常式集合，且可用來當做<xref:System.Windows.EventTrigger>樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1271">Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.</span></span>  
  
 <span data-ttu-id="98f6b-1272">版面配置系統會讀取屬性內<xref:System.Windows.SizeChangedEventArgs>此事件，以判斷是否應該在報告的大小變更視為重要的引數類別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1272">The layout system reads properties within the <xref:System.Windows.SizeChangedEventArgs> argument class of this event, to  determine whether the reported size changes should be considered significant.</span></span> <span data-ttu-id="98f6b-1273">這可讓版面配置系統或您的特定控制項版面配置實作，以避免強制版面配置變更，因為舊的和新的高度或寬度值之間以視覺化方式無法察覺的差異。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1273">This allows the layout system or your control-specific layout implementations to avoid forcing a layout change due to visually imperceptible differences between old and new height or width values.</span></span> <span data-ttu-id="98f6b-1274">無法察覺的差異可能是因為浮點資料類型的捨入或相同結果的計算。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1274">The imperceptible differences might be due to rounding or same-result calculations of a floating-point data types.</span></span>  
  
<a name="routedEventInfo_SizeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="98f6b-1275">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1275">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1276">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1276">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.SizeChangedEvent>|  
|<span data-ttu-id="98f6b-1277">路由策略</span><span class="sxs-lookup"><span data-stu-id="98f6b-1277">Routing strategy</span></span>|<span data-ttu-id="98f6b-1278">直接</span><span class="sxs-lookup"><span data-stu-id="98f6b-1278">Direct</span></span>|  
|<span data-ttu-id="98f6b-1279">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="98f6b-1279">Delegate</span></span>|<xref:System.Windows.SizeChangedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Height" />
        <altmember cref="P:System.Windows.FrameworkElement.Width" />
      </Docs>
    </Member>
    <Member MemberName="SizeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SizeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SizeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.SizeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SizeChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.SizeChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1280">識別 <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1280">Identifies the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1281">註冊路由事件時，會建立路由事件識別項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1281">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="98f6b-1282">這些識別項包含用於加入事件擁有者的識別名稱、擁有者類型、處理常式類型、路由策略和公用程式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1282">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="98f6b-1283">您可以使用這些識別項來加入類別處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1283">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="98f6b-1284">如需註冊路由事件的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1284">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="98f6b-1285">如需使用路由事件識別項來加入類別處理常式的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1285">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; SourceUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; SourceUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceUpdated As EventHandler(Of DataTransferEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ SourceUpdated;" />
      <MemberSignature Language="F#" Value="member this.SourceUpdated : EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " Usage="member this.SourceUpdated : System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1286">來源值因與此項目繫結的任何現有屬性變更時發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1286">Occurs when the source value changes for any existing property binding on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1287">此事件建立的別名<xref:System.Windows.Data.Binding.SourceUpdated>引發任何事件<xref:System.Windows.Data.Binding>與這個項目相關聯。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1287">This event creates an alias for the <xref:System.Windows.Data.Binding.SourceUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.</span></span>  
  
<a name="xamlAttributeUsage_SourceUpdated"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-1288">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-1288">XAML Attribute Usage</span></span>  
  
```  
<object SourceUpdated="eventHandler"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Data.Binding.SourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Style Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ Style { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Style with get, set" Usage="System.Windows.FrameworkElement.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1289">取得或設定這個項目呈現時要使用的樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1289">Gets or sets the style used by this element when it is rendered.</span></span></summary>
        <value><span data-ttu-id="98f6b-1290">如有，則為項目已套用的非預設樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1290">The applied, nondefault style for the element, if present.</span></span> <span data-ttu-id="98f6b-1291">否則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1291">Otherwise, <see langword="null" />.</span></span> <span data-ttu-id="98f6b-1292">預設建構 <see cref="T:System.Windows.FrameworkElement" /> 的預設值是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1292">The default for a default-constructed <see cref="T:System.Windows.FrameworkElement" /> is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1293">控制項，通常是預設樣式控制項的佈景主題，從所提供或來自樣式通常由套用至該類型的控制項在網頁或應用程式層級 （隱含樣式） 的資源目前的樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1293">For controls, the current style is often provided by a default style from control theming, or from styles generally applied to controls of that type by resources at page or application level (an implicit style).</span></span> <span data-ttu-id="98f6b-1294">這個屬性不會設定或傳回預設 （主題） 樣式，但會傳回隱含樣式或項目做的明確樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1294">This property does not set or return default (theme) styles, but it does return either an implicit style or an explicit style that is acting on the element.</span></span> <span data-ttu-id="98f6b-1295">在隱含或明確樣式中，指定做為資源或在本機定義的樣式並不重要。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1295">In the case of implicit or explicit styles, it does not matter whether the style is specified as a resource or defined locally.</span></span>  
  
 <span data-ttu-id="98f6b-1296">設定樣式有一些限制。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1296">Setting the styles has some restrictions.</span></span> <span data-ttu-id="98f6b-1297">您可以重設整個<xref:System.Windows.FrameworkElement.Style%2A>屬性，以新<xref:System.Windows.Style>在任何時間，這會強制配置重新撰寫。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1297">You can reset the entire <xref:System.Windows.FrameworkElement.Style%2A> property to a new <xref:System.Windows.Style> at any time, which will force a layout recomposition.</span></span> <span data-ttu-id="98f6b-1298">不過，一旦該樣式會放在使用中所載入的項目，<xref:System.Windows.Style>應視為密封。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1298">However, as soon as that style is placed in use by a loaded element, the <xref:System.Windows.Style> should be considered sealed.</span></span> <span data-ttu-id="98f6b-1299">嘗試變更使用中樣式的任何個別的屬性 (例如集合內的任何項目<xref:System.Windows.Style.Setters%2A>)，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1299">Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <xref:System.Windows.Style.Setters%2A>) causes an exception to be thrown.</span></span> <span data-ttu-id="98f6b-1300">標記中定義的樣式會被視為正在使用中，只要載入資源字典中的 （如資源），或包含在頁面載入 （適用於內嵌樣式）。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1300">A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).</span></span>  
  
 <span data-ttu-id="98f6b-1301"><xref:System.Windows.FrameworkElement.Style%2A> 是相依性屬性具有特殊的優先順序。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1301"><xref:System.Windows.FrameworkElement.Style%2A> is a dependency property with special precedence.</span></span> <span data-ttu-id="98f6b-1302">本機設定樣式通常會在運作的最高的優先順序屬性系統中。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1302">The locally set style generally operates at the highest precedence in the property system.</span></span> <span data-ttu-id="98f6b-1303">如果<xref:System.Windows.FrameworkElement.Style%2A>為 null，在屬性系統會檢查隱含樣式中指定該類型的本機或應用程式資源的載入期間。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1303">If the <xref:System.Windows.FrameworkElement.Style%2A> is null at this point, during loading the property system checks for implicit styles in local or application resources that specify that type.</span></span> <span data-ttu-id="98f6b-1304">如果樣式是仍為 null，這個步驟之後，就顯示用途的動作樣式通常是來自預設 （主題） 樣式中不會傳回預設樣式<xref:System.Windows.FrameworkElement.Style%2A>屬性值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1304">If the style is still null after this step, then the acting style for presentation purposes generally comes from the default (theme) style, but the default style is not returned in the <xref:System.Windows.FrameworkElement.Style%2A> property value.</span></span> <span data-ttu-id="98f6b-1305">請參閱[相依性屬性值優先順序](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)或是[樣式和範本化](~/docs/framework/wpf/controls/styling-and-templating.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1305">See [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md) or [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).</span></span>  
  
<a name="xamlAttributeUsage_Style"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-1306">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-1306">XAML Attribute Usage</span></span>  
  
```  
<object Style="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_Style"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="98f6b-1307">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="98f6b-1307">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_Style"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-1308">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-1308">XAML Values</span></span>  
 <span data-ttu-id="98f6b-1309">*resourceExtension*</span><span class="sxs-lookup"><span data-stu-id="98f6b-1309">*resourceExtension*</span></span>  
 <span data-ttu-id="98f6b-1310">下列其中之一:、 或。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1310">One of the following: , or .</span></span> <span data-ttu-id="98f6b-1311">請參閱[XAML 資源](~/docs/framework/wpf/advanced/xaml-resources.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1311">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="98f6b-1312">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="98f6b-1312">*styleResourceKey*</span></span>  
 <span data-ttu-id="98f6b-1313">識別所要求的樣式索引鍵。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1313">The key that identifies the style being requested.</span></span> <span data-ttu-id="98f6b-1314">索引鍵參考中的現有資源<xref:System.Windows.ResourceDictionary>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1314">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98f6b-1315">屬性元素語法是技術上可行，但不是建議用於大部分案例。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1315">Property element syntax is technically possible, but not recommended for most style scenarios.</span></span> <span data-ttu-id="98f6b-1316">請參閱[內嵌樣式和範本](~/docs/framework/wpf/advanced/inline-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1316">See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span> <span data-ttu-id="98f6b-1317">使用繫結參考或<xref:System.Windows.Data.Binding>也是可行的但不常見。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1317">A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.</span></span>  
  
<a name="dependencyPropertyInfo_Style"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-1318">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1318">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1319">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1319">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.StyleProperty>|  
|<span data-ttu-id="98f6b-1320">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-1320">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-1321">下列範例會定義資源字典中的樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1321">The following example defines a style in a resource dictionary.</span></span>  
  
 [!code-xaml[FEResource#StyleProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/FEResource/CS/default.xaml#styleproperty)]  
[!code-xaml[FEResource#StyleProperty2](~/samples/snippets/csharp/VS_Snippets_Wpf/FEResource/CS/default.xaml#styleproperty2)]  
[!code-xaml[FEResource#StyleProperty3](~/samples/snippets/csharp/VS_Snippets_Wpf/FEResource/CS/default.xaml#styleproperty3)]  
[!code-xaml[FEResource#StyleProperty4](~/samples/snippets/csharp/VS_Snippets_Wpf/FEResource/CS/default.xaml#styleproperty4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.StyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.StyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1322">識別 <see cref="P:System.Windows.FrameworkElement.Style" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1322">Identifies the <see cref="P:System.Windows.FrameworkElement.Style" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="98f6b-1323">要求之環境屬性 (Ambient Property) 的名稱。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1323">The name of the requested ambient property.</span></span></param>
        <summary><span data-ttu-id="98f6b-1324">如需這個成員的描述，請參閱 <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1324">For a description of this member, see the <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> method.</span></span></summary>
        <returns><span data-ttu-id="98f6b-1325">如果 <paramref name="propertyName" /> 可用則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1325"><see langword="true" /> if <paramref name="propertyName" /> is available; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1326">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="98f6b-1326">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="98f6b-1327">只有在 <xref:System.Windows.FrameworkElement> 執行個體轉換成 <xref:System.Windows.Markup.IQueryAmbient> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1327">It can be used only when the <xref:System.Windows.FrameworkElement> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.FrameworkElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1328">取得或設定可以用來儲存關於此元素自訂資訊的任意物件值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1328">Gets or sets an arbitrary object value that can be used to store custom information about this element.</span></span></summary>
        <value><span data-ttu-id="98f6b-1329">所要的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1329">The intended value.</span></span> <span data-ttu-id="98f6b-1330">此屬性沒有預設值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1330">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1331">這個屬性相當於其他 Microsoft 程式撰寫模型，例如 Visual Basic 應用程式或 Windows Form 中的標記屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1331">This property is analogous to Tag properties in other Microsoft programming models, such as Visual Basic for Applications or Windows Forms.</span></span> <span data-ttu-id="98f6b-1332"><xref:System.Windows.FrameworkElement.Tag%2A> 要提供的預先存在的屬性位置，您可以在其中儲存有關任何一些基本的自訂資訊<xref:System.Windows.FrameworkElement>而不需要您的子類別的項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1332"><xref:System.Windows.FrameworkElement.Tag%2A> is intended to provide a pre-existing property location where you can store some basic custom information about any <xref:System.Windows.FrameworkElement> without requiring you to subclass an element.</span></span>  
  
 <span data-ttu-id="98f6b-1333">因為這個屬性會採用一個物件，您必須使用屬性的項目使用方式，若要設定<xref:System.Windows.FrameworkElement.Tag%2A>到具有已知與內建的類型轉換器，例如字串的物件以外的任何項目中 XAML 屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1333">Because this property takes an object, you need to use the property element usage in order to set the <xref:System.Windows.FrameworkElement.Tag%2A> property in XAML to anything other than an object with a known and built-in type converter, such as a string.</span></span> <span data-ttu-id="98f6b-1334">使用此方法的物件通常不是標準的 WPF 命名空間內，而且因此可能需要外部的命名空間的命名空間對應，就會用作 XAML 項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1334">Objects used in this manner are typically not within the standard WPF namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as XAML elements.</span></span> <span data-ttu-id="98f6b-1335">如需詳細資訊，請參閱 < [XAML 命名空間和命名空間對應 WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md)並[XAML 和自訂類別，如 WPF](~/docs/framework/wpf/advanced/xaml-and-custom-classes-for-wpf.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1335">For details, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md) and [XAML and Custom Classes for WPF](~/docs/framework/wpf/advanced/xaml-and-custom-classes-for-wpf.md).</span></span>  
  
<a name="dependencyPropertyInfo_Tag"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-1336">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1336">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1337">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1337">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.TagProperty>|  
|<span data-ttu-id="98f6b-1338">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-1338">Metadata properties set to `true`</span></span>|<span data-ttu-id="98f6b-1339">無</span><span class="sxs-lookup"><span data-stu-id="98f6b-1339">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Name" />
      </Docs>
    </Member>
    <Member MemberName="TagProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TagProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TagProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.TagProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TagProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TagProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TagProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.TagProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1340">識別 <see cref="P:System.Windows.FrameworkElement.Tag" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1340">Identifies the <see cref="P:System.Windows.FrameworkElement.Tag" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; TargetUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; TargetUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TargetUpdated As EventHandler(Of DataTransferEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ TargetUpdated;" />
      <MemberSignature Language="F#" Value="member this.TargetUpdated : EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " Usage="member this.TargetUpdated : System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1341">這個項目上的任何屬性繫結的目標值變更時發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1341">Occurs when the target value changes for any property binding on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1342">此事件建立的別名<xref:System.Windows.Data.Binding.TargetUpdated>引發任何事件<xref:System.Windows.Data.Binding>與這個項目相關聯。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1342">This event creates an alias for the <xref:System.Windows.Data.Binding.TargetUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.</span></span> <span data-ttu-id="98f6b-1343">這通常表示有問題的繫結是雙向繫結的繫結的相依性屬性 affirms，先前的屬性值無效現在根據任何驗證或快取的屬性或資料來源所支援的配置。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1343">This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms that the previous property value is now invalid according to any validation or caching scheme that the property or the data source support.</span></span>  
  
 <span data-ttu-id="98f6b-1344">使用事件資料的<xref:System.Windows.FrameworkElement.TargetUpdated>事件，以判斷特定的屬性，報告的目標值更新。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1344">Use the event data of the <xref:System.Windows.FrameworkElement.TargetUpdated> event to determine the specific property that is reporting the target value update.</span></span>  
  
<a name="xamlAttributeUsage_TargetUpdated"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-1345">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-1345">XAML Attribute Usage</span></span>  
  
```  
<object TargetUpdated="eventHandler"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Data.Binding.TargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject TemplatedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.TemplatedParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatedParent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ TemplatedParent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplatedParent : System.Windows.DependencyObject" Usage="System.Windows.FrameworkElement.TemplatedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1346">取得這個項目的範本父代參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1346">Gets a reference to the template parent of this element.</span></span> <span data-ttu-id="98f6b-1347">若此項目不是透過範本建立，則這個屬性不相關。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1347">This property is not relevant if the element was not created through a template.</span></span></summary>
        <value><span data-ttu-id="98f6b-1348">項目其<see cref="T:System.Windows.FrameworkTemplate" /><see cref="P:System.Windows.FrameworkTemplate.VisualTree" />造成要建立此項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1348">The element whose <see cref="T:System.Windows.FrameworkTemplate" /><see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> caused this element to be created.</span></span> <span data-ttu-id="98f6b-1349">這個值通常是<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1349">This value is frequently <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1350"><xref:System.Windows.FrameworkElement.TemplatedParent%2A> 通常是`null`會在您的應用程式標記或程式碼中建立的物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1350"><xref:System.Windows.FrameworkElement.TemplatedParent%2A> is frequently `null` for objects that are created in your application markup or code.</span></span> <span data-ttu-id="98f6b-1351">這是因為您建立這些物件直接，不是透過範本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1351">This is because you create those objects directly, not via a template.</span></span> <span data-ttu-id="98f6b-1352">物件參考取得逐步邏輯樹狀結構，從根或一般名稱的參考，不是來自範本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1352">Object references obtained by walking the logical tree from the root, or by typical name references, do not come from a template.</span></span>  
  
 <span data-ttu-id="98f6b-1353">情況<xref:System.Windows.FrameworkElement.TemplatedParent%2A>可能無法`null`包括點擊測試特定低階的輸入事件，逐一查看與視覺化樹狀結構的事件處理等作業<xref:System.Windows.Media.VisualTreeHelper>，或使用列舉值，這可能會傳回來源的項目從範本。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1353">Cases where <xref:System.Windows.FrameworkElement.TemplatedParent%2A> might not be `null` include operations such as hit-testing, event handling for certain low-level input events, walking the visual tree with <xref:System.Windows.Media.VisualTreeHelper>, or working with enumerators, which might return elements that came from templates.</span></span> <span data-ttu-id="98f6b-1354">另一種情況是如果您特別呼叫<xref:System.Windows.FrameworkTemplate.FindName%2A>對現有<xref:System.Windows.FrameworkTemplate>和會使用傳回的物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1354">Another case is if you specifically call <xref:System.Windows.FrameworkTemplate.FindName%2A> against an existing <xref:System.Windows.FrameworkTemplate> and are work with the returned object.</span></span>  
  
 <span data-ttu-id="98f6b-1355">範本是範本的內容會一次建立的實際共用的物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1355">Templates are actually shared objects, where the contents of the template are created only once.</span></span> <span data-ttu-id="98f6b-1356">因此，如果您取得的項目，是來自範本的物件參考時，您可能會發現明顯的邏輯樹狀結構不會到達頁面根。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1356">Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root.</span></span> <span data-ttu-id="98f6b-1357">若要連接這類範本參考頁面的邏輯樹狀結構，您應該會看到<xref:System.Windows.FrameworkElement.TemplatedParent%2A>值，並繼續瀏覽所需的項目樹狀結構。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1357">In order to connect such a template reference to the page's logical tree, you should get the <xref:System.Windows.FrameworkElement.TemplatedParent%2A> value and continue to navigate that element tree as desired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public object ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ToolTip { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : obj with get, set" Usage="System.Windows.FrameworkElement.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ToolTip)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1358">取得或設定工具提示物件，該物件會為[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] 中的這個項目而顯示。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1358">Gets or sets the tool-tip object that is displayed for this element in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="98f6b-1359">工具提示物件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1359">The tooltip object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1360">如果這個屬性的值屬於類型<xref:System.Windows.Controls.ToolTip>，則該值是將用於工具提示[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1360">If the value of this property is of type <xref:System.Windows.Controls.ToolTip>, then that value is the tool-tip that will be used in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  <span data-ttu-id="98f6b-1361">如果值為任何其他類型的則該值會用作*內容*如<xref:System.Windows.Controls.ToolTip>提供 （建構） 系統。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1361">If the value is of any other type, then that value will be used as the *content* for a <xref:System.Windows.Controls.ToolTip> provided (constructed) by the system.</span></span> <span data-ttu-id="98f6b-1362">如需詳細資訊，請參閱<xref:System.Windows.Controls.ToolTipService>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1362">For more information, see <xref:System.Windows.Controls.ToolTipService>.</span></span> <span data-ttu-id="98f6b-1363">服務類別會提供可用來進一步自訂的附加的屬性<xref:System.Windows.Controls.ToolTip>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1363">The service class provides attached properties that can be used to further customize a <xref:System.Windows.Controls.ToolTip>.</span></span>  
  
<a name="xamlAttributeUsage_ToolTip"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-1364">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-1364">XAML Attribute Usage</span></span>  
  
```  
<object ToolTip="toolTipContent"/>  
```  
  
<a name="xamlPropertyElementUsage_ToolTip"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="98f6b-1365">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="98f6b-1365">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ToolTip>  
    <ToolTip .../>  
  </object.ToolTip>  
</object>  
- or -  
<object>  
  <object.ToolTip>  
    toolTipObjectContent  
  </object.ToolTip>  
</object>  
```  
  
<a name="xamlValues_ToolTip"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-1366">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-1366">XAML Values</span></span>  
 <span data-ttu-id="98f6b-1367">*toolTipContent*</span><span class="sxs-lookup"><span data-stu-id="98f6b-1367">*toolTipContent*</span></span>  
 <span data-ttu-id="98f6b-1368">成為的顯示文字的字串<xref:System.Windows.FrameworkElement.ToolTip%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1368">A string that becomes the display text for the <xref:System.Windows.FrameworkElement.ToolTip%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-1369">*toolTipObjectContent*</span><span class="sxs-lookup"><span data-stu-id="98f6b-1369">*toolTipObjectContent*</span></span>  
 <span data-ttu-id="98f6b-1370">提供物件項目表單，應該做的內容中的某些物件<xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1370">Some object, provided in object element form, that should be used as the content for the <xref:System.Windows.FrameworkElement> .</span></span> <span data-ttu-id="98f6b-1371">通常這會是<xref:System.Windows.FrameworkElement>或其他項目所建立的版面配置複合<xref:System.Windows.FrameworkElement.ToolTip%2A>，最後會包含在複合 （compositing） 內的文字內容。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1371">Typically this would be a <xref:System.Windows.FrameworkElement> or some other element that creates layout compositing for the <xref:System.Windows.FrameworkElement.ToolTip%2A>, eventually containing text content within the compositing.</span></span> <span data-ttu-id="98f6b-1372">這項用法中<xref:System.Windows.Controls.ToolTip>會建立項目會隱含地從剖析[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，而*toolTipObjectContent*內容設定為其<xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1372">In this usage, the <xref:System.Windows.Controls.ToolTip> element is created implicitly from the parsed [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], and the *toolTipObjectContent* content is set as its <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="98f6b-1373"><`ToolTip` .../></span><span class="sxs-lookup"><span data-stu-id="98f6b-1373"><`ToolTip` .../></span></span>  
 <span data-ttu-id="98f6b-1374">請參閱 <xref:System.Windows.Controls.ToolTip>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1374">See <xref:System.Windows.Controls.ToolTip>.</span></span>  
  
<a name="dependencyPropertyInfo_ToolTip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-1375">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1375">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1376">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1376">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ToolTipProperty>|  
|<span data-ttu-id="98f6b-1377">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-1377">Metadata properties set to `true`</span></span>|<span data-ttu-id="98f6b-1378">無</span><span class="sxs-lookup"><span data-stu-id="98f6b-1378">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-1379">下列範例會建立<xref:System.Windows.Controls.ToolTip>中的程式碼，然後設定<xref:System.Windows.FrameworkElement.ToolTip%2A>屬性上的<xref:System.Windows.Controls.Primitives.StatusBar>控制項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1379">The following example creates a <xref:System.Windows.Controls.ToolTip> in code and then sets the <xref:System.Windows.FrameworkElement.ToolTip%2A> property on a <xref:System.Windows.Controls.Primitives.StatusBar> control.</span></span>  
  
 [!code-csharp[StatusBar#MakeProgressBar](~/samples/snippets/csharp/VS_Snippets_Wpf/StatusBar/CSharp/Window1.xaml.cs#makeprogressbar)]
 [!code-vb[StatusBar#MakeProgressBar](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StatusBar/visualbasic/window1.xaml.vb#makeprogressbar)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ToolTipEventHandler ToolTipClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ToolTipEventHandler ToolTipClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.ToolTipClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ToolTipClosing As ToolTipEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ToolTipEventHandler ^ ToolTipClosing;" />
      <MemberSignature Language="F#" Value="member this.ToolTipClosing : System.Windows.Controls.ToolTipEventHandler " Usage="member this.ToolTipClosing : System.Windows.Controls.ToolTipEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ToolTipEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1380">在項目上的任何工具提示正要關閉之前發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1380">Occurs just before any tooltip on the element is closed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1381">標示<xref:System.Windows.FrameworkElement.ToolTipClosing>為已處理的事件不會取消關閉工具提示。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1381">Marking the <xref:System.Windows.FrameworkElement.ToolTipClosing> event as handled does not cancel closing the tooltip.</span></span> <span data-ttu-id="98f6b-1382">關閉工具提示完成後會顯示工具提示，只會在使用者與 UI 互動的回應。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1382">Once the tooltip is displayed, closing the tooltip is done only in response to user interaction with the UI.</span></span>  
  
 <span data-ttu-id="98f6b-1383">此事件不可以是<xref:System.Windows.EventTrigger>樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1383">This event cannot be an <xref:System.Windows.EventTrigger> in a style.</span></span> <span data-ttu-id="98f6b-1384">這是因為此事件的識別項欄位會重複使用從服務不會公開為服務層級事件的新增/移除事件方法的實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1384">This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.</span></span>  
  
<a name="routedEventInfo_ToolTipClosing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="98f6b-1385">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1385">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1386">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1386">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ToolTipClosingEvent>|  
|<span data-ttu-id="98f6b-1387">路由策略</span><span class="sxs-lookup"><span data-stu-id="98f6b-1387">Routing strategy</span></span>|<span data-ttu-id="98f6b-1388">直接</span><span class="sxs-lookup"><span data-stu-id="98f6b-1388">Direct</span></span>|  
|<span data-ttu-id="98f6b-1389">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="98f6b-1389">Delegate</span></span>|<xref:System.Windows.Controls.ToolTipEventHandler>|  
  
-   <span data-ttu-id="98f6b-1390">覆寫<xref:System.Windows.FrameworkElement.OnToolTipClosing%2A>實作在衍生類別中這個事件的類別處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1390">Override <xref:System.Windows.FrameworkElement.OnToolTipClosing%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ToolTipClosingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ToolTipClosingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ToolTipClosingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipClosingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ToolTipClosingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipClosingEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.ToolTipClosingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1391">識別 <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1391">Identifies the <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1392">註冊路由事件時，會建立路由事件識別項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1392">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="98f6b-1393">這些識別項包含用於加入事件擁有者的識別名稱、擁有者類型、處理常式類型、路由策略和公用程式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1393">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="98f6b-1394">您可以使用這些識別項來加入類別處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1394">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="98f6b-1395">如需註冊路由事件的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1395">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="98f6b-1396">如需使用路由事件識別項來加入類別處理常式的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1396">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpening">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ToolTipEventHandler ToolTipOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ToolTipEventHandler ToolTipOpening" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.ToolTipOpening" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ToolTipOpening As ToolTipEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ToolTipEventHandler ^ ToolTipOpening;" />
      <MemberSignature Language="F#" Value="member this.ToolTipOpening : System.Windows.Controls.ToolTipEventHandler " Usage="member this.ToolTipOpening : System.Windows.Controls.ToolTipEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ToolTipEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1397">任何元素的工具提示開啟時發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1397">Occurs when any tooltip on the element is opened.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1398">若要防止工具提示出現在 UI 中，您的處理常式，如<xref:System.Windows.FrameworkElement.ToolTipOpening>可以將標記<xref:System.Windows.Controls.ToolTipEventArgs>處理的事件資料。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1398">To prevent a tooltip from appearing in the UI, your handler for <xref:System.Windows.FrameworkElement.ToolTipOpening> can mark the <xref:System.Windows.Controls.ToolTipEventArgs> event data handled.</span></span> <span data-ttu-id="98f6b-1399">否則，會顯示工具提示，使用值<xref:System.Windows.FrameworkElement.ToolTip%2A>做為工具提示內容的屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1399">Otherwise, the tooltip is displayed, using the value of the <xref:System.Windows.FrameworkElement.ToolTip%2A> property as the tooltip content.</span></span> <span data-ttu-id="98f6b-1400">另一個可能的情況是您可以撰寫會重設的值的處理常式<xref:System.Windows.FrameworkElement.ToolTip%2A>是事件來源，會顯示工具提示時之前, 的項目屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1400">Another possible scenario is that you could write a handler that resets the value of the <xref:System.Windows.FrameworkElement.ToolTip%2A> property for the element that is the event source, just before the tooltip is displayed.</span></span>  
  
 <span data-ttu-id="98f6b-1401"><xref:System.Windows.FrameworkElement.ToolTipOpening> 若將不會產生值<xref:System.Windows.FrameworkElement.ToolTip%2A>是`null`或其他未設定。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1401"><xref:System.Windows.FrameworkElement.ToolTipOpening> will not be raised if the value of <xref:System.Windows.FrameworkElement.ToolTip%2A> is `null` or otherwise unset.</span></span> <span data-ttu-id="98f6b-1402">不要刻意設定<xref:System.Windows.FrameworkElement.ToolTip%2A>至`null`tooltip 為開啟，或開啟; 這不會關閉工具提示的影響，會改為建立在 UI 中的非預期的視覺成品時。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1402">Do not deliberately set <xref:System.Windows.FrameworkElement.ToolTip%2A> to `null` while a tooltip is open or opening; this will not have the effect of closing the tooltip, and will instead create an undesirable visual artifact in the UI.</span></span>  
  
 <span data-ttu-id="98f6b-1403"><xref:System.Windows.FrameworkElement.ToolTipOpening>事件不可以是<xref:System.Windows.EventTrigger>樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1403">The <xref:System.Windows.FrameworkElement.ToolTipOpening> event cannot be an <xref:System.Windows.EventTrigger> in a style.</span></span> <span data-ttu-id="98f6b-1404">這是因為此事件的識別項欄位會重複使用從服務不會公開為服務層級事件的新增/移除事件方法的實作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1404">This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.</span></span>  
  
<a name="routedEventInfo_ToolTipOpening"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="98f6b-1405">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1405">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1406">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1406">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ToolTipOpeningEvent>|  
|<span data-ttu-id="98f6b-1407">路由策略</span><span class="sxs-lookup"><span data-stu-id="98f6b-1407">Routing strategy</span></span>|<span data-ttu-id="98f6b-1408">直接</span><span class="sxs-lookup"><span data-stu-id="98f6b-1408">Direct</span></span>|  
|<span data-ttu-id="98f6b-1409">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="98f6b-1409">Delegate</span></span>|<xref:System.Windows.Controls.ToolTipEventHandler>|  
  
-   <span data-ttu-id="98f6b-1410">覆寫<xref:System.Windows.FrameworkElement.OnToolTipClosing%2A>實作在衍生類別中這個事件的類別處理。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1410">Override <xref:System.Windows.FrameworkElement.OnToolTipClosing%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpeningEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ToolTipOpeningEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ToolTipOpeningEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ToolTipOpeningEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipOpeningEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ToolTipOpeningEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipOpeningEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.ToolTipOpeningEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1411">識別 <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1411">Identifies the <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1412">註冊路由事件時，會建立路由事件識別項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1412">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="98f6b-1413">這些識別項包含用於加入事件擁有者的識別名稱、擁有者類型、處理常式類型、路由策略和公用程式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1413">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="98f6b-1414">您可以使用這些識別項來加入類別處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1414">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="98f6b-1415">如需註冊路由事件的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1415">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="98f6b-1416">如需使用路由事件識別項來加入類別處理常式的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1416">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ToolTipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ToolTipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ToolTipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ToolTipProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.ToolTipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1417">識別 <see cref="P:System.Windows.FrameworkElement.ToolTip" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1417">Identifies the <see cref="P:System.Windows.FrameworkElement.ToolTip" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Windows.TriggerCollection" Usage="System.Windows.FrameworkElement.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1418">取得直接在這個項目或子項目中建立的觸發程序集合。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1418">Gets the collection of triggers established directly on this element, or in child elements.</span></span></summary>
        <value><span data-ttu-id="98f6b-1419"><see cref="T:System.Windows.Trigger" /> 物件的強類型集合。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1419">A strongly typed collection of <see cref="T:System.Windows.Trigger" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="98f6b-1420">此屬性只在設定[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]透過集合語法所示，或存取的集合物件，使用其不同的方法，例如 Add。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1420">This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] through the collection syntax shown, or by accessing the collection object and using its various methods such as Add.</span></span> <span data-ttu-id="98f6b-1421">要存取的集合物件本身的屬性是唯讀，該集合本身是讀寫。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1421">The property to access the collection object itself is read-only, the collection itself is read-write.</span></span> <span data-ttu-id="98f6b-1422">屬性只存在於根項目;嘗試找到它，或將它設定其他位置，將會導致擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1422">The property only exists on root elements; attempting to find it or set it elsewhere will cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="98f6b-1423">這個屬性不會啟用檢查觸發程序，這個項目上的使用中的樣式的一部分。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1423">This property does not enable you to examine triggers that exist as part of styles in use on this element.</span></span> <span data-ttu-id="98f6b-1424">此外，它只會報告解譯為常值加入至集合，在標記或程式碼中的觸發程序的集合。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1424">It only reports the collection of triggers that are literally added to the collection, either in markup or code.</span></span> <span data-ttu-id="98f6b-1425">項目通常不會有這類現有的預設值的項目 (透過範本執行個體);它是更常見會改為在樣式中建立的複合控制項所來自的觸發程序。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1425">Elements do not typically have such elements existing by default (through a template for instance); it is more common for triggers that come from control compositing to be established in styles instead.</span></span>  
  
 <span data-ttu-id="98f6b-1426">就行為 (並嘗試建立的作用是來自哪個項目宣告<xref:System.Windows.FrameworkElement.Triggers%2A>集合)，觸發條件和觸發程序的效果可能在這個項目上，或可能在其子項目邏輯樹狀結構中。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1426">In terms of behavior (and trying to establish which effect came from which element's declared <xref:System.Windows.FrameworkElement.Triggers%2A> collection), both the triggering condition and the trigger effect might be on this element, or might be on its child elements in the logical tree.</span></span> <span data-ttu-id="98f6b-1427">請注意，如果您使用存留期事件，例如<xref:System.Windows.FrameworkElement.Loaded>若要取得此集合，子元素的觸發程序可能還無法完全載入，並會在執行階段會確實比較小的集合。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1427">Note that if you use lifetime events such as <xref:System.Windows.FrameworkElement.Loaded> to get this collection, the child element's triggers might not yet be fully loaded, and the collection will be smaller than it would truly be at run time.</span></span>  
  
 <span data-ttu-id="98f6b-1428">請注意，建立項目上的觸發程序的集合只支援<xref:System.Windows.EventTrigger>，沒有屬性觸發程序 (<xref:System.Windows.Trigger>)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1428">Note that the collection of triggers established on an element only supports <xref:System.Windows.EventTrigger>, not property triggers (<xref:System.Windows.Trigger>).</span></span> <span data-ttu-id="98f6b-1429">如果您需要屬性觸發程序，您必須放在樣式或範本內，並再指派該樣式或範本的項目是直接透過<xref:System.Windows.FrameworkElement.Style%2A>屬性，或間接透過隱含樣式參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1429">If you require property triggers, you must place these within a style or template and then assign that style or template to the element either directly through the <xref:System.Windows.FrameworkElement.Style%2A> property, or indirectly through an implicit style reference.</span></span>  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="98f6b-1430">XAML 屬性項目用法</span><span class="sxs-lookup"><span data-stu-id="98f6b-1430">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Triggers>  
    oneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-1431">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-1431">XAML Values</span></span>  
 <span data-ttu-id="98f6b-1432">*oneOrMoreTriggers*</span><span class="sxs-lookup"><span data-stu-id="98f6b-1432">*oneOrMoreTriggers*</span></span>  
 <span data-ttu-id="98f6b-1433">一或多個定義<xref:System.Windows.EventTrigger>項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1433">One or more defined <xref:System.Windows.EventTrigger> elements.</span></span> <span data-ttu-id="98f6b-1434">每個這類觸發程序必須包含有效的分鏡腳本動作和參考。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1434">Each such trigger is expected to contain valid storyboard actions and references.</span></span> <span data-ttu-id="98f6b-1435">請注意，這個集合只能建立在頁面的根項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1435">Note that this collection can only be established on the root element of a page.</span></span> <span data-ttu-id="98f6b-1436">如需詳細資訊，請參閱[分鏡腳本概觀](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1436">For more information, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.EventTrigger" />
      </Docs>
    </Member>
    <Member MemberName="TryFindResource">
      <MemberSignature Language="C#" Value="public object TryFindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object TryFindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.TryFindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ TryFindResource(System::Object ^ resourceKey);" />
      <MemberSignature Language="F#" Value="member this.TryFindResource : obj -&gt; obj" Usage="frameworkElement.TryFindResource resourceKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey"><span data-ttu-id="98f6b-1437">要尋找之資源的索引鍵識別項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1437">The key identifier of the resource to be found.</span></span></param>
        <summary><span data-ttu-id="98f6b-1438">以指定的索引鍵搜尋資源；如果找到，則傳回該資源。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1438">Searches for a resource with the specified key, and returns that resource if found.</span></span></summary>
        <returns><span data-ttu-id="98f6b-1439">找到的資源，如果找不到具有所提供之 <paramref name="key" /> 的資源，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1439">The found resource, or <see langword="null" /> if no resource with the provided <paramref name="key" /> is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1440">如果呼叫的項目上找不到資源，透過邏輯樹狀結構向上搜尋父資源樹狀目錄，在樹狀結構的相同方式來搜尋的若資源所要求機碼在執行階段。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1440">If the resource is not found on the calling element, the parent resource tree is searched upward through the logical tree, in the same way that the tree would be searched if a resource were requested by key at run time.</span></span> <span data-ttu-id="98f6b-1441">此方法會傳回`null`只有當資源樹狀目錄中，每個現有的條件，在樹狀結構的任何地方不在於該索引鍵的任何資源，<xref:System.Windows.FrameworkElement.TryFindResource%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1441">The method returns `null` only if no resource of that key existed anywhere in the resource tree, per the existing conditions of the tree at the time that <xref:System.Windows.FrameworkElement.TryFindResource%2A> is called.</span></span>  
  
 <span data-ttu-id="98f6b-1442">通常您會立即傳回值轉換成您嘗試使用傳回的資源值設定屬性的型別。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1442">Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.</span></span>  
  
 <span data-ttu-id="98f6b-1443"><xref:System.Windows.FrameworkElement.FindResource%2A>方法有類似的行為不同之處在於它會擲回例外狀況，如果未不傳回提供的索引鍵的任何資源。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1443">The <xref:System.Windows.FrameworkElement.FindResource%2A> method has similar behavior, except that it throws an exception if no resource with the provided key was returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-1444">下列範例會實作為按鈕處理常式，其中按鈕被按下設定其資源所定義的筆刷的背景取得藉由呼叫<xref:System.Windows.FrameworkElement.TryFindResource%2A>本身。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1444">The following example is implemented as a button handler, where the button being clicked sets its background to a resource-defined brush obtained by calling <xref:System.Windows.FrameworkElement.TryFindResource%2A> on itself.</span></span> <span data-ttu-id="98f6b-1445">這會逐步引導項目樹狀結構，並尋找資源 (資源本身中定義[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]並不會顯示)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1445">This walks the element tree and finds the resource (the resource itself is defined in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] and is not shown).</span></span>  
  
 [!code-csharp[BaseElementsSmorgasbord#FETryFindResource](~/samples/snippets/csharp/VS_Snippets_Wpf/BaseElementsSmorgasbord/CSharp/Page1.xaml.cs#fetryfindresource)]
 [!code-vb[BaseElementsSmorgasbord#FETryFindResource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BaseElementsSmorgasbord/visualbasic/page1.xaml.vb#fetryfindresource)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unloaded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Unloaded;" />
      <MemberSignature Language="F#" Value="member this.Unloaded : System.Windows.RoutedEventHandler " Usage="member this.Unloaded : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1446">當項目從已載入項目的項目樹狀結構中移除時發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1446">Occurs when the element is removed from within an element tree of loaded elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1447">直接路由的事件不會遵循路由，它們才會處理在相同的項目，其引發。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1447">Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</span></span> <span data-ttu-id="98f6b-1448">直接路由的事件支援其他路由的事件的行為： 它們支援的可存取的處理常式集合，且可用來當做<xref:System.Windows.EventTrigger>樣式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1448">Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.</span></span>  
  
 <span data-ttu-id="98f6b-1449"><xref:System.Windows.FrameworkElement.Loaded> 和<xref:System.Windows.FrameworkElement.Unloaded>可能同時會引發因為使用者起始系統佈景主題變更控制項上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1449"><xref:System.Windows.FrameworkElement.Loaded> and <xref:System.Windows.FrameworkElement.Unloaded> might both be raised on controls as a result of user-initiated system theme changes.</span></span> <span data-ttu-id="98f6b-1450">佈景主題變更會導致控制項範本以及包含視覺化樹狀結構，這樣又會卸載並重新載入整個控制項失效。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1450">A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload.</span></span> <span data-ttu-id="98f6b-1451">因此<xref:System.Windows.FrameworkElement.Unloaded>無法假設只發生在導覽離開該頁面。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1451">Therefore <xref:System.Windows.FrameworkElement.Unloaded> cannot be assumed to occur only on navigation away from the page.</span></span>  
  
 <span data-ttu-id="98f6b-1452">請注意，<xref:System.Windows.FrameworkElement.Unloaded>應用程式開始進行關閉之後，不會引發事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1452">Note that the <xref:System.Windows.FrameworkElement.Unloaded> event is not raised after an application begins shutting down.</span></span> <span data-ttu-id="98f6b-1453">由所定義的條件時，就會發生應用程式關閉<xref:System.Windows.Application.ShutdownMode%2A>屬性，就會發生。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1453">Application shutdown occurs when the condition defined by the <xref:System.Windows.Application.ShutdownMode%2A> property occurs.</span></span> <span data-ttu-id="98f6b-1454">如果您將清除程式碼中的處理常式<xref:System.Windows.FrameworkElement.Unloaded>事件，例如 mongoadminusername<xref:System.Windows.Window>或<xref:System.Windows.Controls.UserControl>，它可能不會呼叫如預期般運作。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1454">If you place cleanup code within a handler for the <xref:System.Windows.FrameworkElement.Unloaded> event, such as for a <xref:System.Windows.Window> or a <xref:System.Windows.Controls.UserControl>, it may not be called as expected.</span></span>  
  
<a name="routedEventInfo_Unloaded"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="98f6b-1455">路由事件資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1455">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1456">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1456">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.UnloadedEvent>|  
|<span data-ttu-id="98f6b-1457">路由策略</span><span class="sxs-lookup"><span data-stu-id="98f6b-1457">Routing strategy</span></span>|<span data-ttu-id="98f6b-1458">直接</span><span class="sxs-lookup"><span data-stu-id="98f6b-1458">Direct</span></span>|  
|<span data-ttu-id="98f6b-1459">Delegate - 委派</span><span class="sxs-lookup"><span data-stu-id="98f6b-1459">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="UnloadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent UnloadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent UnloadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.UnloadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnloadedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ UnloadedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnloadedEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.UnloadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1460">識別 <see cref="E:System.Windows.FrameworkElement.Unloaded" /> 路由事件。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1460">Identifies the <see cref="E:System.Windows.FrameworkElement.Unloaded" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1461">註冊路由事件時，會建立路由事件識別項。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1461">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="98f6b-1462">這些識別項包含用於加入事件擁有者的識別名稱、擁有者類型、處理常式類型、路由策略和公用程式方法。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1462">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="98f6b-1463">您可以使用這些識別項來加入類別處理常式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1463">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="98f6b-1464">如需註冊路由事件的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1464">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="98f6b-1465">如需使用路由事件識別項來加入類別處理常式的詳細資訊，請參閱 <xref:System.Windows.EventManager.RegisterClassHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1465">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.UnregisterName : string -&gt; unit" Usage="frameworkElement.UnregisterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="98f6b-1466">要從目前範圍中移除的「名稱-物件」配對名稱。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1466">Name of the name-object pair to remove from the current scope.</span></span></param>
        <summary><span data-ttu-id="98f6b-1467">簡化對 <see cref="T:System.Windows.NameScope" /> 取消註冊方法的存取。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1467">Simplifies access to the <see cref="T:System.Windows.NameScope" /> de-registration method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1468">您只會要取消註冊名稱，如果您想要重新註冊該相同名稱的另一個項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1468">You only need to un-register names if you intend to re-register another element with that same name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDefaultStyle">
      <MemberSignature Language="C#" Value="public void UpdateDefaultStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateDefaultStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.UpdateDefaultStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateDefaultStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateDefaultStyle();" />
      <MemberSignature Language="F#" Value="member this.UpdateDefaultStyle : unit -&gt; unit" Usage="frameworkElement.UpdateDefaultStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="98f6b-1469">重新將預設樣式套用至目前 <see cref="T:System.Windows.FrameworkElement" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1469">Reapplies the default style to the current <see cref="T:System.Windows.FrameworkElement" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLayoutRounding">
      <MemberSignature Language="C#" Value="public bool UseLayoutRounding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLayoutRounding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.UseLayoutRounding" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLayoutRounding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLayoutRounding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseLayoutRounding : bool with get, set" Usage="System.Windows.FrameworkElement.UseLayoutRounding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1470">取得或設定值，指出配置進位是否應該在配置期間套用到這個項目的大小和位置。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1470">Gets or sets a value that indicates whether layout rounding should be applied to this element's size and position during layout.</span></span></summary>
        <value><span data-ttu-id="98f6b-1471">如果套用配置進位，則為 <see langword="true" />否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1471"><see langword="true" /> if layout rounding is applied; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="98f6b-1472">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1472">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1473">當<xref:System.Windows.FrameworkElement.UseLayoutRounding%2A>項目的屬性是`true`，會計算期間的所有非整數像素值<xref:System.Windows.UIElement.Measure%2A>和<xref:System.Windows.UIElement.Arrange%2A>階段會捨入到整個像素值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1473">When the <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> property for an element is `true`, all non-integral pixel values that are calculated during the <xref:System.Windows.UIElement.Measure%2A> and <xref:System.Windows.UIElement.Arrange%2A> passes are rounded to whole pixel values.</span></span>  
  
 <span data-ttu-id="98f6b-1474">這個屬性會繼承子項目。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1474">This property is inherited by child elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98f6b-1475">您應該設定<xref:System.Windows.FrameworkElement.UseLayoutRounding%2A>至`true`根項目上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1475">You should set <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> to `true` on the root element.</span></span> <span data-ttu-id="98f6b-1476">版面配置系統會將父座標; 中的子系座標因此，如果父座標不像素界限上，子座標也不像素界限上。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1476">The layout system adds child coordinates to the parent coordinates; therefore, if the parent coordinates are not on a pixel boundary, the child coordinates are also not on a pixel boundary.</span></span> <span data-ttu-id="98f6b-1477">如果<xref:System.Windows.FrameworkElement.UseLayoutRounding%2A>不是根目錄上設定，設定<xref:System.Windows.UIElement.SnapsToDevicePixels%2A>上的子系，以取得您想要的效果。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1477">If <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> cannot be set at the root, set <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> on the child to obtain the effect that you want.</span></span>  
  
 <span data-ttu-id="98f6b-1478">繪製像素界限上的 物件排除時，所產生的消除鋸齒邊緣落在裝置像素半透明邊緣。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1478">Drawing objects on pixel boundaries eliminates the semi-transparent edges that are produced by anti-aliasing, when an edge falls in the middle of a device pixel.</span></span> <span data-ttu-id="98f6b-1479">下圖顯示落在裝置像素的單一像素寬度列的輸出。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1479">The following illustration shows the output of a single pixel-width line that falls in the middle of a device pixel.</span></span> <span data-ttu-id="98f6b-1480">在左側的列未使用版面配置進位，而且是消除鋸齒。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1480">The line on the left does not use layout rounding and is anti-aliased.</span></span> <span data-ttu-id="98f6b-1481">在右側的一行中，會使用版面配置進位。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1481">The line on the right uses layout rounding.</span></span>  
  
 <span data-ttu-id="98f6b-1482">![反&#45;相較於單一像素列的別名線。](~/add/media/pixelsnaplinecompare.PNG "相較於單一像素列的消除鋸齒線條。")</span><span class="sxs-lookup"><span data-stu-id="98f6b-1482">![Anti&#45;aliased line compared to single pixel line.](~/add/media/pixelsnaplinecompare.PNG "Anti-aliased line compared to single pixel line.")</span></span>  
  
 <span data-ttu-id="98f6b-1483">當您使用版面配置進位，<xref:System.Windows.GridUnitType.Star>調整大小、 版面配置系統會建立小型的變化中的資料行或資料列的度量，以避免呈現子像素。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1483">When you use layout rounding and <xref:System.Windows.GridUnitType.Star> sizing, the layout system creates small variations in the column or row measurements to avoid subpixel rendering.</span></span> <span data-ttu-id="98f6b-1484">例如，如果方格具有 3 個資料行每個大小的 100 總寬度<xref:System.Windows.GridUnitType.Star>，而不是建立三個資料行的 33.3 相等的寬度，版面配置系統會建立 2 個資料行的寬度為 33，34 的寬度的另一個。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1484">For example, if a grid has a total width of 100 with 3 columns each of size <xref:System.Windows.GridUnitType.Star>, instead of creating three columns that have an equal width of 33.3, the layout system creates 2 columns that have a width of 33 and one that has a width of 34.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="98f6b-1485">在.NET 4.6 中已變更版面配置進位，以減少含邊界之控制項中的裁剪功能的執行個體。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1485">In .NET 4.6 changes were made to layout rounding to reduce instances of clipping in controls with borders.</span></span> <span data-ttu-id="98f6b-1486">根據預設，如果您的目標 Framework 是.NET Framework 4.6 或更高版本，會啟用此功能。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1486">By default, this feature is enabled if your Target Framework is .NET Framework 4.6 or higher.</span></span> <span data-ttu-id="98f6b-1487">以舊版 framework 為目標的應用程式可以藉由將下列設定加入 app.config 檔案，在選擇新的行為：`<runtime><AppContextSwitchOverrides value="Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false"/></runtime>` 設定.NET Framework 4.6 上執行應用程式時，才會生效。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1487">Applications that target earlier versions of the framework can opt in into the new behavior by adding the following setting to an app.config file: `<runtime><AppContextSwitchOverrides value="Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false"/></runtime>` The setting only takes effect when the application is running on the .NET Framework 4.6.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-1488">下列範例示範的效果，<xref:System.Windows.FrameworkElement.UseLayoutRounding%2A>屬性有單一的像素寬度該行。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1488">The following example demonstrates the effect that the <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> property has on a single pixel-width line.</span></span> <span data-ttu-id="98f6b-1489">左邊的行號不會使用版面配置進位，並在右邊的列可讓您使用版面配置進位。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1489">The line on the left does not use layout rounding and the line on the right uses layout rounding.</span></span> <span data-ttu-id="98f6b-1490">如果您緩時變調整視窗大小，可以看到差異捨入可讓該配置。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1490">If you slowly resize the window, you can see the difference that layout rounding makes.</span></span>  
  
```xaml  
  
<Page x:Class="LayoutRounding.Lines"  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
    Title="Lines" Name="linesPage"  
    >  
  <StackPanel Width="150"  Margin="7" Orientation="Horizontal">  
    <!-- Single pixel line with layout rounding turned OFF.-->  
    <Rectangle UseLayoutRounding="False"  
       Width="45.5" Margin="10" Height="1" Fill="Red"/>  
    <!-- Single pixel line with layout rounding turned ON.-->  
    <Rectangle UseLayoutRounding="True"  
      Width="45.5" Margin="10" Height="1" Fill="Red"/>  
  </StackPanel>  
  <!-- Background Grid -->  
  <Page.Background>  
    <DrawingBrush  Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">  
      <DrawingBrush.Drawing>  
        <DrawingGroup>  
          <GeometryDrawing Brush="White">  
            <GeometryDrawing.Geometry>  
              <RectangleGeometry Rect="0,0,1,1" />  
            </GeometryDrawing.Geometry>  
          </GeometryDrawing>  
          <GeometryDrawing Geometry="M0,0 L1,0 1,0.1, 0,0.1Z " Brush="#CCCCFF" />  
          <GeometryDrawing Geometry="M0,0 L0,1 0.1,1, 0.1,0Z" Brush="#CCCCFF" />  
        </DrawingGroup>  
      </DrawingBrush.Drawing>  
    </DrawingBrush>  
  </Page.Background>  
</Page>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLayoutRoundingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UseLayoutRoundingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UseLayoutRoundingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.UseLayoutRoundingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UseLayoutRoundingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UseLayoutRoundingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UseLayoutRoundingProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.UseLayoutRoundingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1491">識別 <see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1491">Identifies the <see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.VerticalAlignment VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.VerticalAlignment VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As VerticalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VerticalAlignment VerticalAlignment { System::Windows::VerticalAlignment get(); void set(System::Windows::VerticalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalAlignment : System.Windows.VerticalAlignment with get, set" Usage="System.Windows.FrameworkElement.VerticalAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.VerticalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1492">取得或設定套用至此項目在父項目 (例如面板或項目控制項) 中組成時的垂直對齊特性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1492">Gets or sets the vertical alignment characteristics applied to this element when it is composed within a parent element such as a panel or items control.</span></span></summary>
        <value><span data-ttu-id="98f6b-1493">垂直對齊設定。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1493">A vertical alignment setting.</span></span> <span data-ttu-id="98f6b-1494">預設為 <see cref="F:System.Windows.VerticalAlignment.Stretch" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1494">The default is <see cref="F:System.Windows.VerticalAlignment.Stretch" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1495">當<xref:System.Windows.FrameworkElement.Height%2A>並<xref:System.Windows.FrameworkElement.Width%2A>項目上明確設定屬性，這些測量結果採取優先於版面配置] 和 [取消設定此屬性的規則的效果<xref:System.Windows.VerticalAlignment.Stretch>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1495">When <xref:System.Windows.FrameworkElement.Height%2A> and <xref:System.Windows.FrameworkElement.Width%2A> properties are explicitly set on an element, these measurements take layout precedent and cancel the regular effects of setting this property to <xref:System.Windows.VerticalAlignment.Stretch>.</span></span>  
  
 <span data-ttu-id="98f6b-1496"><xref:System.Windows.FrameworkElement.VerticalAlignment%2A> 是[!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)]屬性存取子是相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1496"><xref:System.Windows.FrameworkElement.VerticalAlignment%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="98f6b-1497">這個特定的相依性屬性很頻繁已設定不同的衍生項目類別，特別是控制項在其明顯的 「 預設 」 值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1497">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly controls.</span></span> <span data-ttu-id="98f6b-1498">這通常發生於兩種方式之一： 相依性屬性重新加以註冊特定的衍生類別中，但具有不同的中繼資料，設定其預設值;或以不同的方式設定該相依性屬性值的預設樣式套用。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1498">This generally occurs in one of two ways: the dependency property is re-registered to a particular  derived class, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently.</span></span> <span data-ttu-id="98f6b-1499">比方說，明顯 「 預設 」 的<xref:System.Windows.FrameworkElement.VerticalAlignment%2A>for<xref:System.Windows.Controls.ComboBoxItem>控制項將會是<xref:System.Windows.VerticalAlignment.Center>，即使<xref:System.Windows.Controls.ComboBoxItem>繼承<xref:System.Windows.FrameworkElement.VerticalAlignment%2A>直接從<xref:System.Windows.FrameworkElement>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1499">For example, the apparent "default" of <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> for a <xref:System.Windows.Controls.ComboBoxItem> control will be <xref:System.Windows.VerticalAlignment.Center>, even though <xref:System.Windows.Controls.ComboBoxItem> inherits <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> direct from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="98f6b-1500">這是因為該值重設的預設樣式內<xref:System.Windows.Controls.ComboBoxItem>，樣式的控制項範本內。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1500">This is because that value was reset within the default style of <xref:System.Windows.Controls.ComboBoxItem>, within the style's control template.</span></span>  
  
 <span data-ttu-id="98f6b-1501"><xref:System.Windows.Controls.Canvas> 不會使用<xref:System.Windows.FrameworkElement.VerticalAlignment%2A>當您在撰寫版面配置，因為<xref:System.Windows.Controls.Canvas>根據絕對位置。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1501"><xref:System.Windows.Controls.Canvas> does not use <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> when composing layout, because <xref:System.Windows.Controls.Canvas> is based on absolute positioning.</span></span>  
  
 <span data-ttu-id="98f6b-1502">當繼承<xref:System.Windows.Controls.ComboBoxItem>或任何衍生類別，<xref:System.Windows.Controls.ComboBoxItem>重新定義預設值，這個屬性是<xref:System.Windows.VerticalAlignment.Center>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1502">When inherited by <xref:System.Windows.Controls.ComboBoxItem> or any derived classes, <xref:System.Windows.Controls.ComboBoxItem> redefines the default value of this property to be <xref:System.Windows.VerticalAlignment.Center>.</span></span>  
  
<a name="dependencyPropertyInfo_VerticalAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-1503">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1503">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1504">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1504">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.VerticalAlignmentProperty>|  
|<span data-ttu-id="98f6b-1505">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-1505">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.VerticalAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.VerticalAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1506">識別 <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1506">Identifies the <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualChildrenCount : int" Usage="System.Windows.FrameworkElement.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1507">取得這個項目內的視覺化子項目數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1507">Gets the number of visual child elements within this element.</span></span></summary>
        <value><span data-ttu-id="98f6b-1508">這個項目的視覺化子項目數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1508">The number of visual child elements for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1509"><xref:System.Windows.FrameworkElement>實作<xref:System.Windows.FrameworkElement.VisualChildrenCount%2A>一律會傳回零或一次。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1509">The <xref:System.Windows.FrameworkElement> implementation of <xref:System.Windows.FrameworkElement.VisualChildrenCount%2A> always returns either zero or one.</span></span> <span data-ttu-id="98f6b-1510">維護視覺子系集合，其中可能會超過一個的類別必須覆寫這個屬性和<xref:System.Windows.FrameworkElement.GetVisualChild%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1510">Classes that maintain a visual child collection that might exceed one must override both this property and <xref:System.Windows.FrameworkElement.GetVisualChild%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-1511">這個屬性通常會用來判斷目前的子集合，基於實作版面配置覆寫的上限 (<xref:System.Windows.FrameworkElement.MeasureOverride%2A>， <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1511">This property is generally used to determine the upper bounds of the current child collection for purposes of implementing the layout overrides (<xref:System.Windows.FrameworkElement.MeasureOverride%2A>, <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="98f6b-1512">下列範例示範如何自訂裝飾項會使用所宣告的值<xref:System.Windows.Media.VisualCollection>它會維護其多個視覺子系，並報告這些值的覆寫透過<xref:System.Windows.FrameworkElement.VisualChildrenCount%2A>和<xref:System.Windows.FrameworkElement.GetVisualChild%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1512">The following example shows how a custom adorner uses the values declared by a <xref:System.Windows.Media.VisualCollection> that it maintains for its multiple visual children and reports these values through overrides of <xref:System.Windows.FrameworkElement.VisualChildrenCount%2A> and <xref:System.Windows.FrameworkElement.GetVisualChild%2A>.</span></span>  
  
 [!code-csharp[Adorners_ResizingAdorner#FEVisualOverridesPre](~/samples/snippets/csharp/VS_Snippets_Wpf/Adorners_ResizingAdorner/CSharp/ResizingAdorner.cs#fevisualoverridespre)]
 [!code-vb[Adorners_ResizingAdorner#FEVisualOverridesPre](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_ResizingAdorner/visualbasic/resizingadorner.vb#fevisualoverridespre)]  
[!code-csharp[Adorners_ResizingAdorner#FEVisualOverrides](~/samples/snippets/csharp/VS_Snippets_Wpf/Adorners_ResizingAdorner/CSharp/ResizingAdorner.cs#fevisualoverrides)]
[!code-vb[Adorners_ResizingAdorner#FEVisualOverrides](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_ResizingAdorner/visualbasic/resizingadorner.vb#fevisualoverrides)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="98f6b-1513">如果您的類別支援多個視覺子系，子項目集合中，覆寫這個屬性，該集合中傳回的項目計數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1513">If your class supports more than one visual child in a child element collection, override this property to return the count of elements in that collection.</span></span> <span data-ttu-id="98f6b-1514">即使集合物件本身會傳回計數，您必須這麼做。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1514">You must do this even if the collection object itself returns a count.</span></span> <span data-ttu-id="98f6b-1515">在 WPF 架構層級的項目配置邏輯會假設所有項目，會傳回有效的計數，透過其<see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" />屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1515">Element layout logic at the WPF framework level presumes that all elements will return a valid count through their <see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" /> property.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.FrameworkElement.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1516">取得或設定元素的寬度。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1516">Gets or sets the width of the element.</span></span></summary>
        <value><span data-ttu-id="98f6b-1517">項目的寬度 (以 [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)] 為單位)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1517">The width of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span> <span data-ttu-id="98f6b-1518">預設值為 <see cref="F:System.Double.NaN" />。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1518">The default value is <see cref="F:System.Double.NaN" />.</span></span> <span data-ttu-id="98f6b-1519">這個值必須等於或大於 0.0。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1519">This value must be equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-1520">如需上限資訊，請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1520">See Remarks for upper bound information.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="98f6b-1521">這是三個屬性上<xref:System.Windows.FrameworkElement>指定寬度的資訊。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1521">This is one of three properties on <xref:System.Windows.FrameworkElement> that specify width information.</span></span>  <span data-ttu-id="98f6b-1522">其他兩種方式<xref:System.Windows.FrameworkElement.MinWidth%2A>和<xref:System.Windows.FrameworkElement.MaxWidth%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1522">The other two are <xref:System.Windows.FrameworkElement.MinWidth%2A> and <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span>  <span data-ttu-id="98f6b-1523">如果這些值之間沒有衝突，實際寬度判斷的應用程式的順序是第一個<xref:System.Windows.FrameworkElement.MinWidth%2A>必須能被接受，然後<xref:System.Windows.FrameworkElement.MaxWidth%2A>，最後每一個位於範圍中，如果<xref:System.Windows.FrameworkElement.Width%2A>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1523">If there is a conflict between these values, the order of application for actual width determination is first <xref:System.Windows.FrameworkElement.MinWidth%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxWidth%2A>, and finally if each of these are within bounds, <xref:System.Windows.FrameworkElement.Width%2A>.</span></span>  
  
 <span data-ttu-id="98f6b-1524">這個屬性傳回的值一定是與任何已設定為它的值相同。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1524">The return value of this property is always the same as any value that was set to it.</span></span> <span data-ttu-id="98f6b-1525">相較之下，windows 7<xref:System.Windows.FrameworkElement.ActualWidth%2A>而有所不同。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1525">In contrast, the value of the <xref:System.Windows.FrameworkElement.ActualWidth%2A> may vary.</span></span> <span data-ttu-id="98f6b-1526">版面配置可能已基於某些原因拒絕建議的大小。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1526">The layout may have rejected the suggested size for some reason.</span></span> <span data-ttu-id="98f6b-1527">此外，配置系統本身以非同步方式運作的屬性系統集相對<xref:System.Windows.FrameworkElement.Width%2A>和可能處理該特定尚未調整大小屬性變更。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1527">Also, the layout system itself works asynchronously relative to the property system set of <xref:System.Windows.FrameworkElement.Width%2A> and may not have processed that particular sizing property change yet.</span></span>  
  
 <span data-ttu-id="98f6b-1528">除了為可接受<xref:System.Double>值，這個屬性也可以是<xref:System.Double.NaN?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1528">In addition to acceptable <xref:System.Double> values, this property can also be <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="98f6b-1529">這是您指定自動調整大小行為的方式。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1529">This is how you specify auto sizing behavior.</span></span> <span data-ttu-id="98f6b-1530">在 [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]您將值設定為字串"Auto"（不區分大小寫） 若要啟用自動調整大小行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1530">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] you set the value to the string "Auto" (case insensitive) to enable the auto sizing behavior.</span></span> <span data-ttu-id="98f6b-1531">自動調整大小行為表示項目將會填滿可用的寬度。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1531">Auto sizing behavior implies that the element will fill the width available to it.</span></span> <span data-ttu-id="98f6b-1532">不過請注意，特定的控制項通常會提供將會停用自動調整大小行為，除非它是特別重新啟用其預設樣式中的預設值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1532">Note however that specific controls frequently supply default values in their default styles that will disable the auto sizing behavior unless it is specifically re-enabled.</span></span>  
  
 <span data-ttu-id="98f6b-1533">驗證檢查，除了沒有不具決定性的上限值，用於繫結<xref:System.Windows.FrameworkElement.Width%2A>，會由配置系統強制執行 (這是非常大數目，大於<xref:System.Single.MaxValue?displayProperty=nameWithType>但小於<xref:System.Double.MaxValue?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1533">In addition to the validation check, there is a nondeterministic upper value bound for <xref:System.Windows.FrameworkElement.Width%2A> that is enforced by the layout system (this is a very large number, larger than <xref:System.Single.MaxValue?displayProperty=nameWithType> but smaller than <xref:System.Double.MaxValue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="98f6b-1534">如果您超過此限制，將不會呈現項目，並擲回任何例外狀況。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1534">If you exceed this bound, the element will not render, and no exception is thrown.</span></span> <span data-ttu-id="98f6b-1535">請勿設定<xref:System.Windows.FrameworkElement.Width%2A>大幅超過大小上限的任何可能的視覺顯示，或者您可能會超過此不具決定性的上限值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1535">Do not set <xref:System.Windows.FrameworkElement.Width%2A> to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.</span></span>  
  
<a name="xamlAttributeUsage_Width"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="98f6b-1536">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="98f6b-1536">XAML Attribute Usage</span></span>  
  
```  
<object Width="double"/>  
- or -  
<object Width ="qualifiedDouble"/>  
- or -  
<object Width ="Auto"/>  
```  
  
<a name="xamlValues_Width"></a>   
## <a name="xaml-values"></a><span data-ttu-id="98f6b-1537">XAML 值</span><span class="sxs-lookup"><span data-stu-id="98f6b-1537">XAML Values</span></span>  
 <span data-ttu-id="98f6b-1538">*double*</span><span class="sxs-lookup"><span data-stu-id="98f6b-1538">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="98f6b-1539">字串表示法<xref:System.Double>等於或大於 0.0 的值。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1539">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="98f6b-1540">如需上限資訊，請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1540">See Remarks for upper bound information.</span></span> <span data-ttu-id="98f6b-1541">這個值會解譯為[!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)]度量。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1541">This value is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="98f6b-1542">字串不需要明確包含小數位數。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1542">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="98f6b-1543">執行個體的值`1`是可以接受的。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1543">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="98f6b-1544">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="98f6b-1544">*qualifiedDouble*</span></span>  
 <span data-ttu-id="98f6b-1545">A*雙*值，如上所述，後面接著一個的下列單位宣告字串： `px`， `in`， `cm`， `pt`。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1545">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="98f6b-1546">`px` （預設值） [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="98f6b-1546">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="98f6b-1547">`in` 是英吋為單位;1in = = 96px</span><span class="sxs-lookup"><span data-stu-id="98f6b-1547">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="98f6b-1548">`cm` 是公釐。1cm==(96/2.54) 像素</span><span class="sxs-lookup"><span data-stu-id="98f6b-1548">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="98f6b-1549">`pt` is points; 1pt==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="98f6b-1549">`pt` is points; 1pt==(96/72) px</span></span>  
  
 `Auto`  
 <span data-ttu-id="98f6b-1550">啟用自動調整大小行為。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1550">Enables autosizing behavior.</span></span> <span data-ttu-id="98f6b-1551">請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1551">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_Width"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="98f6b-1552">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="98f6b-1552">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="98f6b-1553">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="98f6b-1553">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.WidthProperty>|  
|<span data-ttu-id="98f6b-1554">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="98f6b-1554">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.WidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.WidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="98f6b-1555">識別 <see cref="P:System.Windows.FrameworkElement.Width" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="98f6b-1555">Identifies the <see cref="P:System.Windows.FrameworkElement.Width" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>