<Type Name="WeakEventManager+ListenerList" FullName="System.Windows.WeakEventManager+ListenerList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f0f2be98debc822496ae0fb7a0b36b79ece2165" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="protected class WeakEventManager.ListenerList" />
  <TypeSignature Language="ILAsm" Value=".class nested protected auto ansi beforefieldinit WeakEventManager/ListenerList extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.WeakEventManager.ListenerList" />
  <TypeSignature Language="VB.NET" Value="Protected Class WeakEventManager.ListenerList" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3178b-101">提供內建的集合清單以用於儲存 <see cref="T:System.Windows.WeakEventManager" /> 的接聽程式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3178b-101">Provides a built-in collection list for storing listeners for a <see cref="T:System.Windows.WeakEventManager" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3178b-102">雖然這份清單包含類似所定義的成員<xref:System.Collections.IList>和<xref:System.Collections.ICollection>，並提供類似的功能，此類別會實作任一這些介面。</span><span class="sxs-lookup"><span data-stu-id="3178b-102">Although this list contains members that resemble those defined by <xref:System.Collections.IList> and <xref:System.Collections.ICollection>, and provide similar functionality, this class implements neither of those interfaces.</span></span>  
  
 <span data-ttu-id="3178b-103">大部分<xref:System.Windows.WeakEventManager>衍生的類別不需要使用任何成員上<xref:System.Windows.WeakEventManager.ListenerList>。</span><span class="sxs-lookup"><span data-stu-id="3178b-103">Most <xref:System.Windows.WeakEventManager> derived classes do not need to use any members on <xref:System.Windows.WeakEventManager.ListenerList>.</span></span> <span data-ttu-id="3178b-104"><xref:System.Windows.WeakEventManager>方法<xref:System.Windows.WeakEventManager.ProtectedAddListener%2A>和<xref:System.Windows.WeakEventManager.ProtectedRemoveListener%2A>使用的預設<xref:System.Windows.WeakEventManager.ListenerList>就內部而言，一份清單每個`source`。</span><span class="sxs-lookup"><span data-stu-id="3178b-104">The <xref:System.Windows.WeakEventManager> methods <xref:System.Windows.WeakEventManager.ProtectedAddListener%2A> and <xref:System.Windows.WeakEventManager.ProtectedRemoveListener%2A> use a default <xref:System.Windows.WeakEventManager.ListenerList> internally, one list for each `source`.</span></span>  
  
 <span data-ttu-id="3178b-105">您只需要呼叫<xref:System.Windows.WeakEventManager.ListenerList>方法如果您<xref:System.Windows.WeakEventManager>類別會維護相同的事件來源組合，以建立不同的情況，事件的每個清單的多個清單。</span><span class="sxs-lookup"><span data-stu-id="3178b-105">You only need to call <xref:System.Windows.WeakEventManager.ListenerList> methods if your <xref:System.Windows.WeakEventManager> class maintains multiple lists for the same event-source combination, with each list created to account for different conditions of the event.</span></span> <span data-ttu-id="3178b-106">在此情況下，您不會將<xref:System.Windows.WeakEventManager.ProtectedAddListener%2A>和<xref:System.Windows.WeakEventManager.ProtectedRemoveListener%2A>而將改為實作`AddListener`或`RemoveListener`要作用中的內部接聽程式清單中，通常會根據您加入的參數，其中有一個接聽程式`AddListener`或`RemoveListener`.</span><span class="sxs-lookup"><span data-stu-id="3178b-106">In this case, you would not use <xref:System.Windows.WeakEventManager.ProtectedAddListener%2A> and <xref:System.Windows.WeakEventManager.ProtectedRemoveListener%2A> and would instead implement `AddListener` or `RemoveListener` to act upon listeners in just one of the internal listener lists, typically based on a parameter that you add to `AddListener` or `RemoveListener`.</span></span> <span data-ttu-id="3178b-107">此外，無法直接呼叫接收未經處理的事件處理常式實作<xref:System.Windows.WeakEventManager.DeliverEvent%2A>; 您必須改為追蹤事件的細節，並將事件傳遞給適當的清單中使用<xref:System.Windows.WeakEventManager.DeliverEventToList%2A>。</span><span class="sxs-lookup"><span data-stu-id="3178b-107">Also, the handler implementation that receives the raw event cannot simply call <xref:System.Windows.WeakEventManager.DeliverEvent%2A>; you must instead keep track of the specifics of the event and deliver the event only to the appropriate list using <xref:System.Windows.WeakEventManager.DeliverEventToList%2A>.</span></span>  
  
 <span data-ttu-id="3178b-108">各種方法<xref:System.Windows.WeakEventManager.ListenerList>，以便您可以使用您的內部清單，以及您可以防止修改清單的實際事件傳遞期間所提供。</span><span class="sxs-lookup"><span data-stu-id="3178b-108">The various methods of <xref:System.Windows.WeakEventManager.ListenerList> are provided so that you can work with your internal lists and so that you can prevent modification of the list during actual delivery of the event.</span></span>  
  
 <span data-ttu-id="3178b-109">使用此實作方法的範例類別是<xref:System.ComponentModel.PropertyChangedEventManager>，保留個別的接聽程式會列出`PropertyChanged`根據哪一個屬性已變更。</span><span class="sxs-lookup"><span data-stu-id="3178b-109">An example class that used this implementation technique is <xref:System.ComponentModel.PropertyChangedEventManager>, which maintains separate listener lists for `PropertyChanged` based on which property changed.</span></span>  
  
<a name="xamlTextUsage_ListenerList"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="3178b-110">XAML 文字用法</span><span class="sxs-lookup"><span data-stu-id="3178b-110">XAML Text Usage</span></span>  
 <span data-ttu-id="3178b-111">您無法使用此類別中的[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]。</span><span class="sxs-lookup"><span data-stu-id="3178b-111">You cannot use this class in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.WeakEventManager" />
    <altmember cref="T:System.Windows.IWeakEventListener" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="3178b-112">初始化 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-112">Initializes a new instance of the <see cref="T:System.Windows.WeakEventManager.ListenerList" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListenerList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3178b-113">初始化 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-113">Initializes a new instance of the <see cref="T:System.Windows.WeakEventManager.ListenerList" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListenerList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListenerList(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="3178b-114">初始清單中應該配置的項目數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-114">The number of items that should be allocated in the initial list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3178b-115">使用指定的初始容量，初始化 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-115">Initializes a new instance of the <see cref="T:System.Windows.WeakEventManager.ListenerList" /> class with the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.IWeakEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.IWeakEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.Add(System.Windows.IWeakEventListener)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (listener As IWeakEventListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::IWeakEventListener ^ listener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
      </Parameters>
      <Docs>
        <param name="listener">
          <span data-ttu-id="3178b-116">要加入至 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 的接聽程式項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-116">The listener element to add to the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3178b-117">將 <see cref="T:System.Windows.IWeakEventListener" /> 物件加入至 <see cref="T:System.Windows.WeakEventManager.ListenerList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-117">Adds a <see cref="T:System.Windows.IWeakEventListener" /> object to the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3178b-118">物件提供為接聽程式應該是<xref:System.Windows.DependencyObject>實作<xref:System.Windows.IWeakEventListener>介面便會因此擁有可運作的<xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>實作。</span><span class="sxs-lookup"><span data-stu-id="3178b-118">The object provided as listener should be a <xref:System.Windows.DependencyObject> that implements the <xref:System.Windows.IWeakEventListener> interface and therefore has a working <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> implementation.</span></span>  
  
 <span data-ttu-id="3178b-119">您應該一律呼叫<xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A>之前變更清單的內容。</span><span class="sxs-lookup"><span data-stu-id="3178b-119">You should always call <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> before changing the list contents.</span></span> <span data-ttu-id="3178b-120">否則，清單可能正在傳遞事件，並因此鎖定原始。</span><span class="sxs-lookup"><span data-stu-id="3178b-120">Otherwise, the list may be in process of delivering events and therefore the original is locked.</span></span> <span data-ttu-id="3178b-121">呼叫<xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A>變更輸入`list`是複製品，讓您<xref:System.Windows.WeakEventManager.ListenerList.Add%2A>呼叫仍然可以在複製品上使用。</span><span class="sxs-lookup"><span data-stu-id="3178b-121">Calling <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> changes the input `list` to be a clone so that your <xref:System.Windows.WeakEventManager.ListenerList.Add%2A> call can still work on the clone.</span></span> <span data-ttu-id="3178b-122">如果<xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A>傳回`true`，您可能需要更新任何私用的參考至您的程式碼其他區域中維護的清單。</span><span class="sxs-lookup"><span data-stu-id="3178b-122">If <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> returns `true`, you might need to update any private references to the list that you maintain in other areas of your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)" />
        <altmember cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.AddHandler(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandler (handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="3178b-123">要加入至 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-123">The event handler to add to the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3178b-124">將事件處理常式加入至 <see cref="T:System.Windows.WeakEventManager.ListenerList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-124">Adds an event handler to the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUse">
      <MemberSignature Language="C#" Value="public bool BeginUse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool BeginUse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginUse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BeginUse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3178b-125">宣告清單為使用中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-125">Declares the list to be in use.</span>
          </span>
          <span data-ttu-id="3178b-126">這樣可避免在清單項目重覆時對清單做出直接變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-126">This prevents direct changes to the list during iterations of the list items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3178b-127">如果已經宣告清單為使用中則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-127">
              <see langword="true" /> if the list was already declared to be in use; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3178b-128">A<xref:System.Windows.WeakEventManager>實作應該呼叫<xref:System.Windows.WeakEventManager.ListenerList.BeginUse%2A>之前逐一查看清單傳遞事件的接聽項，且應呼叫<xref:System.Windows.WeakEventManager.ListenerList.EndUse%2A>完成時。</span><span class="sxs-lookup"><span data-stu-id="3178b-128">A <xref:System.Windows.WeakEventManager> implementation should call <xref:System.Windows.WeakEventManager.ListenerList.BeginUse%2A> before iterating through the list to deliver an event to the listeners, and should call <xref:System.Windows.WeakEventManager.ListenerList.EndUse%2A> when it is done.</span></span> <span data-ttu-id="3178b-129">這可防止其他呼叫端進行事件傳遞的反覆項目正在進行時修改清單。</span><span class="sxs-lookup"><span data-stu-id="3178b-129">This prevents another caller from modifying the list while the iteration for purposes of event delivery is in progress.</span></span> <span data-ttu-id="3178b-130">如果清單在這段期間修改，則會複製清單。</span><span class="sxs-lookup"><span data-stu-id="3178b-130">If the list is modified during this time, then the list is cloned.</span></span> <span data-ttu-id="3178b-131">如果複製的清單，然後<xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A>傳回`true`，這表示您錯過最後一次傳遞中最近的接聽程式變更。</span><span class="sxs-lookup"><span data-stu-id="3178b-131">If the list is cloned, then <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> returns `true`, which means that you have missed a recent listener change in the last delivery.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.WeakEventManager.ListenerList.EndUse" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.WeakEventManager.ListenerList Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.WeakEventManager/ListenerList Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As WeakEventManager.ListenerList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3178b-132">建立這個 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 的可修改複製品。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-132">Creates a modifiable clone of this <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3178b-133">目前物件的可修改複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-133">A modifiable clone of the current object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="protected void CopyTo (System.Windows.WeakEventManager.ListenerList newList);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CopyTo(class System.Windows.WeakEventManager/ListenerList newList) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.CopyTo(System.Windows.WeakEventManager.ListenerList)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CopyTo (newList As WeakEventManager.ListenerList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newList" Type="System.Windows.WeakEventManager+ListenerList" />
      </Parameters>
      <Docs>
        <param name="newList">
          <span data-ttu-id="3178b-134">要做為複製目標的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-134">The object to copy to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3178b-135">將目前的 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 複製到指定的 <see cref="T:System.Windows.WeakEventManager.ListenerList" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-135">Copies the current <see cref="T:System.Windows.WeakEventManager.ListenerList" /> to the specified <see cref="T:System.Windows.WeakEventManager.ListenerList" /></span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.WeakEventManager.ListenerList.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3178b-136">取得 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 中所含的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-136">Gets the number of items contained in the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3178b-137">
            <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 中所含的項目數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-137">The number of items contained in the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeliverEvent">
      <MemberSignature Language="C#" Value="public virtual bool DeliverEvent (object sender, EventArgs args, Type managerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeliverEvent(object sender, class System.EventArgs args, class System.Type managerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.DeliverEvent(System.Object,System.EventArgs,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeliverEvent (sender As Object, args As EventArgs, managerType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool DeliverEvent(System::Object ^ sender, EventArgs ^ args, Type ^ managerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
        <Parameter Name="managerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="3178b-138">引發事件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-138">The object that raised the event.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="3178b-139">包含事件資料的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-139">An object that contains the event data.</span>
          </span>
        </param>
        <param name="managerType">
          <span data-ttu-id="3178b-140">呼叫這個方法的 <see cref="T:System.Windows.WeakEventManager" /> 的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-140">The type of the <see cref="T:System.Windows.WeakEventManager" /> that calls this method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3178b-141">將受管理的事件傳遞給 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 中的每一個接聽程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-141">Delivers the event being managed to each listener in the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3178b-142">如果在 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 中有任何接聽程式會參考已記憶體回收的物件，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-142">
              <see langword="true" /> if any of the listeners in the <see cref="T:System.Windows.WeakEventManager.ListenerList" /> refer to an object that has been garbage collected; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.WeakEventManager.ListenerList Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.WeakEventManager/ListenerList Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.WeakEventManager.ListenerList.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As WeakEventManager.ListenerList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3178b-143">取得值，這個值表示用於比較的空白清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-143">Gets a value that represents an empty list for purposes of comparisons.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3178b-144">空白清單表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-144">The empty list representation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUse">
      <MemberSignature Language="C#" Value="public void EndUse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndUse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.EndUse" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndUse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndUse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3178b-145">解除鎖定 <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" /> 所初始化的鎖定狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-145">Unlocks the locked state initiated by <see cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.WeakEventManager.ListenerList.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3178b-146">取得值，宣告這個 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 是否為空白。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-146">Gets a value that declares whether this <see cref="T:System.Windows.WeakEventManager.ListenerList" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3178b-147">如果該清單為空則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-147">
              <see langword="true" /> if the list is empty; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3178b-148">這個方法相當於檢查是否<xref:System.Windows.WeakEventManager.ListenerList.Count%2A>為零，但不會檢查是否在清單中的參考已經過時。</span><span class="sxs-lookup"><span data-stu-id="3178b-148">This method is equivalent to checking whether the <xref:System.Windows.WeakEventManager.ListenerList.Count%2A> is zero, and does not check whether any of the references in the list are now stale.</span></span> <span data-ttu-id="3178b-149">如果您想要確保所有參考都都仍然有效，請呼叫<xref:System.Windows.WeakEventManager.ListenerList.Purge%2A>之前檢查空白狀態的清單。</span><span class="sxs-lookup"><span data-stu-id="3178b-149">If you want to assure that all references are still valid, call <xref:System.Windows.WeakEventManager.ListenerList.Purge%2A> just prior to checking the empty status of the list.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.IWeakEventListener this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IWeakEventListener Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.WeakEventManager.ListenerList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As IWeakEventListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IWeakEventListener ^ default[int] { System::Windows::IWeakEventListener ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IWeakEventListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="3178b-150">清單中接聽程式之以零起始的索引。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-150">The zero-based index of the listener in the list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3178b-151">取得或設定 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 中的指定接聽程式項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-151">Gets or sets a specific listener item in the <see cref="T:System.Windows.WeakEventManager.ListenerList" /> .</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3178b-152">位於該索引中的項目，如果該索引中沒有任何項目則為 null 參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-152">The item at that index, or a null reference if no item was at that index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareForWriting">
      <MemberSignature Language="C#" Value="public static bool PrepareForWriting (ref System.Windows.WeakEventManager.ListenerList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool PrepareForWriting(class System.Windows.WeakEventManager/ListenerList&amp; list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PrepareForWriting (ByRef list As WeakEventManager.ListenerList) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool PrepareForWriting(System::Windows::WeakEventManager::ListenerList ^ % list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Windows.WeakEventManager+ListenerList&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="list">
          <span data-ttu-id="3178b-153">要查看使用狀態並且可能複製的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-153">The list to check for use state and potentially copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3178b-154">查看提供的清單是否為使用中，如果為使用中則將清單參考參數設定成清單複本，而不是原始清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-154">Checks to see whether the provided list is in use, and if so, sets the list reference parameter to a copy of that list rather than the original.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3178b-155">如果提供的清單在呼叫期間為使用中，而且 <paramref name="list" /> 參數參考已重設為複本，則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-155">
              <see langword="true" /> if the provided list was in use at the time of call and therefore the <paramref name="list" /> parameter reference was reset to be a copy.</span>
          </span>
          <span data-ttu-id="3178b-156">如果提供的清單不在使用中，而 <paramref name="list" /> 參數參考也保持不變，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-156">
              <see langword="false" /> if the provided list was not in use, in which case the <paramref name="list" /> parameter reference remains unaltered.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3178b-157">如果指定的清單是在使用中 （表示正在傳遞事件），呼叫這個方法會取代輸入`list`的複製品。</span><span class="sxs-lookup"><span data-stu-id="3178b-157">If the given list is in use (which means an event is currently being delivered), calling this method will replace the input `list` with a clone.</span></span>  <span data-ttu-id="3178b-158">現有的使用者將會完成將事件傳遞到原始的清單，不受干擾的變更至新的清單。</span><span class="sxs-lookup"><span data-stu-id="3178b-158">The existing users will finish delivering the event to the original list, without interference from changes to the new list.</span></span>  
  
 <span data-ttu-id="3178b-159">如果此方法會傳回`true`，呼叫端可能會想要在他們自己的資料結構中, 插入新的清單，因為這表示提供的清單不再是目前的可能性。</span><span class="sxs-lookup"><span data-stu-id="3178b-159">If the method returns `true`, callers may want to insert the new list in their own data structures, since this indicates the possibility that the provided list is no longer current.</span></span>  
  
 <span data-ttu-id="3178b-160">這個方法會呼叫<xref:System.Windows.WeakEventManager.ListenerList.BeginUse%2A>內部，然後立即呼叫<xref:System.Windows.WeakEventManager.ListenerList.EndUse%2A>。</span><span class="sxs-lookup"><span data-stu-id="3178b-160">This method calls <xref:System.Windows.WeakEventManager.ListenerList.BeginUse%2A> internally and then immediately calls <xref:System.Windows.WeakEventManager.ListenerList.EndUse%2A>.</span></span> <span data-ttu-id="3178b-161">因此呼叫<xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A>本身不會導致在清單上的鎖定。</span><span class="sxs-lookup"><span data-stu-id="3178b-161">Therefore calling <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> does not itself introduce a lock on the list.</span></span> <span data-ttu-id="3178b-162">即使複製複本是次要作業呼叫之後<xref:System.Windows.WeakEventManager.ListenerList.EndUse%2A>。</span><span class="sxs-lookup"><span data-stu-id="3178b-162">Even the clone copy is done as a secondary operation after calling <xref:System.Windows.WeakEventManager.ListenerList.EndUse%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />
        <altmember cref="M:System.Windows.WeakEventManager.ListenerList.EndUse" />
      </Docs>
    </Member>
    <Member MemberName="Purge">
      <MemberSignature Language="C#" Value="public bool Purge ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Purge() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.Purge" />
      <MemberSignature Language="VB.NET" Value="Public Function Purge () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Purge();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3178b-163">將基礎參考目標為 null 參考之清單中的所有項目移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-163">Removes all entries from the list where the underlying reference target is a null reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3178b-164">如果已清除任何項目則傳回 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-164">Returns <see langword="true" /> if any entries were purged; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.IWeakEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.IWeakEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.Remove(System.Windows.IWeakEventListener)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (listener As IWeakEventListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::IWeakEventListener ^ listener);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="System.Windows.IWeakEventListener" />
      </Parameters>
      <Docs>
        <param name="listener">
          <span data-ttu-id="3178b-165">要移除的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-165">The item to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3178b-166">從 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 移除第一個相符的接聽程式項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-166">Removes the first occurrence of a listener item from the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3178b-167">您應該一律呼叫<xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A>之前變更清單的內容。</span><span class="sxs-lookup"><span data-stu-id="3178b-167">You should always call <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> before changing the list contents.</span></span> <span data-ttu-id="3178b-168">否則，清單可能正在傳遞事件，並因此鎖定原始。</span><span class="sxs-lookup"><span data-stu-id="3178b-168">Otherwise, the list may be in process of delivering events and therefore the original is locked.</span></span> <span data-ttu-id="3178b-169">呼叫<xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A>變更輸入`list`是複製品，讓您<xref:System.Windows.WeakEventManager.ListenerList.Remove%2A>呼叫仍然可以在複製品上使用。</span><span class="sxs-lookup"><span data-stu-id="3178b-169">Calling <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> changes the input `list` to be a clone so that your <xref:System.Windows.WeakEventManager.ListenerList.Remove%2A> call can still work on the clone.</span></span> <span data-ttu-id="3178b-170">如果<xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A>傳回`true`，您可能需要更新任何私用的參考至您的程式碼其他區域中維護的清單。</span><span class="sxs-lookup"><span data-stu-id="3178b-170">If <xref:System.Windows.WeakEventManager.ListenerList.PrepareForWriting%2A> returns `true`, you might need to update any private references to the list that you maintain in other areas of your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)" />
        <altmember cref="M:System.Windows.WeakEventManager.ListenerList.BeginUse" />
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHandler(class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager.ListenerList.RemoveHandler(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHandler (handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHandler(Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="3178b-171">要從 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 移除的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-171">The event handler to remove from the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3178b-172">從 <see cref="T:System.Windows.WeakEventManager.ListenerList" /> 移除事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3178b-172">Removes an event handler from the <see cref="T:System.Windows.WeakEventManager.ListenerList" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>