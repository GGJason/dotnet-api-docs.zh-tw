<Type Name="LineBreakCondition" FullName="System.Windows.LineBreakCondition">
  <TypeSignature Language="C#" Value="public enum LineBreakCondition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LineBreakCondition extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LineBreakCondition" />
  <TypeSignature Language="VB.NET" Value="Public Enum LineBreakCondition" />
  <TypeSignature Language="C++ CLI" Value="public enum class LineBreakCondition" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="633d6-101">描述環繞內嵌 (Inline) 物件的中斷條件。</span><span class="sxs-lookup"><span data-stu-id="633d6-101">Describes the breaking condition around an inline object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="633d6-102">這個列舉型別描述中斷，是否要允許的內嵌物件。</span><span class="sxs-lookup"><span data-stu-id="633d6-102">This enumeration describes whether a break is permitted for an inline object.</span></span> <span data-ttu-id="633d6-103">這個分行符號會受到<xref:System.Windows.LineBreakCondition>之前 （如果有的話） 的內嵌物件。</span><span class="sxs-lookup"><span data-stu-id="633d6-103">This break is affected by the <xref:System.Windows.LineBreakCondition> of the inline object before it (if any).</span></span> <span data-ttu-id="633d6-104">下表頂端的值代表<xref:System.Windows.LineBreakCondition>一個內嵌的值物件時在左邊的值表示另一個內嵌物件的值。</span><span class="sxs-lookup"><span data-stu-id="633d6-104">In the table below, the values across the top represent <xref:System.Windows.LineBreakCondition> values for one inline object while the values on the left represent values of another inline object.</span></span> <span data-ttu-id="633d6-105">"True"或"False"的值會指出根據兩個內嵌物件之間是否允許分行符號。</span><span class="sxs-lookup"><span data-stu-id="633d6-105">A value of "True" or "False" is indicated depending on whether a line break is permitted between the two inline objects.</span></span>  
  
||||||  
|-|-|-|-|-|  
||<span data-ttu-id="633d6-106">BreakDesired</span><span class="sxs-lookup"><span data-stu-id="633d6-106">BreakDesired</span></span>|<span data-ttu-id="633d6-107">BreakPossible</span><span class="sxs-lookup"><span data-stu-id="633d6-107">BreakPossible</span></span>|<span data-ttu-id="633d6-108">BreakRestrained</span><span class="sxs-lookup"><span data-stu-id="633d6-108">BreakRestrained</span></span>|<span data-ttu-id="633d6-109">BreakAlways</span><span class="sxs-lookup"><span data-stu-id="633d6-109">BreakAlways</span></span>|  
|<span data-ttu-id="633d6-110">BreakDesired</span><span class="sxs-lookup"><span data-stu-id="633d6-110">BreakDesired</span></span>|<span data-ttu-id="633d6-111">True</span><span class="sxs-lookup"><span data-stu-id="633d6-111">True</span></span>|<span data-ttu-id="633d6-112">True</span><span class="sxs-lookup"><span data-stu-id="633d6-112">True</span></span>|<span data-ttu-id="633d6-113">False</span><span class="sxs-lookup"><span data-stu-id="633d6-113">False</span></span>|<span data-ttu-id="633d6-114">True</span><span class="sxs-lookup"><span data-stu-id="633d6-114">True</span></span>|  
|<span data-ttu-id="633d6-115">BreakPossible</span><span class="sxs-lookup"><span data-stu-id="633d6-115">BreakPossible</span></span>|<span data-ttu-id="633d6-116">True</span><span class="sxs-lookup"><span data-stu-id="633d6-116">True</span></span>|<span data-ttu-id="633d6-117">False</span><span class="sxs-lookup"><span data-stu-id="633d6-117">False</span></span>|<span data-ttu-id="633d6-118">False</span><span class="sxs-lookup"><span data-stu-id="633d6-118">False</span></span>|<span data-ttu-id="633d6-119">True</span><span class="sxs-lookup"><span data-stu-id="633d6-119">True</span></span>|  
|<span data-ttu-id="633d6-120">BreakRestrained</span><span class="sxs-lookup"><span data-stu-id="633d6-120">BreakRestrained</span></span>|<span data-ttu-id="633d6-121">False</span><span class="sxs-lookup"><span data-stu-id="633d6-121">False</span></span>|<span data-ttu-id="633d6-122">False</span><span class="sxs-lookup"><span data-stu-id="633d6-122">False</span></span>|<span data-ttu-id="633d6-123">False</span><span class="sxs-lookup"><span data-stu-id="633d6-123">False</span></span>|<span data-ttu-id="633d6-124">True</span><span class="sxs-lookup"><span data-stu-id="633d6-124">True</span></span>|  
|<span data-ttu-id="633d6-125">BreakAlways</span><span class="sxs-lookup"><span data-stu-id="633d6-125">BreakAlways</span></span>|<span data-ttu-id="633d6-126">True</span><span class="sxs-lookup"><span data-stu-id="633d6-126">True</span></span>|<span data-ttu-id="633d6-127">True</span><span class="sxs-lookup"><span data-stu-id="633d6-127">True</span></span>|<span data-ttu-id="633d6-128">True</span><span class="sxs-lookup"><span data-stu-id="633d6-128">True</span></span>|<span data-ttu-id="633d6-129">True</span><span class="sxs-lookup"><span data-stu-id="633d6-129">True</span></span>|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BreakAlways">
      <MemberSignature Language="C#" Value="BreakAlways" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.LineBreakCondition BreakAlways = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.LineBreakCondition.BreakAlways" />
      <MemberSignature Language="VB.NET" Value="BreakAlways" />
      <MemberSignature Language="C++ CLI" Value="BreakAlways" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineBreakCondition</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="633d6-130">永遠允許中斷。</span><span class="sxs-lookup"><span data-stu-id="633d6-130">Break is always allowed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="BreakDesired">
      <MemberSignature Language="C#" Value="BreakDesired" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.LineBreakCondition BreakDesired = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.LineBreakCondition.BreakDesired" />
      <MemberSignature Language="VB.NET" Value="BreakDesired" />
      <MemberSignature Language="C++ CLI" Value="BreakDesired" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineBreakCondition</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="633d6-131">如果另一個物件不禁止，則中斷。</span><span class="sxs-lookup"><span data-stu-id="633d6-131">Break if not prohibited by another object.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="BreakPossible">
      <MemberSignature Language="C#" Value="BreakPossible" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.LineBreakCondition BreakPossible = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.LineBreakCondition.BreakPossible" />
      <MemberSignature Language="VB.NET" Value="BreakPossible" />
      <MemberSignature Language="C++ CLI" Value="BreakPossible" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineBreakCondition</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="633d6-132">如果另一個物件允許，則中斷。</span><span class="sxs-lookup"><span data-stu-id="633d6-132">Break if allowed by another object.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="BreakRestrained">
      <MemberSignature Language="C#" Value="BreakRestrained" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.LineBreakCondition BreakRestrained = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.LineBreakCondition.BreakRestrained" />
      <MemberSignature Language="VB.NET" Value="BreakRestrained" />
      <MemberSignature Language="C++ CLI" Value="BreakRestrained" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineBreakCondition</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="633d6-133">永遠禁止中斷，除非其他物件設定為 <see cref="F:System.Windows.LineBreakCondition.BreakAlways" />。</span><span class="sxs-lookup"><span data-stu-id="633d6-133">Break always prohibited unless the other object is set to <see cref="F:System.Windows.LineBreakCondition.BreakAlways" />.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>