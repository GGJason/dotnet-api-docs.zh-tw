<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df1b6107ba35b490207ab814ae9ccde139ed07d2" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37491619" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <TypeSignature Language="F#" Value="type PropertyPath = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6772f-101">Implements a data structure for describing a property as a path below another property, or below an owning type.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6772f-101">Implements a data structure for describing a property as a path below another property, or below an owning type.</span>
      </span>
      <span data-ttu-id="6772f-102">Property paths are used in data binding to objects, and in storyboards and timelines for animations.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6772f-102">Property paths are used in data binding to objects, and in storyboards and timelines for animations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6772f-103">這個類別包含字串<xref:System.Windows.PropertyPath.Path%2A>，以及相依性屬性的清單<xref:System.Windows.PropertyPath.PathParameters%2A>插入字串<xref:System.Windows.PropertyPath.Path%2A>。</span><span class="sxs-lookup"><span data-stu-id="6772f-103">This class contains a string <xref:System.Windows.PropertyPath.Path%2A>, and list of dependency properties that are the <xref:System.Windows.PropertyPath.PathParameters%2A> into the string <xref:System.Windows.PropertyPath.Path%2A>.</span></span>  
  
 <span data-ttu-id="6772f-104"><xref:System.Windows.PropertyPath> 支援兩種模式的行為：</span><span class="sxs-lookup"><span data-stu-id="6772f-104"><xref:System.Windows.PropertyPath> supports two modes of behavior:</span></span>  
  
 <span data-ttu-id="6772f-105">**來源模式**描述做為其他作業的來源屬性路徑。</span><span class="sxs-lookup"><span data-stu-id="6772f-105">**Source mode** describes a path to a property that is used as a source for some other operation.</span></span> <span data-ttu-id="6772f-106">此模式由<xref:System.Windows.Data.Binding>類別，以支援資料繫結。</span><span class="sxs-lookup"><span data-stu-id="6772f-106">This mode is used by the <xref:System.Windows.Data.Binding> class to support data binding.</span></span>  
  
 <span data-ttu-id="6772f-107">**目標模式**描述此屬性，將會設定為 目標屬性的路徑。</span><span class="sxs-lookup"><span data-stu-id="6772f-107">**Target mode** describes a path to a property that will be set as a target property.</span></span> <span data-ttu-id="6772f-108">此模式會使用以支援分鏡腳本與時間軸的 setter 的動畫。</span><span class="sxs-lookup"><span data-stu-id="6772f-108">This mode is used by animation in support of storyboard and timeline setters.</span></span>  
  
 <span data-ttu-id="6772f-109">比方說，`Background.Opacity`是兩個步驟的路徑。</span><span class="sxs-lookup"><span data-stu-id="6772f-109">For instance, `Background.Opacity` is a two-step path.</span></span> <span data-ttu-id="6772f-110">此路徑所示： 首先，尋找`Background`物件，屬性取得的值物件的`Background`屬性設定為，，，然後取得的值`Opacity`該物件的屬性。</span><span class="sxs-lookup"><span data-stu-id="6772f-110">This path implies: first, find the `Background` property of an object, get the value object that the `Background` property is set to, and then get the value of the `Opacity` property on that object.</span></span>  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="6772f-111">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="6772f-111">XAML Attribute Usage</span></span>  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a><span data-ttu-id="6772f-112">XAML 值</span><span class="sxs-lookup"><span data-stu-id="6772f-112">XAML Values</span></span>  
 <span data-ttu-id="6772f-113">*propertyPath*</span><span class="sxs-lookup"><span data-stu-id="6772f-113">*propertyPath*</span></span>  
 <span data-ttu-id="6772f-114">評估為簡單或複雜屬性路徑的字串。</span><span class="sxs-lookup"><span data-stu-id="6772f-114">A string that is evaluated to be either a simple or complex property path.</span></span> <span data-ttu-id="6772f-115">設定的語法<xref:System.Windows.PropertyPath>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]靈活，但複雜，且個別的主題所述[PropertyPath XAML 語法](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)。</span><span class="sxs-lookup"><span data-stu-id="6772f-115">The syntax for setting a <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is versatile but complex, and is described in the separate topic [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6772f-116">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6772f-116">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : obj -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="6772f-117">A property path that either describes a path to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property, or a single dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6772f-117">A property path that either describes a path to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property, or a single dependency property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6772f-118">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6772f-118">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6772f-119">這個建構函式有兩個完全不同的使用方式取決於它是否使用繫結，或分鏡腳本目標的目標模式逐步執行屬性路徑的來源模式屬性路徑。</span><span class="sxs-lookup"><span data-stu-id="6772f-119">This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</span></span>  
  
 <span data-ttu-id="6772f-120">如果使用這<xref:System.Windows.PropertyPath>繫結的來源模式`parameter`字串，表示屬性名稱，或可以是字串，描述中的屬性"逐步"路徑[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]正做為來源之物件的物件模型繫結。</span><span class="sxs-lookup"><span data-stu-id="6772f-120">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, `parameter` is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="6772f-121">繫結屬性路徑，識別 「 步驟 」 的字元是句點 （.）。</span><span class="sxs-lookup"><span data-stu-id="6772f-121">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="6772f-122">也支援索引子 （包括多個索引子和型別差異） 的參考。</span><span class="sxs-lookup"><span data-stu-id="6772f-122">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="6772f-123">如需詳細資訊，明確地使用字串的語法上<xref:System.Windows.Data.Binding>資訊，請參閱<xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6772f-123">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6772f-124">做為繫結來源屬性不需要相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="6772f-124">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="6772f-125">如果繫結更新雙向的參考的屬性必須是讀寫。</span><span class="sxs-lookup"><span data-stu-id="6772f-125">If the binding updates two-way, the property referenced must be read-write.</span></span> <span data-ttu-id="6772f-126">也請注意繫結目標沒有相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="6772f-126">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="6772f-127">如需詳細資訊，請參閱 <<c0> [ 資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="6772f-127">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="6772f-128">如果使用這<xref:System.Windows.PropertyPath>分鏡腳本目標，逐步執行路徑的目標模式`parameter`通常會當做型別<xref:System.Windows.DependencyProperty>。</span><span class="sxs-lookup"><span data-stu-id="6772f-128">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, `parameter` is generally provided as type <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="6772f-129">您也可以指定的字串<xref:System.Windows.DependencyProperty.Name%2A>。</span><span class="sxs-lookup"><span data-stu-id="6772f-129">You can also specify a string that is the <xref:System.Windows.DependencyProperty.Name%2A>.</span></span> <span data-ttu-id="6772f-130">任一種評估相同的結果，因為它會在內部儲存為字串。</span><span class="sxs-lookup"><span data-stu-id="6772f-130">Either of these evaluate to the same result, because it is stored internally as a string.</span></span> <span data-ttu-id="6772f-131">所提供<xref:System.Windows.DependencyProperty>會轉換成字串，以透過<xref:System.Windows.Markup.DependencyPropertyConverter>。</span><span class="sxs-lookup"><span data-stu-id="6772f-131">A provided <xref:System.Windows.DependencyProperty> is converted to a string through <xref:System.Windows.Markup.DependencyPropertyConverter>.</span></span> <span data-ttu-id="6772f-132"><xref:System.Windows.Markup.DependencyPropertyConverter>相依性屬性支援限定的命名格式，因此您可以指定*typeName*。*propertyName*限定到相依性屬性名稱的字串<xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType>建構函式程式碼中的。</span><span class="sxs-lookup"><span data-stu-id="6772f-132">The <xref:System.Windows.Markup.DependencyPropertyConverter> supports a qualified naming format for dependency properties, so you can specify a *typeName*.*propertyName* qualified dependency property name string to the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor in code.</span></span> <span data-ttu-id="6772f-133">相依性屬性識別碼的完整的路徑是不同的概念，而複雜的路徑。</span><span class="sxs-lookup"><span data-stu-id="6772f-133">The qualified path to the dependency property identifier is a different concept than a complex path.</span></span> <span data-ttu-id="6772f-134">複雜路徑<xref:System.Windows.PropertyPath>改為使用建立<xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType>建構函式。</span><span class="sxs-lookup"><span data-stu-id="6772f-134">A complex-path <xref:System.Windows.PropertyPath> should instead be created with the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : string * obj[] -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath (path, pathParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="6772f-135">A string that specifies the <see cref="P:System.Windows.PropertyPath.Path" />, in a tokenized format.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6772f-135">A string that specifies the <see cref="P:System.Windows.PropertyPath.Path" />, in a tokenized format.</span>
          </span>
        </param>
        <param name="pathParameters">
          <span data-ttu-id="6772f-136">An array of objects that sets the <see cref="P:System.Windows.PropertyPath.PathParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6772f-136">An array of objects that sets the <see cref="P:System.Windows.PropertyPath.PathParameters" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6772f-137">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class, with the provided pathing token string and parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6772f-137">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class, with the provided pathing token string and parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6772f-138">此簽章通常僅用於目標模式<xref:System.Windows.PropertyPath>複雜路徑的使用方式。</span><span class="sxs-lookup"><span data-stu-id="6772f-138">This signature is generally only used for target-mode <xref:System.Windows.PropertyPath> usages with complex paths.</span></span>  
  
 <span data-ttu-id="6772f-139">這個建構函式支援`params`針對`pathParameters`建構函式引數。</span><span class="sxs-lookup"><span data-stu-id="6772f-139">This constructor supports `params` for the `pathParameters` constructor argument.</span></span> <span data-ttu-id="6772f-140">因此，您也可以指定的內容`pathParameters`為一系列的逗號分隔的建構函式引數所填入的陣列，而不需要維度陣列，並於其中填入它與`pathParameters`項目。</span><span class="sxs-lookup"><span data-stu-id="6772f-140">Therefore you can specify the contents of `pathParameters` as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the `pathParameters` items.</span></span> <span data-ttu-id="6772f-141">您指定每個項目必須是下列類型之一： <xref:System.Windows.DependencyProperty>， <xref:System.Reflection.PropertyInfo>， <xref:System.ComponentModel.PropertyDescriptor>。</span><span class="sxs-lookup"><span data-stu-id="6772f-141">Each item you specify must be one of the following types: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="6772f-142">如需有關參數的需求的詳細資訊，請參閱<xref:System.Windows.PropertyPath.Path%2A>和<xref:System.Windows.PropertyPath.PathParameters%2A>。</span><span class="sxs-lookup"><span data-stu-id="6772f-142">For more information on the requirements of the parameters, see <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Windows.PropertyPath.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6772f-143">Gets or sets the string that describes the path.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6772f-143">Gets or sets the string that describes the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6772f-144">描述路徑的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6772f-144">The string that describes the path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6772f-145">這個屬性中所包含的字串有三個完全不同的意義，取決於是否<xref:System.Windows.PropertyPath>用於分鏡腳本目標，目標模式逐步執行屬性路徑的繫結，或複雜的來源模式屬性路徑分鏡腳本目標路徑。</span><span class="sxs-lookup"><span data-stu-id="6772f-145">The string contained in this property has three completely different meanings depending on whether a <xref:System.Windows.PropertyPath> is being used for a source-mode property path for a binding, for a target-mode single-step property path for a storyboard target, or for a complex path for a storyboard target.</span></span>  
  
 <span data-ttu-id="6772f-146">如果使用這<xref:System.Windows.PropertyPath>繫結的來源模式<xref:System.Windows.PropertyPath.Path%2A>字串，表示屬性名稱，或可以是字串，描述中的屬性"逐步"路徑[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]正做為來源之物件的物件模型繫結。</span><span class="sxs-lookup"><span data-stu-id="6772f-146">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, <xref:System.Windows.PropertyPath.Path%2A> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="6772f-147">繫結屬性路徑，識別 「 步驟 」 的字元是句點 （.）。</span><span class="sxs-lookup"><span data-stu-id="6772f-147">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="6772f-148">也支援索引子 （包括多個索引子和型別差異） 的參考。</span><span class="sxs-lookup"><span data-stu-id="6772f-148">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="6772f-149">如需詳細資訊，明確地使用字串的語法上<xref:System.Windows.Data.Binding>資訊，請參閱<xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6772f-149">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="6772f-150">做為繫結來源屬性不需要相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="6772f-150">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="6772f-151">如果更新雙向繫結的屬性來源必須是讀寫。</span><span class="sxs-lookup"><span data-stu-id="6772f-151">If the binding updates two-way, the property source must be read-write.</span></span> <span data-ttu-id="6772f-152">也請注意繫結目標沒有相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="6772f-152">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="6772f-153">如需詳細資訊，請參閱 <<c0> [ 資料繫結概觀](~/docs/framework/wpf/data/data-binding-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="6772f-153">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="6772f-154">如果使用這<xref:System.Windows.PropertyPath>分鏡腳本目標，逐步執行路徑的目標模式<xref:System.Windows.PropertyPath>是字串*typeName*。*propertyName*限定相依性屬性名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="6772f-154">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, <xref:System.Windows.PropertyPath> is a string that is a *typeName*.*propertyName* qualified dependency property name string.</span></span>  
  
 <span data-ttu-id="6772f-155">如果使用這<xref:System.Windows.PropertyPath>分鏡腳本目標，複雜路徑<xref:System.Windows.PropertyPath.Path%2A>是描述所提供之各種物件的關聯性的語彙基元化的字串格式<xref:System.Windows.PropertyPath.PathParameters%2A>。</span><span class="sxs-lookup"><span data-stu-id="6772f-155">If using this <xref:System.Windows.PropertyPath> for a complex path for a storyboard target, <xref:System.Windows.PropertyPath.Path%2A> is a tokenized string format that describes the relationships of the various objects given in the <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
-   <span data-ttu-id="6772f-156">此格式指定陣列中的每個項目所括號括住的項目陣列索引。</span><span class="sxs-lookup"><span data-stu-id="6772f-156">Each item in the array is specified in this format by the array index for the item enclosed in parentheses.</span></span> <span data-ttu-id="6772f-157">例如，若要指定陣列中的第一個項目，字串語彙基元是`(0)`。</span><span class="sxs-lookup"><span data-stu-id="6772f-157">For example, to specify the first item in the array, the string token is `(0)`.</span></span>  
  
-   <span data-ttu-id="6772f-158">點 （.） 所指定項目 （在路徑中的 「 步驟 」） 之間的關聯性。</span><span class="sxs-lookup"><span data-stu-id="6772f-158">Relationships between items ("steps" in the path) are specified by a dot (.).</span></span> <span data-ttu-id="6772f-159">之前的點屬性是第一個步驟在路徑中之後, 的屬性是第二個步驟中，以此類推 （您可以指定兩個以上的步驟）。</span><span class="sxs-lookup"><span data-stu-id="6772f-159">The property forward of the dot is the first step in the path, the property after is the second step, and so on (you can specify steps beyond two).</span></span> <span data-ttu-id="6772f-160">鏈結中的最後一個步驟一律表示要繪製之屬性。</span><span class="sxs-lookup"><span data-stu-id="6772f-160">The last step in the chain always represents the property being animated.</span></span>  
  
-   <span data-ttu-id="6772f-161">使用索引子語法，以方括弧括住索引存取集合屬性中的項目 （[和]）。</span><span class="sxs-lookup"><span data-stu-id="6772f-161">Items within collection properties are accessed with an indexer syntax, with the index within square brackets ([ and ]).</span></span> <span data-ttu-id="6772f-162">這個索引子是附加至語彙基元，表示此屬性。</span><span class="sxs-lookup"><span data-stu-id="6772f-162">The indexer is additive to the token representing the property.</span></span> <span data-ttu-id="6772f-163">比方說，以下是兩個步驟的路徑，使用的語彙基元的組合，在第一個步驟中指定該屬性的集合內的第二個項目： `(0)[1].(1)` 。</span><span class="sxs-lookup"><span data-stu-id="6772f-163">For example, the following is a two-step path, with the token combination in the first step specifying the second item from within the collection of that property: `(0)[1].(1)` .</span></span> <span data-ttu-id="6772f-164">您無法使用索引子上鏈結; 中的最後一個屬性您無法以動畫顯示的實際集合的位置，您必須建立該物件上的屬性的動畫。</span><span class="sxs-lookup"><span data-stu-id="6772f-164">You cannot use an indexer on the last property in the chain; you cannot animate the actual collection position, you must animate a property on that object.</span></span>  
  
 <span data-ttu-id="6772f-165">路徑字串<xref:System.Windows.PropertyPath>通常透過建構函式所建立：<xref:System.Windows.PropertyPath.%23ctor%28System.Object%29>繫結或單一步驟分鏡腳本目標，簽章<xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29>多步驟分鏡腳本目標的簽章。</span><span class="sxs-lookup"><span data-stu-id="6772f-165">The path string for a <xref:System.Windows.PropertyPath> is typically established through the constructors: the <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> signature for bindings or single-step storyboard targets, the <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> signature for multi-step storyboard targets.</span></span>  
  
 <span data-ttu-id="6772f-166">**XAML 中：** 當您使用<xref:System.Windows.PropertyPath>說明中的屬性參考[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，如屬性值，您指定的字串第一次由型別轉換子 (<xref:System.Windows.PropertyPathConverter>)。</span><span class="sxs-lookup"><span data-stu-id="6772f-166">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="6772f-167">這個型別轉換子然後處理字串，並根據其語法會呼叫其中一種<xref:System.Windows.PropertyPath>建構函式簽章。</span><span class="sxs-lookup"><span data-stu-id="6772f-167">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="6772f-168">處理屬性值的型別轉換子透過這種間接方式通常是您的使用方式<xref:System.Windows.PropertyPath>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，而不是宣告<xref:System.Windows.PropertyPath>物件項目，然後將特定值如套用屬性<xref:System.Windows.PropertyPath.Path%2A>和<xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="6772f-168">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="6772f-169">如需詳細資訊，請參閱 < [PropertyPath XAML 語法](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)。</span><span class="sxs-lookup"><span data-stu-id="6772f-169">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="6772f-170">XAML 文字使用方式</span><span class="sxs-lookup"><span data-stu-id="6772f-170">XAML Text Usage</span></span>  
 <span data-ttu-id="6772f-171">成員<xref:System.Windows.PropertyPath>類型未通常設定在 direct 中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]語法。</span><span class="sxs-lookup"><span data-stu-id="6772f-171">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="6772f-172">請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="6772f-172">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathParameters : System.Collections.ObjectModel.Collection&lt;obj&gt;" Usage="System.Windows.PropertyPath.PathParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6772f-173">Gets the list of parameters to use when the path refers to indexed parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6772f-173">Gets the list of parameters to use when the path refers to indexed parameters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6772f-174">[參數] 清單中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6772f-174">The parameter list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6772f-175">屬性<xref:System.Windows.PropertyPath>通常透過建構函式所建立。</span><span class="sxs-lookup"><span data-stu-id="6772f-175">The properties for a <xref:System.Windows.PropertyPath> are typically established through the constructors.</span></span> <span data-ttu-id="6772f-176">設定<xref:System.Windows.PropertyPath.PathParameters%2A>，則<xref:System.Windows.PropertyPath.%23ctor%2A>建構函式會格外方便因為`pathParameters`建構函式引數會指定為`params`，這表示您不需要建立或維度，讓您以建構陣列。</span><span class="sxs-lookup"><span data-stu-id="6772f-176">For setting <xref:System.Windows.PropertyPath.PathParameters%2A>, the <xref:System.Windows.PropertyPath.%23ctor%2A> constructor is particularly convenient because the `pathParameters` constructor argument is designated as `params`, meaning that you do not need to create or dimension an array for construction.</span></span> <span data-ttu-id="6772f-177">您只需指定陣列的每個成員，做為額外的參數。</span><span class="sxs-lookup"><span data-stu-id="6772f-177">You simply specify each member of the array as an additional parameter.</span></span>  
  
 <span data-ttu-id="6772f-178">如果做為目標的最後一個屬性是<xref:System.Windows.Freezable>類型，值將會複製。</span><span class="sxs-lookup"><span data-stu-id="6772f-178">If the final property that is the target is a <xref:System.Windows.Freezable> type, that value will be cloned.</span></span> <span data-ttu-id="6772f-179">如需詳細資訊，請參閱 <<c0> [ 分鏡腳本概觀](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="6772f-179">For details, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="6772f-180">實際評估的屬性鏈結是由分鏡腳本動畫機制執行。</span><span class="sxs-lookup"><span data-stu-id="6772f-180">The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</span></span> <span data-ttu-id="6772f-181">在<xref:System.Windows.PropertyPath>層級，不會執行驗證以確定路徑的步驟完全連線。</span><span class="sxs-lookup"><span data-stu-id="6772f-181">At the <xref:System.Windows.PropertyPath> level, no validation is performed to make sure that the steps of the path connect at all.</span></span> <span data-ttu-id="6772f-182">比方說，您可以在其中建構屬性的路徑<xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType>第一個步驟中，和<xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType>作為第二個步驟。</span><span class="sxs-lookup"><span data-stu-id="6772f-182">For instance, you can construct a property path that has <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> as the first step, and <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> as the second step.</span></span> <span data-ttu-id="6772f-183">不過，這類屬性路徑會實際套用做為目標，如果由於失敗的筆刷類型，會填滿<xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType>沒有<xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="6772f-183">But such a property path would fail if actually applied as a target, because the Brush type that fills <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> does not have a <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="6772f-184">無效的屬性路徑會以無訊息模式失敗。</span><span class="sxs-lookup"><span data-stu-id="6772f-184">Invalid property paths fail silently.</span></span> <span data-ttu-id="6772f-185">如需詳細資訊，請參閱[分鏡腳本概觀](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="6772f-185">For more information, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="6772f-186">**XAML 中：** 當您使用<xref:System.Windows.PropertyPath>說明中的屬性參考[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，如屬性值，您指定的字串第一次由型別轉換子 (<xref:System.Windows.PropertyPathConverter>)。</span><span class="sxs-lookup"><span data-stu-id="6772f-186">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="6772f-187">這個型別轉換子然後處理字串，並根據其語法會呼叫其中一種<xref:System.Windows.PropertyPath>建構函式簽章。</span><span class="sxs-lookup"><span data-stu-id="6772f-187">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="6772f-188">處理屬性值的型別轉換子透過這種間接方式通常是您的使用方式<xref:System.Windows.PropertyPath>中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]，而不是宣告<xref:System.Windows.PropertyPath>物件項目，然後將特定值如套用屬性<xref:System.Windows.PropertyPath.Path%2A>和<xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="6772f-188">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="6772f-189">如需詳細資訊，請參閱 < [PropertyPath XAML 語法](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)。</span><span class="sxs-lookup"><span data-stu-id="6772f-189">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="6772f-190">XAML 文字使用方式</span><span class="sxs-lookup"><span data-stu-id="6772f-190">XAML Text Usage</span></span>  
 <span data-ttu-id="6772f-191">成員<xref:System.Windows.PropertyPath>類型未通常設定在 direct 中[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]語法。</span><span class="sxs-lookup"><span data-stu-id="6772f-191">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="6772f-192">請參閱＜備註＞。</span><span class="sxs-lookup"><span data-stu-id="6772f-192">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>