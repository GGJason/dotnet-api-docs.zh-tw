<Type Name="VisualStateManager" FullName="System.Windows.VisualStateManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="383e291c4cf1fb0fe8e2201dec79c44332c74853" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36455976" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualStateManager : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateManager extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateManager&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateManager : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateManager = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ab918-101">管理控制項在狀態之間轉換的狀態與邏輯。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab918-101">Manages states and the logic for transitioning between states for controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab918-102"><xref:System.Windows.VisualStateManager>可讓您指定控制項的外觀，控制項的狀態，當它處於特定狀態，而且控制項變更狀態。</span><span class="sxs-lookup"><span data-stu-id="ab918-102">The <xref:System.Windows.VisualStateManager> enables you to specify states for a control, the appearance of a control when it is in a certain state, and when a control changes states.</span></span> <span data-ttu-id="ab918-103">例如，<xref:System.Windows.Controls.Button>後未按下時，於按下可能會出現稍有不同的外觀。</span><span class="sxs-lookup"><span data-stu-id="ab918-103">For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed.</span></span> <span data-ttu-id="ab918-104">兩個指出<xref:System.Windows.Controls.Button>定義當按下時，對應到 (`"Pressed"`) 並不是 (`"Normal"`)。</span><span class="sxs-lookup"><span data-stu-id="ab918-104">Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`"Pressed"`) and when it is not (`"Normal"`).</span></span> <span data-ttu-id="ab918-105">在狀態時，控制項的外觀由定義<xref:System.Windows.VisualState>。</span><span class="sxs-lookup"><span data-stu-id="ab918-105">The appearance of a control when it is in a state is defined by a <xref:System.Windows.VisualState>.</span></span> <span data-ttu-id="ab918-106">A<xref:System.Windows.VisualState>包含的集合<xref:System.Windows.Media.Animation.Storyboard>指定控制項的外觀如何變更當控制項處於該狀態的物件。</span><span class="sxs-lookup"><span data-stu-id="ab918-106">A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in that state.</span></span> <span data-ttu-id="ab918-107">將視覺狀態加入至控制項的設定`VisualStateManager.VisualStateGroups`附加在控制項上的屬性。</span><span class="sxs-lookup"><span data-stu-id="ab918-107">You add visual states to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control.</span></span> <span data-ttu-id="ab918-108">每個<xref:System.Windows.VisualStateGroup>包含的集合<xref:System.Windows.VisualState>互為獨佔模式的物件。</span><span class="sxs-lookup"><span data-stu-id="ab918-108">Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects that are mutually exclusive.</span></span> <span data-ttu-id="ab918-109">也就是此控制項一律會在一個狀態的每個<xref:System.Windows.VisualStateGroup>。</span><span class="sxs-lookup"><span data-stu-id="ab918-109">That is, the control is always in exactly one state of in each <xref:System.Windows.VisualStateGroup>.</span></span>  
  
 <span data-ttu-id="ab918-110"><xref:System.Windows.VisualStateManager>也可讓您指定當控制項進入其特定狀態。</span><span class="sxs-lookup"><span data-stu-id="ab918-110">The <xref:System.Windows.VisualStateManager> also enables you to specify when a control enters a specific state.</span></span> <span data-ttu-id="ab918-111">若要變更狀態，您應該呼叫的方法取決於您的案例。</span><span class="sxs-lookup"><span data-stu-id="ab918-111">The method that you should call to change states depends on your scenario.</span></span> <span data-ttu-id="ab918-112">如果您建立使用的控制項<xref:System.Windows.VisualStateManager>中其<xref:System.Windows.Controls.ControlTemplate>，呼叫<xref:System.Windows.VisualStateManager.GoToState%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ab918-112">If you create a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>, call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span> <span data-ttu-id="ab918-113">如需有關如何建立會控制該使用<xref:System.Windows.VisualStateManager>，請參閱[建立具有可自訂外觀](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)。</span><span class="sxs-lookup"><span data-stu-id="ab918-113">For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span> <span data-ttu-id="ab918-114">如果您使用<xref:System.Windows.VisualStateManager>之外<xref:System.Windows.Controls.ControlTemplate>(例如，如果您使用<xref:System.Windows.VisualStateManager>中<xref:System.Windows.Controls.UserControl>或中的單一項目)，呼叫<xref:System.Windows.VisualStateManager.GoToElementState%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ab918-114">If you use the <xref:System.Windows.VisualStateManager> outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element), call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method.</span></span> <span data-ttu-id="ab918-115">在任一情況下，<xref:System.Windows.VisualStateManager>執行，才能適當地啟動及停止相關的狀態相關聯的分鏡腳本的邏輯。</span><span class="sxs-lookup"><span data-stu-id="ab918-115">In either case, the <xref:System.Windows.VisualStateManager> performs the logic that is required to appropriately start and stop the storyboards that are associated with the involved state.</span></span> <span data-ttu-id="ab918-116">例如，假設控制項定義的狀態，`State1`和`State2`，每一個都有與其相關聯的分鏡腳本。</span><span class="sxs-lookup"><span data-stu-id="ab918-116">For example, suppose that a control defines the states, `State1` and `State2`, each of which has a storyboard associated with it.</span></span> <span data-ttu-id="ab918-117">如果控制項處於`State1`，您傳遞`State2`至<xref:System.Windows.VisualStateManager.GoToState%2A>或<xref:System.Windows.VisualStateManager.GoToElementState%2A>、<xref:System.Windows.VisualStateManager>中啟動分鏡腳本`State2`並停止在腳本`State1`。</span><span class="sxs-lookup"><span data-stu-id="ab918-117">If the control is in `State1` and you pass `State2` to <xref:System.Windows.VisualStateManager.GoToState%2A> or <xref:System.Windows.VisualStateManager.GoToElementState%2A>, the <xref:System.Windows.VisualStateManager> starts the storyboard in `State2` and stops the storyboard in `State1`.</span></span>  
  
 <span data-ttu-id="ab918-118">所包含的控制項[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]使用<xref:System.Windows.VisualStateManager>變更視覺狀態。</span><span class="sxs-lookup"><span data-stu-id="ab918-118">Controls that are included with [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] use the <xref:System.Windows.VisualStateManager> to change visual states.</span></span> <span data-ttu-id="ab918-119">當您建立<xref:System.Windows.Controls.ControlTemplate>的控制項，隨附於[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]，您可以加入<xref:System.Windows.VisualState>物件來控制<xref:System.Windows.Controls.ControlTemplate>處於特定狀態中指定控制項的外觀。</span><span class="sxs-lookup"><span data-stu-id="ab918-119">When you create a <xref:System.Windows.Controls.ControlTemplate> for a control that is included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], you can add <xref:System.Windows.VisualState> objects to the control's <xref:System.Windows.Controls.ControlTemplate> to specify the control's appearance in a certain state.</span></span> <span data-ttu-id="ab918-120">若要尋找的視覺狀態名稱所包含的控制項[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]，請參閱[控制項樣式和範本](~/docs/framework/wpf/controls/control-styles-and-templates.md)。</span><span class="sxs-lookup"><span data-stu-id="ab918-120">To find the names of the visual states for the controls that are included with [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], see [Control Styles and Templates](~/docs/framework/wpf/controls/control-styles-and-templates.md).</span></span> <span data-ttu-id="ab918-121">定義控制項的邏輯控點，因此您不需要執行任何動作以外的狀態之間轉換<xref:System.Windows.VisualState>中新的物件<xref:System.Windows.Controls.ControlTemplate>。</span><span class="sxs-lookup"><span data-stu-id="ab918-121">The control's logic handles transitioning between states, so you do not need to do anything other than define the <xref:System.Windows.VisualState> objects in the new <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="ab918-122">如需如何建立現有控制項的控制項範本的詳細資訊，請參閱[自訂現有控制項的外觀，藉由建立 ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。</span><span class="sxs-lookup"><span data-stu-id="ab918-122">For more information about how to create control templates for existing controls, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
 <span data-ttu-id="ab918-123">如果您想要實作您自己的邏輯的狀態之間轉換，您必須繼承自<xref:System.Windows.VisualStateManager>，覆寫<xref:System.Windows.VisualStateManager.GoToStateCore%2A>方法，並將<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType>附加屬性的控制項使用的自訂邏輯。</span><span class="sxs-lookup"><span data-stu-id="ab918-123">If you want to implement your own logic for transitioning between states, you must inherit from <xref:System.Windows.VisualStateManager>, override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method, and set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A?displayProperty=nameWithType> attached property on the control that uses the custom logic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab918-124">下列範例會建立<xref:System.Windows.Shapes.Rectangle>，並將<xref:System.Windows.VisualStateGroup>名為`CommonStates`至`VisualStateManager.VisualStatesGroups`附加屬性。</span><span class="sxs-lookup"><span data-stu-id="ab918-124">The following example creates a <xref:System.Windows.Shapes.Rectangle> and adds a <xref:System.Windows.VisualStateGroup> named `CommonStates` to the `VisualStateManager.VisualStatesGroups` attached property.</span></span> <span data-ttu-id="ab918-125">此範例會定義`MouseOver`和`Normal`<xref:System.Windows.VisualState>中的物件`CommonStates` <xref:System.Windows.VisualStateGroup>。</span><span class="sxs-lookup"><span data-stu-id="ab918-125">The example defines the `MouseOver` and `Normal`<xref:System.Windows.VisualState> objects in the `CommonStates`<xref:System.Windows.VisualStateGroup>.</span></span> <span data-ttu-id="ab918-126">當使用者將滑鼠指標移<xref:System.Windows.Shapes.Rectangle>，它從變成紅色綠色移轉一個半秒。</span><span class="sxs-lookup"><span data-stu-id="ab918-126">When the user moves the mouse pointer over the <xref:System.Windows.Shapes.Rectangle>, it changes from red to green over one half second.</span></span> <span data-ttu-id="ab918-127">當使用者將滑鼠離開矩形<xref:System.Windows.Controls.Grid>立即變更回為紅色。</span><span class="sxs-lookup"><span data-stu-id="ab918-127">When the user moves the mouse away from the rectangle, the <xref:System.Windows.Controls.Grid> immediately changes back to red.</span></span> <span data-ttu-id="ab918-128">請注意，`Normal`狀態不會定義<xref:System.Windows.Media.Animation.Storyboard>。</span><span class="sxs-lookup"><span data-stu-id="ab918-128">Note that the `Normal` state does not define a <xref:System.Windows.Media.Animation.Storyboard>.</span></span> <span data-ttu-id="ab918-129">A<xref:System.Windows.Media.Animation.Storyboard>不需要，因為當<xref:System.Windows.Shapes.Rectangle>從轉換`MouseOver`狀態`Normal`狀態，<xref:System.Windows.Media.Animation.Storyboard>的`MouseOver`停止和<xref:System.Windows.Media.SolidColorBrush.Color%2A>屬性<xref:System.Windows.Media.SolidColorBrush>傳回為紅色。</span><span class="sxs-lookup"><span data-stu-id="ab918-129">A <xref:System.Windows.Media.Animation.Storyboard> is not required because when the <xref:System.Windows.Shapes.Rectangle> transitions from the `MouseOver` state to the `Normal` state, the <xref:System.Windows.Media.Animation.Storyboard> for `MouseOver` is stopped and the <xref:System.Windows.Media.SolidColorBrush.Color%2A> property for the <xref:System.Windows.Media.SolidColorBrush> returns to red.</span></span>  
  
 [!code-xaml[VSMCustomControl#VSMNoTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmnotemplate)]  
  
 <span data-ttu-id="ab918-130">下列範例示範呼叫與前一個範例中定義的事件處理常式<xref:System.Windows.VisualStateManager.GoToElementState%2A>狀態之間轉換的方法。</span><span class="sxs-lookup"><span data-stu-id="ab918-130">The following example shows the event handler that is defined in the previous example and calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to transition between states.</span></span> <span data-ttu-id="ab918-131">在上述範例中的矩形是否屬於<xref:System.Windows.Controls.ControlTemplate>，範例會呼叫具有<xref:System.Windows.VisualStateManager.GoToState%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ab918-131">If the rectangle in the previous example was part of a <xref:System.Windows.Controls.ControlTemplate>, the example would have to call the <xref:System.Windows.VisualStateManager.GoToState%2A> method.</span></span>  
  
 [!code-csharp[VSMCustomControl#GoToElementState](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#gotoelementstate)]
 [!code-vb[VSMCustomControl#GoToElementState](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#gotoelementstate)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab918-132">初始化 <see cref="T:System.Windows.VisualStateManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-132">Initializes a new instance of the <see cref="T:System.Windows.VisualStateManager" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManager">
      <MemberSignature Language="C#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="ILAsm" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateManager.CustomVisualStateManager" />
      <MemberSignature Language="VB.NET" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberSignature Language="F#" Value="see GetCustomVisualStateManager, and SetCustomVisualStateManager" Usage="see GetCustomVisualStateManager, and SetCustomVisualStateManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomVisualStateManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CustomVisualStateManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CustomVisualStateManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CustomVisualStateManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CustomVisualStateManagerProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CustomVisualStateManagerProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.CustomVisualStateManagerProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab918-133">識別 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-133">Identifies the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static System.Windows.VisualStateManager GetCustomVisualStateManager (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.VisualStateManager GetCustomVisualStateManager(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetCustomVisualStateManager(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCustomVisualStateManager (obj As FrameworkElement) As VisualStateManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::VisualStateManager ^ GetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetCustomVisualStateManager : System.Windows.FrameworkElement -&gt; System.Windows.VisualStateManager" Usage="System.Windows.VisualStateManager.GetCustomVisualStateManager obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.VisualStateManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ab918-134">要從其取得 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加屬性的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-134">The element to get the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab918-135">取得 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-135">Gets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab918-136">會轉換控制項狀態的可見狀態管理員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-136">The visual state manager that transitions between the states of a control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVisualStateGroups">
      <MemberSignature Language="C#" Value="public static System.Collections.IList GetVisualStateGroups (System.Windows.FrameworkElement obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList GetVisualStateGroups(class System.Windows.FrameworkElement obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GetVisualStateGroups(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetVisualStateGroups (obj As FrameworkElement) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ GetVisualStateGroups(System::Windows::FrameworkElement ^ obj);" />
      <MemberSignature Language="F#" Value="static member GetVisualStateGroups : System.Windows.FrameworkElement -&gt; System.Collections.IList" Usage="System.Windows.VisualStateManager.GetVisualStateGroups obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ab918-137">要從其取得 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 附加屬性的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-137">The element to get the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab918-138">取得 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 附加屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-138">Gets the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> attached property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab918-139">
            <see cref="T:System.Windows.VisualStateGroup" /> 物件的集合，與特定物件相關聯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-139">The collection of <see cref="T:System.Windows.VisualStateGroup" /> objects that is associated with the specified object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToElementState">
      <MemberSignature Language="C#" Value="public static bool GoToElementState (System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToElementState(class System.Windows.FrameworkElement stateGroupsRoot, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToElementState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToElementState (stateGroupsRoot As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToElementState(System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToElementState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToElementState (stateGroupsRoot, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stateGroupsRoot">
          <span data-ttu-id="ab918-140">包含 <see cref="T:System.Windows.VisualStateManager" /> 的根項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-140">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <param name="stateName">
          <span data-ttu-id="ab918-141">要切換的目標狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-141">The state to transition to.</span>
          </span>
        </param>
        <param name="useTransitions">
          <span data-ttu-id="ab918-142">
            <see langword="true" /> 表示使用 <see cref="T:System.Windows.VisualTransition" /> 物件在狀態之間轉換，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-142">
              <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab918-143">會讓項目在兩個狀態之間轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-143">Transitions the element between two states.</span>
          </span>
          <span data-ttu-id="ab918-144">使用此方法轉換應用程式所定義的狀態，而不是控制項所定義的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-144">Use this method to transition states that are defined by an application, rather than defined by a control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab918-145">如果控制項成功轉換到新的狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-145">
              <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab918-146">呼叫<xref:System.Windows.VisualStateManager.GoToElementState%2A>以外的項目上的方法，以變更狀態<xref:System.Windows.Controls.ControlTemplate>(例如，如果您使用<xref:System.Windows.VisualStateManager>中<xref:System.Windows.DataTemplate>或<xref:System.Windows.Window>)。</span><span class="sxs-lookup"><span data-stu-id="ab918-146">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.DataTemplate> or <xref:System.Windows.Window>).</span></span> <span data-ttu-id="ab918-147">呼叫<xref:System.Windows.VisualStateManager.GoToState%2A>方法，如果您要變更中使用的控制項狀態<xref:System.Windows.VisualStateManager>中其<xref:System.Windows.Controls.ControlTemplate>。</span><span class="sxs-lookup"><span data-stu-id="ab918-147">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab918-148">下列範例會建立應用程式，以提示使用者猜測數字 1 到 100 之間。</span><span class="sxs-lookup"><span data-stu-id="ab918-148">The following example creates an application that prompts the user to guess a number between 1 and 100.</span></span>  <span data-ttu-id="ab918-149">當使用者輸入數字時，應用程式會指出猜測是否太大，得太低，或正確。</span><span class="sxs-lookup"><span data-stu-id="ab918-149">When the user enters a number, the application indicates whether the guess is too high, too low, or correct.</span></span>  <span data-ttu-id="ab918-150">下列[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]建立應用程式的使用者介面，並定義 4 個狀態： `TooLow`， `TooHigh`， `Correct`，和`Guessing`。</span><span class="sxs-lookup"><span data-stu-id="ab918-150">The following [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] creates the user interface for the application and defines 4 states: `TooLow`, `TooHigh`, `Correct`, and `Guessing`.</span></span> <span data-ttu-id="ab918-151">當應用程式開始時，它就會處於`Guessing`狀態。</span><span class="sxs-lookup"><span data-stu-id="ab918-151">When the application begins, it is in the `Guessing` state.</span></span> <span data-ttu-id="ab918-152">。</span><span class="sxs-lookup"><span data-stu-id="ab918-152">.</span></span>  
  
 [!code-xaml[VSMGoToElementState#GoToElementStateXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml#gotoelementstatexaml)]  
  
 <span data-ttu-id="ab918-153">下列程式碼會顯示應用程式邏輯。</span><span class="sxs-lookup"><span data-stu-id="ab918-153">The following code shows the logic of the application.</span></span>  <span data-ttu-id="ab918-154">當使用者輸入數字，並按一下按鈕時，應用程式呼叫<xref:System.Windows.VisualStateManager.GoToElementState%2A>轉換至`TooHigh`， `TooLow`，或`Correct`意見反應提供給使用者猜測。</span><span class="sxs-lookup"><span data-stu-id="ab918-154">When the user enters a number and clicks the button, the application calls <xref:System.Windows.VisualStateManager.GoToElementState%2A> to transition to `TooHigh`, `TooLow`, or `Correct` to provide feedback to the user about the guess.</span></span>  <span data-ttu-id="ab918-155">若要執行此範例中，呼叫`GenerateNumber`應用程式開始時的方法。</span><span class="sxs-lookup"><span data-stu-id="ab918-155">To try this example, call the `GenerateNumber` method when the application begins.</span></span>  
  
 [!code-csharp[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmgotoelementstate/csharp/mainwindow.xaml.cs#gotoelementstatecode)]
 [!code-vb[VSMGoToElementState#GoToElementStateCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmgotoelementstate/visualbasic/mainwindow.xaml.vb#gotoelementstatecode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab918-156">
            <paramref name="stateGroupsRoot" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-156">
              <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ab918-157">-或-  <paramref name="stateName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-157">-or-  <paramref name="stateName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GoToState">
      <MemberSignature Language="C#" Value="public static bool GoToState (System.Windows.FrameworkElement control, string stateName, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GoToState(class System.Windows.FrameworkElement control, string stateName, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToState(System.Windows.FrameworkElement,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GoToState (control As FrameworkElement, stateName As String, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GoToState(System::Windows::FrameworkElement ^ control, System::String ^ stateName, bool useTransitions);" />
      <MemberSignature Language="F#" Value="static member GoToState : System.Windows.FrameworkElement * string * bool -&gt; bool" Usage="System.Windows.VisualStateManager.GoToState (control, stateName, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="ab918-158">控制項要在之間轉換的兩個狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-158">The control to transition between states.</span>
          </span>
        </param>
        <param name="stateName">
          <span data-ttu-id="ab918-159">要切換的目標狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-159">The state to transition to.</span>
          </span>
        </param>
        <param name="useTransitions">
          <span data-ttu-id="ab918-160">
            <see langword="true" /> 表示使用 <see cref="T:System.Windows.VisualTransition" /> 物件在狀態之間轉換，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-160">
              <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab918-161">使控制項在兩個狀態之間切換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-161">Transitions the control between two states.</span>
          </span>
          <span data-ttu-id="ab918-162">使用這個方法，即可轉換具有 <see cref="T:System.Windows.Controls.ControlTemplate" /> 之控制項的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-162">Use this method to transition states on control that has a <see cref="T:System.Windows.Controls.ControlTemplate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab918-163">如果控制項成功轉換到新的狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-163">
              <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab918-164">呼叫<xref:System.Windows.VisualStateManager.GoToState%2A>方法，如果您要變更中使用的控制項狀態<xref:System.Windows.VisualStateManager>中其<xref:System.Windows.Controls.ControlTemplate>。</span><span class="sxs-lookup"><span data-stu-id="ab918-164">Call the <xref:System.Windows.VisualStateManager.GoToState%2A> method if you are changing states in a control that uses the <xref:System.Windows.VisualStateManager> in its <xref:System.Windows.Controls.ControlTemplate>.</span></span> <span data-ttu-id="ab918-165">呼叫<xref:System.Windows.VisualStateManager.GoToElementState%2A>以外的項目上的方法，以變更狀態<xref:System.Windows.Controls.ControlTemplate>(例如，如果您使用<xref:System.Windows.VisualStateManager>中<xref:System.Windows.Controls.UserControl>或中的單一項目)。</span><span class="sxs-lookup"><span data-stu-id="ab918-165">Call the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change states on an element outside of a <xref:System.Windows.Controls.ControlTemplate> (for example, if you use a <xref:System.Windows.VisualStateManager> in a <xref:System.Windows.Controls.UserControl> or in a single element).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab918-166">下列範例會示範使用的控制項<xref:System.Windows.VisualStateManager.GoToState%2A>狀態之間轉換的方法。</span><span class="sxs-lookup"><span data-stu-id="ab918-166">The following example demonstrates a control that uses the <xref:System.Windows.VisualStateManager.GoToState%2A> method to transition between states.</span></span> <span data-ttu-id="ab918-167">對於整個範例，請參閱[建立控制項的可自訂外觀](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)。</span><span class="sxs-lookup"><span data-stu-id="ab918-167">For the entire example, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).</span></span>  
  
 [!code-csharp[VSMCustomControl#UpdateStates](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#updatestates)]
 [!code-vb[VSMCustomControl#UpdateStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#updatestates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab918-168">
            <paramref name="control" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-168">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ab918-169">-或-  <paramref name="stateName" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-169">-or-  <paramref name="stateName" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GoToStateCore">
      <MemberSignature Language="C#" Value="protected virtual bool GoToStateCore (System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot, string stateName, System.Windows.VisualStateGroup group, System.Windows.VisualState state, bool useTransitions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GoToStateCore(class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot, string stateName, class System.Windows.VisualStateGroup group, class System.Windows.VisualState state, bool useTransitions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.GoToStateCore(System.Windows.FrameworkElement,System.Windows.FrameworkElement,System.String,System.Windows.VisualStateGroup,System.Windows.VisualState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GoToStateCore (control As FrameworkElement, stateGroupsRoot As FrameworkElement, stateName As String, group As VisualStateGroup, state As VisualState, useTransitions As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GoToStateCore(System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot, System::String ^ stateName, System::Windows::VisualStateGroup ^ group, System::Windows::VisualState ^ state, bool useTransitions);" />
      <MemberSignature Language="F#" Value="abstract member GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool&#xA;override this.GoToStateCore : System.Windows.FrameworkElement * System.Windows.FrameworkElement * string * System.Windows.VisualStateGroup * System.Windows.VisualState * bool -&gt; bool" Usage="visualStateManager.GoToStateCore (control, stateGroupsRoot, stateName, group, state, useTransitions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateName" Type="System.String" />
        <Parameter Name="group" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="state" Type="System.Windows.VisualState" />
        <Parameter Name="useTransitions" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="ab918-170">控制項要在之間轉換的兩個狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-170">The control to transition between states.</span>
          </span>
        </param>
        <param name="stateGroupsRoot">
          <span data-ttu-id="ab918-171">包含 <see cref="T:System.Windows.VisualStateManager" /> 的根項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-171">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <param name="stateName">
          <span data-ttu-id="ab918-172">轉換後的狀態名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-172">The name of the state to transition to.</span>
          </span>
        </param>
        <param name="group">
          <span data-ttu-id="ab918-173">狀態所屬的 <see cref="T:System.Windows.VisualStateGroup" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-173">The <see cref="T:System.Windows.VisualStateGroup" /> that the state belongs to.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="ab918-174">轉換後的狀態表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-174">The representation of the state to transition to.</span>
          </span>
        </param>
        <param name="useTransitions">
          <span data-ttu-id="ab918-175">
            <see langword="true" /> 表示使用 <see cref="T:System.Windows.VisualTransition" /> 物件在狀態之間轉換，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-175">
              <see langword="true" /> to use a <see cref="T:System.Windows.VisualTransition" /> object to transition between states; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab918-176">會讓控制項在狀態之間轉換。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-176">Transitions a control between states.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ab918-177">如果控制項成功轉換到新的狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-177">
              <see langword="true" /> if the control successfully transitioned to the new state; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab918-178"><xref:System.Windows.VisualStateManager.GoToStateCore%2A>方法會執行所需的適當地啟動及停止將分鏡腳本與轉換相關聯的邏輯。</span><span class="sxs-lookup"><span data-stu-id="ab918-178">The <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method performs the logic necessary to appropriately start and stop the storyboards that are associated with a transition.</span></span> <span data-ttu-id="ab918-179">控制當呼叫<xref:System.Windows.VisualStateManager.GoToState%2A>若要變更其狀態，<xref:System.Windows.VisualStateManager>會進行下列作業：</span><span class="sxs-lookup"><span data-stu-id="ab918-179">When a control calls <xref:System.Windows.VisualStateManager.GoToState%2A> to change its state, the <xref:System.Windows.VisualStateManager> does the following:</span></span>  
  
-   <span data-ttu-id="ab918-180">首先，如果<xref:System.Windows.VisualState>控制項正在轉換至已<xref:System.Windows.Media.Animation.Storyboard>，分鏡腳本開始。</span><span class="sxs-lookup"><span data-stu-id="ab918-180">First, if the <xref:System.Windows.VisualState> that the control is transitioning to has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard begins.</span></span> <span data-ttu-id="ab918-181">如果<xref:System.Windows.VisualState>控制項來自具有<xref:System.Windows.Media.Animation.Storyboard>，分鏡腳本結束。</span><span class="sxs-lookup"><span data-stu-id="ab918-181">Then, if the <xref:System.Windows.VisualState> that the control is coming from has a <xref:System.Windows.Media.Animation.Storyboard>, the storyboard ends.</span></span>  
  
-   <span data-ttu-id="ab918-182">如果控制項已在`stateName`狀態，<xref:System.Windows.VisualStateManager.GoToState%2A>會採取任何動作，並傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="ab918-182">If the control is already in the `stateName` state, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `true`.</span></span>  
  
-   <span data-ttu-id="ab918-183">如果`stateName`不存在於<xref:System.Windows.Controls.ControlTemplate>的`control`，<xref:System.Windows.VisualStateManager.GoToState%2A>會採取任何動作，並傳回`false`。</span><span class="sxs-lookup"><span data-stu-id="ab918-183">If `stateName` does not exist in the <xref:System.Windows.Controls.ControlTemplate> of `control`, <xref:System.Windows.VisualStateManager.GoToState%2A> takes no action and returns `false`.</span></span>  
  
 <span data-ttu-id="ab918-184">您可以實作您自己<xref:System.Windows.VisualStateManager>來提供不同的邏輯狀態之間轉換。</span><span class="sxs-lookup"><span data-stu-id="ab918-184">You can implement your own <xref:System.Windows.VisualStateManager> to provide different logic for transitioning between states.</span></span> <span data-ttu-id="ab918-185">例如，您可以變更先前所描述的邏輯，或者您可以提供自訂動畫類型之間轉換的邏輯。</span><span class="sxs-lookup"><span data-stu-id="ab918-185">For example, you can change the logic described previously, or you can provide logic to transition between custom animation types.</span></span>  <span data-ttu-id="ab918-186">若要實作<xref:System.Windows.VisualStateManager>，建立類別繼承自<xref:System.Windows.VisualStateManager>並覆寫<xref:System.Windows.VisualStateManager.GoToStateCore%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ab918-186">To implement a <xref:System.Windows.VisualStateManager>, create a class that inherits from <xref:System.Windows.VisualStateManager> and override the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method.</span></span> <span data-ttu-id="ab918-187">若要使用自訂的類別，<xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A>屬性，以您的自訂類型的物件。</span><span class="sxs-lookup"><span data-stu-id="ab918-187">To use the custom class, set the <xref:System.Windows.VisualStateManager.CustomVisualStateManager%2A> property to an object of your custom type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanged">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanged (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanged(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanged (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanged(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanged : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanged (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup">
          <span data-ttu-id="ab918-188">發生 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 事件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-188">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span>
          </span>
        </param>
        <param name="oldState">
          <span data-ttu-id="ab918-189">控制項轉換前的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-189">The state that the control is transitioning from.</span>
          </span>
        </param>
        <param name="newState">
          <span data-ttu-id="ab918-190">控制項轉換後的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-190">The state that the control is transitioning to.</span>
          </span>
        </param>
        <param name="control">
          <span data-ttu-id="ab918-191">正在轉換狀態的控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-191">The control that is transitioning states.</span>
          </span>
        </param>
        <param name="stateGroupsRoot">
          <span data-ttu-id="ab918-192">包含 <see cref="T:System.Windows.VisualStateManager" /> 的根項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-192">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab918-193">對指定的 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 物件引發 <see cref="T:System.Windows.VisualStateGroup" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-193">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab918-194">當<xref:System.Windows.VisualStateGroup>上設定<xref:System.Windows.Controls.ControlTemplate>控制項的`control`參數設定為擁有控制<xref:System.Windows.Controls.ControlTemplate>。</span><span class="sxs-lookup"><span data-stu-id="ab918-194">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="ab918-195">當<xref:System.Windows.VisualStateGroup>上設定<xref:System.Windows.FrameworkElement>，`control`是`null`，您應該使用`stateGroupsRoot`參數。</span><span class="sxs-lookup"><span data-stu-id="ab918-195">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab918-196">
            <paramref name="stateGroupsRoot" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-196">
              <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ab918-197">-或-  <paramref name="newState" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-197">-or-  <paramref name="newState" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ab918-198">
            <para>在覆寫<see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />方法，使已註冊的委派能接收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-198">
              <para>When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanged(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseCurrentStateChanging">
      <MemberSignature Language="C#" Value="protected void RaiseCurrentStateChanging (System.Windows.VisualStateGroup stateGroup, System.Windows.VisualState oldState, System.Windows.VisualState newState, System.Windows.FrameworkElement control, System.Windows.FrameworkElement stateGroupsRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseCurrentStateChanging(class System.Windows.VisualStateGroup stateGroup, class System.Windows.VisualState oldState, class System.Windows.VisualState newState, class System.Windows.FrameworkElement control, class System.Windows.FrameworkElement stateGroupsRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RaiseCurrentStateChanging (stateGroup As VisualStateGroup, oldState As VisualState, newState As VisualState, control As FrameworkElement, stateGroupsRoot As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseCurrentStateChanging(System::Windows::VisualStateGroup ^ stateGroup, System::Windows::VisualState ^ oldState, System::Windows::VisualState ^ newState, System::Windows::FrameworkElement ^ control, System::Windows::FrameworkElement ^ stateGroupsRoot);" />
      <MemberSignature Language="F#" Value="member this.RaiseCurrentStateChanging : System.Windows.VisualStateGroup * System.Windows.VisualState * System.Windows.VisualState * System.Windows.FrameworkElement * System.Windows.FrameworkElement -&gt; unit" Usage="visualStateManager.RaiseCurrentStateChanging (stateGroup, oldState, newState, control, stateGroupsRoot)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stateGroup" Type="System.Windows.VisualStateGroup" />
        <Parameter Name="oldState" Type="System.Windows.VisualState" />
        <Parameter Name="newState" Type="System.Windows.VisualState" />
        <Parameter Name="control" Type="System.Windows.FrameworkElement" />
        <Parameter Name="stateGroupsRoot" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="stateGroup">
          <span data-ttu-id="ab918-199">發生 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 事件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-199">The object that the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event occurred on.</span>
          </span>
        </param>
        <param name="oldState">
          <span data-ttu-id="ab918-200">控制項轉換前的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-200">The state that the control is transitioning from.</span>
          </span>
        </param>
        <param name="newState">
          <span data-ttu-id="ab918-201">控制項轉換後的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-201">The state that the control is transitioning to.</span>
          </span>
        </param>
        <param name="control">
          <span data-ttu-id="ab918-202">正在轉換狀態的控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-202">The control that is transitioning states.</span>
          </span>
        </param>
        <param name="stateGroupsRoot">
          <span data-ttu-id="ab918-203">包含 <see cref="T:System.Windows.VisualStateManager" /> 的根項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-203">The root element that contains the <see cref="T:System.Windows.VisualStateManager" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab918-204">對指定的 <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> 物件引發 <see cref="T:System.Windows.VisualStateGroup" /> 事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-204">Raises the <see cref="E:System.Windows.VisualStateGroup.CurrentStateChanging" /> event on the specified <see cref="T:System.Windows.VisualStateGroup" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab918-205">當<xref:System.Windows.VisualStateGroup>上設定<xref:System.Windows.Controls.ControlTemplate>控制項的`control`參數設定為擁有控制<xref:System.Windows.Controls.ControlTemplate>。</span><span class="sxs-lookup"><span data-stu-id="ab918-205">When the <xref:System.Windows.VisualStateGroup> is set on the <xref:System.Windows.Controls.ControlTemplate> of a control, the `control` parameter is set to the control that owns <xref:System.Windows.Controls.ControlTemplate>.</span></span>  <span data-ttu-id="ab918-206">當<xref:System.Windows.VisualStateGroup>上設定<xref:System.Windows.FrameworkElement>，`control`是`null`，您應該使用`stateGroupsRoot`參數。</span><span class="sxs-lookup"><span data-stu-id="ab918-206">When the <xref:System.Windows.VisualStateGroup> is set on a <xref:System.Windows.FrameworkElement>, `control` is `null` and you should use the `stateGroupsRoot` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ab918-207">
            <paramref name="stateGroupsRoot" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-207">
              <paramref name="stateGroupsRoot" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="ab918-208">-或-  <paramref name="newState" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-208">-or-  <paramref name="newState" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ab918-209">
            <para>在覆寫<see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />在衍生類別中，請務必呼叫基底類別的<see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" />方法，使已註冊的委派能接收到事件。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-209">
              <para>When overriding <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.VisualStateManager.RaiseCurrentStateChanging(System.Windows.VisualStateGroup,System.Windows.VisualState,System.Windows.VisualState,System.Windows.FrameworkElement,System.Windows.FrameworkElement)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetCustomVisualStateManager">
      <MemberSignature Language="C#" Value="public static void SetCustomVisualStateManager (System.Windows.FrameworkElement obj, System.Windows.VisualStateManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCustomVisualStateManager(class System.Windows.FrameworkElement obj, class System.Windows.VisualStateManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateManager.SetCustomVisualStateManager(System.Windows.FrameworkElement,System.Windows.VisualStateManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetCustomVisualStateManager (obj As FrameworkElement, value As VisualStateManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetCustomVisualStateManager(System::Windows::FrameworkElement ^ obj, System::Windows::VisualStateManager ^ value);" />
      <MemberSignature Language="F#" Value="static member SetCustomVisualStateManager : System.Windows.FrameworkElement * System.Windows.VisualStateManager -&gt; unit" Usage="System.Windows.VisualStateManager.SetCustomVisualStateManager (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FrameworkElement" />
        <Parameter Name="value" Type="System.Windows.VisualStateManager" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="ab918-210">要設定屬性的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-210">The object to set the property on.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ab918-211">會轉換控制項狀態的可見狀態管理員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-211">The visual state manager that transitions between the states of a control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab918-212">設定 <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> 附加屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-212">Sets the <see cref="P:System.Windows.VisualStateManager.CustomVisualStateManager" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualStateGroupsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisualStateGroupsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisualStateGroupsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisualStateGroupsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisualStateGroupsProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisualStateGroupsProperty : System.Windows.DependencyProperty" Usage="System.Windows.VisualStateManager.VisualStateGroupsProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ab918-213">識別 <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab918-213">Identifies the <see cref="P:System.Windows.VisualStateManager.VisualStateGroups" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>