<Type Name="WeakEventManager&lt;TEventSource,TEventArgs&gt;" FullName="System.Windows.WeakEventManager&lt;TEventSource,TEventArgs&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="10a37232106c228b959e7773d88a93fc267e5de3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36455723" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WeakEventManager&lt;TEventSource,TEventArgs&gt; : System.Windows.WeakEventManager where TEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WeakEventManager`2&lt;TEventSource, (class System.EventArgs) TEventArgs&gt; extends System.Windows.WeakEventManager" />
  <TypeSignature Language="DocId" Value="T:System.Windows.WeakEventManager`2" />
  <TypeSignature Language="VB.NET" Value="Public Class WeakEventManager(Of TEventSource, TEventArgs)&#xA;Inherits WeakEventManager" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEventSource, typename TEventArgs&gt;&#xA; where TEventArgs : EventArgspublic ref class WeakEventManager : System::Windows::WeakEventManager" />
  <TypeSignature Language="F#" Value="type WeakEventManager&lt;'EventSource, 'EventArgs (requires 'EventArgs :&gt; EventArgs)&gt; = class&#xA;    inherit WeakEventManager" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEventSource" />
    <TypeParameter Name="TEventArgs">
      <Constraints>
        <BaseTypeName>System.EventArgs</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.WeakEventManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TEventSource">
      <span data-ttu-id="6bfda-101">引發事件的型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bfda-101">The type that raises the event.</span>
      </span>
    </typeparam>
    <typeparam name="TEventArgs">
      <span data-ttu-id="6bfda-102">保留事件資料的型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bfda-102">The type that holds the event data.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="6bfda-103">提供型別安全的 <see cref="T:System.Windows.WeakEventManager" />，讓您指定要用於「弱式事件接聽程式」(Weak Event Listener) 模式的事件接聽程式。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bfda-103">Provides a type-safe <see cref="T:System.Windows.WeakEventManager" /> that enables you to specify the event handler to use for the "weak event listener" pattern.</span>
      </span>
      <span data-ttu-id="6bfda-104">這個類別會為事件的來源定義型別參數，以及為所使用的事件資料定義型別參數。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6bfda-104">This class defines a type parameter for the source of the event and a type parameter for the event data that is used.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bfda-105"><xref:System.Windows.WeakEventManager>類別可讓您指定要訂閱事件、 事件和事件處理常式的來源，以利用弱式事件接聽程式模式。</span><span class="sxs-lookup"><span data-stu-id="6bfda-105">The <xref:System.Windows.WeakEventManager> class enables you to leverage the weak event listener pattern by specifying the event to subscribe to, the source of the event, and event handler.</span></span>  <span data-ttu-id="6bfda-106">您可以使用<xref:System.Windows.WeakEventManager%602>實作替代<xref:System.Windows.IWeakEventListener>介面，並使用特殊化<xref:System.Windows.WeakEventManager>。</span><span class="sxs-lookup"><span data-stu-id="6bfda-106">You can use <xref:System.Windows.WeakEventManager%602> as an alternative to implementing the <xref:System.Windows.IWeakEventListener> interface and using a specialized <xref:System.Windows.WeakEventManager>.</span></span> <span data-ttu-id="6bfda-107">當您呼叫<xref:System.Windows.WeakEventManager%602.AddHandler%2A>，來源必須是型別`TEventSource`，而且您傳遞的事件處理常式必須具有`TEventArgs`做為其事件資料。</span><span class="sxs-lookup"><span data-stu-id="6bfda-107">When you call <xref:System.Windows.WeakEventManager%602.AddHandler%2A>, the source must be of type `TEventSource` and the event handler you pass must have `TEventArgs` as its event data.</span></span> <span data-ttu-id="6bfda-108">這可確保型別檢查會就會發生編譯時期。</span><span class="sxs-lookup"><span data-stu-id="6bfda-108">This ensures that type checking occurs at compile time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public static void AddHandler (TEventSource source, string eventName, EventHandler&lt;TEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddHandler(!TEventSource source, string eventName, class System.EventHandler`1&lt;!TEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager`2.AddHandler(`0,System.String,System.EventHandler{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddHandler (source As TEventSource, eventName As String, handler As EventHandler(Of TEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddHandler(TEventSource source, System::String ^ eventName, EventHandler&lt;TEventArgs&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddHandler : 'EventSource * string * EventHandler&lt;'EventArgs (requires 'EventArgs :&gt; EventArgs)&gt; -&gt; unit" Usage="System.Windows.WeakEventManager&lt;'EventSource, 'EventArgs (requires 'EventArgs :&gt; System.EventArgs)&gt;.AddHandler (source, eventName, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="TEventSource" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="handler" Type="System.EventHandler&lt;TEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6bfda-109">引發指定事件的來源物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-109">The source object that raises the specified event.</span>
          </span>
        </param>
        <param name="eventName">
          <span data-ttu-id="6bfda-110">要訂閱的事件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-110">The name of the event to subscribe to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6bfda-111">處理事件的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-111">The delegate that handles the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bfda-112">將指定的事件處理常式加入至指定的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-112">Adds the specified event handler to the specified event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewListenerList">
      <MemberSignature Language="C#" Value="protected override System.Windows.WeakEventManager.ListenerList NewListenerList ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.WeakEventManager/ListenerList NewListenerList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager`2.NewListenerList" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function NewListenerList () As WeakEventManager.ListenerList" />
      <MemberSignature Language="F#" Value="override this.NewListenerList : unit -&gt; System.Windows.WeakEventManager.ListenerList" Usage="weakEventManager.NewListenerList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WeakEventManager+ListenerList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6bfda-113">傳回新的物件，包含事件的接聽程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-113">Returns a new object to contain listeners to an event.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6bfda-114">包含事件之接聽程式的新物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-114">A new object to contain listeners to an event.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveHandler (TEventSource source, string eventName, EventHandler&lt;TEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveHandler(!TEventSource source, string eventName, class System.EventHandler`1&lt;!TEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager`2.RemoveHandler(`0,System.String,System.EventHandler{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveHandler (source As TEventSource, eventName As String, handler As EventHandler(Of TEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveHandler(TEventSource source, System::String ^ eventName, EventHandler&lt;TEventArgs&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveHandler : 'EventSource * string * EventHandler&lt;'EventArgs (requires 'EventArgs :&gt; EventArgs)&gt; -&gt; unit" Usage="System.Windows.WeakEventManager&lt;'EventSource, 'EventArgs (requires 'EventArgs :&gt; System.EventArgs)&gt;.RemoveHandler (source, eventName, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="TEventSource" />
        <Parameter Name="eventName" Type="System.String" />
        <Parameter Name="handler" Type="System.EventHandler&lt;TEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6bfda-115">引發指定事件的來源物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-115">The source object that raises the specified event.</span>
          </span>
        </param>
        <param name="eventName">
          <span data-ttu-id="6bfda-116">要從處理常式中移除的事件的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-116">The name of the event to remove the handler from.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="6bfda-117">要移除的委派。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-117">The delegate to remove</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bfda-118">從指定的事件中移除指定的事件處理常式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-118">Removes the specified event handler from the specified event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="protected override void StartListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StartListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager`2.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StartListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StartListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.StartListening : obj -&gt; unit" Usage="weakEventManager.StartListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6bfda-119">要對其引發事件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-119">The object to that raises the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bfda-120">開始接聽指定之物件上的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-120">Starts listening for the event on the specified object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="protected override void StopListening (object source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void StopListening(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.WeakEventManager`2.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub StopListening (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void StopListening(System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.StopListening : obj -&gt; unit" Usage="weakEventManager.StopListening source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="6bfda-121">要對其引發事件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-121">The object to that raises the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6bfda-122">停止接聽指定之物件上的事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6bfda-122">Stops listening for the event on the specified object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>