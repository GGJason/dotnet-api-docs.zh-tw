<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="NameScope.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e592cda49827dc25a97d85376a3be8483889b1d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e592cda49827dc25a97d85376a3be8483889b1d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Implements base WPF support for the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> methods that store or retrieve name-object mappings into a particular XAML namescope.</source>
          <target state="translated">實作 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> 方法的基礎 WPF 支援，這些方法可將「名稱-物件」對應儲存或擷取至特定 XAML 名稱範圍中。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level..</source>
          <target state="translated">加入附加屬性支援，以簡化在項目層級動態取得或設定 XAML 名稱範圍的名稱。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>This class implements built-in XAML namescope support for WPF treatment of XAML.</source>
          <target state="translated">這個類別會實作內建 XAML 名稱範圍支援 WPF XAML 的處理方式。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> assists in creation of initial XAML namescopes based on parsing XAML, such as when instantiating styles and templates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> 它可以協助您建立初始的 XAML namescopes 根據剖析 XAML，例如當具現化樣式和範本。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>It also supports creation of XAML namescopes by processes that occur outside of normal XAML loading of elements by the WPF XAML processor implementation.</source>
          <target state="translated">它也支援建立 XAML 名稱範圍之外的項目一般 XAML 載入 WPF XAML 處理器實作就會發生的處理程序。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> is generally more devoted to supplying infrastructure than for common user code scenarios that involve working with a XAML namescope.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> 是通常更專門用來提供基礎結構比一般都涉及使用 XAML 名稱範圍的使用者程式碼案例。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>For most scenarios, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph> methods exposed on <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> are more appropriate methods to call to search for elements by XAML-defined name.</source>
          <target state="translated">大部分情況下，<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph>上公開的方法<ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>會更適當的方法呼叫要搜尋項目已定義 XAML 的名稱。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> properties exposed by <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> are more appropriate properties to use to set the initial name as markup attributes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph>所公開的屬性<ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>會更適當的屬性，用來設定初始的名稱做為標記屬性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>The various methods of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> are used by base elements and other classes that maintain XAML namescopes in order to support <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope.RegisterName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope.FindName%2A&gt;</ph>.</source>
          <target state="translated">各種方法<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>基底項目和維護 XAML 名稱範圍，以支援其他類別所使用<ph id="ph2">&lt;xref:System.Windows.Markup.INameScope.RegisterName%2A&gt;</ph>和<ph id="ph3">&lt;xref:System.Windows.Markup.INameScope.FindName%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>You generally use the API in the <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> class only if you are replacing or augmenting the base element behavior for how they process XAML namescopes for root elements of a XAML page, and as part of templates (which use a separate XAML namescope from the rest of the page).</source>
          <target state="translated">您通常會使用中的 API<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>類別只有當您要取代或加強它們會如何處理的 XAML 頁面和範本的一部分的根元素的 XAML 名稱範圍的基底項目行為 (使用不同的 XAML 名稱範圍的其餘部分從頁面）。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> provides collection interface implementations such that you can access the collections of names that are held by a XAML namescope, including adding to it through calls to an <ph id="ph3">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> method.</source>
          <target state="translated">在<ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>，<ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph>提供集合的介面實作，您可以存取之名稱的 XAML 名稱範圍，包括透過呼叫加入至它所持有的集合<ph id="ph3">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>For more information on XAML namescope concepts, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
          <target state="translated">如需 XAML namescope 概念的詳細資訊，請參閱<bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">中的 XAML 名稱範圍的名稱必須使用特定的文法，會限制您可以使用的輸入字串<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>應用程式開發介面。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.NameScope">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>XamlName 文法<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Adds an item to the collection.</source>
          <target state="translated">將項目加入至集合。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>) that represents the name mapping to add to the XAML namescope.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (索引鍵為 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>，值為 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>)，表示要新增至 XAML 名稱範圍的名稱對應。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Adds an item to the collection.</source>
          <target state="translated">將項目加入至集合。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Either or both components of <ph id="ph1">&lt;paramref name="item" /&gt;</ph> are <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="item" /&gt;</ph> 的其中一個或兩個元件是 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>The string key, which is the name of the XAML namescope mapping to add.</source>
          <target state="translated">字串索引鍵，這是要加入之 XAML 名稱範圍對應的名稱。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>The object value, which is the object reference of the XAML namescope mapping to add.</source>
          <target state="translated">物件值，這是要加入之 XAML 名稱範圍對應的物件參考。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>Adds an item to the collection.</source>
          <target state="translated">將項目加入至集合。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>This method basically wraps <ph id="ph1">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> so that it is not necessary to involve the <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> type in your usage.</source>
          <target state="translated">這個方法基本上會包裝<ph id="ph1">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph>，因此不需要洽詢<ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>類型在您的使用量。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">中的 XAML 名稱範圍的名稱必須使用特定的文法，會限制您可以使用的輸入字串<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>應用程式開發介面。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>XamlName 文法<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Add(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="value" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Clear">
          <source>Removes all items from the collection.</source>
          <target state="translated">移除集合的所有項目。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>The item to find in the collection, specified as a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</source>
          <target state="translated">要在集合中尋找的項目，指定為 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (索引鍵為 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>，值為 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Determines whether the collection contains a specified item.</source>
          <target state="translated">判斷集合是否包含指定的項目。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> identifies an existing mapping in this <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> .</source>
          <target state="translated">如果指定的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> 可識別這個 <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 中現有的對應，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> does not exist in the current <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">如果指定的 <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> 於目前的 <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 中不存在，則為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Generally you are only interested in whether a name is already defined in the XAML namescope, and what object reference value it is mapped to is immaterial.</source>
          <target state="translated">通常您有只有興趣名稱是否已定義 XAML 名稱範圍中，它會對應到哪些物件參考值為多少都沒關係。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>For this scenario, you can call <ph id="ph1">&lt;xref:System.Windows.NameScope.ContainsKey%2A&gt;</ph> instead.</source>
          <target state="translated">此案例中，您可以呼叫<ph id="ph1">&lt;xref:System.Windows.NameScope.ContainsKey%2A&gt;</ph>改為。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>The string key to find.</source>
          <target state="translated">要尋找的字串索引鍵。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>Returns whether a provided name already exists in this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">傳回提供的名稱是否已經存在這個 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 中。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="key" /&gt;</ph> identifies a name for an existing mapping in this <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">如果指定的 <ph id="ph2">&lt;paramref name="key" /&gt;</ph> 可識別這個 <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 中現有對應的名稱，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="key" /&gt;</ph> does not exist in the current <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">如果指定的 <ph id="ph2">&lt;paramref name="key" /&gt;</ph> 於目前的 <ph id="ph3">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 中不存在，則為 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
          <target state="translated">中的 XAML 名稱範圍的名稱必須使用特定的文法，會限制您可以使用的輸入字串<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>應用程式開發介面。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>XamlName 文法<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.ContainsKey(System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.</source>
          <target state="translated">一維陣列，是從集合複製元素的目的端。此陣列必須具有以零起始的索引。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> 中以零起始的索引，複製作業從此處開始。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
          <source>Copies the elements of the collection to an array, starting at a particular array index.</source>
          <target state="translated">從特定的陣列索引開始，將集合的項目複製到陣列。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Count">
          <source>Returns the number of items in the collection of mapped names in this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>.</source>
          <target state="translated">傳回這個 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 中對應之名稱的集合內之項目數。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Count">
          <source>The number of items in the collection.</source>
          <target state="translated">集合中的項目數目</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Name portion of an existing mapping to retrieve the object portion for.</source>
          <target state="translated">要為其擷取物件部分之現有對應的名稱部分。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Returns the corresponding object in the XAML namescope maintained by this <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph>, based on a provided name string.</source>
          <target state="translated">根據提供的名稱字串，傳回由這個 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 維護之 XAML 名稱範圍中的對應物件。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>The requested object that is mapped with <ph id="ph1">&lt;paramref name="name" /&gt;</ph>.</source>
          <target state="translated">以 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 對應之要求的物件。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Can return <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="name" /&gt;</ph> was provided as <ph id="ph3">&lt;see langword="null" /&gt;</ph> or empty string, or if no matching object was found.</source>
          <target state="translated">如果提供的 <ph id="ph2">&lt;paramref name="name" /&gt;</ph> 為 <ph id="ph1">&lt;see langword="null" /&gt;</ph> 或為空字串，或者找不到相符的物件，則可傳回 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Several base elements (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>) also expose a <ph id="ph3">`FindName`</ph> method with identical functionality.</source>
          <target state="translated">數個基底項目 (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>， <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>) 也會公開<ph id="ph3">`FindName`</ph>方法具有相同功能。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>The base element versions perform a XAML namescope search within the conventional logical tree, working towards the root element.</source>
          <target state="translated">基底項目版本執行傳統的邏輯樹狀結構，朝向根項目中 XAML 名稱範圍搜尋。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.FindName(System.String)">
          <source>Once the XAML namescope is determined, that XAML namescope is queried for the requested name.</source>
          <target state="translated">一旦決定 XAML 名稱範圍之後，該 XAML 名稱範圍查詢要求的名稱。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>The object to get the XAML namescope from.</source>
          <target state="translated">要從中取得 XAML 名稱範圍的物件。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>Provides the attached property get accessor for the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">為 <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> 附加內容提供附加內容 get 存取子。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>A XAML namescope, as an <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> instance.</source>
          <target state="translated">XAML 名稱範圍，做為 <ph id="ph1">&lt;see cref="T:System.Windows.Markup.INameScope" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source>The purpose of this method is both to implement the <ph id="ph1">`get`</ph> accessor for using <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</source>
          <target state="translated">這個方法的目的，是同時實作<ph id="ph1">`get`</ph>存取子使用<ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph>為附加的屬性，在 XAML 使用，以提供存取子程式碼中執行對等的作業。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.IsReadOnly">
          <source>Gets a value indicating whether the collection is read-only.</source>
          <target state="translated">取得值，表示集合是否為唯讀。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.IsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">一律傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>The string name for the XAML name mapping to get or set.</source>
          <target state="translated">要取得或設定之 XAML 名稱對應的字串名稱。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>Gets or sets the item with the specified key.</source>
          <target state="translated">取得或設定具有指定之索引鍵的項目。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>The value of the object mapped by the XAML name provided as <ph id="ph1">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">由 XAML 名稱 (提供為 <ph id="ph1">&lt;paramref name="key" /&gt;</ph>) 所對應之物件的值。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source><ph id="ph1">&lt;paramref name="key" /&gt;</ph> is provided as <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 提供做為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Item(System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is provided as <ph id="ph2">&lt;see langword="null" /&gt;</ph> for a set operation.</source>
          <target state="translated">所提供的 <ph id="ph1">&lt;paramref name="value" /&gt;</ph> (<ph id="ph2">&lt;see langword="null" /&gt;</ph>) 適用於設定作業。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Keys">
          <source>Gets a collection of the keys in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 字典中索引鍵的集合。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Keys">
          <source>A collection of the keys in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 字典中索引鍵的集合。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="F:System.Windows.NameScope.NameScopeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">識別 <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> 附加屬性。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>The name to use for mapping the given object.</source>
          <target state="translated">要用於對應指定物件的名稱。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>The object to be mapped to the provided name.</source>
          <target state="translated">要對應至所提供名稱的物件。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source>Registers a new name-object pair into the current XAML namescope.</source>
          <target state="translated">將新的名稱-物件組註冊到目前的 XAML 名稱範圍。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> or <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph> was provided as <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">提供的 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 或 <ph id="ph2">&lt;paramref name="scopedElement" /&gt;</ph> 為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> was provided as empty string</source>
          <target state="translated">提供的 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 為空字串</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided was rejected by the parser, because it contained characters that are invalid for a XAML name</source>
          <target state="translated">提供的 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 被剖析器拒絕，因為其包含對於 XAML 名稱無效的字元</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided would result in a duplicate name registration.</source>
          <target state="translated">提供的 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 會導致重複的名稱註冊。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Windows.NameScope">
          <source>Removes the specific object from the collection.</source>
          <target state="translated">從集合中移除指定的物件。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>The object to remove from the collection, specified as a <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (key is <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>, value is <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>).</source>
          <target state="translated">要從集合移除的物件，指定為 <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair`2" /&gt;</ph> (索引鍵為 <ph id="ph2">&lt;see cref="T:System.String" /&gt;</ph>，值為 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Removes the specific object from the collection.</source>
          <target state="translated">從集合中移除指定的物件。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the collection, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果從集合成功移除項目則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the item was not found in the collection.</source>
          <target state="translated">如果集合中找不到項目，也會傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> is a dictionary there is no concept of first occurrence; any given <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> is guaranteed unique.</source>
          <target state="translated">因為<ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph>是的字典有沒有第一次出現的概念; 任何給定<ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>保證唯一。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>The string key, which is the name of the XAML namescope mapping to remove.</source>
          <target state="translated">字串索引鍵，這是要移除之 XAML 名稱範圍對應的名稱。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>Removes a mapping for a specified name from the collection.</source>
          <target state="translated">從集合移除指定之名稱的對應。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed from the collection, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果從集合成功移除項目則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>Also returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> if the item was not found in the collection.</source>
          <target state="translated">如果集合中找不到項目，也會傳回 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.Remove(System.String)">
          <source>This method basically wraps <ph id="ph1">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>, returning <ph id="ph2">`false`</ph> in cases that otherwise would have raised exceptions in <ph id="ph3">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>.</source>
          <target state="translated">這個方法基本上會包裝<ph id="ph1">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>、 傳回<ph id="ph2">`false`</ph>否則會引發的例外狀況的情況下<ph id="ph3">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>Object to change XAML namescope for.</source>
          <target state="translated">要變更 XAML 名稱範圍的物件。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>The new XAML namescope, using an interface cast.</source>
          <target state="translated">使用介面轉換的新 XAML 名稱範圍。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>Provides the attached property set accessor for the <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> attached property.</source>
          <target state="translated">為 <ph id="ph1">&lt;see cref="P:System.Windows.NameScope.NameScope" /&gt;</ph> 附加內容提供附加內容 set 存取子。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source>The purpose of this method is both to act as the <ph id="ph1">`set`</ph> accessor for using <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</source>
          <target state="translated">這個方法的目的，是同時做為<ph id="ph1">`set`</ph>存取子使用<ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph>為附加的屬性，在 XAML 使用，以提供存取子程式碼中執行對等的作業。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
          <source><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that iterates through a collection.</source>
          <target state="translated">傳回逐一查看集合的列舉值。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
          <source>An enumerator that iterates through a collection.</source>
          <target state="translated">逐一查看集合的列舉值。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>The key of the value to get.</source>
          <target state="translated">要取得之值的索引鍵。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object.</source>
          <target state="translated">這個方法傳回時，如果找到索引鍵，則包含與指定之索引鍵關聯的值，否則為 null 物件。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">這個參數會以未初始化的狀態傳遞。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>Gets the value associated with the specified key.</source>
          <target state="translated">取得指定索引鍵相關聯的值。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>true if the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> contains a mapping for the name provided as <ph id="ph2">&lt;paramref name="key" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 包含提供為 <ph id="ph2">&lt;paramref name="key" /&gt;</ph> 之名稱的對應則為 true，</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
          <source>Otherwise, false.</source>
          <target state="translated">否則為 false。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>The name of the mapping to remove.</source>
          <target state="translated">要移除之對應的名稱。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>Removes a name-object mapping from the XAML namescope.</source>
          <target state="translated">從 XAML NameScope 中移除名稱/物件對應。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source>Before calling this method, you can use <ph id="ph1">&lt;xref:System.Windows.NameScope.FindName%2A&gt;</ph> to determine whether a specific name-object mapping exists.</source>
          <target state="translated">之前呼叫這個方法，您可以使用<ph id="ph1">&lt;xref:System.Windows.NameScope.FindName%2A&gt;</ph>來判斷特定的名稱 / 物件對應是否存在。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> was provided as empty string.</source>
          <target state="translated">提供的 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 為空字串。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> provided had not been registered.</source>
          <target state="translated">提供的 <ph id="ph1">&lt;paramref name="name" /&gt;</ph> 尚未註冊。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.NameScope.UnregisterName(System.String)">
          <source><ph id="ph1">&lt;paramref name="name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="name" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Windows.NameScope.Values">
          <source>Gets a collection of the values in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 字典中值的集合。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.NameScope.Values">
          <source>A collection of the values in the <ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> dictionary.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.NameScope" /&gt;</ph> 字典中值的集合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>