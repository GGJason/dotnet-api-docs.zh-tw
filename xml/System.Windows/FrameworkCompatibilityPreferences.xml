<Type Name="FrameworkCompatibilityPreferences" FullName="System.Windows.FrameworkCompatibilityPreferences">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d6cc315534a7cc85a43d94d0dbc20b7eba80a3f" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36459610" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FrameworkCompatibilityPreferences extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkCompatibilityPreferences" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkCompatibilityPreferences abstract sealed" />
  <TypeSignature Language="F#" Value="type FrameworkCompatibilityPreferences = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e5100-101">包含屬性，指定應用程式相對於 PresentationFramework 組件中的 WPF 功能應如何運作。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e5100-101">Contains properties that specify how an application should behave relative to WPF features that are in the PresentationFramework assembly.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreInactiveSelectionHighlightBrushKeysSupported">
      <MemberSignature Language="C#" Value="public static bool AreInactiveSelectionHighlightBrushKeysSupported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AreInactiveSelectionHighlightBrushKeysSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AreInactiveSelectionHighlightBrushKeysSupported { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AreInactiveSelectionHighlightBrushKeysSupported : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5100-102">取得或設定值，指出應用程式是否應該針對非現用選取文字的色彩，使用 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> 和 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5100-102">Gets or sets a value that indicates whether the application should use the <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> and <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> properties for the colors of inactive selected items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5100-103">如果影用程式應該針對非現用所選項目的色彩使用 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> 和 <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> 屬性，則為 <see langword="true" />，否則為 <see langword="false" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e5100-103">
              <see langword="true" /> if the application should use the <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> and <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> properties for the colors of inactive selected items; otherwise, <see langword="false" /></span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5100-104">這個屬性的預設值取決於哪一個版本的 WPF 的應用程式目標。</span><span class="sxs-lookup"><span data-stu-id="e5100-104">The default value of this property depends which version of WPF that your app targets.</span></span>  <span data-ttu-id="e5100-105">如果您的應用程式為目標的 WPF 4.0 或更早版本，預設值是`false`。</span><span class="sxs-lookup"><span data-stu-id="e5100-105">If your app targets WPF 4.0 or earlier, the default is `false`.</span></span>  <span data-ttu-id="e5100-106">如果您的應用程式以 WPF 4.5 為目標，則預設會`true`。</span><span class="sxs-lookup"><span data-stu-id="e5100-106">If your app targets WPF 4.5, the default is `true`.</span></span>  <span data-ttu-id="e5100-107">如果您使用這個屬性來變更 WPF 的行為時，您必須在應用程式會繼承之類別的建構函式中的這類應用程式的存留期早期來變更屬性的值。</span><span class="sxs-lookup"><span data-stu-id="e5100-107">If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.</span></span>  <span data-ttu-id="e5100-108">在讀取值之後，您無法再變更。</span><span class="sxs-lookup"><span data-stu-id="e5100-108">After the value is read, you cannot change it again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepTextBoxDisplaySynchronizedWithTextProperty">
      <MemberSignature Language="C#" Value="public static bool KeepTextBoxDisplaySynchronizedWithTextProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property KeepTextBoxDisplaySynchronizedWithTextProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeepTextBoxDisplaySynchronizedWithTextProperty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepTextBoxDisplaySynchronizedWithTextProperty : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5100-109">取得或設定值，這個值表示資料繫結 <see cref="T:System.Windows.Controls.TextBox" /> 是否應在其 <see cref="P:System.Windows.Controls.TextBox.Text" /> 屬性上顯示與來源的值相同的字串</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5100-109">Gets or sets a value that indicates whether a data-bound <see cref="T:System.Windows.Controls.TextBox" /> should display a string that is identical to the value of the source its <see cref="P:System.Windows.Controls.TextBox.Text" /> property</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5100-110">如果資料繫結 <see cref="T:System.Windows.Controls.TextBox" /> 應在 <see cref="P:System.Windows.Controls.TextBox.Text" /> 屬性上顯示與來源的值相同的字串則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5100-110">
              <see langword="true" /> if a data-bound <see cref="T:System.Windows.Controls.TextBox" /> should display a string that is identical to the value of the source its <see cref="P:System.Windows.Controls.TextBox.Text" /> property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5100-111">這個屬性的預設值取決於哪一個版本的 WPF 的應用程式目標。</span><span class="sxs-lookup"><span data-stu-id="e5100-111">The default value of this property depends which version of WPF that your app targets.</span></span>  <span data-ttu-id="e5100-112">如果您的應用程式為目標的 WPF 4.0 或更早版本，預設值是`false`。</span><span class="sxs-lookup"><span data-stu-id="e5100-112">If your app targets WPF 4.0 or earlier, the default is `false`.</span></span>  <span data-ttu-id="e5100-113">如果您的應用程式以 WPF 4.5 為目標，則預設會`true`。</span><span class="sxs-lookup"><span data-stu-id="e5100-113">If your app targets WPF 4.5, the default is `true`.</span></span>  <span data-ttu-id="e5100-114">如果您使用這個屬性來變更 WPF 的行為時，您必須在應用程式會繼承之類別的建構函式中的這類應用程式的存留期早期來變更屬性的值。</span><span class="sxs-lookup"><span data-stu-id="e5100-114">If you use this property to change the behavior of WPF, you must change the property’s value early in the app’s lifetime, such in the constructor of the class that inherits from Application.</span></span>  <span data-ttu-id="e5100-115">在讀取值之後，您無法再變更。</span><span class="sxs-lookup"><span data-stu-id="e5100-115">After the value is read, you cannot change it again.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldThrowOnCopyOrCutFailure">
      <MemberSignature Language="C#" Value="public static bool ShouldThrowOnCopyOrCutFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ShouldThrowOnCopyOrCutFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ShouldThrowOnCopyOrCutFailure { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldThrowOnCopyOrCutFailure : bool with get, set" Usage="System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e5100-116">取得或設定值，指出 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 執行個體中失敗的複製或剪下作業是否會產生 <see cref="T:System.Runtime.InteropServices.ExternalException" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5100-116">Gets or sets a value that indicates whether a failed copy or cut operation in a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> instance results in a <see cref="T:System.Runtime.InteropServices.ExternalException" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e5100-117">如果 <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> 執行個體中失敗的複製或剪下作業會產生 <see cref="T:System.Runtime.InteropServices.ExternalException" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e5100-117">
              <see langword="true" /> if a failed copy or cut operation in a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> instance results in a <see cref="T:System.Runtime.InteropServices.ExternalException" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e5100-118">如果剪貼簿作業失敗，例如使用**HRESULT (CLIPBRD_E_CANT_OPEN) 0x800401D0**對應的錯誤<xref:System.Runtime.InteropServices.ExternalException>（這一種 ExternalException) 就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e5100-118">If a clipboard operation fails, such as with a **HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** error, a corresponding <xref:System.Runtime.InteropServices.ExternalException> (which is a type of ExternalException) is thrown.</span></span>  
  
 <span data-ttu-id="e5100-119">因為 Win32 `OpenClipboard` API 作為全域，撰寫完善的應用程式應該呼叫對應`CloseClipboard`API，只要他們已完成其剪貼簿作業。</span><span class="sxs-lookup"><span data-stu-id="e5100-119">Because the Win32 `OpenClipboard` API acts globally, well-written applications should call the corresponding `CloseClipboard` API as soon as they have completed their clipboard operations.</span></span> <span data-ttu-id="e5100-120">否則，相同的工作階段中執行其他應用程式將無法存取剪貼簿函式。</span><span class="sxs-lookup"><span data-stu-id="e5100-120">Otherwise, other applications running in the same session will be unable to access clipboard functions.</span></span>  
  
 <span data-ttu-id="e5100-121">在 WPF 中，是通常以無訊息方式忽略這類拒絕存取剪貼簿。</span><span class="sxs-lookup"><span data-stu-id="e5100-121">In WPF, such a denial of access to the clipboard is normally ignored silently.</span></span> <span data-ttu-id="e5100-122">不過，應用程式可以選擇要收到`ExternalException`藉由設定失敗時<xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A>旗標設為`true`。</span><span class="sxs-lookup"><span data-stu-id="e5100-122">However, applications can opt to receive an `ExternalException` upon failure by setting the <xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A> flag to `true`.</span></span> <span data-ttu-id="e5100-123">不過，選擇要收到例外狀況也需要應用程式來處理<xref:System.Windows.Input.ApplicationCommands.Cut%2A>並<xref:System.Windows.Input.ApplicationCommands.Copy%2A>透過 RoutedUICommands <xref:System.Windows.Input.CommandBinding>，然後將該繫結套用至所有 TextBoxBase 控制項 (<xref:System.Windows.Controls.TextBox>和<xref:System.Windows.Controls.RichTextBox>) 中應用程式。</span><span class="sxs-lookup"><span data-stu-id="e5100-123">However, opting to receive exceptions also requires the application to handle <xref:System.Windows.Input.ApplicationCommands.Cut%2A> and <xref:System.Windows.Input.ApplicationCommands.Copy%2A> RoutedUICommands through a <xref:System.Windows.Input.CommandBinding>, and then apply that binding to all TextBoxBase controls (<xref:System.Windows.Controls.TextBox> and <xref:System.Windows.Controls.RichTextBox>)  in the application.</span></span> <span data-ttu-id="e5100-124">應用程式應該確定它會處理 ExternalExceptions 所得的 CommandBinding 執行處理常式中的複製和剪下作業。</span><span class="sxs-lookup"><span data-stu-id="e5100-124">The application should ensure that it handles ExternalExceptions resulting from copy and cut operations in the CommandBinding's Executed handler.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>