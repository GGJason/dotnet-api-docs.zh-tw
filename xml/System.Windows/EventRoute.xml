<Type Name="EventRoute" FullName="System.Windows.EventRoute">
  <TypeSignature Language="C#" Value="public sealed class EventRoute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRoute extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventRoute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRoute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventRoute sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="52135-101">表示接在路由事件後面之路由的容器。</span><span class="sxs-lookup"><span data-stu-id="52135-101">Represents the container for the route to be followed by a routed event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52135-102">這個類別會對應到有效<xref:System.Windows.RoutedEvent>，且包含目標物件和處理常式清單中，用參考該事件的事件路由組的排序的清單。</span><span class="sxs-lookup"><span data-stu-id="52135-102">This class corresponds to a valid <xref:System.Windows.RoutedEvent>, and contains an ordered list of target object and handler list pairs that refer to the event route for that event.</span></span> <span data-ttu-id="52135-103"><xref:System.Windows.EventRoute> 支援新的項目加入至清單，並允許清單中的處理常式被叫用。</span><span class="sxs-lookup"><span data-stu-id="52135-103"><xref:System.Windows.EventRoute> supports adding new entries to the list and also allows for the handlers in the list to be invoked.</span></span>  
  
 <span data-ttu-id="52135-104">加入處理常式的大部分正常作業[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]事件不需要使用這個類別 (例如，使用<xref:System.Windows.EventManager>方法加入類別處理，或者查詢現有的處理常式的事件)。</span><span class="sxs-lookup"><span data-stu-id="52135-104">Most normal operations for adding handlers for [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] events do not require working with this class (for instance, use <xref:System.Windows.EventManager> methods to add class handling, or query for existing handlers of an event).</span></span> <span data-ttu-id="52135-105">這個類別時，主要是用於項目具有特定相關項目子系或父項目，以新增項目或項目移除預設計算的事件路由實用的知識。</span><span class="sxs-lookup"><span data-stu-id="52135-105">This class is mainly for use when elements have particular knowledge about child elements or parent elements that make it practical to either add elements to or remove elements from the default calculated event route.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventRoute (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventRoute(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="52135-106">與這個事件路由關聯的非 NULL 事件識別項。</span><span class="sxs-lookup"><span data-stu-id="52135-106">The non-NULL event identifier to be associated with this event route.</span></span></param>
        <summary><span data-ttu-id="52135-107">初始化 <see cref="T:System.Windows.EventRoute" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="52135-107">Initializes an instance of the <see cref="T:System.Windows.EventRoute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object target, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(object target, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (target As Object, handler As Delegate, handledEventsToo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ target, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="52135-108">指定要將其處理常式加入至路由的目標物件。</span><span class="sxs-lookup"><span data-stu-id="52135-108">Specifies the target object of which the handler is to be added to the route.</span></span></param>
        <param name="handler"><span data-ttu-id="52135-109">指定要加入至路由的處理常式。</span><span class="sxs-lookup"><span data-stu-id="52135-109">Specifies the handler to be added to the route.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="52135-110">表示接聽程式 (Listener) 是否可以偵測到已處理的事件。</span><span class="sxs-lookup"><span data-stu-id="52135-110">Indicates whether or not the listener detects events that have already been handled.</span></span></param>
        <summary><span data-ttu-id="52135-111">將指定目標的指定處理常式加入至路由中。</span><span class="sxs-lookup"><span data-stu-id="52135-111">Adds the specified handler for the specified target to the route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52135-112">它不是兩次加入處理常式的特定目標執行個體的錯誤。</span><span class="sxs-lookup"><span data-stu-id="52135-112">It is not an error to add a handler for a particular target instance twice.</span></span> <span data-ttu-id="52135-113">在這種情況下，將兩次呼叫此處理常式。</span><span class="sxs-lookup"><span data-stu-id="52135-113">In such a case, the handler will be called twice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchNode">
      <MemberSignature Language="C#" Value="public object PeekBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52135-114">傳回事件路由堆疊中，開始分枝成兩個邏輯樹狀結構的最上層項目。</span><span class="sxs-lookup"><span data-stu-id="52135-114">Returns the top-most element on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="52135-115">事件路由堆疊中，開始分枝成兩個邏輯樹狀結構的最上層項目。</span><span class="sxs-lookup"><span data-stu-id="52135-115">The top-most element on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchSource">
      <MemberSignature Language="C#" Value="public object PeekBranchSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchSource" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchSource () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52135-116">傳回事件路由堆疊中，開始分枝成兩個邏輯樹狀結構的最上層項目的來源。</span><span class="sxs-lookup"><span data-stu-id="52135-116">Returns the source for the top-most element on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="52135-117">事件路由堆疊中，開始分枝成兩個邏輯樹狀結構的最上層項目的來源。</span><span class="sxs-lookup"><span data-stu-id="52135-117">The source for the top-most element on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopBranchNode">
      <MemberSignature Language="C#" Value="public object PopBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PopBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PopBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PopBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PopBranchNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52135-118">傳回事件路由堆疊中，開始分枝成兩個邏輯樹狀結構的最上層節點。</span><span class="sxs-lookup"><span data-stu-id="52135-118">Returns the top-most node on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="52135-119">事件路由堆疊中，開始分枝成兩個邏輯樹狀結構的最上層節點。</span><span class="sxs-lookup"><span data-stu-id="52135-119">The top-most node on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushBranchNode">
      <MemberSignature Language="C#" Value="public void PushBranchNode (object node, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushBranchNode(object node, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushBranchNode (node As Object, source As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushBranchNode(System::Object ^ node, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="52135-120">事件路由堆疊中，開始分枝成兩個邏輯樹狀結構的最上層項目。</span><span class="sxs-lookup"><span data-stu-id="52135-120">The top-most element on the event route stack at which two logical trees diverge.</span></span></param>
        <param name="source"><span data-ttu-id="52135-121">事件路由堆疊中，開始分枝成兩個邏輯樹狀結構的最上層項目的來源。</span><span class="sxs-lookup"><span data-stu-id="52135-121">The source for the top-most element on the event route stack at which two logical trees diverge.</span></span></param>
        <summary><span data-ttu-id="52135-122">在事件路由堆疊中，新增開始分枝成兩個邏輯樹狀結構的最上層項目。</span><span class="sxs-lookup"><span data-stu-id="52135-122">Adds the top-most node to the event route stack at which two logical trees diverge.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>