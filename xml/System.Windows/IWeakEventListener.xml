<Type Name="IWeakEventListener" FullName="System.Windows.IWeakEventListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3a1bf86fcc21c642d34254ee3721d50b914beee5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWeakEventListener" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWeakEventListener" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IWeakEventListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWeakEventListener" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWeakEventListener" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3046e-101">為透過 WeakEvent 模式和 <see cref="T:System.Windows.WeakEventManager" /> 接收事件的類別提供事件接聽支援。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3046e-101">Provides event listening support for classes that expect to receive events through the WeakEvent pattern and a <see cref="T:System.Windows.WeakEventManager" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3046e-102"><xref:System.Windows.WeakEventManager> （發送器） 會將事件轉送藉由呼叫<xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>類別來實作此介面，而且已經加入為接聽程式呼叫上的方法<xref:System.Windows.WeakEventManager>事先方法。</span><span class="sxs-lookup"><span data-stu-id="3046e-102">The <xref:System.Windows.WeakEventManager> (a dispatcher) forwards an event by calling the <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> method on classes that implement this interface, and that have been added as listeners by calling <xref:System.Windows.WeakEventManager> methods beforehand.</span></span>  
  
 <span data-ttu-id="3046e-103">對下列 WeakEvent 模式的主要原因時，事件來源的物件存留期可能無關的事件接聽程式。</span><span class="sxs-lookup"><span data-stu-id="3046e-103">The principal reason for following the WeakEvent pattern is when the event source has an object lifetime that is potentially independent of the event listeners.</span></span> <span data-ttu-id="3046e-104">使用中央事件分派<xref:System.Windows.WeakEventManager>啟用接聽程式，以進行記憶體回收的處理常式收集 （或以手動方式清除） 即使來源的物件存留期超出接聽程式。</span><span class="sxs-lookup"><span data-stu-id="3046e-104">Using the central event dispatching of a <xref:System.Windows.WeakEventManager> enables the handlers for listeners to be garbage collected (or manually purged) even if the source object lifetime extends beyond the listeners.</span></span> <span data-ttu-id="3046e-105">相反地，一般事件的連結使用`+=`或對等語言特有的事件語法會導致潛在連線中的資源來保存強式參考的處理常式。</span><span class="sxs-lookup"><span data-stu-id="3046e-105">By contrast, a normal event hookup using `+=` or equivalent language-specific event syntax causes the potentially still-connected source to hold a strong reference to the handlers.</span></span> <span data-ttu-id="3046e-106">這可防止由記憶體回收能夠及時接聽程式的參考。</span><span class="sxs-lookup"><span data-stu-id="3046e-106">This keeps the listener references from being garbage collected in a timely fashion.</span></span>  
  
 <span data-ttu-id="3046e-107">來源和接聽程式之間的關聯性，建議使用此模式的一個常見情況是來自資料繫結來源更新事件的處理。</span><span class="sxs-lookup"><span data-stu-id="3046e-107">One common situation where the relationships between sources and listeners suggests the use of this pattern is the handling of update events coming from sources for data bindings.</span></span>  
  
 <span data-ttu-id="3046e-108">您可以使用 WeakEvent 模式來接聽外部的應用程式的事件。</span><span class="sxs-lookup"><span data-stu-id="3046e-108">You can use the WeakEvent pattern to listen for events that are external to your application.</span></span> <span data-ttu-id="3046e-109">您只需要定義<xref:System.Windows.WeakEventManager>，接聽在提供的行為<xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>，並使用<xref:System.Windows.WeakEventManager>附加此處理常式參考而非`+=`。</span><span class="sxs-lookup"><span data-stu-id="3046e-109">You only need to define a <xref:System.Windows.WeakEventManager> for it, provide listening behavior in <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>, and use the <xref:System.Windows.WeakEventManager> to attach the handler references rather than `+=`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.WeakEventManager" />
  </Docs>
  <Members>
    <Member MemberName="ReceiveWeakEvent">
      <MemberSignature Language="C#" Value="public bool ReceiveWeakEvent (Type managerType, object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ReceiveWeakEvent(class System.Type managerType, object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IWeakEventListener.ReceiveWeakEvent(System.Type,System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveWeakEvent (managerType As Type, sender As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReceiveWeakEvent(Type ^ managerType, System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="managerType" Type="System.Type" />
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="managerType">
          <span data-ttu-id="3046e-110">呼叫這個方法的 <see cref="T:System.Windows.WeakEventManager" /> 型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3046e-110">The type of the <see cref="T:System.Windows.WeakEventManager" /> calling this method.</span>
          </span>
        </param>
        <param name="sender">
          <span data-ttu-id="3046e-111">發出事件的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3046e-111">Object that originated the event.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="3046e-112">事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3046e-112">Event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3046e-113">從集中式事件管理員接收事件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3046e-113">Receives events from the centralized event manager.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3046e-114">如果接聽程式已處理事件則為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3046e-114">
              <see langword="true" /> if the listener handled the event.</span>
          </span>
          <span data-ttu-id="3046e-115">在 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] 中處理的 <see cref="T:System.Windows.WeakEventManager" /> 會將其視為錯誤，以註冊接聽程式未處理之事件的接聽程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3046e-115">It is considered an error by the <see cref="T:System.Windows.WeakEventManager" /> handling in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] to register a listener for an event that the listener does not handle.</span>
          </span>
          <span data-ttu-id="3046e-116">如果方法接收到無法辨識或處理的事件，不論如何都該傳回 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3046e-116">Regardless, the method should return <see langword="false" /> if it receives an event that it does not recognize or handle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3046e-117">下列範例會實作<xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A>提供 WeakEvent 模式支援兩個假設事件`ClockwiseSpin`和`CounterclockwiseSpin`各有專用的<xref:System.Windows.WeakEventManager>（未顯示）。</span><span class="sxs-lookup"><span data-stu-id="3046e-117">The following example implements <xref:System.Windows.IWeakEventListener.ReceiveWeakEvent%2A> to provide WeakEvent pattern support for two hypothetical events `ClockwiseSpin` and `CounterclockwiseSpin` that each have a dedicated <xref:System.Windows.WeakEventManager> (not shown).</span></span> <span data-ttu-id="3046e-118">此實作會呼叫每個支援的事件，事件資料轉換類別處理常式虛設常式 (在此情況下的兩個事件共用的事件資料型別`SpinEventArgs`)。</span><span class="sxs-lookup"><span data-stu-id="3046e-118">This implementation calls class handler stubs for each supported event, casting the event data (in this case the two events share an event data type `SpinEventArgs`).</span></span> <span data-ttu-id="3046e-119">實作會傳回`false`如果接收的事件不是預期。</span><span class="sxs-lookup"><span data-stu-id="3046e-119">The implementation returns `false` if the event received is not one that is expected.</span></span>  
  
 [!code-csharp[CorePseudocode#IWeakEventListener](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#iweakeventlistener)]
 [!code-vb[CorePseudocode#IWeakEventListener](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#iweakeventlistener)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="3046e-120">這個方法會接收所有可能的事件接收者已接聽程式清單中。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3046e-120">This method is intended to receive all possible events where the receiver is in a listener list.</span>
            </span>
            <span data-ttu-id="3046e-121">特別是如果正在接聽多個事件類別的實作，您必須檢查傳入的型別<paramref name="managerType" />參數才能知道哪個事件的呼叫會對應至。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3046e-121">Particularly if implementing for a class that is listening for more than one event, you must check the type of the incoming <paramref name="managerType" /> parameter in order to know which event the call corresponds to.</span>
            </span>
            <span data-ttu-id="3046e-122">這就是為什麼要模式的一部分則為每個事件都有專用<see cref="T:System.Windows.WeakEventManager" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3046e-122">This is why each event that is to be part of the pattern must have a dedicated <see cref="T:System.Windows.WeakEventManager" />.</span>
            </span>
            <span data-ttu-id="3046e-123">此外，<paramref name="e" />參數的型別為一般<see cref="T:System.EventArgs" />。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3046e-123">Also, the <paramref name="e" /> parameter is typed as the general <see cref="T:System.EventArgs" />.</span>
            </span>
            <span data-ttu-id="3046e-124">因此，為了取得事件資料的任何特定屬性，您的實作必須轉換成特定的事件資料類型。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3046e-124">Therefore, in order get any specific properties out of the event data, your implementation will need to cast to the specific event data type.</span>
            </span>
            <span data-ttu-id="3046e-125">一般而言之後根據事件的身分識別檢查,<see cref="T:System.Windows.WeakEventManager" />類型，您的實作應該呼叫的私用類別處理常式。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3046e-125">Typically, after checking for the identity of the event based on the <see cref="T:System.Windows.WeakEventManager" /> type, your implementation should call a private class handler.</span>
            </span>
            <span data-ttu-id="3046e-126">您的類別處理常式應該被視為用來處理該事件會透過新增的傳統事件模式透過加入的接聽程式的相同類別處理常式<see langword="+=" />上寄件者事件。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3046e-126">Your class handler could conceivably be the very same class handler that is used to handle that event for listeners that are added through the conventional event pattern of adding via <see langword="+=" /> to the event on the sender.</span>
            </span>
            <span data-ttu-id="3046e-127">下列範例 &gt; 一節提供概略實作範本。</span>
            <span class="sxs-lookup">
              <span data-stu-id="3046e-127">The following example section provides a rough implementation template.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.Windows.WeakEventManager" />
      </Docs>
    </Member>
  </Members>
</Type>