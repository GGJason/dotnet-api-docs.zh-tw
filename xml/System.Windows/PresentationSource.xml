<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PresentationSource.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d67ea1e465aa4e0b5a78b34ceb8f9bf32ea9bd1b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d67ea1e465aa4e0b5a78b34ceb8f9bf32ea9bd1b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.PresentationSource">
          <source>Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</source>
          <target state="translated">提供抽象基底類別，以顯示互通案例中其他技術的內容。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.PresentationSource">
          <source>In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</source>
          <target state="translated">此外，這個類別還提供使用這些來源以及基礎視覺分層表示架構的靜態方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PresentationSource">
          <source>to derive from this class.</source>
          <target state="translated">若要從這個類別衍生。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PresentationSource">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.#ctor">
          <source>Provides initialization for base class values when called by the constructor of a derived class.</source>
          <target state="translated">在透過衍生類別的建構函式呼叫時，提供基本類別值的初始設定。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSource">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> derived class instance to the list of known presentation sources.</source>
          <target state="translated">新增 <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> 衍生類別執行個體至已知展示來源的清單。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSource">
          <source>This method should be called by derived classes to indicate that they need to be tracked.</source>
          <target state="translated">由衍生類別，以指出需要追蹤，就應該呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The element to add the handler to.</source>
          <target state="translated">要新增處理常式的項目。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The hander implementation to add.</source>
          <target state="translated">要新增的處理常式實作。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> event to the provided element.</source>
          <target state="translated">新增 <ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> 事件的處理常式至提供的項目中。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Despite what the syntax block for this event states, there is no legitimate <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> attached property usage.</source>
          <target state="translated">儘管此事件的語法區塊的狀態，是不合法<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>附加的屬性使用方式。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You should not attempt to add handlers in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, and handlers in code should only be placed on objects that serve as hosts for presentation (<ph id="ph2">&lt;xref:System.Windows.PresentationSource&gt;</ph> ) content.</source>
          <target state="translated">您不應該嘗試將處理常式中的加入<ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>，和在程式碼中的處理常式應該只放置在物件做為主機的簡報 (<ph id="ph2">&lt;xref:System.Windows.PresentationSource&gt;</ph> ) 內容。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</source>
          <target state="translated">這類處理常式只應在物件初始化期間附加，而且應該在 Dispose 方法或對等物件清除中明確移除。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">即使這是路由的事件時，有特殊限制放置在此事件上不同於一般的路由的事件的行為，因為相對較小的數字會顧慮處理此一般應用程式案例中的項目事件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%2A&gt;</ph> methods to add handlers.</source>
          <target state="translated">您無法使用<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph><ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%2A&gt;</ph>方法加入處理常式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You must use <ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A&gt;</ph>.</source>
          <target state="translated">您必須使用<ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> and <ph id="ph3">`-=`</ph> event handler syntaxes, and related language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph>和<ph id="ph3">`-=`</ph>事件處理常式語法，以及相關的語言特定處理常式語法不支援，因為事件本身不會公開為公用。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Only the <ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph> utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">只有<ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph>用於加入和移除處理常式直接支援的公用程式方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Class handlers are not allowed.</source>
          <target state="translated">不允許類別處理常式。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Specifically, you cannot call <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</source>
          <target state="translated">具體來說，您不能呼叫<ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph>針對此事件類別的建構函式中因為雖然 SourceChanged 有識別碼欄位，識別項不是公用。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</source>
          <target state="translated">所有註冊處理常式將會收到 SourceChanged 事件，即使其中一個處理常式會嘗試將引數標記為已處理。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>to call or implement this method.</source>
          <target state="translated">若要呼叫或實作這個方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.ClearContentRenderedListeners">
          <source>Sets the list of listeners for the <ph id="ph1">&lt;see cref="E:System.Windows.PresentationSource.ContentRendered" /&gt;</ph> event to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="E:System.Windows.PresentationSource.ContentRendered" /&gt;</ph> 事件的接聽程式清單設定為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>Gets the visual target for the visuals being presented in the source.</source>
          <target state="translated">取得來源中顯示視覺的視覺目標。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>A visual target (instance of a <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> derived class).</source>
          <target state="translated">視覺目標 (<ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> 衍生類別的執行個體)。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>The return of this property relies on an implementation of <ph id="ph1">&lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;</ph>.</source>
          <target state="translated">這個屬性傳回依賴的實作<ph id="ph1">&lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>Derived classes can choose to shadow this property to offer a type-specific value.</source>
          <target state="translated">在衍生的類別可以選擇要遮蔽此屬性，以提供特定類型的值。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="E:System.Windows.PresentationSource.ContentRendered">
          <source>Occurs when content is rendered and ready for user interaction.</source>
          <target state="translated">內容已呈現且可以進行使用者互動時發生。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>Returns a list of sources.</source>
          <target state="translated">傳回來源清單。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>A list of weak references.</source>
          <target state="translated">弱式參考清單。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;</ph>.</source>
          <target state="translated">傳回的清單支援列舉值的來源清單的唯讀、 具備執行緒安全的副本加入與<ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>The enumerator skips any dead weak references in the list.</source>
          <target state="translated">列舉值會略過清單中的任何廢弱式參考。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>to get sources.</source>
          <target state="translated">若要取得來源。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> to find the source for.</source>
          <target state="translated">要尋找資源的 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>Returns the source in which a provided <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> is presented.</source>
          <target state="translated">傳回會顯示所提供 <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> 的資源。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> in which the dependency object is being presented.</source>
          <target state="translated">顯示相依性物件所在的 <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>to call or implement this method.</source>
          <target state="translated">若要呼叫或實作這個方法。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to find the source for.</source>
          <target state="translated">要尋找資源的 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>Returns the source in which a provided <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> is presented.</source>
          <target state="translated">傳回會顯示所提供 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 的資源。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> in which the visual is being presented, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="visual" /&gt;</ph> is disposed.</source>
          <target state="translated">顯示視覺的 <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph>，如果 <ph id="ph3">&lt;paramref name="visual" /&gt;</ph> 已遭處置則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;paramref name="visual" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="visual" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>to call or implement this method.</source>
          <target state="translated">若要呼叫或實作這個方法。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>When overridden in a derived class, returns a visual target for the given source.</source>
          <target state="translated">在衍生類別中覆寫時，傳回指定資源的視覺目標。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> that is target for rendering the visual.</source>
          <target state="translated">傳回呈現視覺的目標 <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>Override this method to declare the value that the <ph id="ph1">&lt;see cref="P:System.Windows.PresentationSource.CompositionTarget" /&gt;</ph> read-only property will return.</source>
          <target state="translated">覆寫這個方法，來宣告值，<ph id="ph1">&lt;see cref="P:System.Windows.PresentationSource.CompositionTarget" /&gt;</ph>唯讀屬性會傳回。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>Your override should return type-specific instances of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> derived class type that is used for your interoperation scenario.</source>
          <target state="translated">您的覆寫應該傳回的特定類型的執行個體<ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph>衍生類別的型別用於互通的案例。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.IsDisposed">
          <source>When overridden in a derived class, gets a value that declares whether the object is disposed.</source>
          <target state="translated">在衍生類別中覆寫時，取得值以宣告這個物件是否已處置。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object is disposed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果物件已處置，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.IsDisposed">
          <source>Derived classes are expected to implement <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> or provide equivalent behavior.</source>
          <target state="translated">在衍生的類別應實作<ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph>或提供對等的行為。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSource">
          <source>Removes a <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> derived class instance from the list of known presentation sources.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> 衍生類別執行個體從已知展示來源的清單中移除。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The element to remove the handler from.</source>
          <target state="translated">要從中移除處理常式的項目。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The handler implementation to remove.</source>
          <target state="translated">要移除的處理常式實作。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> event from the provided element.</source>
          <target state="translated">將 <ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> 事件的處理常式從提供的項目中移除。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">即使這是路由的事件時，有特殊限制放置在此事件上不同於一般的路由的事件的行為，因為相對較小的數字會顧慮處理此一般應用程式案例中的項目事件。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> <ph id="ph3">&lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt;</ph> methods to remove handlers.</source>
          <target state="translated">您無法使用<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>或<ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph><ph id="ph3">&lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt;</ph>方法，以移除處理常式。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You must use <ph id="ph1">&lt;xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A&gt;</ph>.</source>
          <target state="translated">您必須使用<ph id="ph1">&lt;xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> and <ph id="ph3">`-=`</ph> event handler syntaxes, and other language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph>和<ph id="ph3">`-=`</ph>事件處理常式語法和其他語言特定處理常式的語法，不支援，因為事件本身不會公開為公用。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Only the <ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph> utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">只有<ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph>用於加入和移除處理常式直接支援的公用程式方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The old root <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">舊的根 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The new root <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">新的根 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>Provides notification that the root <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> has changed.</source>
          <target state="translated">提供告知，指出根 <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> 已變更。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>Derived classes should call this method to indicate that their root <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> has changed.</source>
          <target state="translated">在衍生的類別應該呼叫此方法以指出其根<ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>已變更。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived classes.</source>
          <target state="translated">呼叫這個方法會導致兩個指定的根視覺效果上產生的物件存留期事件，並僅有這些根視覺效果是<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>衍生的類別。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The old root visual will raise the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">舊的根 visual 將會引發<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph>事件，並會處理其樹狀目錄中的項目向下，此事件每個子項目中進行廣播。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The new root visual will raise the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">將會引發新的根 visual<ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph>事件，並會處理其樹狀目錄中的項目向下，此事件每個子項目中進行廣播。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>When overridden in a derived class, gets or sets the root visual being presented in the source.</source>
          <target state="translated">在衍生類別中覆寫時，會取得或設定來源所顯示的根視覺。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>The root visual.</source>
          <target state="translated">根視覺。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>to override the property (<ph id="ph1">&lt;see langword="InheritanceDemand" /&gt;</ph>).</source>
          <target state="translated">若要覆寫屬性 (<ph id="ph1">&lt;see langword="InheritanceDemand" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">關聯的列舉型別：<ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>