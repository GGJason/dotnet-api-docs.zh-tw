<Type Name="PresentationSource" FullName="System.Windows.PresentationSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d67ea1e465aa4e0b5a78b34ceb8f9bf32ea9bd1b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PresentationSource : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PresentationSource extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PresentationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSource&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSource abstract : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="01ded-101">提供抽象基底類別，以顯示互通案例中其他技術的內容。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01ded-101">Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</span>
      </span>
      <span data-ttu-id="01ded-102">此外，這個類別還提供使用這些來源以及基礎視覺分層表示架構的靜態方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01ded-102">In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="01ded-103">若要從這個類別衍生。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01ded-103">to derive from this class.</span>
      </span>
      <span data-ttu-id="01ded-104">關聯的列舉型別：<see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。</span>
      <span class="sxs-lookup">
        <span data-stu-id="01ded-104">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
      </span>
    </permission>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01ded-105">在透過衍生類別的建構函式呼叫時，提供基本類別值的初始設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-105">Provides initialization for base class values when called by the constructor of a derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSource">
      <MemberSignature Language="C#" Value="protected void AddSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01ded-106">新增 <see cref="T:System.Windows.PresentationSource" /> 衍生類別執行個體至已知展示來源的清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-106">Adds a <see cref="T:System.Windows.PresentationSource" /> derived class instance to the list of known presentation sources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01ded-107">由衍生類別，以指出需要追蹤，就應該呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="01ded-107">This method should be called by derived classes to indicate that they need to be tracked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceChangedHandler(class System.Windows.IInputElement element, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceChangedHandler (element As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceChangedHandler(System::Windows::IInputElement ^ element, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="01ded-108">要新增處理常式的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-108">The element to add the handler to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="01ded-109">要新增的處理常式實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-109">The hander implementation to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01ded-110">新增 <see langword="SourceChanged" /> 事件的處理常式至提供的項目中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-110">Adds a handler for the <see langword="SourceChanged" /> event to the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01ded-111">儘管此事件的語法區塊的狀態，是不合法[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]附加的屬性使用方式。</span><span class="sxs-lookup"><span data-stu-id="01ded-111">Despite what the syntax block for this event states, there is no legitimate [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] attached property usage.</span></span> <span data-ttu-id="01ded-112">您不應該嘗試將處理常式中的加入[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]，和在程式碼中的處理常式應該只放置在物件做為主機的簡報 (<xref:System.Windows.PresentationSource> ) 內容。</span><span class="sxs-lookup"><span data-stu-id="01ded-112">You should not attempt to add handlers in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], and handlers in code should only be placed on objects that serve as hosts for presentation (<xref:System.Windows.PresentationSource> ) content.</span></span> <span data-ttu-id="01ded-113">這類處理常式只應在物件初始化期間附加，而且應該在 Dispose 方法或對等物件清除中明確移除。</span><span class="sxs-lookup"><span data-stu-id="01ded-113">Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</span></span>  
  
 <span data-ttu-id="01ded-114">即使這是路由的事件時，有特殊限制放置在此事件上不同於一般的路由的事件的行為，因為相對較小的數字會顧慮處理此一般應用程式案例中的項目事件。</span><span class="sxs-lookup"><span data-stu-id="01ded-114">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="01ded-115">您無法使用<xref:System.Windows.UIElement>或<xref:System.Windows.ContentElement><xref:System.Windows.UIElement.AddHandler%2A>方法加入處理常式。</span><span class="sxs-lookup"><span data-stu-id="01ded-115">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> methods to add handlers.</span></span> <span data-ttu-id="01ded-116">您必須使用<xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="01ded-116">You must use <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="01ded-117">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=`和`-=`事件處理常式語法，以及相關的語言特定處理常式語法不支援，因為事件本身不會公開為公用。</span><span class="sxs-lookup"><span data-stu-id="01ded-117">The [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` and `-=` event handler syntaxes, and related language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="01ded-118">只有<xref:System.Windows.PresentationSource>用於加入和移除處理常式直接支援的公用程式方法。</span><span class="sxs-lookup"><span data-stu-id="01ded-118">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
-   <span data-ttu-id="01ded-119">不允許類別處理常式。</span><span class="sxs-lookup"><span data-stu-id="01ded-119">Class handlers are not allowed.</span></span> <span data-ttu-id="01ded-120">具體來說，您不能呼叫<xref:System.Windows.EventManager.RegisterClassHandler%2A>針對此事件類別的建構函式中因為雖然 SourceChanged 有識別碼欄位，識別項不是公用。</span><span class="sxs-lookup"><span data-stu-id="01ded-120">Specifically, you cannot call <xref:System.Windows.EventManager.RegisterClassHandler%2A> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</span></span>  
  
-   <span data-ttu-id="01ded-121">所有註冊處理常式將會收到 SourceChanged 事件，即使其中一個處理常式會嘗試將引數標記為已處理。</span><span class="sxs-lookup"><span data-stu-id="01ded-121">All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="01ded-122">若要呼叫或實作這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-122">to call or implement this method.</span>
          </span>
          <span data-ttu-id="01ded-123">關聯的列舉型別：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-123">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ClearContentRenderedListeners">
      <MemberSignature Language="C#" Value="protected void ClearContentRenderedListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearContentRenderedListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearContentRenderedListeners ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearContentRenderedListeners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01ded-124">將 <see cref="E:System.Windows.PresentationSource.ContentRendered" /> 事件的接聽程式清單設定為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-124">Sets the list of listeners for the <see cref="E:System.Windows.PresentationSource.ContentRendered" /> event to <see langword="null" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.PresentationSource.ContentRendered" />
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CompositionTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CompositionTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CompositionTarget ^ CompositionTarget { System::Windows::Media::CompositionTarget ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01ded-125">取得來源中顯示視覺的視覺目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-125">Gets the visual target for the visuals being presented in the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01ded-126">視覺目標 (<see cref="T:System.Windows.Media.CompositionTarget" /> 衍生類別的執行個體)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-126">A visual target (instance of a <see cref="T:System.Windows.Media.CompositionTarget" /> derived class).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01ded-127">這個屬性傳回依賴的實作<xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>。</span><span class="sxs-lookup"><span data-stu-id="01ded-127">The return of this property relies on an implementation of <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="01ded-128">在衍生的類別可以選擇要遮蔽此屬性，以提供特定類型的值。</span>
            <span class="sxs-lookup">
              <span data-stu-id="01ded-128">Derived classes can choose to shadow this property to offer a type-specific value.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.PresentationSource.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContentRendered;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01ded-129">內容已呈現且可以進行使用者互動時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-129">Occurs when content is rendered and ready for user interaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSources">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable CurrentSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerable CurrentSources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CurrentSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentSources As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerable ^ CurrentSources { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01ded-130">傳回來源清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-130">Returns a list of sources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01ded-131">弱式參考清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-131">A list of weak references.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01ded-132">傳回的清單支援列舉值的來源清單的唯讀、 具備執行緒安全的副本加入與<xref:System.Windows.PresentationSource.AddSource%2A>。</span><span class="sxs-lookup"><span data-stu-id="01ded-132">The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <xref:System.Windows.PresentationSource.AddSource%2A>.</span></span>  
  
 <span data-ttu-id="01ded-133">列舉值會略過清單中的任何廢弱式參考。</span><span class="sxs-lookup"><span data-stu-id="01ded-133">The enumerator skips any dead weak references in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="01ded-134">若要取得來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-134">to get sources.</span>
          </span>
          <span data-ttu-id="01ded-135">關聯的列舉型別：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromDependencyObject">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromDependencyObject(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromDependencyObject(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <span data-ttu-id="01ded-136">要尋找資源的 <see cref="T:System.Windows.DependencyObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-136">The <see cref="T:System.Windows.DependencyObject" /> to find the source for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01ded-137">傳回會顯示所提供 <see cref="T:System.Windows.DependencyObject" /> 的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-137">Returns the source in which a provided <see cref="T:System.Windows.DependencyObject" /> is presented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01ded-138">顯示相依性物件所在的 <see cref="T:System.Windows.PresentationSource" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-138">The <see cref="T:System.Windows.PresentationSource" /> in which the dependency object is being presented.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="01ded-139">若要呼叫或實作這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-139">to call or implement this method.</span>
          </span>
          <span data-ttu-id="01ded-140">關聯的列舉型別：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-140">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromVisual">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="01ded-141">要尋找資源的 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-141">The <see cref="T:System.Windows.Media.Visual" /> to find the source for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01ded-142">傳回會顯示所提供 <see cref="T:System.Windows.Media.Visual" /> 的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-142">Returns the source in which a provided <see cref="T:System.Windows.Media.Visual" /> is presented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01ded-143">顯示視覺的 <see cref="T:System.Windows.PresentationSource" />，如果 <paramref name="visual" /> 已遭處置則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-143">The <see cref="T:System.Windows.PresentationSource" /> in which the visual is being presented, or <see langword="null" /> if <paramref name="visual" /> is disposed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="01ded-144">
            <paramref name="visual" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-144">
              <paramref name="visual" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="01ded-145">若要呼叫或實作這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-145">to call or implement this method.</span>
          </span>
          <span data-ttu-id="01ded-146">關聯的列舉型別：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-146">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01ded-147">在衍生類別中覆寫時，傳回指定資源的視覺目標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-147">When overridden in a derived class, returns a visual target for the given source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="01ded-148">傳回呈現視覺的目標 <see cref="T:System.Windows.Media.CompositionTarget" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-148">Returns a <see cref="T:System.Windows.Media.CompositionTarget" /> that is target for rendering the visual.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="01ded-149">覆寫這個方法，來宣告值，<see cref="P:System.Windows.PresentationSource.CompositionTarget" />唯讀屬性會傳回。</span>
            <span class="sxs-lookup">
              <span data-stu-id="01ded-149">Override this method to declare the value that the <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> read-only property will return.</span>
            </span>
            <span data-ttu-id="01ded-150">您的覆寫應該傳回的特定類型的執行個體<see cref="T:System.Windows.Media.CompositionTarget" />衍生類別的型別用於互通的案例。</span>
            <span class="sxs-lookup">
              <span data-stu-id="01ded-150">Your override should return type-specific instances of the <see cref="T:System.Windows.Media.CompositionTarget" /> derived class type that is used for your interoperation scenario.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public abstract bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01ded-151">在衍生類別中覆寫時，取得值以宣告這個物件是否已處置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-151">When overridden in a derived class, gets a value that declares whether the object is disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01ded-152">如果物件已處置，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-152">
              <see langword="true" /> if the object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="01ded-153">在衍生的類別應實作<see cref="T:System.IDisposable" />或提供對等的行為。</span>
            <span class="sxs-lookup">
              <span data-stu-id="01ded-153">Derived classes are expected to implement <see cref="T:System.IDisposable" /> or provide equivalent behavior.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSource">
      <MemberSignature Language="C#" Value="protected void RemoveSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="01ded-154">將 <see cref="T:System.Windows.PresentationSource" /> 衍生類別執行個體從已知展示來源的清單中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-154">Removes a <see cref="T:System.Windows.PresentationSource" /> derived class instance from the list of known presentation sources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceChangedHandler(class System.Windows.IInputElement e, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceChangedHandler (e As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceChangedHandler(System::Windows::IInputElement ^ e, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="01ded-155">要從中移除處理常式的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-155">The element to remove the handler from.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="01ded-156">要移除的處理常式實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-156">The handler implementation to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01ded-157">將 <see langword="SourceChanged" /> 事件的處理常式從提供的項目中移除。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-157">Removes a handler for the <see langword="SourceChanged" /> event from the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01ded-158">即使這是路由的事件時，有特殊限制放置在此事件上不同於一般的路由的事件的行為，因為相對較小的數字會顧慮處理此一般應用程式案例中的項目事件。</span><span class="sxs-lookup"><span data-stu-id="01ded-158">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="01ded-159">您無法使用<xref:System.Windows.UIElement>或<xref:System.Windows.ContentElement><xref:System.Windows.UIElement.RemoveHandler%2A>方法，以移除處理常式。</span><span class="sxs-lookup"><span data-stu-id="01ded-159">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> methods to remove handlers.</span></span> <span data-ttu-id="01ded-160">您必須使用<xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>。</span><span class="sxs-lookup"><span data-stu-id="01ded-160">You must use <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="01ded-161">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=`和`-=`事件處理常式語法和其他語言特定處理常式的語法，不支援，因為事件本身不會公開為公用。</span><span class="sxs-lookup"><span data-stu-id="01ded-161">The [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` and `-=` event handler syntaxes, and other language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="01ded-162">只有<xref:System.Windows.PresentationSource>用於加入和移除處理常式直接支援的公用程式方法。</span><span class="sxs-lookup"><span data-stu-id="01ded-162">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RootChanged">
      <MemberSignature Language="C#" Value="protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RootChanged(class System.Windows.Media.Visual oldRoot, class System.Windows.Media.Visual newRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RootChanged (oldRoot As Visual, newRoot As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RootChanged(System::Windows::Media::Visual ^ oldRoot, System::Windows::Media::Visual ^ newRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldRoot" Type="System.Windows.Media.Visual" />
        <Parameter Name="newRoot" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="oldRoot">
          <span data-ttu-id="01ded-163">舊的根 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-163">The old root <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <param name="newRoot">
          <span data-ttu-id="01ded-164">新的根 <see cref="T:System.Windows.Media.Visual" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-164">The new root <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="01ded-165">提供告知，指出根 <see cref="T:System.Windows.Media.Visual" /> 已變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-165">Provides notification that the root <see cref="T:System.Windows.Media.Visual" /> has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01ded-166">在衍生的類別應該呼叫此方法以指出其根<xref:System.Windows.Media.Visual>已變更。</span><span class="sxs-lookup"><span data-stu-id="01ded-166">Derived classes should call this method to indicate that their root <xref:System.Windows.Media.Visual> has changed.</span></span>  
  
 <span data-ttu-id="01ded-167">呼叫這個方法會導致兩個指定的根視覺效果上產生的物件存留期事件，並僅有這些根視覺效果是<xref:System.Windows.FrameworkElement>衍生的類別。</span><span class="sxs-lookup"><span data-stu-id="01ded-167">Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <xref:System.Windows.FrameworkElement> derived classes.</span></span>  
  
-   <span data-ttu-id="01ded-168">舊的根 visual 將會引發<xref:System.Windows.FrameworkElement.Unloaded>事件，並會處理其樹狀目錄中的項目向下，此事件每個子項目中進行廣播。</span><span class="sxs-lookup"><span data-stu-id="01ded-168">The old root visual will raise the <xref:System.Windows.FrameworkElement.Unloaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
-   <span data-ttu-id="01ded-169">將會引發新的根 visual<xref:System.Windows.FrameworkElement.Loaded>事件，並會處理其樹狀目錄中的項目向下，此事件每個子項目中進行廣播。</span><span class="sxs-lookup"><span data-stu-id="01ded-169">The new root visual will raise the <xref:System.Windows.FrameworkElement.Loaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="01ded-170">在衍生類別中覆寫時，會取得或設定來源所顯示的根視覺。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-170">When overridden in a derived class, gets or sets the root visual being presented in the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="01ded-171">根視覺。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-171">The root visual.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="01ded-172">若要覆寫屬性 (<see langword="InheritanceDemand" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-172">to override the property (<see langword="InheritanceDemand" />).</span>
          </span>
          <span data-ttu-id="01ded-173">關聯的列舉型別：<see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="01ded-173">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>