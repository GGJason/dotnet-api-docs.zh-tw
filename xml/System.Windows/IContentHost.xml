<Type Name="IContentHost" FullName="System.Windows.IContentHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f50a81c208d13cea732e196f0874656c38fbc593" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37492320" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContentHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContentHost" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IContentHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContentHost" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContentHost" />
  <TypeSignature Language="F#" Value="type IContentHost = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>這個介面是由裝載 <see cref="T:System.Windows.ContentElement" /> 的介面實作的。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRectangles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt; GetRectangles (System.Windows.ContentElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Rect&gt; GetRectangles(class System.Windows.ContentElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.GetRectangles(System.Windows.ContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectangles (child As ContentElement) As ReadOnlyCollection(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Rect&gt; ^ GetRectangles(System::Windows::ContentElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member GetRectangles : System.Windows.ContentElement -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt;" Usage="iContentHost.GetRectangles child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.ContentElement" />
      </Parameters>
      <Docs>
        <param name="child">為其傳回週框的子項目。</param>
        <summary>針對子項目，傳回週框的集合。</summary>
        <returns>子項目之周框 (Bounding Rectangle) 的集合。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">如果 *child* 為 Null。</exception>
        <exception cref="T:System.ArgumentException">如果項目不是直接子系 (亦即，項目必須是 <see cref="T:System.Windows.IContentHost" /> 的子系或是 <see cref="T:System.Windows.ContentElement" />，也就是 <see cref="T:System.Windows.IContentHost" /> 的直接子系)。</exception>
      </Docs>
    </Member>
    <Member MemberName="HostedElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt; HostedElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.IInputElement&gt; HostedElements" />
      <MemberSignature Language="DocId" Value="P:System.Windows.IContentHost.HostedElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostedElements As IEnumerator(Of IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerator&lt;System::Windows::IInputElement ^&gt; ^ HostedElements { System::Collections::Generic::IEnumerator&lt;System::Windows::IInputElement ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostedElements : System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt;" Usage="System.Windows.IContentHost.HostedElements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得列舉型別 (Enumeration)，其中包含所有的子代 <see cref="T:System.Windows.ContentElement" /> 衍生類別，以及 <see cref="T:System.Windows.UIElement" /> 直接子代或其中一個子代 <see cref="T:System.Windows.IContentHost" /> 類別的所有 <see cref="T:System.Windows.ContentElement" /> 衍生類別。</summary>
        <value>包含所有子代 <see cref="T:System.Windows.ContentElement" /> 衍生類別，以及 <see cref="T:System.Windows.UIElement" /> 直接子代或其中一個子代 <see cref="T:System.Windows.IContentHost" /> 類別之所有 <see cref="T:System.Windows.ContentElement" /> 衍生類別的列舉型別。 換句話說，也就是 <see cref="T:System.Windows.IContentHost" /> 會為其建立視覺表示 (<see cref="T:System.Windows.ContentElement" /> 衍生類別) 或其配置是由 <see cref="T:System.Windows.IContentHost" /> 驅動的項目 (第一層的子代 <see cref="T:System.Windows.UIElement" /> 衍生類別)。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberSignature Language="F#" Value="abstract member InputHitTest : System.Windows.Point -&gt; System.Windows.IInputElement" Usage="iContentHost.InputHitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">滑鼠會隨著 ContentHost 而相對改變。</param>
        <summary>執行子項目的點擊測試。</summary>
        <returns>
          <see cref="T:System.Windows.IInputElement" /> 的子系，如果不存在此種項目則為 **NULL**。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="public void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member OnChildDesiredSizeChanged : System.Windows.UIElement -&gt; unit" Usage="iContentHost.OnChildDesiredSizeChanged child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <see cref="P:System.Windows.UIElement.DesiredSize" /> 已變更的子項目。</param>
        <summary>當 <see cref="T:System.Windows.UIElement" /> 所裝載的 <see cref="T:System.Windows.IContentHost" /> 衍生類別變更其 <see cref="P:System.Windows.UIElement.DesiredSize" /> 時呼叫。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">如果 *child* 為 Null。</exception>
        <exception cref="T:System.ArgumentException">如果 *child* 不是直接子系 (亦即，*child* 必須是 <see cref="T:System.Windows.IContentHost" /> 的子系或是 <see cref="T:System.Windows.ContentElement" />，也就是 <see cref="T:System.Windows.IContentHost" /> 的直接子系)。</exception>
      </Docs>
    </Member>
  </Members>
</Type>