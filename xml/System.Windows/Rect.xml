<Type Name="Rect" FullName="System.Windows.Rect">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf7d1387ee03ec7cae439135fbd676179308311f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Rect : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit Rect extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Rect" />
  <TypeSignature Language="VB.NET" Value="Public Structure Rect&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Rect : IFormattable" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.RectConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Converters.RectValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5977d-101">描述矩形的寬度、高度和位置。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5977d-101">Describes the width, height, and location of a rectangle.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_Duration"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="5977d-102">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="5977d-102">XAML Attribute Usage</span></span>  
  
```  
<object property="x,y,width,height"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="5977d-103">XAML 值</span><span class="sxs-lookup"><span data-stu-id="5977d-103">XAML Values</span></span>  
 <span data-ttu-id="5977d-104">*x*</span><span class="sxs-lookup"><span data-stu-id="5977d-104">*x*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="5977d-105">左側的矩形的 x 座標位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-105">The x-coordinate location of the left side of the rectangle.</span></span>  
  
 <span data-ttu-id="5977d-106">*y*</span><span class="sxs-lookup"><span data-stu-id="5977d-106">*y*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="5977d-107">上方的矩形的 y 座標位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-107">The y-coordinate location of the top side of the rectangle.</span></span>  
  
 <span data-ttu-id="5977d-108">*width*</span><span class="sxs-lookup"><span data-stu-id="5977d-108">*width*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="5977d-109">非負數值表示<xref:System.Windows.Rect.Width%2A>的矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-109">A non-negative value that represents the <xref:System.Windows.Rect.Width%2A> of the rectangle.</span></span>  
  
 <span data-ttu-id="5977d-110">*height*</span><span class="sxs-lookup"><span data-stu-id="5977d-110">*height*</span></span>  
 <xref:System.Double?displayProperty=nameWithType>  
  
 <span data-ttu-id="5977d-111">非負數值表示<xref:System.Windows.Rect.Height%2A>的矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-111">A non-negative value that represents the <xref:System.Windows.Rect.Height%2A> of the rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-112">下列範例示範如何使用<xref:System.Windows.Rect>結構，以指定的維度和使用 XAML 之矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-112">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5977d-113">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-113">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-114">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-114">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-115">初始化 <see cref="T:System.Windows.Rect" /> 結構的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-115">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Size size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="5977d-116">
            <see cref="T:System.Windows.Size" /> 結構，指定矩形的高度和寬度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-116">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-117">初始化 <see cref="T:System.Windows.Rect" /> 類別的新執行個體，這個執行個體是所指定的大小而且位在 (0,0)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-117">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is of the specified size and is located at (0,0).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-118">下列範例示範如何建立新<xref:System.Windows.Rect>結構使用<xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="5977d-118">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point1, System.Windows.Point point2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (point1 As Point, point2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point1, System::Windows::Point point2);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point1">
          <span data-ttu-id="5977d-119">新矩形必須包含的第一個點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-119">The first point that the new rectangle must contain.</span>
          </span>
        </param>
        <param name="point2">
          <span data-ttu-id="5977d-120">新矩形必須包含的第二個點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-120">The second point that the new rectangle must contain.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-121">初始化 <see cref="T:System.Windows.Rect" /> 結構的新執行個體，這個執行個體剛好可以包含兩個指定的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-121">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the two specified points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-122">下列範例示範如何建立新<xref:System.Windows.Rect>結構使用<xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="5977d-122">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Point%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point location, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point location, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point location, System::Windows::Size size);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="location" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="location">
          <span data-ttu-id="5977d-123">指定矩形左上角之位置的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-123">A point that specifies the location of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="5977d-124">
            <see cref="T:System.Windows.Size" /> 結構，指定矩形的高度和寬度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-124">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-125">初始化 <see cref="T:System.Windows.Rect" /> 結構的新執行個體，這個執行個體具有指定的左上角位置和指定的寬度及高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-125">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified top-left corner location and the specified width and height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-126">下列範例示範如何建立新<xref:System.Windows.Rect>結構使用<xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="5977d-126">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Size%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample4_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (System.Windows.Point point, System.Windows.Vector vector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Vector vector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Windows.Point,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(System::Windows::Point point, System::Windows::Vector vector);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="vector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="5977d-127">矩形必須包含的第一個點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-127">The first point the rectangle must contain.</span>
          </span>
        </param>
        <param name="vector">
          <span data-ttu-id="5977d-128">要位移 (Offset) 所指定點的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-128">The amount to offset the specified point.</span>
          </span>
          <span data-ttu-id="5977d-129">產生的矩形剛好可以包含兩個點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-129">The resulting rectangle will be exactly large enough to contain both points.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-130">初始化 <see cref="T:System.Windows.Rect" /> 結構的新執行個體，這個執行個體剛好可以包含指定的點以及所指定點和所指定向量的總和。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-130">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that is exactly large enough to contain the specified point and the sum of the specified point and the specified vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-131">下列範例示範如何建立新<xref:System.Windows.Rect>結構使用<xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="5977d-131">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Windows.Point%2CSystem.Windows.Vector%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample5_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample5_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rect (double x, double y, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64 x, float64 y, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.#ctor(System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (x As Double, y As Double, width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rect(double x, double y, double width, double height);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="5977d-132">矩形左上角的 X 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-132">The x-coordinate of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="5977d-133">矩形左上角的 Y 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-133">The y-coordinate of the top-left corner of the rectangle.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="5977d-134">矩形的寬度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-134">The width of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="5977d-135">矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-135">The height of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-136">初始化 <see cref="T:System.Windows.Rect" /> 結構的新執行個體，這個執行個體具有指定的 X 座標、Y 座標、寬度和高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-136">Initializes a new instance of the <see cref="T:System.Windows.Rect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-137">下列範例示範如何建立新<xref:System.Windows.Rect>結構使用<xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29>建構函式。</span><span class="sxs-lookup"><span data-stu-id="5977d-137">The following example shows how to create a new <xref:System.Windows.Rect> structure by using the <xref:System.Windows.Rect.%23ctor%28System.Double%2CSystem.Double%2CSystem.Double%2CSystem.Double%29> constructor.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample6_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample6_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5977d-138">
            <paramref name="width" /> 是負值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-138">
              <paramref name="width" /> is a negative value.</span>
          </span>
          <span data-ttu-id="5977d-139">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-139">-or-</span>
          </span>
          <span data-ttu-id="5977d-140">
            <paramref name="height" /> 是負值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-140">
              <paramref name="height" /> is a negative value.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Bottom">
      <MemberSignature Language="C#" Value="public double Bottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Bottom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Bottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Bottom As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Bottom { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-141">取得矩形底端的 Y 軸值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-141">Gets the y-axis value of the bottom of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-142">矩形底端的 Y 軸值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-142">The y-axis value of the bottom of the rectangle.</span>
          </span>
          <span data-ttu-id="5977d-143">如果矩形是空的，則值為 <see cref="F:System.Double.NegativeInfinity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-143">If the rectangle is empty, the value is <see cref="F:System.Double.NegativeInfinity" /> .</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-144">將矩形的底部的 y 軸值的總和等於<xref:System.Windows.Rect.Y%2A>和<xref:System.Windows.Rect.Height%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="5977d-144">The y-axis value of the bottom of the rectangle is equal to the sum of the <xref:System.Windows.Rect.Y%2A> and <xref:System.Windows.Rect.Height%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-145">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-145">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-146">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-146">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomLeft { System::Windows::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-147">取得矩形左下角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-147">Gets the position of the bottom-left corner of the rectangle</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-148">矩形左下角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-148">The position of the bottom-left corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-149">矩形的左下角的位置會等於 (<xref:System.Windows.Rect.X%2A>， <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>)。</span><span class="sxs-lookup"><span data-stu-id="5977d-149">The position of the bottom-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-150">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-150">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-151">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-151">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BottomRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point BottomRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point BottomRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.BottomRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BottomRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point BottomRight { System::Windows::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-152">取得矩形右下角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-152">Gets the position of the bottom-right corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-153">矩形右下角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-153">The position of the bottom-right corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-154">矩形右下角的位置會等於 (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>， <xref:System.Windows.Rect.Y%2A>  +  <xref:System.Windows.Rect.Height%2A>)。</span><span class="sxs-lookup"><span data-stu-id="5977d-154">The position of the bottom-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A> + <xref:System.Windows.Rect.Height%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-155">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-155">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-156">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-156">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-157">表示矩形是否包含指定的點或矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-157">Indicates whether the rectangle contains the specified point or rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="5977d-158">要檢查的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-158">The point to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-159">表示矩形是否包含指定的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-159">Indicates whether the rectangle contains the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-160">如果矩形包含指定的點，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-160">
              <see langword="true" /> if the rectangle contains the specified point; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-161">下列範例示範如何使用<xref:System.Windows.Rect.Contains%28System.Windows.Point%29>方法，以判斷是否包含指定的矩形<xref:System.Windows.Point>。</span><span class="sxs-lookup"><span data-stu-id="5977d-161">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Point%29> method to determine if the rectangle contains the specified <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Rect rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5977d-162">要檢查的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-162">The rectangle to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-163">表示矩形是否包含指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-163">Indicates whether the rectangle contains the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-164">如果矩形整個包含 <paramref name="rect" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-164">
              <see langword="true" /> if <paramref name="rect" /> is entirely contained by the rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-165">下列範例示範如何使用<xref:System.Windows.Rect.Contains%28System.Windows.Rect%29>方法來判斷是否由另一個矩形包含一個矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-165">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Windows.Rect%29> method to determine if one rectangle is contained by another rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Contains(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (x As Double, y As Double) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(double x, double y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="5977d-166">要檢查之點的 X 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-166">The x-coordinate of the point to check.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="5977d-167">要檢查之點的 Y 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-167">The y-coordinate of the point to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-168">表示矩形是否包含指定的 X 座標和 Y 座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-168">Indicates whether the rectangle contains the specified x-coordinate and y-coordinate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-169">如果矩形包含 (<paramref name="x" />, <paramref name="y" />) 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-169">
              <see langword="true" /> if (<paramref name="x" />, <paramref name="y" />) is contained by the rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-170">下列範例示範如何使用<xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29>方法，以判斷矩形是否包含指定的給定的 x 座標和 y 座標的點。</span><span class="sxs-lookup"><span data-stu-id="5977d-170">The following example shows how to use the <xref:System.Windows.Rect.Contains%28System.Double%2CSystem.Double%29> method to determine if the rectangle contains the point specified by the given x-coordinate and y-coordinate.</span></span>  
  
 [!code-csharp[RectExamples_snip#ContainsExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#containsexample3_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Empty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Rect Empty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Empty As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Rect Empty { System::Windows::Rect get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-171">取得特殊值，這個值表示沒有位置或區域的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-171">Gets a special value that represents a rectangle with no position or area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-172">空白矩形 (<see cref="P:System.Windows.Rect.X" /> 和 <see cref="P:System.Windows.Rect.Y" /> 屬性值為 <see cref="F:System.Double.PositiveInfinity" /> 而且 <see cref="P:System.Windows.Rect.Width" /> 和 <see cref="P:System.Windows.Rect.Height" /> 屬性值為 <see cref="F:System.Double.NegativeInfinity" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-172">The empty rectangle, which has <see cref="P:System.Windows.Rect.X" /> and <see cref="P:System.Windows.Rect.Y" /> property values of <see cref="F:System.Double.PositiveInfinity" />, and has <see cref="P:System.Windows.Rect.Width" /> and <see cref="P:System.Windows.Rect.Height" /> property values of <see cref="F:System.Double.NegativeInfinity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-173">避免空白矩形的算術運算。</span><span class="sxs-lookup"><span data-stu-id="5977d-173">Avoid mathematical computations involving empty rectangles.</span></span> <span data-ttu-id="5977d-174">因為同時<xref:System.Windows.Rect.X%2A>和<xref:System.Windows.Rect.Y%2A>是無限值，作業會造成嚴重受損這些作業的處理器。</span><span class="sxs-lookup"><span data-stu-id="5977d-174">Because both <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> are infinite values, processor operations are severely impaired by these operations.</span></span> <span data-ttu-id="5977d-175">包含這些值的比較不會影響應用程式的效能。</span><span class="sxs-lookup"><span data-stu-id="5977d-175">Comparisons involving these values will not affect application performance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.IsEmpty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-176">表示兩個矩形是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-176">Indicates whether two rectangles are equal.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="5977d-177">要與目前矩形相比較的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-177">The object to compare to the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-178">表示指定的物件是否等於目前矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-178">Indicates whether the specified object is equal to the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-179">如果 <paramref name="o" /> 是 <see cref="T:System.Windows.Rect" /> 而且具有與目前矩形相同的 <see cref="P:System.Windows.Rect.Location" /> 和 <see cref="P:System.Windows.Rect.Size" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-179">
              <see langword="true" /> if <paramref name="o" /> is a <see cref="T:System.Windows.Rect" /> and has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-180">這項作業會測試物件相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-180">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="5977d-181">這項比較，兩個執行個體<xref:System.Double.NaN?displayProperty=nameWithType>會被視為相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-181">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5977d-182">會描述矩形的位置和維度<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="5977d-182">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="5977d-183">因為<xref:System.Double>值可能會遺失有效位數時操作時，邏輯上相等的兩個值之間的比較可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="5977d-183">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-184">下列範例示範如何使用<xref:System.Windows.Rect.Equals%28System.Object%29>方法來決定矩形是否等於指定的物件。</span><span class="sxs-lookup"><span data-stu-id="5977d-184">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Object%29> method to determine if a rectangle is equal to a specified object.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Rect value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.Rect value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::Rect value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="5977d-185">要與目前矩形相比較的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-185">The rectangle to compare to the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-186">表示指定的矩形是否等於目前矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-186">Indicates whether the specified rectangle is equal to the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-187">如果指定的矩形具有與目前矩形相同的 <see cref="P:System.Windows.Rect.Location" /> 和 <see cref="P:System.Windows.Rect.Size" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-187">
              <see langword="true" /> if the specified rectangle has the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values as the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-188">這項作業會測試物件相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-188">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="5977d-189">這項比較，兩個執行個體<xref:System.Double.NaN?displayProperty=nameWithType>會被視為相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-189">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5977d-190">會描述矩形的位置和維度<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="5977d-190">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="5977d-191">因為<xref:System.Double>值可能會遺失有效位數時操作時，邏輯上相等的兩個值之間的比較可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="5977d-191">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-192">下列範例示範如何使用<xref:System.Windows.Rect.Equals%28System.Windows.Rect%29>方法來決定矩形是否等於指定的矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-192">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%29> method to determine if a rectangle is equal to a specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Equals(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="5977d-193">要比較的第一個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-193">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="5977d-194">要比較的第二個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-194">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-195">表示指定的矩形是否相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-195">Indicates whether the specified rectangles are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-196">如果矩形具有相同的 <see cref="P:System.Windows.Rect.Location" /> 和 <see cref="P:System.Windows.Rect.Size" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-196">
              <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-197">這項作業會測試物件相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-197">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="5977d-198">這項比較，兩個執行個體<xref:System.Double.NaN?displayProperty=nameWithType>會被視為相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-198">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5977d-199">會描述矩形的位置和維度<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="5977d-199">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="5977d-200">因為<xref:System.Double>值可能會遺失有效位數時操作時，邏輯上相等的兩個值之間的比較可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="5977d-200">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-201">下列範例示範如何使用<xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29>方法，以判斷是否等於另一個矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-201">The following example shows how to use the <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to determine if one rectangle is equal to another.</span></span>  
  
 [!code-csharp[RectExamples_snip#EqualsExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#equalsexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
        <altmember cref="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5977d-202">建立矩形的雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-202">Creates a hash code for the rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-203">目前 <see cref="T:System.Windows.Rect" /> 結構的雜湊程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-203">A hash code for the current <see cref="T:System.Windows.Rect" /> structure.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-204">這個方法會藉由建立雜湊程式碼<xref:System.Windows.Rect.X%2A>， <xref:System.Windows.Rect.Y%2A>， <xref:System.Windows.Rect.Width%2A>，和<xref:System.Windows.Rect.Height%2A>屬性值。</span><span class="sxs-lookup"><span data-stu-id="5977d-204">This method creates a hash code by using the <xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>, <xref:System.Windows.Rect.Width%2A>, and <xref:System.Windows.Rect.Height%2A> property values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-205">下列範例示範如何使用<xref:System.Windows.Rect.GetHashCode%2A>方法來取得的雜湊碼<xref:System.Windows.Rect>。</span><span class="sxs-lookup"><span data-stu-id="5977d-205">The following example shows how to use the <xref:System.Windows.Rect.GetHashCode%2A> method to get the hash code of a <xref:System.Windows.Rect>.</span></span>  
  
 [!code-csharp[RectExamples_snip#GetHashCodeExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#gethashcodeexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-206">取得或設定矩形的高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-206">Gets or sets the height of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-207">表示矩形高度的正數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-207">A positive number that represents the height of the rectangle.</span>
          </span>
          <span data-ttu-id="5977d-208">預設值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-208">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-209"><xref:System.Windows.Rect.Empty%2A>矩形<xref:System.Windows.Rect.Height%2A>的<xref:System.Double.NegativeInfinity>。</span><span class="sxs-lookup"><span data-stu-id="5977d-209">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Height%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="5977d-210"><xref:System.Windows.Rect.Empty%2A>矩形是唯讀，則其<xref:System.Windows.Rect.Height%2A>不變更。</span><span class="sxs-lookup"><span data-stu-id="5977d-210">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Height%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-211">下列範例示範如何使用<xref:System.Windows.Rect>結構，以指定的維度和使用 XAML 之矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-211">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5977d-212">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-212">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-213">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-213">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5977d-214">
            <see cref="P:System.Windows.Rect.Height" /> 設為負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-214">
              <see cref="P:System.Windows.Rect.Height" /> is set to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-215">
            <see cref="P:System.Windows.Rect.Height" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-215">
              <see cref="P:System.Windows.Rect.Height" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Width" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Inflate">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-216">建立將矩形展開或壓縮所指定的數量而產生的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-216">Creates a rectangle that results from expanding or shrinking a rectangle by the specified amount.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(System::Windows::Size size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="size">
          <span data-ttu-id="5977d-217">指定展開矩形的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-217">Specifies the amount to expand the rectangle.</span>
          </span>
          <span data-ttu-id="5977d-218">
            <see cref="T:System.Windows.Size" /> 結構的 <see cref="P:System.Windows.Size.Width" /> 屬性會指定增加矩形 <see cref="P:System.Windows.Rect.Left" /> 和 <see cref="P:System.Windows.Rect.Right" /> 屬性的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-218">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          </span>
          <span data-ttu-id="5977d-219">
            <see cref="T:System.Windows.Size" /> 結構的 <see cref="P:System.Windows.Size.Height" /> 屬性會指定增加矩形 <see cref="P:System.Windows.Rect.Top" /> 和 <see cref="P:System.Windows.Rect.Bottom" /> 屬性的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-219">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-220">使用指定的 <see cref="T:System.Windows.Size" /> 往所有方向展開矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-220">Expands the rectangle by using the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-221"><xref:System.Windows.Rect.Width%2A>產生的矩形的增加了兩次<xref:System.Windows.Size.Width%2A>指定<xref:System.Windows.Size>結構，因為左邊和右邊的矩形會膨脹。</span><span class="sxs-lookup"><span data-stu-id="5977d-221">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="5977d-222">同樣地，<xref:System.Windows.Rect.Height%2A>產生的矩形的增加了兩次<xref:System.Windows.Size.Height%2A>指定<xref:System.Windows.Size>結構。</span><span class="sxs-lookup"><span data-stu-id="5977d-222">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-223">下列範例示範如何使用<xref:System.Windows.Rect.Inflate%28System.Windows.Size%29>方法，以增加之矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="5977d-223">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Size%29> method to increase the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-224">這個方法是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-224">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public void Inflate (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Inflate(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inflate (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inflate(double width, double height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="5977d-225">用來展開或壓縮矩形左右兩邊的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-225">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="5977d-226">用來展開或壓縮矩形上下兩邊的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-226">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-227">使用所指定寬度和高度數量，往所有方向展開或壓縮矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-227">Expands or shrinks the rectangle by using the specified width and height amounts, in all directions.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-228"><xref:System.Windows.Rect.Width%2A>的產生的矩形會增加或減少指定的寬度位移的兩倍，因為它會套用至左邊和右邊的矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-228">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="5977d-229">同樣地，<xref:System.Windows.Rect.Height%2A>的產生的矩形會增加或減少兩次指定的高度。</span><span class="sxs-lookup"><span data-stu-id="5977d-229">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="5977d-230">如果指定的寬度或高度壓縮矩形大於其目前<xref:System.Windows.Rect.Width%2A>或<xref:System.Windows.Rect.Height%2A>— 負的區域中，提供矩形，矩形會變成<xref:System.Windows.Rect.Empty%2A>矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-230">If the specified width or height shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—the rectangle becomes the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-231">下列範例示範如何使用<xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29>方法，以變更矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="5977d-231">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-232">這個方法是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-232">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, System.Windows.Size size);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, valuetype System.Windows.Size size) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Windows.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, System::Windows::Size size);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="size" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5977d-233">要修改的 <see cref="T:System.Windows.Rect" /> 結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-233">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          </span>
        </param>
        <param name="size">
          <span data-ttu-id="5977d-234">指定展開矩形的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-234">Specifies the amount to expand the rectangle.</span>
          </span>
          <span data-ttu-id="5977d-235">
            <see cref="T:System.Windows.Size" /> 結構的 <see cref="P:System.Windows.Size.Width" /> 屬性會指定增加矩形 <see cref="P:System.Windows.Rect.Left" /> 和 <see cref="P:System.Windows.Rect.Right" /> 屬性的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-235">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Width" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Left" /> and <see cref="P:System.Windows.Rect.Right" /> properties.</span>
          </span>
          <span data-ttu-id="5977d-236">
            <see cref="T:System.Windows.Size" /> 結構的 <see cref="P:System.Windows.Size.Height" /> 屬性會指定增加矩形 <see cref="P:System.Windows.Rect.Top" /> 和 <see cref="P:System.Windows.Rect.Bottom" /> 屬性的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-236">The <see cref="T:System.Windows.Size" /> structure's <see cref="P:System.Windows.Size.Height" /> property specifies the amount to increase the rectangle's <see cref="P:System.Windows.Rect.Top" /> and <see cref="P:System.Windows.Rect.Bottom" /> properties.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-237">傳回矩形，這個矩形是以指定的 <see cref="T:System.Windows.Size" /> 往所有方向展開所指定矩形而產生的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-237">Returns the rectangle that results from expanding the specified rectangle by the specified <see cref="T:System.Windows.Size" />, in all directions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-238">產生的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-238">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-239"><xref:System.Windows.Rect.Width%2A>產生的矩形的增加了兩次<xref:System.Windows.Size.Width%2A>指定<xref:System.Windows.Size>結構，因為左邊和右邊的矩形會膨脹。</span><span class="sxs-lookup"><span data-stu-id="5977d-239">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Width%2A> of the specified <xref:System.Windows.Size> structure, because both the left and right sides of the rectangle are inflated.</span></span> <span data-ttu-id="5977d-240">同樣地，<xref:System.Windows.Rect.Height%2A>產生的矩形的增加了兩次<xref:System.Windows.Size.Height%2A>指定<xref:System.Windows.Size>結構。</span><span class="sxs-lookup"><span data-stu-id="5977d-240">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased by twice the <xref:System.Windows.Size.Height%2A> of the specified <xref:System.Windows.Size> structure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-241">下列範例示範如何使用<xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29>方法，以變更矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="5977d-241">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Windows.Size%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-242">
            <paramref name="rect" /> 是一種 <see cref="P:System.Windows.Rect.Empty" /> 矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-242">
              <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Inflate">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Inflate (System.Windows.Rect rect, double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Inflate(valuetype System.Windows.Rect rect, float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Inflate(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Inflate(System::Windows::Rect rect, double width, double height);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5977d-243">要修改的 <see cref="T:System.Windows.Rect" /> 結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-243">The <see cref="T:System.Windows.Rect" /> structure to modify.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="5977d-244">用來展開或壓縮矩形左右兩邊的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-244">The amount by which to expand or shrink the left and right sides of the rectangle.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="5977d-245">用來展開或壓縮矩形上下兩邊的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-245">The amount by which to expand or shrink the top and bottom sides of the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-246">建立矩形，這個矩形是以指定的寬度和高度數量往所有方向展開或壓縮指定的矩形而產生的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-246">Creates a rectangle that results from expanding or shrinking the specified rectangle by the specified width and height amounts, in all directions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-247">產生的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-247">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-248"><xref:System.Windows.Rect.Width%2A>的產生的矩形會增加或減少指定的寬度位移的兩倍，因為它會套用至左邊和右邊的矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-248">The <xref:System.Windows.Rect.Width%2A> of the resulting rectangle is increased or decreased by twice the specified width offset, because it is applied to both the left and right sides of the rectangle.</span></span> <span data-ttu-id="5977d-249">同樣地，<xref:System.Windows.Rect.Height%2A>的產生的矩形會增加或減少兩次指定的高度。</span><span class="sxs-lookup"><span data-stu-id="5977d-249">Likewise, the <xref:System.Windows.Rect.Height%2A> of the resulting rectangle is increased or decreased by twice the specified height.</span></span>  
  
 <span data-ttu-id="5977d-250">如果指定的寬度或高度修飾詞壓縮矩形大於其目前<xref:System.Windows.Rect.Width%2A>或<xref:System.Windows.Rect.Height%2A>— 提供負區域的矩形，這個方法會傳回<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5977d-250">If the specified width or height modifiers shrink the rectangle by more than its current <xref:System.Windows.Rect.Width%2A> or <xref:System.Windows.Rect.Height%2A>—giving the rectangle a negative area—this method returns <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-251">下列範例示範如何使用<xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29>方法，以變更矩形的大小。</span><span class="sxs-lookup"><span data-stu-id="5977d-251">The following example shows how to use the <xref:System.Windows.Rect.Inflate%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the size of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#InflateExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#inflateexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-252">
            <paramref name="rect" /> 是一種 <see cref="P:System.Windows.Rect.Empty" /> 矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-252">
              <paramref name="rect" /> is an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-253">尋找兩個矩形的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-253">Finds the intersection of two rectangles.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Windows::Rect rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5977d-254">與目前矩形交集的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-254">The rectangle to intersect with the current rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-255">尋找目前矩形與所指定矩形的交集，並將結果儲存為目前的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-255">Finds the intersection of the current rectangle and the specified rectangle, and stores the result as the current rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-256">如果沒有交集存在，就會變成目前的矩形<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="5977d-256">If no intersection exists, the current rectangle becomes <xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-257">下列範例示範如何使用<xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29>方法來尋找兩個矩形的交集，並將結果儲存為矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-257">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%29> method to find the intersection of two rectangles and store the result as a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Intersect (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Intersect(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Intersect(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intersect (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Intersect(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="5977d-258">要比較的第一個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-258">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="5977d-259">要比較的第二個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-259">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-260">傳回兩個指定之矩形的交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-260">Returns the intersection of the specified rectangles.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-261">兩個矩形的交集，如果沒有交集則為 <see cref="P:System.Windows.Rect.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-261">The intersection of the two rectangles, or <see cref="P:System.Windows.Rect.Empty" /> if no intersection exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-262">下列範例示範如何使用<xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29>方法來尋找兩個矩形的交集。</span><span class="sxs-lookup"><span data-stu-id="5977d-262">The following example shows how to use the <xref:System.Windows.Rect.Intersect%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to find the intersection of two rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="IntersectsWith">
      <MemberSignature Language="C#" Value="public bool IntersectsWith (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IntersectsWith(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.IntersectsWith(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IntersectsWith(System::Windows::Rect rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5977d-263">要檢查的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-263">The rectangle to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-264">表示指定的矩形是否與目前矩形交集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-264">Indicates whether the specified rectangle intersects with the current rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-265">如果指定的矩形與目前矩形交集則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-265">
              <see langword="true" /> if the specified rectangle intersects with the current rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-266">下列範例示範如何使用<xref:System.Windows.Rect.IntersectsWith%2A>方法，以判斷兩個矩形是否相交。</span><span class="sxs-lookup"><span data-stu-id="5977d-266">The following example shows how to use the <xref:System.Windows.Rect.IntersectsWith%2A> method to determine if two rectangles intersect.</span></span>  
  
 [!code-csharp[RectExamples_snip#IntersectsWithExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#intersectswithexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-267">取得值，這個值表示矩形是否為 <see cref="P:System.Windows.Rect.Empty" /> 矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-267">Gets a value that indicates whether the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-268">如果矩形是 <see cref="P:System.Windows.Rect.Empty" /> 矩形則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-268">
              <see langword="true" /> if the rectangle is the <see cref="P:System.Windows.Rect.Empty" /> rectangle; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-269">請勿使用這個屬性來測試為零的區域。具有零個區域的矩形不一定是<xref:System.Windows.Rect.Empty%2A>矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-269">Do not use this property to test for zero area; a rectangle with zero area is not necessarily the <xref:System.Windows.Rect.Empty%2A> rectangle.</span></span> <span data-ttu-id="5977d-270">如需詳細資訊，請參閱 <xref:System.Windows.Rect.Empty%2A> 屬性 (Property)。</span><span class="sxs-lookup"><span data-stu-id="5977d-270">For more information, see the <xref:System.Windows.Rect.Empty%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Empty" />
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-271">取得矩形左側的 X 軸值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-271">Gets the x-axis value of the left side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-272">矩形左側的 X 軸值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-272">The x-axis value of the left side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-273">取得這個屬性相當於取得<xref:System.Windows.Rect.X%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="5977d-273">Getting this property is equivalent to getting the <xref:System.Windows.Rect.X%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-274">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-274">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-275">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-275">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public System.Windows.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Location { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-276">取得或設定矩形左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-276">Gets or sets the position of the top-left corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-277">矩形左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-277">The position of the top-left corner of the rectangle.</span>
          </span>
          <span data-ttu-id="5977d-278">預設為 (0,0)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-278">The default is (0, 0).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-279">矩形左上角的位置會等於 (<xref:System.Windows.Rect.X%2A>， <xref:System.Windows.Rect.Y%2A>)。</span><span class="sxs-lookup"><span data-stu-id="5977d-279">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-280">下列範例示範如何使用<xref:System.Windows.Rect>結構，以指定的維度和使用 XAML 之矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-280">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5977d-281">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-281">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-282">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-282">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-283">
            <see cref="P:System.Windows.Rect.Location" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-283">
              <see cref="P:System.Windows.Rect.Location" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Offset">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-284">以指定的數量移動矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-284">Moves a rectangle by the specified amount.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Vector)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetVector As Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(System::Windows::Vector offsetVector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="offsetVector">
          <span data-ttu-id="5977d-285">向量，指定用來移動矩形的水平和垂直數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-285">A vector that specifies the horizontal and vertical amounts to move the rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-286">以指定的向量移動矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-286">Moves the rectangle by the specified vector.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-287">為空的矩形上呼叫這個方法 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 不允許。</span><span class="sxs-lookup"><span data-stu-id="5977d-287">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="5977d-288">請注意，呼叫<xref:System.Windows.Rect.Offset%2A>方法才會有作用，如果您可以變更<xref:System.Windows.Rect.X%2A>和<xref:System.Windows.Rect.Y%2A>直接內容。</span><span class="sxs-lookup"><span data-stu-id="5977d-288">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="5977d-289">因為<xref:System.Windows.Rect>是實值類型，如果您參考<xref:System.Windows.Rect>物件使用屬性或索引子，您會取得一份物件，而不是物件的參考。</span><span class="sxs-lookup"><span data-stu-id="5977d-289">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="5977d-290">如果您嘗試變更<xref:System.Windows.Rect.X%2A>或<xref:System.Windows.Rect.Y%2A>對屬性或索引子參考，則編譯器會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="5977d-290">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="5977d-291">同樣地，呼叫<xref:System.Windows.Rect.Offset%2A>屬性或索引子上不會變更基礎物件。</span><span class="sxs-lookup"><span data-stu-id="5977d-291">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="5977d-292">如果您想要變更的值<xref:System.Windows.Rect>參照為屬性或索引子，會建立新<xref:System.Windows.Rect>修改它的欄位，然後指派<xref:System.Windows.Rect>回屬性或索引子。</span><span class="sxs-lookup"><span data-stu-id="5977d-292">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-293">下列範例示範如何使用<xref:System.Windows.Rect.Offset%28System.Windows.Vector%29>方法，以變更矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-293">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-294">這個方法是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-294">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public void Offset (double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Offset(float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Offset (offsetX As Double, offsetY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Offset(double offsetX, double offsetY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offsetX">
          <span data-ttu-id="5977d-295">要水平移動矩形的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-295">The amount to move the rectangle horizontally.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="5977d-296">要垂直移動矩形的數量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-296">The amount to move the rectangle vertically.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-297">以指定的水平和垂直數量移動矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-297">Moves the rectangle by the specified horizontal and vertical amounts.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-298">為空的矩形上呼叫這個方法 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 不允許。</span><span class="sxs-lookup"><span data-stu-id="5977d-298">Calling this method on an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
 <span data-ttu-id="5977d-299">請注意，呼叫<xref:System.Windows.Rect.Offset%2A>方法才會有作用，如果您可以變更<xref:System.Windows.Rect.X%2A>和<xref:System.Windows.Rect.Y%2A>直接內容。</span><span class="sxs-lookup"><span data-stu-id="5977d-299">Note that calling the <xref:System.Windows.Rect.Offset%2A> method will only have an effect if you can change the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Y%2A> properties directly.</span></span> <span data-ttu-id="5977d-300">因為<xref:System.Windows.Rect>是實值類型，如果您參考<xref:System.Windows.Rect>物件使用屬性或索引子，您會取得一份物件，而不是物件的參考。</span><span class="sxs-lookup"><span data-stu-id="5977d-300">Because <xref:System.Windows.Rect> is a value type, if you reference a <xref:System.Windows.Rect> object by using a property or indexer, you get a copy of the object, not a reference to the object.</span></span> <span data-ttu-id="5977d-301">如果您嘗試變更<xref:System.Windows.Rect.X%2A>或<xref:System.Windows.Rect.Y%2A>對屬性或索引子參考，則編譯器會發生錯誤。</span><span class="sxs-lookup"><span data-stu-id="5977d-301">If you attempt to change <xref:System.Windows.Rect.X%2A> or <xref:System.Windows.Rect.Y%2A> on a property or indexer reference, a compiler error occurs.</span></span> <span data-ttu-id="5977d-302">同樣地，呼叫<xref:System.Windows.Rect.Offset%2A>屬性或索引子上不會變更基礎物件。</span><span class="sxs-lookup"><span data-stu-id="5977d-302">Similarly, calling <xref:System.Windows.Rect.Offset%2A> on the property or indexer will not change the underlying object.</span></span>  <span data-ttu-id="5977d-303">如果您想要變更的值<xref:System.Windows.Rect>參照為屬性或索引子，會建立新<xref:System.Windows.Rect>修改它的欄位，然後指派<xref:System.Windows.Rect>回屬性或索引子。</span><span class="sxs-lookup"><span data-stu-id="5977d-303">If you want to change the value of a <xref:System.Windows.Rect> that is referenced as a property or indexer, create a new <xref:System.Windows.Rect>, modify its fields, and then assign the <xref:System.Windows.Rect> back to the property or indexer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-304">下列範例示範如何使用<xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29>方法，以變更矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-304">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-305">這個方法是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-305">This method is called on the <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, System.Windows.Vector offsetVector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, valuetype System.Windows.Vector offsetVector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Windows.Vector)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, System::Windows::Vector offsetVector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetVector" Type="System.Windows.Vector" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5977d-306">原始矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-306">The original rectangle.</span>
          </span>
        </param>
        <param name="offsetVector">
          <span data-ttu-id="5977d-307">指定新矩形的水平和垂直位移的向量。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-307">A vector that specifies the horizontal and vertical offsets for the new rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-308">傳回矩形，這個矩形是使用所指定向量從指定之矩形位移的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-308">Returns a rectangle that is offset from the specified rectangle by using the specified vector.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-309">產生的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-309">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-310">呼叫此方法時為空的矩形 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 不允許。</span><span class="sxs-lookup"><span data-stu-id="5977d-310">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-311">下列範例示範如何使用<xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29>方法，以變更矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-311">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Windows.Vector%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-312">
            <paramref name="rect" /> 為 <see cref="P:System.Windows.Rect.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-312">
              <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Offset">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Offset (System.Windows.Rect rect, double offsetX, double offsetY);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Offset(valuetype System.Windows.Rect rect, float64 offsetX, float64 offsetY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Offset(System.Windows.Rect,System.Double,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Offset(System::Windows::Rect rect, double offsetX, double offsetY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="offsetX" Type="System.Double" />
        <Parameter Name="offsetY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5977d-313">要移動的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-313">The rectangle to move.</span>
          </span>
        </param>
        <param name="offsetX">
          <span data-ttu-id="5977d-314">新矩形的水平位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-314">The horizontal offset for the new rectangle.</span>
          </span>
        </param>
        <param name="offsetY">
          <span data-ttu-id="5977d-315">新矩形的垂直位移。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-315">The vertical offset for the new rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-316">傳回矩形，這個矩形是使用所指定水平和垂直數量從指定之矩形位移的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-316">Returns a rectangle that is offset from the specified rectangle by using the specified horizontal and vertical amounts.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-317">產生的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-317">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-318">呼叫此方法時為空的矩形 (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) 不允許。</span><span class="sxs-lookup"><span data-stu-id="5977d-318">Calling this method with an empty rectangle (<xref:System.Windows.Rect.Empty%2A?displayProperty=nameWithType>) is not allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-319">下列範例示範如何使用<xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29>方法，以變更矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-319">The following example shows how to use the <xref:System.Windows.Rect.Offset%28System.Windows.Rect%2CSystem.Double%2CSystem.Double%29> method to change the position of a rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#OffsetExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#offsetexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-320">
            <paramref name="rect" /> 為 <see cref="P:System.Windows.Rect.Empty" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-320">
              <paramref name="rect" /> is <see cref="P:System.Windows.Rect.Empty" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Equality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="5977d-321">要比較的第一個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-321">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="5977d-322">要比較的第二個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-322">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-323">比較兩個矩形是否完全相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-323">Compares two rectangles for exact equality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-324">如果矩形具有相同的 <see cref="P:System.Windows.Rect.Location" /> 和 <see cref="P:System.Windows.Rect.Size" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-324">
              <see langword="true" /> if the rectangles have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-325">這項作業會測試物件相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-325">This operation tests for object equality.</span></span>  
  
 <span data-ttu-id="5977d-326">這項比較，兩個執行個體<xref:System.Double.NaN?displayProperty=nameWithType>會被視為相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-326">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5977d-327">會描述矩形的位置和維度<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="5977d-327">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="5977d-328">因為<xref:System.Double>值可能會遺失有效位數時操作時，邏輯上相等的兩個值之間的比較可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="5977d-328">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="5977d-329">這個運算子的對等方法是 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="5977d-329">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="5977d-330">下列範例示範如何使用<xref:System.Windows.Rect.op_Equality%2A>運算子來判斷兩個矩形是否完全相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-330">The following example shows how to use the <xref:System.Windows.Rect.op_Equality%2A> operator to determine if two rectangles are exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedEqualityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.op_Inequality(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (rect1 As Rect, rect2 As Rect) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="5977d-331">要比較的第一個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-331">The first rectangle to compare.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="5977d-332">要比較的第二個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-332">The second rectangle to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-333">比較兩個矩形是否不相等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-333">Compares two rectangles for inequality.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-334">如果矩形沒有相同的 <see cref="P:System.Windows.Rect.Location" /> 和 <see cref="P:System.Windows.Rect.Size" /> 值則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-334">
              <see langword="true" /> if the rectangles do not have the same <see cref="P:System.Windows.Rect.Location" /> and <see cref="P:System.Windows.Rect.Size" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-335">這項作業會測試物件不相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-335">This operation tests for object inequality.</span></span>  
  
 <span data-ttu-id="5977d-336">這項比較，兩個執行個體<xref:System.Double.NaN?displayProperty=nameWithType>會被視為相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-336">In this comparison, two instances of <xref:System.Double.NaN?displayProperty=nameWithType> are considered equal.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5977d-337">會描述矩形的位置和維度<xref:System.Double>值。</span><span class="sxs-lookup"><span data-stu-id="5977d-337">A rectangle's position and dimensions are described by <xref:System.Double> values.</span></span> <span data-ttu-id="5977d-338">因為<xref:System.Double>值可能會遺失有效位數時操作時，邏輯上相等的兩個值之間的比較可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="5977d-338">Because <xref:System.Double> values can lose precision when operated upon, a comparison between two values that are logically equal might fail.</span></span>  
  
 <span data-ttu-id="5977d-339">這個運算子的對等方法是 <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="5977d-339">The equivalent method for this operator is <xref:System.Windows.Rect.Equals%28System.Windows.Rect%2CSystem.Windows.Rect%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="5977d-340">下列範例示範如何使用<xref:System.Windows.Rect.op_Inequality%2A>運算子來判斷兩個矩形是否不完全相等。</span><span class="sxs-lookup"><span data-stu-id="5977d-340">The following example shows how to use the <xref:System.Windows.Rect.op_Inequality%2A> operator to determine if two rectangles are not exactly equal.</span></span>  
  
 [!code-csharp[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#overloadedinequalityoperatorexample)]
 [!code-vb[RectExamples_snip#OverloadedInequalityOperatorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#overloadedinequalityoperatorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (source As String) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Parse(System::String ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="5977d-341">矩形的字串表示，格式為 "x, y, width, height"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-341">The string representation of the rectangle, in the form "x, y, width, height".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-342">從指定的字串表示建立新矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-342">Creates a new rectangle from the specified string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-343">產生的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-343">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-344">下列範例示範如何使用<xref:System.Windows.Rect.Parse%2A>方法，將轉換成的矩形的字串表示法<xref:System.Windows.Rect>結構。</span><span class="sxs-lookup"><span data-stu-id="5977d-344">The following example shows how to use the <xref:System.Windows.Rect.Parse%2A> method to convert a string representation of a rectangle into a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ParseExample](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#parseexample)]
 [!code-vb[RectExamples_snip#ParseExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RectExamples_snip/visualbasic/rectexample.vb#parseexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Right">
      <MemberSignature Language="C#" Value="public double Right { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Right" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Right" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Right As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Right { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-345">取得矩形右側的 X 軸值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-345">Gets the x-axis value of the right side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-346">矩形右側的 X 軸值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-346">The x-axis value of the right side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-347">矩形右邊的 x 軸值的總和等於<xref:System.Windows.Rect.X%2A>和<xref:System.Windows.Rect.Width%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="5977d-347">The x-axis value of the right side of the rectangle is equal to the sum of the <xref:System.Windows.Rect.X%2A> and <xref:System.Windows.Rect.Width%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-348">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-348">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-349">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-349">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scale">
      <MemberSignature Language="C#" Value="public void Scale (double scaleX, double scaleY);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Scale(float64 scaleX, float64 scaleY) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Scale(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Scale (scaleX As Double, scaleY As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Scale(double scaleX, double scaleY);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scaleX" Type="System.Double" />
        <Parameter Name="scaleY" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="scaleX">
          <span data-ttu-id="5977d-350">X 方向的縮放因數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-350">The scale factor in the x-direction.</span>
          </span>
        </param>
        <param name="scaleY">
          <span data-ttu-id="5977d-351">Y 方向的縮放因數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-351">The scale factor in the y-direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-352">將目前矩形大小乘上指定的 X 和 Y 值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-352">Multiplies the size of the current rectangle by the specified x and y values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-353">下列範例示範如何使用<xref:System.Windows.Rect.Scale%2A>方法来相乘之矩形的高度與寬度，以指定的數量。</span><span class="sxs-lookup"><span data-stu-id="5977d-353">The following example shows how to use the <xref:System.Windows.Rect.Scale%2A> method to multiply the width and height of a rectangle by the specified amount.</span></span>  
  
 [!code-csharp[RectExamples_snip#ScaleExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#scaleexample_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Inflate(System.Double,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-354">取得或設定矩形的寬度和高度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-354">Gets or sets the width and height of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-355">
            <see cref="T:System.Windows.Size" /> 結構，指定矩形的高度和寬度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-355">A <see cref="T:System.Windows.Size" /> structure that specifies the width and height of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-356">下列範例示範如何使用<xref:System.Windows.Rect>結構，以指定的維度和使用 XAML 之矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-356">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5977d-357">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-357">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-358">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-358">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-359">
            <see cref="P:System.Windows.Rect.Size" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-359">
              <see cref="P:System.Windows.Rect.Size" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="5977d-360">要使用的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-360">The format to use.</span>
          </span>
          <span data-ttu-id="5977d-361">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-361">-or-</span>
          </span>
          <span data-ttu-id="5977d-362">Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，用於使用針對 <see cref="T:System.IFormattable" /> 實作而定義的預設格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-362">A null reference (<see langword="Nothing" /> in Visual Basic) to use the default format defined for the type of the <see cref="T:System.IFormattable" /> implementation.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="5977d-363">要用來格式化值的提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-363">The provider to use to format the value.</span>
          </span>
          <span data-ttu-id="5977d-364">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-364">-or-</span>
          </span>
          <span data-ttu-id="5977d-365">Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，用於取得作業系統目前地區設定中的數值格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-365">A null reference (<see langword="Nothing" /> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-366">使用指定的格式，格式化目前執行個體的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-366">Formats the value of the current instance using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-367">矩形的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-367">A string representation of the rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-368">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="5977d-368">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="5977d-369">只有在 <xref:System.Windows.Rect> 執行個體轉換成 <xref:System.IFormattable> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="5977d-369">It can be used only when the <xref:System.Windows.Rect> instance is cast to an <xref:System.IFormattable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IFormattable" />
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-370">取得矩形頂端的 Y 軸位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-370">Gets the y-axis position of the top of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-371">矩形頂端的 Y 軸位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-371">The y-axis position of the top of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-372">取得這個屬性相當於取得<xref:System.Windows.Rect.Y%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="5977d-372">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Y%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-373">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-373">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-374">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-374">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="TopLeft">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopLeft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopLeft As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopLeft { System::Windows::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-375">取得矩形左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-375">Gets the position of the top-left corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-376">矩形左上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-376">The position of the top-left corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-377">矩形左上角的位置會等於 (<xref:System.Windows.Rect.X%2A>， <xref:System.Windows.Rect.Y%2A>)。</span><span class="sxs-lookup"><span data-stu-id="5977d-377">The position of the top-left corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-378">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-378">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-379">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-379">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopRight">
      <MemberSignature Language="C#" Value="public System.Windows.Point TopRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point TopRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.TopRight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TopRight As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point TopRight { System::Windows::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-380">取得矩形右上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-380">Gets the position of the top-right corner of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-381">矩形右上角的位置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-381">The position of the top-right corner of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-382">矩形右上角的位置會等於 (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>， <xref:System.Windows.Rect.Y%2A>)。</span><span class="sxs-lookup"><span data-stu-id="5977d-382">The position of the top-right corner of the rectangle is equal to (<xref:System.Windows.Rect.X%2A> + <xref:System.Windows.Rect.Width%2A>, <xref:System.Windows.Rect.Y%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-383">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-383">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-384">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-384">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-385">傳回矩形的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-385">Returns a string representation of the rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5977d-386">傳回矩形的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-386">Returns a string representation of the rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-387">目前矩形的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-387">A string representation of the current rectangle.</span>
          </span>
          <span data-ttu-id="5977d-388">字串的格式如下："<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-388">The string has the following form: "<see cref="P:System.Windows.Rect.X" />,<see cref="P:System.Windows.Rect.Y" />,<see cref="P:System.Windows.Rect.Width" />,<see cref="P:System.Windows.Rect.Height" />".</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-389">下列範例示範如何使用<xref:System.Windows.Rect.ToString>方法來取得的字串表示法<xref:System.Windows.Rect>結構。</span><span class="sxs-lookup"><span data-stu-id="5977d-389">The following example shows how to use the <xref:System.Windows.Rect.ToString> method to get a string representation of a <xref:System.Windows.Rect> structure.</span></span>  
  
 [!code-csharp[RectExamples_snip#ToStringExample_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#tostringexample_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="5977d-390">文化特性 (Culture) 特有的格式資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-390">Culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-391">使用指定的格式提供者，傳回矩形的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-391">Returns a string representation of the rectangle by using the specified format provider.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-392">目前矩形的字串表示，透過指定的格式提供者進行判斷。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-392">A string representation of the current rectangle that is determined by the specified format provider.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Transform">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-393">使用指定的矩陣轉換矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-393">Transforms a rectangle by using the specified matrix.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="5977d-394">指定要套用轉換的矩陣。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-394">A matrix that specifies the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-395">套用指定的矩陣轉換矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-395">Transforms the rectangle by applying the specified matrix.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-396">下列範例示範如何使用<xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29>方法轉換<xref:System.Windows.Rect>結構使用<xref:System.Windows.Media.Matrix>。</span><span class="sxs-lookup"><span data-stu-id="5977d-396">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Media.Matrix%29> method to transform a <xref:System.Windows.Rect> structure by using a <xref:System.Windows.Media.Matrix>.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample1_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Transform (System.Windows.Rect rect, System.Windows.Media.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Transform(valuetype System.Windows.Rect rect, valuetype System.Windows.Media.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Transform(System.Windows.Rect,System.Windows.Media.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Transform(System::Windows::Rect rect, System::Windows::Media::Matrix matrix);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="matrix" Type="System.Windows.Media.Matrix" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5977d-397">做為轉換基礎的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-397">A rectangle that is the basis for the transformation.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="5977d-398">指定要套用轉換的矩陣。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-398">A matrix that specifies the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-399">傳回矩形，這個矩形是將所指定矩陣套用至指定的矩形而產生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-399">Returns the rectangle that results from applying the specified matrix to the specified rectangle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-400">因這個作業而產生的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-400">The rectangle that results from the operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-401">下列範例示範如何使用<xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29>方法來建立新<xref:System.Windows.Rect>套用所產生的結構<xref:System.Windows.Media.Matrix>到現有的矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-401">The following example shows how to use the <xref:System.Windows.Rect.Transform%28System.Windows.Rect%2CSystem.Windows.Media.Matrix%29> method to create a new <xref:System.Windows.Rect> structure that results from applying a <xref:System.Windows.Media.Matrix> to an existing rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#TransformExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#transformexample2_csharp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-402">建立矩形，這個矩形剛好可以包含指定的矩形和指定的點或第二個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-402">Creates a rectangle that is exactly large enough to contain a given rectangle and a specified point or second rectangle.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="5977d-403">要包含的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-403">The point to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-404">將目前矩形展開為剛好可以包含指定的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-404">Expands the current rectangle exactly enough to contain the specified point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-405">下列範例示範如何使用<xref:System.Windows.Rect.Union%28System.Windows.Point%29>方法來展開目前的矩形剛好包含給定<xref:System.Windows.Point>。</span><span class="sxs-lookup"><span data-stu-id="5977d-405">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Point%29> method to expand the current rectangle exactly enough to contain a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Windows.Rect rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Windows.Rect rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Windows::Rect rect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5977d-406">要包含的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-406">The rectangle to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-407">將目前矩形展開為剛好可以包含指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-407">Expands the current rectangle exactly enough to contain the specified rectangle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-408">下列範例示範如何使用<xref:System.Windows.Rect.Union%28System.Windows.Rect%29>方法包含指定的矩形剛好展開目前的矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-408">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%29> method to expand the current rectangle exactly enough to contain the specified rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample2_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample2_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect, System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect, valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect, System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Windows.Rect" />
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="5977d-409">要包含的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-409">The rectangle to include.</span>
          </span>
        </param>
        <param name="point">
          <span data-ttu-id="5977d-410">要包含的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-410">The point to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-411">建立矩形，這個矩形剛好可以包含指定的矩形和指定的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-411">Creates a rectangle that is exactly large enough to include the specified rectangle and the specified point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-412">矩形，剛好可以包含指定的矩形和指定的點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-412">A rectangle that is exactly large enough to contain the specified rectangle and the specified point.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-413">下列範例示範如何使用<xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29>方法來建立剛好足夠包含給定的矩形的矩形和給定<xref:System.Windows.Point>。</span><span class="sxs-lookup"><span data-stu-id="5977d-413">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Point%29> method to create a rectangle that is exactly large enough to contain a given rectangle and a given <xref:System.Windows.Point>.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample3_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample3_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Point)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public static System.Windows.Rect Union (System.Windows.Rect rect1, System.Windows.Rect rect2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Rect Union(valuetype System.Windows.Rect rect1, valuetype System.Windows.Rect rect2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Rect.Union(System.Windows.Rect,System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Union (rect1 As Rect, rect2 As Rect) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Rect Union(System::Windows::Rect rect1, System::Windows::Rect rect2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect1" Type="System.Windows.Rect" />
        <Parameter Name="rect2" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="rect1">
          <span data-ttu-id="5977d-414">要包含的第一個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-414">The first rectangle to include.</span>
          </span>
        </param>
        <param name="rect2">
          <span data-ttu-id="5977d-415">要包含的第二個矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-415">The second rectangle to include.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5977d-416">建立矩形，這個矩形剛好可以包含兩個指定的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-416">Creates a rectangle that is exactly large enough to contain the two specified rectangles.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5977d-417">產生的矩形。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-417">The resulting rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="5977d-418">下列範例示範如何使用<xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29>方法來建立剛好包含兩個指定的矩形的矩形。</span><span class="sxs-lookup"><span data-stu-id="5977d-418">The following example shows how to use the <xref:System.Windows.Rect.Union%28System.Windows.Rect%2CSystem.Windows.Rect%29> method to create a rectangle that is exactly large enough to contain two given rectangles.</span></span>  
  
 [!code-csharp[RectExamples_snip#UnionExample4_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#unionexample4_csharp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Rect.Contains(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-419">取得或設定矩形的寬度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-419">Gets or sets the width of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-420">表示矩形寬度的正數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-420">A positive number that represents the width of the rectangle.</span>
          </span>
          <span data-ttu-id="5977d-421">預設值為 0。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-421">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-422"><xref:System.Windows.Rect.Empty%2A>矩形<xref:System.Windows.Rect.Width%2A>的<xref:System.Double.NegativeInfinity>。</span><span class="sxs-lookup"><span data-stu-id="5977d-422">The <xref:System.Windows.Rect.Empty%2A> rectangle has a <xref:System.Windows.Rect.Width%2A> of <xref:System.Double.NegativeInfinity>.</span></span> <span data-ttu-id="5977d-423"><xref:System.Windows.Rect.Empty%2A>矩形是唯讀，則其<xref:System.Windows.Rect.Width%2A>不變更。</span><span class="sxs-lookup"><span data-stu-id="5977d-423">The <xref:System.Windows.Rect.Empty%2A> rectangle is read-only; its <xref:System.Windows.Rect.Width%2A> cannot not be changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-424">下列範例示範如何使用<xref:System.Windows.Rect>結構，以指定的維度和使用 XAML 之矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-424">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5977d-425">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-425">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-426">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-426">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5977d-427">
            <see cref="P:System.Windows.Rect.Width" /> 設為負數值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-427">
              <see cref="P:System.Windows.Rect.Width" /> is set to a negative value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-428">
            <see cref="P:System.Windows.Rect.Width" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-428">
              <see cref="P:System.Windows.Rect.Width" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Height" />
      </Docs>
    </Member>
    <Member MemberName="X">
      <MemberSignature Language="C#" Value="public double X { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 X" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.X" />
      <MemberSignature Language="VB.NET" Value="Public Property X As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double X { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-429">取得或設定矩形左側的 X 軸值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-429">Gets or sets the x-axis value of the left side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-430">矩形左側的 X 軸值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-430">The x-axis value of the left side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-431">取得這個屬性相當於取得<xref:System.Windows.Rect.Left%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="5977d-431">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Left%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-432">下列範例示範如何使用<xref:System.Windows.Rect>結構，以指定的維度和使用 XAML 之矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-432">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5977d-433">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-433">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-434">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-434">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-435">
            <see cref="P:System.Windows.Rect.X" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-435">
              <see cref="P:System.Windows.Rect.X" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.Y" />
      </Docs>
    </Member>
    <Member MemberName="Y">
      <MemberSignature Language="C#" Value="public double Y { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Y" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Rect.Y" />
      <MemberSignature Language="VB.NET" Value="Public Property Y As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Y { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5977d-436">取得或設定矩形上方的 Y 軸值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-436">Gets or sets the y-axis value of the top side of the rectangle.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5977d-437">矩形上方的 Y 軸值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-437">The y-axis value of the top side of the rectangle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5977d-438">取得這個屬性相當於取得<xref:System.Windows.Rect.Top%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="5977d-438">Getting this property is equivalent to getting the <xref:System.Windows.Rect.Top%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5977d-439">下列範例示範如何使用<xref:System.Windows.Rect>結構，以指定的維度和使用 XAML 之矩形的位置。</span><span class="sxs-lookup"><span data-stu-id="5977d-439">The following example shows how to use a <xref:System.Windows.Rect> structure to specify the dimensions and location of a rectangle using XAML.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/CSharp/RectExample.cs#rectexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/visualbasic/rectexample.vb#rectexamplewholepage)]
 [!code-xaml[GeometriesMiscSnippets_snip#RectExampleWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/GeometriesMiscSnippets_snip/XAML/RectExample.xaml#rectexamplewholepage)]  
  
 <span data-ttu-id="5977d-440">下列範例會示範如何使用程式碼建立矩形，並將它加入至頁面。</span><span class="sxs-lookup"><span data-stu-id="5977d-440">The following example shows how to use code to create a rectangle and add it to the page.</span></span> <span data-ttu-id="5977d-441">此範例也說明如何尋找新的矩形的大小和座標資訊和轉譯中的資訊<xref:System.Windows.Controls.TextBox>矩形下方。</span><span class="sxs-lookup"><span data-stu-id="5977d-441">The example also illustrates how to find size and coordinate information about the new rectangle and render the information in a <xref:System.Windows.Controls.TextBox> below the rectangle.</span></span>  
  
 [!code-csharp[RectExamples_snip#CreateRectExample1_csharp](~/samples/snippets/csharp/VS_Snippets_Wpf/RectExamples_snip/CSharp/RectExample.cs#createrectexample1_csharp)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5977d-442">
            <see cref="P:System.Windows.Rect.Y" /> 是在 <see cref="P:System.Windows.Rect.Empty" /> 矩形上設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5977d-442">
              <see cref="P:System.Windows.Rect.Y" /> is set on an <see cref="P:System.Windows.Rect.Empty" /> rectangle.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Rect.X" />
      </Docs>
    </Member>
  </Members>
</Type>