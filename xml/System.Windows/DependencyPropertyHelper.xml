<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c73b6283444b4ebfb43805764cd805e9ed62516a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30675312" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供單一協助程式方法 (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />)，此方法會報告相依性屬性之有效值的屬性系統來源。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]屬性系統是相當複雜，並依賴 rationalizing 可能來自各種不同的輸入，根據已建立的值判斷優先順序的值。 因為這些來源可能來自於執行階段程式碼中，從已編譯標記，或甚至是從執行階段的使用者設定，可以是很有幫助完全相依性屬性的值，系統中的哪方參與者建立的值，您取得呼叫時<xref:System.Windows.DependencyObject.GetValue%2A>在該屬性的執行階段。 如果所要的值來自不同來源，您可能需要調整您的應用程式的某些層面。 值的來源可能是樣式、 佈景主題、 區域值、 動畫、 繫結或執行階段的的值，例如透過主題或系統資源的系統設定。 如需詳細資訊，請參閱[相依性屬性值優先順序](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。  
  
 一般情況下，而不是特定的執行個體上物件的屬性會報告在屬性的另一個機制，是屬性中繼資料。 屬性中繼資料會透過呼叫可尋找<xref:System.Windows.DependencyProperty.GetMetadata%2A>並檢查傳回<xref:System.Windows.PropertyMetadata>（或其中一個傳回的屬性中繼資料會轉型的數個可能在衍生類別）。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">項目，其中包含要報告其資訊的 <c>dependencyProperty</c>。</param>
        <param name="dependencyProperty">要報告其資訊的相依性屬性的識別項。</param>
        <summary>傳回結構，該結構報告在特定 <see cref="T:System.Windows.DependencyObject" /> 上指定相依性屬性的各種中繼資料和屬性系統特性。</summary>
        <returns>
          <see cref="T:System.Windows.ValueSource" /> 結構，這個結構會報告特定資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您應該在內容中呼叫這個方法，使得在屬性值決定的晚期參與者都能夠處理的屬性。 比方說，繫結可能不在屬性上作用除非項目樹狀結構中所有參與者的項目會載入和非同步繫結不會傳播，且繫結來源物件已連線。 同樣地，您應該要有資源，包括所有必要的佈景主題的字典。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">屬於範本執行個體的項目。</param>
        <param name="dependencyProperty">相依性屬性。 </param>
        <summary>指出指定的項目是否屬於定義指定屬性值的範本執行個體，而此屬性可能會根據其他位置的變更而在執行階段變更。</summary>
        <returns>
          如果 <paramref name="elementInTemplate" /> 屬於定義指定屬性值的範本執行個體，而此屬性可能會根據其他位置的變更而在執行階段變更，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
在執行階段根據其他位置的變更可能會變更的值範例是所設定的值<xref:System.Windows.Data.Binding>，<xref:System.Windows.TemplateBindingExtension>和<xref:System.Windows.DynamicResourceExtension>物件。

這個方法會提供詳細資訊，萬一其中的值<xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType>屬性是<xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>。
資訊主要是用來診斷工具。

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>