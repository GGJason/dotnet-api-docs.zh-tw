<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d30fe32209d2044c3b9499df30d0d7d5965d29a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36460897" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type DependencyPropertyHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3f357-101">提供單一協助程式方法 (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />)，此方法會報告相依性屬性之有效值的屬性系統來源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f357-101">Provides a single helper method (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) that reports the property system source for the effective value of a dependency property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f357-102">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]屬性系統是相當複雜，並依賴 rationalizing 可能來自各種不同的輸入，根據已建立的值判斷優先順序的值。</span><span class="sxs-lookup"><span data-stu-id="3f357-102">The[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system is fairly complex, and relies on rationalizing the values that potentially come from a variety of inputs, based on an established value determination precedence.</span></span> <span data-ttu-id="3f357-103">因為這些來源可能來自於執行階段程式碼中，從已編譯標記，或甚至是從執行階段的使用者設定，可以是很有幫助完全相依性屬性的值，系統中的哪方參與者建立的值，您取得呼叫時<xref:System.Windows.DependencyObject.GetValue%2A>在該屬性的執行階段。</span><span class="sxs-lookup"><span data-stu-id="3f357-103">Because these sources potentially come from run-time code, from compiled markup, or even from run-time user settings, it can be useful to know exactly which participant in the dependency property value system established the value you obtain when calling <xref:System.Windows.DependencyObject.GetValue%2A> at run-time on that property.</span></span> <span data-ttu-id="3f357-104">如果所要的值來自不同來源，您可能需要調整您的應用程式的某些層面。</span><span class="sxs-lookup"><span data-stu-id="3f357-104">If the value came from a different source than you had intended, you might need to adjust some aspect of your application.</span></span> <span data-ttu-id="3f357-105">值的來源可能是樣式、 佈景主題、 區域值、 動畫、 繫結或執行階段的的值，例如透過主題或系統資源的系統設定。</span><span class="sxs-lookup"><span data-stu-id="3f357-105">The value source might be a style, a theme, a local value, an animation, a binding, or a run-time based value such as system settings through themes or system resources.</span></span> <span data-ttu-id="3f357-106">如需詳細資訊，請參閱[相依性屬性值優先順序](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</span><span class="sxs-lookup"><span data-stu-id="3f357-106">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 <span data-ttu-id="3f357-107">一般情況下，而不是特定的執行個體上物件的屬性會報告在屬性的另一個機制，是屬性中繼資料。</span><span class="sxs-lookup"><span data-stu-id="3f357-107">Another mechanism that reports on the property in general, rather than a specific instance of the property on an object, is the property metadata.</span></span> <span data-ttu-id="3f357-108">屬性中繼資料會透過呼叫可尋找<xref:System.Windows.DependencyProperty.GetMetadata%2A>並檢查傳回<xref:System.Windows.PropertyMetadata>（或其中一個傳回的屬性中繼資料會轉型的數個可能在衍生類別）。</span><span class="sxs-lookup"><span data-stu-id="3f357-108">The property metadata is findable by calling <xref:System.Windows.DependencyProperty.GetMetadata%2A> and examining the returned <xref:System.Windows.PropertyMetadata> (or one of several possible derived classes that the returned property metadata is castable to).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member GetValueSource : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.ValueSource" Usage="System.Windows.DependencyPropertyHelper.GetValueSource (dependencyObject, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <span data-ttu-id="3f357-109">項目，其中包含要報告其資訊的 <c>dependencyProperty</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f357-109">The element that contains the <c>dependencyProperty</c> to report information for.</span>
          </span>
        </param>
        <param name="dependencyProperty">
          <span data-ttu-id="3f357-110">要報告其資訊的相依性屬性的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f357-110">The identifier for the dependency property to report information for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f357-111">傳回結構，該結構報告在特定 <see cref="T:System.Windows.DependencyObject" /> 上指定相依性屬性的各種中繼資料和屬性系統特性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f357-111">Returns a structure that reports various metadata and property system characteristics of a specified dependency property on a particular <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f357-112">
            <see cref="T:System.Windows.ValueSource" /> 結構，這個結構會報告特定資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f357-112">A <see cref="T:System.Windows.ValueSource" /> structure that reports the specific information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f357-113">您應該在內容中呼叫這個方法，使得在屬性值決定的晚期參與者都能夠處理的屬性。</span><span class="sxs-lookup"><span data-stu-id="3f357-113">You should call this method in a context such that late participants in property value determination are able to act on a property.</span></span> <span data-ttu-id="3f357-114">比方說，繫結可能不在屬性上作用除非項目樹狀結構中所有參與者的項目會載入和非同步繫結不會傳播，且繫結來源物件已連線。</span><span class="sxs-lookup"><span data-stu-id="3f357-114">For instance, bindings may not be active on a property unless all participant elements in the element tree are loaded and the asynchronous binding is propagated, and the binding source object is connected.</span></span> <span data-ttu-id="3f357-115">同樣地，您應該要有資源，包括所有必要的佈景主題的字典。</span><span class="sxs-lookup"><span data-stu-id="3f357-115">Similarly, resources including all necessary theme dictionaries should be available.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member IsTemplatedValueDynamic : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic (elementInTemplate, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">
          <span data-ttu-id="3f357-116">屬於範本執行個體的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f357-116">An element that belongs to a template instance.</span>
          </span>
        </param>
        <param name="dependencyProperty">
          <span data-ttu-id="3f357-117">相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f357-117">A dependency property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3f357-118">指出指定的項目是否屬於定義指定屬性值的範本執行個體，而此屬性可能會根據其他位置的變更而在執行階段變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f357-118">Indicates whether a specified element belongs to an instance of a template that defines a value for the specified property that may change at runtime based on changes elsewhere.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3f357-119">如果 <paramref name="elementInTemplate" /> 屬於定義指定屬性值的範本執行個體，而此屬性可能會根據其他位置的變更而在執行階段變更，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="3f357-119">
              <see langword="true" /> if <paramref name="elementInTemplate" /> belongs to an instance of a template that defines a value for the specified property that may change at runtime based on changes elsewhere; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="3f357-120">在執行階段根據其他位置的變更可能會變更的值範例是所設定的值<xref:System.Windows.Data.Binding>，<xref:System.Windows.TemplateBindingExtension>和<xref:System.Windows.DynamicResourceExtension>物件。</span><span class="sxs-lookup"><span data-stu-id="3f357-120">Examples of values that may change at runtime based on changes elsewhere are values set by <xref:System.Windows.Data.Binding>, <xref:System.Windows.TemplateBindingExtension> and <xref:System.Windows.DynamicResourceExtension> objects.</span></span>

<span data-ttu-id="3f357-121">這個方法會提供詳細資訊，萬一其中的值<xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType>屬性是<xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="3f357-121">This method provides more detailed information in cases where the value of the <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> property is <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>.</span></span>
<span data-ttu-id="3f357-122">資訊主要是用來診斷工具。</span><span class="sxs-lookup"><span data-stu-id="3f357-122">The information is primarily of use to diagnostic tools.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>