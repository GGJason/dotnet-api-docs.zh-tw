<Type Name="ValidateValueCallback" FullName="System.Windows.ValidateValueCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d2f4310a663270cfb2e09d6f1c59db5ed29cd122" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36456080" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate bool ValidateValueCallback(object value);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ValidateValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ValidateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ValidateValueCallback(value As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool ValidateValueCallback(System::Object ^ value);" />
  <TypeSignature Language="F#" Value="type ValidateValueCallback = delegate of obj -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="value" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="value">要驗證的值。</param>
    <summary>表示作為回呼的方法，該方法可驗證相依性屬性的有效值。</summary>
    <returns>如果值已驗證則為 <see langword="true" />，如果提交的值無效則為 <see langword="false" />。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 特定的簽章使用根據此委派回呼<xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType>和相關方法，例如<xref:System.Windows.DependencyProperty.RegisterAttached%2A>唯讀對等項目。 您應該使用需要的簽章`validateValueCallback`參數，如果您想要特定的驗證屬性值的每個時間，以設定其生效。 然後，它會執行實際的驗證的建議值，您應該實作這個回呼。 應該會傳回回呼`true`提交給回呼的值是否有效，以及`false`否則。 A`false`的值會產生例外狀況，其中已嘗試在無效的屬性集，對屬性系統的特定部分，讓您的應用程式應該準備好處理這些例外狀況。  
  
 驗證回呼會儲存在相依性屬性的識別項，而不是相依性屬性中繼資料。 驗證回呼沒有存取權的特定執行個體<xref:System.Windows.DependencyObject>於哪一個屬性為設定，而且可能只會影響一般情況下接受屬性值。 如果您需要可以變更屬性值的特定執行個體為基礎的回呼，您應該使用的組合<xref:System.Windows.CoerceValueCallback>和<xref:System.Windows.PropertyChangedCallback>回呼，當套用至您的屬性的屬性中繼資料。 您也可能會影響您的屬性值的相關屬性來套用這些回呼。 如需詳細資訊，請參閱[相依性屬性的回呼和驗證](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md)。  
  
   
  
## Examples  
 下列範例包含實作此回呼來驗證自訂相依性屬性的值範圍。 在此情況下，屬性值預期列舉型別，並驗證可確保提供的值為這個列舉的成員。  
  
 [!code-csharp[DPCustom#ValidateValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#validatevaluecallback)]
 [!code-vb[DPCustom#ValidateValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#validatevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>