<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5bdd308f1f4c1b97892601d050dd8c3a54440fef" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48612718" /></Metadata><TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualTransition = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示當控制項由某個狀態轉換到另一個狀態時發生的視覺化行為。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 藉由新增狀態之間轉換時，您可以指定控制項的視覺行為<xref:System.Windows.VisualTransition>物件。 當您建立<xref:System.Windows.VisualTransition>，您指定一或多個項目：  
  
-   藉由設定發生的狀態之間轉換所需的時間<xref:System.Windows.VisualTransition.GeneratedDuration%2A>屬性。  
  
-   發生在轉換時所設定的其他控制項的外觀變更<xref:System.Windows.VisualTransition.Storyboard%2A>屬性。  
  
-   當<xref:System.Windows.VisualTransition>藉由設定會套用<xref:System.Windows.VisualTransition.To%2A>和<xref:System.Windows.VisualTransition.From%2A>屬性。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.VisualTransition>，指定當使用者移動滑鼠離開該控制項，為藍色，然後為黃色，然後為黑色在 1.5 秒內變更控制項的框線。 完整的範例，請參閱 <<c0> [ 透過建立 ControlTemplate 自訂現有控制項的外觀](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.VisualTransition" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Windows.VisualTransition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定轉換前的 <see cref="T:System.Windows.VisualState" /> 名稱。</summary>
        <value>轉換前的 <see cref="T:System.Windows.VisualState" /> 名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.From%2A>屬性是選擇性的。 A<xref:System.Windows.VisualTransition>可以限制套用至特定的狀態，或它可以套用任何時候控制項之間的轉換狀態。 您可以限制何時<xref:System.Windows.VisualTransition>藉由設定會套用<xref:System.Windows.VisualTransition.To%2A>和<xref:System.Windows.VisualTransition.From%2A>屬性。 下表說明限制的層級 (依最嚴格到最不嚴格的順序排列)。  
  
|限制的類型|來源的值|目標的值|  
|-------------------------|-------------------|-----------------|  
|從指定的狀態到另一個指定的狀態|名稱 <xref:System.Windows.VisualState>|名稱 <xref:System.Windows.VisualState>|  
|從任何狀態到指定的狀態|未設定|名稱 <xref:System.Windows.VisualState>|  
|從指定的狀態到任何狀態|名稱 <xref:System.Windows.VisualState>|未設定|  
|從任何狀態到任何其他狀態|未設定|未設定|  
  
 您可以有多個<xref:System.Windows.VisualTransition>中的物件<xref:System.Windows.VisualStateGroup>，參考相同的狀態，但它們將使用上表指定的順序。  
  
 您可以變更此行為，藉由建立新的類別繼承自<xref:System.Windows.VisualStateManager>，並覆寫<xref:System.Windows.VisualStateManager.GoToStateCore%2A>方法。  
  
   
  
## Examples  
 下列範例會建立兩個<xref:System.Windows.VisualTransition>物件。 當控制項從不`Pressed`狀態`MouseOver`狀態<xref:System.Windows.VisualTransition>，同時具有<xref:System.Windows.VisualTransition.From%2A>和<xref:System.Windows.VisualTransition.To%2A>集使用。 當控制項從不是 `Pressed` 的狀態轉換到 `MouseOver` 狀態時，則會使用另一個狀態。  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedDuration : System.Windows.Duration with get, set" Usage="System.Windows.VisualTransition.GeneratedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定從某個狀態轉換到另一個狀態所需的時間。</summary>
        <value>從某個狀態轉換到另一個狀態所需的時間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以指定多久轉換會藉由設定<xref:System.Windows.VisualTransition.GeneratedDuration%2A>屬性。 當您將設定<xref:System.Windows.VisualTransition.GeneratedDuration%2A>屬性，指定進行轉換所花費的時間。  
  
   
  
## Examples  
 下列範例會指定控制項需要進入二分之一秒`MouseOver`狀態。 完整的範例，請參閱 <<c0> [ 透過建立 ControlTemplate 自訂現有控制項的外觀](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedEasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於轉換狀態的自訂數學公式。</summary>
        <value>用於轉換狀態的自訂數學公式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以設定<xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A>屬性來指定發生轉換的方式。 例如，您可以指定要加速或減速轉換 easing 函式。 如需詳細資訊，請參閱 < [Easing 函式](~/docs/framework/wpf/graphics-multimedia/easing-functions.md)。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.VisualTransition>這會導致<xref:System.Windows.Shapes.Rectangle>垂直移動，當使用者按下滑鼠按鈕，透過<xref:System.Windows.Controls.Canvas>。 範例會設定<xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A>屬性，以<xref:System.Windows.Media.Animation.BounceEase>物件會造成<xref:System.Windows.Shapes.Rectangle>彈到達其目的地時出現。 <xref:System.Windows.VisualTransition>當使用者放開時用了另一個<xref:System.Windows.Media.Animation.BounceEase>物件會造成<xref:System.Windows.Shapes.Rectangle>來回傳送之前它會傳回其原始位置。  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 下列範例顯示的事件處理常式<xref:System.Windows.UIElement3D.MouseDown>和<xref:System.Windows.UIElement.MouseUp>事件。 此範例會呼叫<xref:System.Windows.VisualStateManager.GoToElementState%2A>方法，以變更<xref:System.Windows.VisualState>的畫布。  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualTransition.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定會於轉換發生時發生的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</summary>
        <value>會於轉換發生時發生的 <see cref="T:System.Windows.Media.Animation.Storyboard" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.VisualTransition>包含<xref:System.Windows.Media.Animation.Storyboard>，則<xref:System.Windows.Media.Animation.Storyboard>執行<xref:System.Windows.VisualTransition>套用。 例如，如果您想要的框線<xref:System.Windows.Controls.Button>若要變更色彩，當使用者移動滑鼠開時，您可以建立<xref:System.Windows.VisualTransition>具有<xref:System.Windows.Media.Animation.Storyboard>變更按鈕的背景。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Windows.VisualTransition>，指定當使用者移動滑鼠離開該控制項，為藍色，然後為黃色，然後為黑色在 1.5 秒內變更控制項的框線。 完整的範例，請參閱 <<c0> [ 透過建立 ControlTemplate 自訂現有控制項的外觀](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)。  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="System.Windows.VisualTransition.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定轉換後的 <see cref="T:System.Windows.VisualState" /> 名稱。</summary>
        <value>要轉換的 <see cref="T:System.Windows.VisualState" /> 名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.VisualTransition.To%2A>屬性是選擇性的。 A<xref:System.Windows.VisualTransition>可以限制套用至特定的狀態，或它可以套用任何時候控制項之間的轉換狀態。 您可以限制何時<xref:System.Windows.VisualTransition>藉由設定會套用<xref:System.Windows.VisualTransition.To%2A>和<xref:System.Windows.VisualTransition.From%2A>屬性。 下表說明限制的層級 (依最嚴格到最不嚴格的順序排列)。  
  
|限制的類型|來源的值|目標的值|  
|-------------------------|-------------------|-----------------|  
|從指定的狀態到另一個指定的狀態|名稱 <xref:System.Windows.VisualState>|名稱 <xref:System.Windows.VisualState>|  
|從任何狀態到指定的狀態|未設定|名稱 <xref:System.Windows.VisualState>|  
|從指定的狀態到任何狀態|名稱 <xref:System.Windows.VisualState>|未設定|  
|從任何狀態到任何其他狀態|未設定|未設定|  
  
 您可以有多個<xref:System.Windows.VisualTransition>中的物件<xref:System.Windows.VisualStateGroup>，參考相同的狀態，但它們將使用上表指定的順序。  
  
 您可以變更此行為，藉由建立新的類別繼承自<xref:System.Windows.VisualStateManager>，並覆寫<xref:System.Windows.VisualStateManager.GoToStateCore%2A>方法。  
  
   
  
## Examples  
 下列範例會建立兩個<xref:System.Windows.VisualTransition>物件。 當控制項從不`Pressed`狀態`MouseOver`狀態<xref:System.Windows.VisualTransition>，同時具有<xref:System.Windows.VisualTransition.From%2A>和<xref:System.Windows.VisualTransition.To%2A>集使用。 當控制項從不是 `Pressed` 的狀態轉換到 `MouseOver` 狀態時，則會使用另一個狀態。  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>