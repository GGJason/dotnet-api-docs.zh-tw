<Namespace Name="System.Windows.Forms">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de3d7b337699f794b1d27959727821d8e228cf48" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/10/2018" />
    <Meta Name="ms.locfileid" Value="30737222" />
  </Metadata>
  <Docs>
    <summary>
      <see cref="N:System.Windows.Forms" /> 命名空間包含用來建立 Windows 架構應用程式的類別，這些應用程式會充分利用 Microsoft Windows 作業系統中提供的豐富使用者介面功能。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下表顯示中的類別<xref:System.Windows.Forms>命名空間分組成類別目錄。  
  
|類別的類別目錄|詳細資料|  
|--------------------|-------------|  
|的使用者控制項，以及表單控制項，|大部分的類別內<xref:System.Windows.Forms>命名空間衍生自<xref:System.Windows.Forms.Control>類別。 <xref:System.Windows.Forms.Control>類別會提供所有的控制項上顯示的基本功能<xref:System.Windows.Forms.Form>。 <xref:System.Windows.Forms.Form>類別代表應用程式中的視窗。 這包括對話方塊、 非強制回應視窗和多個文件介面 (MDI) 用戶端與父視窗。 您也可以建立您自己的控制項，藉由衍生自<xref:System.Windows.Forms.UserControl>類別。|  
|功能表和工具列|Windows Form 包含一組豐富的現代化外觀和行為 （外觀及操作） 建立您自己自訂的工具列和功能表的類別。 <xref:System.Windows.Forms.ToolStrip><xref:System.Windows.Forms.MenuStrip>， <xref:System.Windows.Forms.ContextMenuStrip>，和<xref:System.Windows.Forms.StatusStrip>可用來分別建立工具列、 功能表列、 操作功能表和狀態列。|  
|-控制項|<xref:System.Windows.Forms>命名空間提供各種不同的控制項類別可讓您建立豐富的使用者介面。 某些控制項的設計並用於資料輸入應用程式，例如<xref:System.Windows.Forms.TextBox>和<xref:System.Windows.Forms.ComboBox>控制項。 其他控制項顯示應用程式資料，例如<xref:System.Windows.Forms.Label>和<xref:System.Windows.Forms.ListView>。 命名空間也提供控制項，可叫用命令在應用程式，例如<xref:System.Windows.Forms.Button>。 <xref:System.Windows.Forms.WebBrowser>控制項和 managed HTML 類別，例如<xref:System.Windows.Forms.HtmlDocument>，讓您顯示和管理受管理的 Windows Forms 應用程式中的 HTML 網頁。 <xref:System.Windows.Forms.MaskedTextBox>控制項是可讓您也會自動定義遮罩的進階的資料項目控制項接受或拒絕使用者輸入。 此外，您可以使用<xref:System.Windows.Forms.PropertyGrid>控制項來建立控制項的設計工具顯示的內容會顯示您的 Windows Form 設計工具。|  
|配置|Windows Form 中的數個重要類別幫助控制項顯示介面，例如表單上控制項的版面配置或控制項。 <xref:System.Windows.Forms.FlowLayoutPanel> 以序列方式，它包含的所有控制項都配置和<xref:System.Windows.Forms.TableLayoutPanel>可讓您定義資料格和資料列中的固定方格控制項的版面配置。 <xref:System.Windows.Forms.SplitContainer> 顯示介面分成兩個或多個可調整的部分。|  
|資料和資料繫結|Windows Form 中定義繫結至資料來源，例如資料庫和 XML 檔案的豐富的架構。 <xref:System.Windows.Forms.DataGridView>控制項以顯示資料，提供可自訂的表格，並可讓您自訂資料格、 資料列、 資料行，以及框線。 <xref:System.Windows.Forms.BindingNavigator>控制項代表標準化的方式，來瀏覽和表單; 上使用的資料<xref:System.Windows.Forms.BindingNavigator>經常搭配<xref:System.Windows.Forms.BindingSource>控制項在表單上移動資料記錄，以及與它們互動。|  
|元件|控制項，除了<xref:System.Windows.Forms>命名空間提供不是衍生自其他類別<xref:System.Windows.Forms.Control>類別，但仍提供以 Windows 為基礎的應用程式的視覺化功能。 部分類別，例如<xref:System.Windows.Forms.ToolTip>和<xref:System.Windows.Forms.ErrorProvider>、 擴充功能，或提供資訊給使用者。 與<xref:System.Windows.Forms.Help>和<xref:System.Windows.Forms.HelpProvider>類別，您可以向您的應用程式的使用者顯示說明資訊。|  
|-通用對話方塊|Windows 提供數個通用對話方塊可讓您執行工作，例如開啟和儲存檔案、 操作的字型或文字的色彩，或列印時提供您的應用程式一致的使用者介面。 <xref:System.Windows.Forms.OpenFileDialog>和<xref:System.Windows.Forms.SaveFileDialog>類別提供的功能，來顯示對話方塊，可讓使用者找出並輸入要開啟或儲存之檔案的名稱。 <xref:System.Windows.Forms.FontDialog>類別會顯示對話方塊，以變更項目的<xref:System.Drawing.Font>應用程式使用。 <xref:System.Windows.Forms.PageSetupDialog>， <xref:System.Windows.Forms.PrintPreviewDialog>，和<xref:System.Windows.Forms.PrintDialog>顯示對話方塊，可讓使用者控制列印文件的類別。 如需 Windows 為基礎的應用程式從列印的詳細資訊，請參閱<xref:System.Drawing.Printing>命名空間。 通用對話方塊中，除了<xref:System.Windows.Forms>命名空間提供<xref:System.Windows.Forms.MessageBox>類別顯示訊息方塊，可以顯示，並從使用者擷取資料。|  
  
 有數個類別內<xref:System.Windows.Forms>對前一個摘要中所述的類別提供支援的命名空間。 支援類別的範例為列舉型別、 事件引數的類別和事件內控制項和元件所使用的委派。  
  
> [!CAUTION]
>  Windows 服務中使用不支援在 Windows Form 命名空間中的類別。 嘗試使用這些類別從服務中的可能會產生無法預期的問題，例如降低的服務的效能和執行階段例外狀況。  
>   
>  如果您使用.NET Framework 1.1 版或.NET Framework 1.0 和您必須讓 Windows Form 應用程式支援 Windows XP 視覺化樣式，請確定您設定`FlatStyle`您的控制項屬性<xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>包括與資訊清單和程式可執行檔。 資訊清單是 XML 檔案所包含應用程式可執行檔內的資源，或是為位於與可執行檔相同的目錄中的個別檔案。 如需資訊清單的範例，請參閱 < 範例 > 一節<xref:System.Windows.Forms.FlatStyle>列舉型別。 如需如何使用 Windows XP 中可用的視覺化樣式的詳細資訊，請參閱 < 使用 Windows XP 視覺化樣式中使用者介面設計和開發 > MSDN Library 中。 預設的.NET framework 1.1、 1.2 和 2.0 已啟用視覺化樣式。  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>