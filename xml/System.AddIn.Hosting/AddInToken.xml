<Type Name="AddInToken" FullName="System.AddIn.Hosting.AddInToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="497121de6ec302c2b1a48d3055e20eb34f2217e2" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53331138" /></Metadata><TypeSignature Language="C#" Value="public sealed class AddInToken : System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AddInToken extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.AddIn.Hosting.QualificationDataItem&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Hosting.AddInToken" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AddInToken&#xA;Implements IEnumerable(Of QualificationDataItem)" />
  <TypeSignature Language="C++ CLI" Value="public ref class AddInToken sealed : System::Collections::Generic::IEnumerable&lt;System::AddIn::Hosting::QualificationDataItem&gt;" />
  <TypeSignature Language="F#" Value="type AddInToken = class&#xA;    interface seq&lt;QualificationDataItem&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.AddIn.Hosting.QualificationDataItem&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示可啟動的增益集。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.AddIn.Hosting.AddInToken>物件代表增益集，以及其相關聯的管線區段，可啟動。 權杖會包含名稱、 組件名稱、 描述、 發行者及版本的增益集，它表示。  
  
 使用<xref:System.AddIn.Hosting.AddInStore.FindAddIns%2A?displayProperty=nameWithType>方法來取得權杖，代表增益集的管線符合指定的主機 檢視的集合。 使用<xref:System.AddIn.Hosting.AddInStore.FindAddIn%2A?displayProperty=nameWithType>方法來取得權杖，代表所有管線針對指定的增益集，符合指定的主機檢視的集合。  
  
 若要啟動的增益集，將想要增益集來代表語彙基元傳遞<xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法。 這個方法會傳回代表增益集的 [主機] 檢視的類型的執行個體。  
  
 <xref:System.AddIn.Hosting.AddInToken.Activate%2A>方法有數個多載。 當您使用不需要應用程式定義域的名稱做為其中一個參數的多載時，會自動建立新的應用程式定義域，增益集。  
  
 您可以使用 Language-Integrated Query (LINQ) 的擴充方法來在執行查詢<xref:System.AddIn.Hosting.AddInToken>，此語彙基元視為集合<xref:System.AddIn.Hosting.QualificationDataItem>結構。  
  
   
  
## Examples  
 本節包含兩個範例。 第一個範例會啟動已選取使用增益集`ChooseAddIn`方法，而第二個範例會示範`ChooseAddIn`方法。  
  
 **範例 1**  
  
 下列範例示範如何啟動增益集與語彙基元。  
  
 [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]
 [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  
  
 **範例 2**  
  
 下列範例顯示的自訂`ChooseAddIn`方法，列舉<xref:System.AddIn.Hosting.AddInToken>集合。 使用者從這個集合的相對應的增益集啟動選取的語彙基元。  
  
 [!code-csharp[AddInP3Host#13](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#13)]
 [!code-vb[AddInP3Host#13](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#13)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">增益集和擴充性</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="Activate&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>啟動增益集。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInEnvironment environment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInEnvironment environment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInEnvironment)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (environment As AddInEnvironment) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInEnvironment ^ environment);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInEnvironment -&gt; 'T" Usage="addInToken.Activate environment" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="environment" Type="System.AddIn.Hosting.AddInEnvironment" />
      </Parameters>
      <Docs>
        <typeparam name="T">表示增益集主應用程式檢視的介面或抽象基底型別。</typeparam>
        <param name="environment">包含原始增益集的應用程式定義域和處理序。</param>
        <summary>在另一個增益集的環境中，啟動增益集。</summary>
        <returns>增益集的裝載檢視。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法多載增益集相同的應用程式定義域和處理程序會啟動增益集從中`environment`取得。  
  
   
  
## Examples  
 下列範例會啟動一個增益集內指定的安全性層級的自動產生的應用程式定義域中。 然後會啟動第二個增益集相同的應用程式定義域和處理程序做為第一次使用第一個增益集的<xref:System.AddIn.Hosting.AddInEnvironment>物件。  
  
 [!code-csharp[AddInP3Host#8](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#8)]
 [!code-vb[AddInP3Host#8](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">增益集和擴充性</related>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(valuetype System.AddIn.Hosting.AddInSecurityLevel trustLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (trustLevel As AddInSecurityLevel) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInSecurityLevel trustLevel);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInSecurityLevel -&gt; 'T" Usage="addInToken.Activate trustLevel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="trustLevel" Type="System.AddIn.Hosting.AddInSecurityLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T">表示增益集主應用程式檢視的介面或抽象基底型別。</typeparam>
        <param name="trustLevel">一個列舉值，其指定信任層級。</param>
        <summary>在新的應用程式定義域中，使用指定的信任層級來啟動增益集。</summary>
        <returns>增益集的裝載檢視。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法多載增益集載入自動產生的應用程式定義域。 如果您想要指定新的應用程式定義域的名稱，使用<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29>多載。  
  
 這個方法會設定應用程式定義域的增益集組件位置的基底目錄。 它也會尋找的組態檔 [addinassemblyname].dll.config 與的如果找到，它是新的應用程式定義域的組態檔設定。  
  
   
  
## Examples  
 下列範例示範如何啟動增益集，所選的語彙基元，以指定的安全性層級的自動產生的應用程式定義域中所識別。  
  
 [!code-csharp[AddInP3Host#5](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#5)]
 [!code-vb[AddInP3Host#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/8dd45b02-7218-40f9-857d-40d7b98b850b">增益集和擴充性</related>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (AppDomain target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AppDomain target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AppDomain)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (target As AppDomain) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(AppDomain ^ target);" />
      <MemberSignature Language="F#" Value="member this.Activate : AppDomain -&gt; 'T" Usage="addInToken.Activate target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="target" Type="System.AppDomain" />
      </Parameters>
      <Docs>
        <typeparam name="T">表示增益集主應用程式檢視的介面或抽象基底型別。</typeparam>
        <param name="target">增益集應在其中啟動的應用程式定義域。</param>
        <summary>在現有的應用程式定義域中，啟動增益集。</summary>
        <returns>增益集的裝載檢視。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要啟用自動產生的應用程式定義域中增益集，請使用<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>多載，以產生新的應用程式定義域指定的安全性層級或<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%2CSystem.String%29>多載，以包含應用程式定義域的易記名稱。  
  
   
  
## Examples  
 下列範例會啟動增益集，正由另一個增益集的應用程式定義域中。 第一個增益集的程式碼中提供<xref:System.AddIn.Hosting.AddInToken>類別。  
  
 [!code-csharp[AddInP3Host#9](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#9)]
 [!code-vb[AddInP3Host#9](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">需要完全信任權限。 呼叫鏈結中的呼叫端沒有足夠的權限。</exception>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.Security.PermissionSet permissions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.Security.PermissionSet permissions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (permissions As PermissionSet) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::Security::PermissionSet ^ permissions);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.Security.PermissionSet -&gt; 'T" Usage="addInToken.Activate permissions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="permissions" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <typeparam name="T">表示增益集主應用程式檢視的介面或抽象基底型別。</typeparam>
        <param name="permissions">授與增益集的使用權限。</param>
        <summary>在新的應用程式定義域中，使用指定的使用權限集合來啟動增益集。</summary>
        <returns>增益集的裝載檢視。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法多載增益集載入自動產生的應用程式定義域。 它會設定應用程式定義域的增益集組件位置的基底目錄。 它也會尋找組態檔`[addinassemblyname].dll.config`而且，如果找到，則設定為新的應用程式定義域的組態檔。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="permissions" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.AddIn.Hosting.AddInSecurityLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInProcess process, valuetype System.AddIn.Hosting.AddInSecurityLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.AddIn.Hosting.AddInSecurityLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (process As AddInProcess, level As AddInSecurityLevel) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInProcess ^ process, System::AddIn::Hosting::AddInSecurityLevel level);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInProcess * System.AddIn.Hosting.AddInSecurityLevel -&gt; 'T" Usage="addInToken.Activate (process, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="process" Type="System.AddIn.Hosting.AddInProcess" />
        <Parameter Name="level" Type="System.AddIn.Hosting.AddInSecurityLevel" />
      </Parameters>
      <Docs>
        <typeparam name="T">表示增益集主應用程式檢視的介面或抽象基底型別。</typeparam>
        <param name="process">外部處理序，將在其中啟動增益集。</param>
        <param name="level">一個列舉值，其指定信任層級。</param>
        <summary>在外部處理序、新的應用程式定義域中，並使用指定的信任層級來啟動增益集。</summary>
        <returns>增益集的裝載檢視。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會設定應用程式定義域的增益集組件位置的基底目錄。 它也會尋找組態檔`[addinassemblyname].dll.config`而且，如果找到，則設定為新的應用程式定義域的組態檔。  
  
   
  
## Examples  
 下列範例會建立新的處理序，並在該處理序，以完全信任安全性層級增益集啟動。  
  
 [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]
 [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">完全信任立即呼叫端。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInProcess process, System.Security.PermissionSet permissionSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(class System.AddIn.Hosting.AddInProcess process, class System.Security.PermissionSet permissionSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInProcess,System.Security.PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInProcess ^ process, System::Security::PermissionSet ^ permissionSet);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInProcess * System.Security.PermissionSet -&gt; 'T" Usage="addInToken.Activate (process, permissionSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="process" Type="System.AddIn.Hosting.AddInProcess" />
        <Parameter Name="permissionSet" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <typeparam name="T">表示增益集主應用程式檢視的介面或抽象基底型別。</typeparam>
        <param name="process">外部處理序，將在其中啟動增益集。</param>
        <param name="permissionSet">授與增益集的必要使用權限集合。</param>
        <summary>在外部處理序、新的應用程式定義域中，並使用指定的使用權限集合來啟動增益集。</summary>
        <returns>增益集的裝載檢視。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會設定應用程式定義域的增益集組件位置的基底目錄。 它也會尋找組態檔`[addinassemblyname].dll.config`而且，如果找到，則設定為新的應用程式定義域的組態檔。  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">完全信任立即呼叫端。 這個成員無法供部分信任的程式碼使用。</permission>
      </Docs>
    </Member>
    <Member MemberName="Activate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T Activate&lt;T&gt; (System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T Activate&lt;T&gt;(valuetype System.AddIn.Hosting.AddInSecurityLevel trustLevel, string appDomainName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Activate``1(System.AddIn.Hosting.AddInSecurityLevel,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate(Of T) (trustLevel As AddInSecurityLevel, appDomainName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T Activate(System::AddIn::Hosting::AddInSecurityLevel trustLevel, System::String ^ appDomainName);" />
      <MemberSignature Language="F#" Value="member this.Activate : System.AddIn.Hosting.AddInSecurityLevel * string -&gt; 'T" Usage="addInToken.Activate (trustLevel, appDomainName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="trustLevel" Type="System.AddIn.Hosting.AddInSecurityLevel" />
        <Parameter Name="appDomainName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">表示增益集主應用程式檢視的介面或抽象基底型別。</typeparam>
        <param name="trustLevel">一個列舉值，其指定信任層級。</param>
        <param name="appDomainName">要指派給新應用程式定義域的易記名稱。</param>
        <summary>在新的應用程式定義域中，使用指定的名稱和信任層級來啟動增益集。</summary>
        <returns>增益集的裝載檢視。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您不需要指定應用程式定義域名稱，使用<xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInSecurityLevel%29>多載。  
  
 這個方法會設定應用程式定義域的增益集組件位置的基底目錄。 它也會尋找組態檔`[addinassemblyname].dll.config`而且，如果找到，則設定為新的應用程式定義域的組態檔。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInFullName">
      <MemberSignature Language="C#" Value="public string AddInFullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AddInFullName" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.AddInFullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AddInFullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AddInFullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddInFullName : string" Usage="System.AddIn.Hosting.AddInToken.AddInFullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得增益集的命名空間和型別。</summary>
        <value>以其命名空間完整限定的增益集型別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會取得增益集的完整名稱，因為它將會傳回<xref:System.Type.FullName%2A?displayProperty=nameWithType>屬性。 這個值一律是可用的執行個體上<xref:System.AddIn.Hosting.AddInToken>物件。  
  
   
  
## Examples  
 下列範例顯示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，和<xref:System.AddIn.Hosting.AddInToken.Version%2A>內容到主控台。 此程式碼範例是針對提供之較大範例的一部分<xref:System.AddIn.Hosting.AddInToken>類別。  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyName AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.AssemblyName AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyName ^ AssemblyName { System::Reflection::AssemblyName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : System.Reflection.AssemblyName" Usage="System.AddIn.Hosting.AddInToken.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含增益集之組件的名稱。</summary>
        <value>組件的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會取得增益集，包含的組件的顯示名稱，因為它將會傳回<xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>屬性。 這個值一律是可用的執行個體上<xref:System.AddIn.Hosting.AddInToken>物件。  
  
   
  
## Examples  
 下列範例顯示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，和<xref:System.AddIn.Hosting.AddInToken.Version%2A>內容到主控台。 此程式碼範例是針對提供之較大範例的一部分<xref:System.AddIn.Hosting.AddInToken>類別。  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.AddIn.Hosting.AddInToken.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得增益集的描述。</summary>
        <value>增益集的描述，如果 <see cref="T:System.AddIn.AddInAttribute" /> 屬性中未指定描述，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會取得如中所指定的增益集的描述<xref:System.AddIn.AddInAttribute>屬性。  
  
   
  
## Examples  
 下列範例顯示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，和<xref:System.AddIn.Hosting.AddInToken.Version%2A>內容到主控台。 此程式碼範例是針對提供之較大範例的一部分<xref:System.AddIn.Hosting.AddInToken>類別。  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDirectConnect">
      <MemberSignature Language="C#" Value="public static bool EnableDirectConnect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableDirectConnect" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.EnableDirectConnect" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableDirectConnect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableDirectConnect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDirectConnect : bool with get, set" Usage="System.AddIn.Hosting.AddInToken.EnableDirectConnect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出在條件允許下增益集是否應直接連線到它們的主機。</summary>
        <value>如果增益集應直接連接至主應用程式，則為 <see langword="true" />，否則為 <see langword="false" />。 預設為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 發生的直接連線，必須存在下列條件：  
  
-   此屬性必須設為`true`。  
  
-   增益集必須位於相同的應用程式定義域，為主機。  
  
-   增益集 檢視和增益集主應用程式檢視必須是相同的類型。  
  
-   管線的所有區段都必須可用。  
  
 建立直接連線時，增益集端配接器和主應用程式端配接器是未具現化。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="addInToken.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">要與目前執行個體比較的物件。</param>
        <summary>判斷指定的物件是否和目前的執行個體相等。</summary>
        <returns>如果指定的物件和目前執行個體相等，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.AddIn.Hosting.QualificationDataItem&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of QualificationDataItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::AddIn::Hosting::QualificationDataItem&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;" Usage="addInToken.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.AddIn.Hosting.QualificationDataItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回與這個語彙基元相關之管線區段的限定性條件資料列舉程式。</summary>
        <returns>列舉程式，可用來逐一查看與目前語彙基元相關之管線區段的限定性條件資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來處理，就好像的限定性條件資料項目，例如，集合中的語彙基元`foreach`陳述式 (`For Each` Visual Basic 中`for each`Visual c + +)。  
  
 這個方法所傳回的列舉值可用來逐一查看目前的語彙基元相關聯之管線區段的限定性條件資料項目。 限定性條件資料的每個項目是<xref:System.AddIn.Hosting.QualificationDataItem>結構，以識別管線區段，並包含名稱/值組從<xref:System.AddIn.Pipeline.QualificationDataAttribute>屬性套用至該區段。  
  
> [!NOTE]
>  增益集模型中不會將套用至增益集的 [主機] 檢視的限定性條件資料。 如此一來，當您列舉限定性條件資料，您將無法找到任何項目其<xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>屬性是<xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>。  
  
 或者，您可以使用<xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>屬性來取得一組巢狀包含限定性條件資料之管線區段的字典。  
  
   
  
## Examples  
 下列範例會列出每個相關聯之管線區段的限定性條件資料<xref:System.AddIn.Hosting.AddInToken>語彙基元的集合中。  
  
 [!code-csharp[AddInP3Host#12](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#12)]
 [!code-vb[AddInP3Host#12](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="addInToken.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>做為語彙基元的雜湊函式。</summary>
        <returns>目前語彙基元的雜湊程式碼。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.AddIn.Hosting.AddInToken.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得增益集的名稱。</summary>
        <value>增益集的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會取得名稱中所指定的增益集<xref:System.AddIn.AddInAttribute>屬性。 這個值一律是可用的執行個體上<xref:System.AddIn.Hosting.AddInToken>物件。  
  
   
  
## Examples  
 下列範例顯示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，和<xref:System.AddIn.Hosting.AddInToken.Version%2A>內容到主控台。 此程式碼範例是針對提供之較大範例的一部分<xref:System.AddIn.Hosting.AddInToken>類別。  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Publisher">
      <MemberSignature Language="C#" Value="public string Publisher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Publisher" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Publisher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Publisher As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Publisher { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Publisher : string" Usage="System.AddIn.Hosting.AddInToken.Publisher" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得增益集的發行者。</summary>
        <value>增益集的發行者，如果 <see cref="T:System.AddIn.AddInAttribute" /> 屬性中未指定發行者，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會取得如中所指定的增益集的發行者<xref:System.AddIn.AddInAttribute>屬性。  
  
   
  
## Examples  
 下列範例顯示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，和<xref:System.AddIn.Hosting.AddInToken.Version%2A>內容到主控台。 此程式碼範例是針對提供之較大範例的一部分<xref:System.AddIn.Hosting.AddInToken>類別。  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QualificationData">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;string,string&gt;&gt; QualificationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;valuetype System.AddIn.Hosting.AddInSegmentType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&gt; QualificationData" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.QualificationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QualificationData As IDictionary(Of AddInSegmentType, IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::AddIn::Hosting::AddInSegmentType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ QualificationData { System::Collections::Generic::IDictionary&lt;System::AddIn::Hosting::AddInSegmentType, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QualificationData : System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType, System.Collections.Generic.IDictionary&lt;string, string&gt;&gt;" Usage="System.AddIn.Hosting.AddInToken.QualificationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.AddIn.Hosting.AddInSegmentType,System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與目前語彙基元關聯之管線中區段相關資料的字典。</summary>
        <value>字典，其索引鍵為管線區段，其值為表示每個區段限定性條件資料之名稱/值組的字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個屬性來取得已套用至管線與區段的資料<xref:System.AddIn.Pipeline.QualificationDataAttribute>屬性。 您可以使用這項資料來識別及處理的類型，撰寫您的管線。  
  
 這個屬性會傳回字典的字典。 最上層字典一律會有六個索引鍵。 每個索引鍵是<xref:System.AddIn.Hosting.AddInSegmentType>管線中區段的值。 每個值為泛型<xref:System.Collections.Generic.IDictionary%602>之字串的字串索引鍵，其中包含區段的限定性條件資料。  
  
 索引鍵及這些內部的字典值名稱就是和中的值指定<xref:System.AddIn.Pipeline.QualificationDataAttribute>區段的屬性。 如果沒有限定性條件資料已套用至區段，其字典是空的。  
  
> [!NOTE]
>  增益集模型中不會將套用至增益集的 [主機] 檢視的限定性條件資料。 如此一來，字典<xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>永遠是空的。  
  
 或者，您可以取得限定性條件資料列舉<xref:System.AddIn.Hosting.AddInToken>如同一般的集合<xref:System.AddIn.Hosting.QualificationDataItem>結構，使用`foreach`陳述式 (`For Each`在 Visual Basic 中`for each`Visual c + +)。 提供的範例，請參閱<xref:System.AddIn.Hosting.QualificationDataItem>結構。  
  
   
  
## Examples  
 下列範例示範如何檢查增益集的限定性條件資料。  
  
 [!code-csharp[AddInP3Host#11](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#11)]
 [!code-vb[AddInP3Host#11](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回與這個語彙基元相關之管線區段的限定性條件資料列舉程式。</summary>
        <returns>列舉程式，可用來逐一查看與目前語彙基元相關之管線區段的限定性條件資料。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可讓被視為集合的限定性條件資料項目，例如在語彙基元`foreach`陳述式 (`For Each` Visual Basic 中`for each`Visual c + +)。  
  
 這個方法所傳回的列舉值可用來逐一查看目前的語彙基元相關聯之管線區段的限定性條件資料項目。 限定性條件資料的每個項目是<xref:System.AddIn.Hosting.QualificationDataItem>結構，以識別管線區段，並包含名稱/值組，從<xref:System.AddIn.Pipeline.QualificationDataAttribute>屬性套用至該區段。  
  
> [!NOTE]
>  增益集模型中不會將套用至增益集的 [主機] 檢視的限定性條件資料。 如此一來，當您列舉限定性條件資料，您將無法找到任何項目其<xref:System.AddIn.Hosting.QualificationDataItem.Segment%2A>屬性是<xref:System.AddIn.Hosting.AddInSegmentType.HostViewOfAddIn?displayProperty=nameWithType>。  
  
 或者，您可以使用<xref:System.AddIn.Hosting.AddInToken.QualificationData%2A>屬性來取得一組巢狀包含限定性條件資料之管線區段的字典。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Hosting.AddInToken.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="addInToken.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回表示語彙基元的字串。</summary>
        <returns>表示語彙基元的字串。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public string Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Version" />
      <MemberSignature Language="DocId" Value="P:System.AddIn.Hosting.AddInToken.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Version { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : string" Usage="System.AddIn.Hosting.AddInToken.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得增益集的版本，如 <see cref="T:System.AddIn.AddInAttribute" /> 屬性中所指定。</summary>
        <value>增益集的版本，或是如果 <see cref="T:System.AddIn.AddInAttribute" /> 屬性中未指定版本號碼，則為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 版本號碼是自由格式的字串。  
  
   
  
## Examples  
 下列範例顯示的值<xref:System.AddIn.Hosting.AddInToken.Name%2A>， <xref:System.AddIn.Hosting.AddInToken.AddInFullName%2A>， <xref:System.AddIn.Hosting.AddInToken.Description%2A>， <xref:System.AddIn.Hosting.AddInToken.AssemblyName%2A>， <xref:System.AddIn.Hosting.AddInToken.Publisher%2A>，和<xref:System.AddIn.Hosting.AddInToken.Version%2A>內容到主控台。 此程式碼範例是針對提供之較大範例的一部分<xref:System.AddIn.Hosting.AddInToken>類別。  
  
 [!code-csharp[AddInP3Host#7](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#7)]
 [!code-vb[AddInP3Host#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>