<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f43a4345fbed22d5bfd7bb0dff3bcfffb3a5acf" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37596346" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPart" />
  <TypeSignature Language="F#" Value="type IWebPart = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定義由 ASP.NET <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項使用的通用使用者介面 (UI) 屬性。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart>介面提供可增強使用者經驗，使用的數個 UI 導向的屬性<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 當您建立衍生自基底的控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>類別，取得中的所有屬性的實作<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面，因為<xref:System.Web.UI.WebControls.WebParts.WebPart>基底類別會實作這個介面。  
  
 您可以使用現有的使用者控制項、 ASP.NET 控制項或不是繼承自的自訂伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>類別做為一部分的 Web 組件應用程式中，而且它們也可以使用這些宣告的 UI 導向屬性<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面。 如果您將放在現有的伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域，在執行階段，它們會包裝與<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>物件。 因為<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>類別繼承自<xref:System.Web.UI.WebControls.WebParts.WebPart>基底類別，它可讓現有的伺服器控制項，以做為 true<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，而且它們會將屬性加入的<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面。  
  
 如果您不是伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>區域中的控制項，它們可以使用<xref:System.Web.UI.WebControls.WebParts.IWebPart>屬性在執行的階段，而且您也可以宣告 （以頁面保存格式） 頁面的標記中的伺服器控制項上的那些屬性值。 不過，因為這些屬性只可供伺服器控制項在執行階段中，設計時間撰寫程式碼等功能的 IntelliSense 無法辨識<xref:System.Web.UI.WebControls.WebParts.IWebPart>伺服器控制項宣告的屬性。 當您載入頁面，但 Microsoft Visual Studio 無法辨識的屬性為有效在設計階段時，仍可運作這些控制項上宣告的屬性。 如果您想要新增<xref:System.Web.UI.WebControls.WebParts.IWebPart>現有的伺服器和以增強的設計階段的使用者經驗的使用者控制項的屬性，您可以實作<xref:System.Web.UI.WebControls.WebParts.IWebPart>伺服器控制項中的介面。  
  
 可能是實作的主要原因<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面是不支援使用 expando （自訂） 屬性的控制項。 Expando 屬性是字串，其中可以加入至類別動態屬性，藉由<xref:System.Web.UI.IAttributeAccessor>介面。 實作此介面的控制項包括<xref:System.Web.UI.WebControls.WebControl>類別及其子系中，可以使用 expando 屬性。 因此，所有的 ASP.NET 伺服器控制項、 自訂控制項衍生自 Web 使用者控制項，它們和<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項都支援 expando 屬性的用法。 但自訂控制項來直接繼承自基底<xref:System.Web.UI.Control>類別不支援 expando 屬性。 因此，如果您宣告內的這些控制項<xref:System.Web.UI.WebControls.WebParts.WebPartZone>，您不能宣告常見<xref:System.Web.UI.WebControls.WebParts.IWebPart>上的控制項，例如屬性的屬性<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>和<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>。 如果您想要使用這些屬性，這類控制項，您必須實作<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面。  
  
   
  
## Examples  
 下列程式碼範例示範如何實作<xref:System.Web.UI.WebControls.WebParts.IWebPart>使用者控制項中的介面。 這是最低限度示範如何實作屬性的簡單實作。  
  
 在程式碼範例的第一個部分會顯示使用者控制項。 使用者控制項實作的所有屬性<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面，再加上兩個額外的公用屬性繫結至控制項的使用者介面中。 兩個自訂屬性每個使用`Personalizable`屬性，可讓這些屬性，以儲存跨瀏覽器工作階段中的值。 請注意，在基底<xref:System.Web.UI.WebControls.WebParts.WebPart>類別實作中，所有屬性的<xref:System.Web.UI.WebControls.WebParts.IWebPart>會實作介面為可個人化，但它們不在此程式碼範例。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]  
  
 在程式碼範例的第二個部分示範裝載使用者控制項的網頁。 此頁面有<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制項，在使用者控制項參考。 請注意，有幾個<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面的屬性值會以宣告方式設定使用者控制項，可讓它的行為，並出現類似於標記中<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項在設計階段和執行階段。 在瀏覽器頁面載入時，您可以示範能夠以程式設計方式變更的值實作的頁面上使用 UI<xref:System.Web.UI.WebControls.WebParts.IWebPart>在執行階段的屬性。 當您變更某些屬性值時，所做的變更不明顯的頁面上，但會顯示在頁面原始碼 (<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>屬性)，或會儲存在應用程式的狀態資料 (<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>屬性)。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>通常您不需要實作<see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" />介面，在自訂<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />控制項或伺服器控制項，因為基底<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />類別已實作的介面。自訂<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />控制項，並放在其他伺服器控制項<see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" />區域，可以使用所有<see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" />屬性。若要實作的主要原因<see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" />介面，不論是在自訂<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />控制項或其他伺服器控制項，是如果您想要變更的預設實作。例如，您可能要提供的某些屬性的預設值。使用者或伺服器控制項中實作介面的另一個原因是，讓控制項上使用這些屬性的設計階段經驗將會增強。</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CatalogIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定至影像的 URL，該影像表示控制項目錄中的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項。</summary>
        <value>字串，表示至影像的 URL，該影像用於表示目錄中的控制項。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 組件應用程式通常會提供使用者可以加入至網頁的控制項類別目錄 （或清單）。 <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>控制項上的屬性包含出現在類別目錄時，代表控制項的影像的 URL。  
  
   
  
## Examples  
 下列程式碼範例示範宣告式和以程式設計方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>屬性。 此範例的完整原始程式碼的範例 > 一節中找到<xref:System.Web.UI.WebControls.WebParts.IWebPart>類別概觀。  
  
 在程式碼範例的第一個部分示範如何將使用者控制項實作<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>屬性。  
  
 [!code-csharp[WebParts_IWebPart_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts_IWebPart_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]  
  
 第二個部分的程式碼範例示範的使用者控制項，以程式設計方式設定的值中的方法<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>當使用者從選項按鈕，在頁面上，選取適當的屬性名稱的屬性設定新的值，在文字方塊中，並然後按一下 [**更新**] 按鈕。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 在程式碼範例的第三個部分示範使用者控制的方式可實作<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面中參考<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制項，以及如何<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>上控制項以宣告方式設定屬性。 請注意，因為沒有提供此範例中的 Web 組件控制項的類別目錄，所以無法設定這個屬性的實際效果。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定摘要說明控制項功能的簡短片語，用於 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的工具提示和目錄。</summary>
        <value>字串，簡要概括控制項的功能。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>屬性值通常用於描述性字串形式提供的清單的目錄中的控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，並為工具提示控制項的標題列中。 屬性的內容中會出現工具提示使用者將滑鼠指標置於控制項的標題列中的標題文字。  
  
   
  
## Examples  
 下列程式碼範例示範宣告式和以程式設計方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>屬性。 此範例的完整原始程式碼的範例 > 一節中找到<xref:System.Web.UI.WebControls.WebParts.IWebPart>類別概觀。  
  
 在程式碼範例的第一個部分示範如何將使用者控制項實作<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>屬性。  
  
 [!code-csharp[WebParts_IWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts_IWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]  
  
 第二個部分的程式碼範例示範的使用者控制項，以程式設計方式設定的值中的方法<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>當使用者從選項按鈕，在頁面上，選取適當的屬性名稱的屬性設定新的值，在文字方塊中，並然後按一下 [**更新**] 按鈕。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 在程式碼範例的第三個部分示範使用者控制的方式可實作<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面中參考<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制項，以及如何<xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>上控制項以宣告方式設定屬性。 請注意，您還可以看到這個屬性的值，藉由在瀏覽器網頁載入後，將滑鼠指標放在控制項的標題列中的標題文字之上。 您也可以試驗變更屬性值，以程式設計方式在執行階段載入網頁，並使用提供的使用者介面 (UI)，若要變更屬性值。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Subtitle : string" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與 <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> 屬性值串連的字串，組成 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的完整標題。</summary>
        <value>字串，做為控制項的副標題。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>屬性用來傳回的預設子標題字串<xref:System.Web.UI.WebControls.WebParts.WebPart>附加至控制項的標題，標題列中的控制項。  
  
 如果您提供的預設值<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>中實作的控制項屬性<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面，自動設定的控制項將其附加至 windows 7 的 Web 組件<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>在執行階段控制項的屬性。  
  
   
  
## Examples  
 下列程式碼範例示範宣告式和以程式設計方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>屬性。 此範例的完整原始程式碼的範例 > 一節中找到<xref:System.Web.UI.WebControls.WebParts.IWebPart>類別概觀。  
  
 在程式碼範例的第一個部分示範如何將使用者控制項實作<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>屬性。 請注意，屬性是唯讀的而且要用來提供預設子標題，會附加至主控制項的標題。  
  
 [!code-csharp[WebParts_IWebPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts_IWebPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]  
  
 在程式碼範例的第二個部分示範使用者控制的方式可實作<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面中參考<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制項，以及如何從可寫入的屬性<xref:System.Web.UI.WebControls.WebParts.IWebPart>控制項以宣告方式設定。 在瀏覽器頁面載入之後，請注意，預設值<xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>屬性，已設定使用者控制項的實作程式碼中，會附加至控制項的標題列中的項目。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的標題。</summary>
        <value>包含控制項標題的字串。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 設定控制項的標題列中顯示的標題文字<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>屬性。  
  
 如果您未提供控制項的標題，自動設定的 Web 組件控制項就會計算為標題使用的預設字串。 如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>。 此外，就可以提供預設副標題附加至標題字串。 如需詳細資訊，請參閱 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>。  
  
   
  
## Examples  
 下列程式碼範例示範宣告式和以程式設計方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>屬性。 此範例的完整原始程式碼的範例 > 一節中找到<xref:System.Web.UI.WebControls.WebParts.IWebPart>類別概觀。  
  
 在程式碼範例的第一個部分示範如何將使用者控制項實作<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>屬性。  
  
 [!code-csharp[WebParts_IWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts_IWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]  
  
 第二個部分的程式碼範例示範的使用者控制項，以程式設計方式設定的值中的方法<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>當使用者從選項按鈕，在頁面上，選取適當的屬性名稱的屬性設定新的值，在文字方塊中，並然後按一下 [**更新**] 按鈕。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 在程式碼範例的第三個部分示範使用者控制的方式可實作<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面中參考<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制項，以及如何<xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A>上控制項以宣告方式設定屬性。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleIconImageUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定影像的 URL，用來表示控制項所擁有標題列中的 Web 組件控制項。</summary>
        <value>字串，表示至影像的 URL。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>屬性可用來建立關聯的圖示與<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 圖示會出現在控制項標題列中。 取得主題的一致性，應用程式開發人員可能想要進行此圖示類似圖，代表目錄中的 Web 組件控制項的控制項 (在參照映像<xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A>屬性)。  
  
 因為它實作 Web 組件控制集，<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>屬性可個人化變更影像或圖示顯示在控制項的標題列中的使用者。  
  
   
  
## Examples  
 下列程式碼範例示範宣告式和以程式設計方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>屬性。 此範例的完整原始程式碼的範例 > 一節中找到<xref:System.Web.UI.WebControls.WebParts.IWebPart>類別概觀。  
  
 在程式碼範例的第一個部分示範如何將使用者控制項實作<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>屬性。  
  
 [!code-csharp[WebParts_IWebPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts_IWebPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]  
  
 第二個部分的程式碼範例示範的使用者控制項，以程式設計方式設定的值中的方法<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>當使用者從選項按鈕，在頁面上，選取適當的屬性名稱的屬性設定新的值，在文字方塊中，並然後按一下 [**更新**] 按鈕。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 在程式碼範例的第三個部分示範使用者控制的方式可實作<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面中參考<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制項，以及如何<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A>上控制項以宣告方式設定屬性。 請注意，是否您未提供實際影像的 URL，圖示的預留位置會出現在標題列。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleUrl : string with get, set" Usage="System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定至 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項之補充資訊的 URL。</summary>
        <value>字串，表示至 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項之詳細資訊的 URL。 預設值為空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您將指派到的 URL<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>屬性，該控制項的標題就會成為連結。 此屬性的用途是提供讓使用者存取控制的其他資訊的便利方式。 其他資訊可以提供著作權的資料，連絡資料，關於控制項的建立者或控制項的用途的摘要詳細資料。  
  
> [!NOTE]
>  通常，您不會使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>屬性連結至說明內容。 說明提供連結，是使用控制項的最佳辦法<xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範宣告式和以程式設計方式使用<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>屬性。 此範例的完整原始程式碼的範例 > 一節中找到<xref:System.Web.UI.WebControls.WebParts.IWebPart>類別概觀。  
  
 在程式碼範例的第一個部分示範如何將使用者控制項實作<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>屬性。  
  
 [!code-csharp[WebParts_IWebPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts_IWebPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]  
  
 第二個部分的程式碼範例示範的使用者控制項，以程式設計方式設定的值中的方法<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>當使用者從選項按鈕，在頁面上，選取適當的屬性名稱的屬性設定新的值，在文字方塊中，並然後按一下 [**更新**] 按鈕。  
  
> [!IMPORTANT]
>  這個範例有一個可接受使用者輸入的文字方塊，這可能會造成安全性威脅。 根據預設，ASP.NET Web 網頁會驗證使用者輸入未包含指令碼或 HTML 項目。 如需詳細資訊，請參閱 [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07) (指令碼攻擊概觀)。  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 在程式碼範例的第三個部分示範使用者控制的方式可實作<xref:System.Web.UI.WebControls.WebParts.IWebPart>介面中參考<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制項，以及如何<xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A>上控制項以宣告方式設定屬性。 請注意，是否您未提供實際的頁面上的 URL，然後使用者按一下標題列中的連結，出現錯誤訊息。  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      </Docs>
    </Member>
  </Members>
</Type>