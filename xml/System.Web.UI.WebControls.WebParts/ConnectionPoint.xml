<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8533d1bcb2037288a1d1f3165cc140cabc83d902" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51907115" /></Metadata><TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <TypeSignature Language="F#" Value="type ConnectionPoint = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>做為定義連接點物件的基底類別，這些物件可讓 Web 組件連接中的消費者控制項和提供者控制項共用資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web 組件中的每個連接是由兩個共用資料的伺服器控制項所組成： 其中一個控制項是取用者，另一個則是提供者。 如需 Web 組件連接和連接物件本身的基本元件的討論，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>類別概觀。 每個 Web 組件連接需要連接點。 提供者和消費者控制項都必須具有至少一個定義<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>可以共用 （其中每一個選擇可以有多個連接點） 的物件，其中包含如何控制項可以連接到另一個控制項和資料型別它的詳細資料。 在實際的連接中，該提供者有它自己的連接點物件類型 (衍生自基底<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別)，則<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>執行個體與取用者有自己的物件，<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>執行個體。  
  
 若要建立的提供者連接點，開發人員必須加入回呼方法會傳回實作的介面執行個體的取用者的提供者。 它們必須標示原始程式碼的回呼方法`ConnectionProvider`程式碼屬性 (請參閱<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>類別)。 同樣地，若要建立取用者連接點，開發人員必須將方法新增至取用者接收介面執行個體，而它們必須標示該方法具有`ConnectionConsumer`屬性 (請參閱<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>類別)。  
  
 當開發人員在網頁上建立連線時，它們可以建立為靜態或動態的連線。 在網頁標記中宣告靜態連接。 宣告靜態連接時，開發人員可以指定哪一個連接點會使用取用者和提供者指派值給`ProviderConnectionPointID`並`ConsumerConnectionPointID`屬性內`<asp:webpartconnection>`項目標記。 這個方法會特別有用，如果有多個連接點定義內的消費者和提供者的控制項，因為它可讓識別要用於連線的連接點的靜態連接。  
  
 開發人員的程式碼或透過使用者介面 (UI) 所提供的使用者以程式設計的方式，建立動態連接<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控制項。 若要在程式碼中建立的連線，開發人員必須取得的執行個體<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>藉由呼叫物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。 它們可以呼叫這個方法之前，開發人員必須取用者和提供者伺服器控制項和其各自的連接點物件的參考。 若要取得提供者和消費者控制項連接點的參考，開發人員第一次呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>並<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>上的方法<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。 這些方法會傳回適當的連接點物件，接著可以傳遞給建立連接的方法。  
  
 當提供者和取用者的連接點物件都使用相同類型的介面，它們相容而且可用以構成直接連線至共用資料。 如果無法使用相同的介面型別，<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>物件必須用來轉譯介面執行個體從提供者取用者可以使用的類型。  
  
 抽象<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別提供基底所共用的消費者和提供者控制項的連接點的詳細資料。 數個屬性會包含這些詳細資料。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>屬性會指出連接點是否可以參與多個連線一次。 根據預設，提供者連接點可以參與多個連接，而消費者連接點不能。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>屬性會指出連接點相關聯的伺服器控制項的型別。 請注意，並非只<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項可以形成連線; 的任何伺服器控制項，可以參與連線，如果放在啟用 ASP.NET 控制項、 自訂控制項，或使用者控制項、<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>屬性會提供可以顯示在 UI 中，以協助使用者建立連線的連接點的易記名稱。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>屬性可做為本身的連接點物件的字串識別項。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>屬性會指出了解何種介面執行個體的連接點。 指定的連接點會提供或取用該介面的執行個體是否取決於它是否<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>或<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別具有一種方法。 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>方法會傳回布林值，指出是否目前能夠參與連接的連接點。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別也有一個公用欄位， <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>。 此欄位會包含用來識別連接的預設連接點的值。  
  
> [!NOTE]
>  屬性指定連線點方法只能有一個必要的參數， `displayName`，因此可建立預設的連接點屬性，而不指定識別碼。 在此情況下，<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>欄位提供要使用的基底值。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立包含所需的 Web 組件連線<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>物件。 因為<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別是抽象基底類別，它的子類別-的執行個體<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>-是用來建立連接的實際物件。  
  
 此範例包含四個部分：  
  
-   使用者控制項，可讓您變更 Web 組件 頁面上顯示模式。  
  
-   來源介面和兩個程式碼<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項做為提供者和取用者連接。  
  
-   裝載的所有控制項，並執行程式碼範例的網頁。  
  
-   如何執行範例頁面的說明。  
  
 此程式碼範例的第一個部分是可讓使用者變更顯示模式，在網頁上的使用者控制項。 將以下的原始碼儲存到.ascx 檔，提供檔案名稱指派給`Src`屬性的`Register`這個使用者控制項指示詞，也就是裝載的 Web 網頁的頂端附近。 For 詳細資料會顯示在此控制項模式和原始碼的描述，請參閱[逐步解說： 變更 Web 組件頁面上顯示的模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 在程式碼範例的第二個部分是介面和控制項的原始程式碼。 原始程式檔包含一個簡單的介面，名為`IZipCode`。 另外還有<xref:System.Web.UI.WebControls.WebParts.WebPart>名為類別`ZipCodeWebPart`，實作介面，並做為提供者控制項。 其`ProvideIZipCode`方法是實作介面的唯一成員的回呼方法。 此方法只會傳回介面的執行個體。 請注意，方法標示為`ConnectionProvider`其中繼資料中的屬性。 這是將方法識別提供者的連接點的回呼方法的機制。 另<xref:System.Web.UI.WebControls.WebParts.WebPart>類別會命名為`WeatherWebPart`，並作為連線取用者。 這個類別具有一個名為方法`GetZipCode`所取得的執行個體`IZipCode`從提供者控制項的介面。 請注意，這個方法會標示為取用者的連接點方法`ConnectionConsumer`其中繼資料中的屬性。 這是用來識別的消費者控制項連接點方法的機制。  
  
 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確編譯它，然後將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您網站的 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 此程式碼範例會使用動態編譯。 如需示範如何編譯的逐步解說，請參閱 <<c0> [ 逐步解說： 開發和使用自訂 Web 伺服器控制項](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 在程式碼範例的第三個部分是網頁。 頁面頂端附近`Register`指示詞來註冊自訂控制項的連接，並可讓使用者變更的使用者控制項的頁面上顯示模式。 以宣告方式內建立連線本身`<staticconnections>`頁面上的項目。 您也可以以程式設計的方式; 建立連線這麼做的程式碼包含在`Button1_Click`方法。 以宣告方式或以程式設計方式建立連接時，是否一律必須指定連接點的提供者和取用者。 `Button2_Click`方法存取<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>物件的提供者和取用者，並將部分及其屬性值寫入頁面中的標籤。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 在瀏覽器頁面載入之後，請按一下**連接點的詳細資料** 按鈕。 建立宣告式的連接中的提供者和消費者連接點的相關資訊會出現。 接下來，使用**顯示模式**切換至頁面的下拉式清單控制項連接模式。 其中一個的動詞命令功能表上<xref:System.Web.UI.WebControls.WebParts.WebPart>（標題列中的向下箭號表示） 的控制項，按一下 connect 動詞命令。 自動建立 UI 出現後，連線`<asp:connectionszone>`網頁中宣告的控制項。 按一下 [**中斷連線**終止現有連線] 按鈕。 使用**顯示模式**返回頁面，即可瀏覽模式的控制項。 接下來，按一下**動態連接** 按鈕，以程式設計方式建立連接。 按一下 [**連線端點詳細資料**同樣地，表示兩個連接點物件的詳細資料] 按鈕。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Web 組件連線概觀</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowsMultipleConnections : bool" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出連接點是否支援多個同時連接。</summary>
        <value>如果連接點支援多個連接，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> 物件具有他們<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>屬性值設定為`true`(由<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>類別)，因為預設的 Web 組件控制項可讓表單連線至多位取用者的提供者連接點。  
  
 相反地，<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件具有其<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>屬性值設定為`false`(藉由<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>類別) 因為預設的 Web 組件控制項可讓取用者連接點，以連接到只有一個提供者時間。  
  
 您可以變更預設的行為有關多個連線指派不同的值給<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>（適用於提供者） 的屬性或<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType>屬性 （適用於消費者） 兩個<xref:System.Attribute>用於連接屬性的類別。 如果您啟用在同一時間連接至多個提供者的取用者連接點時，您的程式碼必須處理任何產生的同步處理問題。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>屬性都<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件。 此程式碼範例示範只包含程式碼來存取屬性; 的 Web 網頁完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別概觀。  
  
 中的程式碼`Button2_Click`方法的網頁存取<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>屬性在每個連接點物件，並將每個值寫入至標籤。 執行程式碼，即可**連接點的詳細資料**按鈕之後在瀏覽器載入頁面。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與連接點關聯之伺服器控制項的 <see cref="T:System.Type" />。</summary>
        <value><see cref="T:System.Type" />，表示控制項型別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>屬性通常是<xref:System.Web.UI.WebControls.WebParts.WebPart>型別。 不過，由於任何類型的使用者控制項或伺服器控制項可以參與連線已正確啟用並置於<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域，<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>屬性可以傳回其中一個其他伺服器控制項類型以及。  
  
 當伺服器控制項不是<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項放置在<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域，它們會使用包裝<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>物件在執行階段，因此它們可以當做<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，並參與連接。 這類控制項牽涉到在 [連線] 時，但<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>屬性值不會傳回<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>類型; 它會傳回的型別<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>物件的子控制項，也就是伺服器或使用者控制項的類型。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>屬性都<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件。 此程式碼範例示範只包含程式碼來存取屬性; 的 Web 網頁完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別概觀。  
  
 中的程式碼`Button2_Click`方法的網頁存取<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A>屬性在每個連接點物件，並將每個值寫入至標籤。 執行程式碼，即可**連接點的詳細資料**按鈕之後在瀏覽器載入頁面。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示字串，用來識別與伺服器控制項關聯之連接點集合中的預設連接點。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立連接點時，就可以取用者或提供者的原始程式碼中指定的連接點的 ID<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，請使用<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>或<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>屬性。 不過，當您新增至原始程式碼中的連接點屬性時，才`ID`參數是選擇性的。 如果在屬性中，未指定識別碼<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>欄位提供用來識別預設連接點的字串。  
  
 如果取用者或提供者的控制項中定義了多個連接點，就必須指定每個連接點的識別碼，以便可以在建立連接時，識別連接點。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得字串，此字串在使用者介面 (UI) 做為表示連接點的易記顯示名稱。</summary>
        <value>字串，包含 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" /> 物件的易記顯示名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要建立 Web 組件連接，連接的提供者和消費者控制項必須每個指定至少一個連接點，讓他們能夠通訊及共用資料的方法。 若要識別這些連接點方法，開發人員會指定屬性上選取的方法。 在 提供者，`ConnectionProvider`屬性設定所選的回呼方法中，與取用者，`ConnectionConsumer`接收的介面，包含從提供者的資料執行個體的方法設定屬性。 對於這兩個屬性，一律為必要項，不論哪個多載會宣告為建立屬性，一個參數是`displayName`參數。 開發人員必須指派要當做連接點的易記顯示名稱的字串，而該字串會變成值<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>屬性。  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>屬性值會顯示在網頁的 UI 中，當使用者建立的連線。 例如，當<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控制項加入至頁面上，它會建立 UI 的控制項之間建立連線的使用者。 使用者會切換成連接顯示模式的頁面，然後按一下連接動詞命令之後<xref:System.Web.UI.WebControls.WebParts.WebPart>控制，即會出現 UI 的連接。 可以參與連線的每個控制項列在 UI 中，而每個控制項旁會顯示其可用的連接點的易記名稱的下拉式清單控制項中。 使用者必須選取至少一個連接點，以建立連線。 顯示在清單中的連接點的值取自<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>屬性。 如果開發人員建置自訂的 UI 建立連線，則可以使用<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>類似的方式，來提供易記的名稱，表示連接點的屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member GetEnabled : System.Web.UI.Control -&gt; bool&#xA;override this.GetEnabled : System.Web.UI.Control -&gt; bool" Usage="connectionPoint.GetEnabled control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">與連接點關聯的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 或其他伺服器控制項。</param>
        <summary>傳回值，指出連接點是否可以參與連接。</summary>
        <returns>如果控制項可以建立參與連接的連接點，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>方法在基底<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別一律會傳回`true`，但是衍生的類別可以覆寫這個方法傳回`true`或`false`不同的時間為基礎的狀態`control`。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>方法，兩者<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件。 此程式碼範例示範只包含程式碼來存取屬性; 的 Web 網頁完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別概觀。  
  
 中的程式碼`Button2_Click`方法的網頁存取<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A>方法在每個連接點物件，並將每個值寫入至標籤。 執行程式碼，即可**連接點的詳細資料**按鈕之後在瀏覽器載入頁面。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ID : string" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得字串，其中包含連接點的識別項。</summary>
        <value>字串，包含連接點的識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當開發人員宣告<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>或是<xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute>屬性上控制項的原始程式碼中的方法，使方法可用來當做連接點，它不需要宣告`ID`連接點屬性的參數。 唯一必要的屬性是`displayName`參數。 預設識別碼指派給連接點，使用中的值<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>欄位。  
  
 如果控制項做為連接點中只有一個方法，它不需要指定連接點識別碼。 如果有多個方法指定為連接點，您必須指定每個; 的執行識別碼否則，會擲回例外狀況。 藉由指派識別碼給每個連接點，您也能讓指定的宣告中網頁的連線，或在程式碼中建立它們時要使用的連接點。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>屬性都<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件。 此程式碼範例示範只包含程式碼來存取屬性; 的 Web 網頁完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別概觀。  
  
 中的程式碼`Button2_Click`方法的網頁存取<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>屬性在每個連接點物件，並將每個值寫入至標籤。 執行程式碼，即可**連接點的詳細資料**按鈕之後在瀏覽器載入頁面。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InterfaceType : Type" Usage="System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得連接點所使用的介面型別。</summary>
        <value><see cref="T:System.Type" />，對應到控制項所提供或使用的介面型別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>屬性會指出連接點會使用何種介面。 這可協助判斷兩個控制項是否相容，而且能夠建立連接。 如果提供者連接點<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>消費者連接點的不同<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>，然後在兩個控制項不相容 （亦即，它們無法直接連接而不需要轉換程式），和<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>物件必須可用來建立連線。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>屬性都<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>和<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件。 此程式碼範例示範只包含程式碼來存取屬性; 的 Web 網頁完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別概觀。  
  
 中的程式碼`Button2_Click`方法的網頁存取<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>屬性在每個連接點物件，並將每個值寫入至標籤。 執行程式碼，即可**連接點的詳細資料**按鈕之後在瀏覽器載入頁面。  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
  </Members>
</Type>