<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a9f2b0bb2d48d11e3c00fcd8776e0fc19707f001" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53521948" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>匯入 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項 (或其他作為 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的 ASP.NET 伺服器控制項) 的描述檔案，以便讓使用者可以將控制項加入具有預先定義設定的網頁中。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項可讓使用者匯入描述檔案，描述設定對<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項或使用者想要加入的伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域。  
  
 在使用者匯入描述檔案之後,<xref:System.Web.UI.WebControls.WebParts.WebPart>檔案中參考的控制項就會出現在<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，以及使用者可以將控制項加入至頁面。  
  
 描述檔案不是控制項本身相同。 它是 XML 檔案的結尾。Web 組件擴充功能和包含名稱/值組，大部分的屬性值，描述控制項的狀態。 本主題中所述，描述檔案根據指定的 XML 格式，建立[Web 組件控制說明檔案](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)。  
  
 至於描述檔案是指的控制項，可以編譯成組件，或是在.ascx 檔案中定義的使用者控制項。 在任一情況下，裝載嘗試匯入控制項之網頁的 Web 伺服器上必須有匯入的描述檔中參考的控制項。 描述檔案參考，包含控制項、 控制項名稱和組件 （或檔案），並描述檔案包含會影響控制項的屬性值、 外觀及行為的設定。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項可讓使用者共用在控制項上的設定。 複雜的控制項有許多屬性和設定。 例如，在典型的內部網路站台內的大型公司，自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項可能會包含保存使用者的環境，例如其資料庫連線、 部門的資訊等等的特定值的屬性數目。 控制項也可能包含一些會影響其外觀的屬性。 一位使用者無法在特定站台上的將控制項個人化和讓它運作正常、 匯出描述檔控制項，以及再共用描述檔案與其他使用者，無法匯入檔案，將完整設定的控制項新增至其他內部網路可個人化的站台。 只要使用者控制項檔案，包含控制項的已編譯組件存在裝載其站台的 Web 伺服器上，使用者可以加入其他網站的控制項。  
  
 用使用者匯入描述檔案 （和其相關聯的伺服器控制項的因此） 到網頁的機制是<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>網頁開發人員必須新增至網頁的控制項。 當使用者切換頁面至目錄的顯示模式，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項就會出現，以及使用者可以使用者瀏覽至這個控制項。他們想要匯入對應至伺服器控制項的網頁組件描述檔案。 下列 UI 和所提供的指示<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，使用者便能夠將所需的伺服器控制項新增至網頁，其外觀和完整匯入的 description 檔案中設定所指定的屬性。  
  
 再<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項的說明檔可以匯入，使用者必須先建立 （匯出） 檔案會根據現有<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 描述檔案可以匯出控制項，如果符合下列條件：  
  
-   控制項有屬性標記為`Personalizable`屬性。  
  
-   Web.config 檔案有`enableExport`屬性值設定為`true`上`<webParts>`項目。  
  
-   開發人員設定的值<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>屬性的預設值以外的值在控制項上<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>，禁止匯出。 如果<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>屬性值設定為<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>，任何屬性，其中包含<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A>參數搭配`Personalizable`使用者匯出描述檔時，不會匯出屬性。 這可讓控制項開發人員，以防止敏感性資料，例如連接字串，在某些情況下匯出。  
  
 使用者可以匯出已啟用匯出，即可匯出動詞命令，會出現在動詞命令功能表的控制項，並遵循指示，儲存的控制項。Web 組件控制項的說明檔案。 其他使用者可以再匯入此檔案來設定他們自己的控制項的執行個體。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別包含數個屬性。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>屬性包含使用者指示的文字，在瀏覽以找出描述檔案時。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>屬性包含做為匯入控制項的標籤，因為它會出現內的文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>包含匯入控制項的描述，時，發生錯誤時顯示的文字。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>屬性會覆寫基底屬性，若要將指派的預設標題<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制如果開發人員不會指派一個標題。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性包含使用者上載描述檔中，按一下按鈕的文字和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性包含上傳程序的指示。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別也包含數個唯一的方法。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法擷取<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>每個物件<xref:System.Web.UI.WebControls.WebParts.WebPart>在目錄中，可讓控制項<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項來顯示每個伺服器控制項的相關資訊，而不需要建立它的執行個體。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法取得的特定執行個體<xref:System.Web.UI.WebControls.WebParts.WebPart>傳遞給方法的描述為基礎的控制項。  
  
 有一些與使用相關聯的固有風險<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 其中一個範例是您的 Web 應用程式匯入惡意資料，透過的 description 檔案，用來匯入的可能性。 如果有人將惡意程式碼置於 description 檔案中的字串屬性的值，然後執行該指令碼無法可能是當使用者匯入的說明檔案，並將參考的伺服器控制項加入至網頁。 匯入為惡意資料描述檔案的風險降到最低，具有字串型別屬性的伺服器控制項應該一律會將編碼的屬性資料。 另一項風險牽涉到透過描述檔案匯入類型 (請參閱[Web 組件控制說明檔案](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8))。 惡意使用者可以提交要求給載入許多組件載入<xref:System.AppDomain>，因而導致過多所耗用的記憶體數量。  
  
 若要避免與匯入相關聯的風險，您可以停用功能完全不使用 匯入功能或<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 或者，您可以限制哪些使用者可以存取控制項。 您可以執行這項操作以程式設計的方式，使用角色管理 (請參閱[管理授權使用角色](https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195))。 比方說，當頁面載入時，您可以測試以查看使用者是否為特定角色，例如系統管理員角色。 如果使用者是在角色中，您可以透過程式設計方式新增<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>到該使用者的網頁的控制項。 您也可以使用宣告式方法來限制一組可供使用者<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。  在您網頁中包含的類別目錄，您無法放置兩個<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項： 一個用於可以匯入的使用者，一個的人無法。 可以匯入的使用者的區域會包含<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 在區域本身可以放在<xref:System.Web.UI.WebControls.LoginView>控制項，可讓您限制使用的區域中的控制項，只有這些經過驗證的使用者或您指定的角色。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項以宣告方式和程式設計的方式，在網頁上。 此範例包含四個部分：  
  
-   使用者控制項，可讓您變更 Web 組件頁面上的顯示模式。  
  
-   包含網頁<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。  
  
-   原始程式碼檔，其中包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。  
  
-   在瀏覽器頁面載入時，此範例的運作方式的說明。  
  
 此程式碼範例的第一個部分是可讓使用者變更顯示模式，在網頁上的使用者控制項。 您應該將下列原始程式碼置於檔案並將它命名 Displaymodemenucs.ascx 或 Displaymodemenuvb.ascx （根據哪一個語言使用）。 For 詳細資料會顯示在此控制項模式和原始碼的描述，請參閱[逐步解說：變更顯示模式，在 Web 組件頁面](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 在程式碼範例的第二個部分是網頁。 在頁面頂端的兩個`register`指示詞，一個用於使用者控制項，一個用於編譯過的元件包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 請注意頁面都有的宣告式參考<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，適當的宣告式元素的階層內的巢狀。 也請注意，數個屬性值會以宣告方式在指派`<asp:importcatalogpart>`項目。 此外，`Button1_Click`方法來更新屬性值的數目上<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。  
  
 在頁面中的<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制項、 兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>宣告控制項。 `<aspSample:userinfowebpart>`控制項有`exportmode="all"`在其上的屬性。 這個屬性，才能啟用匯出控制項，然後可匯入由其他使用者想要匯入使用描述檔之控制項的描述檔案的使用者。  
  
> [!NOTE]
>  若要讓 Web 組件之應用程式匯出的描述檔案的使用者<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，您也必須啟用 Web 應用程式中的匯出功能，加上`enableExport="true"`屬性設定為`<webParts>`項目 (這是子系`<system.web>`項目) 的 Web.config 檔案中。 預設會停用匯出，所以如果您有尚未啟用匯出您的應用程式，編輯 Web.config 檔案，現在執行它。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 在程式碼範例的第三個部分是原始碼的兩個<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 請注意，這些控制項的某些屬性會標示`WebBrowsable`屬性。 這可讓<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>動態產生使用者介面 (UI)，讓使用者編輯這些屬性，當控制項處於編輯模式的控制項。 屬性也會標有`WebDisplayName`屬性，來指定標籤編輯 UI 中的每個控制項旁邊顯示的文字。 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確編譯它，然後將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您網站的 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 此程式碼範例會使用動態編譯。 如需示範這兩種編譯方法的逐步解說，請參閱[逐步解說：開發和使用自訂 Web 伺服器控制項](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 自訂控制項稱為`TextDisplayWebPart`網頁上參考`<aspSample:TextDisplayWebPart>`項目。 其他控制項，稱為`UserInfoWebPart`，也會宣告在網頁上一開始，但您將會移除這兩者來示範匯入控制項的描述檔案的能力。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 現在執行的程式碼範例。 載入網頁瀏覽器中。 第一個步驟是編輯`UserInfoWebPart`控制項。 使用**顯示模式**下拉式清單控制項，然後選取**編輯**切換頁面，即可編輯模式。 按一下 動詞命令功能表`UserInfoWebPart`控制項 （標題列中的向下箭頭），然後再按一下**編輯**。 數個編輯控制項時編輯 UI 出現後，會出現下方`UserInfoWebPart`控制項可供您編輯其欄位值。 編輯某些欄位，請按一下 **[確定]**，然後使用**顯示模式**下拉式清單，以傳回至瀏覽模式的頁面。  
  
 第二個步驟是匯出。Web 組件的描述檔案`UserInfoWebPart`控制項。 按一下 （標題列中向下箭號表示），在自訂控制項上的動詞命令功能表，然後按一下**匯出**。 請依照下列指示，儲存。Web 組件控制項的說明檔案。 現在關閉網頁，並編輯網頁原始檔編輯器中。 刪除`<aspSample:userinfowebpart>`控制宣告的項目，然後儲存並關閉檔案。 (您要執行此步驟，以模擬的使用者還沒有`UserInfoWebPart`控制項，以便您可以匯入的頁面控制項)。  
  
 載入網頁瀏覽器中，一次。 `UserInfoWebPart`控制項應該會出現，因為您已經將它移除。 使用**顯示模式**下拉式清單控制項，然後選取**目錄**切換至目錄模式的頁面。 在 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項中按一下 **瀏覽**按鈕，然後瀏覽至。網頁組件檔案所建立，然後按一下**上傳** 按鈕。 控制項的參考，應該會出現與旁的核取方塊。 選取核取方塊，然後按一下 **新增**將控制項加入至頁面。  
  
 在這個檢視的頁面時，按一下**更新 ImportCatalogPart**頁面，以查看以程式設計方式更新的屬性值的數目上的效果底部附近的按鈕<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 按一下按鈕後，觀察到的各種屬性如何變更在 UI 中。  
  
 最後，按一下**關閉**結束目錄模式，並傳回的頁面，即可瀏覽模式。 `UserInfoWebPart`控制項現在應該會出現在頁面中，其中包含您稍早匯出時，它所具有的值。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">Web 組件控制說明檔案</related>
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A>建構函式是預設值; 沒有建構函式中宣告<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別，因此不特殊的工作會執行建立類別的新執行個體時。 .NET Framework 來建立類別的執行個體，請以在內部使用建構函式。  
  
 通常您不需要使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A>建構函式，以程式設計方式在您自己的程式碼中。 控制項的用途是將它新增至頁面以宣告方式在設計階段的網頁開發人員。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定文字訊息，指示使用者瀏覽至描述檔的位置。</summary>
        <value>包含訊息文字的字串。 .NET Framework 會提供文化特性訊息做為預設值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>屬性可讓使用者第一件事，它們必須新增匯入的控制項的過程中執行的簡單概觀： 提供描述檔案的位置路徑中輸入或瀏覽至檔案。 提供自訂的值，這個屬性的常見原因是如果您有使用者，例如特定的網路共用的使用者應該瀏覽以找出描述檔案的特殊指示。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>屬性以宣告方式和程式設計的方式。 針對完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在本節中的程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>屬性值會以程式設計的方式指派。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項，以選取**目錄模式**並切換至 類別目錄模式的頁面。 目錄模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上載描述檔** 按鈕，幾個屬性在 UI 中的文字已變更，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>屬性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定按鈕，要在使用者介面 (UI) 中視為預設按鈕，並在呈現包含該按鈕的表單時接收焦點。 這個方法並非特意設計來從網頁開發人員程式碼呼叫。</summary>
        <value>字串，包含接收 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項中預設焦點之 <see cref="T:System.Web.UI.WebControls.Panel" /> 的 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性的程式碼會覆寫繼承自的基底屬性<xref:System.Web.UI.WebControls.Panel>類別，以隱藏來自設計工具的屬性，並防止它受主題的影響。 雖然它是公用的這個屬性會設定這個控制項的預設呈現的 Web 組件控制項在內部使用，並不適用於網頁開發人員。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱 <<c0> <xref:System.Web.UI.ThemeableAttribute> 並[ASP.NET 佈景主題和面板](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回目錄中可用 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的描述集合。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />，包含目錄中每一個控制項的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法提供實作抽象的基底方法宣告中<xref:System.Web.UI.WebControls.WebParts.CatalogPart>類別。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法會傳回目錄中的每個控制項的描述資訊。 請注意，如果是<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，可以有只有一個伺服器控制項在目錄中一次，即使方法可行，如果有多個控制項。  
  
 A<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>物件是包含的相關基本資訊的物件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，包括其識別碼、 控制和繼承自數個重要的屬性值的物件參考<xref:System.Web.UI.WebControls.WebParts.Part>類別，例如<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>和<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法可以改善效能。 建立目錄時，它必須包含，包括標題、 描述、 圖示 （如果有的話） 和識別碼。 每個控制項的一些資訊 而不必建立要取得這項資訊，每個控制項的執行個體<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>呼叫會建立目錄的區域<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法，並呼叫會傳回只將控制項，而不是執行個體的描述資訊控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>網頁上的方法。 此範例包含四個部分：  
  
-   使用者控制項，可讓您變更 Web 組件頁面上的顯示模式。  
  
-   包含網頁<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，以及使用的程式碼<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法。  
  
-   原始程式碼檔，其中包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。  
  
-   在瀏覽器頁面載入時，此範例的運作方式的說明。  
  
 此程式碼範例的第一個部分是可讓使用者變更顯示模式，在網頁上的使用者控制項。 您應該將下列原始程式碼置於檔案並將它命名 Displaymodemenucs.ascx 或 Displaymodemenuvb.ascx （根據哪一個語言使用）。 For 詳細資料會顯示在此控制項模式和原始碼的描述，請參閱[逐步解說：變更顯示模式，在 Web 組件頁面](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 在程式碼範例的第二個部分是網頁。 在頁面頂端的兩個`register`指示詞，一個用於使用者控制項，一個用於編譯過的元件包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 中頁面的標記以宣告方式參考這兩個這些控制項。 上的宣告式參考<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (同時開頭`aspSample`前置詞)，請注意，每個有`exportMode="all"`加入它的屬性。 這個屬性可讓您匯出。Web 組件控制項，您將用於後續步驟匯入至網頁的控制項的說明檔案。  
  
> [!NOTE]
>  若要讓 Web 組件之應用程式匯出的描述檔案的使用者<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，您也必須啟用 Web 應用程式中的匯出功能，加上`enableExport="true"`屬性設定為`<webParts>`項目 (這是子系`<system.web>`項目) 的 Web.config 檔案中。 預設會停用匯出，所以如果您有尚未啟用匯出您的應用程式，編輯 Web.config 檔案，現在執行它。  
  
 網頁也有的宣告式參考<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，適當的宣告式元素的階層內的巢狀。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>內的程式碼呼叫方法`Button1_Click`方法。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 在程式碼範例的第三個部分是原始碼的兩個<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確編譯它，然後將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您網站的 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 此程式碼範例會使用動態編譯。 如需示範這兩種編譯方法的逐步解說，請參閱[逐步解說：開發和使用自訂 Web 伺服器控制項](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 現在執行的程式碼範例。 載入網頁瀏覽器中。 第一個步驟是匯出。每個 web 組件描述檔案<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (如`TextDisplayWebPart`以及`UserInfoWebPart`控制項)。 針對每個控制項中，按一下 （標題列中向下箭號表示），在控制項上的動詞命令功能表，然後按一下**匯出**。 請依照下列指示，儲存。Web 組件控制項的說明檔案。 您已匯出的每個控制項的描述檔案之後，關閉網頁，並編輯網頁原始檔編輯器中。 刪除`<aspSample:userinfowebpart>`而`<aspSample:textdisplaywebpart>`控制宣告項目，然後儲存並關閉檔案。 （您在進行此步驟，以模擬還沒有這些控制項，因此您可以將控制項匯入至頁面的使用者。）  
  
 載入網頁瀏覽器中，一次。 使用**顯示模式**下拉式清單控制項，然後選取**目錄**切換至目錄模式的頁面。 在 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項中按一下 **瀏覽**按鈕，瀏覽至。選取其中一個，您所建立的 web 組件檔案，然後按一下 **上傳** 按鈕。 控制項的參考，應該會出現與旁的核取方塊。 選取核取方塊，然後按一下 **新增**將控制項加入至頁面。 重複此程序的另一個控制項。  
  
 在這個檢視的頁面時，按一下**取得 web 組件描述**按鈕以查看效果，以程式設計方式存取的頁面底部附近<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>物件中目前載入的控制項的描述<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 用來存取描述詳細資料的方法中找到`Button1_Click`的頁面原始碼，方法是<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法。 在按鈕下方的標籤會顯示控制項的相關基本詳細資料。  
  
 在新增之後的第一個控制項，重複此程序將第二個控制項新增至頁面。 最後，按一下**關閉**結束目錄模式，並傳回的頁面，即可瀏覽模式。 這兩個自訂控制項現在應該會出現在頁面中，其中包含您稍早匯出描述檔案時所具有的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />，包含有關控制項的詳細資訊。</param>
        <summary>根據傳入方法中描述的值，傳回 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的參考。</summary>
        <returns>其描述與 <paramref name="description" /> 之值相符的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法會傳回參考<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，其描述的詳細資料符合的值<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>物件傳遞至方法。 一般而言，這個方法可搭配使用時<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法，用來擷取目錄中的控制項的描述。 個別<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項可以再擷取或操作所傳遞個別<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>物件到<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>網頁上的方法。 此範例包含四個部分：  
  
-   使用者控制項，可讓您變更 Web 組件頁面上的顯示模式。  
  
-   包含網頁<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，以及使用的程式碼<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法。  
  
-   原始程式碼檔，其中包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。  
  
-   在瀏覽器頁面載入時，此範例的運作方式的說明。  
  
 此程式碼範例的第一個部分是可讓使用者變更顯示模式，在網頁上的使用者控制項。 您應該將下列原始程式碼置於檔案並將它命名 Displaymodemenucs.ascx 或 Displaymodemenuvb.ascx （根據哪一個語言使用）。 For 詳細資料會顯示在此控制項模式和原始碼的描述，請參閱[逐步解說：變更顯示模式，在 Web 組件頁面](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 在程式碼範例的第二個部分是網頁。 在頁面頂端的兩個`register`指示詞，一個用於使用者控制項，一個用於編譯過的元件包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 中頁面的標記以宣告方式參考這兩個這些控制項。 上的宣告式參考<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (同時開頭`aspSample`前置詞)，請注意，每個有`exportMode="all"`加入它的屬性。 這個屬性可讓您匯出。Web 組件控制項，您將用於後續步驟匯入至網頁的控制項的說明檔案。  
  
> [!NOTE]
>  若要讓 Web 組件之應用程式匯出的描述檔案的使用者<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，您也必須啟用 Web 應用程式中的匯出功能，加上`enableExport="true"`屬性設定為`<webParts>`項目 (這是子系`<system.web>`項目) 的 Web.config 檔案中。 預設會停用匯出，所以如果您有尚未啟用匯出您的應用程式，編輯 Web.config 檔案，現在執行它。  
  
 網頁也有的宣告式參考<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，適當的宣告式元素的階層內的巢狀。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>內的程式碼呼叫方法`Button2_Click`方法。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 在程式碼範例的第三個部分是原始碼的兩個<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確編譯它，然後將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您網站的 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 此程式碼範例會使用動態編譯。 如需示範這兩種編譯方法的逐步解說，請參閱[逐步解說：開發和使用自訂 Web 伺服器控制項](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 現在執行的程式碼範例。 載入網頁瀏覽器中。 第一個步驟是匯出。每個 web 組件描述檔案<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (如`TextDisplayWebPart`以及`UserInfoWebPart`控制項)。 針對每個控制項中，按一下 （標題列中向下箭號表示），在控制項上的動詞命令功能表，然後按一下**匯出**。 請依照下列指示，儲存。Web 組件控制項的說明檔案。 您已匯出的每個控制項的描述檔案之後，關閉網頁，並編輯網頁原始檔編輯器中。 刪除`<aspSample:userinfowebpart>`而`<aspSample:textdisplaywebpart>`控制宣告項目，然後儲存並關閉檔案。 （您在進行此步驟，以模擬還沒有這些控制項，因此您可以將控制項匯入至頁面的使用者。）  
  
 載入網頁瀏覽器中，一次。 使用**顯示模式**下拉式清單控制項，然後選取**目錄**切換至目錄模式的頁面。 在 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項中按一下 **瀏覽**按鈕，瀏覽至。選取其中一個，您所建立的 web 組件檔案，然後按一下 **上傳** 按鈕。 控制項的參考，應該會出現與旁的核取方塊。 既然控制項描述上傳至<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項中按一下 **使用 GetWebPart**靠近頁面底部的按鈕。 這將示範呼叫的效果<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法並傳遞給它中目前載入的控制項描述<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 請注意，相關聯的伺服器控制項立即新增到網頁上，按一下，使用者無需**新增** 按鈕。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法中稱為`Button2_Click`的頁面原始碼，方法會傳回<xref:System.Web.UI.WebControls.WebParts.WebPart>中所載入的目前描述相關聯的控制項<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 下一步<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>呼叫方法時，和<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項直接加入至頁面。 這示範了如何新增控制項以程式設計方式從<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項不需要使用者介入。  
  
 在新增之後的第一個控制項，重複此程序將第二個控制項新增至頁面。 最後，按一下**關閉**結束目錄模式，並傳回的頁面，即可瀏覽模式。 這兩個自訂控制項現在應該會出現在頁面中，其中包含您稍早匯出描述檔案時所具有的值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="description" /> 不是可用的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> 值。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在使用者匯入代表或描述匯入控制項之目錄中的匯入控制項之描述檔以後，取得或設定顯示的文字。</summary>
        <value>包含標籤文字的字串。 .NET Framework 會提供文化特性訊息做為預設值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>屬性通常用來包含描述中包含之控制項的簡短的一般標籤<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>屬性以宣告方式和程式設計的方式。 針對完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在本節中的程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>屬性值會以程式設計的方式指派。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項，以選取**目錄模式**並切換至 類別目錄模式的頁面。 目錄模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上載描述檔** 按鈕，幾個屬性在 UI 中的文字已變更，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>屬性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果在匯入處理序期間發生錯誤，則取得或設定所顯示的錯誤訊息。</summary>
        <value>包含標籤文字的字串。 .NET Framework 會提供文化特性訊息做為預設值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>屬性可用於某些問題或錯誤發生時的頁面嘗試匯入描述檔案時，通知使用者。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>屬性以宣告方式和程式設計的方式。 針對完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在本節中的程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>屬性值會以程式設計的方式指派。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項，以選取**目錄模式**並切換至 類別目錄模式的頁面。 目錄模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上載描述檔** 按鈕，幾個屬性在 UI 中的文字已變更，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>屬性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示在 <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> 控制項標題列中的標題。</summary>
        <value>做為控制項標題的字串。 預設值是 Web 組件控制項集合所提供的計算控制項名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>屬性值會顯示在標題列<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制控制項時顯示在目錄模式。 在頁面中宣告控制項時，您可以透過設定屬性的值`Title`屬性。 如果您未提供標題的值，特定文化特性的預設值用來描述這個控制項可讓使用者編輯的屬性類型。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>屬性以宣告方式和程式設計的方式。 針對完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在本節中的程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>屬性值會以程式設計的方式指派。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項，以選取**目錄模式**並切換至 類別目錄模式的頁面。 目錄模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上載描述檔** 按鈕，幾個屬性在 UI 中的文字已變更，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>屬性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項的文字，初始化描述檔的上載。</summary>
        <value>用來做為 <see cref="T:System.Web.UI.WebControls.Button" /> 之文字的字串。 預設值是 Web 組件控制集所提供的文化特性字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性提供的文字<xref:System.Web.UI.WebControls.Button>起始上傳程序的控制項。 如果這個屬性，或指派自訂文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性，文字應該清楚使用者已上載描述檔。 文字不應該假設，或是代表可以上傳程序實際上上傳控制項本身。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性以宣告方式和程式設計的方式。 針對完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在本節中的程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性值會以程式設計的方式指派。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項，以選取**目錄模式**並切換至 類別目錄模式的頁面。 目錄模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上載描述檔** 按鈕，幾個屬性在 UI 中的文字已變更，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定訊息文字，告訴使用者如何上載描述檔。</summary>
        <value>用來做為使用者上載描述檔之指示的字串。 預設值是 Web 組件控制集所提供的文化特性字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性會提供簡短的句子或片語的使用者，告知他們按一下按鈕來上傳描述檔案的指示。 如果這個屬性，或指派自訂文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性，文字應該清楚使用者已上載描述檔。 文字不應該假設，或是代表可以上傳程序實際上上傳控制項本身。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性以宣告方式和程式設計的方式。 針對完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在本節中的程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性值會以程式設計的方式指派。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項，以選取**目錄模式**並切換至 類別目錄模式的頁面。 目錄模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上載描述檔** 按鈕，幾個屬性在 UI 中的文字已變更，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
      </Docs>
    </Member>
  </Members>
</Type>