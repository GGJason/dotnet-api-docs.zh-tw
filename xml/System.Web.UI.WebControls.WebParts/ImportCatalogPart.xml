<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="17bfe4fc2991ca45ffb31cad133a61b48da42cfa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30591092" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>匯入 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項 (或其他用做 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的 ASP.NET 伺服器控制項) 的描述檔，以便讓使用者可以將控制項加入具有預先定義之設定的 Web 網頁。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項可讓使用者匯入描述設定的描述檔案<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項或使用者想要加入的伺服器控制項<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域。  
  
 在使用者匯入描述檔案之後,<xref:System.Web.UI.WebControls.WebParts.WebPart>檔案中參考的控制項就會出現內<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，以及使用者可以將控制項加入至頁面。  
  
 描述檔案不是控制項本身相同。 它是結尾的 XML 檔案。Web 組件擴充功能和包含名稱/值組-大部分屬性值，描述控制項的狀態。 本主題中所述，描述檔案根據指定的 XML 格式，建立[Web 組件控制項的說明檔案](http://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)。  
  
 至於說明檔所參考的控制項，可以編譯成組件，或它可以是.ascx 檔案中定義的使用者控制項。 在任一情況下，裝載嘗試匯入控制項的頁面的 Web 伺服器上必須有匯入的描述檔中參考的控制項。 描述檔案的參考名稱和組件 （或檔案） 包含控制項的控制項，並描述檔案包含會影響控制項的屬性值、 外觀和行為的設定。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項可讓使用者在控制項上的設定共用。 為複雜控制項可以有許多屬性和設定。 例如，在典型的內部網路內的網站的大型公司自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項可能會包含保留使用者的環境，例如其資料庫連線、 部門的詳細資訊，以及其他特定值的屬性數目。 控制項也可能包含一些會影響其外觀的屬性。 一位使用者無法個人化特定站台上的控制項和取得正常運作，匯出描述檔案的控制項，且然後與其他使用者，使用者可以匯入的完整設定的控制項加入其他內部網路檔案共用描述檔案他們可以個人化的站台。 只要 Web 伺服器裝載其站台上有編譯的組件或使用者控制項檔案，包含控制項，使用者可以將控制項加入至其他網站。  
  
 依據使用者匯入描述檔案 （並因此其相關聯的伺服器控制） 到網頁的機制是<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>網頁開發人員必須新增到網頁的控制項。 當使用者切換至目錄的顯示模式，頁面<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項就會出現，而且使用者可以使用者瀏覽至這個控制項。他們想要匯入對應加入伺服器控制項的網頁組件描述檔。 下列 UI 和所提供的指示<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，使用者就可以將所需的伺服器控制項加入至網頁的外觀和完整匯入的 description 檔案中設定所指定的屬性。  
  
 之前<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項的說明檔可以匯入，所以使用者必須先建立 （匯出） 檔案會根據現有<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 描述檔案可以匯出控制項必須符合下列條件：  
  
-   控制項有標示了`Personalizable`屬性。  
  
-   Web.config 檔案具有`enableExport`屬性值設定為`true`上`<webParts>`項目。  
  
-   開發人員設定的值<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>屬性的預設值以外的值在控制項上<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>，而且禁止匯出。 如果<xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>屬性值設定為<xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>，任何屬性，其中包含<xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A>參數`Personalizable`屬性不會匯出時使用者會將匯出的描述檔案。 這可讓控制項開發人員若要避免敏感性資料，例如連接字串，在某些情況下匯出。  
  
 使用者可以匯出已啟用匯出，即可匯出動詞命令的控制項，然後遵循指示，儲存的動詞命令功能表中出現的控制項。Web 組件控制項的說明檔案。 其他使用者，可以再匯入此檔案，以設定自己的控制項執行個體。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別包含數個屬性。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>屬性包含的使用者指示的文字，在瀏覽來尋找說明檔案時。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>屬性包含文字做為匯入之控制項的標籤，出現於<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>包含控制項說明匯入時，發生錯誤時顯示的文字。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>屬性會覆寫基底屬性，若要指派的預設標題<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制如果開發人員不會指派一個標題。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性包含描述檔案中上, 傳的使用者按一下按鈕的文字和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性包含上傳程序的指示。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別也包含數個唯一的方法。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法擷取<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>物件給每個<xref:System.Web.UI.WebControls.WebParts.WebPart>在目錄中，可讓控制項<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項來顯示每個伺服器控制項的相關資訊，而不需要建立它的執行個體。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法取得的特定執行個體<xref:System.Web.UI.WebControls.WebParts.WebPart>傳遞給方法的描述為基礎的控制項。  
  
 有一些與使用相關聯的固有風險<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 其中一個範例是 Web 應用程式匯入惡意的資料，透過用來匯入的 description 檔案中的可能性。 如果有人將惡意程式碼置於做為 description 檔案中的字串屬性的值，然後該指令碼無法可能必須執行時使用者匯入描述檔案，並將參考的伺服器控制項加入至 Web 網頁。 匯入具有惡意資料描述檔案的風險降到最低，沒有字串型別屬性的伺服器控制項一律應編碼屬性資料。 另一個風險牽涉到透過描述檔案匯入類型 (請參閱[Web 組件控制項的說明檔案](http://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8))。 惡意使用者可以提交要求以載入至許多組件<xref:System.AppDomain>，並產生過多所耗用的記憶體數量。  
  
 若要避免匯入相關聯的風險，您可以完全停用此功能不使用 匯入功能或<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 您也可以限制哪些使用者有權存取控制項。 您無法執行這項操作以程式設計的方式，使用角色管理 (請參閱[管理授權使用角色](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195))。 比方說，當網頁載入時，您無法測試以檢查使用者是否為特定角色，例如系統管理員角色。 如果使用者是在角色中，您無法以程式設計方式加入<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制該使用者的頁面。 您也可以使用宣告式方法來限制一組可讓使用者<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。  中包含的類別目錄網頁，您無法放置兩個<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項： 一個用於可以匯入的使用者，一個的人員無法。 會包含可以匯入的使用者的區域<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 區域本身無法放在<xref:System.Web.UI.WebControls.LoginView>控制項，可讓您限制區域中控制項的使用，僅限所驗證的使用者或您指定的角色。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制以宣告方式並以程式設計方式在網頁上。 此範例包含四個部分：  
  
-   使用者控制項，可讓您變更 Web 組件頁面上的顯示模式。  
  
-   網頁包含<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。  
  
-   原始程式碼檔，其中包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。  
  
-   當您載入瀏覽器中的，此範例的運作方式的說明。  
  
 這個程式碼範例的第一個部分是使用者控制項，可讓使用者變更網頁上的顯示模式。 您應該將下列原始程式碼放在檔案並將其命名 Displaymodemenucs.ascx 或 Displaymodemenuvb.ascx （依據哪一種語言使用）。 如需詳細資料會顯示此控制項中模式和原始碼的說明，請參閱[逐步解說： 變更 Web 組件頁面上顯示的模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 程式碼範例的第二個部分是 Web 網頁。 在頁面的頂端是兩個`register`指示詞，其中一個使用者控制項，一個用於編譯過的元件包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 請注意此頁面具有的宣告式參考<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，巢狀方式置於適當的宣告式元素的階層。 另請注意，會以宣告方式在指派數個屬性值`<asp:importcatalogpart>`項目。 此外，`Button1_Click`方法上更新的屬性值的數字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。  
  
 在頁面<xref:System.Web.UI.WebControls.WebParts.WebPartZone>控制項、 兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項所宣告。 `<aspSample:userinfowebpart>`控制項有`exportmode="all"`在其上的屬性。 若要讓匯出的控制項，則會匯入的其他使用者想要匯入使用描述檔案的控制項的描述檔案的使用者都需要此屬性。  
  
> [!NOTE]
>  若要啟用 Web 組件應用程式匯出的描述檔案的使用者<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，您也必須啟用 Web 應用程式中的匯出功能，藉由新增`enableExport="true"`屬性`<webParts>`元素 (的子系`<system.web>`元素) 的 Web.config 檔案中。 預設為停用匯出，因此如果您未啟用匯出您的應用程式，編輯 Web.config 檔案，並且立即執行它的作業。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 程式碼範例的第三個部分是兩個的原始程式碼<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 請注意，這些控制項的某些屬性會標記為`WebBrowsable`屬性。 這可讓<xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart>動態產生使用者編輯這些屬性，當控制項處於編輯模式時的使用者介面 (UI) 控制項。 屬性也會標示`WebDisplayName`屬性，以指定的編輯 UI 中的每個控制項旁出現的標籤文字。 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確地進行編譯，並將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您的網站 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 這個程式碼範例會使用動態編譯。 如需示範這兩個編譯方法的逐步解說，請參閱[逐步解說： 開發和使用自訂 Web 伺服器控制項](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 自訂控制項稱為`TextDisplayWebPart`參考在網頁上與`<aspSample:TextDisplayWebPart>`項目。 其他控制項，稱為`UserInfoWebPart`，也已經宣告在網頁上一開始，但您將會移除更新版本，才能示範匯入一個控制項的描述檔案的能力。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 現在，執行程式碼範例。 載入網頁瀏覽器中。 第一個步驟是編輯`UserInfoWebPart`控制項。 使用**顯示模式**下拉式清單控制項，然後選取**編輯**若要將頁面切換至編輯模式。 按一下的動詞命令功能表`UserInfoWebPart`控制項 （標題列中的向下箭頭），然後再按一下**編輯**。 數個編輯控制項的編輯 UI 出現時，請參閱下文`UserInfoWebPart`控制項可讓您編輯其欄位的值。 編輯某些欄位，請按一下**確定**，然後使用**顯示模式**返回頁面，即可瀏覽模式的下拉式清單。  
  
 第二個步驟是匯出。Web 組件描述檔`UserInfoWebPart`控制項。 按一下 （標題列中向下箭號表示），在自訂控制項上的動詞命令功能表，然後按一下**匯出**。 請依照下列指示，儲存。Web 組件控制項的說明檔案。 現在關閉網頁上，並編輯網頁原始檔編輯器中。 刪除`<aspSample:userinfowebpart>`控制宣告項目，然後儲存並關閉檔案。 (您在進行此步驟，以模擬的使用者還沒有`UserInfoWebPart`控制，讓您可以將控制項匯入至頁面)。  
  
 載入網頁瀏覽器中一次。 `UserInfoWebPart`控制項不應該出現，因為您已經將它移除。 使用**顯示模式**下拉式清單控制項，然後選取**目錄**，將頁面切換至目錄模式。 在<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制，請按一下**瀏覽**按鈕，然後瀏覽至。Web 組件檔案所建立，然後按一下 [**上傳**] 按鈕。 控制項的參考，應該會出現旁邊的核取方塊。 選取核取方塊，然後按一下 **新增**將控制項加入至頁面。  
  
 當您在這個檢視的頁面中，按一下**更新 ImportCatalogPart**按鈕的效果，以程式設計方式更新的屬性值的數目上的頁面底部附近<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 按一下按鈕後，觀察方式會在 UI 中變更的各種屬性。  
  
 最後，按一下 **關閉**結束目錄模式，傳回的頁面，即可瀏覽模式。 `UserInfoWebPart`控制項現在應該會出現在頁面中，包含先前匯出時的值。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A>建構函式是預設值，則沒有建構函式宣告中<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別，因此沒有特殊的工作會執行建立類別的新執行個體時。 .NET Framework 內部使用建構函式建立類別的執行個體。  
  
 通常您不需要使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A>建構函式，以程式設計方式在自己的程式碼。 控制項的用途是網頁程式開發人員將它加入至網頁以宣告方式在執行階段。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定文字訊息，指示使用者瀏覽至描述檔的位置。</summary>
        <value>包含訊息文字的字串。 .NET Framework 會提供文化特性訊息做為預設值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>屬性可讓使用者第一件事，它們必須正在加入匯入的控制項執行簡單的概觀： 路徑中輸入或瀏覽至檔案中提供的描述檔案位置。 提供這個屬性的自訂值的常見原因是如果您有特殊的指示，針對使用者，例如特定的網路共用的使用者應該瀏覽來尋找說明檔。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>屬性以宣告方式和程式設計的方式。 如完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在這段程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>以程式設計的方式指派屬性值。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項以選取**目錄模式**並將頁面切換至 類別目錄的模式。 類別目錄的模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上傳描述檔案**變更 按鈕，在 UI 中屬性的文字，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定按鈕，要在使用者介面 (UI) 中視為預設按鈕，並在呈現包含該按鈕的表單時接收焦點。 這個方法並非特意設計來從網頁開發人員程式碼呼叫。</summary>
        <value>字串，包含接收 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項中預設焦點之 <see cref="T:System.Web.UI.WebControls.Panel" /> 的 ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性的程式碼會覆寫繼承自基底屬性<xref:System.Web.UI.WebControls.Panel>類別，以隱藏的屬性，從設計工具，並防止它受到佈景主題。 雖然是公用的這個屬性由設定此控制項的預設呈現的 Web 組件控制項內部使用，並不是網頁開發人員所使用。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回目錄中可用 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的描述集合。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />，包含目錄中每一個控制項的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法提供實作抽象基底方法宣告中<xref:System.Web.UI.WebControls.WebParts.CatalogPart>類別。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法會傳回每個控制項的描述資訊的目錄中。 請注意，如果是<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，可以有只有一個伺服器控制項類別目錄中一次，即使方法會在多個控制項一樣運作。  
  
 A<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>物件是必要的資訊包含有關物件<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，包括其識別碼、 將控制項，以及繼承自的幾個重要屬性的值的物件參考<xref:System.Web.UI.WebControls.WebParts.Part>類別，例如<xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>和<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>。  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法可改善效能。 當建立目錄時，需要一些資訊其中的內容，包括標題、 描述、 圖示 （如果有的話） 和 id。 每個控制項 而不必建立要取得這項資訊，每個控制項的執行個體<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>呼叫會建立類別目錄的區域<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法，並在呼叫傳回只描述資訊的控制項，而不是執行個體控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>網頁上的方法。 此範例包含四個部分：  
  
-   使用者控制項，可讓您變更 Web 組件頁面上的顯示模式。  
  
-   網頁包含<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，以及使用的程式碼<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法。  
  
-   原始程式碼檔，其中包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。  
  
-   當您載入瀏覽器中的，此範例的運作方式的說明。  
  
 這個程式碼範例的第一個部分是使用者控制項，可讓使用者變更網頁上的顯示模式。 您應該將下列原始程式碼放在檔案並將其命名 Displaymodemenucs.ascx 或 Displaymodemenuvb.ascx （依據哪一種語言使用）。 如需詳細資料會顯示此控制項中模式和原始碼的說明，請參閱[逐步解說： 變更 Web 組件頁面上顯示的模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 程式碼範例的第二個部分是 Web 網頁。 在頁面的頂端是兩個`register`指示詞，其中一個使用者控制項，一個用於編譯過的元件包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 網頁的標記中以宣告方式參考兩個這些控制項。 上的宣告式參考<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (兩者開頭`aspSample`前置詞)，請注意，每個有`exportMode="all"`屬性新增至其中。 這個屬性可讓您匯出。Web 組件的控制項，您會在中使用更新的版本逐步匯入到網頁的控制項的描述檔案。  
  
> [!NOTE]
>  若要啟用 Web 組件應用程式匯出的描述檔案的使用者<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，您也必須啟用 Web 應用程式中的匯出功能，藉由新增`enableExport="true"`屬性`<webParts>`元素 (的子系`<system.web>`元素) 的 Web.config 檔案中。 預設為停用匯出，因此如果您未啟用匯出您的應用程式，編輯 Web.config 檔案，並且立即執行它的作業。  
  
 網頁也具有宣告式參考<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，巢狀方式置於適當的宣告式元素的階層。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>內的程式碼呼叫方法`Button1_Click`方法。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 程式碼範例的第三個部分是兩個的原始程式碼<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確地進行編譯，並將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您的網站 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 這個程式碼範例會使用動態編譯。 如需示範這兩個編譯方法的逐步解說，請參閱[逐步解說： 開發和使用自訂 Web 伺服器控制項](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 現在，執行程式碼範例。 載入網頁瀏覽器中。 第一個步驟是匯出。每個 web 組件描述檔<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (如`TextDisplayWebPart`和`UserInfoWebPart`控制項)。 針對每個控制項中，按一下 動詞命令功能表 （標題列中向下箭號表示），在控制項上的，按一下**匯出**。 請依照下列指示，儲存。Web 組件控制項的說明檔案。 您已匯出的每個控制項的描述檔案之後，關閉網頁，並編輯網頁原始檔編輯器中。 刪除`<aspSample:userinfowebpart>`和`<aspSample:textdisplaywebpart>`控制宣告項目，然後儲存並關閉檔案。 （您進行此步驟，以模擬還沒有這些控制項，讓您可以將控制項匯入至頁面的使用者）。  
  
 載入網頁瀏覽器中一次。 使用**顯示模式**下拉式清單控制項，然後選取**目錄**，將頁面切換至目錄模式。 在<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制，請按一下**瀏覽**按鈕，瀏覽至。選取其中一個，您所建立的 web 組件檔案，然後按一下 [**上傳**] 按鈕。 控制項的參考，應該會出現旁邊的核取方塊。 選取核取方塊，然後按一下 **新增**將控制項加入至頁面。 其他控制項，重複此程序。  
  
 當您在這個檢視的頁面中，按一下**取得網頁組件描述**按鈕的效果，以程式設計方式存取的頁面底部附近<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>物件中目前載入的控制項說明<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 用來存取說明的詳細資訊，此方法找到中`Button1_Click`網頁的來源，方法是<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A>方法。 在按鈕下方的標籤會顯示此控制項的相關基本詳細資料。  
  
 新增之後的第一個控制項，重複此程序將第二個控制項加入頁面。 最後，按一下 **關閉**結束目錄模式，傳回的頁面，即可瀏覽模式。 兩個自訂控制項現在應該會出現在頁面中，其中包含您稍早匯出的說明檔案時所具有的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />，包含有關控制項的詳細資訊。</param>
        <summary>根據傳入方法中描述的值，傳回 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的參考。</summary>
        <returns>其描述與 <paramref name="description" /> 之值相符的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法傳回的參考<xref:System.Web.UI.WebControls.WebParts.WebPart>控制其描述詳細資料相符的值<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>物件傳遞至方法。 一般而言，這個方法會搭配<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A>方法，用來擷取類別目錄中的控制項的描述。 個別<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項可以再擷取或操作所需藉由傳遞個別<xref:System.Web.UI.WebControls.WebParts.WebPartDescription>物件加入至<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>網頁上的方法。 此範例包含四個部分：  
  
-   使用者控制項，可讓您變更 Web 組件頁面上的顯示模式。  
  
-   網頁包含<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，以及使用的程式碼<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法。  
  
-   原始程式碼檔，其中包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。  
  
-   當您載入瀏覽器中的，此範例的運作方式的說明。  
  
 這個程式碼範例的第一個部分是使用者控制項，可讓使用者變更網頁上的顯示模式。 您應該將下列原始程式碼放在檔案並將其命名 Displaymodemenucs.ascx 或 Displaymodemenuvb.ascx （依據哪一種語言使用）。 如需詳細資料會顯示此控制項中模式和原始碼的說明，請參閱[逐步解說： 變更 Web 組件頁面上顯示的模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 程式碼範例的第二個部分是 Web 網頁。 在頁面的頂端是兩個`register`指示詞，其中一個使用者控制項，一個用於編譯過的元件包含兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 網頁的標記中以宣告方式參考兩個這些控制項。 上的宣告式參考<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (兩者開頭`aspSample`前置詞)，請注意，每個有`exportMode="all"`屬性新增至其中。 這個屬性可讓您匯出。Web 組件的控制項，您會在中使用更新的版本逐步匯入到網頁的控制項的描述檔案。  
  
> [!NOTE]
>  若要啟用 Web 組件應用程式匯出的描述檔案的使用者<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，您也必須啟用 Web 應用程式中的匯出功能，藉由新增`enableExport="true"`屬性`<webParts>`元素 (的子系`<system.web>`元素) 的 Web.config 檔案中。 預設為停用匯出，因此如果您未啟用匯出您的應用程式，編輯 Web.config 檔案，並且立即執行它的作業。  
  
 網頁也具有宣告式參考<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項，巢狀方式置於適當的宣告式元素的階層。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>內的程式碼呼叫方法`Button2_Click`方法。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 程式碼範例的第三個部分是兩個的原始程式碼<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確地進行編譯，並將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您的網站 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 這個程式碼範例會使用動態編譯。 如需示範這兩個編譯方法的逐步解說，請參閱[逐步解說： 開發和使用自訂 Web 伺服器控制項](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 現在，執行程式碼範例。 載入網頁瀏覽器中。 第一個步驟是匯出。每個 web 組件描述檔<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 (如`TextDisplayWebPart`和`UserInfoWebPart`控制項)。 針對每個控制項中，按一下 動詞命令功能表 （標題列中向下箭號表示），在控制項上的，按一下**匯出**。 請依照下列指示，儲存。Web 組件控制項的說明檔案。 您已匯出的每個控制項的描述檔案之後，關閉網頁，並編輯網頁原始檔編輯器中。 刪除`<aspSample:userinfowebpart>`和`<aspSample:textdisplaywebpart>`控制宣告項目，然後儲存並關閉檔案。 （您進行此步驟，以模擬還沒有這些控制項，讓您可以將控制項匯入至頁面的使用者）。  
  
 載入網頁瀏覽器中一次。 使用**顯示模式**下拉式清單控制項，然後選取**目錄**，將頁面切換至目錄模式。 在<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制，請按一下**瀏覽**按鈕，瀏覽至。選取其中一個，您所建立的 web 組件檔案，然後按一下 [**上傳**] 按鈕。 控制項的參考，應該會出現旁邊的核取方塊。 既然已上傳控制項說明<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制，請按一下**使用 GetWebPart**靠近頁面底部的按鈕。 這將示範呼叫的效果<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法並傳遞給它中目前載入的控制項描述<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 請注意，關聯的伺服器控制項加入立即網頁，使用者不需按**新增** 按鈕。 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A>方法，在中，稱為`Button2_Click`網頁的來源，方法會傳回<xref:System.Web.UI.WebControls.WebParts.WebPart>中載入的目前描述相關聯的控制項<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 下一步<xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>呼叫方法時，而<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項直接加入至頁面。 這示範了如何加入控制項以程式設計方式從<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項不需要使用者介入。  
  
 新增之後的第一個控制項，重複此程序將第二個控制項加入頁面。 最後，按一下 **關閉**結束目錄模式，傳回的頁面，即可瀏覽模式。 兩個自訂控制項現在應該會出現在頁面中，其中包含您稍早匯出的說明檔案時所具有的值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="description" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="description" /> 不是可用的 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> 值。</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>在使用者匯入代表或描述匯入控制項之目錄中的匯入控制項之描述檔以後，取得或設定顯示的文字。</summary>
        <value>包含標籤文字的字串。 .NET Framework 會提供文化特性訊息做為預設值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>屬性通常用來包含描述中包含之控制項的簡短、 一般標籤<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>屬性以宣告方式和程式設計的方式。 如完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在這段程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>以程式設計的方式指派屬性值。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項以選取**目錄模式**並將頁面切換至 類別目錄的模式。 類別目錄的模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上傳描述檔案**變更 按鈕，在 UI 中屬性的文字，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>如果在匯入處理序期間發生錯誤，則取得或設定所顯示的錯誤訊息。</summary>
        <value>包含標籤文字的字串。 .NET Framework 會提供文化特性訊息做為預設值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>屬性會通知使用者發生一些問題或錯誤頁面試圖匯入描述檔案時很有用。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>屬性以宣告方式和程式設計的方式。 如完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在這段程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>以程式設計的方式指派屬性值。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項以選取**目錄模式**並將頁面切換至 類別目錄的模式。 類別目錄的模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上傳描述檔案**變更 按鈕，在 UI 中屬性的文字，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定顯示在 <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" /> 控制項標題列中的標題。</summary>
        <value>做為控制項標題的字串。 預設值是 Web 組件控制項集合所提供的計算控制項名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>屬性值會顯示在標題列<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制控制項時顯示在類別目錄的模式。 控制項在頁面中宣告時，您可以透過設定屬性的值`Title`屬性。 如果您未提供標題的值，特定文化特性的預設值用來描述此控制項可讓使用者編輯的屬性類型。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>屬性以宣告方式和程式設計的方式。 如完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在這段程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>以程式設計的方式指派屬性值。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項以選取**目錄模式**並將頁面切換至 類別目錄的模式。 類別目錄的模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上傳描述檔案**變更 按鈕，在 UI 中屬性的文字，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Web.UI.WebControls.Button" /> 控制項的文字，初始化描述檔的上載。</summary>
        <value>用來做為 <see cref="T:System.Web.UI.WebControls.Button" /> 之文字的字串。 預設值是 Web 組件控制集所提供的文化特性字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性提供的文字<xref:System.Web.UI.WebControls.Button>啟動上傳程序的控制項。 如果這個屬性，或指派自訂文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性，文字應該進行清除使用者上傳的描述檔案。 文字不應該假設，或暗示上傳程序實際上控制項本身上傳。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性以宣告方式和程式設計的方式。 如完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在這段程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>以程式設計的方式指派屬性值。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項以選取**目錄模式**並將頁面切換至 類別目錄的模式。 類別目錄的模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上傳描述檔案**變更 按鈕，在 UI 中屬性的文字，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定訊息文字，告訴使用者如何上載描述檔。</summary>
        <value>用來做為使用者上載描述檔之指示的字串。 預設值是 Web 組件控制集所提供的文化特性字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性提供簡短的句子或片語的使用者，通知他們按一下按鈕，即可上傳描述檔案的指示。 如果這個屬性，或指派自訂文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A>屬性，文字應該進行清除使用者上傳的描述檔案。 文字不應該假設，或暗示上傳程序實際上控制項本身上傳。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性以宣告方式和程式設計的方式。 如完整的程式碼和指示，才能執行此範例中，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>類別概觀。  
  
 在下列程式碼區段中，請注意，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>控制項以宣告方式設定屬性值。  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 在這段程式碼，<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>以程式設計的方式指派屬性值。  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以使用**顯示模式**下拉式清單控制項以選取**目錄模式**並將頁面切換至 類別目錄的模式。 類別目錄的模式和上傳的說明檔案中的網頁，請注意各種使用者介面 (UI) 中顯示的文字字串的<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>控制項。 如果您按一下**上傳描述檔案**變更 按鈕，在 UI 中屬性的文字，包括文字<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>