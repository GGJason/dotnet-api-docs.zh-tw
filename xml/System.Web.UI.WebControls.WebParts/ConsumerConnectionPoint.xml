<Type Name="ConsumerConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd78a1f3ef930919223c519dad4ba41ea2113649" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51914496" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConsumerConnectionPoint : System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ConsumerConnectionPoint extends System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public Class ConsumerConnectionPoint&#xA;Inherits ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConsumerConnectionPoint : System::Web::UI::WebControls::WebParts::ConnectionPoint" />
  <TypeSignature Language="F#" Value="type ConsumerConnectionPoint = class&#xA;    inherit ConnectionPoint" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ConnectionPoint</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6c865-101">定義連接點物件，讓做為消費者之伺服器控制項建立與提供者的連接。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6c865-101">Defines a connection point object that enables a server control acting as a consumer to form a connection with a provider.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c865-102">在每個 Web 組件控制項之間連接兩個伺服器，每個控制項必須 （還有其他需求） 相關聯的連接點物件，可讓它連接到另一個控制項，並提供或取用資料，取決於是否控制項指定為提供者或取用者的連接。</span><span class="sxs-lookup"><span data-stu-id="6c865-102">In every Web Parts connection between two server controls, each control must have (among other requirements) an associated connection point object that enables it to connect to the other control and to either provide or consume data, depending on whether the control is designated as the provider or consumer for the connection.</span></span> <span data-ttu-id="6c865-103">A<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>物件通常會包含控制項如何連線至另一個控制項，它可以共用的資料類型的詳細資料。</span><span class="sxs-lookup"><span data-stu-id="6c865-103">A <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> object in general contains the details for how a control can connect to another control and the type of data it can share.</span></span> <span data-ttu-id="6c865-104">做為連接之中消費者控制項，其連接點必須是<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件。</span><span class="sxs-lookup"><span data-stu-id="6c865-104">For a control acting as the consumer in a connection, its connection point must be a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span> <span data-ttu-id="6c865-105">如需 Web 組件連接和連接點的詳細資訊，閱讀 < 另請參閱下一節中所列的主題。</span><span class="sxs-lookup"><span data-stu-id="6c865-105">For details on Web Parts connections and connection points, read the topics listed in the See Also section below.</span></span>  
  
 <span data-ttu-id="6c865-106">若要建立<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件，則需要執行幾個步驟：</span><span class="sxs-lookup"><span data-stu-id="6c865-106">To create a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, several steps are required:</span></span>  
  
1.  <span data-ttu-id="6c865-107">可讓取用者的控制項，以參考介面執行個體。</span><span class="sxs-lookup"><span data-stu-id="6c865-107">Enable a consumer control to reference an interface instance.</span></span> <span data-ttu-id="6c865-108">A<xref:System.Web.UI.WebControls.WebParts.WebPart>或其他伺服器控制項 (任何類型的伺服器控制項，將會新增至<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>可用區域) 必須能夠取用的特定介面執行個體上的資料。</span><span class="sxs-lookup"><span data-stu-id="6c865-108">A <xref:System.Web.UI.WebControls.WebParts.WebPart> or other server control (any type of server control that will be added to a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone can be used) must be able to consume data from a specific interface instance.</span></span> <span data-ttu-id="6c865-109">控制項不需要實作這個介面，提供者必須實作它。</span><span class="sxs-lookup"><span data-stu-id="6c865-109">The control need not implement the interface; only the provider must implement it.</span></span> <span data-ttu-id="6c865-110">取用者可以是使用提供者所提供的正確介面類型，或如果沒有，<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>物件可以用來轉換資料，從提供者的介面型別以了解取用者的類型。</span><span class="sxs-lookup"><span data-stu-id="6c865-110">The consumer can either work with the exact interface type served by a provider or, if it does not, a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object can be used to transform data from a provider's interface type to a type understood by the consumer.</span></span> <span data-ttu-id="6c865-111">若要啟用的取用者的典型方式是宣告私用欄位來包含所需的介面型別的參考。</span><span class="sxs-lookup"><span data-stu-id="6c865-111">A typical way to enable a consumer is to declare a private field to contain a reference to the desired interface type.</span></span>  
  
2.  <span data-ttu-id="6c865-112">識別回呼方法。</span><span class="sxs-lookup"><span data-stu-id="6c865-112">Identify a callback method.</span></span> <span data-ttu-id="6c865-113">取用者中的方法必須識別為回呼方法，以建立與提供者的連線。</span><span class="sxs-lookup"><span data-stu-id="6c865-113">A method in the consumer must be identified as the callback method to establish a connection with the provider.</span></span> <span data-ttu-id="6c865-114">這個方法會擷取建立的介面，提供者會實作，並指派它要 （舉例來說） 私用欄位中的第一個步驟的執行個體。</span><span class="sxs-lookup"><span data-stu-id="6c865-114">This method retrieves an instance of the interface that the provider implements, and assigns it to (for example) the private field created in the first step.</span></span> <span data-ttu-id="6c865-115">識別取用者中的回呼方法的 Web 組件方法是將`ConnectionConsumer`中繼資料屬性 (由<xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute>類別) 來接收介面執行個體的方法。</span><span class="sxs-lookup"><span data-stu-id="6c865-115">The Web Parts approach for identifying a callback method in the consumer is to add a `ConnectionConsumer` metadata attribute (defined by the <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> class) to the method that receives the interface instance.</span></span> <span data-ttu-id="6c865-116">加入屬性時，唯一必要的參數時，要用於消費者連接點的顯示名稱。</span><span class="sxs-lookup"><span data-stu-id="6c865-116">When the attribute is added, the only required parameter is a display name to use for the consumer connection point.</span></span> <span data-ttu-id="6c865-117">選擇性參數也會新增，例如識別碼。</span><span class="sxs-lookup"><span data-stu-id="6c865-117">Optional parameters can also be added, such as an ID.</span></span>  
  
3.  <span data-ttu-id="6c865-118">處理程序和輸出介面執行個體中的資料。</span><span class="sxs-lookup"><span data-stu-id="6c865-118">Process and output the data from the interface instance.</span></span> <span data-ttu-id="6c865-119">視需要在資料上，執行任何的內部處理而然後通常消費者控制項會轉譯頁面的資料。</span><span class="sxs-lookup"><span data-stu-id="6c865-119">Perform any internal processing as needed on the data, and then typically a consumer control will render the data to the page.</span></span> <span data-ttu-id="6c865-120">執行此動作的常見方式是覆寫控制項的<xref:System.Web.UI.Control.OnPreRender%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="6c865-120">A common way of doing this is to override the control's <xref:System.Web.UI.Control.OnPreRender%2A> method.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="6c865-121">同步要求，在取用者應該要求資料直接從提供者期間或之後立即<xref:System.Web.UI.Control.PreRender>事件。</span><span class="sxs-lookup"><span data-stu-id="6c865-121">During a synchronous request, a consumer should request data directly from the provider during or immediately after the <xref:System.Web.UI.Control.PreRender> event.</span></span> <span data-ttu-id="6c865-122">在非同步要求，如果提供者的回呼方法不會在任何時間點呼叫期間呈現，開發人員可以假設任何資料已傳送至取用者。</span><span class="sxs-lookup"><span data-stu-id="6c865-122">During an asynchronous request, if the provider's callback method is not called at any point during rendering, the developer can assume that no data was sent to the consumer.</span></span>  
  
 <span data-ttu-id="6c865-123">控制項已有做為消費者的能力之後，控制項可以參與連線 （假設提供者控制項也有能力且可用）。</span><span class="sxs-lookup"><span data-stu-id="6c865-123">After a control has been equipped to act as a consumer, the control can participate in connections (assuming that a provider control is also equipped and available).</span></span> <span data-ttu-id="6c865-124">若要建立具有靜態、 宣告式連線的 Web 網頁標記中，開發人員可以使用`<asp:webpartconnection>`項目。</span><span class="sxs-lookup"><span data-stu-id="6c865-124">To create a static, declarative connection in the markup of a Web page, developers can use the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="6c865-125">如果`ConnectionConsumer`識別的回呼方法的取用者原始程式碼中的屬性會指定連接點 ID，則該值必須指派給`ConsumerConnectionPointID`屬性中`<asp:webpartconnection>`頁面上的項目。</span><span class="sxs-lookup"><span data-stu-id="6c865-125">If the `ConnectionConsumer` attribute in the consumer source code that identifies the callback method specifies an ID for the connection point, then that value must be assigned to the `ConsumerConnectionPointID` attribute in the `<asp:webpartconnection>` element on a page.</span></span> <span data-ttu-id="6c865-126">開發人員可能會指定消費者連接點識別碼的原因是如果有多個消費者控制項中所定義的連接點。</span><span class="sxs-lookup"><span data-stu-id="6c865-126">A reason that a developer might specify an ID for a consumer connection point is if there are multiple connection points defined in the consumer control.</span></span> <span data-ttu-id="6c865-127">如果消費者連接點消費者控制項中沒有指定的識別碼，值就不需要指派給`ConsumerConnectionPointID`頁面中，屬性，因為將會建立連線，使用預設值取自<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>欄位。</span><span class="sxs-lookup"><span data-stu-id="6c865-127">If an ID is not specified for the consumer connection point in the consumer control, a value does not have to be assigned to the `ConsumerConnectionPointID` attribute in the page either, because the connection will be created using a default value obtained from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> field.</span></span>  
  
 <span data-ttu-id="6c865-128">若要在程式碼中建立的連線，開發人員必須建立新<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>藉由呼叫物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>方法並傳遞給它的消費者控制項，以及識別碼或索引的定義識別碼<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>消費者控制項中的物件。</span><span class="sxs-lookup"><span data-stu-id="6c865-128">To create a connection in code, developers must create a new <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object by calling the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method and passing to it the ID of the consumer control, along with the ID or index of the defined <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object in the consumer control.</span></span> <span data-ttu-id="6c865-129">傳回<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>以及消費者控制項的參考物件的參考提供者控制項，以及相對應<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>物件，都傳遞給<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>方法，以建立新<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>物件。</span><span class="sxs-lookup"><span data-stu-id="6c865-129">The returned <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object, along with a reference to the consumer control, a reference to the provider control, and a corresponding <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> object, are all passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method to create a new <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> object.</span></span>  
  
 <span data-ttu-id="6c865-130">雖然開發人員可以使用取用者連接點，以宣告方式或以程式設計方式建立連線的使用者也可以在與消費者連接點，來建立連接，透過使用者介面 (UI) 互動。</span><span class="sxs-lookup"><span data-stu-id="6c865-130">Although developers can use consumer connection points as part of establishing connections either declaratively or programmatically, users can also interact with consumer connection points to establish connections through the user interface (UI).</span></span> <span data-ttu-id="6c865-131">如果開發人員宣告<xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>控制項在網頁上，它會提供執行階段 UI 建立連線的使用者。</span><span class="sxs-lookup"><span data-stu-id="6c865-131">If developers declare a <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> control on a Web page, it provides a run-time UI for users to create connections.</span></span> <span data-ttu-id="6c865-132">如果使用者選擇提供者控制項做為起點來建立連線，依序按一下其連接動詞命令 （他們也可以選擇取用者; 沒有任何差異，在產生的連接），在 UI 中，他們會看到下拉式清單控制項顯示可用消費者連接點 （或點，如果有多個項目） 的名稱提供者，可以將傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="6c865-132">If users choose the provider control as the starting point for establishing the connection by clicking its connect verb (they could also choose the consumer; there is no difference in the resulting connection), in the UI they will see a drop-down list control with the display names of the available consumer connection point (or points if there are multiple ones) that the provider can send the data to.</span></span> <span data-ttu-id="6c865-133">使用者必須選取消費者連接點來建立連線。</span><span class="sxs-lookup"><span data-stu-id="6c865-133">Users must select a consumer connection point to establish a connection.</span></span>  
  
 <span data-ttu-id="6c865-134">A<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件直接使用特定的消費者控制項，將關聯，並將連線的相關詳細資料儲存在它繼承自基底屬性<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別。</span><span class="sxs-lookup"><span data-stu-id="6c865-134">A <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object associates directly with a specific consumer control, and stores details about a connection in the properties it inherits from the base <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class.</span></span> <span data-ttu-id="6c865-135">例如，在繼承<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>屬性，消費者連接點會保留它會使用的介面的型別。</span><span class="sxs-lookup"><span data-stu-id="6c865-135">For example, in the inherited <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property, a consumer connection point keeps the type of interface it uses.</span></span> <span data-ttu-id="6c865-136">如果提供者和取用者在連接中的同時了解介面型別，這些控制項是相容，而且能夠建立直接連接。</span><span class="sxs-lookup"><span data-stu-id="6c865-136">If the provider and consumer in a connection both understand the interface type, the controls are compatible and capable of forming a direct connection.</span></span> <span data-ttu-id="6c865-137">如果提供者和取用者無法使用相同的介面型別，它們不相容，而且必須使用<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>要翻譯的提供者連接點物件<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>至類型，以取用者可以使用的屬性。</span><span class="sxs-lookup"><span data-stu-id="6c865-137">If the provider and consumer cannot work with the same interface type, they are incompatible and must use a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object to translate the provider connection point's <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> property into a type that the consumer can work with.</span></span> <span data-ttu-id="6c865-138">另一個重要的繼承的屬性是<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A>建立連線時，點屬性，可在使用者選擇取用者連接的使用者介面中顯示的易記名稱。</span><span class="sxs-lookup"><span data-stu-id="6c865-138">Another important inherited property is the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> property, which provides a friendly name to display in the UI for users to choose a consumer connection point when creating connections.</span></span> <span data-ttu-id="6c865-139">顯示名稱是必要的參數，當開發人員將`ConnectionConsumer`屬性消費者控制項的回呼方法。</span><span class="sxs-lookup"><span data-stu-id="6c865-139">The display name is the required parameter when developers add a `ConnectionConsumer` attribute to the callback method in a consumer control.</span></span> <span data-ttu-id="6c865-140">繼承<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A>屬性也很有用，如上述，因為它提供的唯一識別碼的消費者連接點，取用者有多個連接點。</span><span class="sxs-lookup"><span data-stu-id="6c865-140">The inherited <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> property is also useful, as indicated above, because it provides a unique identifier for a consumer connection point in the event that a consumer has multiple connection points.</span></span> <span data-ttu-id="6c865-141">取用者可以有多個<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件定義，並在此情況下，當開發人員將`ConnectionConsumer`屬性給方法時，他們應該指定識別碼值來區別每一個連接點。</span><span class="sxs-lookup"><span data-stu-id="6c865-141">A consumer can have multiple <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> objects defined in it, and in this case, when developers add the `ConnectionConsumer` attribute to a method, they should specify an ID value to distinguish each connection point.</span></span> <span data-ttu-id="6c865-142">其中一個其他值得注意繼承的屬性是<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A>屬性，指出消費者連接點是否可以同時連線多個提供者。</span><span class="sxs-lookup"><span data-stu-id="6c865-142">One other notable inherited property is the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> property, which indicates whether a consumer connection point can connect simultaneously to multiple providers.</span></span> <span data-ttu-id="6c865-143">這個屬性值`false`根據預設，對於消費者連接點 (而其預設值為`true`對於提供者連接點)。</span><span class="sxs-lookup"><span data-stu-id="6c865-143">This property value is `false` by default for consumer connection points (whereas it defaults to `true` for provider connection points).</span></span>  
  
 <span data-ttu-id="6c865-144"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>類別會加入數個唯一的方法繼承自成員<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>類別。</span><span class="sxs-lookup"><span data-stu-id="6c865-144">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class adds several unique methods to the members it inherits from the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> class.</span></span> <span data-ttu-id="6c865-145"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A>方法會叫用的取用者的專屬定義回呼方法，以從提供者擷取介面執行個體。</span><span class="sxs-lookup"><span data-stu-id="6c865-145">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A> method invokes the consumer's own defined callback method to retrieve the interface instance from the provider.</span></span> <span data-ttu-id="6c865-146"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A>方法會傳回布林值，指出連接點是否能夠建立連線，根據相關聯的消費者控制項的目前狀態。</span><span class="sxs-lookup"><span data-stu-id="6c865-146">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A> method returns a Boolean value that indicates whether the connection point is able to establish connections, based on the current state of the associated consumer control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c865-147">下列程式碼範例顯示簡單的方法，以宣告方式建立的連線，請以程式設計方式或透過使用者介面，在每個案例中使用的消費者連接點。</span><span class="sxs-lookup"><span data-stu-id="6c865-147">The following code example shows simple ways to create a connection declaratively, programmatically, or through the UI, in each case making use of a consumer connection point.</span></span>  
  
 <span data-ttu-id="6c865-148">此範例包含四個部分：</span><span class="sxs-lookup"><span data-stu-id="6c865-148">The example has four parts:</span></span>  
  
-   <span data-ttu-id="6c865-149">使用者控制項，可讓您變更 Web 組件 頁面上顯示模式。</span><span class="sxs-lookup"><span data-stu-id="6c865-149">A user control that enables you to change the Web Parts display mode on a page.</span></span>  
  
-   <span data-ttu-id="6c865-150">來源介面和兩個程式碼<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項做為提供者和取用者連接。</span><span class="sxs-lookup"><span data-stu-id="6c865-150">Source code for an interface and two <xref:System.Web.UI.WebControls.WebParts.WebPart> controls acting as the provider and the consumer for a connection.</span></span>  
  
-   <span data-ttu-id="6c865-151">裝載的所有控制項，並執行程式碼範例的網頁。</span><span class="sxs-lookup"><span data-stu-id="6c865-151">A Web page to host all the controls and run the code example.</span></span>  
  
-   <span data-ttu-id="6c865-152">如何執行範例頁面的說明。</span><span class="sxs-lookup"><span data-stu-id="6c865-152">An explanation of how to run the example page.</span></span>  
  
 <span data-ttu-id="6c865-153">此程式碼範例的第一個部分是可讓使用者變更顯示模式，在網頁上的使用者控制項。</span><span class="sxs-lookup"><span data-stu-id="6c865-153">The first part of this code example is the user control that enables users to change display modes on a Web page.</span></span> <span data-ttu-id="6c865-154">將以下的原始碼儲存到.ascx 檔，提供檔案名稱指派給`Src`屬性的`Register`這個使用者控制項指示詞，也就是裝載的 Web 網頁的頂端附近。</span><span class="sxs-lookup"><span data-stu-id="6c865-154">Save the following source code to an .ascx file, giving it the file name that is assigned to the `Src` attribute of the `Register` directive for this user control, which is near the top of the hosting Web page.</span></span> <span data-ttu-id="6c865-155">For 詳細資料會顯示在此控制項模式和原始碼的描述，請參閱[逐步解說： 變更 Web 組件頁面上顯示的模式](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。</span><span class="sxs-lookup"><span data-stu-id="6c865-155">For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 <span data-ttu-id="6c865-156">在程式碼範例的第二個部分是介面和控制項的原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="6c865-156">The second part of the code example is the source code for the interface and controls.</span></span> <span data-ttu-id="6c865-157">原始程式檔包含一個簡單的介面，名為`IZipCode`。</span><span class="sxs-lookup"><span data-stu-id="6c865-157">The source file contains a simple interface named `IZipCode`.</span></span> <span data-ttu-id="6c865-158">另外還有<xref:System.Web.UI.WebControls.WebParts.WebPart>名為類別`ZipCodeWebPart`，實作介面，並做為提供者控制項。</span><span class="sxs-lookup"><span data-stu-id="6c865-158">There is also a <xref:System.Web.UI.WebControls.WebParts.WebPart> class named `ZipCodeWebPart` that implements the interface and acts as the provider control.</span></span> <span data-ttu-id="6c865-159">另<xref:System.Web.UI.WebControls.WebParts.WebPart>類別會命名為`WeatherWebPart`，並作為連線取用者。</span><span class="sxs-lookup"><span data-stu-id="6c865-159">The other <xref:System.Web.UI.WebControls.WebParts.WebPart> class is named `WeatherWebPart`, and it acts as the consumer for the connection.</span></span> <span data-ttu-id="6c865-160">這個類別具有一個名為方法`GetZipCode`所取得的執行個體`IZipCode`從提供者控制項的介面。</span><span class="sxs-lookup"><span data-stu-id="6c865-160">This class has a method named `GetZipCode` that gets an instance of the `IZipCode` interface from the provider control.</span></span> <span data-ttu-id="6c865-161">請注意，這個方法會標示為取用者的連接點方法`ConnectionConsumer`其中繼資料中的屬性。</span><span class="sxs-lookup"><span data-stu-id="6c865-161">Note that this method is marked as the consumer's connection point method with a `ConnectionConsumer` attribute in its metadata.</span></span> <span data-ttu-id="6c865-162">這是用來識別的消費者控制項連接點方法的機制。</span><span class="sxs-lookup"><span data-stu-id="6c865-162">This is the mechanism for identifying the connection point method in the consumer control.</span></span>  
  
 <span data-ttu-id="6c865-163">若要執行程式碼範例，您必須編譯這個原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="6c865-163">For the code example to run, you must compile this source code.</span></span> <span data-ttu-id="6c865-164">您可以明確編譯它，然後將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。</span><span class="sxs-lookup"><span data-stu-id="6c865-164">You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache.</span></span> <span data-ttu-id="6c865-165">或者，您可以將原始程式碼放在您網站的 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。</span><span class="sxs-lookup"><span data-stu-id="6c865-165">Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time.</span></span> <span data-ttu-id="6c865-166">此程式碼範例會使用動態編譯。</span><span class="sxs-lookup"><span data-stu-id="6c865-166">This code example uses dynamic compilation.</span></span> <span data-ttu-id="6c865-167">如需示範如何編譯的逐步解說，請參閱 <<c0> [ 逐步解說： 開發和使用自訂 Web 伺服器控制項](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。</span><span class="sxs-lookup"><span data-stu-id="6c865-167">For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).</span></span>  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 <span data-ttu-id="6c865-168">在程式碼範例的第三個部分是網頁。</span><span class="sxs-lookup"><span data-stu-id="6c865-168">The third part of the code example is the Web page.</span></span> <span data-ttu-id="6c865-169">頁面頂端附近`Register`指示詞來註冊自訂控制項的連接，並可讓使用者變更的使用者控制項的頁面上顯示模式。</span><span class="sxs-lookup"><span data-stu-id="6c865-169">Near the top are `Register` directives to register the custom controls that form the connection, and the user control that enables users to change display modes on the page.</span></span> <span data-ttu-id="6c865-170">以宣告方式內建立連線本身`<staticconnections>`頁面上的項目。</span><span class="sxs-lookup"><span data-stu-id="6c865-170">The connection itself is created declaratively within the `<staticconnections>` element on the page.</span></span> <span data-ttu-id="6c865-171">這示範了其中一種建立連線，請注意`ConsumerConnectionPointID`屬性中`<asp:webpartconnection>`項目。</span><span class="sxs-lookup"><span data-stu-id="6c865-171">This demonstrates one way of creating a connection--note the `ConsumerConnectionPointID` attribute in the `<asp:webpartconnection>` element.</span></span> <span data-ttu-id="6c865-172">您也可以以程式設計的方式; 建立連線這麼做，程式碼位於`Button1_Click`方法。</span><span class="sxs-lookup"><span data-stu-id="6c865-172">You can also create the connection programmatically; the code for doing that is in the `Button1_Click` method.</span></span> <span data-ttu-id="6c865-173">在此情況下，<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件已建立，然後傳遞給方法，以建立實際的連接。</span><span class="sxs-lookup"><span data-stu-id="6c865-173">In this case, a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object is created and then passed to a method that creates the actual connection.</span></span> <span data-ttu-id="6c865-174">以宣告方式或以程式設計方式建立連接時，是否一律必須指定連接點的提供者和取用者。</span><span class="sxs-lookup"><span data-stu-id="6c865-174">Whether the connection is created declaratively or programmatically, connection points must always be specified for both the provider and the consumer.</span></span> <span data-ttu-id="6c865-175">`Button2_Click`方法存取<xref:System.Web.UI.WebControls.WebParts.ConnectionPoint>物件的提供者和取用者，並將部分及其屬性值寫入頁面中的標籤。</span><span class="sxs-lookup"><span data-stu-id="6c865-175">The `Button2_Click` method accesses the <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> objects for both the provider and the consumer, and writes some of their property values to a label in the page.</span></span>  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 <span data-ttu-id="6c865-176">在瀏覽器頁面載入之後，請按一下**連接點的詳細資料** 按鈕。</span><span class="sxs-lookup"><span data-stu-id="6c865-176">After you load the page in a browser, click the **Connection Point Details** button.</span></span> <span data-ttu-id="6c865-177">建立宣告式的連接中的提供者和消費者連接點的相關資訊會出現。</span><span class="sxs-lookup"><span data-stu-id="6c865-177">Information about the provider and consumer connection points established in the declarative connection appears.</span></span> <span data-ttu-id="6c865-178">接下來，使用**顯示模式**切換至頁面的下拉式清單控制項連接模式。</span><span class="sxs-lookup"><span data-stu-id="6c865-178">Next, use the **Display Mode** drop-down control to switch the page into connect mode.</span></span> <span data-ttu-id="6c865-179">上的動詞命令功能表**ZIP 程式碼提供者**<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項 （標題列中的向下箭號表示），按一下 connect 動詞命令。</span><span class="sxs-lookup"><span data-stu-id="6c865-179">On the verbs menu of the **ZIP Code Provider**<xref:System.Web.UI.WebControls.WebParts.WebPart> control (represented by a downward arrow in the title bar), click the connect verb.</span></span> <span data-ttu-id="6c865-180">自動建立 UI 出現後，連線`<asp:connectionszone>`網頁中宣告的控制項。</span><span class="sxs-lookup"><span data-stu-id="6c865-180">The connection UI appears, created automatically by the `<asp:connectionszone>` control declared in the page.</span></span> <span data-ttu-id="6c865-181">這可以是另一種建立連線 （透過 UI)，連同稍早所述的宣告式和程式設計方法。</span><span class="sxs-lookup"><span data-stu-id="6c865-181">This is another way of creating a connection (through the UI), along with the declarative and programmatic methods discussed earlier.</span></span> <span data-ttu-id="6c865-182">按一下 **中斷連線**按鈕來終止現有的靜態連接。</span><span class="sxs-lookup"><span data-stu-id="6c865-182">Click the **Disconnect** button to terminate the existing static connection.</span></span> <span data-ttu-id="6c865-183">按一下 **建立取用者的連接**連結。</span><span class="sxs-lookup"><span data-stu-id="6c865-183">Click the **Create a Connection to a Consumer** link.</span></span> <span data-ttu-id="6c865-184">UI 現在會顯示列出消費者連接點的顯示名稱的下拉式清單控制項。</span><span class="sxs-lookup"><span data-stu-id="6c865-184">The UI now displays a drop-down control that lists the consumer connection point display name.</span></span> <span data-ttu-id="6c865-185">在下拉式清單中，選取 連接點，然後按一下**Connect**完成連線。</span><span class="sxs-lookup"><span data-stu-id="6c865-185">Select the connection point in the drop-down list, and then click **Connect** to complete the connection.</span></span> <span data-ttu-id="6c865-186">接下來，按一下**中斷連線**一次。</span><span class="sxs-lookup"><span data-stu-id="6c865-186">Next, click **Disconnect** again.</span></span> <span data-ttu-id="6c865-187">按一下 [**動態連接**] 按鈕，以程式設計方式建立連接。</span><span class="sxs-lookup"><span data-stu-id="6c865-187">Click the **Dynamic Connection** button to create a connection programmatically.</span></span> <span data-ttu-id="6c865-188">使用**顯示模式**返回頁面，即可瀏覽模式的控制項。</span><span class="sxs-lookup"><span data-stu-id="6c865-188">Use the **Display Mode** control to return the page to browse mode.</span></span> <span data-ttu-id="6c865-189">按一下 [**連線端點詳細資料**] 按鈕，以指出的相關詳細資料的取用者連接點物件一次多個。</span><span class="sxs-lookup"><span data-stu-id="6c865-189">Click the **Connection Point Details** button again, to indicate details about the consumer connection point object once more.</span></span>  
  
 <span data-ttu-id="6c865-190">此範例已示範建立連線，並使用下列三種方法的消費者連接點： 在網頁標記中，宣告為靜態連接使用程式碼中建立的連線<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件，以及透過連接 UI 的使用者所建立的連線。</span><span class="sxs-lookup"><span data-stu-id="6c865-190">The example has demonstrated establishing a connection and using a consumer connection point in three ways: a static connection declared in the Web page markup; a connection created in code that used a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object; and a connection created by a user through the connection UI.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">
      <span data-ttu-id="6c865-191">ASP.NET Web 組件頁面</span>
      <span class="sxs-lookup">
        <span data-stu-id="6c865-191">ASP.NET Web Parts Pages</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">
      <span data-ttu-id="6c865-192">Web 組件連線概觀</span>
      <span class="sxs-lookup">
        <span data-stu-id="6c865-192">Web Parts Connections Overview</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConsumerConnectionPoint (System.Reflection.MethodInfo callbackMethod, Type interfaceType, Type controlType, string displayName, string id, bool allowsMultipleConnections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MethodInfo callbackMethod, class System.Type interfaceType, class System.Type controlType, string displayName, string id, bool allowsMultipleConnections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.#ctor(System.Reflection.MethodInfo,System.Type,System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackMethod As MethodInfo, interfaceType As Type, controlType As Type, displayName As String, id As String, allowsMultipleConnections As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConsumerConnectionPoint(System::Reflection::MethodInfo ^ callbackMethod, Type ^ interfaceType, Type ^ controlType, System::String ^ displayName, System::String ^ id, bool allowsMultipleConnections);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint : System.Reflection.MethodInfo * Type * Type * string * string * bool -&gt; System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" Usage="new System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint (callbackMethod, interfaceType, controlType, displayName, id, allowsMultipleConnections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="callbackMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="interfaceType" Type="System.Type" />
        <Parameter Name="controlType" Type="System.Type" />
        <Parameter Name="displayName" Type="System.String" />
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="allowsMultipleConnections" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callbackMethod">
          <span data-ttu-id="6c865-193">消費者控制項中的方法，傳回介面執行個體至消費者以建立連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-193">The method in the consumer control that returns an interface instance to consumers to establish a connection.</span>
          </span>
        </param>
        <param name="interfaceType">
          <span data-ttu-id="6c865-194">消費者從提供者接收之介面的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-194">The <see cref="T:System.Type" /> of the interface that the consumer receives from a provider.</span>
          </span>
        </param>
        <param name="controlType">
          <span data-ttu-id="6c865-195">與消費者連接點關聯之消費者控制項的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-195">The <see cref="T:System.Type" /> of the consumer control with which the consumer connection point is associated.</span>
          </span>
        </param>
        <param name="displayName">
          <span data-ttu-id="6c865-196">消費者連接點的易記顯示名稱，在連接使用者介面 (UI) 中向使用者顯示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-196">A friendly display name for the consumer connection point that appears to users in the connection user interface (UI).</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="6c865-197">消費者連接點的唯一識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-197">A unique identifier for the consumer connection point.</span>
          </span>
        </param>
        <param name="allowsMultipleConnections">
          <span data-ttu-id="6c865-198">布林值，指出消費者連接點是否可以同時連接到多個提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-198">A Boolean value indicating whether the consumer connection point can have multiple simultaneous connections with providers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c865-199">初始化 <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-199">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c865-200"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A>建構函式<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>類別只會呼叫基底建構函式，將各種不同的參數傳遞給它，並初始化基底類別。</span><span class="sxs-lookup"><span data-stu-id="6c865-200">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A> constructor for the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class simply calls the base constructor, passing to it the various parameters and initializing the base class.</span></span>  
  
 <span data-ttu-id="6c865-201">基底類別建構函式會檢查幾個連接點的參數，並可能會擲回的幾個例外狀況。</span><span class="sxs-lookup"><span data-stu-id="6c865-201">The base class constructor checks a number of the parameters for a connection point and can throw several exceptions.</span></span> <span data-ttu-id="6c865-202">如需可能例外狀況的清單，請參閱例外狀況。</span><span class="sxs-lookup"><span data-stu-id="6c865-202">For a list of possible exceptions, see the Exceptions section.</span></span>  
  
 <span data-ttu-id="6c865-203">您可以呼叫<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A>建構函式來建立您自己的執行個體<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>類別。</span><span class="sxs-lookup"><span data-stu-id="6c865-203">You can call the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.%23ctor%2A> constructor to create your own instance of the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class.</span></span> <span data-ttu-id="6c865-204">不過，在您可在此是只建立連線，且不擴充類別的情況下，您應該呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>方法，以傳回提供者的連接點物件。</span><span class="sxs-lookup"><span data-stu-id="6c865-204">However, in cases where you are simply establishing a connection and not extending the class, you should call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> method to return a connection point object from a provider.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6c865-205">下列程式碼範例示範如何從衍生<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>類別來建立自訂提供者連接點。</span><span class="sxs-lookup"><span data-stu-id="6c865-205">The following code example demonstrates how to derive from the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class to create a custom provider connection point.</span></span>  
  
 <span data-ttu-id="6c865-206">在程式碼範例有三個部分：</span><span class="sxs-lookup"><span data-stu-id="6c865-206">The code example has three parts:</span></span>  
  
-   <span data-ttu-id="6c865-207">包含提供者的原始程式檔<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，消費者<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，以及自訂<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件。</span><span class="sxs-lookup"><span data-stu-id="6c865-207">A source file that contains a provider <xref:System.Web.UI.WebControls.WebParts.WebPart> control, a consumer <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and a custom <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object.</span></span>  
  
-   <span data-ttu-id="6c865-208">在靜態連接控制項裝載的網頁。</span><span class="sxs-lookup"><span data-stu-id="6c865-208">A Web page that hosts the controls in a static connection.</span></span>  
  
-   <span data-ttu-id="6c865-209">如何執行範例程式碼的說明。</span><span class="sxs-lookup"><span data-stu-id="6c865-209">An explanation of how to run the example code.</span></span>  
  
 <span data-ttu-id="6c865-210">在程式碼範例的第一個部分是來源提供者和消費者<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，以及自訂<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>類別，名為`TableConsumerConnectionPoint`。</span><span class="sxs-lookup"><span data-stu-id="6c865-210">The first part of the code example is the source for the provider and consumer <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class, named `TableConsumerConnectionPoint`.</span></span> <span data-ttu-id="6c865-211">請注意，建構函式的`TableConsumerConnectionPoint`類別會呼叫基底的建構函式，將它傳遞必要的參數，參數區段中所示。</span><span class="sxs-lookup"><span data-stu-id="6c865-211">Note that the constructor of the `TableConsumerConnectionPoint` class calls the base constructor, passing it the required parameters as indicated in the Parameters section.</span></span> <span data-ttu-id="6c865-212">也請注意，在`TableConsumer`類別，`SetConnectionInterface`方法指定為回呼方法，對於連線，而`ConnectionConsumer`屬性會宣告自訂`TableConsumerConnectionPoint`做為參數。</span><span class="sxs-lookup"><span data-stu-id="6c865-212">Also note that in the `TableConsumer` class, the `SetConnectionInterface` method is specified as the callback method for connections, and the `ConnectionConsumer` attribute declares the custom `TableConsumerConnectionPoint` as a parameter.</span></span> <span data-ttu-id="6c865-213">這示範了如何建立自訂的消費者連接點，並將其關聯的消費者控制項。</span><span class="sxs-lookup"><span data-stu-id="6c865-213">This demonstrates how to create a custom consumer connection point and then associate it with a consumer control.</span></span> <span data-ttu-id="6c865-214">這個範例假設的以動態方式編譯的原始程式碼，因此您應該將原始程式碼檔放在您的 Web 應用程式中的 [App_Code] 子資料夾中。</span><span class="sxs-lookup"><span data-stu-id="6c865-214">This example assumes that the source code is dynamically compiled, so you should place the source code file in an App_Code subfolder of your Web application.</span></span>  
  
 [!code-csharp[UI.WebControls.WebParts.ProviderConnectionPoint#1](~/samples/snippets/csharp/VS_Snippets_WebNet/UI.WebControls.WebParts.ProviderConnectionPoint/CS/connectionControls.cs#1)]  
  
 <span data-ttu-id="6c865-215">在程式碼範例的第二個部分是裝載靜態的 Web 組件連接中的自訂控制項的網頁。</span><span class="sxs-lookup"><span data-stu-id="6c865-215">The second part of the code example is the Web page that hosts the custom controls in a static Web parts connection.</span></span> <span data-ttu-id="6c865-216">在頁面頂端`Register`指示詞來宣告前置詞和自訂控制項的命名空間。</span><span class="sxs-lookup"><span data-stu-id="6c865-216">At the top of the page is a `Register` directive to declare a prefix and the namespace for the custom controls.</span></span> <span data-ttu-id="6c865-217">連線宣告可透過`<asp:webpartconnection>`內宣告項目，以及提供者和消費者控制項`<asp:webpartzone>`項目。</span><span class="sxs-lookup"><span data-stu-id="6c865-217">The connection is declared by using an `<asp:webpartconnection>` element, and the provider and consumer controls are declared within an `<asp:webpartzone>` element.</span></span>  
  
 [!code-aspx-csharp[UI.WebControls.WebParts.ProviderConnectionPoint#3](~/samples/snippets/csharp/VS_Snippets_WebNet/UI.WebControls.WebParts.ProviderConnectionPoint/CS/defaultcs.aspx#3)]  
  
 <span data-ttu-id="6c865-218">將網頁瀏覽器中的載入。</span><span class="sxs-lookup"><span data-stu-id="6c865-218">Load the page in a browser.</span></span> <span data-ttu-id="6c865-219">已在控制項之間的連線存在，並取用者顯示的資料提供者，因為連線已宣告為靜態連接頁面中。</span><span class="sxs-lookup"><span data-stu-id="6c865-219">The connection between the controls already exists, and the consumer displays the data from the provider, because the connection was declared as a static connection in the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6c865-220">
            <paramref name="callbackMethod" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-220">
              <paramref name="callbackMethod" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6c865-221">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-221">\- or -</span>
          </span>
          <span data-ttu-id="6c865-222">
            <paramref name="interfaceType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-222">
              <paramref name="interfaceType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6c865-223">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-223">\- or -</span>
          </span>
          <span data-ttu-id="6c865-224">
            <paramref name="controlType" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-224">
              <paramref name="controlType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="6c865-225">\-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-225">\- or -</span>
          </span>
          <span data-ttu-id="6c865-226">
            <paramref name="displayName" /> 為 <see langword="null" /> 或空字串 ("")。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-226">
              <paramref name="displayName" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6c865-227">
            <paramref name="controlType" /> 不是和消費者控制項相同的型別 (或從它衍生的有效類別)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-227">
              <paramref name="controlType" /> is not the same type as the consumer control (or a valid class derived from it).</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)" />
        <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">
          <span data-ttu-id="6c865-228">ASP.NET Web 組件頁面</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-228">ASP.NET Web Parts Pages</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetObject">
      <MemberSignature Language="C#" Value="public virtual void SetObject (System.Web.UI.Control control, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetObject(class System.Web.UI.Control control, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject(System.Web.UI.Control,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetObject(System::Web::UI::Control ^ control, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetObject : System.Web.UI.Control * obj -&gt; unit&#xA;override this.SetObject : System.Web.UI.Control * obj -&gt; unit" Usage="consumerConnectionPoint.SetObject (control, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6c865-229">與消費者連接點關聯的消費者控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-229">The consumer control associated with a consumer connection point.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="6c865-230">從提供者控制項傳回的介面執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-230">The interface instance returned from a provider control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c865-231">叫用消費者控制項的回呼方法，並從提供者控制項擷取介面執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-231">Invokes the callback method in a consumer control and retrieves the interface instance from a provider control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c865-232">此方法會接收來自包含消費者控制項的資料提供者的介面執行個體。</span><span class="sxs-lookup"><span data-stu-id="6c865-232">This method receives an interface instance from a provider that contains data for the consumer control.</span></span>  
  
 <span data-ttu-id="6c865-233"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A>方法會呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>物件正在啟動連線時。</span><span class="sxs-lookup"><span data-stu-id="6c865-233">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SetObject%2A> method is called by <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> objects when a connection is being activated.</span></span> <span data-ttu-id="6c865-234">這是個重要步驟，是起始連線，並啟用共用資料的兩個控制項的一部分。</span><span class="sxs-lookup"><span data-stu-id="6c865-234">This is a critical step that is part of initiating a connection and enabling two controls to share data.</span></span>  
  
 <span data-ttu-id="6c865-235">連接之中消費者控制項必須能夠使用相同介面的型別作為提供者。</span><span class="sxs-lookup"><span data-stu-id="6c865-235">The consumer control in a connection must be able to work with the same type of interface as the provider.</span></span> <span data-ttu-id="6c865-236">如果不存在，會不相容的控制項和<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>物件必須用來建立連線。</span><span class="sxs-lookup"><span data-stu-id="6c865-236">If it does not, the controls are incompatible and a <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> object must be used to establish a connection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6c865-237">
            <paramref name="control" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-237">
              <paramref name="control" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsConnection">
      <MemberSignature Language="C#" Value="public virtual bool SupportsConnection (System.Web.UI.Control control, System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection secondaryInterfaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsConnection(class System.Web.UI.Control control, class System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection secondaryInterfaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection(System.Web.UI.Control,System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SupportsConnection(System::Web::UI::Control ^ control, System::Web::UI::WebControls::WebParts::ConnectionInterfaceCollection ^ secondaryInterfaces);" />
      <MemberSignature Language="F#" Value="abstract member SupportsConnection : System.Web.UI.Control * System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection -&gt; bool&#xA;override this.SupportsConnection : System.Web.UI.Control * System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection -&gt; bool" Usage="consumerConnectionPoint.SupportsConnection (control, secondaryInterfaces)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="secondaryInterfaces" Type="System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="6c865-238">與 <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" /> 關聯的消費者控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-238">The consumer control associated with the <see cref="T:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint" />.</span>
          </span>
        </param>
        <param name="secondaryInterfaces">
          <span data-ttu-id="6c865-239">任何參與連接之次要介面的 <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-239">A <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionInterfaceCollection" /> of any secondary interfaces that participate in a connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6c865-240">判斷消費者連接點目前是否可以建立連接。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-240">Determines whether a consumer connection point is currently capable of establishing a connection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6c865-241">如果連接點目前可以建立連接，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-241">
              <see langword="true" /> if a connection point can currently establish a connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="6c865-242">預設值為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6c865-242">The default is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6c865-243"><xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A>方法實作一律會傳回`true`在所有情況下<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>類別。</span><span class="sxs-lookup"><span data-stu-id="6c865-243">The <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A> method as implemented always returns `true` in all cases for the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class.</span></span> <span data-ttu-id="6c865-244">這個方法的目的是為它檢查的狀態`control`並`secondaryInterfaces`的某些關鍵點，以判斷是否<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>物件是目前無法建立連線。</span><span class="sxs-lookup"><span data-stu-id="6c865-244">The intent for this method is to have it check on the state of `control` and `secondaryInterfaces` at certain critical points to determine whether a <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> object is presently able to create a connection.</span></span>  
  
 <span data-ttu-id="6c865-245">可以有案例所在`control`處於一種狀態，會讓它無法建立連接，或其中`secondaryInterfaces`可形成一個連線之前必須存在。</span><span class="sxs-lookup"><span data-stu-id="6c865-245">There can be scenarios where `control` is in a state that would make it impossible to form a connection, or where `secondaryInterfaces` must exist before a connection can be formed.</span></span> <span data-ttu-id="6c865-246">在此情況下，開發人員可以繼承自<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>類別，並覆寫<xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A>方法，提供以判斷何時已準備好支援連接的連接點的自訂實作。</span><span class="sxs-lookup"><span data-stu-id="6c865-246">In such cases, developers can inherit from the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> class, and override the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint.SupportsConnection%2A> method, providing a custom implementation to determine when the connection point is ready to support connections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>