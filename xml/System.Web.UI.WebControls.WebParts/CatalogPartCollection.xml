<Type Name="CatalogPartCollection" FullName="System.Web.UI.WebControls.WebParts.CatalogPartCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dced91d469367821b565b3792c89e037d9ed8af3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39874486" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CatalogPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CatalogPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type CatalogPartCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>包含 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控制項的集合，用於提供使用者可以加入 Web 網頁的 Web 伺服器控制項目錄。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>類別是唯讀的集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項，通常由<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>來追蹤一組區域<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域所包含的控制項。  
  
 當 Web 組件頁面輸入目錄模式時，建立新的區域<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件，內含<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 每個<xref:System.Web.UI.WebControls.WebParts.CatalogPart>集合中的控制項可以包含零個或多個 Web 伺服器控制項，這會顯示一份可用的伺服器控制項的表單中的參考。  
  
 您可以建立<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>如果您需要執行一組的某些大量作業，例如您自己以程式設計方式使用的控制項集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 即使<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件是唯讀的您可以透過程式設計方式變更集合中所參考的基礎控制項。  
  
   
  
## Examples  
 下列程式碼範例示範了多個<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>類別。 有四個部分，此程式碼範例：  
  
-   使用者控制項，可讓您變更 Web 組件頁面上的顯示模式。  
  
-   自訂類別<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，名為`TextDisplayWebPart`，這在網頁中參考，而且會包含在其中一個<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。  
  
-   參考的網頁`TextDisplayWebPart`控制項，包含<xref:System.Web.UI.WebControls.WebParts.CatalogZone>具有兩個控制項<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制從在區域中，設定宣告的 Web 組件控制項，並包含事件驅動的程式碼建立及操作<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件。  
  
-   當您載入瀏覽器中，程式碼範例的運作方式的說明。  
  
 在程式碼範例的第一個部分是使用者控制項。 使用者控制項的原始程式碼來自另一個主題。 對於此程式碼範例正常運作，您需要取得使用者控制項的.ascx 檔案[逐步解說： 在 Web 組件頁面上的變更顯示模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)主題，並放置在此程式碼範例中的.aspx 頁面與相同的資料夾中的檔案。  
  
 在程式碼範例的第二個部分是`TextDisplayWebPart`控制項。 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確編譯它，然後將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您網站的 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 如需示範這兩種編譯方法的逐步解說，請參閱 <<c0> [ 逐步解說： 開發和使用自訂 Web 伺服器控制項](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。 請注意，控制項的屬性，名為`ContentText`; 這個屬性會保留使用者在文字方塊中輸入的值。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 在程式碼範例的第三個部分是網頁。 請注意，`<asp:catalogzone>`頁面的項目包含兩個宣告<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 這些控制項，成為自訂的一部分<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>時，會建立的物件`Button1_Click`方法執行。 <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項包含具有先前已關閉的使用者在執行階段的 Web 伺服器控制項。 中的控制項<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項可以加入至頁面。 <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制項包含的自訂宣告`TextDisplayWebPart`控制項。 使用者在目錄模式中的頁面時，可以新增`TextDisplayWebPart`控制項至頁面，使用於一般的瀏覽模式。  
  
 [!code-aspx-csharp[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#1)]  
  
 當您載入瀏覽器中的時，您可以藉由選取成目錄模式切換頁面**Catalog**中**顯示模式**下拉式清單控制項。 您可以加入自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項以選取它旁邊的核取方塊，然後按一下畫面**新增**。 按一下 **關閉**返回頁面，即可瀏覽模式。 在控制項上您剛才新增，如果您按一下動詞命令功能表 （出現在標題列的向下箭頭），然後按一下**關閉**，是從頁面移除控制項，並將其加入<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項。 將頁面傳回至目錄模式，然後按一下**頁面的類別目錄**連結以檢視的內容<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項。 請注意您現在關閉的控制項那里出現。 按一下 **顯示 CatalogPart 屬性**按鈕存取<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件，並顯示內含之特定屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域，其中包含<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項通常是所建立的控制項<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件，透過<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法。 不過，您也可以建立您自己<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>基於其他程式設計的物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 類別的新的空執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A>建構函式初始化的空執行個體<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>類別。 這個多載的建構函式會在內部使用<xref:System.Web.UI.WebControls.WebParts.CatalogZone>類別在其<xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A>方法來建立空的集合物件。 區域再建立的所有執行個體<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項在子區域樣板中，宣告和使用內部集合的方法，將它們加入。  
  
 您無法使用的這個多載<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A>建構函式建立的新執行個體<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>，並新增<xref:System.Web.UI.WebControls.WebParts.CatalogPart>給它的控制項。 您必須使用其中一個其他多載的<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A>建構函式改用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection catalogParts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="catalogParts">
          <see cref="T:System.Collections.ICollection" /> 控制項的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 類別的新執行個體，方法是傳入 <see cref="T:System.Collections.ICollection" /> 控制項的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A>建構函式初始化的執行個體<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>類別，並傳入的集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 這是一個多載<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A>可用來建立新的建構函式<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件，並將<xref:System.Web.UI.WebControls.WebParts.CatalogPart>給它的控制項。  
  
 雖然<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>建構函式所建立的執行個體是唯讀的您仍然可以存取個別<xref:System.Web.UI.WebControls.WebParts.CatalogPart>以程式設計方式控制集合中，並呼叫其屬性和方法。  
  
 使用這個建構函式的一個常見案例是如果您想要執行整組某些批次作業<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項，例如變更內容、 外觀或一組相關項目的位置。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立自訂<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>，並執行批次作業，若要變更個別<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項集合中，即使它是唯讀的。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>類別概觀主題。  
  
 中的程式碼`Button1_Click`方法會建立<xref:System.Collections.ArrayList>物件，新增兩個<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制物件，頁面中，並接著建立新<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件使用<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A>建構函式。 它也會示範如何對批次變更基礎<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項，即使集合本身是唯讀的。 集合中，執行迴圈的程式碼更新<xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>每個控制項的屬性。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 當您載入瀏覽器中的時，您可以藉由選取成目錄模式切換頁面**Catalog**中**顯示模式**下拉式清單控制項。 按一下 **顯示 CatalogPart 屬性**按鈕存取<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件，並顯示內含之特定屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 此外，如果您將滑鼠指標定位的框線內的標題文字<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制項，您可以看到當您按一下 [（描述會出現在工具提示）] 按鈕時，已加入至控制項的新描述文字。 如果您按一下**網頁型錄**連結可以顯示<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項，您會發現它也有更新的描述。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingCatalogParts As CatalogPartCollection, catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ existingCatalogParts, System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Web.UI.WebControls.WebParts.CatalogPartCollection * System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection (existingCatalogParts, catalogParts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingCatalogParts" Type="System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingCatalogParts">區域中現有 <see cref="T:System.Collections.ICollection" /> 控制項的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</param>
        <param name="catalogParts">其他 <see cref="T:System.Collections.ICollection" /> 控制項的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</param>
        <summary>初始化 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 類別的新執行個體，方法是傳入區域中現有 <see cref="T:System.Collections.ICollection" /> 控制項的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 集合，以及控制項的其他集合。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; bool" Usage="catalogPartCollection.Contains catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">進行檢查的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />，以判斷是否存在於集合中。</param>
        <summary>傳回數值，表示集合中是否存在特定控制項。</summary>
        <returns>布林值，指出集合中是否存在特定控制項。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A>方法可讓您判斷是否特定<xref:System.Web.UI.WebControls.WebParts.CatalogPart>的物件屬於<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件。  
  
   
  
## Examples  
 下列程式碼範例示範如何判斷是否特定<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項是隸屬<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>類別概觀主題。  
  
 中的程式碼`Button1_Click`方法建立新<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>名為物件`myParts`。 此方法會使用<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A>方法，以判斷是否`PageCatalogPart1`控制項存在，而且如果是的話，擷取的控制項，並變更屬性值。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 當您載入瀏覽器中的時，您可以藉由選取成目錄模式切換頁面**Catalog**中**顯示模式**下拉式清單控制項。 新增自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項以選取它旁邊的核取方塊，然後按一下畫面**新增**。 按一下 **關閉**返回頁面，即可瀏覽模式。 在控制項上您剛才新增，如果您按一下動詞命令功能表 （出現在標題列的向下箭頭），然後按一下**關閉**，是從頁面移除控制項，並將其加入<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項。 將頁面傳回至目錄模式，然後按一下**頁面的類別目錄**連結以檢視的內容<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項。 請注意，您已關閉的控制項已經加入它。 按一下 **顯示 CatalogPart 屬性**按鈕存取<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件，並顯示內含之特定屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 選取核取方塊中所包含的伺服器控制項旁邊<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項中按一下 **新增**以將它新增至頁面，然後按一下**關閉**返回頁面，即可瀏覽模式。 按一下 動詞命令功能表控制項上一次,，請注意，現在的關閉動詞命令已不存在。 中的程式碼已移除`Button1_Click`方法中，當它用<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A>方法來檢查`PageCatalogPart1`，然後將其<xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A>屬性設`false`。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.CatalogPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CatalogPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::CatalogPart ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WebParts.CatalogPart[] * int -&gt; unit" Usage="catalogPartCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.CatalogPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 物件的陣列，包含複製的集合。</param>
        <param name="index">放置集合內容的陣列起點。</param>
        <summary>複製集合至 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 物件的陣列。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo%2A>方法會很有用，當您想要組合可以包含自訂陣列<xref:System.Web.UI.WebControls.WebParts.CatalogPart>中的控制項<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件或這些控制項的子集。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As CatalogPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>參考集合的靜態、唯讀和空執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 靜態、 唯讀、 空白執行個體<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>降低記憶體使用量，萬一您想要從方法傳回適當的物件類型，或比較的執行個體與另一個物件，空集合執行個體，但是您不需要將成員新增至執行個體。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; int" Usage="catalogPartCollection.IndexOf catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />，為集合成員。</param>
        <summary>傳回集合特定成員的位置。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />，<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> 的成員。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A>方法會很有用，如果您有多個<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項在 Web 組件頁面，然後您要在集合中找出特定的控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何判斷成員的位置<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>集合，使用其<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A>屬性。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>類別概觀主題。  
  
 中的程式碼`Button1_Click`方法建立新<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>名為物件`myParts`。 此方法會使用<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A>屬性來擷取位置<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項，然後再變更控制項的屬性值。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 在瀏覽器頁面載入之後，您可以藉由選取成目錄模式切換頁面**Catalog**中**顯示模式**下拉式清單控制項。 按一下 **顯示 CatalogPart 屬性**按鈕存取<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件，並顯示內含之特定屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 按一下 **網頁型錄**連結可顯示的內容<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項。 請注意，它只有一個標題，而且沒有框線，因為其<xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A>屬性值已變更為<xref:System.Web.UI.WebControls.WebParts.PartChromeType.TitleOnly>中使用的程式碼<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A>為其擷取控制項的屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>根據集合的位置或唯一識別項，傳回集合的特定成員。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[int] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">集合中特定 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 的索引。</param>
        <summary>根據成員在集合中的位置，取得或設定集合中的成員。</summary>
        <value>位在集合中特定索引處的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A>索引子可讓您存取基礎<xref:System.Web.UI.WebControls.WebParts.CatalogPart>中的控制項<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件的索引，並變更其屬性值或呼叫方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何存取的成員<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件使用其索引。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>類別概觀主題。  
  
 中的程式碼`Button1_Click`方法建立新<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>名為物件`myParts`。 請注意，此方法會使用<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A>索引子來擷取集合的第一個成員的資訊。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 當您載入瀏覽器中的時，您可以藉由選取成目錄模式切換頁面**Catalog**中**顯示模式**下拉式清單控制項。 按一下 **顯示 CatalogPart 屬性**按鈕存取<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件，並顯示內含之特定屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 中可用的伺服器控制項的計數<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>控制項使用來取得<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A>中的索引子`Button1_Click`方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(id As String) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[System::String ^] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(System::String ^ id); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">集合中特定 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 的唯一識別碼。</param>
        <summary>根據唯一字串識別項傳回集合成員。</summary>
        <value>在集合中，ID 等於 <paramref name="id" /> 值的第一個 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A>索引子可讓您存取基礎<xref:System.Web.UI.WebControls.WebParts.CatalogPart>中的控制項<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>所使用的字串識別項的物件。 雖然<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件是唯讀的您可以變更屬性值，或在存取索引子的基礎控制項上呼叫方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何存取的成員<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件使用其字串識別碼值。 完整的程式碼才能執行範例時，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>類別概觀主題。  
  
 中的程式碼`Button1_Click`方法建立新<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>名為物件`myParts`。 此方法會使用<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A>要擷取其資訊的索引子<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制項，也就是第二個集合的成員。  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 當您載入瀏覽器中的時，您可以藉由選取成目錄模式切換頁面**Catalog**中**顯示模式**下拉式清單控制項。 按一下 **顯示 CatalogPart 屬性**按鈕存取<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>物件，並顯示內含之特定屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 中可用的伺服器控制項的計數<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制項使用來取得<xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A>中的索引子`Button1_Click`方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>