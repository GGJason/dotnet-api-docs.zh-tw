<Type Name="CatalogZoneBase" FullName="System.Web.UI.WebControls.WebParts.CatalogZoneBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c49e4422ee72a3f973c1370a025385ca5941745" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386891" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CatalogZoneBase : System.Web.UI.WebControls.WebParts.ToolZone, System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CatalogZoneBase extends System.Web.UI.WebControls.WebParts.ToolZone implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CatalogZoneBase&#xA;Inherits ToolZone&#xA;Implements IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZoneBase abstract : System::Web::UI::WebControls::WebParts::ToolZone, System::Web::UI::IPostBackDataHandler" />
  <TypeSignature Language="F#" Value="type CatalogZoneBase = class&#xA;    inherit ToolZone&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.ToolZone</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>作為充當目錄之所有區域控制項的基底類別。 目錄包含 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的清單，使用者可以將這些控制項加入網頁。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別是基底類別繼承自<xref:System.Web.UI.WebControls.WebParts.ToolZone>類別。 它提供一組基本的行為衍生的區域。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別提供唯一的使用者介面 (UI)，可讓使用者加入<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項和其他伺服器控制項加入網頁。 衍生自的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別，例如<xref:System.Web.UI.WebControls.WebParts.CatalogZone>，是實際放在網頁的控制項。 它們是做為其他控制項稱為容器<xref:System.Web.UI.WebControls.WebParts.CatalogPart>建立清單的使用者新增至網頁的伺服器控制項的控制項。 衍生自區域<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別可以出現只有當頁面處於目錄顯示模式。  
  
> [!NOTE]
>  A<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>只能包含區域<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項和相反地，<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項可以只在位於<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域。  
  
 將伺服器控制項加入至類別目錄的機制是下列三個控制項衍生自基底的一組<xref:System.Web.UI.WebControls.WebParts.CatalogPart>類別。  
  
|控制項|描述|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|維護參考至頁面已關閉的控制項。 這些控制項可以由使用者重新開啟 （已重新新增到網頁）。|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|包含控制項中的 Web 組件類別目錄，在網頁標記中宣告的參考。 這些控制項可以由使用者加入至 Web 網頁。|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|提供使用者定義檔案上載至目錄，好讓控制項可以加入至網頁的 UI。 定義檔案是 XML 檔案。Web 組件檔案名稱副檔名，匯入設定的控制項。 可以匯入定義檔案之前，控制項必須要有伺服器上。|  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別具有許多屬性都適用於顯示類別目錄中，<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>屬性會參考從類別目錄選取的控制項加入頁面中，動詞命令時<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>屬性參考的動詞命令關閉目錄，並傳回至瀏覽模式的頁面的顯示模式。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>屬性參考的所有集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域中的控制項。 文字導向的數個屬性，例如<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>， <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>，和<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>，覆寫基底屬性，以提供適用於類別目錄的預設文字。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>屬性包含旁的下拉式清單控制項可讓使用者選擇哪一個區域的控制項將會加入至文字。  
  
 數個其他屬性都包含在<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>屬性是目前選取的唯一字串識別碼<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A>屬性會指出是否顯示可以藉由設定與控制項相關聯的圖示<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>屬性<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>屬性包含連結的樣式屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>目前未選取的區域中的控制項。 相反地，<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>屬性包含樣式屬性的連結，以<xref:System.Web.UI.WebControls.WebParts.CatalogPart>使用者目前選取的區域中的控制項。  
  
 除了屬性之外，另外還有中的某些方法<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別，除了標準的事件處理和轉譯方法繼承自其他基底控制項，唯一專為了處理之類別目錄控制項。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>方法會建立括住每個色彩 （週邊 UI 項目例如框線、 動詞命令、 圖示和標題）<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域中的控制項，也會處理控制項的轉譯。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法抽象方法，衍生的類別覆寫它建立的所有執行個體<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域內包含的控制項。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>如果，可以由衍生類別呼叫方法的集合<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域變更，針對某些程式設計的原因，並在衍生的類別中的控制項需要重新建立集合。 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>方法會將載入的原有狀態核取方塊旁的 <xref:System.Web.UI.WebControls.WebParts.WebPart>控制項在目錄中，每當頁面回傳至伺服器; 相反地，<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A>方法儲存狀態的核取方塊。 最後，<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A>方法提供給每個連結的所有呈現<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域內包含的控制項。  
  
   
  
## Examples  
 下列程式碼範例會示範數個宣告式和以程式設計方式使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別。 類別是抽象的因為程式碼範例會使用衍生<xref:System.Web.UI.WebControls.WebParts.CatalogZone>隨附於 Web 組件控制項集合的屬性和它所繼承的方法，來示範類別<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別。  
  
 程式碼範例包含四個部分：  
  
-   使用者控制項，可讓您變更在網頁上的顯示模式。  
  
-   Web 網頁，其中包含參考<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項，而某些程式碼示範一些索引鍵的用法<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別成員。  
  
-   自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>已加入至自訂控制項<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項。  
  
-   此範例在瀏覽器中的運作方式的描述。  
  
 這個程式碼範例的第一個部分是使用者控制項，可讓您變更在頁面上的顯示模式。 如需詳細資料會顯示此控制項中模式和原始碼的說明，請參閱[逐步解說： 變更 Web 組件頁面上顯示的模式](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0)。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/displaymodemenucs.ascx#8)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/displaymodemenuvb.ascx#8)]  
  
 程式碼範例的第二個部分是包含的宣告式參考的網頁<xref:System.Web.UI.WebControls.WebParts.CatalogZone>控制項。 在頁面頂端附近是兩個`Register`指示詞-一個用於的使用者控制項，而另一個用於自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項。 請注意以下`<asp:WebPartZone>`項目是`<asp: CatalogZone>`包含自訂的宣告式參考的項目<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，以及 ASP.NET<xref:System.Web.UI.WebControls.Calendar>控制項。 區域也會有各種不同的標記和屬性設定為決定其外觀和行為。 之間`<script>`頁面中的標記為各種不同的事件處理程式碼，最其中示範各種程式設計方式使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>成員。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#1)]  
  
 程式碼範例的第三個部分是自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，名為`TextDisplayWebPart`。 宣告內該區域，並在終端使用者可以將它從類別目錄加入頁面。 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確地進行編譯，並將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您的網站 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 如需示範這兩種方法的編譯，請參閱[逐步解說： 開發和使用自訂 Web 伺服器控制項](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/textdisplaywebpart.cs#9)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/textdisplaywebpart.vb#9)]  
  
 請注意，工作的程式碼範例，您必須在 Web.config 檔案，以啟用匯出 Web 組件描述檔中加入的設定。 確定您具有網頁上的相同目錄中的 Web.config 檔案，此程式碼範例。 內`<system.web>`區段中，請確定沒有`<webParts>`具有項目`enableExport`屬性設為`true`，在下列標記中。  
  
 `<webParts enableExport="true">`  
  
 `...`  
  
 `</webParts>`  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單方塊切換至 類別目錄的顯示模式。 當目錄為可見時，您可以看到這兩個伺服器控制項，可以從類別目錄加入至頁面上，而您可以也請注意在 UI 中的效果的宣告式和以程式設計方式使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別成員。  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>如果您想要開發自訂的區域，用於裝載<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />控制項，您必須判斷您是否要提供區域範本支援。區域範本由實作的型別<see cref="T:System.Web.UI.ITemplate" />介面，而且不需要如果您想要讓網頁開發人員使用您的自訂區域，來參考<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />在您的區域，在網頁上的宣告式標記內的控制項。如果您需要的範本支援的區域，您應該繼承自<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />類別。相反地，如果您的自訂區域，並將其<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />控制項將會各自獨立，而且則不使用任何網頁程式開發人員在區域範本中，以宣告方式指定控制項的選項會以程式設計方式建立，則您可以直接繼承從<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />類別。如果您繼承自<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />類別，您必須覆寫<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />方法，並加入<see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />或您想要您目錄中其他伺服器控制項<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />物件。</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CatalogZoneBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CatalogZoneBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化這個類別，以供繼承的類別執行個體使用。 這個建構函式只能由繼承的類別呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當在衍生的類別初始化時，例如呼叫建構函式<xref:System.Web.UI.WebControls.WebParts.CatalogZone>類別提供的 Web 組件控制項集合。 基底<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.%23ctor%2A>準備頁面以顯示 Web 組件類別目錄的使用者介面 (UI)，藉由傳遞適當的建構函式可協助<xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>物件<xref:System.Web.UI.WebControls.WebParts.WebPartManager>控制項。 具體來說，建構函式傳遞<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb AddVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AddVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ AddVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AddVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 物件的參考，這個物件可讓使用者從目錄加入控制項至 Web 組件頁面。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，可以讓使用者從目錄加入控制項至 Web 網頁。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 加入動詞命令由參考<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>在控制項上的屬性衍生自<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別。 加入動詞命令新增使用者選取類別目錄至網頁中的控制項。 一般而言，加入動詞命令會顯示在使用者介面 (UI) 中為<xref:System.Web.UI.WebControls.Button>控制，雖然也可以是連結或影像。  
  
 加入動詞命令是一個區域層級控制項，這表示，雖然可能有數個<xref:System.Web.UI.WebControls.WebParts.CatalogPart>目錄中的控制項，加入動詞命令適用於使用者所選取的所有控制項，然後將它們加入選取的區域。  
  
   
  
## Examples  
 下列程式碼範例示範如何存取<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>屬性以宣告方式和以程式設計的方式。 若要執行範例所需的完整程式碼，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別概觀。  
  
 第一個部分的程式碼範例示範如何存取<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.ApplyVerb%2A>以宣告方式在網頁中的屬性。 這個範例會自訂動詞命令的文字。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 此範例的第二個部分示範如何存取<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.AddVerb%2A>屬性以程式設計方式，利用切換按鈕以啟用或停用它。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單，切換到 類別目錄的顯示模式。 顯示類別目錄時，您可以檢查自訂的文字在<xref:System.Web.UI.WebControls.Button>控制項加入動詞命令，而且您可以按一下**啟用或停用的動詞命令**按鈕，以示範您可以透過程式設計方式存取套用動詞命令。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="CatalogPartChrome">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CatalogPartChrome" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogPartChrome As CatalogPartChrome" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ CatalogPartChrome { System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CatalogPartChrome : System.Web.UI.WebControls.WebParts.CatalogPartChrome" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得與 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> 區域相關聯之 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 類別執行個體的參考。</summary>
        <value>與區域相關聯的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A>呼叫方法時，它會建立一個執行個體<xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome>類別，而這個執行個體用來呈現週邊設備的使用者介面 (UI) 項目 （也稱為 chrome） 所有<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域中的控制項。  
  
 Chrome 項目，個別<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項包含其框線和標題的文字。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>隨附 Web 組件控制項集合的控制項預設沒有標頭指令動詞。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="CatalogParts">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CatalogParts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatalogParts As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CatalogParts { System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CatalogParts : System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 區域中包含之所有 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控制項的集合。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />，包含區域中的所有個別 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控制項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>屬性提供所有的集合參考<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域中的控制項。 它會參考兩者<xref:System.Web.UI.WebControls.WebParts.CatalogPart>提供 Web 組件控制項集合，以及任何自訂控制項<xref:System.Web.UI.WebControls.WebParts.CatalogPart>新增至區域的控制項。  
  
 另一種方法來存取時，一開始建立集合<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>屬性和屬性呼叫<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法。  
  
> [!NOTE]
>  請注意任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>加入至集合的<xref:System.Web.UI.WebControls.WebParts.CatalogPart>的實作中的控制項<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法必須有指派給它的 ID 屬性的值，否則將會擲回例外狀況集合指派給<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何存取<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>屬性以程式設計的方式。 若要執行範例所需的完整程式碼，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別概觀。  
  
 程式碼範例示範如何存取<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>屬性，逐一查看集合，並列出所有識別碼<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域中的控制項。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#4)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#4)]  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單，切換到 類別目錄的顯示模式。 顯示類別目錄時，您可以按一下**清單它**按鈕，以示範如何<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>才能存取內容。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">加入集合中的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 未對其 ID 屬性指派任何值。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="protected override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="catalogZoneBase.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 Web 網頁從目錄顯示模式切換至標準瀏覽模式。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Close%2A>方法就會忽略任何目前選取的控制項類別目錄中。 它只會呼叫<xref:System.Web.UI.WebControls.WebParts.WebPartManager>傳回網頁，即可瀏覽模式的控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode" />
        <altmember cref="F:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode" />
      </Docs>
    </Member>
    <Member MemberName="CloseVerb">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.WebPartVerb CloseVerb" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CloseVerb As WebPartVerb" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WebParts::WebPartVerb ^ CloseVerb { System::Web::UI::WebControls::WebParts::WebPartVerb ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CloseVerb : System.Web.UI.WebControls.WebParts.WebPartVerb" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartVerb</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" /> 物件的參考，該物件可讓使用者關閉目錄使用者介面 (UI)，並讓頁面返回標準瀏覽模式。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />，可以讓使用者關閉 Web 網頁上的目錄 UI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 關閉的動詞命令由參考<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>在控制項上的屬性衍生自<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別。  
  
 使用者可以按一下區域頁尾中關閉的動詞命令。 當使用者按一下關閉的動詞命令，任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>使用者選取的控制項都會被忽略，目錄 UI 隨即關閉，而傳回至一般的瀏覽模式的網頁。  
  
 關閉的動詞命令是一個區域層級控制項，這表示它的動作適用於整個區域的層級。 當使用者按一下關閉動詞命令時，會忽略任何已選取但不是會加入至網頁的控制項、 類別目錄會關閉，而傳回至瀏覽模式的網頁。  
  
   
  
## Examples  
 下列程式碼範例示範如何存取<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>屬性以宣告方式和以程式設計的方式。 若要執行範例所需的完整程式碼，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別概觀。  
  
 第一個部分的程式碼範例示範如何存取<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>以宣告方式在網頁中的屬性。 這個範例自訂<xref:System.Web.UI.WebControls.WebParts.WebPartVerb.Description%2A>動詞命令的屬性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 此範例的第二個部分示範如何存取<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CloseVerb%2A>屬性以程式設計方式，利用切換按鈕以啟用或停用它。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#3)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#3)]  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單，切換到 類別目錄的顯示模式。 類別目錄時，滑鼠指標放置**關閉** 按鈕，您可以看到工具提示 中的描述文字。 您也可以按一下**啟用或停用的動詞命令**按鈕，以示範您可以透過程式設計方式存取關閉的動詞命令。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogPartChrome">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartChrome CreateCatalogPartChrome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateCatalogPartChrome () As CatalogPartChrome" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::WebParts::CatalogPartChrome ^ CreateCatalogPartChrome();" />
      <MemberSignature Language="F#" Value="abstract member CreateCatalogPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartChrome&#xA;override this.CreateCatalogPartChrome : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartChrome" Usage="catalogZoneBase.CreateCatalogPartChrome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartChrome</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" /> 物件的執行個體，這個物件是用來呈現區域中 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控制項的週邊使用者介面 (UI) 項目。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />，呈現區域的週邊 UI 項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogPartChrome%2A> 方法會傳回 <xref:System.Web.UI.WebControls.WebParts.CatalogPartChrome> 物件。 Chrome 項目，個別<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項包含其框線和標題的文字。 <xref:System.Web.UI.WebControls.WebParts.CatalogPart>隨附 Web 組件控制項集合的控制項預設沒有標頭指令動詞。 不過，它可能是設定<xref:System.Web.UI.WebControls.WebParts.Part.ChromeState%2A>屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制，以便您可以最小化，並視需要以程式設計的方式還原控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartChrome" />
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="abstract member CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZoneBase.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>提供衍生區域可覆寫的基底方法宣告，以處理建立區域所包含之 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控制項的細節。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />，包含與區域相關聯之 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控制項的集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法沒有提供實作。 它用來在衍生類別中實作，應該用來建立集合的執行個體<xref:System.Web.UI.WebControls.WebParts.CatalogPart>只要裝載的 Web 網頁進入目錄模式區域時，所包含的控制項。 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A?displayProperty=nameWithType>方法提供實作的其中一個範例<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法。  
  
> [!NOTE]
>  請注意任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>加入至集合的<xref:System.Web.UI.WebControls.WebParts.CatalogPart>的實作中的控制項<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>方法必須有指派給它的 ID 屬性的值，否則將會擲回例外狀況集合指派給<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogParts%2A>屬性。  
  
 這個方法可以建立<xref:System.Web.UI.WebControls.WebParts.CatalogPart>從數個來源的控制項： 宣告中的持續性格式的控制項<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制項或在不同的儲存機制，例如 XML 檔案或資料庫中保存的控制項。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>當開發人員建立自訂<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />控制項應該繼承自<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />或<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />類別，並覆寫這個方法，如果他們想要建立自訂<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartChrome" />物件來呈現其自訂<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />控制項。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="catalogZoneBase.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立與 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 區域相關聯的一組子控制項。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmptyZoneText">
      <MemberSignature Language="C#" Value="public override string EmptyZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EmptyZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定區域不包含控制項時出現的訊息。</summary>
        <value>字串，包含空白區域中出現的訊息。 預設的特定文化特性字串是由 .NET Framework 所提供。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字串值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>屬性會顯示網頁進入目錄模式時，如果<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域未包含任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>屬性以宣告方式。 若要執行範例所需的完整程式碼，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別概觀。  
  
 請注意，程式碼範例會宣告兩個`<asp:catalogzone>`元素和第二個未宣告任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項，但它並未指派值給<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>屬性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單，切換到 類別目錄的顯示模式。 顯示類別目錄時，請注意下, 面第一個區域，其中包含兩個<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項，第二個區域會出現，而顯示的內容<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.EmptyZoneText%2A>屬性因為它不包含控制項。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.EmptyZoneText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定區域的頁首區域文字。</summary>
        <value>此字串包含區域的頁首文字。 預設的特定文化特性字串是由 .NET Framework 所提供。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字串值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>屬性顯示在標頭區域<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域，這是內部網路區域的頂端。 文字<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>網頁進入目錄模式和類別目錄的使用者介面 (UI) 變得可見時，會顯示屬性。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>屬性以宣告方式和程式設計的方式。 若要執行範例所需的完整程式碼，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別概觀。  
  
 請注意，程式碼範例會宣告兩個`<asp:catalogzone>`項目。 第二個未宣告任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項，但兩者宣告的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>屬性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在程式碼範例中，值的第二個<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>中第一個區域屬性以程式設計的方式指派給不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單，切換到 類別目錄的顯示模式。 顯示類別目錄時，請注意每個值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>每個區域的頁首區域中顯示的屬性。 您可以按一下**設定區域文字屬性** 按鈕，而<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.HeaderText%2A>上層區域的屬性設定為在程式碼中指派給它的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebZone.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="InstructionText">
      <MemberSignature Language="C#" Value="public override string InstructionText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InstructionText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property InstructionText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InstructionText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InstructionText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定為使用者提供指示之區域中的文字。</summary>
        <value>字串，包含終端使用者的指示。 預設值是 Web 組件控制集所提供的文化特性字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 字串值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>屬性顯示的標頭區域的正下方<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域。 文字<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>網頁進入目錄模式和類別目錄的使用者介面 (UI) 變得可見時，會顯示屬性。  
  
 目的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>屬性是為使用者提供一般指示上會顯示在目錄 UI 時該怎麼辦。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>屬性以宣告方式和程式設計的方式。 若要執行範例所需的完整程式碼，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別概觀。  
  
 請注意，程式碼範例會宣告兩個`<asp:catalogzone>`元素和第一個宣告的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>屬性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在程式碼範例中，值的第二個<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>中第一個區域屬性以程式設計的方式指派給不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單，切換到 類別目錄的顯示模式。 顯示類別目錄時，會注意到的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>每個區域的頁首區域中顯示的屬性。 您可以按一下**設定區域文字屬性** 按鈕，而<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InstructionText%2A>上層區域的屬性設定為在程式碼中指派給它的值。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ToolZone.InstructionText" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateCatalogParts">
      <MemberSignature Language="C#" Value="protected void InvalidateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvalidateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvalidateCatalogParts ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvalidateCatalogParts();" />
      <MemberSignature Language="F#" Value="member this.InvalidateCatalogParts : unit -&gt; unit" Usage="catalogZoneBase.InvalidateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>終結與 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 區域相關聯的 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控制項集合。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>可以由衍生類別呼叫方法，如果清單<xref:System.Web.UI.WebControls.WebParts.CatalogPart>與相關聯控制項<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域已因為某種原因，變更，而且衍生的類別需要取得的更新的清單<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 在衍生的類別應該先呼叫<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A>摧毀目前的集合，然後按一下 基底類別會呼叫<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A>視需要來建立更新的集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="catalogZoneBase.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">先前儲存的狀態資料。</param>
        <summary>從控制項屬性的上一個頁面要求載入狀態，即使控制項上已停用檢視狀態，這些屬性應該還是會在回傳之間保存。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> 不是有效的控制項狀態。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="catalogZoneBase.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控制項的索引鍵識別項。</param>
        <param name="postCollection">傳送到伺服器的名稱/值組集合。</param>
        <summary>頁面回傳至伺服器時，處理對應於目錄中 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項的核取方塊狀態。</summary>
        <returns>與覆寫的基底方法相反，這個方法永遠都傳回 <see langword="false" />，因為類別並未公開任何變更事件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法逐一查看集合的<xref:System.Web.UI.WebControls.CheckBox>來判斷哪一個控制項<xref:System.Web.UI.WebControls.WebParts.WebPart>或已由使用者選取類別目錄中的其他伺服器控制項。 選取的項目指派給內部的陣列，接著會處理將對應的控制項加入至 Web 網頁。  
  
 此方法不是從您的程式碼; 呼叫它會在內部使用 Web 組件控制項集合。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="catalogZoneBase.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">先前儲存的狀態資料。</param>
        <summary>載入先前儲存的區域狀態資訊。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法主要供.NET Framework 基礎結構，並不是直接從您的程式碼使用。 不過，您可以覆寫這個方法，以指定自訂的伺服器控制項如何還原其檢視狀態。 如需詳細資訊，請參閱[ASP.NET 狀態管理概觀](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadViewState%2A>方法會先呼叫基底的方法，以載入任何先前已存在的狀態資訊。 接下來，它會加入包含關閉的動詞命令，新增動詞的狀態資訊的檢視狀態資料物件<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>物件，而<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>物件。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> 物件的大小不等於目前檢視狀態物件的大小。</exception>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="catalogZoneBase.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>註冊頁面物件，讓頁面需要控制項狀態。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="catalogZoneBase.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">包含事件資料的 <see cref="T:System.EventArgs" />。</param>
        <summary>引發 <see cref="E:System.Web.UI.Control.PreRender" /> 事件，並註冊頁面物件，讓它需要回傳。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style PartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style PartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PartLinkStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ PartLinkStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PartLinkStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控制項之樣式屬性的物件，而這些控制項目前在區域中並未選取。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" />，包含目前未選取之控制項的樣式屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域，連結會顯示每一種<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項： <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>，和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>。 當使用者按一下其中一個連結，對應<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項成為選取的控制項，並顯示該選取的控制項所包含的子控制項。  
  
 <xref:System.Web.UI.WebControls.Style>所參考物件<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>屬性包含的樣式屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>目前未選取的控制項。 雖然屬性所參考的物件是唯讀，但您仍可用它來設定基礎的樣式特性，如未選取<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>屬性以宣告方式和程式設計的方式。 若要執行範例所需的完整程式碼，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別概觀。  
  
 請注意，程式碼範例的第一個部分會宣告兩個`<asp:catalogzone>`元素和第一個宣告的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>屬性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在第二個部分的程式碼範例中，文字色彩為未選取<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項設定為不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單，切換到 類別目錄的顯示模式。 顯示類別目錄時，會注意到未選取的樣式屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域中所列的控制項 (根據預設，所選<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項是<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>控制項)。 您可以按一下**變更組件連結樣式**按鈕來變更未選取控制項的文字色彩。 您也可以按一下未選取的控制項，以查看選取控制項時，樣式屬性如何變更的連結。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected override void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="override this.RaisePostBackEvent : string -&gt; unit" Usage="catalogZoneBase.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <see cref="T:System.String" />，包含事件的引數。</param>
        <summary>執行與其中一個區域動詞命令相關聯的動作，或引發回傳至伺服器的事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`eventArgument`參數資料表示，已按一下加入動詞命令或關閉的動詞命令，然後在<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent%2A>方法執行動作相關聯的動詞命令，例如新增<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項頁面上，或關閉目錄。 如果其他原因正在呼叫的方法，引發回傳至伺服器事件叫用基底方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果您想要新增自訂動詞<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />區域，您需要覆寫<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />方法以處理事件，若使用者按一下自訂動詞命令。</para>
        </block>
        <altmember cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，收到區域內容。</param>
        <summary>將區域呈現至指定的 <see cref="T:System.Web.UI.HtmlTextWriter" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.Render%2A>方法會覆寫基底方法，從<xref:System.Web.UI.WebControls.WebControl>類別來呼叫<xref:System.Web.UI.Page.VerifyRenderingInServerForm%2A>方法，它會驗證 HTML 表單，會在執行階段區域控制項的轉譯。 驗證之後，方法就會呈現該區域的其餘內容。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebPartZoneBase.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderBody">
      <MemberSignature Language="C#" Value="protected override void RenderBody (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderBody(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderBody (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderBody(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBody : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderBody writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，收到區域的主體內容。</param>
        <summary>覆寫基底方法以呈現繼承自 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 類別之區域的主體區域。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>方法呈現的主體區域<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域使用，這是主要內容區域的頁首和頁尾區域之間，並包含<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>方法會覆寫中的基底方法<xref:System.Web.UI.WebControls.WebParts.WebZone>類別，以提供位址配置和樣式的特定的轉譯屬性 (attribute) 只會套用到<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域。 方法會呈現資料表，其中包含主體的整個內容，並在該資料表中，設定不同的屬性值，依據各種條件，包括多少<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項是在區域中。 如果有多個<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項的每個控制項，會建立連結，和會顯示目前選定控制項的內容。 特殊的樣式屬性會設定<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CatalogPartChrome%2A>針對選取的屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>對照目前未選取的控制項。  
  
 如果有任何<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域中的控制項<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderBody%2A>方法呈現的值<xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EmptyZoneText%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.RenderBody(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderBody(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderCatalogPartLinks">
      <MemberSignature Language="C#" Value="protected virtual void RenderCatalogPartLinks (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderCatalogPartLinks(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderCatalogPartLinks (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderCatalogPartLinks(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderCatalogPartLinks : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderCatalogPartLinks : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderCatalogPartLinks writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，接收區域控制項之連結的內容。</param>
        <summary>呈現 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 區域中個別 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控制項的連結。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks%2A>方法呈現連結至個別<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制區域中，如果有多個<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。  
  
 目前選取的連結<xref:System.Web.UI.WebControls.WebParts.CatalogPart>要呈現控制項以不同的方式，以便未選取的控制項突出。 開發人員可以使用設定選取和取消選取控制連結的樣式屬性<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>和<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>屬性，分別。  
  
 若要連結<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域中的控制項不是導覽; 它們是用來顯示控制項的使用者介面 (UI)。 當使用者按一下控制項的連結時，任何其他顯示控制項的 UI 隱藏的並會顯示所選控制項的 UI。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>如果您建立自訂的類別繼承自<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />類別，您可以選擇覆寫<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderCatalogPartLinks(System.Web.UI.HtmlTextWriter)" />方法。這個方法可讓您以程式設計方式控制如何連結至<see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />呈現您的區域中的控制項。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RenderFooter">
      <MemberSignature Language="C#" Value="protected override void RenderFooter (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderFooter(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderFooter (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderFooter(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderFooter : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderFooter writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，呈現區域的頁尾區域。</param>
        <summary>呈現 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 區域的頁尾區域。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 頁尾<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域是區域包含的區域層級動詞命令，例如加入動詞命令和關閉的動詞命令的右下區域。 在基礎標記中，頁尾是只是以 HTML 表格儲存格。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderFooter%2A>方法會先建立頁尾的樣式屬性，然後呼叫<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A>呈現新增並關閉動詞命令的方法。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.WebZone.RenderFooter(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderVerbs">
      <MemberSignature Language="C#" Value="protected override void RenderVerbs (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderVerbs(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderVerbs (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderVerbs(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderVerbs : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="catalogZoneBase.RenderVerbs writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <see cref="T:System.Web.UI.HtmlTextWriter" />，呈現區域的動詞命令。</param>
        <summary>在 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 區域的頁尾區域呈現動詞命令。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs%2A>方法呈現加入動詞命令和關閉的動詞命令的頁尾區域內<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />方法不會處理任何自訂轉譯<see cref="T:System.Web.UI.WebControls.WebParts.WebPartVerb" />開發人員加入至自訂的物件<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />區域。如果您想要新增自訂動詞<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />類別，您必須繼承自<see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" />類別，並覆寫<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RenderVerbs(System.Web.UI.HtmlTextWriter)" />方法，可用來呈現您的區域的自訂動詞命令。您也必須覆寫<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />方法以處理事件時由使用者所按下的自訂動詞命令。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ToolZone.RenderVerbs(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.RaisePostBackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="catalogZoneBase.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存在 Web 網頁回傳至伺服器以後發生的任何 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 控制項狀態變更。</summary>
        <returns>
          <see cref="T:System.Object" />，包含控制項的狀態資料。 如果狀態沒有變更，方法就會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState%2A>方法而言是不可或缺的控制項的作業 （例如索引或關鍵字） 且為個別控制項的檢視狀態資料從狀態資料。  
  
 方法會先呼叫基底的方法，來儲存控制項的現有狀態資料。 接下來，它會判斷是否<xref:System.Web.UI.WebControls.WebParts.CatalogPart>目前選取的區域中的控制項，藉由檢查是否<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>屬性有值。 如果沒有選取的控制項，方法會更新現有的狀態資料從選取的控制項狀態資料，然後傳回 狀態的所有資料。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>您可以選擇覆寫<see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveControlState" />方法在衍生類別中的，以便您可以更新區域中的其他自訂物件的已儲存的控制項狀態。</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.SaveControlState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="catalogZoneBase.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>儲存自頁面回傳至伺服器以來所發生的任何檢視狀態變更。</summary>
        <returns>傳回區域控制項的目前檢視狀態。 如果沒有與區域相關聯的檢視狀態，則這個方法會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SaveViewState%2A>方法呼叫基底方法，以儲存相關聯的檢視狀態<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域。 接下來，它會將儲存的新增和關閉的動詞，以及任何檢視狀態<xref:System.Web.UI.WebControls.Style>物件相關聯<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>和<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>屬性。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="SelectedCatalogPartID">
      <MemberSignature Language="C#" Value="public string SelectedCatalogPartID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedCatalogPartID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectedCatalogPartID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedCatalogPartID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedCatalogPartID : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定字串，做為目前在區域中所選取之 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控制項的識別項。</summary>
        <value>做為目前已選取控制項之識別項的字串。 預設值是控制項之 <see cref="P:System.Web.UI.Control.ID" /> 屬性的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>屬性可讓您設定目前選取您選擇的識別項<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。 這不會變更控制項的<xref:System.Web.UI.Control.ID%2A>屬性值，因此您可以使用這個屬性，以程式設計方式供您自己。 例如，如果您想要一律執行某些程式設計動作上目前所選<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項，這個屬性允許您透過您事先設定的已知值來存取該控制項。  
  
 這個屬性無法由佈景主題或樣式表主題設定。 如需詳細資訊，請參閱<xref:System.Web.UI.ThemeableAttribute>和[ASP.NET 佈景主題和面板](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>屬性以宣告方式和程式設計的方式。 若要執行範例所需的完整程式碼，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別概觀。  
  
 請注意，程式碼範例的第一個部分會宣告兩個`<asp:catalogzone>`元素和第一個宣告的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>屬性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在第二個部分的程式碼範例中，將文字值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>顯示目前選取的控制項屬性。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#6)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#6)]  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單，切換到 類別目錄的顯示模式。 顯示類別目錄時，按一下其中一個連結<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項以選取它。 然後按一下 [**顯示選取 CatalogPart 識別碼**] 按鈕以顯示屬性值。 請注意，屬性的值以宣告方式設定區域的值。 如果您選取其他<xref:System.Web.UI.WebControls.WebParts.CatalogPart>區域中的控制項，相同的值會變成值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>選取時，每個控制項的屬性。 如果您未設定的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedCatalogPartID%2A>屬性，預設值的值一定是的<xref:System.Web.UI.Control.ID%2A>目前選取的控制項屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedPartLinkStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SelectedPartLinkStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SelectedPartLinkStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedPartLinkStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ SelectedPartLinkStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedPartLinkStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> 控制項之樣式屬性的物件，而此控制項目前已在區域中選取。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" />，包含目前已選取之控制項的樣式屬性。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域，連結會顯示每一種<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項： <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>， <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>，和<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>。 當使用者按一下其中一個連結，對應<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項成為選取的控制項，並顯示該選取的控制項所包含的子控制項。  
  
 <xref:System.Web.UI.WebControls.Style>所參考物件<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>屬性包含的連結的樣式屬性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>目前選取的控制項。 雖然屬性所參考的物件是唯讀，但您仍可用它來設定所選取的基礎的樣式特性<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>屬性以宣告方式和程式設計的方式。 若要執行範例所需的完整程式碼，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別概觀。  
  
 請注意，程式碼範例的第一個部分會宣告兩個`<asp:catalogzone>`元素和第一個宣告的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>屬性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在第二個部分的程式碼範例中，文字色彩為所選<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制設為不同的值。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#7)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#7)]  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單，切換到 類別目錄的顯示模式。 顯示類別目錄時，請按一下所列出的其中一個連結<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項，並注意選定控制項的樣式屬性。 您可以按一下**變更組件連結樣式**按鈕來變更所選控制項的文字色彩。 您也可以按一下未選取的控制項，以查看選取控制項時，樣式屬性如何變更的連結。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectTargetZoneText">
      <MemberSignature Language="C#" Value="public virtual string SelectTargetZoneText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectTargetZoneText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectTargetZoneText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectTargetZoneText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectTargetZoneText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定目錄使用者介面 (UI) 中控制項旁的文字，此控制項允許使用者選擇要加入已選取控制項的區域。</summary>
        <value>字串，包含顯示在區域選取控制項旁的文字。 預設的特定文化特性字串是由 .NET Framework 所提供。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在目錄 UI 第一次出現時，使用者可以選取其中一個<xref:System.Web.UI.WebControls.WebParts.CatalogPart>控制項，例如<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>，其中包含<xref:System.Web.UI.WebControls.WebParts.WebPart>或可以加入至網頁上其他伺服器控制項。 使用者會選取一個或多個控制項，並可以再使用<xref:System.Web.UI.WebControls.DropDownList>控制類別目錄的頁尾區域中，並且選擇<xref:System.Web.UI.WebControls.WebParts.WebPartZone>中要放置選取的伺服器控制項的頁面上的控制項。 文字值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>屬性顯示旁<xref:System.Web.UI.WebControls.DropDownList>控制項為簡單的指示。  
  
 這個屬性的值設定時，可以自動儲存到資源檔使用設計工具。 如需詳細資訊，請參閱<xref:System.ComponentModel.LocalizableAttribute>和[全球化和當地語系化](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>屬性以宣告方式和程式設計的方式。 若要執行範例所需的完整程式碼，請參閱 < 範例 > 一節的<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別概觀。  
  
 請注意，程式碼範例的第一個部分會宣告兩個`<asp:catalogzone>`元素和第一個宣告的值<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>屬性。  
  
 [!code-aspx-csharp[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZoneBase_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#2)]  
  
 在程式碼範例中，值的第二個<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectTargetZoneText%2A>屬性以程式設計方式變更。  
  
 [!code-csharp[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/CS/catalogzonebasecs.aspx#5)]
 [!code-vb[WebParts_CatalogZoneBase_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZoneBase_Overview/VB/catalogzonebasevb.aspx#5)]  
  
 當您載入瀏覽器中的時，您可以選取**目錄**從下拉式清單，切換到 類別目錄的顯示模式。 顯示類別目錄時，請注意旁邊顯示的文字<xref:System.Web.UI.WebControls.DropDownList>在頁尾中的類別目錄的控制項。 您可以按一下**設定區域文字屬性**按鈕來變更屬性的文字值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowCatalogIcons">
      <MemberSignature Language="C#" Value="public virtual bool ShowCatalogIcons { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowCatalogIcons" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowCatalogIcons As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowCatalogIcons { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCatalogIcons : bool with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出目錄中的伺服器控制項是否在目錄中顯示關聯的圖示。</summary>
        <value>如果應該顯示目錄中與伺服器控制項關聯的圖示，則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.WebPart> 控制項和其他伺服器控制項的包裝為<xref:System.Web.UI.WebControls.WebParts.GenericWebPart>控制項在執行階段有<xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>屬性。 這個屬性的值是以圖示用來代表控制項的目錄中的控制項之影像的 URL。  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.ShowCatalogIcons%2A>屬性會指出是否與圖示相關聯<xref:System.Web.UI.WebControls.WebParts.WebPart>和其他伺服器控制項所顯示類別目錄中。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">控制項的索引鍵識別項。</param>
        <param name="postCollection">傳送到伺服器的名稱/值組集合。</param>
        <summary>呼叫 <see cref="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> 類別的 <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" /> 方法，實作 <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> 方法。</summary>
        <returns>如果應該引發事件以表示資料已經變更，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 執行個體轉換成 <xref:System.Web.UI.IPostBackDataHandler> 介面時，才能使用這個成員。 方法只會呼叫<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData%2A>方法<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>類別，依序處理的狀態，對應到類別目錄中的伺服器控制項的核取方塊的目錄中。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> 執行個體轉換成 <xref:System.Web.UI.IPostBackDataHandler> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="catalogZoneBase.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>追蹤變更區域控制項的檢視狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.TrackViewState%2A>方法會先呼叫基底方法<xref:System.Web.UI.WebControls.WebParts.ToolZone>類別來追蹤檢視狀態相關聯<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>區域。 接下來，這個方法一開始追蹤檢視狀態的新增或關閉的動詞命令，並將<xref:System.Web.UI.WebControls.Style>物件相關聯<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.PartLinkStyle%2A>和<xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.SelectedPartLinkStyle%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>