<Type Name="IWebPartField" FullName="System.Web.UI.WebControls.WebParts.IWebPartField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b7d8e14645f384cac6ccddabd1ce60900ab591bf" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46670848" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPartField" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartField" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartField" />
  <TypeSignature Language="F#" Value="type IWebPartField = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>使用單一資料欄位，定義連接兩個伺服器控制項的提供者介面。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個介面被設計來搭配 Web 組件連接。 在 Web 組件連接中，兩個伺服器控制項位於<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域建立一個控制項做為消費者與另一個控制項做為提供者的連接和共用資料。 共用 Web 組件連接中的資料的機制是透過回呼方法的提供者提供給消費者的介面執行個體。 若要建立連線，消費者和提供者必須都使用相同的介面型別共用資料。 如果取用者無法辨識的提供者所傳送的介面型別，就仍然可以透過轉換程式中連接控制項 (<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>物件)，會轉譯成的型別提供者所傳送的介面執行個體，取用者會辨識。 如需連線的詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>並[Web 組件連接概觀](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面是隨附於 Web 組件控制項設定為標準的介面，建立根據資料欄位的連線提供者介面。 您也可以建立自訂的介面，以使用 Web 組件的連線，但在許多資料導向 Web 應用程式，很適合用來建立根據常見的資料列的連線 (如需詳細資訊，請參閱 <<c0> <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> 介面)，資料表 (如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面），或欄位從資料來源，使用<xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面。 在典型的連線中，<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項的提供者會實作<xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面，並在特殊的回呼方法中的取用者提供介面的執行個體。 例如，可能會實作提供者<xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面中您使用者資訊的資料表，其中包含 Web 使用者的郵遞區號資料的欄位。 另一個<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項因為取用者會定義特殊的方法，以接收介面執行個體，無法擷取郵遞區號的資料，並查閱然後顯示根據郵遞區號的天氣資訊。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面有兩個公開的成員。 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>屬性會傳回 [資料] 欄位中所封裝的結構描述資訊<xref:System.ComponentModel.PropertyDescriptor>物件。 <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>方法宣告 （例如提供者控制項） 的實作器用來擷取介面執行個體的欄位資料，當叫用回呼方法的方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立使用的兩個控制項之間的靜態連接<xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面。 在程式碼範例有三個部分：  
  
-   兩個自訂的原始程式碼<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項，可構成連接使用<xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面，做為提供者，而另一個做為取用者的其中一個控制項。  
  
-   裝載控制項，並宣告中保存格式的靜態連接的網頁。  
  
-   描述範例程式碼執行時，會發生什麼事。  
  
 在程式碼範例的第一個部分是兩個自訂控制項的原始程式碼。 首先是實作的提供者的程式碼<xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面。 為了簡單起見，在範例中，提供者會建立一些資料，而不是連接到資料庫資料表。 `GetConnectionInterface`方法做為提供者的連接點，傳回介面執行個體至消費者的回呼方法。 與取用者，它會擷取介面執行個體中名為其方法的提供者從`SetConnectionInterface`，其已標記為使用`ConnectionConsumer`屬性。 之後在擷取執行個體的介面，取用者，其`OnPreRender`方法，呼叫的實作<xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>方法中，請在提供者，以擷取實際的資料。  
  
 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確編譯它，然後將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您網站的 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 此程式碼範例會使用動態編譯。 如需示範如何編譯的逐步解說，請參閱 <<c0> [ 逐步解說： 開發和使用自訂 Web 伺服器控制項](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 在程式碼範例的第二個部分是宣告靜態連接並裝載控制項的網頁。 頁面頂端附近`Register`宣告的 App_Code 目錄中所包含的原始程式碼的命名空間的指示詞。 連接使用宣告`<asp:webpartconnection>`項目。 自訂的消費者和提供者控制項中宣告`<zonetemplate>`項目內`<asp:webpartzone>`項目，是為了要能夠連線 (繼承自的區域內，所以必須位於<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>類別)。  
  
 [!code-aspx-csharp[WebParts_IWebPartField_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartField_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/Defaultvb.aspx#1)]  
  
 將網頁瀏覽器中的載入。 消費者控制項顯示從指定的欄位中，提供者會透過執行個體所提供的資料<xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <related type="Article" href="http://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">ASP.NET Web 組件頁面</related>
    <related type="Article" href="http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Web 組件連線概觀</related>
  </Docs>
  <Members>
    <Member MemberName="GetFieldValue">
      <MemberSignature Language="C#" Value="public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFieldValue(class System.Web.UI.WebControls.WebParts.FieldCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFieldValue (callback As FieldCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFieldValue(System::Web::UI::WebControls::WebParts::FieldCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetFieldValue : System.Web.UI.WebControls.WebParts.FieldCallback -&gt; unit" Usage="iWebPartField.GetFieldValue callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.FieldCallback" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /> 委派，包含接收資料之方法的位址。</param>
        <summary>傳回資料欄位的值，介面正在將此資料欄位用作兩個 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項之間連接的基礎。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個方法來擷取介面所傳遞的資料欄位值。  
  
   
  
## Examples  
 下列程式碼範例示範實作與使用<xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>方法。 完整的範例所示的類別概觀<xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面。 提供者控制項實作<xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>方法，並傳回資料表中的特定欄位的值。 取用者可以控制呼叫<xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A>方法在其`OnPreRender`方法，以便可以寫入頁面資料的值。  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ Schema { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptor" Usage="System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資料欄位的結構描述資訊，這個資料欄位是用於兩個 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項之間共用資料。</summary>
        <value>
          <see cref="T:System.ComponentModel.PropertyDescriptor" />，說明資料欄位的結構描述資訊。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會提供介面所傳遞之資料的屬性資訊。 Transformer 和消費者控制項可以查詢這個屬性，以取得資訊類型，也就是內容，而欄位的其他詳細資料包含在<xref:System.Web.UI.WebControls.WebParts.IWebPartField>提供者所傳送的介面執行個體。  
  
   
  
## Examples  
 下列程式碼範例示範實作與使用<xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>屬性。 完整的範例所示的類別概觀<xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面。 提供者控制項實作<xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A>屬性。 然後，在其`GetFieldValue`方法，它會使用屬性來擷取欄位值。  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>