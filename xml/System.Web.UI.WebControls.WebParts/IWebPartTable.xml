<Type Name="IWebPartTable" FullName="System.Web.UI.WebControls.WebParts.IWebPartTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00fa8487f5e36f8495011197de4149d09d12a124" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585404" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPartTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartTable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartTable" />
  <TypeSignature Language="F#" Value="type IWebPartTable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>使用整個資料表，定義連接兩個伺服器控制項的提供者介面。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個介面被設計來搭配 Web 組件連接。 在 Web 組件連接中，兩個伺服器控制項位於<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>區域與一個做為取用者的控制項和其他控制項當做提供者建立連接和共用資料。 共用 Web 組件連接中的資料的機制是透過回呼方法提供給消費者的提供者介面執行個體。 若要建立連接，消費者和提供者必須都使用相同的介面型別共用資料。 如果取用者無法辨識傳送提供者的介面類型，則仍可透過轉換程式連接控制項 (<xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>物件)，會轉譯成的型別提供者所傳送的介面執行個體，取用者會辨識。 如需連線的詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.WebPartConnection>和[Web 組件連接概觀](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b)。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面是設定為用於建立連接的資料表為基礎的標準介面的 Web 組件控制項所包含的提供者介面。 您也可以建立自訂的介面，以使用 Web 組件的連線，但許多資料驅動型 Web 應用程式中，它是用於建立通用的欄位為基礎的連線 (如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.IWebPartField>介面)，資料列 (如需詳細資訊，請參閱<xref:System.Web.UI.WebControls.WebParts.IWebPartRow>介面），或從資料來源的資料表。 在典型的連線，<xref:System.Web.UI.WebControls.WebParts.WebPart>控制做為提供者會實作<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面，並提供給取用者在特殊的回呼方法的介面的執行個體。 例如，可能會實作提供者<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面包含財務績效資料的資料表。 另一個<xref:System.Web.UI.WebControls.WebParts.WebPart>控制項處理，取用者會定義特殊的方法，以接收介面執行個體，無法擷取資料然後轉譯圖表來顯示結果的資訊如下。  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面有兩個公開的成員。 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>屬性會傳回資料表中所封裝的結構描述資訊<xref:System.ComponentModel.PropertyDescriptorCollection>物件。 <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>方法宣告 （例如提供者的控制項） 實作者用來叫用回呼方法時，擷取介面執行個體的資料表資料的方法。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立使用兩個控制項之間的靜態連接<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面。 程式碼範例包含三個部分：  
  
-   原始碼的兩個自訂<xref:System.Web.UI.WebControls.WebParts.WebPart>會形成連線使用的控制項<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面，做為提供者和另一個做為取用者的其中一個控制項。  
  
-   裝載控制項，並宣告靜態連接持續性格式的網頁。  
  
-   描述範例程式碼執行時，會發生什麼事。  
  
 程式碼範例的第一個部分是兩個自訂控制項的原始程式碼。 第一個是程式碼的提供者，它會實作<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面。 為了簡單起見，在範例中，提供者會建立具有一些資料，而不是連接到資料庫資料表。 `GetConnectionInterface`方法做為提供者的連接點，回呼方法，傳回給取用者的介面執行個體。 與取用者，它會擷取介面執行個體中名為其方法的提供者從`SetConnectionInterface`，這會標示`ConnectionConsumer`屬性。 之後在擷取執行個體的介面，取用者，其`OnPreRender`方法，會呼叫實作<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>提供者來擷取實際的資料，並將它寫入至網頁中的方法。  
  
 若要執行程式碼範例，您必須編譯這個原始程式碼。 您可以明確地進行編譯，並將產生的組件放在您的網站的 Bin 資料夾或全域組件快取。 或者，您可以將原始程式碼放在您的網站 App_Code 資料夾中，這樣就會在執行階段進行動態編譯。 這個程式碼範例會使用動態編譯。 如需示範如何編譯的逐步解說，請參閱[逐步解說： 開發和使用自訂 Web 伺服器控制項](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08)。  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 程式碼範例的第二個部分是宣告靜態連接並裝載控制項的網頁。 在頁面頂端附近是`Register`宣告 App_Code 目錄中包含原始程式碼的命名空間指示詞。 連接使用宣告`<asp:webpartconnection>`項目。 消費者和提供者的自訂控制項中宣告`<zonetemplate>`內的項目`<asp:webpartzone>`元素，其需要能夠連接 (繼承自一個區域內，所以必須位於<xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>類別)。  
  
 [!code-aspx-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  
  
 載入瀏覽器中。 取用者控制項顯示從指定的資料表中，提供者會透過執行個體所提供的資料<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
  </Docs>
  <Members>
    <Member MemberName="GetTableData">
      <MemberSignature Language="C#" Value="public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTableData(class System.Web.UI.WebControls.WebParts.TableCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTableData (callback As TableCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTableData(System::Web::UI::WebControls::WebParts::TableCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetTableData : System.Web.UI.WebControls.WebParts.TableCallback -&gt; unit" Usage="iWebPartTable.GetTableData callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.TableCallback" />
      </Parameters>
      <Docs>
        <param name="callback">
          <see cref="T:System.Web.UI.WebControls.WebParts.TableCallback" /> 委派，包含接收資料之方法的位址。</param>
        <summary>傳回資料表的資料，介面正在將此資料表用作兩個 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項之間連接的基礎。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用這個方法來擷取介面所傳遞資料表值。 提供者會實作這個方法，並取用者叫用它在點取用者已準備好處理或轉譯資料時。  
  
   
  
## Examples  
 下列程式碼範例顯示實作和使用<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>方法。 完整的範例所示的類別概觀<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面。 提供者控制項實作<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>方法，傳回指定資料表中的資料。 取用者可以控制呼叫<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A>方法在其`OnPreRender`方法，使資料的值可以寫入頁面。  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Schema { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptorCollection" Usage="System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資料表的結構描述資訊，這個資料表是用於兩個 <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> 控制項之間共用資料。</summary>
        <value>描述資料的 <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性中的資料提供內容資訊<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>執行個體。 所參考的結構描述之間沒有隱含的合約<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>屬性和資料表中的資料。 合約是，每個<xref:System.ComponentModel.PropertyDescriptor>物件存放至<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>屬性，您可以呼叫<xref:System.ComponentModel.PropertyDescriptor.GetValue%2A>来取得的資料行或資料表的資料列中的值之資料表資料的項目上。  
  
   
  
## Examples  
 下列程式碼範例顯示實作和使用<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>屬性。 完整的範例所示的類別概觀<xref:System.Web.UI.WebControls.WebParts.IWebPartTable>介面。 提供者控制項實作<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>屬性。 然後取用者控制，請在其`RenderContents`方法中，查詢<xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A>屬性來擷取資料表的相關資訊，因為資料表的資料寫入頁面。  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
  </Members>
</Type>