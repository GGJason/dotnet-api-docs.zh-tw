<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HMACSHA384.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac595774be99a2bc91e6ab520c421de580645b78404.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">95774be99a2bc91e6ab520c421de580645b78404</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>Computes a Hash-based Message Authentication Code (HMAC) using the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA384" /&gt;</ph> hash function.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.SHA384" /&gt;</ph> 雜湊函式，計算雜湊式訊息驗證碼 (Hash-based Message Authentication Code，HMAC)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA384&gt;</ph> is a type of keyed hash algorithm that is constructed from the SHA-384 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA384&gt;</ph> 是一種金鑰雜湊演算法，從 sha-384 雜湊函式建構用做為雜湊式訊息驗證碼 (HMAC)。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>The HMAC process mixes a secret key with the message data and hashes the result.</source>
          <target state="translated">HMAC 程序與訊息資料混合秘密金鑰，以及結果雜湊。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>The hash value is mixed with the secret key again, and then hashed a second time.</source>
          <target state="translated">雜湊值是一次，混與秘密金鑰，而且第二次進行雜湊處理。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>The output hash is 384 bits long.</source>
          <target state="translated">輸出雜湊是 384 位元。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>An HMAC can be used to determine whether a message sent over a nonsecure channel has been tampered with, provided that the sender and receiver share a secret key.</source>
          <target state="translated">HMAC 可用來判斷透過安全通道傳送的訊息是否遭竄改的寄件者和收件者共用秘密金鑰。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>The sender computes the hash value for the original data and sends both the original data and the hash value as a single message.</source>
          <target state="translated">寄件者會計算原始資料的雜湊值，並將原始資料和雜湊值傳送為單一訊息。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</source>
          <target state="translated">收件者所接收訊息的雜湊值將會重新計算，並檢查計算的 HMAC 符合傳輸的 HMAC。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>If the original and computed hash values match, the message is authenticated.</source>
          <target state="translated">如果原始和計算的雜湊值相符，驗證訊息。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>If they do not match, either the data or the hash value has been changed.</source>
          <target state="translated">如果不符，已變更資料或雜湊值。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>HMACs provide security against tampering because knowledge of the secret key is required to change the message and reproduce the correct hash value.</source>
          <target state="translated">Hmac 提供安全性，以防止遭到竄改，因為知識祕密金鑰，才能變更訊息及重新產生正確的雜湊值。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA384&gt;</ph> accepts all key sizes and produces a hash sequence that is 384 bits long.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA384&gt;</ph> 接受所有的金鑰大小，並產生為 384 位元的雜湊序列。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>The following example shows how to sign a file by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA384&gt;</ph> object, and then how to verify the file.</source>
          <target state="translated">下列範例示範如何使用簽署檔案<ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA384&gt;</ph>物件，然後確認該檔案。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HMACSHA384">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA384" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA384" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACSHA384.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA384" /&gt;</ph> class by using a randomly generated key.</source>
          <target state="translated">以隨機產生的金鑰初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA384" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACSHA384.#ctor">
          <source>This constructor uses a 64-byte, randomly generated key.</source>
          <target state="translated">這個建構函式會使用 64 位元隨機產生的金鑰。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])">
          <source>The secret key for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA384" /&gt;</ph> encryption.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA384" /&gt;</ph> 加密的秘密金鑰。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])">
          <source>The key can be any length.</source>
          <target state="translated">金鑰可以是任何長度。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])">
          <source>However, the recommended size is 128 bytes.</source>
          <target state="translated">不過，建議的大小是 128 個位元組。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])">
          <source>If the key is more than 128 bytes long, it is hashed (using SHA-384) to derive a 128-byte key.</source>
          <target state="translated">如果索引鍵長度超過 128 個位元組，就會進行雜湊 (使用 SHA-384) 以衍生 128 位元組金鑰。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])">
          <source>If it is less than 128 bytes long, it is padded to 128 bytes.</source>
          <target state="translated">如果長度少於 128 個位元組，它會填補為 128 個位元組。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA384" /&gt;</ph> class by using the specified key data.</source>
          <target state="translated">使用指定的金鑰資料初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA384" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])">
          <source>For an example of how to use this constructor, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA384&gt;</ph> class.</source>
          <target state="translated">如需如何使用這個建構函式的範例，請參閱<ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA384&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACSHA384.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues">
          <source>Provides a workaround for the <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> implementation of the <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.HMACSHA384" /&gt;</ph> algorithm, which is inconsistent with the <ph id="ph3">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph> implementation of the algorithm.</source>
          <target state="translated">提供給 <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.HMACSHA384" /&gt;</ph> 演算法之 <ph id="ph1">[!INCLUDE[dnprdnext](~/includes/dnprdnext-md.md)]</ph> 實作的因應措施，與演算法的 <ph id="ph3">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph> 實作不一致。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to enable <ph id="ph2">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph> applications to interact with <ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> applications; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示讓 <ph id="ph2">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph> 應用程式與 <ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> 應用程式互動，否則為 <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues">
          <source>The purpose of the <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues%2A&gt;</ph> Boolean property is to enable <ph id="ph2">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph> applications to interact with <ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph> applications.</source>
          <target state="translated">目的<ph id="ph1">&lt;xref:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues%2A&gt;</ph>布林值屬性是要讓<ph id="ph2">[!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)]</ph>應用程式與互動<ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>應用程式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues">
          <source>When you set this property to <ph id="ph1">`true`</ph>, the <ph id="ph2">&lt;xref:System.Security.Cryptography.HMACSHA384&gt;</ph> object produces values that match the values produced by the <ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>.</source>
          <target state="translated">當您將此屬性設定為<ph id="ph1">`true`</ph>、<ph id="ph2">&lt;xref:System.Security.Cryptography.HMACSHA384&gt;</ph>物件會產生所產生的值相符的值<ph id="ph3">[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]</ph>。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues">
          <source>You should set this property only once after you create your HMAC object.</source>
          <target state="translated">一次建立 HMAC 物件之後，您應該設定這個屬性。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.HMACSHA384.ProduceLegacyHmacValues">
          <source>You will need to reset your key afterwards, as shown in the following example.</source>
          <target state="translated">您將需要重設您的金鑰之後，如下列範例所示。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>