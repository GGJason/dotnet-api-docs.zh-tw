<Type Name="RIPEMD160Managed" FullName="System.Security.Cryptography.RIPEMD160Managed">
  <TypeSignature Language="C#" Value="public class RIPEMD160Managed : System.Security.Cryptography.RIPEMD160" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RIPEMD160Managed extends System.Security.Cryptography.RIPEMD160" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RIPEMD160Managed" />
  <TypeSignature Language="VB.NET" Value="Public Class RIPEMD160Managed&#xA;Inherits RIPEMD160" />
  <TypeSignature Language="C++ CLI" Value="public ref class RIPEMD160Managed : System::Security::Cryptography::RIPEMD160" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RIPEMD160</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a40b4-101">計算使用 Managed 程式庫之輸入資料的 <see cref="T:System.Security.Cryptography.RIPEMD160" /> 雜湊。</span><span class="sxs-lookup"><span data-stu-id="a40b4-101">Computes the <see cref="T:System.Security.Cryptography.RIPEMD160" /> hash for the input data using the managed library.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40b4-102">Ripemd-160 是 160 位元加密編譯雜湊函式。</span><span class="sxs-lookup"><span data-stu-id="a40b4-102">RIPEMD-160 is a 160-bit cryptographic hash function.</span></span> <span data-ttu-id="a40b4-103">它適用於做為安全的替代 MD4、 MD5 及 RIPEMD 的 128 位元雜湊函式。</span><span class="sxs-lookup"><span data-stu-id="a40b4-103">It is intended for use as a secure replacement for the 128-bit hash functions MD4, MD5, and RIPEMD.</span></span> <span data-ttu-id="a40b4-104">RIPEMD 是 EU 專案 RIPE （競爭完整性基本項目評估版，1988年 1992年） 架構中所開發。</span><span class="sxs-lookup"><span data-stu-id="a40b4-104">RIPEMD was developed in the framework of the EU project RIPE (RACE Integrity Primitives Evaluation, 1988-1992).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a40b4-105"><xref:System.Security.Cryptography.RIPEMD160Managed> 已被取代的安全雜湊演算法 sha-256，以及 sha-512 和其衍生的類別中。</span><span class="sxs-lookup"><span data-stu-id="a40b4-105"><xref:System.Security.Cryptography.RIPEMD160Managed> has been superseded by the Secure Hash Algorithms SHA-256 and SHA-512 and their derived classes.</span></span> <span data-ttu-id="a40b4-106"><xref:System.Security.Cryptography.SHA256Managed> 和<xref:System.Security.Cryptography.SHA512Managed>提供較佳的安全性和效能比<xref:System.Security.Cryptography.RIPEMD160Managed>。</span><span class="sxs-lookup"><span data-stu-id="a40b4-106"><xref:System.Security.Cryptography.SHA256Managed> and <xref:System.Security.Cryptography.SHA512Managed> offer better security and performance than <xref:System.Security.Cryptography.RIPEMD160Managed>.</span></span> <span data-ttu-id="a40b4-107">使用<xref:System.Security.Cryptography.RIPEMD160Managed>只為了與舊版的應用程式和資料的相容性。</span><span class="sxs-lookup"><span data-stu-id="a40b4-107">Use <xref:System.Security.Cryptography.RIPEMD160Managed> only for compatibility with legacy applications and data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40b4-108">下列程式碼範例示範如何編碼檔案使用<xref:System.Security.Cryptography.RIPEMD160Managed>類別，然後再如何解碼檔案。</span><span class="sxs-lookup"><span data-stu-id="a40b4-108">The following code example shows how to encode a file using the <xref:System.Security.Cryptography.RIPEMD160Managed> class and then how to decode the file.</span></span>  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RIPEMD160Managed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RIPEMD160Managed();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a40b4-109">初始化 <see cref="T:System.Security.Cryptography.RIPEMD160" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="a40b4-109">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RIPEMD160" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40b4-110">使用雜湊是設為固定大小，表示大量資料的唯一值。</span><span class="sxs-lookup"><span data-stu-id="a40b4-110">The hash is used as a unique value of fixed size representing a large amount of data.</span></span> <span data-ttu-id="a40b4-111">如果且只有對應的資料也會比對，應該符合兩組資料的雜湊。</span><span class="sxs-lookup"><span data-stu-id="a40b4-111">Hashes of two sets of data should match if and only if the corresponding data also matches.</span></span> <span data-ttu-id="a40b4-112">對資料進行小變更會導致無法預期的大量變更，雜湊。</span><span class="sxs-lookup"><span data-stu-id="a40b4-112">Small changes to the data result in large unpredictable changes in the hash.</span></span>  
  
 <span data-ttu-id="a40b4-113">該雜湊大小<xref:System.Security.Cryptography.RIPEMD160>演算法是 160 位元。</span><span class="sxs-lookup"><span data-stu-id="a40b4-113">The hash size for the <xref:System.Security.Cryptography.RIPEMD160> algorithm is 160 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a40b4-114">下列程式碼範例會計算<xref:System.Security.Cryptography.RIPEMD160Managed>類別目錄中的所有檔案的雜湊。</span><span class="sxs-lookup"><span data-stu-id="a40b4-114">The following code example computes the <xref:System.Security.Cryptography.RIPEMD160Managed> class hash for all files in a directory.</span></span>  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a40b4-115">此原則與 FIPS 演算法不相容。</span><span class="sxs-lookup"><span data-stu-id="a40b4-115">The policy is not compliant with the FIPS algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ibStart, int cbSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb"><span data-ttu-id="a40b4-116">輸入資料。</span><span class="sxs-lookup"><span data-stu-id="a40b4-116">The input data.</span></span></param>
        <param name="ibStart"><span data-ttu-id="a40b4-117">位元組陣列中的座標，從此處開始使用資料。</span><span class="sxs-lookup"><span data-stu-id="a40b4-117">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="cbSize"><span data-ttu-id="a40b4-118">陣列中要用作資料的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="a40b4-118">The number of bytes in the array to use as data.</span></span></param>
        <summary><span data-ttu-id="a40b4-119">在衍生類別 (Derived Class) 中覆寫時，將寫入物件的資料轉遞到用來計算雜湊的 <see cref="T:System.Security.Cryptography.RIPEMD160" /> 雜湊演算法。</span><span class="sxs-lookup"><span data-stu-id="a40b4-119">When overridden in a derived class, routes data written to the object into the <see cref="T:System.Security.Cryptography.RIPEMD160" /> hash algorithm for computing the hash.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40b4-120">應用程式碼，不會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="a40b4-120">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="a40b4-121">此抽象方法會執行雜湊計算。</span><span class="sxs-lookup"><span data-stu-id="a40b4-121">This abstract method performs the hash computation.</span></span> <span data-ttu-id="a40b4-122">每次寫入至密碼編譯資料流物件會將資料傳遞到這個方法。</span><span class="sxs-lookup"><span data-stu-id="a40b4-122">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="a40b4-123">對於每個資料區塊，這個方法會更新雜湊物件的狀態，以便在資料流結尾傳回正確的雜湊值。</span><span class="sxs-lookup"><span data-stu-id="a40b4-123">For each block of data, this method updates the state of the hash object so a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a40b4-124">在衍生類別中覆寫時，當密碼編譯資料流物件處理最後的資料後，會對雜湊計算做最後處理。</span><span class="sxs-lookup"><span data-stu-id="a40b4-124">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span></span></summary>
        <returns><span data-ttu-id="a40b4-125">位元組陣列中計算出的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="a40b4-125">The computed hash code in a byte array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40b4-126">應用程式碼，不會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="a40b4-126">This method is not called by application code.</span></span> <span data-ttu-id="a40b4-127">這個方法會完成任何部分的計算，並傳回資料流的正確雜湊值。</span><span class="sxs-lookup"><span data-stu-id="a40b4-127">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a40b4-128">使用 Managed 程式庫初始化 <see cref="T:System.Security.Cryptography.RIPEMD160Managed" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="a40b4-128">Initializes an instance of the <see cref="T:System.Security.Cryptography.RIPEMD160Managed" /> class using the managed library.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a40b4-129">Ripemd-160 是 160 位元加密編譯雜湊函式。</span><span class="sxs-lookup"><span data-stu-id="a40b4-129">RIPEMD-160 is a 160-bit cryptographic hash function.</span></span> <span data-ttu-id="a40b4-130">它適用於做為安全的替代 MD4、 MD5 及 RIPEMD 的 128 位元雜湊函式。</span><span class="sxs-lookup"><span data-stu-id="a40b4-130">It is intended for use as a secure replacement for the 128-bit hash functions MD4, MD5, and RIPEMD.</span></span> <span data-ttu-id="a40b4-131">RIPEMD 是 EU 專案 RIPE （競爭完整性基本項目評估版，1988年 1992年） 架構中所開發。</span><span class="sxs-lookup"><span data-stu-id="a40b4-131">RIPEMD was developed in the framework of the EU project RIPE (RACE Integrity Primitives Evaluation, 1988-1992).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>