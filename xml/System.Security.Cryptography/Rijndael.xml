<Type Name="Rijndael" FullName="System.Security.Cryptography.Rijndael">
  <TypeSignature Language="C#" Value="public abstract class Rijndael : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Rijndael extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rijndael" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Rijndael&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rijndael abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="37933-101">表示 <see cref="T:System.Security.Cryptography.Rijndael" /> 對稱加密 (Encryption) 演算法的所有實作 (Implementation) 必須繼承的來源基底類別。</span><span class="sxs-lookup"><span data-stu-id="37933-101">Represents the base class from which all implementations of the <see cref="T:System.Security.Cryptography.Rijndael" /> symmetric encryption algorithm must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37933-102">此演算法支援 128、 192 或 256 位元; 的金鑰長度預設為 256 位元。</span><span class="sxs-lookup"><span data-stu-id="37933-102">This algorithm supports key lengths of 128, 192, or 256 bits; defaulting to 256 bits.</span></span> <span data-ttu-id="37933-103">此演算法支援 128、 192 或 256 位元; 區塊大小預設為 128 位元 (<xref:System.Security.Cryptography.Aes>-相容)。</span><span class="sxs-lookup"><span data-stu-id="37933-103">This algorithm supports block sizes of 128, 192, or 256 bits; defaulting to 128 bits (<xref:System.Security.Cryptography.Aes>-compatible).</span></span>  
  
 <span data-ttu-id="37933-104"><xref:System.Security.Cryptography.Rijndael>類別是的前置項<xref:System.Security.Cryptography.Aes>演算法。</span><span class="sxs-lookup"><span data-stu-id="37933-104">The <xref:System.Security.Cryptography.Rijndael> class is the predecessor of the <xref:System.Security.Cryptography.Aes> algorithm.</span></span> <span data-ttu-id="37933-105">您應該使用<xref:System.Security.Cryptography.Aes>演算法而不是<xref:System.Security.Cryptography.Rijndael>。</span><span class="sxs-lookup"><span data-stu-id="37933-105">You should use the <xref:System.Security.Cryptography.Aes> algorithm instead of <xref:System.Security.Cryptography.Rijndael>.</span></span> <span data-ttu-id="37933-106">如需詳細資訊，請參閱文章[Rijndael 之間的差異和 AES](http://go.microsoft.com/fwlink/?LinkId=200932) .NET 安全性部落格。</span><span class="sxs-lookup"><span data-stu-id="37933-106">For more information, see the entry [The Differences Between Rijndael and AES](http://go.microsoft.com/fwlink/?LinkId=200932) in the .NET Security blog.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37933-107">下列程式碼範例使用<xref:System.Security.Cryptography.Rijndael>類別來加密，並再解密資料。</span><span class="sxs-lookup"><span data-stu-id="37933-107">The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.</span></span>  
  
 [!code-csharp[Cryptography.Rijndael.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.rijndael.create.file/cs/fileexample.cs#1)]
 [!code-vb[Cryptography.Rijndael.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.rijndael.create.file/vb/fileexample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Rijndael ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rijndael.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Rijndael();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37933-108">初始化 <see cref="T:System.Security.Cryptography.Rijndael" /> 的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37933-108">Initializes a new instance of <see cref="T:System.Security.Cryptography.Rijndael" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37933-109">您無法建立抽象類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="37933-109">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="37933-110">應用程式程式碼會建立衍生類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37933-110">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="37933-111">這個方法會初始化的受保護的欄位<xref:System.Security.Cryptography.SymmetricAlgorithm>為下表所列的預設值。</span><span class="sxs-lookup"><span data-stu-id="37933-111">This method initializes the protected fields of <xref:System.Security.Cryptography.SymmetricAlgorithm> to the default values listed in the following table.</span></span>  
  
|<span data-ttu-id="37933-112">欄位</span><span class="sxs-lookup"><span data-stu-id="37933-112">Field</span></span>|<span data-ttu-id="37933-113">預設值</span><span class="sxs-lookup"><span data-stu-id="37933-113">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="37933-114">256</span><span class="sxs-lookup"><span data-stu-id="37933-114">256</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="37933-115">128</span><span class="sxs-lookup"><span data-stu-id="37933-115">128</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="37933-116">128</span><span class="sxs-lookup"><span data-stu-id="37933-116">128</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="37933-117">下列程式碼範例使用<xref:System.Security.Cryptography.Rijndael>類別來加密，並再解密資料。</span><span class="sxs-lookup"><span data-stu-id="37933-117">The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.</span></span>  
  
 [!code-csharp[Cryptography.Rijndael.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.rijndael.create.file/cs/fileexample.cs#1)]
 [!code-vb[Cryptography.Rijndael.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.rijndael.create.file/vb/fileexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37933-118">建立密碼編譯物件，執行 <see cref="T:System.Security.Cryptography.Rijndael" /> 演算法。</span><span class="sxs-lookup"><span data-stu-id="37933-118">Creates a cryptographic object to perform the <see cref="T:System.Security.Cryptography.Rijndael" /> algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Rijndael Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Rijndael Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rijndael.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As Rijndael" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Rijndael ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Rijndael</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37933-119">建立密碼編譯物件，執行 <see cref="T:System.Security.Cryptography.Rijndael" /> 演算法。</span><span class="sxs-lookup"><span data-stu-id="37933-119">Creates a cryptographic object to perform the <see cref="T:System.Security.Cryptography.Rijndael" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="37933-120">密碼編譯物件。</span><span class="sxs-lookup"><span data-stu-id="37933-120">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37933-121">預設實作<xref:System.Security.Cryptography.Rijndael>是<xref:System.Security.Cryptography.RijndaelManaged>。</span><span class="sxs-lookup"><span data-stu-id="37933-121">The default implementation of <xref:System.Security.Cryptography.Rijndael> is <xref:System.Security.Cryptography.RijndaelManaged>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="37933-122">下列程式碼範例使用<xref:System.Security.Cryptography.Rijndael>類別來加密，並再解密資料。</span><span class="sxs-lookup"><span data-stu-id="37933-122">The following code example uses the <xref:System.Security.Cryptography.Rijndael> class to encrypt and then decrypt data.</span></span>  
  
 [!code-csharp[Cryptography.Rijndael.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.rijndael.create.file/cs/fileexample.cs#1)]
 [!code-vb[Cryptography.Rijndael.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.rijndael.create.file/vb/fileexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="37933-123">在已啟用美國聯邦資訊處理標準 (FIPS) 模式的情況下使用演算法，但它與 FIPS 不相容。</span><span class="sxs-lookup"><span data-stu-id="37933-123">The algorithm was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.Rijndael Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.Rijndael Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rijndael.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As Rijndael" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::Rijndael ^ Create(System::String ^ algName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Rijndael</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="37933-124">要建立的 <see cref="T:System.Security.Cryptography.Rijndael" /> 指定實作名稱。</span><span class="sxs-lookup"><span data-stu-id="37933-124">The name of the specific implementation of <see cref="T:System.Security.Cryptography.Rijndael" /> to create.</span></span></param>
        <summary><span data-ttu-id="37933-125">建立密碼編譯物件，執行 <see cref="T:System.Security.Cryptography.Rijndael" /> 演算法的指定實作。</span><span class="sxs-lookup"><span data-stu-id="37933-125">Creates a cryptographic object to perform the specified implementation of the <see cref="T:System.Security.Cryptography.Rijndael" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="37933-126">密碼編譯物件。</span><span class="sxs-lookup"><span data-stu-id="37933-126">A cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37933-127">可接受的值`algName`參數`Rijndael`和`System.Security.Cryptography.RijndaelManaged`。</span><span class="sxs-lookup"><span data-stu-id="37933-127">Acceptable values for the `algName` parameter are `Rijndael` and `System.Security.Cryptography.RijndaelManaged`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="37933-128"><paramref name="algName" /> 參數描述的演算法，在聯邦資訊處理標準 (FIPS) 模式啟用的情況下使用，但是和 FIPS 並不相容。</span><span class="sxs-lookup"><span data-stu-id="37933-128">The algorithm described by the <paramref name="algName" /> parameter was used with Federal Information Processing Standards (FIPS) mode enabled, but is not FIPS compatible.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>