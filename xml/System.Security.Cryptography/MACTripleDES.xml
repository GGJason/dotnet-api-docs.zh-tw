<Type Name="MACTripleDES" FullName="System.Security.Cryptography.MACTripleDES">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d510a3b967d55ea867cf4537dadcfa926c7e0293" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36529465" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MACTripleDES : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MACTripleDES extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.MACTripleDES" />
  <TypeSignature Language="VB.NET" Value="Public Class MACTripleDES&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class MACTripleDES : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type MACTripleDES = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d21c9-101">使用輸入資料 <see cref="T:System.Security.Cryptography.CryptoStream" /> 的 <see cref="T:System.Security.Cryptography.TripleDES" />，計算訊息驗證碼 (MAC)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d21c9-101">Computes a Message Authentication Code (MAC) using <see cref="T:System.Security.Cryptography.TripleDES" /> for the input data <see cref="T:System.Security.Cryptography.CryptoStream" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d21c9-102">MAC 可用來判斷透過不安全的通道傳送的訊息是否遭竄改的寄件者和收件者共用秘密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d21c9-102">A MAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="d21c9-103">寄件者並計算的原始資料、 MAC 傳送兩種形式的單一訊息。</span><span class="sxs-lookup"><span data-stu-id="d21c9-103">The sender computes the MAC for the original data, and sends both as a single message.</span></span> <span data-ttu-id="d21c9-104">接收者會重新計算 MAC 上所接收的訊息，並檢查計算出來的 MAC 符合傳輸的 MAC</span><span class="sxs-lookup"><span data-stu-id="d21c9-104">The receiver recomputes the MAC on the received message, and checks that the computed MAC matches the transmitted MAC.</span></span>  
  
 <span data-ttu-id="d21c9-105">任何變更，資料或 MAC 中的結果不相符，因為知識祕密金鑰，才能變更的訊息，並重新產生正確的 mac。</span><span class="sxs-lookup"><span data-stu-id="d21c9-105">Any change to the data or the MAC results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct MAC.</span></span> <span data-ttu-id="d21c9-106">因此，如果程式碼相符，驗證訊息。</span><span class="sxs-lookup"><span data-stu-id="d21c9-106">Therefore, if the codes match, the message is authenticated.</span></span>  
  
 <span data-ttu-id="d21c9-107"><xref:System.Security.Cryptography.MACTripleDES> 使用 16 或 24 個位元組長的時間，而且會產生雜湊序列 8 個位元組長的金鑰。</span><span class="sxs-lookup"><span data-stu-id="d21c9-107"><xref:System.Security.Cryptography.MACTripleDES> uses a key that is 16 or 24 bytes long, and produces a hash sequence that is 8 bytes long.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d21c9-108">下列範例會建立名為的檔案版本的 MAC `input.txt`，位於此範例可執行檔所在的資料夾。</span><span class="sxs-lookup"><span data-stu-id="d21c9-108">The following example creates a MAC for a file named `input.txt`, which is located in the folder that contains the example executable.</span></span> <span data-ttu-id="d21c9-109">MAC 和原始的文字寫入至名為`encrypted.hsh`相同資料夾中。</span><span class="sxs-lookup"><span data-stu-id="d21c9-109">The MAC and the original text are written to a file named `encrypted.hsh` in the same folder.</span></span> <span data-ttu-id="d21c9-110">已簽署的檔案再讀取，以及檔案的文字部份為計算 MAC 且相較於 MAC 所包含的文字。</span><span class="sxs-lookup"><span data-stu-id="d21c9-110">The signed file is then read, and the MAC is calculated for the text portion of the file and compared to the MAC that is included with the text.</span></span>  
  
 [!code-csharp[MAC3DES#1](~/samples/snippets/csharp/VS_Snippets_CLR/MAC3DES/CS/program.cs#1)]
 [!code-vb[MAC3DES#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MAC3DES/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d21c9-111">初始化 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-111">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d21c9-112">初始化 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d21c9-113">這個建構函式會使用的預設實作<xref:System.Security.Cryptography.TripleDES>。</span><span class="sxs-lookup"><span data-stu-id="d21c9-113">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.MACTripleDES : byte[] -&gt; System.Security.Cryptography.MACTripleDES" Usage="new System.Security.Cryptography.MACTripleDES rgbKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="d21c9-114">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> 加密的秘密金鑰。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-114">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d21c9-115">使用指定的金鑰資料，初始化 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d21c9-116">這個建構函式會使用的預設實作<xref:System.Security.Cryptography.TripleDES>。</span><span class="sxs-lookup"><span data-stu-id="d21c9-116">This constructor uses the default implementation of <xref:System.Security.Cryptography.TripleDES>.</span></span> <span data-ttu-id="d21c9-117">`rgbKey`參數必須是 16 或 24 個位元組的長度。</span><span class="sxs-lookup"><span data-stu-id="d21c9-117">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d21c9-118">如需如何使用這個建構函式的範例，請參閱<xref:System.Security.Cryptography.MACTripleDES>類別。</span><span class="sxs-lookup"><span data-stu-id="d21c9-118">For an example of how to use this constructor, see the <xref:System.Security.Cryptography.MACTripleDES> class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d21c9-119">
            <paramref name="rgbKey" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-119">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MACTripleDES (string strTripleDES, byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string strTripleDES, unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strTripleDES As String, rgbKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MACTripleDES(System::String ^ strTripleDES, cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.MACTripleDES : string * byte[] -&gt; System.Security.Cryptography.MACTripleDES" Usage="new System.Security.Cryptography.MACTripleDES (strTripleDES, rgbKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strTripleDES" Type="System.String" />
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="strTripleDES">
          <span data-ttu-id="d21c9-120">要使用之 <see cref="T:System.Security.Cryptography.TripleDES" /> 實作的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-120">The name of the <see cref="T:System.Security.Cryptography.TripleDES" /> implementation to use.</span>
          </span>
        </param>
        <param name="rgbKey">
          <span data-ttu-id="d21c9-121">
            <see cref="T:System.Security.Cryptography.MACTripleDES" /> 加密的秘密金鑰。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-121">The secret key for <see cref="T:System.Security.Cryptography.MACTripleDES" /> encryption.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d21c9-122">使用指定的金鑰資料，並使用指定的 <see cref="T:System.Security.Cryptography.TripleDES" /> 實作，初始化 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.MACTripleDES" /> class with the specified key data and using the specified implementation of <see cref="T:System.Security.Cryptography.TripleDES" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d21c9-123">`strTripleDES`參數就是好記名稱<xref:System.Security.Cryptography.TripleDES>實作類型。</span><span class="sxs-lookup"><span data-stu-id="d21c9-123">The `strTripleDES` parameter is the friendly name of the <xref:System.Security.Cryptography.TripleDES> implementation type.</span></span> <span data-ttu-id="d21c9-124">預設實作是 System.Security.Cryptography.TripleDES。</span><span class="sxs-lookup"><span data-stu-id="d21c9-124">The default implementation is System.Security.Cryptography.TripleDES.</span></span>  
  
 <span data-ttu-id="d21c9-125">`rgbKey`參數必須是 16 或 24 個位元組的長度。</span><span class="sxs-lookup"><span data-stu-id="d21c9-125">The `rgbKey` parameter must be 16 or 24 bytes in length.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d21c9-126">
            <paramref name="rgbKey" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-126">The <paramref name="rgbKey" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
          <span data-ttu-id="d21c9-127">
            <paramref name="strTripleDES" /> 參數不是 <see cref="T:System.Security.Cryptography.TripleDES" /> 實作的有效名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-127">The <paramref name="strTripleDES" /> parameter is not a valid name of a <see cref="T:System.Security.Cryptography.TripleDES" /> implementation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="mACTripleDES.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d21c9-128">如果是從 <see cref="M:System.IDisposable.Dispose" /> 實作呼叫方法則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-128">
              <see langword="true" /> if the method is called from an <see cref="M:System.IDisposable.Dispose" /> implementation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d21c9-129">釋放 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 執行個體所使用的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-129">Releases the resources used by the <see cref="T:System.Security.Cryptography.MACTripleDES" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d21c9-130">這個方法會呼叫公用`Dispose()`方法和`Finalize`方法。</span><span class="sxs-lookup"><span data-stu-id="d21c9-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="d21c9-131">`Dispose()` 叫用受保護`Dispose(Boolean)`disposing 參數設定為具有方法`true`。</span><span class="sxs-lookup"><span data-stu-id="d21c9-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="d21c9-132">`Finalize` 會透過將處置設定為 `Dispose` 而叫用 `false`。</span><span class="sxs-lookup"><span data-stu-id="d21c9-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="d21c9-133">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Security.Cryptography.MACTripleDES> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="d21c9-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.MACTripleDES> references.</span></span> <span data-ttu-id="d21c9-134">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="d21c9-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="d21c9-135">
            <para>
              <see langword="Dispose" /> 可以被其他物件呼叫多次。在覆寫<see langword="Dispose(Boolean)" />，請小心不要參考到先前處置之前呼叫中的物件<see langword="Dispose" />。如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 [實作 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。如需有關<see langword="Dispose" />和<see langword="Finalize" />，請參閱 [總未受管理的 Resources](~/docs/standard/garbage-collection/unmanaged.md) 清除。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-135">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgbData, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgbData, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgbData As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgbData, int ibStart, int cbSize);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="mACTripleDES.HashCore (rgbData, ibStart, cbSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgbData">
          <span data-ttu-id="d21c9-136">輸入資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-136">The input data.</span>
          </span>
        </param>
        <param name="ibStart">
          <span data-ttu-id="d21c9-137">位元組陣列中的座標，從此處開始使用資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-137">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="cbSize">
          <span data-ttu-id="d21c9-138">陣列中要用作資料的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-138">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d21c9-139">將寫入物件的資料轉遞到用來計算訊息驗證碼 (MAC) 的 <see cref="T:System.Security.Cryptography.TripleDES" /> 加密程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-139">Routes data written to the object into the <see cref="T:System.Security.Cryptography.TripleDES" /> encryptor for computing the Message Authentication Code (MAC).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="mACTripleDES.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d21c9-140">傳回在所有資料都寫入該物件之後計算出來的訊息驗證碼 (MAC)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-140">Returns the computed Message Authentication Code (MAC) after all data is written to the object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d21c9-141">計算出來的 MAC。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-141">The computed MAC.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d21c9-142">之後才會寫入所有資料，您就無法寫入更多的資料之後，您可以讀取這個值。</span><span class="sxs-lookup"><span data-stu-id="d21c9-142">You can read this value only after all data is written, and you cannot write more data afterward.</span></span> <span data-ttu-id="d21c9-143">建立的新執行個體<xref:System.Security.Cryptography.MACTripleDES>每個個別區段的資料來計算該資料的 MAC。</span><span class="sxs-lookup"><span data-stu-id="d21c9-143">Create a new instance of <xref:System.Security.Cryptography.MACTripleDES> for each separate segment of data to compute the MAC for that data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.MACTripleDES.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="mACTripleDES.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d21c9-144">初始化 <see cref="T:System.Security.Cryptography.MACTripleDES" /> 的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-144">Initializes an instance of <see cref="T:System.Security.Cryptography.MACTripleDES" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d21c9-145">這個方法會呼叫預設建構函式類別。</span><span class="sxs-lookup"><span data-stu-id="d21c9-145">This method calls the default constructor for the class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.MACTripleDES.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberSignature Language="F#" Value="member this.Padding : System.Security.Cryptography.PaddingMode with get, set" Usage="System.Security.Cryptography.MACTripleDES.Padding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d21c9-146">取得或設定雜湊演算法中所使用的填補模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-146">Gets or sets the padding mode used in the hashing algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d21c9-147">雜湊演算法中所使用的填補模式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-147">The padding mode used in the hashing algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d21c9-148">大部分的純文字訊息並非由一個完全填滿區塊的位元組數。</span><span class="sxs-lookup"><span data-stu-id="d21c9-148">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="d21c9-149">通常，沒有足夠的位元組來填入最後一個區塊。</span><span class="sxs-lookup"><span data-stu-id="d21c9-149">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="d21c9-150">當發生這種情況時，填補字串加入至文字。</span><span class="sxs-lookup"><span data-stu-id="d21c9-150">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="d21c9-151">例如，如果區塊長度為 64 位元，而最後一個區塊包含只有 40 位元，就會加入 24 位元的填補。</span><span class="sxs-lookup"><span data-stu-id="d21c9-151">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="d21c9-152">請參閱<xref:System.Security.Cryptography.PaddingMode>的特定模式的描述。</span><span class="sxs-lookup"><span data-stu-id="d21c9-152">See <xref:System.Security.Cryptography.PaddingMode> for a description of specific modes.</span></span>  
  
 <span data-ttu-id="d21c9-153">這個欄位透過存取<xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d21c9-153">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="d21c9-154">無法設定此屬性，因為填補模式無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d21c9-154">The property cannot be set because the padding mode is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>