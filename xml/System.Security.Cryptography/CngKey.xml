<Type Name="CngKey" FullName="System.Security.Cryptography.CngKey">
  <TypeSignature Language="C#" Value="public sealed class CngKey : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CngKey extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CngKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CngKey&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CngKey sealed : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="009f2-101">定義可搭配 Cryptography Next Generation (CNG) 物件之金鑰的核心功能。</span><span class="sxs-lookup"><span data-stu-id="009f2-101">Defines the core functionality for keys that are used with Cryptography Next Generation (CNG) objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-102">這個類別會包裝 NCrypt 金鑰，不 BCrypt 金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-102">This class wraps NCrypt keys, not BCrypt keys.</span></span> <span data-ttu-id="009f2-103">NCrypt 是 CNG 提供金鑰的儲存體功能的子集。</span><span class="sxs-lookup"><span data-stu-id="009f2-103">NCrypt is a subset of CNG that provides key storage functionality.</span></span> <span data-ttu-id="009f2-104">BCrypt 是提供基底的密碼編譯服務，例如產生隨機數字、 雜湊函式、 簽章和加密金鑰的子集。</span><span class="sxs-lookup"><span data-stu-id="009f2-104">BCrypt is a subset that provides base cryptographic services such as random number generation, hash functions, signatures, and encryption keys.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CngKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CngKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Algorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngAlgorithm Algorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngAlgorithm Algorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.Algorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Algorithm As CngAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngAlgorithm ^ Algorithm { System::Security::Cryptography::CngAlgorithm ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-105">取得金鑰使用的演算法。</span><span class="sxs-lookup"><span data-stu-id="009f2-105">Gets the algorithm that is used by the key.</span></span></summary>
        <value><span data-ttu-id="009f2-106">指定加密演算法名稱的物件。</span><span class="sxs-lookup"><span data-stu-id="009f2-106">An object that specifies the name of an encryption algorithm.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlgorithmGroup">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngAlgorithmGroup AlgorithmGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngAlgorithmGroup AlgorithmGroup" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.AlgorithmGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmGroup As CngAlgorithmGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngAlgorithmGroup ^ AlgorithmGroup { System::Security::Cryptography::CngAlgorithmGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngAlgorithmGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-107">取得金鑰使用的演算法群組。</span><span class="sxs-lookup"><span data-stu-id="009f2-107">Gets the algorithm group that is used by the key.</span></span></summary>
        <value><span data-ttu-id="009f2-108">指定加密演算法群組名稱的物件。</span><span class="sxs-lookup"><span data-stu-id="009f2-108">An object that specifies the name of an encryption algorithm group.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="009f2-109">建立 <see cref="T:System.Security.Cryptography.CngKey" /> 物件，代表新的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-109">Creates a <see cref="T:System.Security.Cryptography.CngKey" /> object that represents a new key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.CngKey Create(class System.Security.Cryptography.CngAlgorithm algorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithm As CngAlgorithm) As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::CngKey ^ Create(System::Security::Cryptography::CngAlgorithm ^ algorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.Security.Cryptography.CngAlgorithm" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="009f2-110">將與金鑰一起使用的演算法。</span><span class="sxs-lookup"><span data-stu-id="009f2-110">The algorithm that the key will be used with.</span></span></param>
        <summary><span data-ttu-id="009f2-111">建立 <see cref="T:System.Security.Cryptography.CngKey" /> 物件，可搭配指定的演算法使用。</span><span class="sxs-lookup"><span data-stu-id="009f2-111">Creates a <see cref="T:System.Security.Cryptography.CngKey" /> object that can be used with the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="009f2-112">暫時的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-112">An ephemeral key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-113">這個多載會建立沒有名稱，這表示索引鍵是暫時金鑰 （也就是它不會保存）。</span><span class="sxs-lookup"><span data-stu-id="009f2-113">This overload creates a key without a name, which means that the key is ephemeral (that is, it will not be persisted).</span></span> <span data-ttu-id="009f2-114">它也會建立預設<xref:System.Security.Cryptography.CngKeyCreationParameters>物件，指定預設值<xref:System.Security.Cryptography.CngProvider>及其他進階的參數索引鍵。</span><span class="sxs-lookup"><span data-stu-id="009f2-114">It also creates a default <xref:System.Security.Cryptography.CngKeyCreationParameters> object that specifies a default <xref:System.Security.Cryptography.CngProvider> and other advanced parameters for the key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-115"><paramref name="algorithm" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-115"><paramref name="algorithm" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-116">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-116">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-117">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-117">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="009f2-118">若要建立的金鑰容器的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-118">for permission to create a key container.</span></span> <span data-ttu-id="009f2-119">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-119">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="009f2-120">相關聯的列舉型別： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span><span class="sxs-lookup"><span data-stu-id="009f2-120">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm, string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.CngKey Create(class System.Security.Cryptography.CngAlgorithm algorithm, string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithm As CngAlgorithm, keyName As String) As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::CngKey ^ Create(System::Security::Cryptography::CngAlgorithm ^ algorithm, System::String ^ keyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.Security.Cryptography.CngAlgorithm" />
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="009f2-121">將與金鑰一起使用的演算法。</span><span class="sxs-lookup"><span data-stu-id="009f2-121">The algorithm that the key will be used with.</span></span></param>
        <param name="keyName"><span data-ttu-id="009f2-122">金鑰名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-122">The key name.</span></span> <span data-ttu-id="009f2-123">如果未提供名稱，則金鑰不會持續存在。</span><span class="sxs-lookup"><span data-stu-id="009f2-123">If a name is not provided, the key will not be persisted.</span></span></param>
        <summary><span data-ttu-id="009f2-124">建立具名的 <see cref="T:System.Security.Cryptography.CngKey" /> 物件，提供指定的演算法。</span><span class="sxs-lookup"><span data-stu-id="009f2-124">Creates a named <see cref="T:System.Security.Cryptography.CngKey" /> object that provides the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="009f2-125">持續的或暫時的金鑰，會提供指定的演算法。</span><span class="sxs-lookup"><span data-stu-id="009f2-125">A persisted or ephemeral key that provides the specified algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-126">如果`keyName`提供此多載會建立必要的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-126">If `keyName` is provided, this overload creates a persisted key.</span></span> <span data-ttu-id="009f2-127">如果`keyName`未提供，這個索引鍵會是暫時性。</span><span class="sxs-lookup"><span data-stu-id="009f2-127">If `keyName` is not provided, the key will be ephemeral.</span></span> <span data-ttu-id="009f2-128">這個多載也會建立預設<xref:System.Security.Cryptography.CngKeyCreationParameters>物件，指定預設值<xref:System.Security.Cryptography.CngProvider>及其他進階的參數索引鍵。</span><span class="sxs-lookup"><span data-stu-id="009f2-128">This overload also creates a default <xref:System.Security.Cryptography.CngKeyCreationParameters> object that specifies a default <xref:System.Security.Cryptography.CngProvider> and other advanced parameters for the key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-129"><paramref name="algorithm" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-129"><paramref name="algorithm" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-130">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-130">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-131">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-131">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="009f2-132">若要建立的金鑰容器的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-132">for permission to create a key container.</span></span> <span data-ttu-id="009f2-133">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-133">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="009f2-134">相關聯的列舉型別： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span><span class="sxs-lookup"><span data-stu-id="009f2-134">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngKey Create (System.Security.Cryptography.CngAlgorithm algorithm, string keyName, System.Security.Cryptography.CngKeyCreationParameters creationParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.CngKey Create(class System.Security.Cryptography.CngAlgorithm algorithm, string keyName, class System.Security.Cryptography.CngKeyCreationParameters creationParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Create(System.Security.Cryptography.CngAlgorithm,System.String,System.Security.Cryptography.CngKeyCreationParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithm As CngAlgorithm, keyName As String, creationParameters As CngKeyCreationParameters) As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::CngKey ^ Create(System::Security::Cryptography::CngAlgorithm ^ algorithm, System::String ^ keyName, System::Security::Cryptography::CngKeyCreationParameters ^ creationParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithm" Type="System.Security.Cryptography.CngAlgorithm" />
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="creationParameters" Type="System.Security.Cryptography.CngKeyCreationParameters" />
      </Parameters>
      <Docs>
        <param name="algorithm"><span data-ttu-id="009f2-135">將與金鑰一起使用的演算法。</span><span class="sxs-lookup"><span data-stu-id="009f2-135">The algorithm that the key will be used with.</span></span></param>
        <param name="keyName"><span data-ttu-id="009f2-136">金鑰名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-136">The key name.</span></span> <span data-ttu-id="009f2-137">如果未提供名稱，則金鑰不會持續存在。</span><span class="sxs-lookup"><span data-stu-id="009f2-137">If a name is not provided, the key will not be persisted.</span></span></param>
        <param name="creationParameters"><span data-ttu-id="009f2-138">物件，會指定方法的進階參數，包括 <see cref="T:System.Security.Cryptography.CngProvider" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-138">An object that specifies advanced parameters for the method, including the <see cref="T:System.Security.Cryptography.CngProvider" />.</span></span></param>
        <summary><span data-ttu-id="009f2-139">建立具名的 <see cref="T:System.Security.Cryptography.CngKey" /> 物件，使用提供的金鑰建立參數提供指定的演算法。</span><span class="sxs-lookup"><span data-stu-id="009f2-139">Creates a named <see cref="T:System.Security.Cryptography.CngKey" /> object that provides the specified algorithm, using the supplied key creation parameters.</span></span></summary>
        <returns><span data-ttu-id="009f2-140">持續的或暫時的金鑰，會提供指定的演算法。</span><span class="sxs-lookup"><span data-stu-id="009f2-140">A persisted or ephemeral key that provides the specified algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-141">如果`keyName`提供此多載會建立必要的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-141">If `keyName` is provided, this overload creates a persisted key.</span></span> <span data-ttu-id="009f2-142">如果`keyName`未提供，這個索引鍵會是暫時性。</span><span class="sxs-lookup"><span data-stu-id="009f2-142">If `keyName` is not provided, the key will be ephemeral.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-143"><paramref name="algorithm" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-143"><paramref name="algorithm" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-144">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-144">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-145">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-145">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="009f2-146">若要建立的金鑰容器的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-146">for permission to create a key container.</span></span> <span data-ttu-id="009f2-147">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-147">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="009f2-148">相關聯的列舉型別： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span><span class="sxs-lookup"><span data-stu-id="009f2-148">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="009f2-149">移除與物件相關聯的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-149">Removes the key that is associated with the object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-   <span data-ttu-id="009f2-150">當您呼叫<xref:System.Security.Cryptography.CngKey.Delete%2A>方法上暫時金鑰，它會關閉的索引鍵的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="009f2-150">When you call the <xref:System.Security.Cryptography.CngKey.Delete%2A> method on an ephemeral key, it closes the handle to the key.</span></span>  
  
 <span data-ttu-id="009f2-151">當您呼叫<xref:System.Security.Cryptography.CngKey.Delete%2A>方法上指定的金鑰，<xref:System.Security.Cryptography.CngKey>物件不再使用之後刪除具名的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="009f2-151">When you call the <xref:System.Security.Cryptography.CngKey.Delete%2A> method on a named key, the <xref:System.Security.Cryptography.CngKey> object can no longer be used after the named key is deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="009f2-152">嘗試存取刪除的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-152">An attempt was made to access a deleted key.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-153">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-153">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="009f2-154">簽署資料的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-154">for permission to sign data.</span></span> <span data-ttu-id="009f2-155">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-155">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="009f2-156">相關聯的列舉型別： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /></span><span class="sxs-lookup"><span data-stu-id="009f2-156">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="009f2-157">將 <see cref="T:System.Security.Cryptography.CngKey" /> 類別目前的執行個體所使用的資源全部釋出。</span><span class="sxs-lookup"><span data-stu-id="009f2-157">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.CngKey" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-158"><xref:System.Security.Cryptography.CngKey.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Security.Cryptography.CngKey>。</span><span class="sxs-lookup"><span data-stu-id="009f2-158">Call <xref:System.Security.Cryptography.CngKey.Dispose%2A> when you are finished using the <xref:System.Security.Cryptography.CngKey>.</span></span> <span data-ttu-id="009f2-159"><xref:System.Security.Cryptography.CngKey.Dispose%2A> 方法會將 <xref:System.Security.Cryptography.CngKey> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="009f2-159">The <xref:System.Security.Cryptography.CngKey.Dispose%2A> method leaves the <xref:System.Security.Cryptography.CngKey> in an unusable state.</span></span> <span data-ttu-id="009f2-160">在呼叫<xref:System.Security.Cryptography.CngKey.Dispose%2A>，您必須釋放所有參考<xref:System.Security.Cryptography.CngKey>讓記憶體回收行程可以回收記憶體的<xref:System.Security.Cryptography.CngKey>所佔用。</span><span class="sxs-lookup"><span data-stu-id="009f2-160">After calling <xref:System.Security.Cryptography.CngKey.Dispose%2A>, you must release all references to the <xref:System.Security.Cryptography.CngKey> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.CngKey> was occupying.</span></span> <span data-ttu-id="009f2-161">如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="009f2-161">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="009f2-162">在您釋放最後一個 <xref:System.Security.Cryptography.CngKey.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Security.Cryptography.CngKey>。</span><span class="sxs-lookup"><span data-stu-id="009f2-162">Always call <xref:System.Security.Cryptography.CngKey.Dispose%2A> before you release your last reference to the <xref:System.Security.Cryptography.CngKey>.</span></span> <span data-ttu-id="009f2-163">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Security.Cryptography.CngKey> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="009f2-163">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.CngKey> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Exists">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="009f2-164">檢查特定金鑰儲存提供者 (KSP) 中是否有具名金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-164">Checks for a named key in a specific key storage provider(KSP).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Exists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (keyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ keyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="009f2-165">金鑰名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-165">The key name.</span></span></param>
        <summary><span data-ttu-id="009f2-166">查看具名金鑰是否存在預設的金鑰儲存提供者 (KSP) 中。</span><span class="sxs-lookup"><span data-stu-id="009f2-166">Checks to see whether a named key exists in the default key storage provider (KSP).</span></span></summary>
        <returns>
          <span data-ttu-id="009f2-167">如果具名金鑰存在預設的 KSP 中，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-167"><see langword="true" /> if the named key exists in the default KSP; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-168">預設為 KSP <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>。</span><span class="sxs-lookup"><span data-stu-id="009f2-168">The default KSP is <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-169"><paramref name="keyName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-169"><paramref name="keyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-170">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-170">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-171">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-171">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string keyName, System.Security.Cryptography.CngProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string keyName, class System.Security.Cryptography.CngProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (keyName As String, provider As CngProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ keyName, System::Security::Cryptography::CngProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="009f2-172">金鑰名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-172">The key name.</span></span></param>
        <param name="provider"><span data-ttu-id="009f2-173">要檢查其中是否有金鑰的 KSP。</span><span class="sxs-lookup"><span data-stu-id="009f2-173">The KSP to check for the key.</span></span></param>
        <summary><span data-ttu-id="009f2-174">查看具名金鑰是否存在指定的金鑰儲存提供者 (KSP) 中。</span><span class="sxs-lookup"><span data-stu-id="009f2-174">Checks to see whether a named key exists in the specified key storage provider (KSP).</span></span></summary>
        <returns>
          <span data-ttu-id="009f2-175">如果具名金鑰存在指定的提供者中，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-175"><see langword="true" /> if the named key exists in the specified provider; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-176">使用此多載檢查中 KSP KSP，這是預設值以外的金鑰是否存在<xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>。</span><span class="sxs-lookup"><span data-stu-id="009f2-176">Use this overload to check for the existence of a key in a KSP other than the default KSP, which is <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-177"><paramref name="keyName" /> 或 <paramref name="provider" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-177"><paramref name="keyName" /> or <paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-178">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-178">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-179">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-179">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public static bool Exists (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists(string keyName, class System.Security.Cryptography.CngProvider provider, valuetype System.Security.Cryptography.CngKeyOpenOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Exists(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists (keyName As String, provider As CngProvider, options As CngKeyOpenOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Exists(System::String ^ keyName, System::Security::Cryptography::CngProvider ^ provider, System::Security::Cryptography::CngKeyOpenOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" />
        <Parameter Name="options" Type="System.Security.Cryptography.CngKeyOpenOptions" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="009f2-180">金鑰名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-180">The key name.</span></span></param>
        <param name="provider"><span data-ttu-id="009f2-181">要在其中搜尋是否有金鑰的 KSP。</span><span class="sxs-lookup"><span data-stu-id="009f2-181">The KSP to search for the key.</span></span></param>
        <param name="options"><span data-ttu-id="009f2-182">列舉型別值的位元組合，指定開啟金鑰的選項。</span><span class="sxs-lookup"><span data-stu-id="009f2-182">A bitwise combination of the enumeration values that specify options for opening a key.</span></span></param>
        <summary><span data-ttu-id="009f2-183">根據指定的選項，查看具名金鑰是否存在指定的金鑰儲存提供者 (KSP) 中。</span><span class="sxs-lookup"><span data-stu-id="009f2-183">Checks to see whether a named key exists in the specified key storage provider (KSP), according to the specified options.</span></span></summary>
        <returns>
          <span data-ttu-id="009f2-184">如果具名金鑰存在指定的提供者中，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-184"><see langword="true" /> if the named key exists in the specified provider; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-185">若要檢查是否有預設值以外的 KSP 中索引鍵使用此多載<xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>，以及指定索引鍵開啟選項。</span><span class="sxs-lookup"><span data-stu-id="009f2-185">Use this overload to check for the existence of a key in a KSP other than the default <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>, and to specify key open options.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-186"><paramref name="keyName" /> 或 <paramref name="provider" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-186"><paramref name="keyName" /> or <paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-187">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-187">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-188">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-188">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Export">
      <MemberSignature Language="C#" Value="public byte[] Export (System.Security.Cryptography.CngKeyBlobFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Export(class System.Security.Cryptography.CngKeyBlobFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Export(System.Security.Cryptography.CngKeyBlobFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Export (format As CngKeyBlobFormat) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Export(System::Security::Cryptography::CngKeyBlobFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Security.Cryptography.CngKeyBlobFormat" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="009f2-189">指定金鑰 BLOB 格式的物件。</span><span class="sxs-lookup"><span data-stu-id="009f2-189">An object that specifies the format of the key BLOB.</span></span></param>
        <summary><span data-ttu-id="009f2-190">以指定的格式將金鑰內容匯出到 BLOB 中。</span><span class="sxs-lookup"><span data-stu-id="009f2-190">Exports the key material into a BLOB, in the specified format.</span></span></summary>
        <returns><span data-ttu-id="009f2-191">BLOB，包含指定格式的金鑰內容。</span><span class="sxs-lookup"><span data-stu-id="009f2-191">A BLOB that contains the key material in the specified format.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-192">Cryptography Next Generation (CNG) 允許匯出任何基礎的金鑰儲存提供者 (KSP) 支援的格式。</span><span class="sxs-lookup"><span data-stu-id="009f2-192">Cryptography Next Generation (CNG) allows export in any format that the underlying key storage provider (KSP) supports.</span></span> <span data-ttu-id="009f2-193">例如，在 Windows Vista 中，預設 KSP (也就是<xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>) 只允許匯出私密金鑰在<xref:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob%2A>， <xref:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob%2A>，和<xref:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob%2A>格式。</span><span class="sxs-lookup"><span data-stu-id="009f2-193">For example, on Windows Vista,the default KSP (which is <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>) only allows export of private keys in the <xref:System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob%2A>, <xref:System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob%2A>, and <xref:System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob%2A> formats.</span></span> <span data-ttu-id="009f2-194">這項限制是由基礎的 KSP 控制。</span><span class="sxs-lookup"><span data-stu-id="009f2-194">This restriction is controlled by the underlying KSP.</span></span> <span data-ttu-id="009f2-195">如果您使用不同的 KSP，可能適用於其他格式。</span><span class="sxs-lookup"><span data-stu-id="009f2-195">If you use a different KSP, other formats may apply.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-196"><paramref name="format" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-196"><paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-197">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-197">All other errors.</span></span> <span data-ttu-id="009f2-198">通常 <see cref="P:System.Security.Cryptography.CngKey.ExportPolicy" /> 不會允許匯出金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-198">Typically, the <see cref="P:System.Security.Cryptography.CngKey.ExportPolicy" /> does not allow the key to be exported.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="009f2-199">簽署資料的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-199">for permission to sign data.</span></span> <span data-ttu-id="009f2-200">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-200">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="009f2-201">相關聯的列舉型別： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span><span class="sxs-lookup"><span data-stu-id="009f2-201">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ExportPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngExportPolicies ExportPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CngExportPolicies ExportPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.ExportPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExportPolicy As CngExportPolicies" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngExportPolicies ExportPolicy { System::Security::Cryptography::CngExportPolicies get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngExportPolicies</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-202">取得金鑰使用的匯出原則。</span><span class="sxs-lookup"><span data-stu-id="009f2-202">Gets the export policy that is used by the key.</span></span></summary>
        <value><span data-ttu-id="009f2-203">指定金鑰匯出原則的物件。</span><span class="sxs-lookup"><span data-stu-id="009f2-203">An object that specifies the export policy for the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-204">匯出原則控制的匯出頻率和索引鍵的格式。</span><span class="sxs-lookup"><span data-stu-id="009f2-204">The export policy controls the export frequency and format for the key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngProperty GetProperty (string name, System.Security.Cryptography.CngPropertyOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Security.Cryptography.CngProperty GetProperty(string name, valuetype System.Security.Cryptography.CngPropertyOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.GetProperty(System.String,System.Security.Cryptography.CngPropertyOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String, options As CngPropertyOptions) As CngProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::CngProperty GetProperty(System::String ^ name, System::Security::Cryptography::CngPropertyOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="options" Type="System.Security.Cryptography.CngPropertyOptions" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="009f2-205">所需屬性的名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-205">The name of the desired property.</span></span></param>
        <param name="options"><span data-ttu-id="009f2-206">列舉型別值的位元組合，指定具名屬性的選項。</span><span class="sxs-lookup"><span data-stu-id="009f2-206">A bitwise combination of the enumeration values that specify options for the named property.</span></span></param>
        <summary><span data-ttu-id="009f2-207">取得屬性，收到指定名稱和一組屬性選項。</span><span class="sxs-lookup"><span data-stu-id="009f2-207">Gets a property, given a name and a set of property options.</span></span></summary>
        <returns><span data-ttu-id="009f2-208">物件，包含指定屬性未經處理的值。</span><span class="sxs-lookup"><span data-stu-id="009f2-208">An object that contains the raw value of the specified property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-209">這個方法的目的是要傳回索引鍵的任意屬性的值。</span><span class="sxs-lookup"><span data-stu-id="009f2-209">The purpose of this method is to return the value of an arbitrary property of the key.</span></span> <span data-ttu-id="009f2-210">擷取屬性的典型方式是使用所提供的屬性存取子<xref:System.Security.Cryptography.CngKey>類別。</span><span class="sxs-lookup"><span data-stu-id="009f2-210">The typical way to retrieve properties is by using the property accessors provided by the <xref:System.Security.Cryptography.CngKey> class.</span></span> <span data-ttu-id="009f2-211"><xref:System.Security.Cryptography.CngKey> 提供數個，但不是全部內容包裝函式。</span><span class="sxs-lookup"><span data-stu-id="009f2-211"><xref:System.Security.Cryptography.CngKey> provides wrappers for several, but not all, properties.</span></span> <span data-ttu-id="009f2-212"><xref:System.Security.Cryptography.CngKey.GetProperty%2A>方法主要用來存取此屬性，不會換行的值。</span><span class="sxs-lookup"><span data-stu-id="009f2-212">The <xref:System.Security.Cryptography.CngKey.GetProperty%2A> method is primarily used to access the value of a property that is not wrapped.</span></span>  
  
 <span data-ttu-id="009f2-213">這個方法是適用於下列情況：</span><span class="sxs-lookup"><span data-stu-id="009f2-213">This method is useful in the following cases:</span></span>  
  
-   <span data-ttu-id="009f2-214">新的作業系統版本支援新的 Cryptography Next Generation (CNG) 金鑰屬性沒有包裝函式。</span><span class="sxs-lookup"><span data-stu-id="009f2-214">A new version of the operating system supports a new Cryptography Next Generation (CNG) key property that does not have a wrapper.</span></span>  
  
-   <span data-ttu-id="009f2-215">您可以加入自訂屬性的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="009f2-215">You add a custom property to the key.</span></span>  
  
 <span data-ttu-id="009f2-216">`options`參數特別用來指出下列：</span><span class="sxs-lookup"><span data-stu-id="009f2-216">The `options` parameter is specifically used to indicate the following:</span></span>  
  
-   <span data-ttu-id="009f2-217">屬性是內建或自訂的。</span><span class="sxs-lookup"><span data-stu-id="009f2-217">Whether the property is built-in, or custom.</span></span>  
  
-   <span data-ttu-id="009f2-218">是否應該保存屬性與索引鍵。</span><span class="sxs-lookup"><span data-stu-id="009f2-218">Whether the property should be persisted with the key.</span></span>  
  
 <span data-ttu-id="009f2-219">這些選項都必須符合已設定的屬性，或將找不到屬性的值。</span><span class="sxs-lookup"><span data-stu-id="009f2-219">These options must match the value that the property was set with, or the property will not be found.</span></span>  
  
 <span data-ttu-id="009f2-220"><xref:System.Security.Cryptography.CryptographicException> 如果找不到屬性，會擲回。</span><span class="sxs-lookup"><span data-stu-id="009f2-220"><xref:System.Security.Cryptography.CryptographicException> is thrown if the property cannot be found.</span></span> <span data-ttu-id="009f2-221">您應該呼叫<xref:System.Security.Cryptography.CngKey.HasProperty%2A>方法，以避免例外狀況，而不是包裝的方法呼叫中`try/catch`區塊。</span><span class="sxs-lookup"><span data-stu-id="009f2-221">You should call the <xref:System.Security.Cryptography.CngKey.HasProperty%2A> method first to avoid the exception instead of wrapping the method call in a `try/catch` block.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-222"><paramref name="name" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-222"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-223">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-223">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="009f2-224">呼叫 unmanaged 程式碼的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-224">for permission to call unmanaged code.</span></span> <span data-ttu-id="009f2-225">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-225">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="009f2-226">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="009f2-226">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle Handle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As SafeNCryptKeyHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeNCryptKeyHandle ^ Handle { Microsoft::Win32::SafeHandles::SafeNCryptKeyHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-227">取得代表原生金鑰 (NCRYPT_KEY_HANDLE) 的安全控制代碼。</span><span class="sxs-lookup"><span data-stu-id="009f2-227">Gets a safe handle that represents a native key (NCRYPT_KEY_HANDLE).</span></span></summary>
        <value><span data-ttu-id="009f2-228">代表金鑰的安全控制代碼。</span><span class="sxs-lookup"><span data-stu-id="009f2-228">A safe handle that represents the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-229">傳回的控制代碼會在目前的控制代碼重複<xref:System.Security.Cryptography.CngKey>物件。</span><span class="sxs-lookup"><span data-stu-id="009f2-229">The returned handle is a duplicate of the handle in the current <xref:System.Security.Cryptography.CngKey> object.</span></span> <span data-ttu-id="009f2-230">它會持續保留，即使目前<xref:System.Security.Cryptography.CngKey>處置時，且必須個別公開。</span><span class="sxs-lookup"><span data-stu-id="009f2-230">It will persist even if the current <xref:System.Security.Cryptography.CngKey> is disposed, and must be disposed of separately.</span></span>  
  
 <span data-ttu-id="009f2-231">您可以釋放目前的物件，而且沒有任何負面影響的任何順序的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="009f2-231">You can release the current object and the handle in any order without any adverse effects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="009f2-232">呼叫 unmanaged 程式碼的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-232">for permission to call unmanaged code.</span></span> <span data-ttu-id="009f2-233">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-233">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="009f2-234">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="009f2-234">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="HasProperty">
      <MemberSignature Language="C#" Value="public bool HasProperty (string name, System.Security.Cryptography.CngPropertyOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasProperty(string name, valuetype System.Security.Cryptography.CngPropertyOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.HasProperty(System.String,System.Security.Cryptography.CngPropertyOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasProperty (name As String, options As CngPropertyOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasProperty(System::String ^ name, System::Security::Cryptography::CngPropertyOptions options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="options" Type="System.Security.Cryptography.CngPropertyOptions" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="009f2-235">要檢查的屬性名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-235">The property name to check.</span></span></param>
        <param name="options"><span data-ttu-id="009f2-236">列舉型別值的位元組合，指定具名屬性的選項。</span><span class="sxs-lookup"><span data-stu-id="009f2-236">A bitwise combination of the enumeration values that specify options for the named property.</span></span></param>
        <summary><span data-ttu-id="009f2-237">查看指定的屬性是否存在金鑰上。</span><span class="sxs-lookup"><span data-stu-id="009f2-237">Checks to see whether the specified property exists on the key.</span></span></summary>
        <returns>
          <span data-ttu-id="009f2-238">如果找到指定的屬性，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-238"><see langword="true" /> if the specified property is found; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-239">`options`參數特別用來指出下列：</span><span class="sxs-lookup"><span data-stu-id="009f2-239">The `options` parameter is specifically used to indicate the following:</span></span>  
  
-   <span data-ttu-id="009f2-240">屬性是內建或自訂的。</span><span class="sxs-lookup"><span data-stu-id="009f2-240">Whether the property is built-in, or custom.</span></span>  
  
-   <span data-ttu-id="009f2-241">是否應該保存屬性與索引鍵。</span><span class="sxs-lookup"><span data-stu-id="009f2-241">Whether the property should be persisted with the key.</span></span>  
  
 <span data-ttu-id="009f2-242">這些選項都必須符合已設定的屬性，或將找不到屬性的值。</span><span class="sxs-lookup"><span data-stu-id="009f2-242">These options must match the value that the property was set with, or the property will not be found.</span></span>  
  
 <span data-ttu-id="009f2-243">這個方法可正確運作即使屬性設定為`false`或零。</span><span class="sxs-lookup"><span data-stu-id="009f2-243">This method operates correctly even if the property is set to `false` or zero.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-244"><paramref name="name" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-244"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="009f2-245">呼叫 unmanaged 程式碼的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-245">for permission to call unmanaged code.</span></span> <span data-ttu-id="009f2-246">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-246">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="009f2-247">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="009f2-247">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Import">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="009f2-248">藉由將金鑰內容匯入金鑰儲存提供者 (KSP) 的方式建立新的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-248">Creates a new key by importing key material into the key storage provider (KSP).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngKey Import (byte[] keyBlob, System.Security.Cryptography.CngKeyBlobFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.CngKey Import(unsigned int8[] keyBlob, class System.Security.Cryptography.CngKeyBlobFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Import (keyBlob As Byte(), format As CngKeyBlobFormat) As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::CngKey ^ Import(cli::array &lt;System::Byte&gt; ^ keyBlob, System::Security::Cryptography::CngKeyBlobFormat ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBlob" Type="System.Byte[]" />
        <Parameter Name="format" Type="System.Security.Cryptography.CngKeyBlobFormat" />
      </Parameters>
      <Docs>
        <param name="keyBlob"><span data-ttu-id="009f2-249">此陣列包含金鑰資訊。</span><span class="sxs-lookup"><span data-stu-id="009f2-249">An array that contains the key information.</span></span></param>
        <param name="format"><span data-ttu-id="009f2-250">指定 <c>keyBlob</c> 陣列格式的物件。</span><span class="sxs-lookup"><span data-stu-id="009f2-250">An object that specifies the format of the <c>keyBlob</c> array.</span></span></param>
        <summary><span data-ttu-id="009f2-251">藉由將指定的金鑰內容匯入預設的金鑰儲存提供者 (KSP)，並使用指定的格式建立新的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-251">Creates a new key by importing the specified key material into the default key storage provider (KSP) and using the specified format.</span></span></summary>
        <returns><span data-ttu-id="009f2-252">新的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-252">A new key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-253">預設為 KSP <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>。</span><span class="sxs-lookup"><span data-stu-id="009f2-253">The default KSP is <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="009f2-254">在 Windows 作業系統在 Windows 7 和 Windows Server 2008 R2 之前，不支援某些 CNG 金鑰的二進位大型物件 (BLOB) 格式。</span><span class="sxs-lookup"><span data-stu-id="009f2-254">On Windows operating systems before Windows 7 and Windows Server 2008 R2, some CNG key binary large object (BLOB) formats are not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-255"><paramref name="keyBlob" /> 或 <paramref name="format" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-255"><paramref name="keyBlob" /> or <paramref name="format" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-256">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-256">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-257">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-257">All other errors.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Import">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngKey Import (byte[] keyBlob, System.Security.Cryptography.CngKeyBlobFormat format, System.Security.Cryptography.CngProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.CngKey Import(unsigned int8[] keyBlob, class System.Security.Cryptography.CngKeyBlobFormat format, class System.Security.Cryptography.CngProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Import(System.Byte[],System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Import (keyBlob As Byte(), format As CngKeyBlobFormat, provider As CngProvider) As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::CngKey ^ Import(cli::array &lt;System::Byte&gt; ^ keyBlob, System::Security::Cryptography::CngKeyBlobFormat ^ format, System::Security::Cryptography::CngProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBlob" Type="System.Byte[]" />
        <Parameter Name="format" Type="System.Security.Cryptography.CngKeyBlobFormat" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" />
      </Parameters>
      <Docs>
        <param name="keyBlob"><span data-ttu-id="009f2-258">此陣列包含金鑰資訊。</span><span class="sxs-lookup"><span data-stu-id="009f2-258">An array that contains the key information.</span></span></param>
        <param name="format"><span data-ttu-id="009f2-259">指定 <c>keyBlob</c> 陣列格式的物件。</span><span class="sxs-lookup"><span data-stu-id="009f2-259">An object that specifies the format of the <c>keyBlob</c> array.</span></span></param>
        <param name="provider"><span data-ttu-id="009f2-260">KSP。</span><span class="sxs-lookup"><span data-stu-id="009f2-260">The KSP.</span></span></param>
        <summary><span data-ttu-id="009f2-261">使用指定的格式將指定的金鑰內容匯入指定的金鑰儲存提供者 (KSP)，以建立新的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-261">Creates a new key by importing the specified key material into the specified key storage provider (KSP), using the specified format.</span></span></summary>
        <returns><span data-ttu-id="009f2-262">新的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-262">A new key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="009f2-263">在 Windows 作業系統在 Windows 7 和 Windows Server 2008 R2 之前，不支援某些 CNG 金鑰的二進位大型物件 (BLOB) 格式。</span><span class="sxs-lookup"><span data-stu-id="009f2-263">On Windows operating systems before Windows 7 and Windows Server 2008 R2, some CNG key binary large object (BLOB) formats are not supported.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-264"><paramref name="keyBlob" /><paramref name="format" /> 或 <paramref name="provider" /> 是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-264"><paramref name="keyBlob" />, <paramref name="format" />, or <paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-265">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-265">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-266">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-266">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermission"><span data-ttu-id="009f2-267">簽署資料的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-267">for permission to sign data.</span></span> <span data-ttu-id="009f2-268">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-268">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="009f2-269">相關聯的列舉型別： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span><span class="sxs-lookup"><span data-stu-id="009f2-269">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsEphemeral">
      <MemberSignature Language="C#" Value="public bool IsEphemeral { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEphemeral" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.IsEphemeral" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEphemeral As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEphemeral { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-270">取得金鑰的持續性狀態。</span><span class="sxs-lookup"><span data-stu-id="009f2-270">Gets the persistence state of the key.</span></span></summary>
        <value>
          <span data-ttu-id="009f2-271">如果金鑰是暫時的，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-271"><see langword="true" /> if the key is ephemeral; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-272">這個屬性會決定是否暫時金鑰 （也就是索引鍵存在只會針對此控制代碼的存留期），或保存 （也就是索引鍵存在獨立控制代碼）。</span><span class="sxs-lookup"><span data-stu-id="009f2-272">This property determines whether the key is ephemeral (that is, the key exists only for the lifetime of the handle), or persisted (that is, the key exists independently of the handle).</span></span>  
  
 <span data-ttu-id="009f2-273">傳回的值取決於用來取得金鑰的方法：</span><span class="sxs-lookup"><span data-stu-id="009f2-273">The return value depends on the method that is used to obtain the key:</span></span>  
  
-   <span data-ttu-id="009f2-274">如果索引鍵不由所開啟<xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29>方法多載時，common language runtime (CLR) 來管理金鑰，且可以決定是否為暫時性。</span><span class="sxs-lookup"><span data-stu-id="009f2-274">If the key was not opened by the <xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29> method overload, the common language runtime (CLR) is managing the key and can determine whether it is ephemeral.</span></span>  
  
-   <span data-ttu-id="009f2-275">如果索引鍵已開啟<xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29>方法多載時，CLR 無法判斷是否為暫時性。</span><span class="sxs-lookup"><span data-stu-id="009f2-275">If the key was opened by the <xref:System.Security.Cryptography.CngKey.Open%28Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle%2CSystem.Security.Cryptography.CngKeyHandleOpenOptions%29> method overload, the CLR cannot determine whether it is ephemeral.</span></span> <span data-ttu-id="009f2-276">因此，金鑰會假設為保存。</span><span class="sxs-lookup"><span data-stu-id="009f2-276">Therefore, the key is assumed to be persisted.</span></span> <span data-ttu-id="009f2-277">不過，如果這個方法用來開啟的控制代碼由 CLR 建立的索引鍵，CLR 將能夠判斷其是否為暫時性。</span><span class="sxs-lookup"><span data-stu-id="009f2-277">However, if this method is used to open a handle to a key that is created by the CLR, the CLR will be able to determine whether it is ephemeral.</span></span>  
  
 <span data-ttu-id="009f2-278">這個屬性並沒有公用 setter。它是唯讀狀態。</span><span class="sxs-lookup"><span data-stu-id="009f2-278">This property does not have a public setter; it is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMachineKey">
      <MemberSignature Language="C#" Value="public bool IsMachineKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMachineKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.IsMachineKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMachineKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMachineKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-279">取得金鑰的範圍 (電腦或使用者)。</span><span class="sxs-lookup"><span data-stu-id="009f2-279">Gets the scope (machine or user) of the key.</span></span></summary>
        <value>
          <span data-ttu-id="009f2-280">如果金鑰是以電腦為基礎提供，則為 <see langword="true" />；如果金鑰僅供目前的使用者提供，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-280"><see langword="true" /> if the key is available on a machine-wide basis; <see langword="false" /> if the key is only for the current user.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyName">
      <MemberSignature Language="C#" Value="public string KeyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.KeyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ KeyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-281">取得金鑰的名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-281">Gets the name of the key.</span></span></summary>
        <value><span data-ttu-id="009f2-282">金鑰的名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-282">The name of the key.</span></span> <span data-ttu-id="009f2-283">如果金鑰是暫時的，則值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-283">If the key is ephemeral, the value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int KeySize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-284">取得位元為單位的金鑰大小。</span><span class="sxs-lookup"><span data-stu-id="009f2-284">Gets the key size in bits.</span></span></summary>
        <value><span data-ttu-id="009f2-285">金鑰的大小 (以位元為單位)。</span><span class="sxs-lookup"><span data-stu-id="009f2-285">The key size in bits.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUsage">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngKeyUsages KeyUsage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CngKeyUsages KeyUsage" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.KeyUsage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyUsage As CngKeyUsages" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngKeyUsages KeyUsage { System::Security::Cryptography::CngKeyUsages get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKeyUsages</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-286">取得金鑰指定的密碼編譯作業。</span><span class="sxs-lookup"><span data-stu-id="009f2-286">Gets the cryptographic operations specified by the key.</span></span></summary>
        <value><span data-ttu-id="009f2-287">列舉型別值的位元組合，指定金鑰的用途。</span><span class="sxs-lookup"><span data-stu-id="009f2-287">A bitwise combination of the enumeration values that specify the usages allowed for the key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="009f2-288">建立代表現有金鑰的 <see cref="T:System.Security.Cryptography.CngKey" /> 物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="009f2-288">Creates an instance of an <see cref="T:System.Security.Cryptography.CngKey" /> object that represents an existing key.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngKey Open (string keyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.CngKey Open(string keyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Open(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (keyName As String) As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::CngKey ^ Open(System::String ^ keyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="009f2-289">金鑰的名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-289">The name of the key.</span></span></param>
        <summary><span data-ttu-id="009f2-290">建立代表現有具名金鑰的 <see cref="T:System.Security.Cryptography.CngKey" /> 物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="009f2-290">Creates an instance of an <see cref="T:System.Security.Cryptography.CngKey" /> object that represents an existing named key.</span></span></summary>
        <returns><span data-ttu-id="009f2-291">現有金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-291">An existing key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-292">這個多載會使用下列預設值：</span><span class="sxs-lookup"><span data-stu-id="009f2-292">This overload uses the following defaults:</span></span>  
  
-   <span data-ttu-id="009f2-293">金鑰儲存提供者 (KSP): <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>。</span><span class="sxs-lookup"><span data-stu-id="009f2-293">Key storage provider (KSP): <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>.</span></span> <span data-ttu-id="009f2-294">使用<xref:System.Security.Cryptography.CngKey.Open%28System.String%2CSystem.Security.Cryptography.CngProvider%29>多載，如果您想要指定另一個 KSP。</span><span class="sxs-lookup"><span data-stu-id="009f2-294">Use the <xref:System.Security.Cryptography.CngKey.Open%28System.String%2CSystem.Security.Cryptography.CngProvider%29> overload if you want to specify another KSP.</span></span>  
  
-   <span data-ttu-id="009f2-295">索引鍵開啟選項： <xref:System.Security.Cryptography.CngKeyOpenOptions.None?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="009f2-295">Key open options: <xref:System.Security.Cryptography.CngKeyOpenOptions.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-296"><paramref name="keyName" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-296"><paramref name="keyName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-297">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-297">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-298">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-298">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="009f2-299">若要開啟的金鑰容器的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-299">for permission to open a key container.</span></span> <span data-ttu-id="009f2-300">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-300">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="009f2-301">相關聯的列舉型別： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Open" /></span><span class="sxs-lookup"><span data-stu-id="009f2-301">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Open" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngKey Open (Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle keyHandle, System.Security.Cryptography.CngKeyHandleOpenOptions keyHandleOpenOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.CngKey Open(class Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle keyHandle, valuetype System.Security.Cryptography.CngKeyHandleOpenOptions keyHandleOpenOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Open(Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle,System.Security.Cryptography.CngKeyHandleOpenOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (keyHandle As SafeNCryptKeyHandle, keyHandleOpenOptions As CngKeyHandleOpenOptions) As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::CngKey ^ Open(Microsoft::Win32::SafeHandles::SafeNCryptKeyHandle ^ keyHandle, System::Security::Cryptography::CngKeyHandleOpenOptions keyHandleOpenOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyHandle" Type="Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle" />
        <Parameter Name="keyHandleOpenOptions" Type="System.Security.Cryptography.CngKeyHandleOpenOptions" />
      </Parameters>
      <Docs>
        <param name="keyHandle"><span data-ttu-id="009f2-302">現有金鑰的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="009f2-302">A handle to an existing key.</span></span></param>
        <param name="keyHandleOpenOptions"><span data-ttu-id="009f2-303">其中一個列舉值，指出 <c>keyHandle</c> 代表暫時金鑰或具名金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-303">One of the enumeration values that indicates whether <c>keyHandle</c> represents an ephemeral key or a named key.</span></span></param>
        <summary><span data-ttu-id="009f2-304">使用現有金鑰的控制代碼建立 <see cref="T:System.Security.Cryptography.CngKey" /> 物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="009f2-304">Creates an instance of an <see cref="T:System.Security.Cryptography.CngKey" /> object by using a handle to an existing key.</span></span></summary>
        <returns><span data-ttu-id="009f2-305">現有金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-305">An existing key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-306">這個多載可讓進階的使用者使用 CNG 類別即使它們是依賴平台叫用或受管理的 c + + interop 功能。</span><span class="sxs-lookup"><span data-stu-id="009f2-306">This overload enables advanced users to use the CNG classes even if they rely on platform invoke or the managed interop capability of C++.</span></span> <span data-ttu-id="009f2-307">例如，如果您有原生程式庫傳回 NCRYPT_KEY_HANDLE 形式的索引鍵，這個多載可讓您建立機碼的 managed 包裝函式和使用 CNG 類別，來操作它。</span><span class="sxs-lookup"><span data-stu-id="009f2-307">For example, if you have a native library that returns the key as an NCRYPT_KEY_HANDLE, this overload lets you create a managed wrapper around the key and use the CNG classes to manipulate it.</span></span>  
  
 <span data-ttu-id="009f2-308">當您開啟索引鍵使用其控制代碼時，您無法判斷金鑰的暫時狀態，也必須指定它自己。</span><span class="sxs-lookup"><span data-stu-id="009f2-308">When you open a key by using its handle, you cannot determine the key's ephemeral state and must specify it yourself.</span></span> <span data-ttu-id="009f2-309">有幾項屬性<xref:System.Security.Cryptography.CngKey>依賴此值設為正確的類別。</span><span class="sxs-lookup"><span data-stu-id="009f2-309">Several properties of the <xref:System.Security.Cryptography.CngKey> class rely on this value to be correct.</span></span> <span data-ttu-id="009f2-310">因此，請確定您要的正確旗標值傳遞<xref:System.Security.Cryptography.CngKey.Open%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="009f2-310">Therefore, make sure that you pass the correct flag value to the <xref:System.Security.Cryptography.CngKey.Open%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-311"><paramref name="keyHandle" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-311"><paramref name="keyHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="009f2-312"><paramref name="keyHandle" /> 無效或不正確，或是已關閉。</span><span class="sxs-lookup"><span data-stu-id="009f2-312"><paramref name="keyHandle" /> is invalid or malformed, or it is already closed.</span></span> <span data-ttu-id="009f2-313">如果金鑰是由 Common Language Runtime (CLR) 建立的暫時金鑰，但是未指定 <see cref="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey" /> 值，則同樣會擲回這個例外狀況。</span><span class="sxs-lookup"><span data-stu-id="009f2-313">This exception is also thrown if the key is an ephemeral key that is created by the common language runtime (CLR), but the <see cref="F:System.Security.Cryptography.CngKeyHandleOpenOptions.EphemeralKey" /> value is not specified.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-314">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-314">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-315">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-315">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="009f2-316">呼叫 unmanaged 程式碼的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-316">for permission to call unmanaged code.</span></span> <span data-ttu-id="009f2-317">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-317">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="009f2-318">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="009f2-318">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngKey Open (string keyName, System.Security.Cryptography.CngProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.CngKey Open(string keyName, class System.Security.Cryptography.CngProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (keyName As String, provider As CngProvider) As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::CngKey ^ Open(System::String ^ keyName, System::Security::Cryptography::CngProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="009f2-319">金鑰的名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-319">The name of the key.</span></span></param>
        <param name="provider"><span data-ttu-id="009f2-320">包含金鑰的 KSP。</span><span class="sxs-lookup"><span data-stu-id="009f2-320">The KSP that contains the key.</span></span></param>
        <summary><span data-ttu-id="009f2-321">使用指定的金鑰儲存提供者 (KSP) 建立代表現有具名金鑰的 <see cref="T:System.Security.Cryptography.CngKey" /> 物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="009f2-321">Creates an instance of an <see cref="T:System.Security.Cryptography.CngKey" /> object that represents an existing named key, using the specified key storage provider (KSP).</span></span></summary>
        <returns><span data-ttu-id="009f2-322">現有金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-322">An existing key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-323">不同於<xref:System.Security.Cryptography.CngKey.Open%28System.String%29>方法多載，這個多載可以可讓您指定的提供者。</span><span class="sxs-lookup"><span data-stu-id="009f2-323">Unlike the <xref:System.Security.Cryptography.CngKey.Open%28System.String%29> method overload, this overload lets you specify the provider.</span></span> <span data-ttu-id="009f2-324">此外，預設值<xref:System.Security.Cryptography.CngKeyOpenOptions>值<xref:System.Security.Cryptography.CngKeyOpenOptions.None>建立並繫結至索引鍵。</span><span class="sxs-lookup"><span data-stu-id="009f2-324">In addition, a default <xref:System.Security.Cryptography.CngKeyOpenOptions> value of <xref:System.Security.Cryptography.CngKeyOpenOptions.None> is created and bound to the key.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-325"><paramref name="keyName" /> 或 <paramref name="provider" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-325"><paramref name="keyName" /> or <paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-326">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-326">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-327">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-327">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="009f2-328">若要開啟的金鑰容器的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-328">for permission to open a key container.</span></span> <span data-ttu-id="009f2-329">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-329">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="009f2-330">相關聯的列舉型別： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Open" /></span><span class="sxs-lookup"><span data-stu-id="009f2-330">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Open" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.CngKey Open (string keyName, System.Security.Cryptography.CngProvider provider, System.Security.Cryptography.CngKeyOpenOptions openOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.CngKey Open(string keyName, class System.Security.Cryptography.CngProvider provider, valuetype System.Security.Cryptography.CngKeyOpenOptions openOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.Open(System.String,System.Security.Cryptography.CngProvider,System.Security.Cryptography.CngKeyOpenOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Open (keyName As String, provider As CngProvider, openOptions As CngKeyOpenOptions) As CngKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::CngKey ^ Open(System::String ^ keyName, System::Security::Cryptography::CngProvider ^ provider, System::Security::Cryptography::CngKeyOpenOptions openOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngKey</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="provider" Type="System.Security.Cryptography.CngProvider" />
        <Parameter Name="openOptions" Type="System.Security.Cryptography.CngKeyOpenOptions" />
      </Parameters>
      <Docs>
        <param name="keyName"><span data-ttu-id="009f2-331">金鑰的名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-331">The name of the key.</span></span></param>
        <param name="provider"><span data-ttu-id="009f2-332">包含金鑰的 KSP。</span><span class="sxs-lookup"><span data-stu-id="009f2-332">The KSP that contains the key.</span></span></param>
        <param name="openOptions"><span data-ttu-id="009f2-333">列舉值的位元組合，可指定開啟金鑰的選項，例如，金鑰是從何處開啟 (電腦或使用者存放裝置)，以及是否要隱藏 UI 提示。</span><span class="sxs-lookup"><span data-stu-id="009f2-333">A bitwise combination of the enumeration values that specify options for opening the key, such as where the key is opened from (machine or user storage) and whether to suppress UI prompting.</span></span></param>
        <summary><span data-ttu-id="009f2-334">使用指定的金鑰儲存提供者 (KSP) 和金鑰開啟選項，建立代表現有具名金鑰的 <see cref="T:System.Security.Cryptography.CngKey" /> 物件執行個體。</span><span class="sxs-lookup"><span data-stu-id="009f2-334">Creates an instance of an <see cref="T:System.Security.Cryptography.CngKey" /> object that represents an existing named key, using the specified key storage provider (KSP) and key open options.</span></span></summary>
        <returns><span data-ttu-id="009f2-335">現有金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-335">An existing key.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-336">不同於<xref:System.Security.Cryptography.CngKey.Open%28System.String%29>方法多載，這個多載可以可讓您指定的提供者和索引鍵開啟 [選項]。</span><span class="sxs-lookup"><span data-stu-id="009f2-336">Unlike the <xref:System.Security.Cryptography.CngKey.Open%28System.String%29> method overload, this overload lets you specify both the provider and the key open options.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="009f2-337"><paramref name="keyName" /> 或 <paramref name="provider" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-337"><paramref name="keyName" /> or <paramref name="provider" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="009f2-338">此系統不支援新一代密碼編譯 (CNG)。</span><span class="sxs-lookup"><span data-stu-id="009f2-338">Cryptography Next Generation (CNG) is not supported on this system.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="009f2-339">所有其他錯誤。</span><span class="sxs-lookup"><span data-stu-id="009f2-339">All other errors.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="009f2-340">若要開啟的金鑰容器的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-340">for permission to open a key container.</span></span> <span data-ttu-id="009f2-341">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-341">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span> <span data-ttu-id="009f2-342">相關聯的列舉型別： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Open" /></span><span class="sxs-lookup"><span data-stu-id="009f2-342">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Open" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.ParentWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-343">取得或設定視窗控制代碼 (HWND)，用於存取金鑰所造成的使用者介面 (UI) 提示。</span><span class="sxs-lookup"><span data-stu-id="009f2-343">Gets or sets the window handle (HWND) that should be used for user interface (UI) prompts caused by accessing the key.</span></span></summary>
        <value><span data-ttu-id="009f2-344">金鑰的父視窗控制代碼。</span><span class="sxs-lookup"><span data-stu-id="009f2-344">The parent window handle for the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-345">使用索引鍵的父視窗控制代碼 UI 提示，例如智慧卡 PIN 提示。</span><span class="sxs-lookup"><span data-stu-id="009f2-345">The parent window handle for the key is used in UI prompts, such as smart card PIN prompts.</span></span> <span data-ttu-id="009f2-346">此值不會保存使用保存的金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-346">This value is not persisted with persisted keys.</span></span>  
  
 <span data-ttu-id="009f2-347">我們建議您永遠將設定這個屬性，顯示使用者介面的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="009f2-347">We recommend that you always set this property for keys that display a user interface.</span></span> <span data-ttu-id="009f2-348">不使用的預設值`null`這類金鑰。</span><span class="sxs-lookup"><span data-stu-id="009f2-348">Do not use the default value of `null` for such keys.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="009f2-349">呼叫 unmanaged 程式碼的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-349">for permission to call unmanaged code.</span></span> <span data-ttu-id="009f2-350">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-350">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="009f2-351">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="009f2-351">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As CngProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngProvider ^ Provider { System::Security::Cryptography::CngProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-352">取得管理金鑰的金鑰儲存提供者 (KSP)。</span><span class="sxs-lookup"><span data-stu-id="009f2-352">Gets the key storage provider (KSP) that manages the key.</span></span></summary>
        <value><span data-ttu-id="009f2-353">管理金鑰的 KSP。</span><span class="sxs-lookup"><span data-stu-id="009f2-353">The KSP that manages the key.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle ProviderHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle ProviderHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.ProviderHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderHandle As SafeNCryptProviderHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafeNCryptProviderHandle ^ ProviderHandle { Microsoft::Win32::SafeHandles::SafeNCryptProviderHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-354">取得金鑰儲存提供者 (KSP) 的原生控制代碼 (NCRYPT_PROV_HANDLE)。</span><span class="sxs-lookup"><span data-stu-id="009f2-354">Gets a native handle (an NCRYPT_PROV_HANDLE) to the key storage provider (KSP).</span></span></summary>
        <value><span data-ttu-id="009f2-355">KSP 的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="009f2-355">A handle to the KSP.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-356">傳回的控制代碼會在目前的控制代碼重複<xref:System.Security.Cryptography.CngKey>物件。</span><span class="sxs-lookup"><span data-stu-id="009f2-356">The returned handle is a duplicate of the handle in the current <xref:System.Security.Cryptography.CngKey> object.</span></span> <span data-ttu-id="009f2-357">它會持續保留，即使目前<xref:System.Security.Cryptography.CngKey>處置時，且必須個別公開。</span><span class="sxs-lookup"><span data-stu-id="009f2-357">It will persist even if the current <xref:System.Security.Cryptography.CngKey> is disposed, and must be disposed of separately.</span></span>  
  
 <span data-ttu-id="009f2-358">您可以釋放目前的物件，而且沒有任何負面影響的任何順序的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="009f2-358">You can release the current object and the handle in any order without any adverse effects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="009f2-359">呼叫 unmanaged 程式碼的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-359">for permission to call unmanaged code.</span></span> <span data-ttu-id="009f2-360">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-360">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="009f2-361">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="009f2-361">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (System.Security.Cryptography.CngProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(valuetype System.Security.Cryptography.CngProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngKey.SetProperty(System.Security.Cryptography.CngProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (property As CngProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::Security::Cryptography::CngProperty property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.Security.Cryptography.CngProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="009f2-362">要設定的金鑰屬性。</span><span class="sxs-lookup"><span data-stu-id="009f2-362">The key property to set.</span></span></param>
        <summary><span data-ttu-id="009f2-363">設定金鑰上的具名屬性。</span><span class="sxs-lookup"><span data-stu-id="009f2-363">Sets a named property on the key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-364">這個方法可讓您使用，將新的自訂屬性新增至現有的索引鍵<xref:System.Security.Cryptography.CngProperty>物件。</span><span class="sxs-lookup"><span data-stu-id="009f2-364">This method enables you to add a new custom property to an existing key by using a <xref:System.Security.Cryptography.CngProperty> object.</span></span> <span data-ttu-id="009f2-365">上設定的選項<xref:System.Security.Cryptography.CngProperty>物件必須完全符合中的選項<xref:System.Security.Cryptography.CngKey.GetProperty%2A>呼叫。</span><span class="sxs-lookup"><span data-stu-id="009f2-365">The options set on the <xref:System.Security.Cryptography.CngProperty> object must exactly match the options in the <xref:System.Security.Cryptography.CngKey.GetProperty%2A> call.</span></span> <span data-ttu-id="009f2-366">否則，不會找到屬性。</span><span class="sxs-lookup"><span data-stu-id="009f2-366">Otherwise, the property will not be found.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="009f2-367">呼叫 unmanaged 程式碼的權限。</span><span class="sxs-lookup"><span data-stu-id="009f2-367">for permission to call unmanaged code.</span></span> <span data-ttu-id="009f2-368">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-368">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />.</span></span> <span data-ttu-id="009f2-369">相關聯的列舉型別： <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="009f2-369">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="UIPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngUIPolicy UIPolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CngUIPolicy UIPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.UIPolicy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UIPolicy As CngUIPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngUIPolicy ^ UIPolicy { System::Security::Cryptography::CngUIPolicy ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngUIPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-370">取得控制使用者介面 (UI) 用以存取金鑰的參數。</span><span class="sxs-lookup"><span data-stu-id="009f2-370">Gets parameters that control the user interface (UI) for accessing the key.</span></span></summary>
        <value><span data-ttu-id="009f2-371">物件，包含顯示 UI 的組態參數。</span><span class="sxs-lookup"><span data-stu-id="009f2-371">An object that contains configuration parameters for displaying the UI.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-372">索引鍵的 UI 原則搭配 UI 提示，例如智慧卡 PIN 提示。</span><span class="sxs-lookup"><span data-stu-id="009f2-372">The key UI policy is used with UI prompts such as smart card PIN prompts.</span></span> <span data-ttu-id="009f2-373">此原則也會控制受保護的金鑰的密碼對話方塊。</span><span class="sxs-lookup"><span data-stu-id="009f2-373">This policy also controls password dialog boxes for protected keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueName">
      <MemberSignature Language="C#" Value="public string UniqueName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngKey.UniqueName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniqueName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniqueName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="009f2-374">取得金鑰的唯一名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-374">Gets the unique name for the key.</span></span></summary>
        <value><span data-ttu-id="009f2-375">金鑰的替代名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-375">An alternate name for the key.</span></span> <span data-ttu-id="009f2-376">如果金鑰是暫時的，則值為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="009f2-376">If the key is ephemeral, the value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="009f2-377">這個屬性會取得存取金鑰時可用的替代名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-377">This property gets an alternate name that can be used when accessing the key.</span></span> <span data-ttu-id="009f2-378">如果原始的索引鍵名稱並未識別唯一的保存的金鑰，您可以使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="009f2-378">You can use this property if the original key name does not uniquely identify the persisted key.</span></span> <span data-ttu-id="009f2-379"><xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A>屬性會傳回為這個屬性的索引鍵的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="009f2-379">The <xref:System.Security.Cryptography.CngProvider.MicrosoftSoftwareKeyStorageProvider%2A> property will return the file name of the key as this property.</span></span> <span data-ttu-id="009f2-380">所傳回的名稱<xref:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider%2A>視實作而定。</span><span class="sxs-lookup"><span data-stu-id="009f2-380">The name returned by the <xref:System.Security.Cryptography.CngProvider.MicrosoftSmartCardKeyStorageProvider%2A> is implementation-dependent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>