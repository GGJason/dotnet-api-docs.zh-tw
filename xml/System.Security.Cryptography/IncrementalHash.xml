<Type Name="IncrementalHash" FullName="System.Security.Cryptography.IncrementalHash">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1a98258c7d2fdb6387ce9cbf4717c0e7b248bc43" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56369115" /></Metadata><TypeSignature Language="C#" Value="public sealed class IncrementalHash : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IncrementalHash extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.IncrementalHash" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IncrementalHash&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class IncrementalHash sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type IncrementalHash = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netstandard-2.0">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4e115-101">提供支援，以跨多個區段累加計算雜湊或雜湊式訊息驗證碼 (HMAC) 值。</span><span class="sxs-lookup"><span data-stu-id="4e115-101">Provides support for computing a hash or Hash-based Message Authentication Code (HMAC) value incrementally across several segments.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlgorithmName">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName AlgorithmName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName AlgorithmName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.IncrementalHash.AlgorithmName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AlgorithmName As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName AlgorithmName { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.AlgorithmName : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.IncrementalHash.AlgorithmName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4e115-102">取得正在執行的演算法名稱。</span><span class="sxs-lookup"><span data-stu-id="4e115-102">Gets the name of the algorithm being performed.</span></span> <span data-ttu-id="4e115-103">HMAC 演算法前面會加上 "HMAC"，以便與未加上索引鍵的摘要進行區分。</span><span class="sxs-lookup"><span data-stu-id="4e115-103">HMAC algorithms are prepended with "HMAC" to distinguish them from an unkeyed digest.</span></span></summary>
        <value><span data-ttu-id="4e115-104">正在執行的演算法名稱。</span><span class="sxs-lookup"><span data-stu-id="4e115-104">The name of the algorithm being performed.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="member this.AppendData : byte[] -&gt; unit" Usage="incrementalHash.AppendData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="4e115-105">要處理的資料。</span><span class="sxs-lookup"><span data-stu-id="4e115-105">The data to process.</span></span></param>
        <summary><span data-ttu-id="4e115-106">將指定的資料附加至已經雜湊或 HMAC 處理的資料尾端。</span><span class="sxs-lookup"><span data-stu-id="4e115-106">Appends the specified data to the data already processed in the hash or HMAC.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e115-107"><paramref name="data" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4e115-107"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4e115-108">已處置 <see cref="T:System.Security.Cryptography.IncrementalHash" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="4e115-108">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (ReadOnlySpan&lt;byte&gt; data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(ReadOnlySpan&lt;System::Byte&gt; data);" />
      <MemberSignature Language="F#" Value="member this.AppendData : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="incrementalHash.AppendData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendData">
      <MemberSignature Language="C#" Value="public void AppendData (byte[] data, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendData(unsigned int8[] data, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendData (data As Byte(), offset As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count);" />
      <MemberSignature Language="F#" Value="member this.AppendData : byte[] * int * int -&gt; unit" Usage="incrementalHash.AppendData (data, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="4e115-109">要處理的資料。</span><span class="sxs-lookup"><span data-stu-id="4e115-109">The data to process.</span></span></param>
        <param name="offset"><span data-ttu-id="4e115-110">位元組陣列中的座標，從此處開始使用資料。</span><span class="sxs-lookup"><span data-stu-id="4e115-110">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="count"><span data-ttu-id="4e115-111">從 <paramref name="data" /> 使用的位元組數。</span><span class="sxs-lookup"><span data-stu-id="4e115-111">The number of bytes to use from <paramref name="data" />.</span></span></param>
        <summary><span data-ttu-id="4e115-112">從指定的位移開始，將來自指定資料的指定位元組數目附加到已經過雜湊或雜湊式訊息驗證碼 (HMAC) 處理的資料。</span><span class="sxs-lookup"><span data-stu-id="4e115-112">Appends the specified number of bytes from the specified data, starting at the specified offset, to the data already processed in the hash or Hash-based Message Authentication Code (HMAC).</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e115-113"><paramref name="data" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4e115-113"><paramref name="data" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="4e115-114"><paramref name="count" /> 或 <paramref name="offset" /> 為負。</span><span class="sxs-lookup"><span data-stu-id="4e115-114"><paramref name="count" /> or <paramref name="offset" /> is negative.</span></span>  
  
<span data-ttu-id="4e115-115">-或-</span><span class="sxs-lookup"><span data-stu-id="4e115-115">-or-</span></span> 
 <span data-ttu-id="4e115-116"><paramref name="count" /> 大於 <paramref name="data" /> 的長度。</span><span class="sxs-lookup"><span data-stu-id="4e115-116"><paramref name="count" /> is larger than the length of <paramref name="data" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e115-117"><paramref name="offset" /> 和 <paramref name="count" /> 的總和大於資料長度。</span><span class="sxs-lookup"><span data-stu-id="4e115-117">The sum of <paramref name="offset" /> and <paramref name="count" /> is larger than the data length.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4e115-118">已處置 <see cref="T:System.Security.Cryptography.IncrementalHash" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="4e115-118">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHash">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.IncrementalHash CreateHash (System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.IncrementalHash CreateHash(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.CreateHash(System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHash (hashAlgorithm As HashAlgorithmName) As IncrementalHash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::IncrementalHash ^ CreateHash(System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="static member CreateHash : System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.IncrementalHash" Usage="System.Security.Cryptography.IncrementalHash.CreateHash hashAlgorithm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.IncrementalHash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm"><span data-ttu-id="4e115-119">要執行的雜湊演算法名稱。</span><span class="sxs-lookup"><span data-stu-id="4e115-119">The name of the hash algorithm to perform.</span></span></param>
        <summary><span data-ttu-id="4e115-120">為指定的演算法建立 <see cref="T:System.Security.Cryptography.IncrementalHash" />。</span><span class="sxs-lookup"><span data-stu-id="4e115-120">Creates an <see cref="T:System.Security.Cryptography.IncrementalHash" /> for the specified algorithm.</span></span></summary>
        <returns><span data-ttu-id="4e115-121">隨時可計算 <paramref name="hashAlgorithm" /> 指定雜湊演算法的 <see cref="T:System.Security.Cryptography.IncrementalHash" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="4e115-121">An <see cref="T:System.Security.Cryptography.IncrementalHash" /> instance ready to compute the hash algorithm specified by <paramref name="hashAlgorithm" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e115-122"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="4e115-122"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="4e115-123">為 <see langword="null" /> 或空字串。</span><span class="sxs-lookup"><span data-stu-id="4e115-123">is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4e115-124"><paramref name="hashAlgorithm" /> 不是已知的雜湊演算法。</span><span class="sxs-lookup"><span data-stu-id="4e115-124"><paramref name="hashAlgorithm" /> is not a known hash algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateHMAC">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.IncrementalHash CreateHMAC (System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.IncrementalHash CreateHMAC(valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm, unsigned int8[] key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.CreateHMAC(System.Security.Cryptography.HashAlgorithmName,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateHMAC (hashAlgorithm As HashAlgorithmName, key As Byte()) As IncrementalHash" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::IncrementalHash ^ CreateHMAC(System::Security::Cryptography::HashAlgorithmName hashAlgorithm, cli::array &lt;System::Byte&gt; ^ key);" />
      <MemberSignature Language="F#" Value="static member CreateHMAC : System.Security.Cryptography.HashAlgorithmName * byte[] -&gt; System.Security.Cryptography.IncrementalHash" Usage="System.Security.Cryptography.IncrementalHash.CreateHMAC (hashAlgorithm, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.IncrementalHash</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        <Parameter Name="key" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="hashAlgorithm"><span data-ttu-id="4e115-125">在 HMAC 內執行的雜湊演算法名稱。</span><span class="sxs-lookup"><span data-stu-id="4e115-125">The name of the hash algorithm to perform within the HMAC.</span></span></param>
        <param name="key"><span data-ttu-id="4e115-126">HMAC 的祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="4e115-126">The secret key for the HMAC.</span></span> <span data-ttu-id="4e115-127">金鑰可為任意長度，但超過指定雜湊演算法輸出大小的金鑰會被雜湊，以衍生大小正確的金鑰。</span><span class="sxs-lookup"><span data-stu-id="4e115-127">The key can be of any length, but a key longer than the output size of the specified hash algorithm will be hashed to derive a correctly-sized key.</span></span> <span data-ttu-id="4e115-128">因此，建議的祕密金鑰大小是指定的雜湊演算法輸出大小。</span><span class="sxs-lookup"><span data-stu-id="4e115-128">Therefore, the recommended size of the secret key is the output size of the specified hash algorithm.</span></span></param>
        <summary><span data-ttu-id="4e115-129">為使用指定的雜湊演算法和金鑰的雜湊訊息驗證碼 (HMAC) 演算法建立 <see cref="T:System.Security.Cryptography.IncrementalHash" />。</span><span class="sxs-lookup"><span data-stu-id="4e115-129">Creates an <see cref="T:System.Security.Cryptography.IncrementalHash" /> for the Hash-based Message Authentication Code (HMAC) algorithm using the specified hash algorithm and key.</span></span></summary>
        <returns><span data-ttu-id="4e115-130">隨時可計算指定雜湊演算法的<see cref="T:System.Security.Cryptography.IncrementalHash" /> 類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4e115-130">An instance of the <see cref="T:System.Security.Cryptography.IncrementalHash" /> class ready to compute the specified hash algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="4e115-131"><paramref name="key" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="4e115-131"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="4e115-132"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span><span class="sxs-lookup"><span data-stu-id="4e115-132"><paramref name="hashAlgorithm" />.<see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /></span></span> <span data-ttu-id="4e115-133">為 <see langword="null" /> 或空字串。</span><span class="sxs-lookup"><span data-stu-id="4e115-133">is <see langword="null" /> or an empty string.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="4e115-134"><paramref name="hashAlgorithm" /> 不是已知的雜湊演算法。</span><span class="sxs-lookup"><span data-stu-id="4e115-134"><paramref name="hashAlgorithm" /> is not a known hash algorithm.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="incrementalHash.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e115-135">將 <see cref="T:System.Security.Cryptography.IncrementalHash" /> 類別的目前執行個體所使用的資源釋出。</span><span class="sxs-lookup"><span data-stu-id="4e115-135">Releases the resources used by the current instance of the <see cref="T:System.Security.Cryptography.IncrementalHash" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashAndReset">
      <MemberSignature Language="C#" Value="public byte[] GetHashAndReset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetHashAndReset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.GetHashAndReset" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashAndReset () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetHashAndReset();" />
      <MemberSignature Language="F#" Value="member this.GetHashAndReset : unit -&gt; byte[]" Usage="incrementalHash.GetHashAndReset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4e115-136">從先前對 <see cref="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" /> 方法的呼叫所累積的資料，擷取雜湊或雜湊式訊息驗證碼 (HMAC)，並將物件重設為其初始狀態。</span><span class="sxs-lookup"><span data-stu-id="4e115-136">Retrieves the hash or Hash-based Message Authentication Code (HMAC) for the data accumulated from prior calls to the <see cref="M:System.Security.Cryptography.IncrementalHash.AppendData(System.Byte[])" /> method,  and resets the object to its initial state.</span></span></summary>
        <returns><span data-ttu-id="4e115-137">已計算的雜湊或 HMAC。</span><span class="sxs-lookup"><span data-stu-id="4e115-137">The computed hash or HMAC.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4e115-138">已處置 <see cref="T:System.Security.Cryptography.IncrementalHash" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="4e115-138">The <see cref="T:System.Security.Cryptography.IncrementalHash" /> object has already been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetHashAndReset">
      <MemberSignature Language="C#" Value="public bool TryGetHashAndReset (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetHashAndReset(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.IncrementalHash.TryGetHashAndReset(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetHashAndReset (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetHashAndReset(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="member this.TryGetHashAndReset : Span&lt;byte&gt; *  -&gt; bool" Usage="incrementalHash.TryGetHashAndReset (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>