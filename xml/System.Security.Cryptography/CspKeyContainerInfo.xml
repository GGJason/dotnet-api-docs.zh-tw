<Type Name="CspKeyContainerInfo" FullName="System.Security.Cryptography.CspKeyContainerInfo">
  <TypeSignature Language="C#" Value="public sealed class CspKeyContainerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspKeyContainerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspKeyContainerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspKeyContainerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspKeyContainerInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8c76e-101">提供密碼編譯金鑰組的其他相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-101">Provides additional information about a cryptographic key pair.</span></span> <span data-ttu-id="8c76e-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="8c76e-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c76e-103">使用此類別來取得其他資訊的金鑰組，例如金鑰容器名稱或索引鍵的數字。</span><span class="sxs-lookup"><span data-stu-id="8c76e-103">Use this class to obtain additional information about a key pair, such as the key container name or the key number.</span></span>  
  
 <span data-ttu-id="8c76e-104">在所產生的隨機金鑰的地方的情況下<xref:System.Security.Cryptography.RSACryptoServiceProvider>或<xref:System.Security.Cryptography.DSACryptoServiceProvider>，直到您呼叫的方法，會使用的金鑰，將不會建立金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="8c76e-104">In cases where a random key is generated by the <xref:System.Security.Cryptography.RSACryptoServiceProvider> or the <xref:System.Security.Cryptography.DSACryptoServiceProvider>, a key container will not be created until you call a method that uses the key.</span></span>  <span data-ttu-id="8c76e-105">某些屬性<xref:System.Security.Cryptography.CspKeyContainerInfo>類別將會擲回<xref:System.Security.Cryptography.CryptographicException>如果尚未建立的金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="8c76e-105">Some properties of the <xref:System.Security.Cryptography.CspKeyContainerInfo> class will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c76e-106">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-106">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspKeyContainerInfo (System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspKeyContainerInfo.#ctor(System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspKeyContainerInfo(System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="parameters"><span data-ttu-id="8c76e-107"><see cref="T:System.Security.Cryptography.CspParameters" /> 物件，提供金鑰的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-107">A <see cref="T:System.Security.Cryptography.CspParameters" /> object that provides information about the key.</span></span></param>
        <summary><span data-ttu-id="8c76e-108">使用指定的參數初始化 <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8c76e-108">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> class using the specified parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c76e-109">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-109">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Accessible">
      <MemberSignature Language="C#" Value="public bool Accessible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Accessible" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Accessible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Accessible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Accessible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-110">取得值，指出金鑰容器中某個金鑰是否可以存取。</span><span class="sxs-lookup"><span data-stu-id="8c76e-110">Gets a value indicating whether a key in a key container is accessible.</span></span></summary>
        <value>
          <span data-ttu-id="8c76e-111">如果該金鑰可以存取則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c76e-111"><see langword="true" /> if the key is accessible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c76e-112">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-112">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c76e-113">不支援金鑰類型。</span><span class="sxs-lookup"><span data-stu-id="8c76e-113">The key type is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-114">取得 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 物件，表示容器的存取權限和稽核規則。</span><span class="sxs-lookup"><span data-stu-id="8c76e-114">Gets a <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></summary>
        <value><span data-ttu-id="8c76e-115"><see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 物件，表示容器的存取權限和稽核規則。</span><span class="sxs-lookup"><span data-stu-id="8c76e-115">A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c76e-116">使用<xref:System.Security.Cryptography.CspKeyContainerInfo>屬性，以擷取<xref:System.Security.AccessControl.CryptoKeySecurity>物件管理建立的判別存取控制清單 (DACL) 和系統存取控制清單 (SACL) 容器。</span><span class="sxs-lookup"><span data-stu-id="8c76e-116">Use the <xref:System.Security.Cryptography.CspKeyContainerInfo> property to retrieve the  <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8c76e-117">不支援金鑰類型。</span><span class="sxs-lookup"><span data-stu-id="8c76e-117">The key type is not supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c76e-118">找不到密碼編譯服務提供者。</span><span class="sxs-lookup"><span data-stu-id="8c76e-118">The cryptographic service provider cannot be found.</span></span>  
  
 <span data-ttu-id="8c76e-119">-或-</span><span class="sxs-lookup"><span data-stu-id="8c76e-119">-or-</span></span>  
  
 <span data-ttu-id="8c76e-120">找不到金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="8c76e-120">The key container was not found.</span></span></exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"><span data-ttu-id="8c76e-121">用來變更及檢視的存取控制與此金鑰容器相關聯的清單。</span><span class="sxs-lookup"><span data-stu-id="8c76e-121">for  changing and viewing the access control list associated with this key container.</span></span>  
  
 <span data-ttu-id="8c76e-122">要求的值： <see cref="F:System.Security.Permissions.SecurityAction.Demand" />。</span><span class="sxs-lookup"><span data-stu-id="8c76e-122">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span>  
  
 <span data-ttu-id="8c76e-123">列舉型別相關聯： <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl" />， <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl" />。</span><span class="sxs-lookup"><span data-stu-id="8c76e-123">Associated enumerations: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ChangeAcl" />, <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.ViewAcl" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Exportable">
      <MemberSignature Language="C#" Value="public bool Exportable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exportable" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Exportable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exportable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Exportable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-124">取得值，指出金鑰是否可以從金鑰容器中匯出。</span><span class="sxs-lookup"><span data-stu-id="8c76e-124">Gets a value indicating whether a key can be exported from a key container.</span></span></summary>
        <value>
          <span data-ttu-id="8c76e-125">如果該金鑰可以匯出則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c76e-125"><see langword="true" /> if the key can be exported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c76e-126">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-126">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c76e-127">不支援金鑰類型。</span><span class="sxs-lookup"><span data-stu-id="8c76e-127">The key type is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8c76e-128">找不到密碼編譯服務提供者。</span><span class="sxs-lookup"><span data-stu-id="8c76e-128">The cryptographic service provider cannot be found.</span></span>  
  
 <span data-ttu-id="8c76e-129">-或-</span><span class="sxs-lookup"><span data-stu-id="8c76e-129">-or-</span></span>  
  
 <span data-ttu-id="8c76e-130">找不到金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="8c76e-130">The key container was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HardwareDevice">
      <MemberSignature Language="C#" Value="public bool HardwareDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HardwareDevice" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.HardwareDevice" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HardwareDevice As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HardwareDevice { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-131">取得值，指出金鑰是否為硬體金鑰。</span><span class="sxs-lookup"><span data-stu-id="8c76e-131">Gets a value indicating whether a key is a hardware key.</span></span></summary>
        <value>
          <span data-ttu-id="8c76e-132">如果該金鑰是硬體金鑰則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c76e-132"><see langword="true" /> if the key is a hardware key; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c76e-133">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-133">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8c76e-134">找不到密碼編譯服務提供者。</span><span class="sxs-lookup"><span data-stu-id="8c76e-134">The cryptographic service provider cannot be found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ KeyContainerName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-135">取得金鑰容器名稱。</span><span class="sxs-lookup"><span data-stu-id="8c76e-135">Gets a key container name.</span></span></summary>
        <value><span data-ttu-id="8c76e-136">金鑰容器名稱。</span><span class="sxs-lookup"><span data-stu-id="8c76e-136">The key container name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c76e-137">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-137">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.KeyNumber KeyNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.KeyNumber KeyNumber" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyNumber As KeyNumber" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::KeyNumber KeyNumber { System::Security::Cryptography::KeyNumber get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeyNumber</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-138">取得值，該值描述非對稱金鑰建立為簽章金鑰或交換金鑰。</span><span class="sxs-lookup"><span data-stu-id="8c76e-138">Gets a value that describes whether an asymmetric key was created as a signature key or an exchange key.</span></span></summary>
        <value><span data-ttu-id="8c76e-139">其中一個 <see cref="T:System.Security.Cryptography.KeyNumber" /> 值，該值描述非對稱金鑰建立為簽章金鑰或交換金鑰。</span><span class="sxs-lookup"><span data-stu-id="8c76e-139">One of the <see cref="T:System.Security.Cryptography.KeyNumber" /> values that describes whether an asymmetric key was created as a signature key or an exchange key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c76e-140">值<xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>屬性衍生自<xref:System.Security.Cryptography.CspParameters.KeyNumber>欄位<xref:System.Security.Cryptography.CspParameters>物件，用於初始化<xref:System.Security.Cryptography.CspKeyContainerInfo>物件。</span><span class="sxs-lookup"><span data-stu-id="8c76e-140">The value of the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property is derived from the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field of the <xref:System.Security.Cryptography.CspParameters> object that was used to initialize the <xref:System.Security.Cryptography.CspKeyContainerInfo> object.</span></span>  
  
 <span data-ttu-id="8c76e-141">交換金鑰是用來加密工作階段金鑰，使它們可以安全地儲存和與其他使用者交換非對稱金鑰組。</span><span class="sxs-lookup"><span data-stu-id="8c76e-141">An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="8c76e-142"><xref:System.Security.Cryptography.KeyNumber.Exchange>值會指定交換金鑰。</span><span class="sxs-lookup"><span data-stu-id="8c76e-142">The <xref:System.Security.Cryptography.KeyNumber.Exchange> value specifies an exchange key.</span></span>  <span data-ttu-id="8c76e-143">這個值會對應到`AT_KEYEXCHANGE`用在 unmanaged Microsoft 密碼編譯 API (CAPI) 的值。</span><span class="sxs-lookup"><span data-stu-id="8c76e-143">This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="8c76e-144">簽章金鑰是用於驗證 （數位簽章） 的訊息或檔案的非對稱金鑰組。</span><span class="sxs-lookup"><span data-stu-id="8c76e-144">A signature key is an asymmetric key pair used for authenticating (digitally signed) messages or files.</span></span>  <span data-ttu-id="8c76e-145"><xref:System.Security.Cryptography.KeyNumber.Signature>值會指定簽章金鑰。</span><span class="sxs-lookup"><span data-stu-id="8c76e-145">The <xref:System.Security.Cryptography.KeyNumber.Signature> value specifies a signature key.</span></span>  <span data-ttu-id="8c76e-146">這個值會對應到`AT_SIGNATURE`CAPI 中使用的值。</span><span class="sxs-lookup"><span data-stu-id="8c76e-146">This value corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c76e-147">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-147">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MachineKeyStore">
      <MemberSignature Language="C#" Value="public bool MachineKeyStore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MachineKeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.MachineKeyStore" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MachineKeyStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MachineKeyStore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-148">取得值，指出金鑰是否來自電腦金鑰組。</span><span class="sxs-lookup"><span data-stu-id="8c76e-148">Gets a value indicating whether a key is from a machine key set.</span></span></summary>
        <value>
          <span data-ttu-id="8c76e-149">如果金鑰來自電腦金鑰組，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c76e-149"><see langword="true" /> if the key is from the machine key set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c76e-150">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-150">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Protected">
      <MemberSignature Language="C#" Value="public bool Protected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Protected" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Protected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Protected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Protected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-151">取得值，指出金鑰組是否受到保護。</span><span class="sxs-lookup"><span data-stu-id="8c76e-151">Gets a value indicating whether a key pair is protected.</span></span></summary>
        <value>
          <span data-ttu-id="8c76e-152">如果該金鑰組受到保護則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c76e-152"><see langword="true" /> if the key pair is protected; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c76e-153">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-153">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c76e-154">不支援金鑰類型。</span><span class="sxs-lookup"><span data-stu-id="8c76e-154">The key type is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8c76e-155">找不到密碼編譯服務提供者。</span><span class="sxs-lookup"><span data-stu-id="8c76e-155">The cryptographic service provider cannot be found.</span></span>  
  
 <span data-ttu-id="8c76e-156">-或-</span><span class="sxs-lookup"><span data-stu-id="8c76e-156">-or-</span></span>  
  
 <span data-ttu-id="8c76e-157">找不到金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="8c76e-157">The key container was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-158">取得金鑰提供者名稱。</span><span class="sxs-lookup"><span data-stu-id="8c76e-158">Gets the provider name of a key.</span></span></summary>
        <value><span data-ttu-id="8c76e-159">提供者名稱。</span><span class="sxs-lookup"><span data-stu-id="8c76e-159">The provider name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c76e-160">此屬性會指定建立此金鑰的密碼編譯服務提供者。</span><span class="sxs-lookup"><span data-stu-id="8c76e-160">This property specifies the cryptographic service provider that created the key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c76e-161">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-161">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ProviderType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderType As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ProviderType { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-162">取得金鑰提供者類型。</span><span class="sxs-lookup"><span data-stu-id="8c76e-162">Gets the provider type of a key.</span></span></summary>
        <value><span data-ttu-id="8c76e-163">提供者類型。</span><span class="sxs-lookup"><span data-stu-id="8c76e-163">The provider type.</span></span> <span data-ttu-id="8c76e-164">預設為 1。</span><span class="sxs-lookup"><span data-stu-id="8c76e-164">The default is 1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c76e-165">有效的值取決於用來建立金鑰的密碼編譯服務提供者。</span><span class="sxs-lookup"><span data-stu-id="8c76e-165">Valid values are determined by the cryptographic service provider used to create the key.</span></span> <span data-ttu-id="8c76e-166">密碼編譯服務提供者通常會組織成群組或家族，每一個都有它自己的資料格式和處理序集。</span><span class="sxs-lookup"><span data-stu-id="8c76e-166">Cryptographic service providers are generally organized into groups or families, each of which has its own set of data formats and processes.</span></span> <span data-ttu-id="8c76e-167">使用相同的演算法，例如 RC2 的區塊編碼器的兩個系列通常會使用不同的填補配置、 不同的金鑰長度和不同的預設模式。</span><span class="sxs-lookup"><span data-stu-id="8c76e-167">Two families that use the same algorithm, such as the RC2 block cipher, often use different padding schemes, different key lengths, and different default modes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c76e-168">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-168">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RandomlyGenerated">
      <MemberSignature Language="C#" Value="public bool RandomlyGenerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RandomlyGenerated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.RandomlyGenerated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RandomlyGenerated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RandomlyGenerated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-169">取得值，指出是否由 Managed 密碼編譯類別隨機產生金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="8c76e-169">Gets a value indicating whether a key container was randomly generated by a managed cryptography class.</span></span></summary>
        <value>
          <span data-ttu-id="8c76e-170">如果隨機產生金鑰容器，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c76e-170"><see langword="true" /> if the key container was randomly generated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c76e-171">通常，建立隨機產生的金鑰容器時，金鑰容器名稱為"CLR {`guid value`}。 」</span><span class="sxs-lookup"><span data-stu-id="8c76e-171">Usually, when a randomly generated key container is created, the key container is named "CLR{`guid value`}."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8c76e-172">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-172">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Removable">
      <MemberSignature Language="C#" Value="public bool Removable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Removable" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.Removable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Removable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Removable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-173">取得值，指出金鑰是否可以從金鑰容器中移除。</span><span class="sxs-lookup"><span data-stu-id="8c76e-173">Gets a value indicating whether a key can be removed from a key container.</span></span></summary>
        <value>
          <span data-ttu-id="8c76e-174">如果該金鑰可以移除則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c76e-174"><see langword="true" /> if the key is removable; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c76e-175">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-175">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8c76e-176">找不到密碼編譯服務提供者 (CSP)。</span><span class="sxs-lookup"><span data-stu-id="8c76e-176">The cryptographic service provider (CSP) was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UniqueKeyContainerName">
      <MemberSignature Language="C#" Value="public string UniqueKeyContainerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueKeyContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspKeyContainerInfo.UniqueKeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UniqueKeyContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UniqueKeyContainerName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c76e-177">取得唯一的金鑰容器名稱。</span><span class="sxs-lookup"><span data-stu-id="8c76e-177">Gets a unique key container name.</span></span></summary>
        <value><span data-ttu-id="8c76e-178">唯一的金鑰容器名稱。</span><span class="sxs-lookup"><span data-stu-id="8c76e-178">The unique key container name.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8c76e-179">下列程式碼範例會建立金鑰容器，並擷取該容器的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="8c76e-179">The following code example creates a key container and retrieves information about that container.</span></span>  
  
 [!code-cpp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/CS/sample.cs#1)]
 [!code-vb[Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RsaCryptoServiceProvider.CspKeyContainerInfo/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8c76e-180">不支援金鑰類型。</span><span class="sxs-lookup"><span data-stu-id="8c76e-180">The key type is not supported.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="8c76e-181">找不到密碼編譯服務提供者。</span><span class="sxs-lookup"><span data-stu-id="8c76e-181">The cryptographic service provider cannot be found.</span></span>  
  
 <span data-ttu-id="8c76e-182">-或-</span><span class="sxs-lookup"><span data-stu-id="8c76e-182">-or-</span></span>  
  
 <span data-ttu-id="8c76e-183">找不到金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="8c76e-183">The key container was not found.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>