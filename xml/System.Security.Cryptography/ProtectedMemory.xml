<Type Name="ProtectedMemory" FullName="System.Security.Cryptography.ProtectedMemory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c1894f168a0c6706f346843a1947d287d939ebf" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39756950" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProtectedMemory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedMemory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedMemory" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedMemory" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedMemory sealed" />
  <TypeSignature Language="F#" Value="type ProtectedMemory = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eaecc-101">提供保護和解除記憶體保護的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="eaecc-101">Provides methods for protecting and unprotecting memory.</span>
      </span>
      <span data-ttu-id="eaecc-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="eaecc-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaecc-103">這個類別提供存取至資料保護 API (DPAPI) 適用於 Windows XP 和更新版本的作業系統。</span><span class="sxs-lookup"><span data-stu-id="eaecc-103">This class provides access to the Data Protection API (DPAPI) available in the Windows XP and later operating systems.</span></span> <span data-ttu-id="eaecc-104">這是一項服務，由作業系統提供，而且不需要額外的程式庫。</span><span class="sxs-lookup"><span data-stu-id="eaecc-104">This is a service that is provided by the operating system and does not require additional libraries.</span></span> <span data-ttu-id="eaecc-105">它會提供記憶體中的敏感性資料加密。</span><span class="sxs-lookup"><span data-stu-id="eaecc-105">It provides encryption for sensitive data in memory.</span></span>  
  
 <span data-ttu-id="eaecc-106">類別包含兩個的包裝函式未受管理的 DPAPI，如<xref:System.Security.Cryptography.ProtectedMemory.Protect%2A>和<xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A>。</span><span class="sxs-lookup"><span data-stu-id="eaecc-106">The class consists of two wrappers for the unmanaged DPAPI, <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> and <xref:System.Security.Cryptography.ProtectedMemory.Unprotect%2A>.</span></span> <span data-ttu-id="eaecc-107">這兩種方法可用來加密和解密記憶體中的資料。</span><span class="sxs-lookup"><span data-stu-id="eaecc-107">These two methods can be used to encrypt and decrypt data in memory.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaecc-108">下列範例示範如何使用資料保護。</span><span class="sxs-lookup"><span data-stu-id="eaecc-108">The following example shows how to use data protection.</span></span>  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static void Protect (byte[] userData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Protect(unsigned int8[] userData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Protect (userData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Protect(cli::array &lt;System::Byte&gt; ^ userData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * System.Security.Cryptography.MemoryProtectionScope -&gt; unit" Usage="System.Security.Cryptography.ProtectedMemory.Protect (userData, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">
          <span data-ttu-id="eaecc-109">內含記憶體中要保護的資料之位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-109">The byte array containing data in memory to protect.</span>
          </span>
          <span data-ttu-id="eaecc-110">此陣列必須是 16 個位元組的倍數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-110">The array must be a multiple of 16 bytes.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="eaecc-111">其中一個列舉值，指定記憶體保護的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-111">One of the enumeration values that specifies the scope of memory protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaecc-112">保護指定的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-112">Protects the specified data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaecc-113">這個方法可用來保護記憶體中的資料。</span><span class="sxs-lookup"><span data-stu-id="eaecc-113">This method can be used to protect data in memory.</span></span> <span data-ttu-id="eaecc-114">請注意，方法不會進行一份資料，但會加密位元組陣列中的位置。</span><span class="sxs-lookup"><span data-stu-id="eaecc-114">Note that the method does not make a copy of the data, but encrypts the byte array in place.</span></span> <span data-ttu-id="eaecc-115">`userData`參數必須是 16 個位元組長度或 16 位元組的倍數。</span><span class="sxs-lookup"><span data-stu-id="eaecc-115">The `userData` parameter must be 16 bytes in length or a multiple of 16 bytes.</span></span>  
  
 <span data-ttu-id="eaecc-116">適用於 Windows XP 和更新版本的作業系統支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="eaecc-116">Support for this method is available in the Windows XP and later operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaecc-117">下列程式碼範例示範如何使用資料保護。</span><span class="sxs-lookup"><span data-stu-id="eaecc-117">The following code example shows how to use data protection.</span></span>  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="eaecc-118">
            <paramref name="userData" /> 的長度必須是 16 個位元組或 16 位個元組的倍數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-118">
              <paramref name="userData" /> must be 16 bytes in length or in multiples of 16 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eaecc-119">本作業系統不支援這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-119">The operating system does not support this method.</span>
          </span>
          <span data-ttu-id="eaecc-120">這個方法只有 Windows 2000 (含) 以後版本的作業系統才能夠使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-120">This method can be used only with the Windows 2000 or later operating systems.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eaecc-121">
            <paramref name="userData" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-121">
              <paramref name="userData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static void Unprotect (byte[] encryptedData, System.Security.Cryptography.MemoryProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unprotect(unsigned int8[] encryptedData, valuetype System.Security.Cryptography.MemoryProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedMemory.Unprotect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unprotect (encryptedData As Byte(), scope As MemoryProtectionScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, System::Security::Cryptography::MemoryProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * System.Security.Cryptography.MemoryProtectionScope -&gt; unit" Usage="System.Security.Cryptography.ProtectedMemory.Unprotect (encryptedData, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.MemoryProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">
          <span data-ttu-id="eaecc-122">記憶體中要解密的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-122">The byte array in memory to unencrypt.</span>
          </span>
        </param>
        <param name="scope">
          <span data-ttu-id="eaecc-123">其中一個列舉值，指定記憶體保護的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-123">One of the enumeration values that specifies the scope of memory protection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaecc-124">解除保護記憶體中使用 <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> 方法所保護的資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-124">Unprotects data in memory that was protected using the <see cref="M:System.Security.Cryptography.ProtectedMemory.Protect(System.Byte[],System.Security.Cryptography.MemoryProtectionScope)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaecc-125">這個方法可用來解密已加密使用的記憶體中的資料<xref:System.Security.Cryptography.ProtectedMemory.Protect%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="eaecc-125">This method can be used to unencrypt data in memory that was encrypted using the <xref:System.Security.Cryptography.ProtectedMemory.Protect%2A> method.</span></span>  
  
 <span data-ttu-id="eaecc-126">適用於 Windows XP 和更新版本的作業系統支援這個方法。</span><span class="sxs-lookup"><span data-stu-id="eaecc-126">Support for this method is available in the Windows XP and later operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaecc-127">下列範例示範如何使用資料保護。</span><span class="sxs-lookup"><span data-stu-id="eaecc-127">The following example shows how to use data protection.</span></span>  
  
 [!code-cpp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CPP/memoryprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.MemoryProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/CS/memoryprotectionsample.cs#1)]
 [!code-vb[Cryptography.MemoryProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.MemoryProtectionSample/vb/memoryprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="eaecc-128">本作業系統不支援這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-128">The operating system does not support this method.</span>
          </span>
          <span data-ttu-id="eaecc-129">這個方法只有 Windows 2000 (含) 以後版本的作業系統才能夠使用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-129">This method can be used only with the Windows 2000 or later operating systems.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="eaecc-130">
            <paramref name="encryptedData" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-130">
              <paramref name="encryptedData" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="eaecc-131">
            <paramref name="encryptedData" /> 是空的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-131">
              <paramref name="encryptedData" /> is empty.</span>
          </span>
          <span data-ttu-id="eaecc-132">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-132">-or-</span>
          </span>
          <span data-ttu-id="eaecc-133">這個呼叫尚未實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-133">This call was not implemented.</span>
          </span>
          <span data-ttu-id="eaecc-134">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-134">-or-</span>
          </span>
          <span data-ttu-id="eaecc-135">NTSTATUS 包含錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaecc-135">NTSTATUS contains an error.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>