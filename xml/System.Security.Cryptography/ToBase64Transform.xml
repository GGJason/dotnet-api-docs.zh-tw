<Type Name="ToBase64Transform" FullName="System.Security.Cryptography.ToBase64Transform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4eb7f84ad238746809c1ea524c71f06a44843730" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58724579" /></Metadata><TypeSignature Language="C#" Value="public class ToBase64Transform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToBase64Transform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ToBase64Transform" />
  <TypeSignature Language="VB.NET" Value="Public Class ToBase64Transform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToBase64Transform : System::Security::Cryptography::ICryptoTransform" />
  <TypeSignature Language="F#" Value="type ToBase64Transform = class&#xA;    interface ICryptoTransform&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="85b84-101">將 <see cref="T:System.Security.Cryptography.CryptoStream" /> 轉換為 Base 64。</span><span class="sxs-lookup"><span data-stu-id="85b84-101">Converts a <see cref="T:System.Security.Cryptography.CryptoStream" /> to base 64.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b84-102">Base 64 內容轉移編碼代表任意的位元序列的形式為人類無法讀取。</span><span class="sxs-lookup"><span data-stu-id="85b84-102">Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b84-103">下列程式碼範例示範如何使用成員<xref:System.Security.Cryptography.ToBase64Transform>類別。</span><span class="sxs-lookup"><span data-stu-id="85b84-103">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-104">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-104">Cryptographic Services</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToBase64Transform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85b84-105">初始化 <see cref="T:System.Security.Cryptography.ToBase64Transform" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="85b84-105">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-106">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-106">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public virtual bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReuseTransform { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanReuseTransform : bool" Usage="System.Security.Cryptography.ToBase64Transform.CanReuseTransform" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85b84-107">取得值，表示目前的轉換是否可重複使用。</span><span class="sxs-lookup"><span data-stu-id="85b84-107">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value><span data-ttu-id="85b84-108">一定是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="85b84-108">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="85b84-109">下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A>屬性來判斷是否可以重複使用目前的轉換。</span><span class="sxs-lookup"><span data-stu-id="85b84-109">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A> property to determine if the current transform can be reused.</span></span> <span data-ttu-id="85b84-110">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.ToBase64Transform>類別。</span><span class="sxs-lookup"><span data-stu-id="85b84-110">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-111">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-111">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanTransformMultipleBlocks : bool" Usage="System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85b84-112">取得值，指出多個區塊是否可以轉換。</span><span class="sxs-lookup"><span data-stu-id="85b84-112">Gets a value that indicates whether multiple blocks can be transformed.</span></span></summary>
        <value><span data-ttu-id="85b84-113">一定是 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="85b84-113">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b84-114">在目前的實作中，只有一個區塊可讓此屬性一律會是一次轉換`false`。</span><span class="sxs-lookup"><span data-stu-id="85b84-114">In the current implementation, only one block can be transformed at a time, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b84-115">下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A>方法以驗證可以轉換多個區塊。</span><span class="sxs-lookup"><span data-stu-id="85b84-115">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A> method to verify that multiple blocks can be transformed.</span></span> <span data-ttu-id="85b84-116">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.ToBase64Transform>類別。</span><span class="sxs-lookup"><span data-stu-id="85b84-116">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-117">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-117">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="toBase64Transform.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85b84-118">釋放 <see cref="T:System.Security.Cryptography.ToBase64Transform" /> 所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="85b84-118">Releases all resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b84-119">此方式的簡單呼叫<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="85b84-119">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="85b84-120">呼叫`Dispose`可讓所使用的資源<xref:System.Security.Cryptography.ToBase64Transform>重新配置用於其他用途。</span><span class="sxs-lookup"><span data-stu-id="85b84-120">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.ToBase64Transform> to be reallocated for other purposes.</span></span> <span data-ttu-id="85b84-121">如需詳細資訊`Dispose`，請參閱 <<c2> [ 清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="85b84-121">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b84-122">下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.ToBase64Transform.Clear%2A>方法，以釋放未使用的資源目前的轉換。</span><span class="sxs-lookup"><span data-stu-id="85b84-122">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.Clear%2A> method to free up unused resources by the current transform.</span></span> <span data-ttu-id="85b84-123">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.ToBase64Transform>類別。</span><span class="sxs-lookup"><span data-stu-id="85b84-123">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-124">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-124">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="85b84-125">釋放 <see cref="T:System.Security.Cryptography.ToBase64Transform" /> 類別目前的執行個體所使用的全部資源。</span><span class="sxs-lookup"><span data-stu-id="85b84-125">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="toBase64Transform.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85b84-126">釋放 <see cref="T:System.Security.Cryptography.ToBase64Transform" /> 類別目前的執行個體所使用的全部資源。</span><span class="sxs-lookup"><span data-stu-id="85b84-126">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b84-127">`Dispose` 使用完畢時，請呼叫 <xref:System.Security.Cryptography.ToBase64Transform>。</span><span class="sxs-lookup"><span data-stu-id="85b84-127">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="85b84-128">`Dispose` 方法會將 <xref:System.Security.Cryptography.ToBase64Transform> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="85b84-128">The `Dispose` method leaves the <xref:System.Security.Cryptography.ToBase64Transform> in an unusable state.</span></span> <span data-ttu-id="85b84-129">之後呼叫`Dispose`，您必須釋放所有的參考<xref:System.Security.Cryptography.ToBase64Transform>讓記憶體回收行程可以回收記憶體，<xref:System.Security.Cryptography.ToBase64Transform>所佔用。</span><span class="sxs-lookup"><span data-stu-id="85b84-129">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.ToBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ToBase64Transform> was occupying.</span></span>  
  
 <span data-ttu-id="85b84-130">如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="85b84-130">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85b84-131">在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:System.Security.Cryptography.ToBase64Transform>。</span><span class="sxs-lookup"><span data-stu-id="85b84-131">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="85b84-132">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Security.Cryptography.ToBase64Transform> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="85b84-132">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.ToBase64Transform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="toBase64Transform.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="85b84-133"><see langword="true" /> 表示會同時釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="85b84-133"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="85b84-134">釋放 <see cref="T:System.Security.Cryptography.ToBase64Transform" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="85b84-134">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b84-135">這個方法會呼叫公用`Dispose()`方法和`Finalize`方法。</span><span class="sxs-lookup"><span data-stu-id="85b84-135">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="85b84-136">`Dispose()` 叫用受保護`Dispose(Boolean)`disposing 參數設定為方法`true`。</span><span class="sxs-lookup"><span data-stu-id="85b84-136">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="85b84-137">`Finalize` 會透過將處置設定為 `Dispose` 而叫用 `false`。</span><span class="sxs-lookup"><span data-stu-id="85b84-137">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="85b84-138">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Security.Cryptography.ToBase64Transform> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="85b84-138">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ToBase64Transform> references.</span></span> <span data-ttu-id="85b84-139">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="85b84-139">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="85b84-140">
            <see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="85b84-140">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="85b84-141">當覆寫<see langword="Dispose(Boolean)" />，請小心不要參考先前處置呼叫中的物件<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="85b84-141">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="85b84-142">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="85b84-142">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="85b84-143">如需詳細資訊<see langword="Dispose" />並<see langword="Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="85b84-143">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para></block>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-144">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-144">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ToBase64Transform ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="toBase64Transform.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85b84-145">釋放由 <see cref="T:System.Security.Cryptography.ToBase64Transform" /> 使用的 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="85b84-145">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-146">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-146">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBlockSize : int" Usage="System.Security.Cryptography.ToBase64Transform.InputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85b84-147">取得輸入區塊的大小。</span><span class="sxs-lookup"><span data-stu-id="85b84-147">Gets the input block size.</span></span></summary>
        <value><span data-ttu-id="85b84-148">輸入資料區塊的大小，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="85b84-148">The size of the input data blocks in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b84-149">此轉換的輸入的區塊大小是 3 個位元組。</span><span class="sxs-lookup"><span data-stu-id="85b84-149">The input block size for this transformation is 3 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b84-150">下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A>屬性來擷取目前轉換的輸入的區塊大小。</span><span class="sxs-lookup"><span data-stu-id="85b84-150">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A> property to retrieve the input block size of the current transform.</span></span> <span data-ttu-id="85b84-151">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.ToBase64Transform>類別。</span><span class="sxs-lookup"><span data-stu-id="85b84-151">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-152">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-152">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputBlockSize : int" Usage="System.Security.Cryptography.ToBase64Transform.OutputBlockSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85b84-153">取得輸出區塊的大小。</span><span class="sxs-lookup"><span data-stu-id="85b84-153">Gets the output block size.</span></span></summary>
        <value><span data-ttu-id="85b84-154">輸出資料區塊的大小，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="85b84-154">The size of the output data blocks in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b84-155">此轉換的輸出區塊大小是 4 個位元組。</span><span class="sxs-lookup"><span data-stu-id="85b84-155">The output block size for this transformation is 4 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b84-156">下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A>輸出區塊大小的大小建立新的位元組陣列的屬性。</span><span class="sxs-lookup"><span data-stu-id="85b84-156">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A> property to create a new byte array with the size of the output block size.</span></span> <span data-ttu-id="85b84-157">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.ToBase64Transform>類別。</span><span class="sxs-lookup"><span data-stu-id="85b84-157">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-158">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-158">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="85b84-159">釋放由 <see cref="T:System.Security.Cryptography.ToBase64Transform" /> 使用的 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="85b84-159">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="85b84-160">這個方法會呼叫公用`Dispose()`方法和`Finalize`方法。</span><span class="sxs-lookup"><span data-stu-id="85b84-160">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="85b84-161">`Dispose()` 叫用受保護`Dispose(Boolean)`disposing 參數設定為方法`true`。</span><span class="sxs-lookup"><span data-stu-id="85b84-161">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="85b84-162">`Finalize` 會透過將處置設定為 `Dispose` 而叫用 `false`。</span><span class="sxs-lookup"><span data-stu-id="85b84-162">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>

<span data-ttu-id="85b84-163">disposing 參數為 `true` 時，這個方法會釋放此 <xref:System.Security.Cryptography.ToBase64Transform> 參考之任何 Managed 物件掌握的所有資源。</span><span class="sxs-lookup"><span data-stu-id="85b84-163">When the disposing parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ToBase64Transform> references.</span></span> <span data-ttu-id="85b84-164">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="85b84-164">This method invokes the `Dispose()` method of each referenced object.</span></span>

<span data-ttu-id="85b84-165">**繼承者注意事項︰**</span><span class="sxs-lookup"><span data-stu-id="85b84-165">**Notes to Inheritors:**</span></span>

<span data-ttu-id="85b84-166">`Dispose` 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="85b84-166">`Dispose` can be called multiple times by other objects.</span></span> <span data-ttu-id="85b84-167">當覆寫`Dispose(Boolean)`，請小心不要參考先前處置呼叫中的物件`Dispose`。</span><span class="sxs-lookup"><span data-stu-id="85b84-167">When overriding `Dispose(Boolean)`, be careful not to reference objects that have been previously disposed in an earlier call to `Dispose`.</span></span> <span data-ttu-id="85b84-168">如需有關如何實作`Dispose(Boolean)`，請參閱 <<c2> [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="85b84-168">For more information about how to implement `Dispose(Boolean)`, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

<span data-ttu-id="85b84-169">如需詳細資訊`Dispose`和`Finalize`，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)並[覆寫 Finalize 方法](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v%3dvs.100))。</span><span class="sxs-lookup"><span data-stu-id="85b84-169">For more information about `Dispose` and `Finalize`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v%3dvs.100)).</span></span>

]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-170">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-170">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberSignature Language="F#" Value="abstract member TransformBlock : byte[] * int * int * byte[] * int -&gt; int&#xA;override this.TransformBlock : byte[] * int * int * byte[] * int -&gt; int" Usage="toBase64Transform.TransformBlock (inputBuffer, inputOffset, inputCount, outputBuffer, outputOffset)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="85b84-171">要計算成 Base 64 的輸入。</span><span class="sxs-lookup"><span data-stu-id="85b84-171">The input to compute to base 64.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="85b84-172">輸入位元組陣列中的座標，從此處開始使用資料。</span><span class="sxs-lookup"><span data-stu-id="85b84-172">The offset into the input byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="85b84-173">輸入位元組陣列中要用作資料的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="85b84-173">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="85b84-174">要將結果寫入至的輸出。</span><span class="sxs-lookup"><span data-stu-id="85b84-174">The output to which to write the result.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="85b84-175">輸出位元組陣列中的座標，從此處開始寫入資料。</span><span class="sxs-lookup"><span data-stu-id="85b84-175">The offset into the output byte array from which to begin writing data.</span></span></param>
        <summary><span data-ttu-id="85b84-176">將輸入位元組陣列的指定區域轉換為 Base 64，並且將結果複製至輸出位元組陣列的指定區域。</span><span class="sxs-lookup"><span data-stu-id="85b84-176">Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="85b84-177">寫入的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="85b84-177">The number of bytes written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85b84-178"><xref:System.Security.Cryptography.ToBase64Transform>類別是處理輸入的 3 個位元組的區塊，並建立 4 個位元組輸出區塊的區塊演算法。</span><span class="sxs-lookup"><span data-stu-id="85b84-178">The <xref:System.Security.Cryptography.ToBase64Transform> class is a block algorithm that processes input blocks of 3 bytes and creates output blocks of 4 bytes.</span></span>  <span data-ttu-id="85b84-179"><xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A>方法會將 24 位元的輸入的區塊轉換成字元資料的 32 位元。</span><span class="sxs-lookup"><span data-stu-id="85b84-179">The <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method transforms an input block of 24 bits into 32 bits of character data.</span></span>  <span data-ttu-id="85b84-180">您必須維持 4 位元組輸出界限的 3 個位元組輸入的界限，才能符合區塊轉換。</span><span class="sxs-lookup"><span data-stu-id="85b84-180">You must maintain 3 byte input boundaries to 4 byte output boundaries in order to match the block transform.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85b84-181">下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A>方法來逐一查看`inputBytes`轉換`blockSize`。</span><span class="sxs-lookup"><span data-stu-id="85b84-181">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method to iterate through `inputBytes` transforming by `blockSize`.</span></span> <span data-ttu-id="85b84-182">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.ToBase64Transform>類別。</span><span class="sxs-lookup"><span data-stu-id="85b84-182">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="85b84-183">目前的 <see cref="T:System.Security.Cryptography.ToBase64Transform" /> 物件已經處置 (Dispose)。</span><span class="sxs-lookup"><span data-stu-id="85b84-183">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="85b84-184">資料大小無效。</span><span class="sxs-lookup"><span data-stu-id="85b84-184">The data size is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85b84-185"><paramref name="inputBuffer" /> 參數包含無效的位移長度。</span><span class="sxs-lookup"><span data-stu-id="85b84-185">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span></span>  
  
<span data-ttu-id="85b84-186">-或-</span><span class="sxs-lookup"><span data-stu-id="85b84-186">-or-</span></span> 
<span data-ttu-id="85b84-187"><paramref name="inputCount" /> 參數包含無效的值。</span><span class="sxs-lookup"><span data-stu-id="85b84-187">The <paramref name="inputCount" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85b84-188"><paramref name="inputBuffer" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85b84-188">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85b84-189"><paramref name="inputBuffer" /> 參數需要非負數的數字。</span><span class="sxs-lookup"><span data-stu-id="85b84-189">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-190">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-190">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="F#" Value="abstract member TransformFinalBlock : byte[] * int * int -&gt; byte[]&#xA;override this.TransformFinalBlock : byte[] * int * int -&gt; byte[]" Usage="toBase64Transform.TransformFinalBlock (inputBuffer, inputOffset, inputCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="85b84-191">要轉換為 Base 64 的輸入。</span><span class="sxs-lookup"><span data-stu-id="85b84-191">The input to convert to base 64.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="85b84-192">位元組陣列中的座標，從此處開始使用資料。</span><span class="sxs-lookup"><span data-stu-id="85b84-192">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="85b84-193">位元組陣列中要用作資料的位元組數目。</span><span class="sxs-lookup"><span data-stu-id="85b84-193">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="85b84-194">將指定位元組陣列的指定區域轉換為 Base 64。</span><span class="sxs-lookup"><span data-stu-id="85b84-194">Converts the specified region of the specified byte array to base 64.</span></span></summary>
        <returns><span data-ttu-id="85b84-195">所計算的 Base 64 轉換。</span><span class="sxs-lookup"><span data-stu-id="85b84-195">The computed base 64 conversion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="85b84-196">下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A>來轉換最終資料區塊的方法。</span><span class="sxs-lookup"><span data-stu-id="85b84-196">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A> method to transform the final block of data.</span></span> <span data-ttu-id="85b84-197">此程式碼範例是針對提供之較大範例的一部分<xref:System.Security.Cryptography.ToBase64Transform>類別。</span><span class="sxs-lookup"><span data-stu-id="85b84-197">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="85b84-198">目前的 <see cref="T:System.Security.Cryptography.ToBase64Transform" /> 物件已經處置 (Dispose)。</span><span class="sxs-lookup"><span data-stu-id="85b84-198">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="85b84-199"><paramref name="inputBuffer" /> 參數包含無效的位移長度。</span><span class="sxs-lookup"><span data-stu-id="85b84-199">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span></span>  
  
<span data-ttu-id="85b84-200">-或-</span><span class="sxs-lookup"><span data-stu-id="85b84-200">-or-</span></span> 
<span data-ttu-id="85b84-201"><paramref name="inputCount" /> 參數包含無效的值。</span><span class="sxs-lookup"><span data-stu-id="85b84-201">The <paramref name="inputCount" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="85b84-202"><paramref name="inputBuffer" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="85b84-202">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="85b84-203"><paramref name="inputBuffer" /> 參數需要非負數的數字。</span><span class="sxs-lookup"><span data-stu-id="85b84-203">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span></span></exception>
        <related type="Article" href="~/docs/standard/security/cryptographic-services.md"><span data-ttu-id="85b84-204">密碼編譯服務</span><span class="sxs-lookup"><span data-stu-id="85b84-204">Cryptographic Services</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>