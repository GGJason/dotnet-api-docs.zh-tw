<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HMACMD5.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac52b4d9728bce0d03a7c7adb77236650b5857a603d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b4d9728bce0d03a7c7adb77236650b5857a603d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HMACMD5">
          <source>Computes a Hash-based Message Authentication Code (HMAC) by using the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> hash function.</source>
          <target state="translated">使用 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.MD5" /&gt;</ph> 雜湊函式，計算雜湊架構訊息驗證碼 (Hash-based Message Authentication Code，HMAC)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> is a type of keyed hash algorithm that is constructed from the Message Digest Algorithm 5 (MD5) hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> 是一種金鑰雜湊演算法，從訊息摘要演算法 5 (MD5) 雜湊函式建構用做為雜湊式訊息驗證碼 (HMAC)。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">HMAC 程序會與訊息資料混合秘密金鑰、 雜湊的雜湊函式的結果、 再次混合該雜湊值與秘密金鑰，，然後套用第二次雜湊函式的資料。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source>The output hash is 128 bits in length.</source>
          <target state="translated">輸出雜湊是 128 位元長度。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source>An HMAC can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</source>
          <target state="translated">HMAC 可用來判斷透過不安全的通道傳送的訊息是否遭竄改的寄件者和收件者共用秘密金鑰。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source>The sender computes the hash value for the original data and sends both the original data and hash value as a single message.</source>
          <target state="translated">寄件者會計算原始資料的雜湊值，並將原始資料和雜湊值傳送為單一訊息。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source>The receiver recalculates the hash value on the received message and checks that the computed HMAC matches the transmitted HMAC.</source>
          <target state="translated">收件者所接收訊息的雜湊值將會重新計算，並檢查計算的 HMAC 符合傳輸的 HMAC。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source>Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</source>
          <target state="translated">資料或雜湊值的任何變更會導致不相符，因為知識祕密金鑰，才能變更訊息及重新產生正確的雜湊值。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source>Therefore, if the original and computed hash values match, the message is authenticated.</source>
          <target state="translated">因此，如果原始和計算的雜湊值相符，驗證訊息。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source>MD5 is a cryptographic hash algorithm developed at RSA Laboratories.</source>
          <target state="translated">MD5 是在 RSA Laboratories 開發的密碼編譯雜湊演算法。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> accepts keys of any size, and produces a hash sequence that is 128 bits in length.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> 接受的任何大小的索引鍵，並產生的雜湊序列會是 128 位元長度。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.HMACMD5">
          <source>The following example shows how to sign a file by using the <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> object and then how to verify the file.</source>
          <target state="translated">下列範例示範如何使用簽署檔案<ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph>物件，然後確認該檔案。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.HMACMD5">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACMD5" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACMD5" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACMD5.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACMD5" /&gt;</ph> class by using a randomly generated key.</source>
          <target state="translated">以隨機產生的金鑰初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACMD5" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACMD5.#ctor">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> is a type of keyed hash algorithm that is constructed from the MD5 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> 是一種金鑰雜湊演算法 MD5 雜湊函式建構，並使用做為雜湊式訊息驗證碼 (HMAC)。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACMD5.#ctor">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">HMAC 程序會與訊息資料混合秘密金鑰、 雜湊的雜湊函式的結果、 再次混合該雜湊值與秘密金鑰，，然後套用第二次雜湊函式的資料。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACMD5.#ctor">
          <source>The output hash is 128 bits in length.</source>
          <target state="translated">輸出雜湊是 128 位元長度。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACMD5.#ctor">
          <source>This constructor uses a 64-byte, randomly generated key.</source>
          <target state="translated">這個建構函式會使用 64 位元隨機產生的金鑰。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
          <source>The secret key for <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACMD5" /&gt;</ph> encryption.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACMD5" /&gt;</ph> 加密的秘密金鑰。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
          <source>The key can be any length, but if it is more than 64 bytes long it will be hashed (using SHA-1) to derive a 64-byte key.</source>
          <target state="translated">金鑰可以是任何長度，但其長度若超過 64 個位元組，便會使用 SHA-1 進行雜湊，以衍生 64 位元組金鑰。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
          <source>Therefore, the recommended size of the secret key is 64 bytes.</source>
          <target state="translated">因此，秘密金鑰的建議大小為 64 個位元組。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACMD5" /&gt;</ph> class by using the specified key.</source>
          <target state="translated">使用指定的金鑰，初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACMD5" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> is a type of keyed hash algorithm that is constructed from the MD5 hash function and used as a Hash-based Message Authentication Code (HMAC).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> 是一種金鑰雜湊演算法 MD5 雜湊函式建構，並使用做為雜湊式訊息驗證碼 (HMAC)。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
          <source>The HMAC process mixes a secret key with the message data, hashes the result with the hash function, mixes that hash value with the secret key again, and then applies the hash function a second time.</source>
          <target state="translated">HMAC 程序會與訊息資料混合秘密金鑰、 雜湊的雜湊函式的結果、 再次混合該雜湊值與秘密金鑰，，然後套用第二次雜湊函式的資料。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
          <source>The output hash is 128 bits in length.</source>
          <target state="translated">輸出雜湊是 128 位元長度。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
          <source>This constructor uses a key you provide to create the <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> object.</source>
          <target state="translated">這個建構函式會使用您提供給建立的金鑰<ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
          <source>For an example of how to use this constructor, see the <ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph> class.</source>
          <target state="translated">如需如何使用這個建構函式的範例，請參閱<ph id="ph1">&lt;xref:System.Security.Cryptography.HMACMD5&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="key" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="key" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>