<Type Name="CspParameters" FullName="System.Security.Cryptography.CspParameters">
  <TypeSignature Language="C#" Value="public sealed class CspParameters" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CspParameters extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CspParameters" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CspParameters" />
  <TypeSignature Language="C++ CLI" Value="public ref class CspParameters sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="0cc23-101">包含傳遞至執行密碼編譯計算之密碼編譯服務提供者 (CSP) 的參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-101">Contains parameters that are passed to the cryptographic service provider (CSP) that performs cryptographic computations.</span></span> <span data-ttu-id="0cc23-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="0cc23-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-103"><xref:System.Security.Cryptography.CspParameters>類別代表您可以傳遞給受管理的密碼編譯類別，在內部使用 Microsoft 密碼編譯服務提供者 (Csp) 從 unmanaged Microsoft 密碼編譯 API (CAPI) 的參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-103">The <xref:System.Security.Cryptography.CspParameters> class represents parameters that you can pass to managed cryptography classes that internally use Microsoft Cryptographic Service Providers (CSPs) from the unmanaged Microsoft Cryptography API (CAPI).</span></span> <span data-ttu-id="0cc23-104">使用名稱結尾"CryptoServiceProvider 」 的類別是 managed 程式碼包裝函式，以相對應的 CSP。</span><span class="sxs-lookup"><span data-stu-id="0cc23-104">Classes with names ending in "CryptoServiceProvider" are managed code wrappers for the corresponding CSP.</span></span>  
  
 <span data-ttu-id="0cc23-105">使用<xref:System.Security.Cryptography.CspParameters>類別來執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="0cc23-105">Use the <xref:System.Security.Cryptography.CspParameters> class to do the following:</span></span>  
  
-   <span data-ttu-id="0cc23-106">藉由傳遞提供者類型，若要指定特定 CSP<xref:System.Security.Cryptography.CspParameters.ProviderType>或<xref:System.Security.Cryptography.CspParameters.ProviderName>屬性。</span><span class="sxs-lookup"><span data-stu-id="0cc23-106">Specify a particular CSP by passing the provider type to the <xref:System.Security.Cryptography.CspParameters.ProviderType> or <xref:System.Security.Cryptography.CspParameters.ProviderName> property.</span></span>  <span data-ttu-id="0cc23-107">您也可以指定使用的建構函式多載的 CSP。</span><span class="sxs-lookup"><span data-stu-id="0cc23-107">You can also specify a CSP using an overload of the constructor.</span></span>  
  
-   <span data-ttu-id="0cc23-108">建立可以在其中儲存密碼編譯金鑰的金鑰容器。</span><span class="sxs-lookup"><span data-stu-id="0cc23-108">Create a key container where you can store cryptographic keys.</span></span>  <span data-ttu-id="0cc23-109">金鑰容器會提供最安全的方式保存密碼編譯金鑰，並將其保密來自惡意的第三方。</span><span class="sxs-lookup"><span data-stu-id="0cc23-109">Key containers provide the most secure way to persist cryptographic keys and keep them secret from malicious third parties.</span></span>  <span data-ttu-id="0cc23-110">如需建立金鑰容器的詳細資訊，請參閱[How to： 在金鑰容器儲存非對稱金鑰](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc23-110">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).</span></span>  
  
-   <span data-ttu-id="0cc23-111">指定是否要建立非對稱簽章金鑰或非對稱交換金鑰使用<xref:System.Security.Cryptography.CspParameters.KeyNumber>屬性。</span><span class="sxs-lookup"><span data-stu-id="0cc23-111">Specify whether to create an asymmetric signature key or an asymmetric exchange key using the <xref:System.Security.Cryptography.CspParameters.KeyNumber> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cc23-112">下列程式碼範例會建立金鑰容器，使用<xref:System.Security.Cryptography.CspParameters>類別，並將金鑰儲存在容器中。</span><span class="sxs-lookup"><span data-stu-id="0cc23-112">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 <span data-ttu-id="0cc23-113">下列程式碼範例使用<xref:System.Security.Cryptography.CspParameters>類別，以選取智慧卡密碼編譯服務提供者。</span><span class="sxs-lookup"><span data-stu-id="0cc23-113">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="0cc23-114">然後簽署並驗證使用智慧卡的資料。</span><span class="sxs-lookup"><span data-stu-id="0cc23-114">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0cc23-115">初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0cc23-115">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0cc23-116">初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0cc23-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-117">這種形式的<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>初始化<xref:System.Security.Cryptography.CspParameters.ProviderType>欄位的值`24`，以指定 PROV_RSA_AES 提供者。</span><span class="sxs-lookup"><span data-stu-id="0cc23-117">This form of <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> initializes the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to a value of `24`, which specifies the PROV_RSA_AES provider.</span></span>  <span data-ttu-id="0cc23-118">此預設提供者是與相容<xref:System.Security.Cryptography.Aes>演算法。</span><span class="sxs-lookup"><span data-stu-id="0cc23-118">This default provider is compatible with the <xref:System.Security.Cryptography.Aes> algorithm.</span></span>  
  
 <span data-ttu-id="0cc23-119">如需其他提供者類型的資訊，請參閱<xref:System.Security.Cryptography.CspParameters.ProviderType>欄位。</span><span class="sxs-lookup"><span data-stu-id="0cc23-119">For information about other provider types, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cc23-120">下列程式碼範例會建立金鑰容器，使用<xref:System.Security.Cryptography.CspParameters>類別，並將金鑰儲存在容器中。</span><span class="sxs-lookup"><span data-stu-id="0cc23-120">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="0cc23-121">指定要建立的提供者類型之提供者類型程式碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-121">A provider type code that specifies the kind of provider to create.</span></span></param>
        <summary><span data-ttu-id="0cc23-122">使用指定的提供者類型碼，來初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0cc23-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-123">使用<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>建構函式指定提供者類型所傳遞的數值，表示該提供者。</span><span class="sxs-lookup"><span data-stu-id="0cc23-123">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="0cc23-124">WinCrypt.h 標頭檔中定義之數字的值，表示預設提供者類型：</span><span class="sxs-lookup"><span data-stu-id="0cc23-124">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="0cc23-125">若要指定與相容的提供者<xref:System.Security.Cryptography.RSA>演算法，傳遞的值具有`1`至`dwTypeIn`參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-125">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="0cc23-126">若要指定與相容的提供者<xref:System.Security.Cryptography.DSA>演算法，傳遞的值具有`13`至`dwTypeIn`參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-126">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="0cc23-127">其他提供者類型值的詳細資訊，請參閱<xref:System.Security.Cryptography.CspParameters.ProviderType>欄位。</span><span class="sxs-lookup"><span data-stu-id="0cc23-127">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="0cc23-128">如需有關預設提供者類型和行為的詳細資訊，請參閱 MSDN library 中的 Microsoft 密碼編譯 API (CAPI) 文件。</span><span class="sxs-lookup"><span data-stu-id="0cc23-128">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cc23-129">下列程式碼範例會建立金鑰容器，使用<xref:System.Security.Cryptography.CspParameters>類別，並將金鑰儲存在容器中。</span><span class="sxs-lookup"><span data-stu-id="0cc23-129">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="0cc23-130">指定要建立的提供者類型之提供者類型程式碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-130">A provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="strProviderNameIn"><span data-ttu-id="0cc23-131">提供者名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-131">A provider name.</span></span></param>
        <summary><span data-ttu-id="0cc23-132">使用指定的提供者類型程式碼和名稱，來初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0cc23-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-133">使用<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>建構函式來指定提供者類型和名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-133">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type and name.</span></span>  
  
 <span data-ttu-id="0cc23-134">藉由傳遞數值，表示所需的提供者型別指定提供者類型。</span><span class="sxs-lookup"><span data-stu-id="0cc23-134">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="0cc23-135">WinCrypt.h 標頭檔中定義之數字的值，表示預設提供者類型：</span><span class="sxs-lookup"><span data-stu-id="0cc23-135">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="0cc23-136">若要指定與相容的提供者<xref:System.Security.Cryptography.RSA>演算法，傳遞的值具有`1`至`dwTypeIn`參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-136">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="0cc23-137">若要指定與相容的提供者<xref:System.Security.Cryptography.DSA>演算法，傳遞的值具有`13`至`dwTypeIn`參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-137">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="0cc23-138">其他提供者類型值的詳細資訊，請參閱<xref:System.Security.Cryptography.CspParameters.ProviderType>欄位。</span><span class="sxs-lookup"><span data-stu-id="0cc23-138">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="0cc23-139">如需有關預設提供者類型和行為的詳細資訊，請參閱 MSDN library 中的 Microsoft 密碼編譯 API (CAPI) 文件。</span><span class="sxs-lookup"><span data-stu-id="0cc23-139">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cc23-140">下列程式碼範例使用<xref:System.Security.Cryptography.CspParameters>類別，以選取智慧卡密碼編譯服務提供者。</span><span class="sxs-lookup"><span data-stu-id="0cc23-140">The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.</span></span>  <span data-ttu-id="0cc23-141">然後簽署並驗證使用智慧卡的資料。</span><span class="sxs-lookup"><span data-stu-id="0cc23-141">It then signs and verifies data using the smart card.</span></span>  
  
 [!code-cpp[Cryptography.SmartCardCSP#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CPP/Cryptography.SmartCardCSP.cpp#1)]
 [!code-csharp[Cryptography.SmartCardCSP#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.SmartCardCSP/CS/example.cs#1)]
 [!code-vb[Cryptography.SmartCardCSP#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.SmartCardCSP/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwTypeIn, string strProviderNameIn, string strContainerNameIn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwTypeIn As Integer, strProviderNameIn As String, strContainerNameIn As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int dwTypeIn, System::String ^ strProviderNameIn, System::String ^ strContainerNameIn);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwTypeIn" Type="System.Int32" />
        <Parameter Name="strProviderNameIn" Type="System.String" />
        <Parameter Name="strContainerNameIn" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dwTypeIn"><span data-ttu-id="0cc23-142">指定要建立之提供者類型的提供者類型代碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-142">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="strProviderNameIn"><span data-ttu-id="0cc23-143">提供者名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-143">A provider name.</span></span></param>
        <param name="strContainerNameIn"><span data-ttu-id="0cc23-144">容器名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-144">A container name.</span></span></param>
        <summary><span data-ttu-id="0cc23-145">使用指定的提供者類型程式碼和名稱，以及指定的容器名稱，初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0cc23-145">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class with the specified provider type code and name, and the specified container name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-146">使用<xref:System.Security.Cryptography.CspParameters.%23ctor%2A>建構函式來指定提供者類型、 提供者名稱，以及容器名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-146">Use the <xref:System.Security.Cryptography.CspParameters.%23ctor%2A> constructor to specify a provider type, a provider name, and a container name.</span></span>  
  
 <span data-ttu-id="0cc23-147">您可以擷取該容器內的索引鍵使用的容器名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-147">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="0cc23-148">藉由傳遞數值，表示所需的提供者型別指定提供者類型。</span><span class="sxs-lookup"><span data-stu-id="0cc23-148">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="0cc23-149">WinCrypt.h 標頭檔中定義之數字的值，表示預設提供者類型：</span><span class="sxs-lookup"><span data-stu-id="0cc23-149">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="0cc23-150">若要指定與相容的提供者<xref:System.Security.Cryptography.RSA>演算法，傳遞的值具有`1`至`dwTypeIn`參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-150">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="0cc23-151">若要指定與相容的提供者<xref:System.Security.Cryptography.DSA>演算法，傳遞的值具有`13`至`dwTypeIn`參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-151">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="0cc23-152">其他提供者類型值的詳細資訊，請參閱<xref:System.Security.Cryptography.CspParameters.ProviderType>欄位。</span><span class="sxs-lookup"><span data-stu-id="0cc23-152">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="0cc23-153">如需有關預設提供者類型和行為的詳細資訊，請參閱 MSDN library 中的 Microsoft 密碼編譯 API (CAPI) 文件。</span><span class="sxs-lookup"><span data-stu-id="0cc23-153">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, native int parentWindowHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, IntPtr parentWindowHandle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="parentWindowHandle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="providerType"><span data-ttu-id="0cc23-154">指定要建立之提供者類型的提供者類型代碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-154">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="providerName"><span data-ttu-id="0cc23-155">提供者名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-155">A provider name.</span></span></param>
        <param name="keyContainerName"><span data-ttu-id="0cc23-156">容器名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-156">A container name.</span></span></param>
        <param name="cryptoKeySecurity"><span data-ttu-id="0cc23-157">物件，代表容器的存取權限和稽核規則。</span><span class="sxs-lookup"><span data-stu-id="0cc23-157">An object that represents access rights and audit rules for the container.</span></span></param>
        <param name="parentWindowHandle"><span data-ttu-id="0cc23-158">智慧卡密碼對話方塊父視窗的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-158">A handle to the parent window for a smart card password dialog.</span></span></param>
        <summary><span data-ttu-id="0cc23-159">使用提供者類型、提供者名稱、容器名稱、存取資訊和 Unmanaged 智慧卡密碼對話方塊的控制代碼，初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0cc23-159">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a handle to an unmanaged smart card password dialog.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-160">您可以擷取該容器內的索引鍵使用的容器名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-160">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="0cc23-161">藉由傳遞數值，表示所需的提供者型別指定提供者類型。</span><span class="sxs-lookup"><span data-stu-id="0cc23-161">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="0cc23-162">WinCrypt.h 標頭檔中定義之數字的值，表示預設提供者類型：</span><span class="sxs-lookup"><span data-stu-id="0cc23-162">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="0cc23-163">若要指定與相容的提供者<xref:System.Security.Cryptography.RSA>演算法，傳遞的值具有`1`至`dwTypeIn`參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-163">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="0cc23-164">若要指定與相容的提供者<xref:System.Security.Cryptography.DSA>演算法，傳遞的值具有`13`至`dwTypeIn`參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-164">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="0cc23-165">其他提供者類型值的詳細資訊，請參閱<xref:System.Security.Cryptography.CspParameters.ProviderType>欄位。</span><span class="sxs-lookup"><span data-stu-id="0cc23-165">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="0cc23-166">如需有關預設提供者類型和行為的詳細資訊，請參閱 MSDN library 中的 Microsoft 密碼編譯 API (CAPI) 文件。</span><span class="sxs-lookup"><span data-stu-id="0cc23-166">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 providerType, string providerName, string keyContainerName, class System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, class System.Security.SecureString keyPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CspParameters(int providerType, System::String ^ providerName, System::String ^ keyContainerName, System::Security::AccessControl::CryptoKeySecurity ^ cryptoKeySecurity, System::Security::SecureString ^ keyPassword);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerType" Type="System.Int32" />
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="keyContainerName" Type="System.String" />
        <Parameter Name="cryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
        <Parameter Name="keyPassword" Type="System.Security.SecureString" />
      </Parameters>
      <Docs>
        <param name="providerType"><span data-ttu-id="0cc23-167">指定要建立之提供者類型的提供者類型代碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-167">The provider type code that specifies the kind of provider to create.</span></span></param>
        <param name="providerName"><span data-ttu-id="0cc23-168">提供者名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-168">A provider name.</span></span></param>
        <param name="keyContainerName"><span data-ttu-id="0cc23-169">容器名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-169">A container name.</span></span></param>
        <param name="cryptoKeySecurity"><span data-ttu-id="0cc23-170">物件，代表容器的存取權限和稽核規則。</span><span class="sxs-lookup"><span data-stu-id="0cc23-170">An object that represents access rights and audit rules for a container.</span></span></param>
        <param name="keyPassword"><span data-ttu-id="0cc23-171">與智慧卡金鑰關聯的密碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-171">A password associated with a smart card key.</span></span></param>
        <summary><span data-ttu-id="0cc23-172">使用提供者類型、提供者名稱、容器名稱、存取資訊和與智慧卡金鑰關聯的密碼，初始化 <see cref="T:System.Security.Cryptography.CspParameters" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="0cc23-172">Initializes a new instance of the <see cref="T:System.Security.Cryptography.CspParameters" /> class using a provider type, a provider name, a container name, access information, and a password associated with a smart card key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-173">您可以擷取該容器內的索引鍵使用的容器名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-173">You can use the container name to retrieve a key within that container.</span></span>  
  
 <span data-ttu-id="0cc23-174">藉由傳遞數值，表示所需的提供者型別指定提供者類型。</span><span class="sxs-lookup"><span data-stu-id="0cc23-174">Specify a provider type by passing a numeric value that represents the desired provider type.</span></span>  <span data-ttu-id="0cc23-175">WinCrypt.h 標頭檔中定義之數字的值，表示預設提供者類型：</span><span class="sxs-lookup"><span data-stu-id="0cc23-175">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="0cc23-176">若要指定與相容的提供者<xref:System.Security.Cryptography.RSA>演算法，傳遞的值具有`1`至`dwTypeIn`參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-176">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> algorithm, pass a value of `1` to the `dwTypeIn` parameter.</span></span>  
  
-   <span data-ttu-id="0cc23-177">若要指定與相容的提供者<xref:System.Security.Cryptography.DSA>演算法，傳遞的值具有`13`至`dwTypeIn`參數。</span><span class="sxs-lookup"><span data-stu-id="0cc23-177">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> algorithm, pass a value of `13` to the `dwTypeIn` parameter.</span></span>  
  
 <span data-ttu-id="0cc23-178">其他提供者類型值的詳細資訊，請參閱<xref:System.Security.Cryptography.CspParameters.ProviderType>欄位。</span><span class="sxs-lookup"><span data-stu-id="0cc23-178">For information about other provider type values, see the <xref:System.Security.Cryptography.CspParameters.ProviderType> field.</span></span>  <span data-ttu-id="0cc23-179">如需有關預設提供者類型和行為的詳細資訊，請參閱 MSDN library 中的 Microsoft 密碼編譯 API (CAPI) 文件。</span><span class="sxs-lookup"><span data-stu-id="0cc23-179">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoKeySecurity">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.CryptoKeySecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property CryptoKeySecurity As CryptoKeySecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::CryptoKeySecurity ^ CryptoKeySecurity { System::Security::AccessControl::CryptoKeySecurity ^ get(); void set(System::Security::AccessControl::CryptoKeySecurity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.CryptoKeySecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cc23-180">取得或設定 <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 物件，表示容器的存取權限和稽核規則。</span><span class="sxs-lookup"><span data-stu-id="0cc23-180">Gets or sets a <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></summary>
        <value><span data-ttu-id="0cc23-181"><see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> 物件，表示容器的存取權限和稽核規則。</span><span class="sxs-lookup"><span data-stu-id="0cc23-181">A <see cref="T:System.Security.AccessControl.CryptoKeySecurity" /> object that represents access rights and audit rules for a container.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-182">使用<xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A>屬性來指定<xref:System.Security.AccessControl.CryptoKeySecurity>物件管理建立的判別存取控制清單 (DACL) 和系統存取控制清單 (SACL) 容器。</span><span class="sxs-lookup"><span data-stu-id="0cc23-182">Use the <xref:System.Security.Cryptography.CspParameters.CryptoKeySecurity%2A> property to specify a <xref:System.Security.AccessControl.CryptoKeySecurity> object that manages the creation of discretionary access control lists (DACLS) and system access control lists (SACLS) for a container.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspProviderFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CspProviderFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As CspProviderFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspProviderFlags Flags { System::Security::Cryptography::CspProviderFlags get(); void set(System::Security::Cryptography::CspProviderFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspProviderFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cc23-183">代表 <see cref="T:System.Security.Cryptography.CspParameters" /> 的旗標，這些旗標修改密碼編譯服務提供者 (CSP) 的行為。</span><span class="sxs-lookup"><span data-stu-id="0cc23-183">Represents the flags for <see cref="T:System.Security.Cryptography.CspParameters" /> that modify the behavior of the cryptographic service provider (CSP).</span></span></summary>
        <value><span data-ttu-id="0cc23-184">列舉值，或列舉值的位元組合。</span><span class="sxs-lookup"><span data-stu-id="0cc23-184">An enumeration value, or a bitwise combination of enumeration values.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0cc23-185">值不是有效的列舉值。</span><span class="sxs-lookup"><span data-stu-id="0cc23-185">Value is not a valid enumeration value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeyContainerName">
      <MemberSignature Language="C#" Value="public string KeyContainerName;" />
      <MemberSignature Language="ILAsm" Value=".field public string KeyContainerName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyContainerName" />
      <MemberSignature Language="VB.NET" Value="Public KeyContainerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ KeyContainerName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cc23-186">表示 <see cref="T:System.Security.Cryptography.CspParameters" /> 的金鑰容器名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-186">Represents the key container name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-187">使用<xref:System.Security.Cryptography.CspParameters.KeyContainerName>欄位來指定您的金鑰容器的名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-187">Use the <xref:System.Security.Cryptography.CspParameters.KeyContainerName> field to specify a name for your key container.</span></span>  <span data-ttu-id="0cc23-188">您可以擷取該容器內的持續性索引鍵使用的容器名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-188">You can use the container name to retrieve the persisted key within that container.</span></span>  
  
 <span data-ttu-id="0cc23-189">如需建立金鑰容器的詳細資訊，請參閱[How to： 在金鑰容器儲存非對稱金鑰](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md)。</span><span class="sxs-lookup"><span data-stu-id="0cc23-189">For more information about creating key containers, see [How to: Store Asymmetric Keys in a Key Container](~/docs/standard/security/how-to-store-asymmetric-keys-in-a-key-container.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cc23-190">下列程式碼範例會建立金鑰容器，使用<xref:System.Security.Cryptography.CspParameters>類別，並將金鑰儲存在容器中。</span><span class="sxs-lookup"><span data-stu-id="0cc23-190">The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.</span></span>  
  
 [!code-cpp[capikey#1](~/samples/snippets/cpp/VS_Snippets_CLR/capikey/CPP/capikey.cpp#1)]
 [!code-csharp[capikey#1](~/samples/snippets/csharp/VS_Snippets_CLR/capikey/CS/capikey.cs#1)]
 [!code-vb[capikey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/capikey/VB/capikey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyNumber">
      <MemberSignature Language="C#" Value="public int KeyNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 KeyNumber" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.KeyNumber" />
      <MemberSignature Language="VB.NET" Value="Public KeyNumber As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int KeyNumber;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cc23-191">指定將非對稱金鑰建立為簽章金鑰或交換金鑰。</span><span class="sxs-lookup"><span data-stu-id="0cc23-191">Specifies whether an asymmetric key is created as a signature key or an exchange key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-192"><xref:System.Security.Cryptography.CspParameters.KeyNumber>欄位初始化<xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>屬性，當您初始化<xref:System.Security.Cryptography.CspKeyContainerInfo>物件<xref:System.Security.Cryptography.CspParameters>物件。</span><span class="sxs-lookup"><span data-stu-id="0cc23-192">The <xref:System.Security.Cryptography.CspParameters.KeyNumber> field initializes the <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A> property when you initialize a <xref:System.Security.Cryptography.CspKeyContainerInfo> object with a <xref:System.Security.Cryptography.CspParameters> object.</span></span>  
  
 <span data-ttu-id="0cc23-193">交換金鑰是用來加密工作階段金鑰，使它們可以安全地儲存和與其他使用者交換非對稱金鑰組。</span><span class="sxs-lookup"><span data-stu-id="0cc23-193">An exchange key is an asymmetric key pair used to encrypt session keys so that they can be safely stored and exchanged with other users.</span></span>  <span data-ttu-id="0cc23-194">您可以使用<xref:System.Security.Cryptography.KeyNumber.Exchange>值 (`1`) 來指定交換金鑰。</span><span class="sxs-lookup"><span data-stu-id="0cc23-194">You can use the <xref:System.Security.Cryptography.KeyNumber.Exchange> value (`1`) to specify an exchange key.</span></span>  <span data-ttu-id="0cc23-195">這個值會對應到`AT_KEYEXCHANGE`用在 unmanaged Microsoft 密碼編譯 API (CAPI) 的值。</span><span class="sxs-lookup"><span data-stu-id="0cc23-195">This value corresponds to the `AT_KEYEXCHANGE` value used in the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 <span data-ttu-id="0cc23-196">簽章金鑰是用來驗證數位簽章的訊息或檔案的非對稱金鑰組。</span><span class="sxs-lookup"><span data-stu-id="0cc23-196">A signature key is an asymmetric key pair used for authenticating digitally signed messages or files.</span></span>  <span data-ttu-id="0cc23-197">您可以使用<xref:System.Security.Cryptography.KeyNumber.Signature>值 (`2`) 來指定簽章金鑰。</span><span class="sxs-lookup"><span data-stu-id="0cc23-197">You can use the <xref:System.Security.Cryptography.KeyNumber.Signature> value (`2`) to specify a signature key.</span></span>  <span data-ttu-id="0cc23-198">這個值會對應到`AT_SIGNATURE`CAPI 中使用的值。</span><span class="sxs-lookup"><span data-stu-id="0cc23-198">This value corresponds to the `AT_SIGNATURE` value used in CAPI.</span></span>  
  
 <span data-ttu-id="0cc23-199">根據預設，<xref:System.Security.Cryptography.CspParameters.KeyNumber>欄位指定交換金鑰。</span><span class="sxs-lookup"><span data-stu-id="0cc23-199">By default, the <xref:System.Security.Cryptography.CspParameters.KeyNumber> field specifies an exchange key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cc23-200">下列程式碼範例示範如何使用<xref:System.Security.Cryptography.KeyNumber>列舉來指定索引鍵型別<xref:System.Security.Cryptography.RSACryptoServiceProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="0cc23-200">The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.</span></span>  
  
 [!code-cpp[Cryptography.KeyNumber#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.KeyNumber/cpp/sample.cpp#1)]
 [!code-csharp[Cryptography.KeyNumber#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.KeyNumber/CS/sample.cs#1)]
 [!code-vb[Cryptography.KeyNumber#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.KeyNumber/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPassword">
      <MemberSignature Language="C#" Value="public System.Security.SecureString KeyPassword { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.SecureString KeyPassword" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.KeyPassword" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPassword As SecureString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::SecureString ^ KeyPassword { System::Security::SecureString ^ get(); void set(System::Security::SecureString ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecureString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cc23-201">取得或設定與智慧卡金鑰關聯的密碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-201">Gets or sets a password associated with a smart card key.</span></span></summary>
        <value><span data-ttu-id="0cc23-202">與智慧卡金鑰關聯的密碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-202">A password associated with a smart card key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-203">使用<xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>屬性提供智慧卡金鑰的密碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-203">Use the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property to supply a password for a smart card key.</span></span>  <span data-ttu-id="0cc23-204">當您指定密碼，使用這個屬性時，不會向使用者提供密碼 對話方塊。</span><span class="sxs-lookup"><span data-stu-id="0cc23-204">When you specify a password using this property, a password dialog box will not be presented to the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentWindowHandle">
      <MemberSignature Language="C#" Value="public IntPtr ParentWindowHandle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ParentWindowHandle" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CspParameters.ParentWindowHandle" />
      <MemberSignature Language="VB.NET" Value="Public Property ParentWindowHandle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr ParentWindowHandle { IntPtr get(); void set(IntPtr value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cc23-205">取得或設定智慧卡密碼對話方塊之 Unmanaged 父視窗的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-205">Gets or sets a handle to the unmanaged parent window for a smart card password dialog box.</span></span></summary>
        <value><span data-ttu-id="0cc23-206">智慧卡密碼對話方塊父視窗的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-206">A handle to the parent window for a smart card password dialog box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-207">使用<xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A>屬性來指定智慧卡密碼對話方塊中的未受管理的父視窗的控制代碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-207">Use the <xref:System.Security.Cryptography.CspParameters.ParentWindowHandle%2A> property to specify a handle to the unmanaged parent window for a smart card password dialog box.</span></span>  <span data-ttu-id="0cc23-208">當您指定使用這個屬性的控制代碼時，智慧卡密碼 對話方塊會呈現給使用者。</span><span class="sxs-lookup"><span data-stu-id="0cc23-208">When you specify a handle using this property, a smart card password dialog box will be presented to the user.</span></span>  
  
 <span data-ttu-id="0cc23-209">藉由明確地使用指定密碼中呈現智慧卡密碼對話方塊中，您可以避免<xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0cc23-209">You can avoid presenting a smart card password dialog box by explicitly specifying a password by using the <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName;" />
      <MemberSignature Language="ILAsm" Value=".field public string ProviderName" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ProviderName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ProviderName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cc23-210">表示 <see cref="T:System.Security.Cryptography.CspParameters" /> 的提供者名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-210">Represents the provider name for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-211">請參閱 MSDN library，以取得詳細資料中的 Microsoft 密碼編譯 API (CAPI) 文件的提供者名稱。</span><span class="sxs-lookup"><span data-stu-id="0cc23-211">See the Microsoft Cryptography API (CAPI) documentation in the MSDN library for details on provider names.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderType">
      <MemberSignature Language="C#" Value="public int ProviderType;" />
      <MemberSignature Language="ILAsm" Value=".field public int32 ProviderType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.CspParameters.ProviderType" />
      <MemberSignature Language="VB.NET" Value="Public ProviderType As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: int ProviderType;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0cc23-212">表示 <see cref="T:System.Security.Cryptography.CspParameters" /> 的提供者類型代碼。</span><span class="sxs-lookup"><span data-stu-id="0cc23-212">Represents the provider type code for <see cref="T:System.Security.Cryptography.CspParameters" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cc23-213">使用<xref:System.Security.Cryptography.CspParameters.ProviderType>欄位來指定藉由傳遞數值，表示該提供者的提供者類型。</span><span class="sxs-lookup"><span data-stu-id="0cc23-213">Use the <xref:System.Security.Cryptography.CspParameters.ProviderType> field to specify a provider type by passing a numeric value that represents that provider.</span></span>  <span data-ttu-id="0cc23-214">WinCrypt.h 標頭檔中定義之數字的值，表示預設提供者類型：</span><span class="sxs-lookup"><span data-stu-id="0cc23-214">The numeric values that represent the default provider types are defined in the WinCrypt.h header file:</span></span>  
  
-   <span data-ttu-id="0cc23-215">若要指定與相容的提供者<xref:System.Security.Cryptography.RSA>類別中，將值傳遞`1`。</span><span class="sxs-lookup"><span data-stu-id="0cc23-215">To specify a provider compatible with the <xref:System.Security.Cryptography.RSA> class, pass a value of `1`.</span></span>  
  
-   <span data-ttu-id="0cc23-216">若要指定與相容的提供者<xref:System.Security.Cryptography.DSA>類別中，將值傳遞`13`。</span><span class="sxs-lookup"><span data-stu-id="0cc23-216">To specify a provider compatible with the <xref:System.Security.Cryptography.DSA> class, pass a value of `13`.</span></span>  
  
 <span data-ttu-id="0cc23-217">下表列出提供者類型和其對應的數字值 WinCrypt.h 標頭檔中定義。</span><span class="sxs-lookup"><span data-stu-id="0cc23-217">The following table lists the provider types and their corresponding numeric values defined in the WinCrypt.h header file.</span></span>  
  
|<span data-ttu-id="0cc23-218">提供者類型</span><span class="sxs-lookup"><span data-stu-id="0cc23-218">Provider Type</span></span>|<span data-ttu-id="0cc23-219">數值</span><span class="sxs-lookup"><span data-stu-id="0cc23-219">Numeric Value</span></span>|  
|-------------------|-------------------|  
|`PROV_RSA_FULL`|<span data-ttu-id="0cc23-220">1</span><span class="sxs-lookup"><span data-stu-id="0cc23-220">1</span></span>|  
|`PROV_RSA_SIG`|<span data-ttu-id="0cc23-221">2</span><span class="sxs-lookup"><span data-stu-id="0cc23-221">2</span></span>|  
|`PROV_DSS`|<span data-ttu-id="0cc23-222">3</span><span class="sxs-lookup"><span data-stu-id="0cc23-222">3</span></span>|  
|`PROV_FORTEZZA`|<span data-ttu-id="0cc23-223">4</span><span class="sxs-lookup"><span data-stu-id="0cc23-223">4</span></span>|  
|`PROV_MS_EXCHANGE`|<span data-ttu-id="0cc23-224">5</span><span class="sxs-lookup"><span data-stu-id="0cc23-224">5</span></span>|  
|`PROV_SSL`|<span data-ttu-id="0cc23-225">6</span><span class="sxs-lookup"><span data-stu-id="0cc23-225">6</span></span>|  
|`PROV_RSA_SCHANNEL`|<span data-ttu-id="0cc23-226">12</span><span class="sxs-lookup"><span data-stu-id="0cc23-226">12</span></span>|  
|`PROV_DSS_DH`|<span data-ttu-id="0cc23-227">13</span><span class="sxs-lookup"><span data-stu-id="0cc23-227">13</span></span>|  
|`PROV_EC_ECDSA_SIG`|<span data-ttu-id="0cc23-228">14</span><span class="sxs-lookup"><span data-stu-id="0cc23-228">14</span></span>|  
|`PROV_EC_ECNRA_SIG`|<span data-ttu-id="0cc23-229">15</span><span class="sxs-lookup"><span data-stu-id="0cc23-229">15</span></span>|  
|`PROV_EC_ECDSA_FULL`|<span data-ttu-id="0cc23-230">16</span><span class="sxs-lookup"><span data-stu-id="0cc23-230">16</span></span>|  
|`PROV_EC_ECNRA_FULL`|<span data-ttu-id="0cc23-231">17</span><span class="sxs-lookup"><span data-stu-id="0cc23-231">17</span></span>|  
|`PROV_DH_SCHANNEL`|<span data-ttu-id="0cc23-232">18</span><span class="sxs-lookup"><span data-stu-id="0cc23-232">18</span></span>|  
|`PROV_SPYRUS_LYNKS`|<span data-ttu-id="0cc23-233">20</span><span class="sxs-lookup"><span data-stu-id="0cc23-233">20</span></span>|  
|`PROV_RNG`|<span data-ttu-id="0cc23-234">21</span><span class="sxs-lookup"><span data-stu-id="0cc23-234">21</span></span>|  
|`PROV_INTEL_SEC`|<span data-ttu-id="0cc23-235">22</span><span class="sxs-lookup"><span data-stu-id="0cc23-235">22</span></span>|  
|`PROV_REPLACE_OWF`|<span data-ttu-id="0cc23-236">23</span><span class="sxs-lookup"><span data-stu-id="0cc23-236">23</span></span>|  
|`PROV_RSA_AES`|<span data-ttu-id="0cc23-237">24</span><span class="sxs-lookup"><span data-stu-id="0cc23-237">24</span></span>|  
  
 <span data-ttu-id="0cc23-238">如需有關預設提供者類型和行為的詳細資訊，請參閱 MSDN library 中的 Microsoft 密碼編譯 API (CAPI) 文件。</span><span class="sxs-lookup"><span data-stu-id="0cc23-238">For more information about the default provider types and their behaviors, see the Microsoft Cryptography API (CAPI) documentation in the MSDN library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>