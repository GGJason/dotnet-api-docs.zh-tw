<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Rfc2898DeriveBytes.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">360c3a36-c465-4a92-baa7-e17b5430051fcd3ac9896d8adba5fc15cbc6580e9e102d0b902f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd3ac9896d8adba5fc15cbc6580e9e102d0b902f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7865e39826e7aaf54da4c7042975153813a31c7</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/16/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA1" /&gt;</ph>.</source>
          <target state="translated">依據 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.HMACSHA1" /&gt;</ph> 使用虛擬亂數產生器，實作密碼式的金鑰衍生功能 PBKDF2。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> takes a password, a salt, and an iteration count, and then generates keys through calls to the <ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> 接受密碼、 salt 和反覆項目計數，並再產生索引鍵，透過呼叫<ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 包含密碼和 salt，建立金鑰和初始化向量 (IV) 的方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">您可以使用 PBKDF2，密碼為基礎的金鑰衍生函式，來衍生金鑰使用的虛擬隨機函式，以產生幾乎不受限制長度的金鑰。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別可以用來產生衍生的金鑰的基底的索引鍵與其他參數。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">密碼金鑰衍生函式中的基底的索引鍵是密碼，而其他參數則是 salt 值和反覆項目計數。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">如需 PBKDF2 的詳細資訊，請參閱 RFC 2898"PKCS #5： 密碼型密碼編譯規格 2.0 版中，"上可用<bpt id="p1">[</bpt>要求註解的網站<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">完整的詳細資訊，請參閱區段 5.2，"PBKDF2，"。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">永遠不會硬式編碼在原始程式碼中的密碼。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">可以從組件擷取硬式編碼的密碼，利用<bpt id="p1">[</bpt>Ildasm.exe （IL 解譯器）<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>、 使用十六進位的編輯器，或藉由直接開啟 Notepad.exe 之類的文字編輯器中的組件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class to create two identical keys for the <ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別來建立兩個相同的索引鍵<ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>It then encrypts and decrypts some data using the keys.</source>
          <target state="translated">然後它會加密，並解密相同的索引鍵的資料。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Rfc2898DeriveBytes">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The password used to derive the key.</source>
          <target state="translated">用來衍生金鑰的密碼。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The key salt used to derive the key.</source>
          <target state="translated">用來衍生金鑰的金鑰 Salt。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using a password and salt to derive the key.</source>
          <target state="translated">使用密碼和 Salt 來衍生金鑰，以初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The salt size must be 8 bytes or larger.</source>
          <target state="translated">Salt 大小必須為 8 個位元組或更大。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 包含密碼和 salt，建立金鑰和初始化向量 (IV) 的方法。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">您可以使用 PBKDF2，密碼為基礎的金鑰衍生函式，來衍生金鑰使用的虛擬隨機函式，以產生幾乎不受限制長度的金鑰。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別可以用來產生衍生的金鑰的基底的索引鍵與其他參數。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">密碼金鑰衍生函式中的基底的索引鍵是密碼，而其他參數則是 salt 值和反覆項目計數。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">如需 PBKDF2 的詳細資訊，請參閱 RFC 2898"PKCS #5： 密碼型密碼編譯規格 2.0 版中，"上可用<bpt id="p1">[</bpt>要求註解的網站<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">完整的詳細資訊，請參閱區段 5.2，"PBKDF2，"。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">永遠不會硬式編碼在原始程式碼中的密碼。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">可以從組件擷取硬式編碼的密碼，利用<bpt id="p1">[</bpt>Ildasm.exe （IL 解譯器）<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>、 使用十六進位的編輯器，或藉由直接開啟 Notepad.exe 之類的文字編輯器中的組件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class to create two identical keys for the <ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別來建立兩個相同的索引鍵<ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>It then encrypts and decrypts some data using the keys.</source>
          <target state="translated">然後它會加密，並解密相同的索引鍵的資料。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</source>
          <target state="translated">指定的 Salt 大小小於 8 個位元組，或反覆計數小於 1。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])">
          <source>The password or salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">密碼或 Salt 是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The password used to derive the key.</source>
          <target state="translated">用來衍生金鑰的密碼。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The size of the random salt that you want the class to generate.</source>
          <target state="translated">您希望此類別產生之隨機 Salt 的大小。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using the password and salt size to derive the key.</source>
          <target state="translated">使用密碼和 Salt 大小來衍生金鑰，以初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The salt size must be 8 bytes or larger.</source>
          <target state="translated">Salt 大小必須為 8 個位元組或更大。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 包含密碼和 salt，建立金鑰和初始化向量 (IV) 的方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">您可以使用 PBKDF2，密碼為基礎的金鑰衍生函式，來衍生金鑰使用的虛擬隨機函式，以產生幾乎不受限制長度的金鑰。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別可以用來產生衍生的金鑰的基底的索引鍵與其他參數。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">密碼金鑰衍生函式中的基底的索引鍵是密碼，而其他參數則是 salt 值和反覆項目計數。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">如需 PBKDF2 的詳細資訊，請參閱 RFC 2898"PKCS #5： 密碼型密碼編譯規格 2.0 版中，"上可用<bpt id="p1">[</bpt>要求註解的網站<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">完整的詳細資訊，請參閱區段 5.2，"PBKDF2，"。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">永遠不會硬式編碼在原始程式碼中的密碼。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">可以從組件擷取硬式編碼的密碼，利用<bpt id="p1">[</bpt>Ildasm.exe （IL 解譯器）<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>、 使用十六進位的編輯器，或藉由直接開啟 Notepad.exe 之類的文字編輯器中的組件。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The specified salt size is smaller than 8 bytes.</source>
          <target state="translated">指定的 Salt 大小小於 8 個位元組。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)">
          <source>The password or salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">密碼或 Salt 是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The password used to derive the key.</source>
          <target state="translated">用來衍生金鑰的密碼。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The key salt used to derive the key.</source>
          <target state="translated">用來衍生金鑰的金鑰 Salt。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">操作的重複次數。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using a password, a salt, and number of iterations to derive the key.</source>
          <target state="translated">使用密碼、Salt 和反覆計數來衍生金鑰，以初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</source>
          <target state="translated">Salt 大小必須為 8 個位元組或更大，而且反覆項目計數必須小於或等於零。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The minimum recommended number of iterations is 1000.</source>
          <target state="translated">建議的最小反覆項目數目是 1000年。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 包含密碼和 salt，建立金鑰和初始化向量 (IV) 的方法。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">您可以使用 PBKDF2，密碼為基礎的金鑰衍生函式，來衍生金鑰使用的虛擬隨機函式，以產生幾乎不受限制長度的金鑰。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別可以用來產生衍生的金鑰的基底的索引鍵與其他參數。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">密碼金鑰衍生函式中的基底的索引鍵是密碼，而其他參數則是 salt 值和反覆項目計數。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">如需 PBKDF2 的詳細資訊，請參閱 RFC 2898"PKCS #5： 密碼型密碼編譯規格 2.0 版中，"上可用<bpt id="p1">[</bpt>要求註解的網站<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">完整的詳細資訊，請參閱區段 5.2，"PBKDF2，"。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">永遠不會硬式編碼在原始程式碼中的密碼。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">可以從組件擷取硬式編碼的密碼，利用<bpt id="p1">[</bpt>Ildasm.exe （IL 解譯器）<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>、 使用十六進位的編輯器，或藉由直接開啟 Notepad.exe 之類的文字編輯器中的組件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</source>
          <target state="translated">指定的 Salt 大小小於 8 個位元組，或反覆計數小於 1。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)">
          <source>The password or salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">密碼或 Salt 是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The password used to derive the key.</source>
          <target state="translated">用來衍生金鑰的密碼。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The key salt used to derive the key.</source>
          <target state="translated">用來衍生金鑰的金鑰 Salt。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">操作的重複次數。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using a password, a salt, and number of iterations to derive the key.</source>
          <target state="translated">使用密碼、Salt 和反覆計數來衍生金鑰，以初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</source>
          <target state="translated">Salt 大小必須為 8 個位元組或更大，而且反覆項目計數必須小於或等於零。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The minimum recommended number of iterations is 1000.</source>
          <target state="translated">建議的最小反覆項目數目是 1000年。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 包含密碼和 salt，建立金鑰和初始化向量 (IV) 的方法。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">您可以使用 PBKDF2，密碼為基礎的金鑰衍生函式，來衍生金鑰使用的虛擬隨機函式，以產生幾乎不受限制長度的金鑰。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別可以用來產生衍生的金鑰的基底的索引鍵與其他參數。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">密碼金鑰衍生函式中的基底的索引鍵是密碼，而其他參數則是 salt 值和反覆項目計數。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">如需 PBKDF2 的詳細資訊，請參閱 RFC 2898"PKCS #5： 密碼型密碼編譯規格 2.0 版中，"上可用<bpt id="p1">[</bpt>要求註解的網站<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">完整的詳細資訊，請參閱區段 5.2，"PBKDF2，"。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">永遠不會硬式編碼在原始程式碼中的密碼。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">可以從組件擷取硬式編碼的密碼，利用<bpt id="p1">[</bpt>Ildasm.exe （IL 解譯器）<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>、 使用十六進位的編輯器，或藉由直接開啟 Notepad.exe 之類的文字編輯器中的組件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class to create two identical keys for the <ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph> class.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別來建立兩個相同的索引鍵<ph id="ph2">&lt;xref:System.Security.Cryptography.TripleDES&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>It then encrypts and decrypts some data using the keys.</source>
          <target state="translated">然後它會加密，並解密相同的索引鍵的資料。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</source>
          <target state="translated">指定的 Salt 大小小於 8 個位元組，或反覆計數小於 1。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)">
          <source>The password or salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">密碼或 Salt 是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The password used to derive the key.</source>
          <target state="translated">用來衍生金鑰的密碼。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The size of the random salt that you want the class to generate.</source>
          <target state="translated">您希望此類別產生之隨機 Salt 的大小。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">操作的重複次數。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using a password, a salt size, and number of iterations to derive the key.</source>
          <target state="translated">使用密碼、Salt 大小和反覆計數來衍生金鑰，以初始化 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</source>
          <target state="translated">Salt 大小必須為 8 個位元組或更大，而且反覆項目計數必須小於或等於零。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The minimum recommended number of iterations is 1000.</source>
          <target state="translated">建議的最小反覆項目數目是 1000年。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</source>
          <target state="translated">RFC 2898 包含密碼和 salt，建立金鑰和初始化向量 (IV) 的方法。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</source>
          <target state="translated">您可以使用 PBKDF2，密碼為基礎的金鑰衍生函式，來衍生金鑰使用的虛擬隨機函式，以產生幾乎不受限制長度的金鑰。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class can be used to produce a derived key from a base key and other parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別可以用來產生衍生的金鑰的基底的索引鍵與其他參數。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</source>
          <target state="translated">密碼金鑰衍生函式中的基底的索引鍵是密碼，而其他參數則是 salt 值和反覆項目計數。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>For more information on PBKDF2, see RFC 2898,"PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the <bpt id="p1">[</bpt>Request for Comments Web site<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>.</source>
          <target state="translated">如需有關 PBKDF2 的詳細資訊，請參閱 RFC 2898"PKCS #5： 密碼型密碼編譯規格 2.0 版中，「 上可用<bpt id="p1">[</bpt>要求註解的網站<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37119)</ept>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>See section 5.2, "PBKDF2," for complete details.</source>
          <target state="translated">完整的詳細資訊，請參閱區段 5.2，"PBKDF2，"。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>Never hard-code a password within your source code.</source>
          <target state="translated">永遠不會硬式編碼在原始程式碼中的密碼。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>Hard-coded passwords can be retrieved from an assembly by using the <bpt id="p1">[</bpt>Ildasm.exe (IL Disassembler)<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>, by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</source>
          <target state="translated">可以從組件擷取硬式編碼的密碼，利用<bpt id="p1">[</bpt>Ildasm.exe （IL 解譯器）<ept id="p1">](~/docs/framework/tools/ildasm-exe-il-disassembler.md)</ept>、 使用十六進位的編輯器，或藉由直接開啟 Notepad.exe 之類的文字編輯器中的組件。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</source>
          <target state="translated">指定的 Salt 大小小於 8 個位元組，或反覆計數小於 1。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>The password or salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">密碼或 Salt 是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="iterations" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="iterations" /&gt;</ph> 超出範圍。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">這個參數需要非負數的數字。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The password to use to derive the key.</source>
          <target state="translated">用來衍生金鑰的密碼。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The key salt to use to derive the key.</source>
          <target state="translated">用來衍生金鑰的金鑰 Salt。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">操作的重複次數。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm to use to derive the key.</source>
          <target state="translated">要用來衍生金鑰的雜湊演算法。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 類別的新執行個體初始化，該類別使用指定的密碼、salt、反覆項目數和雜湊演算法名稱來衍生金鑰。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="saltSize" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="saltSize" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="hashAlgorithm" /&gt;</ph> is either <ph id="ph3">&lt;see langword="null" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="hashAlgorithm" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph> 屬性是 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>Hash algorithm name is invalid.</source>
          <target state="translated">雜湊演算法名稱無效。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The password to use to derive the key.</source>
          <target state="translated">用來衍生金鑰的密碼。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The key salt to use to derive the key.</source>
          <target state="translated">用來衍生金鑰的金鑰 Salt。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">操作的重複次數。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm to use to derive the key.</source>
          <target state="translated">要用來衍生金鑰的雜湊演算法。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 類別的新執行個體初始化，該類別使用指定的密碼、salt、反覆項目數和雜湊演算法名稱來衍生金鑰。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="hashAlgorithm" /&gt;</ph> is either <ph id="ph3">&lt;see langword="null" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="hashAlgorithm" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph> 屬性是 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>Hash algorithm name is invalid.</source>
          <target state="translated">雜湊演算法名稱無效。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The password to use to derive the key.</source>
          <target state="translated">用來衍生金鑰的密碼。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The size of the random salt that you want the class to generate.</source>
          <target state="translated">您希望此類別產生之隨機 Salt 的大小。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The number of iterations for the operation.</source>
          <target state="translated">操作的重複次數。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The hash algorithm to use to derive the key.</source>
          <target state="translated">要用來衍生金鑰的雜湊演算法。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class using the specified password, salt size, number of iterations and the hash algorithm name to derive the key.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 類別的新執行個體初始化，該類別使用指定的密碼、salt 大小、反覆項目數和雜湊演算法名稱來衍生金鑰。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source><ph id="ph1">&lt;paramref name="saltSize" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="saltSize" /&gt;</ph> 小於零。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph> property of <ph id="ph2">&lt;paramref name="hashAlgorithm" /&gt;</ph> is either <ph id="ph3">&lt;see langword="null" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="hashAlgorithm" /&gt;</ph> 的 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /&gt;</ph> 屬性是 <ph id="ph3">&lt;see langword="null" /&gt;</ph> 或 <ph id="ph4">&lt;see cref="F:System.String.Empty" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)">
          <source>Hash algorithm name is invalid.</source>
          <target state="translated">雜湊演算法名稱無效。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The algorithm name for which to derive the key.</source>
          <target state="translated">用來衍生金鑰的演算法名稱。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The hash algorithm name to use to derive the key.</source>
          <target state="translated">要用來衍生金鑰的雜湊演算法名稱。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The size of the key, in bits, to derive.</source>
          <target state="translated">要衍生的金鑰大小 (以位元為單位)。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The initialization vector (IV) to use to derive the key.</source>
          <target state="translated">用來衍生金鑰的初始化向量 (IV)。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>Derives a cryptographic key from the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> object.</source>
          <target state="translated">從 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 物件衍生密碼編譯金鑰。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The derived key.</source>
          <target state="translated">所衍生金鑰。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</source>
          <target state="translated">此函式是 Crypto API 函式 CryptDeriveKey()，包裝函式，為了提供互通性與使用 Crypto API 的應用程式。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>If the <ph id="ph1">`keySize`</ph> parameter is set to 0 bits, the default key size for the specified algorithm is used.</source>
          <target state="translated">如果<ph id="ph1">`keySize`</ph>參數設定為 0 位元時，使用指定的演算法的預設大小。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> parameter is incorrect.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="keySize" /&gt;</ph> 參數不正確。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The cryptographic service provider (CSP) cannot be acquired.</source>
          <target state="translated">無法取得密碼編譯服務提供者 (CSP)。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="algname" /&gt;</ph> parameter is not a valid algorithm name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="algname" /&gt;</ph> 參數不是有效的演算法名稱。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])">
          <source>The <ph id="ph1">&lt;paramref name="alghashname" /&gt;</ph> parameter is not a valid hash algorithm name.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="alghashname" /&gt;</ph> 參數不是有效的雜湊演算法名稱。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 表示釋放 Managed 和 Unmanaged 資源，<ph id="ph2">&lt;see langword="false" /&gt;</ph> 則表示只釋放 Unmanaged 資源。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> class and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /&gt;</ph> 類別所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose()`</ph>方法和<ph id="ph2">`Finalize`</ph>方法。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 參數為 <ph id="ph2">`true`</ph> 時，這個方法會釋放 <ph id="ph3">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> 參考的任何 Managed 物件所掌握的資源。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose()`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">在覆寫<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請小心不要參考到先前處置之前呼叫中的物件<ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>The number of pseudo-random key bytes to generate.</source>
          <target state="translated">要產生的似隨機金鑰位元組數量。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>Returns the pseudo-random key for this object.</source>
          <target state="translated">傳回這個物件的似隨機金鑰。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>A byte array filled with pseudo-random key bytes.</source>
          <target state="translated">位元組陣列，以虛擬隨機金鑰位元組填入。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class implements PBKDF2 functionality by using a pseudorandom number generator based on <ph id="ph2">&lt;xref:System.Security.Cryptography.HMACSHA1&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別會實作功能 PBKDF2 使用虛擬亂數產生器根據<ph id="ph2">&lt;xref:System.Security.Cryptography.HMACSHA1&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class takes a password, a salt, and an iteration count, and then generates keys through calls to the <ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別會採用密碼、 salt 和反覆項目計數，然後再產生金鑰，透過呼叫<ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>Repeated calls to this method will not generate the same key; instead, appending two calls of the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> method with a <ph id="ph2">`cb`</ph> parameter value of <ph id="ph3">`20`</ph> is the equivalent of calling the <ph id="ph4">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> method once with a <ph id="ph5">`cb`</ph> parameter value of <ph id="ph6">`40`</ph>.</source>
          <target state="translated">重複的呼叫這個方法不會產生相同的索引鍵。相反地，附加的兩個呼叫<ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph>方法<ph id="ph2">`cb`</ph>參數值的<ph id="ph3">`20`</ph>就相當於呼叫<ph id="ph4">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph>方法一次使用<ph id="ph5">`cb`</ph>參數值的<ph id="ph6">`40`</ph>。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph> method to get the key for an instance of <ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A&gt;</ph>方法來取得執行個體索引鍵<ph id="ph2">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="cb" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="cb" /&gt;</ph> 超出範圍。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">這個參數需要非負數的數字。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>Gets or sets the number of iterations for the operation.</source>
          <target state="translated">取得或設定操作的重複次數。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>The number of iterations for the operation.</source>
          <target state="translated">操作的重複次數。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>Iteration count is the number of times an operation is performed.</source>
          <target state="translated">反覆項目計數是執行作業的次數。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>For this method, the count should be greater than zero.</source>
          <target state="translated">這個方法，計數必須大於零。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>The minimum recommended number of iterations is 1000.</source>
          <target state="translated">建議的最小反覆項目數目是 1000年。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A&gt;</ph> property to display the number of iterations used in the generation of the key.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A&gt;</ph>屬性來顯示用於產生金鑰的反覆項目數目。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount">
          <source>The number of iterations is less than 1.</source>
          <target state="translated">反覆計數小於 1。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset">
          <source>Resets the state of the operation.</source>
          <target state="translated">重設作業的狀態。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset">
          <source>This method is automatically called if the salt or iteration count is modified.</source>
          <target state="translated">如果已修改的 salt 或反覆項目計數，會自動呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A&gt;</ph> method.</source>
          <target state="translated">下列範例會示範如何使用 <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph> class.</source>
          <target state="translated">這個程式碼範例是針對所提供之較大範例的一部分<ph id="ph1">&lt;xref:System.Security.Cryptography.Rfc2898DeriveBytes&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>Gets or sets the key salt value for the operation.</source>
          <target state="translated">取得或設定用於操作的金鑰 Salt 值。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>The key salt value for the operation.</source>
          <target state="translated">用於操作的金鑰 Salt 值。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>Salt, a random set of bytes, is used to make unauthorized decrypting of a message more difficult.</source>
          <target state="translated">Salt，一組隨機的位元組，可用來讓未經授權的解密更加困難的訊息。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</source>
          <target state="translated">字典攻擊是攻擊者嘗試藉由比較加密的值與最可能的索引鍵的先前計算加密值解密加密的訊息。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>This attack is made much more difficult by the introduction of salt, or random bytes, at the end of the password before the key derivation.</source>
          <target state="translated">這種攻擊進行更為困難的 salt，或隨機位元組，結尾之前的金鑰衍生密碼的簡介。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>The specified salt size is smaller than 8 bytes.</source>
          <target state="translated">指定的 Salt 大小小於 8 個位元組。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt">
          <source>The salt is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Salt 是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>