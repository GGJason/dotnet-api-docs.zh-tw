<Type Name="ProtectedData" FullName="System.Security.Cryptography.ProtectedData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="113fa7049e84e98a7de443e726e3f32bf66cafcc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498262" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ProtectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedData sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供加密和解密資料的方法。 這個類別無法被繼承。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別會提供存取至資料保護 API (DPAPI) 可在 Microsoft Windows 2000 和更新版本的作業系統。 這是由作業系統提供，而且不需要額外的程式庫的服務。 它會提供使用的使用者或電腦認證來加密或解密資料的保護。  
  
 類別包含兩個的包裝函式的未受管理的 DPAPI，<xref:System.Security.Cryptography.ProtectedData.Protect%2A>和<xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>。 這兩種方法可以用來加密和解密資料，例如密碼、 金鑰和連接字串。  
  
 如果您使用這些方法在模擬期間，您可能會收到下列錯誤: 「 不是有效的金鑰，用於指定狀態 」。 這是因為 DPAPI 儲存使用者設定檔中的索引鍵的資料。 如果未載入設定檔，將無法執行解密 DPAPI。 若要避免這個錯誤，載入您想要呼叫哪一種方法之前先模擬使用者的設定檔。 搭配模擬使用 DPAPI 可以帶來相當的複雜性，且需要謹慎設計選擇。  
  
   
  
## Examples  
 下列範例會示範如何使用資料保護。  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">包含要加密之資料的位元組陣列。</param>
        <param name="optionalEntropy">用來提高加密複雜性的選擇性額外位元組陣列，若為 <see langword="null" /> 則表示沒有額外的複雜性。</param>
        <param name="scope">其中一個列舉值，指定加密的範圍。</param>
        <summary>加密指定之位元組陣列中的資料，並傳回包含已加密資料的位元組陣列。</summary>
        <returns>表示已加密資料的位元組陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可以用來加密資料，例如密碼、 金鑰或連接字串。 `optionalEntropy`參數可讓您將資料加入至增加加密的複雜度，否則指定`null`的任何額外的複雜性。 如果提供，這項資訊時，必須也使用解密資料使用<xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>方法。  
  
> [!NOTE]
>  如果您使用這個方法期間模擬時，您可能會收到下列錯誤: 「 不是有效的金鑰，用於指定狀態 」。 若要避免這個錯誤，載入您想要呼叫方法之前先模擬使用者的設定檔。  
  
   
  
## Examples  
 下列範例會示範如何使用資料保護。  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="userData" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">加密失敗。</exception>
        <exception cref="T:System.NotSupportedException">本作業系統不支援這個方法。</exception>
        <exception cref="T:System.OutOfMemoryException">加密資料時，系統記憶體不足。</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">使用相關聯<see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" />保護資料的權限的旗標。</permission>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] encryptedData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">含有使用 <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> 方法所加密的資料之位元組陣列。</param>
        <param name="optionalEntropy">進行資料加密所使用的選擇性額外位元組陣列，如果沒有使用額外位元組陣列則為 <see langword="null" />。</param>
        <param name="scope">其中一個列舉值，指定用來加密資料的資料保護範圍。</param>
        <summary>解密指定之位元組陣列中的資料，並傳回包含已解密資料的位元組陣列。</summary>
        <returns>表示已解密資料的位元組陣列。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法可用來取消保護使用加密的資料<xref:System.Security.Cryptography.ProtectedData.Protect%2A>方法。 如果`optionalEntropy`參數用來加密期間，它必須提供解密資料。  
  
> [!NOTE]
>  如果您使用這個方法期間模擬時，您可能會收到下列錯誤: 「 不是有效的金鑰，用於指定狀態 」。 若要避免這個錯誤，載入您想要呼叫方法之前先模擬使用者的設定檔。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用資料保護。  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="encryptedData" /> 參數為 <see langword="null" />。</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">解密失敗。</exception>
        <exception cref="T:System.NotSupportedException">本作業系統不支援這個方法。</exception>
        <exception cref="T:System.OutOfMemoryException">記憶體不足。</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">使用相關聯<see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" />取消保護資料的權限的旗標。</permission>
      </Docs>
    </Member>
  </Members>
</Type>