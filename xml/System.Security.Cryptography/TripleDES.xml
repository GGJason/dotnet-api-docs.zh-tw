<Type Name="TripleDES" FullName="System.Security.Cryptography.TripleDES">
  <TypeSignature Language="C#" Value="public abstract class TripleDES : System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TripleDES extends System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.TripleDES" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TripleDES&#xA;Inherits SymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class TripleDES abstract : System::Security::Cryptography::SymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.SymmetricAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7397d-101">表示三重資料加密標準演算法的基底類別，所有 <see cref="T:System.Security.Cryptography.TripleDES" /> 實作都必須衍生自此類別。</span><span class="sxs-lookup"><span data-stu-id="7397d-101">Represents the base class for Triple Data Encryption Standard algorithms from which all <see cref="T:System.Security.Cryptography.TripleDES" /> implementations must derive.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7397d-102"><xref:System.Security.Cryptography.TripleDES> 使用的三個後續反覆項目<xref:System.Security.Cryptography.DES>演算法。</span><span class="sxs-lookup"><span data-stu-id="7397d-102"><xref:System.Security.Cryptography.TripleDES> uses three successive iterations of the <xref:System.Security.Cryptography.DES> algorithm.</span></span> <span data-ttu-id="7397d-103">它可以使用兩個或三個 56 位元金鑰。</span><span class="sxs-lookup"><span data-stu-id="7397d-103">It can use either two or three 56-bit keys.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7397d-104">有先進加密標準 (Advanced Encryption Standard，AES) 這個較新的對稱加密演算法可供使用。</span><span class="sxs-lookup"><span data-stu-id="7397d-104">A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="7397d-105">請考慮使用<xref:System.Security.Cryptography.Aes>類別和其衍生的類別，而不是<xref:System.Security.Cryptography.TripleDES>類別。</span><span class="sxs-lookup"><span data-stu-id="7397d-105">Consider using the <xref:System.Security.Cryptography.Aes> class and its derived classes instead of the <xref:System.Security.Cryptography.TripleDES> class.</span></span> <span data-ttu-id="7397d-106">使用<xref:System.Security.Cryptography.TripleDES>只為了與舊版的應用程式和資料的相容性。</span><span class="sxs-lookup"><span data-stu-id="7397d-106">Use <xref:System.Security.Cryptography.TripleDES> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="7397d-107">這個演算法在 64 位元為增量來支援 128 位元的金鑰長度為 192 位元。</span><span class="sxs-lookup"><span data-stu-id="7397d-107">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7397d-108">下列程式碼範例方法使用<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>具有指定索引鍵 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 來加密所指定的檔案`inName`。</span><span class="sxs-lookup"><span data-stu-id="7397d-108">The following code example method uses <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`.</span></span> <span data-ttu-id="7397d-109">然後它會輸出到所指定的檔案加密的結果`outName`。</span><span class="sxs-lookup"><span data-stu-id="7397d-109">It then outputs the encrypted result to the file specified by `outName`.</span></span>  
  
 [!code-cpp[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/CPP/source.cpp#1)]
 [!code-csharp[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/CS/source.cs#1)]
 [!code-vb[Classic TripleDESCryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TripleDESCryptoServiceProvider Example/VB/source.vb#1)]  
  
 <span data-ttu-id="7397d-110">解密可以處理相同的方式;使用<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A>而不是<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>。</span><span class="sxs-lookup"><span data-stu-id="7397d-110">Decryption can be handled in the same way; use <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.CreateEncryptor%2A>.</span></span> <span data-ttu-id="7397d-111">相同索引鍵 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 用來加密檔案必須用來將其解密。</span><span class="sxs-lookup"><span data-stu-id="7397d-111">The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Cryptography.Aes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TripleDES ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TripleDES();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7397d-112">初始化 <see cref="T:System.Security.Cryptography.TripleDES" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7397d-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.TripleDES" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7397d-113">您無法建立抽象類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7397d-113">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="7397d-114">應用程式程式碼會建立衍生類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7397d-114">Application code will create a new instance of a derived class.</span></span>  
  
 <span data-ttu-id="7397d-115">這個方法會初始化的受保護的欄位<xref:System.Security.Cryptography.SymmetricAlgorithm>下表列出類別設為預設值。</span><span class="sxs-lookup"><span data-stu-id="7397d-115">This method initializes the protected fields of the <xref:System.Security.Cryptography.SymmetricAlgorithm> class to the default values listed in the following table.</span></span>  
  
|<span data-ttu-id="7397d-116">欄位</span><span class="sxs-lookup"><span data-stu-id="7397d-116">Field</span></span>|<span data-ttu-id="7397d-117">預設值</span><span class="sxs-lookup"><span data-stu-id="7397d-117">Default Value</span></span>|  
|-----------|-------------------|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue>|<span data-ttu-id="7397d-118">192</span><span class="sxs-lookup"><span data-stu-id="7397d-118">192</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue>|<span data-ttu-id="7397d-119">64</span><span class="sxs-lookup"><span data-stu-id="7397d-119">64</span></span>|  
|<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue>|<span data-ttu-id="7397d-120">64</span><span class="sxs-lookup"><span data-stu-id="7397d-120">64</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7397d-121">建立密碼編譯物件的執行個體，以執行 <see cref="T:System.Security.Cryptography.TripleDES" /> 演算法。</span><span class="sxs-lookup"><span data-stu-id="7397d-121">Creates an instance of a cryptographic object to perform the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.TripleDES Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.TripleDES Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As TripleDES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::TripleDES ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.TripleDES</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7397d-122">建立密碼編譯物件的執行個體，以執行 <see cref="T:System.Security.Cryptography.TripleDES" /> 演算法。</span><span class="sxs-lookup"><span data-stu-id="7397d-122">Creates an instance of a cryptographic object to perform the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="7397d-123">密碼編譯物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7397d-123">An instance of a cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7397d-124">建立 <xref:System.Security.Cryptography.TripleDES> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7397d-124">Creates a new instance of the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7397d-125">下列程式碼範例示範如何建立和使用<xref:System.Security.Cryptography.TripleDES>物件來加密和解密檔案中的資料。</span><span class="sxs-lookup"><span data-stu-id="7397d-125">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Create.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Create.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Create.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Create.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DES.Create.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Create.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="7397d-126">下列程式碼範例示範如何建立和使用<xref:System.Security.Cryptography.TripleDES>物件來加密和解密記憶體中的資料。</span><span class="sxs-lookup"><span data-stu-id="7397d-126">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Create.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Create.Memory/CPP/memoryexample.cpp#1)]
 [!code-vb[Cryptography.3DES.Create.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Create.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.TripleDES Create (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.TripleDES Create(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (str As String) As TripleDES" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::TripleDES ^ Create(System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.TripleDES</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str"><span data-ttu-id="7397d-127">要使用之 <see cref="T:System.Security.Cryptography.TripleDES" /> 的特定實作的名稱。</span><span class="sxs-lookup"><span data-stu-id="7397d-127">The name of the specific implementation of <see cref="T:System.Security.Cryptography.TripleDES" /> to use.</span></span></param>
        <summary><span data-ttu-id="7397d-128">建立密碼編譯物件的執行個體來執行 <see cref="T:System.Security.Cryptography.TripleDES" /> 演算法的指定實作。</span><span class="sxs-lookup"><span data-stu-id="7397d-128">Creates an instance of a cryptographic object to perform the specified implementation of the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
        <returns><span data-ttu-id="7397d-129">密碼編譯物件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7397d-129">An instance of a cryptographic object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7397d-130">下列程式碼範例示範如何建立和使用<xref:System.Security.Cryptography.TripleDES>物件來加密和解密檔案中的資料。</span><span class="sxs-lookup"><span data-stu-id="7397d-130">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in a file.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Createstring.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Createstring.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.3DES.Createstring.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Createstring.File/VB/fileexample.vb#1)]  
  
 <span data-ttu-id="7397d-131">下列程式碼範例示範如何建立和使用<xref:System.Security.Cryptography.TripleDES>物件來加密和解密記憶體中的資料。</span><span class="sxs-lookup"><span data-stu-id="7397d-131">The following code example shows how to create and use a <xref:System.Security.Cryptography.TripleDES> object to encrypt and decrypt data in memory.</span></span>  
  
 [!code-cpp[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.3DES.Createstring.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.3DES.Createstring.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWeakKey">
      <MemberSignature Language="C#" Value="public static bool IsWeakKey (byte[] rgbKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsWeakKey(unsigned int8[] rgbKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWeakKey (rgbKey As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWeakKey(cli::array &lt;System::Byte&gt; ^ rgbKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="7397d-132">測試祕密金鑰是否為弱式。</span><span class="sxs-lookup"><span data-stu-id="7397d-132">The secret key to test for weakness.</span></span></param>
        <summary><span data-ttu-id="7397d-133">判斷指定的金鑰是否為弱式。</span><span class="sxs-lookup"><span data-stu-id="7397d-133">Determines whether the specified key is weak.</span></span></summary>
        <returns>
          <span data-ttu-id="7397d-134">如果是弱式金鑰，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7397d-134"><see langword="true" /> if the key is weak; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7397d-135">弱式金鑰為密碼，以便於中斷所導致的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="7397d-135">Weak keys are keys that result in ciphers that are easy to break.</span></span> <span data-ttu-id="7397d-136">如果文字以弱式金鑰加密，使用相同的弱式金鑰重新加密所產生的密碼傳回原始的文字。</span><span class="sxs-lookup"><span data-stu-id="7397d-136">If text is encrypted with a weak key, encrypting the resulting cipher again with the same weak key returns the original text.</span></span> <span data-ttu-id="7397d-137">在 128 位元模式中，如果第一個 64 位元與最後一個 64 位元，相同索引鍵是弱式。</span><span class="sxs-lookup"><span data-stu-id="7397d-137">In 128-bit mode, if the first 64 bits are the same as the last 64 bits, the key is weak.</span></span> <span data-ttu-id="7397d-138">在 192 位元模式中，如果第一個 64 位元與第二個 64 位元相同，或第二個 64 位元的最後一個 64 位元，與相同索引鍵是弱式。</span><span class="sxs-lookup"><span data-stu-id="7397d-138">In 192-bit mode, if the first 64 bits are the same as the second 64 bits or if the second 64 bits are the same as the last 64 bits, the key is weak.</span></span>  
  
 <span data-ttu-id="7397d-139">嘗試設定弱式金鑰結果<xref:System.Security.Cryptography.CryptographicException>。</span><span class="sxs-lookup"><span data-stu-id="7397d-139">Attempting to set a weak key results in a <xref:System.Security.Cryptography.CryptographicException>.</span></span> <span data-ttu-id="7397d-140">當<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A>稱為 「 若要建立隨機金鑰，弱式金鑰會永遠不會傳回。</span><span class="sxs-lookup"><span data-stu-id="7397d-140">When <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider.GenerateKey%2A> is called to create a random key, a weak key will never be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7397d-141"><paramref name="rgbKey" /> 參數的大小無效。</span><span class="sxs-lookup"><span data-stu-id="7397d-141">The size of the <paramref name="rgbKey" /> parameter is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7397d-142">取得或設定 <see cref="T:System.Security.Cryptography.TripleDES" /> 演算法的祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="7397d-142">Gets or sets the secret key for the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></summary>
        <value><span data-ttu-id="7397d-143"><see cref="T:System.Security.Cryptography.TripleDES" /> 演算法的祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="7397d-143">The secret key for the <see cref="T:System.Security.Cryptography.TripleDES" /> algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7397d-144">這個演算法在 64 位元為增量來支援 128 位元的金鑰長度為 192 位元。</span><span class="sxs-lookup"><span data-stu-id="7397d-144">This algorithm supports key lengths from 128 bits to 192 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7397d-145">嘗試將金鑰設定為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7397d-145">An attempt was made to set the key to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="7397d-146">嘗試設定的金鑰長度無效。</span><span class="sxs-lookup"><span data-stu-id="7397d-146">An attempt was made to set a key whose length is invalid.</span></span>  
  
 <span data-ttu-id="7397d-147">-或-</span><span class="sxs-lookup"><span data-stu-id="7397d-147">-or-</span></span>  
  
 <span data-ttu-id="7397d-148">嘗試設定弱式金鑰 (請參閱 <see cref="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" />)。</span><span class="sxs-lookup"><span data-stu-id="7397d-148">An attempt was made to set a weak key (see <see cref="M:System.Security.Cryptography.TripleDES.IsWeakKey(System.Byte[])" />).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalBlockSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.LegalBlockSizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalBlockSizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.TripleDES.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>