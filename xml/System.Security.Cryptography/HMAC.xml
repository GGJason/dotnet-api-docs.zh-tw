<Type Name="HMAC" FullName="System.Security.Cryptography.HMAC">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df66b5970c5b42ca57431b1c3a22899568116ba8" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39955723" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HMAC extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMAC" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HMAC&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMAC abstract : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type HMAC = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5ead5-101">表示抽象類別，所有的雜湊式訊息驗證碼 (HMAC) 實作均須從這個類別衍生。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5ead5-101">Represents the abstract class from which all implementations of Hash-based Message Authentication Code (HMAC) must derive.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ead5-102">雜湊式訊息驗證碼 (HMAC) 可用來判斷透過不安全的通道傳送的訊息是否遭竄改的寄件者和接收者共用祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="5ead5-102">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="5ead5-103">寄件者計算原始資料的雜湊值，並將原始資料和 HMAC 傳送當作單一訊息。</span><span class="sxs-lookup"><span data-stu-id="5ead5-103">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="5ead5-104">接收者會重新計算已接收的訊息上的雜湊值，並檢查所計算的雜湊值符合所傳送的雜湊值。</span><span class="sxs-lookup"><span data-stu-id="5ead5-104">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="5ead5-105">HMAC 可以搭配任何反覆進行的密碼編譯雜湊函式，例如 MD5 或 sha-1，搭配祕密的共用金鑰。</span><span class="sxs-lookup"><span data-stu-id="5ead5-105">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="5ead5-106">HMAC 密碼編譯強度取決於基礎的雜湊函式的屬性。</span><span class="sxs-lookup"><span data-stu-id="5ead5-106">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="5ead5-107">對資料或雜湊值的任何變更會導致不相符，因為祕密金鑰的知識，才可變更的訊息，並重現的正確雜湊值。</span><span class="sxs-lookup"><span data-stu-id="5ead5-107">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="5ead5-108">因此，如果原始和計算的雜湊值相符，驗證訊息。</span><span class="sxs-lookup"><span data-stu-id="5ead5-108">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HMAC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HMAC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ead5-109">初始化 <see cref="T:System.Security.Cryptography.HMAC" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-109">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMAC" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int BlockSizeValue { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSizeValue : int with get, set" Usage="System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ead5-110">取得或設定要使用於雜湊值的區塊大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-110">Gets or sets the block size to use in the hash value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ead5-111">要使用於雜湊值的區塊大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-111">The block size to use in the hash value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ead5-112">雜湊式訊息驗證碼 (HMAC) 會使用雜湊函式會藉由重複的資料區塊中的基本壓縮函式雜湊的資料。</span><span class="sxs-lookup"><span data-stu-id="5ead5-112">A Hash-based Message Authentication Code (HMAC) uses a hash function where data is hashed by iterating a basic compression function on blocks of data.</span></span> <span data-ttu-id="5ead5-113"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> 是這類區塊的位元組大小。</span><span class="sxs-lookup"><span data-stu-id="5ead5-113"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> is the byte size of such a block.</span></span> <span data-ttu-id="5ead5-114">其值為 64 個位元組。</span><span class="sxs-lookup"><span data-stu-id="5ead5-114">Its value is 64 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5ead5-115">建立雜湊式訊息驗證碼 (<see cref="T:System.Security.Cryptography.HMAC" />) 實作的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-115">Creates an instance of an implementation of a Hash-based Message Authentication Code (<see cref="T:System.Security.Cryptography.HMAC" />) .</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ead5-116">建立雜湊式訊息驗證碼 (HMAC) 預設實作的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-116">Creates an instance of the default implementation of a Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ead5-117">除非已使用 [&lt;cryptoClass&gt; 項目](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md)變更預設設定，否則為新的 SHA-1 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-117">A new SHA-1 instance, unless the default settings have been changed by using the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ead5-118">根據預設，這個多載會使用 sha-1 實作的 HMAC。</span><span class="sxs-lookup"><span data-stu-id="5ead5-118">By default, this overload uses the SHA-1 implementation of HMAC.</span></span> <span data-ttu-id="5ead5-119">如果您想要指定不同的實作，使用<xref:System.Security.Cryptography.HMAC.Create%28System.String%29>多載，可讓您改為指定的演算法名稱。</span><span class="sxs-lookup"><span data-stu-id="5ead5-119">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithmName As String) As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create(System::String ^ algorithmName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create algorithmName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithmName">
          <span data-ttu-id="5ead5-120">要使用的 HMAC 實作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-120">The HMAC implementation to use.</span>
          </span>
          <span data-ttu-id="5ead5-121">下表顯示 <c>algorithmName</c> 參數的有效值及其對應的演算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-121">The following table shows the valid values for the <c>algorithmName</c> parameter and the algorithms they map to.</span>
          </span>
          <span data-ttu-id="5ead5-122">
            <list type="table">
              <listheader>
                <term> 參數值  </term>
                <description> 實作  </description>
              </listheader>
              <item>
                <term> System.Security.Cryptography.HMAC  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.KeyedHashAlgorithm  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> HMACMD5  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACMD5" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACMD5  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACMD5" />
                </description>
              </item>
              <item>
                <term> HMACRIPEMD160  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACRIPEMD160  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                </description>
              </item>
              <item>
                <term> HMACSHA1  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA1  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> HMACSHA256  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA256" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA256  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA256" />
                </description>
              </item>
              <item>
                <term> HMACSHA384  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA384" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA384  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA384" />
                </description>
              </item>
              <item>
                <term> HMACSHA512  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA512" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA512  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA512" />
                </description>
              </item>
              <item>
                <term> MACTripleDES  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.MACTripleDES" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.MACTripleDES  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.MACTripleDES" />
                </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-122">
              <list type="table">
                <listheader>
                  <term> Parameter value  </term>
                  <description> Implements  </description>
                </listheader>
                <item>
                  <term> System.Security.Cryptography.HMAC  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.KeyedHashAlgorithm  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> HMACMD5  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACMD5" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACMD5  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACMD5" />
                  </description>
                </item>
                <item>
                  <term> HMACRIPEMD160  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACRIPEMD160  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA1  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA1  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA256  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA256" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA256  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA256" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA384  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA384" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA384  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA384" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA512  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA512" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA512  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA512" />
                  </description>
                </item>
                <item>
                  <term> MACTripleDES  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.MACTripleDES" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.MACTripleDES  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.MACTripleDES" />
                  </description>
                </item>
              </list>
            </span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ead5-123">建立雜湊式訊息驗證碼 (HMAC) 之指定實作的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-123">Creates an instance of the specified implementation of a Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ead5-124">指定 HMAC 實作的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-124">A new instance of the specified HMAC implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ead5-125">HMAC 支援雜湊演算法包括 MD5，sha-1、 SHA-256 和 RIPEMD160 數。</span><span class="sxs-lookup"><span data-stu-id="5ead5-125">HMAC supports a number of hash algorithms, including MD5, SHA-1, SHA-256, and RIPEMD160.</span></span> <span data-ttu-id="5ead5-126">如需完整清單，請參閱支援的值`algorithmName`參數。</span><span class="sxs-lookup"><span data-stu-id="5ead5-126">For the full list, see the supported values for the `algorithmName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hMAC.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="5ead5-127">
            <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-127">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ead5-128">如果金鑰變更是合法的，則釋放 <see cref="T:System.Security.Cryptography.HMAC" /> 類別所使用的 Unmanaged 資源，並選擇性釋放 Managed 資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-128">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMAC" /> class when a key change is legitimate and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ead5-129">這個方法會呼叫公用`Dispose()`方法和`Finalize`方法。</span><span class="sxs-lookup"><span data-stu-id="5ead5-129">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="5ead5-130">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。</span><span class="sxs-lookup"><span data-stu-id="5ead5-130">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="5ead5-131">`Finalize` 叫用`Dispose`具有`disposing`設定為`false`。</span><span class="sxs-lookup"><span data-stu-id="5ead5-131">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="5ead5-132">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Security.Cryptography.HMAC> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="5ead5-132">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HMAC> references.</span></span> <span data-ttu-id="5ead5-133">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="5ead5-133">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5ead5-134">
            <para>
              <see langword="Dispose" /> 可以多次呼叫的其他物件。當覆寫<see langword="Dispose(Boolean)" />，請小心不要參考先前處置呼叫中的物件<see langword="Dispose" />。如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 &lt;&lt;c2&gt; [ 實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。如需詳細資訊<see langword="Dispose" />並<see langword="Finalize" />，請參閱[清除 Unmanaged 資源總](~/docs/standard/garbage-collection/unmanaged.md)。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-134">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="override this.HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="hMAC.HashCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="hMAC.HashCore (rgb, ib, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ib" Type="System.Int32" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb">
          <span data-ttu-id="5ead5-135">輸入資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-135">The input data.</span>
          </span>
        </param>
        <param name="ib">
          <span data-ttu-id="5ead5-136">位元組陣列中的座標，從此處開始使用資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-136">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="5ead5-137">陣列中要用作資料的位元組數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-137">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5ead5-138">在衍生類別中覆寫時，將寫入物件的資料轉遞到用來計算雜湊值的預設 <see cref="T:System.Security.Cryptography.HMAC" /> 雜湊演算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-138">When overridden in a derived class, routes data written to the object into the default <see cref="T:System.Security.Cryptography.HMAC" /> hash algorithm for computing the hash value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ead5-139">這個方法不會呼叫應用程式程式碼。</span><span class="sxs-lookup"><span data-stu-id="5ead5-139">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="5ead5-140">這個抽象的方法會執行雜湊計算。</span><span class="sxs-lookup"><span data-stu-id="5ead5-140">This abstract method performs the hash computation.</span></span> <span data-ttu-id="5ead5-141">每次寫入至密碼編譯資料流物件會通過這個方法中的資料。</span><span class="sxs-lookup"><span data-stu-id="5ead5-141">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="5ead5-142">對於每個資料區塊，這個方法會更新雜湊物件的狀態，以便在資料流結尾傳回正確雜湊值。</span><span class="sxs-lookup"><span data-stu-id="5ead5-142">For each block of data, this method updates the state of the hash object so that a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="hMAC.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ead5-143">在衍生類別中覆寫時，當密碼編譯資料流物件處理最後的資料後，會對雜湊計算做最後處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-143">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5ead5-144">位元組陣列中計算出的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-144">The computed hash code in a byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ead5-145">這個方法不會呼叫應用程式程式碼。</span><span class="sxs-lookup"><span data-stu-id="5ead5-145">This method is not called by application code.</span></span> <span data-ttu-id="5ead5-146">這個方法會完成任何部分的計算，並傳回資料流的正確雜湊值。</span><span class="sxs-lookup"><span data-stu-id="5ead5-146">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.Security.Cryptography.HMAC.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ead5-147">取得或設定用於雜湊的雜湊演算法名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-147">Gets or sets the name of the hash algorithm to use for hashing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ead5-148">雜湊演算法的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-148">The name of the hash algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5ead5-149">無法變更目前的雜湊演算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-149">The current hash algorithm cannot be changed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="hMAC.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5ead5-150">初始化 <see cref="T:System.Security.Cryptography.HMAC" /> 預設實作的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-150">Initializes an instance of the default implementation of <see cref="T:System.Security.Cryptography.HMAC" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ead5-151">雜湊式訊息驗證碼 (HMAC) 可用來判斷透過不安全的通道傳送的訊息是否遭竄改的寄件者和接收者共用祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="5ead5-151">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="5ead5-152">寄件者計算原始資料的雜湊值，並將原始資料和 HMAC 傳送當作單一訊息。</span><span class="sxs-lookup"><span data-stu-id="5ead5-152">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="5ead5-153">接收者會重新計算已接收的訊息上的雜湊值，並檢查所計算的雜湊值符合所傳送的雜湊值。</span><span class="sxs-lookup"><span data-stu-id="5ead5-153">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="5ead5-154">HMAC 可以搭配任何反覆進行的密碼編譯雜湊函式，例如 MD5 或 sha-1，搭配祕密的共用金鑰。</span><span class="sxs-lookup"><span data-stu-id="5ead5-154">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="5ead5-155">HMAC 密碼編譯強度取決於基礎的雜湊函式的屬性。</span><span class="sxs-lookup"><span data-stu-id="5ead5-155">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="5ead5-156">對資料或雜湊值的任何變更會導致不相符，因為祕密金鑰的知識，才可變更的訊息，並重現的正確雜湊值。</span><span class="sxs-lookup"><span data-stu-id="5ead5-156">Any change to the data or the hash value will result in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="5ead5-157">因此，如果原始和計算的雜湊值相符，驗證訊息。</span><span class="sxs-lookup"><span data-stu-id="5ead5-157">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.HMAC.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5ead5-158">取得或設定要使用於雜湊演算法的金鑰。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-158">Gets or sets the key to use in the hash algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5ead5-159">要使用於雜湊演算法的金鑰。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-159">The key to use in the hash algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5ead5-160">這個屬性是索引鍵的雜湊演算法的金鑰。</span><span class="sxs-lookup"><span data-stu-id="5ead5-160">This property is the key for the keyed hash algorithm.</span></span>  
  
 <span data-ttu-id="5ead5-161">雜湊式訊息驗證碼 (HMAC) 可用來判斷透過不安全的通道傳送的訊息是否遭竄改的寄件者和接收者共用祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="5ead5-161">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="5ead5-162">寄件者計算原始資料的雜湊值，並將原始資料和 HMAC 傳送當作單一訊息。</span><span class="sxs-lookup"><span data-stu-id="5ead5-162">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="5ead5-163">接收者會重新計算已接收的訊息上的雜湊值，並檢查所計算的雜湊值符合所傳送的雜湊值。</span><span class="sxs-lookup"><span data-stu-id="5ead5-163">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="5ead5-164">HMAC 可以搭配任何反覆進行的密碼編譯雜湊函式，例如 MD5 或 sha-1，搭配祕密的共用金鑰。</span><span class="sxs-lookup"><span data-stu-id="5ead5-164">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="5ead5-165">HMAC 密碼編譯強度取決於基礎的雜湊函式的屬性。</span><span class="sxs-lookup"><span data-stu-id="5ead5-165">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="5ead5-166">對資料或雜湊值的任何變更會導致不相符，因為祕密金鑰的知識，才可變更的訊息，並重現的正確雜湊值。</span><span class="sxs-lookup"><span data-stu-id="5ead5-166">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="5ead5-167">因此，如果原始和計算的雜湊值相符，驗證訊息。</span><span class="sxs-lookup"><span data-stu-id="5ead5-167">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="5ead5-168">嘗試在雜湊開始後變更 <see cref="P:System.Security.Cryptography.HMAC.Key" /> 屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5ead5-168">An attempt is made to change the <see cref="P:System.Security.Cryptography.HMAC.Key" /> property after hashing has begun.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryHashFinal : Span&lt;byte&gt; *  -&gt; bool" Usage="hMAC.TryHashFinal (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>