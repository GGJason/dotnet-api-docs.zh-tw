<Type Name="SymmetricAlgorithm" FullName="System.Security.Cryptography.SymmetricAlgorithm">
  <TypeSignature Language="C#" Value="public abstract class SymmetricAlgorithm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SymmetricAlgorithm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.SymmetricAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SymmetricAlgorithm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymmetricAlgorithm abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d68b6-101">表示抽象基底類別，對稱演算法之所有實作必須從它繼承。</span><span class="sxs-lookup"><span data-stu-id="d68b6-101">Represents the abstract base class from which all implementations of symmetric algorithms must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-102">衍生自類別<xref:System.Security.Cryptography.SymmetricAlgorithm>類別會使用稱為 cipher 區塊鏈結 (CBC)，鏈結模式，需要索引鍵 (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) 和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>)，對資料執行密碼編譯轉換。</span><span class="sxs-lookup"><span data-stu-id="d68b6-102">The classes that derive from the <xref:System.Security.Cryptography.SymmetricAlgorithm> class use a chaining mode called cipher block chaining (CBC), which requires a key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and an initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to perform cryptographic transformations on data.</span></span>  <span data-ttu-id="d68b6-103">若要解密資料加密使用其中一種<xref:System.Security.Cryptography.SymmetricAlgorithm>類別，您必須設定<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>屬性和<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>屬性相同的值用來進行加密。</span><span class="sxs-lookup"><span data-stu-id="d68b6-103">To decrypt data that was encrypted using one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes, you must set the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property to the same values that were used for encryption.</span></span>  <span data-ttu-id="d68b6-104">才能發揮作用的對稱演算法，必須只能傳送者和收件者知道秘密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-104">For a symmetric algorithm to be useful, the secret key must be known only to the sender and the receiver.</span></span>  
  
 <span data-ttu-id="d68b6-105"><xref:System.Security.Cryptography.RijndaelManaged><xref:System.Security.Cryptography.DESCryptoServiceProvider>， <xref:System.Security.Cryptography.RC2CryptoServiceProvider>，和<xref:System.Security.Cryptography.TripleDESCryptoServiceProvider>是對稱演算法的實作。</span><span class="sxs-lookup"><span data-stu-id="d68b6-105"><xref:System.Security.Cryptography.RijndaelManaged>, <xref:System.Security.Cryptography.DESCryptoServiceProvider>, <xref:System.Security.Cryptography.RC2CryptoServiceProvider>, and <xref:System.Security.Cryptography.TripleDESCryptoServiceProvider> are implementations of symmetric algorithms.</span></span>  
  
 <span data-ttu-id="d68b6-106">請注意，當使用衍生類別，它是不夠，從安全性觀點來看，只在您完成使用物件後，強制記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="d68b6-106">Note that when using derived classes, it is not enough, from a security perspective, to simply force a garbage collection after you have finished using the object.</span></span> <span data-ttu-id="d68b6-107">您必須明確呼叫<xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A>零之前它會釋放此物件內的任何機密資料外之物件的方法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-107">You must explicitly call the <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> method on the object to zero out any sensitive data within the object before it is released.</span></span> <span data-ttu-id="d68b6-108">請注意記憶體回收並不會清空回收物件的內容，但是只會將標示為可用於重新配置記憶體。</span><span class="sxs-lookup"><span data-stu-id="d68b6-108">Note that garbage collection does not zero out the contents of collected objects but simply marks the memory as available for reallocation.</span></span> <span data-ttu-id="d68b6-109">因此記憶體回收物件中包含的資料可能仍會出現記憶體堆積中未配置的記憶體中。</span><span class="sxs-lookup"><span data-stu-id="d68b6-109">Thus the data contained within a garbage collected object may still be present in the memory heap in unallocated memory.</span></span> <span data-ttu-id="d68b6-110">在密碼編譯物件，這項資料可能包含機密資訊，例如金鑰資料或純文字區塊。</span><span class="sxs-lookup"><span data-stu-id="d68b6-110">In the case of cryptographic objects, this data could contain sensitive information such as key data or a block of plain text.</span></span>  
  
 <span data-ttu-id="d68b6-111">.NET Framework 中保存敏感性資料實作的所有密碼編譯類別`Clear`方法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-111">All cryptographic classes in the .NET Framework that hold sensitive data implement a `Clear` method.</span></span> <span data-ttu-id="d68b6-112">呼叫時，`Clear`方法會在物件內的所有敏感性資料加上零覆寫，並再釋放物件，使它可以安全地回收。</span><span class="sxs-lookup"><span data-stu-id="d68b6-112">When called, the `Clear` method overwrites all sensitive data within the object with zeros and then releases the object so that it can be safely garbage collected.</span></span> <span data-ttu-id="d68b6-113">當物件具有歸零，而且發行時，您然後應該呼叫`Dispose`方法`disposing`參數設定為`True`來處置所有 managed 和 unmanaged 資源相關聯的物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-113">When the object has been zeroed and released, you should then call the `Dispose` method with the `disposing` parameter set to `True` to dispose of all managed and unmanaged resources associated with the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d68b6-114">下列程式碼範例使用<xref:System.Security.Cryptography.RijndaelManaged>類別具有指定<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>屬性和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 來加密所指定的檔案`inName`，並將加密的結果所指定的檔案輸出至`outName`.</span><span class="sxs-lookup"><span data-stu-id="d68b6-114">The following code example uses the <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`, and outputs the encrypted result to the file specified by `outName`.</span></span> <span data-ttu-id="d68b6-115">`desKey`和`desIV`方法參數是 8 位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="d68b6-115">The `desKey` and `desIV` parameters to the method are 8-byte arrays.</span></span> <span data-ttu-id="d68b6-116">您必須先執行此範例安裝高度加密套件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-116">You must have the high encryption pack installed to run this example.</span></span>  
  
 [!code-cpp[Classic CryptoStream Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CryptoStream Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CS/source.cs#1)]
 [!code-vb[Classic CryptoStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic CryptoStream Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="d68b6-117">當您繼承自<see cref="T:System.Security.Cryptography.SymmetricAlgorithm" />類別，您必須覆寫下列成員： <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />， <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />， <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />，和<see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />。</span><span class="sxs-lookup"><span data-stu-id="d68b6-117">When you inherit from the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class, you must override the following members: <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />, <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />, <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />, and <see cref="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />.</span></span></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SymmetricAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SymmetricAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d68b6-118">初始化 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="d68b6-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-119">您無法建立抽象類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="d68b6-119">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="d68b6-120">應用程式程式碼會建立衍生類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="d68b6-120">Application code creates a new instance of a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68b6-121">衍生自對稱演算法的類別實作無效。</span><span class="sxs-lookup"><span data-stu-id="d68b6-121">The implementation of the class derived from the symmetric algorithm is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSize">
      <MemberSignature Language="C#" Value="public virtual int BlockSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.BlockSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BlockSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-122">取得或設定密碼編譯作業的區塊大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-122">Gets or sets the block size, in bits, of the cryptographic operation.</span></span></summary>
        <value><span data-ttu-id="d68b6-123">區塊大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-123">The block size, in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-124">區塊大小是可以在一個作業中解密或加密資料的基本單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-124">The block size is the basic unit of data that can be encrypted or decrypted in one operation.</span></span> <span data-ttu-id="d68b6-125">區塊大小超過訊息處理為連續區塊。訊息長度短於區塊大小必須以額外的位元區塊的大小。</span><span class="sxs-lookup"><span data-stu-id="d68b6-125">Messages longer than the block size are handled as successive blocks; messages shorter than the block size must be padded with extra bits to reach the size of a block.</span></span> <span data-ttu-id="d68b6-126">無效的區塊大小取決於所用的對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-126">Valid block sizes are determined by the symmetric algorithm used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68b6-127">區塊大小無效。</span><span class="sxs-lookup"><span data-stu-id="d68b6-127">The block size is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected BlockSizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int BlockSizeValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-128">表示密碼編譯作業的區塊大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-128">Represents the block size, in bits, of the cryptographic operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-129">區塊大小是可以在一個作業中解密或加密資料的基本單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-129">The block size is the basic unit of data that can be encrypted or decrypted in one operation.</span></span> <span data-ttu-id="d68b6-130">區塊大小超過訊息處理為連續區塊。訊息長度短於區塊大小必須以額外的位元區塊的大小。</span><span class="sxs-lookup"><span data-stu-id="d68b6-130">Messages longer than the block size are handled as successive blocks; messages shorter than the block size must be padded with extra bits to reach the size of a block.</span></span> <span data-ttu-id="d68b6-131">無效的區塊大小取決於所用的對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-131">Valid block sizes are determined by the symmetric algorithm used.</span></span>  
  
 <span data-ttu-id="d68b6-132">這個欄位透過存取<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-132">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d68b6-133">釋放 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 類別所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="d68b6-133">Releases all resources used by the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-134">請注意，當使用衍生類別，它是不夠，從安全性觀點來看，只在您完成使用物件後，強制記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="d68b6-134">Note that when using derived classes, it is not enough, from a security perspective, to simply force a garbage collection after you have finished using the object.</span></span> <span data-ttu-id="d68b6-135">您必須明確呼叫<xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A>零之前它會釋放此物件內的任何機密資料外之物件的方法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-135">You must explicitly call the <xref:System.Security.Cryptography.SymmetricAlgorithm.Clear%2A> method on the object to zero out any sensitive data within the object before it is released.</span></span> <span data-ttu-id="d68b6-136">請注意記憶體回收並不會清空回收物件的內容，但是只會將標示為可用於重新配置記憶體。</span><span class="sxs-lookup"><span data-stu-id="d68b6-136">Note that garbage collection does not zero out the contents of collected objects but simply marks the memory as available for reallocation.</span></span> <span data-ttu-id="d68b6-137">因此記憶體回收物件中包含的資料可能仍會出現記憶體堆積中未配置的記憶體中。</span><span class="sxs-lookup"><span data-stu-id="d68b6-137">Thus the data contained within a garbage collected object may still be present in the memory heap in unallocated memory.</span></span> <span data-ttu-id="d68b6-138">在密碼編譯物件，這項資料可能包含機密資訊，例如金鑰資料或純文字區塊。</span><span class="sxs-lookup"><span data-stu-id="d68b6-138">In the case of cryptographic objects, this data could contain sensitive information such as key data or a block of plain text.</span></span>  
  
 <span data-ttu-id="d68b6-139">.NET Framework 中保存敏感性資料實作的所有密碼編譯類別`Clear`方法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-139">All cryptographic classes in the .NET Framework that hold sensitive data implement a `Clear` method.</span></span> <span data-ttu-id="d68b6-140">呼叫時，`Clear`方法會在物件內的所有敏感性資料加上零覆寫，並再釋放物件，使它可以安全地回收。</span><span class="sxs-lookup"><span data-stu-id="d68b6-140">When called, the `Clear` method overwrites all sensitive data within the object with zeros and then releases the object so that it can be safely garbage collected.</span></span> <span data-ttu-id="d68b6-141">當物件具有歸零，而且發行時，您然後應該呼叫`Dispose`方法`disposing`參數設定為`True`來處置所有 managed 和 unmanaged 資源相關聯的物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-141">When the object has been zeroed and released, you should then call the `Dispose` method with the `disposing` parameter set to `True` to dispose of all managed and unmanaged resources associated with the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d68b6-142">建立用來執行對稱演算法的密碼編譯物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-142">Creates a cryptographic object used to perform the symmetric algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.SymmetricAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.SymmetricAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::SymmetricAlgorithm ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d68b6-143">建立用來執行對稱演算法的預設密碼編譯物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-143">Creates a default cryptographic object used to perform the symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="d68b6-144">用來執行對稱演算法的預設密碼編譯物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-144">A default cryptographic object used to perform the symmetric algorithm.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d68b6-145">下列程式碼範例使用<xref:System.Security.Cryptography.RijndaelManaged>類別具有指定<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>屬性和初始化向量 (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) 來加密所指定的檔案`inName`，並將加密的結果所指定的檔案輸出至`outName`.</span><span class="sxs-lookup"><span data-stu-id="d68b6-145">The following code example uses the <xref:System.Security.Cryptography.RijndaelManaged> class with the specified <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`, and outputs the encrypted result to the file specified by `outName`.</span></span> <span data-ttu-id="d68b6-146">`desKey`和`desIV`方法參數是 8 位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="d68b6-146">The `desKey` and `desIV` parameters to the method are 8-byte arrays.</span></span> <span data-ttu-id="d68b6-147">您必須先執行此範例安裝高度加密套件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-147">You must have the high encryption pack installed to run this example.</span></span>  
  
 [!code-cpp[Classic CryptoStream Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CryptoStream Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic CryptoStream Example/CS/source.cs#1)]
 [!code-vb[Classic CryptoStream Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic CryptoStream Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.SymmetricAlgorithm Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.SymmetricAlgorithm Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As SymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::SymmetricAlgorithm ^ Create(System::String ^ algName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="d68b6-148">要使用的 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 類別的特定實作的名稱。</span><span class="sxs-lookup"><span data-stu-id="d68b6-148">The name of the specific implementation of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class to use.</span></span></param>
        <summary><span data-ttu-id="d68b6-149">建立用來執行對稱演算法之指定密碼編譯物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-149">Creates the specified cryptographic object used to perform the symmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="d68b6-150">密碼編譯物件，用來執行對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-150">A cryptographic object used to perform the symmetric algorithm.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDecryptor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d68b6-151">建立對稱解密子物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-151">Creates a symmetric decryptor object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.ICryptoTransform CreateDecryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDecryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d68b6-152">使用目前的 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 屬性和初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)，建立對稱解密子物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-152">Creates a symmetric decryptor object with the current <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="d68b6-153">對稱解密子物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-153">A symmetric decryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-154">這個方法會解密加密的訊息建立使用<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A>多載相同的簽章。</span><span class="sxs-lookup"><span data-stu-id="d68b6-154">This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> overload with the same signature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateDecryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="d68b6-155">對稱演算法所用的祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-155">The secret key to use for the symmetric algorithm.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="d68b6-156">對稱演算法所用的初始化向量。</span><span class="sxs-lookup"><span data-stu-id="d68b6-156">The initialization vector to use for the symmetric algorithm.</span></span></param>
        <summary><span data-ttu-id="d68b6-157">在衍生類別中覆寫時，使用指定的 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 屬性和初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) 建立對稱解密子物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-157">When overridden in a derived class, creates a symmetric decryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="d68b6-158">對稱解密子物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-158">A symmetric decryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-159">這個方法會解密加密的訊息建立使用<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A>多載具有相同參數。</span><span class="sxs-lookup"><span data-stu-id="d68b6-159">This method decrypts an encrypted message created using the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> overload with the same parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEncryptor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d68b6-160">建立對稱加密子物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-160">Creates a symmetric encryptor object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.ICryptoTransform CreateEncryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateEncryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d68b6-161">使用目前的 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 屬性和初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)，建立對稱加密子物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-161">Creates a symmetric encryptor object with the current <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="d68b6-162">對稱加密子物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-162">A symmetric encryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-163">如果目前<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>屬性是`null`、<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>呼叫方法來建立新的隨機<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>。</span><span class="sxs-lookup"><span data-stu-id="d68b6-163">If the current <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property is `null`, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> method is called to create a new random <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>.</span></span> <span data-ttu-id="d68b6-164">如果目前<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>屬性是`null`、<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A>呼叫方法來建立新的隨機<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>。</span><span class="sxs-lookup"><span data-stu-id="d68b6-164">If the current <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property is `null`, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method is called to create a new random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>.</span></span>  
  
 <span data-ttu-id="d68b6-165">使用<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A>多載相同的簽章來解密此方法的結果。</span><span class="sxs-lookup"><span data-stu-id="d68b6-165">Use the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A> overload with the same signature to decrypt the result of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d68b6-166">下列範例會使用從傳回的轉換物件的字串來加密<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-166">The following example encrypts a string using the transform object returned from the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor%2A> method.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.SymmetricAlgorithm#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm/cpp/encryptor.cpp#1)]
 [!code-csharp[System.Security.Cryptography.SymmetricAlgorithm#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm/cs/encryptor.cs#1)]
 [!code-vb[System.Security.Cryptography.SymmetricAlgorithm#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm/vb/encryptor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public abstract System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateEncryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey"><span data-ttu-id="d68b6-167">對稱演算法所用的祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-167">The secret key to use for the symmetric algorithm.</span></span></param>
        <param name="rgbIV"><span data-ttu-id="d68b6-168">對稱演算法所用的初始化向量。</span><span class="sxs-lookup"><span data-stu-id="d68b6-168">The initialization vector to use for the symmetric algorithm.</span></span></param>
        <summary><span data-ttu-id="d68b6-169">在衍生類別中覆寫時，使用指定的 <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> 屬性和初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) 建立對稱加密子物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-169">When overridden in a derived class, creates a symmetric encryptor object with the specified <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> property and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span></span></summary>
        <returns><span data-ttu-id="d68b6-170">對稱加密子物件。</span><span class="sxs-lookup"><span data-stu-id="d68b6-170">A symmetric encryptor object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-171">使用<xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A>多載具有相同的參數來解密此方法的結果。</span><span class="sxs-lookup"><span data-stu-id="d68b6-171">Use the <xref:System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d68b6-172">將 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 類別目前的執行個體所使用的資源全部釋出。</span><span class="sxs-lookup"><span data-stu-id="d68b6-172">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d68b6-173">將 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 類別目前的執行個體所使用的資源全部釋出。</span><span class="sxs-lookup"><span data-stu-id="d68b6-173">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-174">`Dispose` 使用完畢時，請呼叫 <xref:System.Security.Cryptography.SymmetricAlgorithm>。</span><span class="sxs-lookup"><span data-stu-id="d68b6-174">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.SymmetricAlgorithm>.</span></span> <span data-ttu-id="d68b6-175">`Dispose` 方法會將 <xref:System.Security.Cryptography.SymmetricAlgorithm> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="d68b6-175">The `Dispose` method leaves the <xref:System.Security.Cryptography.SymmetricAlgorithm> in an unusable state.</span></span> <span data-ttu-id="d68b6-176">在呼叫`Dispose`，您必須釋放所有參考<xref:System.Security.Cryptography.SymmetricAlgorithm>讓記憶體回收行程可以回收記憶體的<xref:System.Security.Cryptography.SymmetricAlgorithm>所佔用。</span><span class="sxs-lookup"><span data-stu-id="d68b6-176">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.SymmetricAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.SymmetricAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="d68b6-177">如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="d68b6-177">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d68b6-178">在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:System.Security.Cryptography.SymmetricAlgorithm>。</span><span class="sxs-lookup"><span data-stu-id="d68b6-178">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.SymmetricAlgorithm>.</span></span> <span data-ttu-id="d68b6-179">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Security.Cryptography.SymmetricAlgorithm> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-179">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.SymmetricAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="d68b6-180"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="d68b6-180"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="d68b6-181">釋放 <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="d68b6-181">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.SymmetricAlgorithm" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-182">這個方法會呼叫公用`Dispose()`方法和`Finalize`方法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-182">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="d68b6-183">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="d68b6-183">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="d68b6-184">`Finalize` 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="d68b6-184">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="d68b6-185">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Security.Cryptography.SymmetricAlgorithm> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="d68b6-185">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.SymmetricAlgorithm> references.</span></span> <span data-ttu-id="d68b6-186">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-186">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="d68b6-187"><see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="d68b6-187"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="d68b6-188">在覆寫<see langword="Dispose(Boolean)" />，請小心不要參考到先前處置之前呼叫中的物件<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="d68b6-188">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="d68b6-189">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="d68b6-189">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="d68b6-190">如需有關<see langword="Dispose" />和<see langword="Finalize" />，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="d68b6-190">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FeedbackSize">
      <MemberSignature Language="C#" Value="public virtual int FeedbackSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FeedbackSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FeedbackSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FeedbackSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-191">取得或設定密碼編譯作業的回饋大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-191">Gets or sets the feedback size, in bits, of the cryptographic operation.</span></span></summary>
        <value><span data-ttu-id="d68b6-192">回饋大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-192">The feedback size in bits.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-193">回饋大小會決定回饋給後續加密或解密作業的資料量。</span><span class="sxs-lookup"><span data-stu-id="d68b6-193">The feedback size determines the amount of data that is fed back to successive encryption or decryption operations.</span></span> <span data-ttu-id="d68b6-194">回饋大小不能大於區塊大小。</span><span class="sxs-lookup"><span data-stu-id="d68b6-194">The feedback size cannot be greater than the block size.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68b6-195">回饋大小大於區塊大小。</span><span class="sxs-lookup"><span data-stu-id="d68b6-195">The feedback size is larger than the block size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FeedbackSizeValue">
      <MemberSignature Language="C#" Value="protected int FeedbackSizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 FeedbackSizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected FeedbackSizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int FeedbackSizeValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-196">表示密碼編譯作業的回饋大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-196">Represents the feedback size, in bits, of the cryptographic operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-197">回饋大小會決定回饋給後續加密或解密作業的資料量。</span><span class="sxs-lookup"><span data-stu-id="d68b6-197">The feedback size determines the amount of data that is fed back to successive encryption or decryption operations.</span></span> <span data-ttu-id="d68b6-198">回饋大小不能大於區塊大小。</span><span class="sxs-lookup"><span data-stu-id="d68b6-198">The feedback size cannot be greater than the block size.</span></span>  
  
 <span data-ttu-id="d68b6-199">這個欄位透過存取<xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-199">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateIV">
      <MemberSignature Language="C#" Value="public abstract void GenerateIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GenerateIV ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GenerateIV();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d68b6-200">在衍生類別中覆寫時，產生要用於該演算法的隨機初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)。</span><span class="sxs-lookup"><span data-stu-id="d68b6-200">When overridden in a derived class, generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) to use for the algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-201">一般情況下，沒有理由来使用這個方法，因為`CreateEncryptor()`或`CreateEncryptor(null, null)`自動產生初始化向量和索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d68b6-201">In general, there is no reason to use this method, because `CreateEncryptor()` or `CreateEncryptor(null, null)` automatically generates both an initialization vector and a key.</span></span> <span data-ttu-id="d68b6-202">不過，您可能想要使用<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A>方法，以重複使用不同的初始化向量的對稱演算法執行個體。</span><span class="sxs-lookup"><span data-stu-id="d68b6-202">However, you may want to use the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method to reuse a symmetric algorithm instance with a different initialization vector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public abstract void GenerateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub GenerateKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void GenerateKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d68b6-203">在衍生類別中覆寫時，產生要用於演算法的隨機金鑰 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)。</span><span class="sxs-lookup"><span data-stu-id="d68b6-203">When overridden in a derived class, generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) to use for the algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-204">一般情況下，沒有理由来使用這個方法，因為`CreateEncryptor()`或`CreateEncryptor(null, null)`自動產生初始化向量和索引鍵。</span><span class="sxs-lookup"><span data-stu-id="d68b6-204">In general, there is no reason to use this method, because `CreateEncryptor()` or `CreateEncryptor(null, null)` automatically generates both an initialization vector and a key.</span></span> <span data-ttu-id="d68b6-205">不過，您可能想要使用<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>方法，以不同的索引鍵中重複使用對稱演算法的執行個體。</span><span class="sxs-lookup"><span data-stu-id="d68b6-205">However, you may want to use the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> method to reuse a symmetric algorithm instance with a different key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IV">
      <MemberSignature Language="C#" Value="public virtual byte[] IV { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] IV" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IV As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ IV { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-206">取得或設定對稱演算法的初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)。</span><span class="sxs-lookup"><span data-stu-id="d68b6-206">Gets or sets the initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) for the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="d68b6-207">初始化向量。</span><span class="sxs-lookup"><span data-stu-id="d68b6-207">The initialization vector.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-208"><xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>屬性會自動設定為新的隨機值每當您建立的新執行個體，其中的<xref:System.Security.Cryptography.SymmetricAlgorithm>類別，或當您以手動方式呼叫<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-208">The <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property is automatically set to a new random value whenever you create a new instance of one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes or when you manually call the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateIV%2A> method.</span></span>  <span data-ttu-id="d68b6-209">大小<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>屬性必須是相同<xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A>屬性除以 8。</span><span class="sxs-lookup"><span data-stu-id="d68b6-209">The size of the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property must be the same as the <xref:System.Security.Cryptography.SymmetricAlgorithm.BlockSize%2A> property divided by 8.</span></span>  
  
 <span data-ttu-id="d68b6-210">衍生自類別<xref:System.Security.Cryptography.SymmetricAlgorithm>類別會使用稱為 cipher 區塊鏈結 (CBC)，鏈結模式，需要索引鍵和初始化向量，對資料執行密碼編譯轉換。</span><span class="sxs-lookup"><span data-stu-id="d68b6-210">The classes that derive from the <xref:System.Security.Cryptography.SymmetricAlgorithm> class use a chaining mode called cipher block chaining (CBC), which requires a key and an initialization vector to perform cryptographic transformations on data.</span></span>  <span data-ttu-id="d68b6-211">若要解密資料加密使用其中一種<xref:System.Security.Cryptography.SymmetricAlgorithm>類別，您必須設定<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>屬性和<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>屬性相同的值用來進行加密。</span><span class="sxs-lookup"><span data-stu-id="d68b6-211">To decrypt data that was encrypted using one of the <xref:System.Security.Cryptography.SymmetricAlgorithm> classes, you must set the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property and <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property to the same values that were used for encryption.</span></span>  
  
 <span data-ttu-id="d68b6-212">針對指定的私密金鑰*k*，不使用初始化向量的簡單區塊編碼器會將同一個純文字輸入的區塊加密成同一個加密文字輸出區塊。</span><span class="sxs-lookup"><span data-stu-id="d68b6-212">For a given secret key *k*, a simple block cipher that does not use an initialization vector will encrypt the same input block of plain text into the same output block of cipher text.</span></span> <span data-ttu-id="d68b6-213">如果您的純文字資料流中有重複的區塊，將您的加密文字資料流中有重複的區塊。</span><span class="sxs-lookup"><span data-stu-id="d68b6-213">If you have duplicate blocks within your plain text stream, you will have duplicate blocks within your cipher text stream.</span></span> <span data-ttu-id="d68b6-214">如果未經授權的使用者知道的純文字區塊的結構，他們可以使用該資訊破解已知的密碼文字區塊，並可能復原您的金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-214">If unauthorized users know anything about the structure of a block of your plain text, they can use that information to decipher the known cipher text block and possibly recover your key.</span></span> <span data-ttu-id="d68b6-215">為了打擊這個問題，從上一個區塊的資訊被混合加密的下一個區塊的處理程序。</span><span class="sxs-lookup"><span data-stu-id="d68b6-215">To combat this problem, information from the previous block is mixed into the process of encrypting the next block.</span></span> <span data-ttu-id="d68b6-216">因此，兩個相同的純文字區塊的輸出會不同。</span><span class="sxs-lookup"><span data-stu-id="d68b6-216">Thus, the output of two identical plain text blocks is different.</span></span> <span data-ttu-id="d68b6-217">因為這項技術會使用先前的區塊來加密的下一個區塊，來加密資料的第一個區塊需要的初始化向量。</span><span class="sxs-lookup"><span data-stu-id="d68b6-217">Because this technique uses the previous block to encrypt the next block, an initialization vector is needed to encrypt the first block of data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d68b6-218">嘗試將初始化向量設定為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68b6-218">An attempt was made to set the initialization vector to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68b6-219">嘗試將初始化向量設定為無效的大小。</span><span class="sxs-lookup"><span data-stu-id="d68b6-219">An attempt was made to set the initialization vector to an invalid size.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IVValue">
      <MemberSignature Language="C#" Value="protected byte[] IVValue;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int8[] IVValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.IVValue" />
      <MemberSignature Language="VB.NET" Value="Protected IVValue As Byte() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Byte&gt; ^ IVValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-220">表示對稱演算法的初始化向量 (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />)。</span><span class="sxs-lookup"><span data-stu-id="d68b6-220">Represents the initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) for the symmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-221">這個欄位透過存取<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-221">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public virtual byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-222">取得或設定對稱演算法的祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-222">Gets or sets the secret key for the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="d68b6-223">對稱演算法所用的祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-223">The secret key to use for the symmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-224">加密和解密，會使用之祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-224">The secret key is used both for encryption and for decryption.</span></span> <span data-ttu-id="d68b6-225">對稱演算法才會成功，必須只有寄件者和收件者知道的祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-225">For a symmetric algorithm to be successful, the secret key must be known only to the sender and the receiver.</span></span> <span data-ttu-id="d68b6-226">有效的金鑰大小由特定的對稱演算法實作，而且會列於<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-226">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="d68b6-227">如果這個屬性是`null`使用時，<xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A>呼叫方法來建立新的隨機值。</span><span class="sxs-lookup"><span data-stu-id="d68b6-227">If this property is `null` when it is used, the <xref:System.Security.Cryptography.SymmetricAlgorithm.GenerateKey%2A> method is called to create a new random value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d68b6-228">嘗試將金鑰設定為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="d68b6-228">An attempt was made to set the key to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68b6-229">金鑰大小無效。</span><span class="sxs-lookup"><span data-stu-id="d68b6-229">The key size is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public virtual int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-230">取得或設定對稱演算法使用之祕密金鑰的大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-230">Gets or sets the size, in bits, of the secret key used by the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="d68b6-231">對稱演算法使用之祕密金鑰的大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-231">The size, in bits, of the secret key used by the symmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-232">有效的金鑰大小由特定的對稱演算法實作，而且會列於<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-232">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68b6-233">金鑰大小無效。</span><span class="sxs-lookup"><span data-stu-id="d68b6-233">The key size is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeySizeValue">
      <MemberSignature Language="C#" Value="protected int KeySizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 KeySizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeySizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int KeySizeValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-234">表示對稱演算法使用之祕密金鑰的大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-234">Represents the size, in bits, of the secret key used by the symmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-235">有效的金鑰大小由特定的對稱演算法實作，而且會列於<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-235">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="d68b6-236">這個欄位透過存取<xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-236">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.KeySize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyValue">
      <MemberSignature Language="C#" Value="protected byte[] KeyValue;" />
      <MemberSignature Language="ILAsm" Value=".field family unsigned int8[] KeyValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.KeyValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeyValue As Byte() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Byte&gt; ^ KeyValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-237">表示對稱演算法的祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-237">Represents the secret key for the symmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-238">加密和解密，會使用之祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-238">The secret key is used both for encryption and for decryption.</span></span> <span data-ttu-id="d68b6-239">對稱演算法才會成功，必須只有寄件者和收件者知道的祕密金鑰。</span><span class="sxs-lookup"><span data-stu-id="d68b6-239">For a symmetric algorithm to be successful, the secret key must be known only to the sender and the receiver.</span></span> <span data-ttu-id="d68b6-240">有效的金鑰大小由特定的對稱演算法實作，而且會列於<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-240">The valid key sizes are specified by the particular symmetric algorithm implementation and are listed in the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="d68b6-241">這個欄位透過存取<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-241">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalBlockSizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalBlockSizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-242">取得對稱演算法所支援的區塊大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-242">Gets the block sizes, in bits, that are supported by the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="d68b6-243">陣列，含有演算法所支援的區塊大小。</span><span class="sxs-lookup"><span data-stu-id="d68b6-243">An array that contains the block sizes supported by the algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-244">對稱演算法只支援區塊大小符合此陣列中的項目。</span><span class="sxs-lookup"><span data-stu-id="d68b6-244">The symmetric algorithm supports only block sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d68b6-245">下列範例顯示的值<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A>對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-245">The following example shows the value of <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> for the symmetric algorithms.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/cs/program.cs#1)]
 [!code-vb[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalBlockSizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalBlockSizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalBlockSizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalBlockSizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalBlockSizesValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-246">指定對稱演算法所支援的區塊大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-246">Specifies the block sizes, in bits, that are supported by the symmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-247">對稱演算法只支援區塊大小符合此陣列中的項目。</span><span class="sxs-lookup"><span data-stu-id="d68b6-247">The symmetric algorithm supports only block sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="d68b6-248">這個欄位透過存取<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-248">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-249">取得對稱演算法所支援的金鑰大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-249">Gets the key sizes, in bits, that are supported by the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="d68b6-250">陣列，含有演算法所支援的金鑰大小。</span><span class="sxs-lookup"><span data-stu-id="d68b6-250">An array that contains the key sizes supported by the algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-251">對稱演算法只支援金鑰大小符合此陣列中的項目。</span><span class="sxs-lookup"><span data-stu-id="d68b6-251">The symmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d68b6-252">下列範例顯示的值<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>對稱演算法。</span><span class="sxs-lookup"><span data-stu-id="d68b6-252">The following example shows the value of <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> for the symmetric algorithms.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/cs/program.cs#1)]
 [!code-vb[System.Security.Cryptography.SymmetricAlgorithm.BlockSize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.security.cryptography.symmetricalgorithm.blocksize/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalKeySizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalKeySizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizesValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-253">指定對稱演算法所支援的金鑰大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-253">Specifies the key sizes, in bits, that are supported by the symmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-254">對稱演算法只支援金鑰大小符合此陣列中的項目。</span><span class="sxs-lookup"><span data-stu-id="d68b6-254">The symmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="d68b6-255">這個欄位透過存取<xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-255">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.CipherMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CipherMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Mode As CipherMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::CipherMode Mode { System::Security::Cryptography::CipherMode get(); void set(System::Security::Cryptography::CipherMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-256">取得或設定對稱演算法的作業模式。</span><span class="sxs-lookup"><span data-stu-id="d68b6-256">Gets or sets the mode for operation of the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="d68b6-257">對稱演算法的作業模式。</span><span class="sxs-lookup"><span data-stu-id="d68b6-257">The mode for operation of the symmetric algorithm.</span></span> <span data-ttu-id="d68b6-258">預設值為 <see cref="F:System.Security.Cryptography.CipherMode.CBC" />。</span><span class="sxs-lookup"><span data-stu-id="d68b6-258">The default is <see cref="F:System.Security.Cryptography.CipherMode.CBC" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-259">請參閱<xref:System.Security.Cryptography.CipherMode>列舉特定模式的描述。</span><span class="sxs-lookup"><span data-stu-id="d68b6-259">See <xref:System.Security.Cryptography.CipherMode> enumeration for a description of specific modes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68b6-260">密碼模式不是其中一個 <see cref="T:System.Security.Cryptography.CipherMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="d68b6-260">The cipher mode is not one of the <see cref="T:System.Security.Cryptography.CipherMode" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ModeValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.CipherMode ModeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Security.Cryptography.CipherMode ModeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.ModeValue" />
      <MemberSignature Language="VB.NET" Value="Protected ModeValue As CipherMode " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::CipherMode ModeValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CipherMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-261">表示對稱演算法中使用的密碼模式。</span><span class="sxs-lookup"><span data-stu-id="d68b6-261">Represents the cipher mode used in the symmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-262">請參閱<xref:System.Security.Cryptography.CipherMode>列舉特定模式的描述。</span><span class="sxs-lookup"><span data-stu-id="d68b6-262">See <xref:System.Security.Cryptography.CipherMode> enumeration for a description of specific modes.</span></span>  
  
 <span data-ttu-id="d68b6-263">這個欄位透過存取<xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-263">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Mode%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.PaddingMode Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.PaddingMode Padding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.SymmetricAlgorithm.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Padding As PaddingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::PaddingMode Padding { System::Security::Cryptography::PaddingMode get(); void set(System::Security::Cryptography::PaddingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-264">取得或設定對稱演算法中使用的填補模式。</span><span class="sxs-lookup"><span data-stu-id="d68b6-264">Gets or sets the padding mode used in the symmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="d68b6-265">對稱演算法中使用的填補模式。</span><span class="sxs-lookup"><span data-stu-id="d68b6-265">The padding mode used in the symmetric algorithm.</span></span> <span data-ttu-id="d68b6-266">預設值為 <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />。</span><span class="sxs-lookup"><span data-stu-id="d68b6-266">The default is <see cref="F:System.Security.Cryptography.PaddingMode.PKCS7" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-267">大部分的純文字訊息並非由一個完全填滿區塊的位元組數。</span><span class="sxs-lookup"><span data-stu-id="d68b6-267">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="d68b6-268">通常，沒有足夠的位元組來填入最後一個區塊。</span><span class="sxs-lookup"><span data-stu-id="d68b6-268">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="d68b6-269">當發生這種情況時，填補字串加入至文字。</span><span class="sxs-lookup"><span data-stu-id="d68b6-269">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="d68b6-270">例如，如果區塊長度為 64 位元，而最後一個區塊包含只有 40 位元，就會加入 24 位元的填補。</span><span class="sxs-lookup"><span data-stu-id="d68b6-270">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="d68b6-271">請參閱<xref:System.Security.Cryptography.PaddingMode>列舉特定模式的描述。</span><span class="sxs-lookup"><span data-stu-id="d68b6-271">See the <xref:System.Security.Cryptography.PaddingMode> enumeration for a description of specific modes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="d68b6-272">填補模式不是其中一個 <see cref="T:System.Security.Cryptography.PaddingMode" /> 值。</span><span class="sxs-lookup"><span data-stu-id="d68b6-272">The padding mode is not one of the <see cref="T:System.Security.Cryptography.PaddingMode" /> values.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PaddingValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.PaddingMode PaddingValue;" />
      <MemberSignature Language="ILAsm" Value=".field family valuetype System.Security.Cryptography.PaddingMode PaddingValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.SymmetricAlgorithm.PaddingValue" />
      <MemberSignature Language="VB.NET" Value="Protected PaddingValue As PaddingMode " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Security::Cryptography::PaddingMode PaddingValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.PaddingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d68b6-273">表示對稱演算法中使用的填補模式。</span><span class="sxs-lookup"><span data-stu-id="d68b6-273">Represents the padding mode used in the symmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d68b6-274">大部分的純文字訊息並非由一個完全填滿區塊的位元組數。</span><span class="sxs-lookup"><span data-stu-id="d68b6-274">Most plain text messages do not consist of a number of bytes that completely fill blocks.</span></span> <span data-ttu-id="d68b6-275">通常，沒有足夠的位元組來填入最後一個區塊。</span><span class="sxs-lookup"><span data-stu-id="d68b6-275">Often, there are not enough bytes to fill the last block.</span></span> <span data-ttu-id="d68b6-276">當發生這種情況時，填補字串加入至文字。</span><span class="sxs-lookup"><span data-stu-id="d68b6-276">When this happens, a padding string is added to the text.</span></span> <span data-ttu-id="d68b6-277">例如，如果區塊長度為 64 位元，而最後一個區塊包含只有 40 位元，就會加入 24 位元的填補。</span><span class="sxs-lookup"><span data-stu-id="d68b6-277">For example, if the block length is 64 bits and the last block contains only 40 bits, 24 bits of padding are added.</span></span> <span data-ttu-id="d68b6-278">請參閱<xref:System.Security.Cryptography.PaddingMode>列舉特定模式的描述。</span><span class="sxs-lookup"><span data-stu-id="d68b6-278">See the <xref:System.Security.Cryptography.PaddingMode> enumeration for a description of specific modes.</span></span>  
  
 <span data-ttu-id="d68b6-279">這個欄位透過存取<xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="d68b6-279">This field is accessed through the <xref:System.Security.Cryptography.SymmetricAlgorithm.Padding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidKeySize">
      <MemberSignature Language="C#" Value="public bool ValidKeySize (int bitLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidKeySize(int32 bitLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidKeySize (bitLength As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidKeySize(int bitLength);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bitLength"><span data-ttu-id="d68b6-280">用來檢查金鑰大小是否有效的長度，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="d68b6-280">The length, in bits, to check for a valid key size.</span></span></param>
        <summary><span data-ttu-id="d68b6-281">判斷指定的金鑰大小對目前的演算法是否有效。</span><span class="sxs-lookup"><span data-stu-id="d68b6-281">Determines whether the specified key size is valid for the current algorithm.</span></span></summary>
        <returns>
          <span data-ttu-id="d68b6-282">如果指定的金鑰大小對目前的演算法有效，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d68b6-282"><see langword="true" /> if the specified key size is valid for the current algorithm; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>