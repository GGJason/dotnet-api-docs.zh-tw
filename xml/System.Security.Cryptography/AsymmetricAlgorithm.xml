<Type Name="AsymmetricAlgorithm" FullName="System.Security.Cryptography.AsymmetricAlgorithm">
  <TypeSignature Language="C#" Value="public abstract class AsymmetricAlgorithm : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsymmetricAlgorithm extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.AsymmetricAlgorithm" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsymmetricAlgorithm&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsymmetricAlgorithm abstract : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="05db7-101">表示抽象基底類別，非對稱演算法的所有實作都必須從它繼承。</span><span class="sxs-lookup"><span data-stu-id="05db7-101">Represents the abstract base class from which all implementations of asymmetric algorithms must inherit.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05db7-102">非對稱密碼編譯演算法，也稱為公開金鑰演算法，需要傳送者和接收者維護一組相關的金鑰： 私密金鑰與公開金鑰。</span><span class="sxs-lookup"><span data-stu-id="05db7-102">Asymmetric cryptographic algorithms, also known as public-key algorithms, require that both sender and receiver maintain a pair of related keys: a private key and a public key.</span></span> <span data-ttu-id="05db7-103">兩個索引鍵是唯一的實體。</span><span class="sxs-lookup"><span data-stu-id="05db7-103">Both keys are unique to the entity.</span></span> <span data-ttu-id="05db7-104">公開金鑰可供任何人;此金鑰用於編碼傳送至收件者的資料。</span><span class="sxs-lookup"><span data-stu-id="05db7-104">The public key can be made available to anyone; this key is used for encoding data that is sent to a receiver.</span></span> <span data-ttu-id="05db7-105">私密金鑰必須保密接收者;此金鑰會解碼訊息時使用的編碼使用接收器的公開金鑰。</span><span class="sxs-lookup"><span data-stu-id="05db7-105">The private key must be kept private by the receiver; this key is used for decoding messages encoded using the receiver's public key.</span></span> <span data-ttu-id="05db7-106"><xref:System.Security.Cryptography.RSACryptoServiceProvider>類別是公開金鑰演算法的實作。</span><span class="sxs-lookup"><span data-stu-id="05db7-106">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> class is an implementation of a public-key algorithm.</span></span> <span data-ttu-id="05db7-107">公開金鑰加密和演算法的深入討論，請參閱 「 公開金鑰加密 」 一節[密碼編譯服務](~/docs/standard/security/cryptographic-services.md)。</span><span class="sxs-lookup"><span data-stu-id="05db7-107">For an in-depth discussion of public-key encryption and algorithms, see the "Public-Key Encryption" section in [Cryptographic Services](~/docs/standard/security/cryptographic-services.md).</span></span> <span data-ttu-id="05db7-108">如需如何使用強式名稱工具 (Sn.exe) 建立金鑰組的資訊，請參閱[How to： 建立公開 / 私密金鑰組](~/docs/framework/app-domains/how-to-create-a-public-private-key-pair.md)。</span><span class="sxs-lookup"><span data-stu-id="05db7-108">For information about how to use the Strong Name tool (Sn.exe) to create key pairs, see [How to: Create a Public-Private Key Pair](~/docs/framework/app-domains/how-to-create-a-public-private-key-pair.md).</span></span>  
  
 <span data-ttu-id="05db7-109">您可以使用公開金鑰系統，以形成數位簽章。</span><span class="sxs-lookup"><span data-stu-id="05db7-109">You can use public-key systems to form digital signatures.</span></span> <span data-ttu-id="05db7-110">數位簽章可用來協助保護資料的完整性。</span><span class="sxs-lookup"><span data-stu-id="05db7-110">Digital signatures are used to help to protect the integrity of data.</span></span> <span data-ttu-id="05db7-111">例如，若要使用公開金鑰系統以數位方式簽署訊息，寄件者先套用雜湊函式來建立訊息摘要。</span><span class="sxs-lookup"><span data-stu-id="05db7-111">For example, to use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="05db7-112">寄件者接著會使用寄件者的私密金鑰來建立個人簽章寄件者的加密訊息摘要。</span><span class="sxs-lookup"><span data-stu-id="05db7-112">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="05db7-113">在收到訊息和簽章，接收者會使用寄件者的公開金鑰來復原訊息摘要簽章，並使用雜湊訊息寄件者使用的相同雜湊演算法。</span><span class="sxs-lookup"><span data-stu-id="05db7-113">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="05db7-114">如果接收者計算出來的訊息摘要符合從寄件者收到的訊息摘要，接收者可以假設訊息在傳輸過程中沒有遭到竄改。</span><span class="sxs-lookup"><span data-stu-id="05db7-114">If the message digest that the receiver computes matches the message digest received from the sender, the receiver can assume that the message was not altered while in transit.</span></span> <span data-ttu-id="05db7-115">請注意，任何人都可以驗證簽章，因為寄件者的公開金鑰是通用資訊。</span><span class="sxs-lookup"><span data-stu-id="05db7-115">Note that anyone can verify a signature, because the sender's public key is common knowledge.</span></span> <span data-ttu-id="05db7-116">這項技術不會保留任何需要保密的訊息。對於要秘密提示訊息，它必須經過加密。</span><span class="sxs-lookup"><span data-stu-id="05db7-116">This technique does not retain the secrecy of the message; for the message to be secret, it must also be encrypted.</span></span>  
  
 <span data-ttu-id="05db7-117">.NET Framework 提供的以下類別可實作數位簽章演算法： <xref:System.Security.Cryptography.DSACryptoServiceProvider>， <xref:System.Security.Cryptography.RSACryptoServiceProvider>， <xref:System.Security.Cryptography.ECDsa> （基底類別），和<xref:System.Security.Cryptography.ECDsaCng>。</span><span class="sxs-lookup"><span data-stu-id="05db7-117">The .NET Framework provides the following classes that implement digital signature algorithms: <xref:System.Security.Cryptography.DSACryptoServiceProvider>, <xref:System.Security.Cryptography.RSACryptoServiceProvider>, <xref:System.Security.Cryptography.ECDsa> (base class), and <xref:System.Security.Cryptography.ECDsaCng>.</span></span>  
  
 <span data-ttu-id="05db7-118"><xref:System.Security.Cryptography>命名空間提供具象類別<xref:System.Security.Cryptography.RSA>和<xref:System.Security.Cryptography.DSA>只。</span><span class="sxs-lookup"><span data-stu-id="05db7-118">The <xref:System.Security.Cryptography> namespace provides concrete classes for <xref:System.Security.Cryptography.RSA> and <xref:System.Security.Cryptography.DSA> only.</span></span>  
  
 <span data-ttu-id="05db7-119">若要了解如何使用 RSA 演算法來加密和解密 XML 資料，以及建立和驗證 XML 數位簽章，請參閱下列文章：</span><span class="sxs-lookup"><span data-stu-id="05db7-119">To learn how to use the RSA algorithm to encrypt and decrypt XML data, and create and verify XML digital signatures, see these articles:</span></span>  
  
-   [<span data-ttu-id="05db7-120">操作說明：使用非對稱金鑰加密 XML 元素</span><span class="sxs-lookup"><span data-stu-id="05db7-120">How to: Encrypt XML Elements with Asymmetric Keys</span></span>](~/docs/standard/security/how-to-encrypt-xml-elements-with-asymmetric-keys.md)  
  
-   [<span data-ttu-id="05db7-121">操作說明：使用非對稱金鑰解密 XML 元素</span><span class="sxs-lookup"><span data-stu-id="05db7-121">How to: Decrypt XML Elements with Asymmetric Keys</span></span>](~/docs/standard/security/how-to-decrypt-xml-elements-with-asymmetric-keys.md)  
  
-   [<span data-ttu-id="05db7-122">操作說明：使用數位簽章簽署 XML 文件</span><span class="sxs-lookup"><span data-stu-id="05db7-122">How to: Sign XML Documents with Digital Signatures</span></span>](~/docs/standard/security/how-to-sign-xml-documents-with-digital-signatures.md)  
  
-   [<span data-ttu-id="05db7-123">操作說明：驗證 XML 文件的數位簽章</span><span class="sxs-lookup"><span data-stu-id="05db7-123">How to: Verify the Digital Signatures of XML Documents</span></span>](~/docs/standard/security/how-to-verify-the-digital-signatures-of-xml-documents.md)  
  
   
  
## Examples  
 <span data-ttu-id="05db7-124">下列程式碼範例示範如何實作自訂的非對稱演算法，繼承自<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-124">The following code example demonstrates how to implement a custom asymmetric algorithm inherited from the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  <span data-ttu-id="05db7-125">示範如何使用自訂的類別提供額外的類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-125">An additional class is provided to demonstrate how to use the custom class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#2)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#2)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#2)]  
  
 <span data-ttu-id="05db7-126">以下是示範如何使用自訂類別的其他類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-126">Here's an additional class that demonstrates how to use the custom class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#3)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#3)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsymmetricAlgorithm ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsymmetricAlgorithm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05db7-127">初始化 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="05db7-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05db7-128">您無法建立抽象類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="05db7-128">You cannot create an instance of an abstract class.</span></span> <span data-ttu-id="05db7-129">應用程式程式碼會建立衍生類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="05db7-129">Application code creates a new instance of a derived class.</span></span> <span data-ttu-id="05db7-130"><xref:System.Security.Cryptography.RSACryptoServiceProvider>和<xref:System.Security.Cryptography.DSACryptoServiceProvider>類別都是唯一支援目前的實作。</span><span class="sxs-lookup"><span data-stu-id="05db7-130">The <xref:System.Security.Cryptography.RSACryptoServiceProvider> and <xref:System.Security.Cryptography.DSACryptoServiceProvider> classes are the only currently supported implementations.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="05db7-131">衍生類別的實作無效。</span><span class="sxs-lookup"><span data-stu-id="05db7-131">The implementation of the derived class is not valid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05db7-132">釋放 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 類別所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="05db7-132">Releases all resources used by the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05db7-133">這個方法是簡單呼叫<xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="05db7-133">This method is a simple call to the <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="05db7-134">呼叫`Dispose`允許所使用的資源<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別，以重新配置原本用於其他用途。</span><span class="sxs-lookup"><span data-stu-id="05db7-134">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class to be reallocated for other purposes.</span></span> <span data-ttu-id="05db7-135">如需有關`Dispose`，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="05db7-135">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05db7-136">下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A>方法來釋放資源的目前`customCrypto`物件。</span><span class="sxs-lookup"><span data-stu-id="05db7-136">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Clear%2A> method to release the resources of the current `customCrypto` object.</span></span> <span data-ttu-id="05db7-137">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-137">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#1)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#1)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05db7-138">建立用來執行非對稱演算法的密碼編譯物件。</span><span class="sxs-lookup"><span data-stu-id="05db7-138">Creates a cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.AsymmetricAlgorithm Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.AsymmetricAlgorithm Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::AsymmetricAlgorithm ^ Create();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05db7-139">建立用來執行非對稱演算法的預設密碼編譯物件。</span><span class="sxs-lookup"><span data-stu-id="05db7-139">Creates a default cryptographic object used to perform the asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="05db7-140">除非已經使用 [&lt;cryptoClass&gt; 項目](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md)變更預設設定，否則為新的 <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="05db7-140">A new <see cref="T:System.Security.Cryptography.RSACryptoServiceProvider" /> instance, unless the default settings have been changed with the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05db7-141">下列程式碼範例示範如何實作<xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A>擴充的類別中的方法。</span><span class="sxs-lookup"><span data-stu-id="05db7-141">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> method in an extended class.</span></span> <span data-ttu-id="05db7-142">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-142">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#11)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#11)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.AsymmetricAlgorithm Create (string algName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.AsymmetricAlgorithm Create(string algName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algName As String) As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::AsymmetricAlgorithm ^ Create(System::String ^ algName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algName"><span data-ttu-id="05db7-143">要使用的非對稱演算法實作。</span><span class="sxs-lookup"><span data-stu-id="05db7-143">The asymmetric algorithm implementation to use.</span></span> <span data-ttu-id="05db7-144">下表顯示 <c>algName</c> 參數的有效值及其對應的演算法。</span><span class="sxs-lookup"><span data-stu-id="05db7-144">The following table shows the valid values for the <c>algName</c> parameter and the algorithms they map to.</span></span>  
  
 <span data-ttu-id="05db7-145"><list type="table"><listheader><term> 參數值</span><span class="sxs-lookup"><span data-stu-id="05db7-145"><list type="table"><listheader><term> Parameter value</span></span>  
  
 <span data-ttu-id="05db7-146"></term><description> 實作</span><span class="sxs-lookup"><span data-stu-id="05db7-146"></term><description> Implements</span></span>  
  
 <span data-ttu-id="05db7-147"></description></listheader><item><term> System.Security.Cryptography.AsymmetricAlgorithm</span><span class="sxs-lookup"><span data-stu-id="05db7-147"></description></listheader><item><term> System.Security.Cryptography.AsymmetricAlgorithm</span></span>  
  
 <span data-ttu-id="05db7-148"></term><description><see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /></description></item><item><term> RSA</span><span class="sxs-lookup"><span data-stu-id="05db7-148"></term><description><see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /></description></item><item><term> RSA</span></span>  
  
 <span data-ttu-id="05db7-149"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> System.Security.Cryptography.RSA</span><span class="sxs-lookup"><span data-stu-id="05db7-149"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> System.Security.Cryptography.RSA</span></span>  
  
 <span data-ttu-id="05db7-150"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> DSA</span><span class="sxs-lookup"><span data-stu-id="05db7-150"></term><description><see cref="T:System.Security.Cryptography.RSA" /></description></item><item><term> DSA</span></span>  
  
 <span data-ttu-id="05db7-151"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> System.Security.Cryptography.DSA</span><span class="sxs-lookup"><span data-stu-id="05db7-151"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> System.Security.Cryptography.DSA</span></span>  
  
 <span data-ttu-id="05db7-152"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> ECDsa</span><span class="sxs-lookup"><span data-stu-id="05db7-152"></term><description><see cref="T:System.Security.Cryptography.DSA" /></description></item><item><term> ECDsa</span></span>  
  
 <span data-ttu-id="05db7-153"></term><description><see cref="T:System.Security.Cryptography.ECDsa" /></description></item><item><term> ECDsaCng</span><span class="sxs-lookup"><span data-stu-id="05db7-153"></term><description><see cref="T:System.Security.Cryptography.ECDsa" /></description></item><item><term> ECDsaCng</span></span>  
  
 <span data-ttu-id="05db7-154"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> System.Security.Cryptography.ECDsaCng</span><span class="sxs-lookup"><span data-stu-id="05db7-154"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> System.Security.Cryptography.ECDsaCng</span></span>  
  
 <span data-ttu-id="05db7-155"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> ECDH</span><span class="sxs-lookup"><span data-stu-id="05db7-155"></term><description><see cref="T:System.Security.Cryptography.ECDsaCng" /></description></item><item><term> ECDH</span></span>  
  
 <span data-ttu-id="05db7-156"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellman</span><span class="sxs-lookup"><span data-stu-id="05db7-156"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellman</span></span>  
  
 <span data-ttu-id="05db7-157"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellmanCng</span><span class="sxs-lookup"><span data-stu-id="05db7-157"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellman" /></description></item><item><term> ECDiffieHellmanCng</span></span>  
  
 <span data-ttu-id="05db7-158"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item><item><term> System.Security.Cryptography.ECDiffieHellmanCng</span><span class="sxs-lookup"><span data-stu-id="05db7-158"></term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item><item><term> System.Security.Cryptography.ECDiffieHellmanCng</span></span>  
  
 </term><description><see cref="T:System.Security.Cryptography.ECDiffieHellmanCng" /></description></item></list></param>
        <summary><span data-ttu-id="05db7-159">建立非對稱演算法之指定實作的執行個體。</span><span class="sxs-lookup"><span data-stu-id="05db7-159">Creates an instance of the specified implementation of an asymmetric algorithm.</span></span></summary>
        <returns><span data-ttu-id="05db7-160">指定之非對稱演算法實作的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="05db7-160">A new instance of the specified asymmetric algorithm implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05db7-161">下列程式碼範例示範如何實作<xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A>擴充的類別中的方法。</span><span class="sxs-lookup"><span data-stu-id="05db7-161">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.Create%2A> method in an extended class.</span></span> <span data-ttu-id="05db7-162">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-162">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#12)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#12)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="05db7-163">將 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 類別目前的執行個體所使用的資源全部釋出。</span><span class="sxs-lookup"><span data-stu-id="05db7-163">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="05db7-164">將 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 類別目前的執行個體所使用的資源全部釋出。</span><span class="sxs-lookup"><span data-stu-id="05db7-164">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05db7-165">`Dispose` 使用完畢時，請呼叫 <xref:System.Security.Cryptography.AsymmetricAlgorithm>。</span><span class="sxs-lookup"><span data-stu-id="05db7-165">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span></span> <span data-ttu-id="05db7-166">`Dispose` 方法會將 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="05db7-166">The `Dispose` method leaves the <xref:System.Security.Cryptography.AsymmetricAlgorithm> in an unusable state.</span></span> <span data-ttu-id="05db7-167">在呼叫`Dispose`，您必須釋放所有參考<xref:System.Security.Cryptography.AsymmetricAlgorithm>讓記憶體回收行程可以回收記憶體的<xref:System.Security.Cryptography.AsymmetricAlgorithm>所佔用。</span><span class="sxs-lookup"><span data-stu-id="05db7-167">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.AsymmetricAlgorithm> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.AsymmetricAlgorithm> was occupying.</span></span>  
  
 <span data-ttu-id="05db7-168">如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="05db7-168">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="05db7-169">在您釋放最後一個 `Dispose` 參考之前，請務必呼叫 <xref:System.Security.Cryptography.AsymmetricAlgorithm>。</span><span class="sxs-lookup"><span data-stu-id="05db7-169">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.AsymmetricAlgorithm>.</span></span> <span data-ttu-id="05db7-170">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="05db7-170">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.AsymmetricAlgorithm> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="05db7-171"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="05db7-171"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="05db7-172">釋放 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 類別所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="05db7-172">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> class and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05db7-173">這個方法會呼叫公用`Dispose()`方法和`Finalize`方法。</span><span class="sxs-lookup"><span data-stu-id="05db7-173">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="05db7-174">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="05db7-174">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="05db7-175">`Finalize` 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="05db7-175">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="05db7-176">`disposing` 參數為 `true` 時，這個方法會釋放 <xref:System.Security.Cryptography.AsymmetricAlgorithm> 參考的任何 Managed 物件所掌握的資源。</span><span class="sxs-lookup"><span data-stu-id="05db7-176">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.AsymmetricAlgorithm> references.</span></span> <span data-ttu-id="05db7-177">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="05db7-177">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="05db7-178"><see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="05db7-178"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="05db7-179">在覆寫<see langword="Dispose(Boolean)" />，請小心不要參考到先前處置之前呼叫中的物件<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="05db7-179">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="05db7-180">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="05db7-180">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="05db7-181">如需有關<see langword="Dispose" />和<see langword="Finalize" />，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)。</span><span class="sxs-lookup"><span data-stu-id="05db7-181">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FromXmlString">
      <MemberSignature Language="C#" Value="public virtual void FromXmlString (string xmlString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FromXmlString(string xmlString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FromXmlString (xmlString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FromXmlString(System::String ^ xmlString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlString"><span data-ttu-id="05db7-182">要用來重新建構 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 物件的 XML 字串。</span><span class="sxs-lookup"><span data-stu-id="05db7-182">The XML string to use to reconstruct the <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span></param>
        <summary><span data-ttu-id="05db7-183">在衍生類別中覆寫時，從 XML 字串重新建構 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="05db7-183">When overridden in a derived class, reconstructs an <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object from an XML string.</span></span> <span data-ttu-id="05db7-184">否則，擲回 <see cref="T:System.NotImplementedException" />。</span><span class="sxs-lookup"><span data-stu-id="05db7-184">Otherwise, throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05db7-185">下列程式碼範例示範如何實作<xref:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString%2A>方法來剖析指定的 XML 字串，以填入目前<xref:System.Security.Cryptography.CspParameters>物件。</span><span class="sxs-lookup"><span data-stu-id="05db7-185">The following code example demonstrates how to implement the <xref:System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString%2A> method to parse the specified XML string to populate the current <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="05db7-186">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-186">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#4)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#4)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public virtual string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05db7-187">在衍生類別中覆寫時，取得金鑰交換演算法的名稱。</span><span class="sxs-lookup"><span data-stu-id="05db7-187">When overridden in a derived class, gets the name of the key exchange algorithm.</span></span> <span data-ttu-id="05db7-188">否則，擲回 <see cref="T:System.NotImplementedException" />。</span><span class="sxs-lookup"><span data-stu-id="05db7-188">Otherwise, throws an <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <value><span data-ttu-id="05db7-189">金鑰交換演算法的名稱。</span><span class="sxs-lookup"><span data-stu-id="05db7-189">The name of the key exchange algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05db7-190">下列程式碼範例示範如何覆寫<xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm%2A>屬性，以傳回金鑰交換演算法的名稱。</span><span class="sxs-lookup"><span data-stu-id="05db7-190">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm%2A> property to return the name for the key exchange algorithm.</span></span> <span data-ttu-id="05db7-191">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-191">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#6)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#6)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public virtual int KeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05db7-192">取得或設定非對稱演算法使用的金鑰模數大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="05db7-192">Gets or sets the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="05db7-193">非對稱演算法使用的金鑰模數大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="05db7-193">The size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05db7-194">有效的金鑰大小由非對稱演算法的特定實作，而且會列於<xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="05db7-194">The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05db7-195">下列程式碼範例示範如何覆寫<xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A>屬性，確認它是否在本機中識別範圍內`keySizes`成員變數。</span><span class="sxs-lookup"><span data-stu-id="05db7-195">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> property to verify that it falls within the range identified in the local `keySizes` member variable.</span></span> <span data-ttu-id="05db7-196">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-196">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#9)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#9)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="05db7-197">索引鍵模數大小不正確。</span><span class="sxs-lookup"><span data-stu-id="05db7-197">The key modulus size is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="KeySizeValue">
      <MemberSignature Language="C#" Value="protected int KeySizeValue;" />
      <MemberSignature Language="ILAsm" Value=".field family int32 KeySizeValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected KeySizeValue As Integer " />
      <MemberSignature Language="C++ CLI" Value="protected: int KeySizeValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05db7-198">表示非對稱演算法使用的金鑰模數大小，以位元為單位。</span><span class="sxs-lookup"><span data-stu-id="05db7-198">Represents the size, in bits, of the key modulus used by the asymmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05db7-199">有效的金鑰大小由非對稱演算法的特定實作，而且會列於<xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="05db7-199">The valid key sizes are specified by the particular implementation of the asymmetric algorithm and are listed in the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 <span data-ttu-id="05db7-200">這個欄位透過存取<xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="05db7-200">This field is accessed through the <xref:System.Security.Cryptography.AsymmetricAlgorithm.KeySize%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05db7-201">取得非對稱演算法所支援的金鑰大小。</span><span class="sxs-lookup"><span data-stu-id="05db7-201">Gets the key sizes that are supported by the asymmetric algorithm.</span></span></summary>
        <value><span data-ttu-id="05db7-202">含有非對稱演算法所支援之金鑰大小的陣列。</span><span class="sxs-lookup"><span data-stu-id="05db7-202">An array that contains the key sizes supported by the asymmetric algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05db7-203">非對稱演算法只支援金鑰大小符合此陣列中的項目。</span><span class="sxs-lookup"><span data-stu-id="05db7-203">The asymmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="05db7-204">下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>屬性，以擷取<xref:System.Security.Cryptography.KeySizes.MinSize%2A>， <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>，和<xref:System.Security.Cryptography.KeySizes.SkipSize%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="05db7-204">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property to retrieve the <xref:System.Security.Cryptography.KeySizes.MinSize%2A>, <xref:System.Security.Cryptography.KeySizes.MaxSize%2A>, and <xref:System.Security.Cryptography.KeySizes.SkipSize%2A> properties.</span></span> <span data-ttu-id="05db7-205">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-205">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcryptoimpl.cpp#10)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#10)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizesValue">
      <MemberSignature Language="C#" Value="protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Security.Cryptography.KeySizes[] LegalKeySizesValue" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue" />
      <MemberSignature Language="VB.NET" Value="Protected LegalKeySizesValue As KeySizes() " />
      <MemberSignature Language="C++ CLI" Value="protected: cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizesValue;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05db7-206">指定非對稱演算法所支援的金鑰大小。</span><span class="sxs-lookup"><span data-stu-id="05db7-206">Specifies the key sizes that are supported by the asymmetric algorithm.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="05db7-207">非對稱演算法只支援金鑰大小符合此陣列中的項目。</span><span class="sxs-lookup"><span data-stu-id="05db7-207">The asymmetric algorithm supports only key sizes that match an entry in this array.</span></span>  
  
 <span data-ttu-id="05db7-208">這個欄位透過存取<xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="05db7-208">This field is accessed through the <xref:System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public virtual string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="05db7-209">在衍生類別中實作時，取得簽章演算法的名稱。</span><span class="sxs-lookup"><span data-stu-id="05db7-209">When implemented in a derived class, gets the name of the signature algorithm.</span></span> <span data-ttu-id="05db7-210">否則，一律擲回 <see cref="T:System.NotImplementedException" />。</span><span class="sxs-lookup"><span data-stu-id="05db7-210">Otherwise, always throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <value><span data-ttu-id="05db7-211">簽章演算法的名稱。</span><span class="sxs-lookup"><span data-stu-id="05db7-211">The name of the signature algorithm.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05db7-212">下列程式碼範例示範如何覆寫<xref:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm%2A>屬性傳回的簽章演算法的名稱。</span><span class="sxs-lookup"><span data-stu-id="05db7-212">The following code example demonstrates how to override the <xref:System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm%2A> property to return the name of the signature algorithm.</span></span> <span data-ttu-id="05db7-213">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-213">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#7)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#7)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXmlString">
      <MemberSignature Language="C#" Value="public virtual string ToXmlString (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToXmlString(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToXmlString (includePrivateParameters As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToXmlString(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="05db7-214">如果要包含私用參數，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="05db7-214"><see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="05db7-215">在衍生類別中覆寫時，建立並傳回目前 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 物件的 XML 字串表示。</span><span class="sxs-lookup"><span data-stu-id="05db7-215">When overridden in a derived class, creates and returns an XML string representation of the current <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span> <span data-ttu-id="05db7-216">否則，擲回 <see cref="T:System.NotImplementedException" />。</span><span class="sxs-lookup"><span data-stu-id="05db7-216">Otherwise, throws a <see cref="T:System.NotImplementedException" />.</span></span></summary>
        <returns><span data-ttu-id="05db7-217">目前 <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> 物件的 XML 字串編碼方式。</span><span class="sxs-lookup"><span data-stu-id="05db7-217">An XML string encoding of the current <see cref="T:System.Security.Cryptography.AsymmetricAlgorithm" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="05db7-218">下列程式碼範例示範如何呼叫<xref:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString%2A>方法參數的 XML 表示法建立在目前<xref:System.Security.Cryptography.AsymmetricAlgorithm>物件。</span><span class="sxs-lookup"><span data-stu-id="05db7-218">The following code example demonstrates how to call the <xref:System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString%2A> method to create an XML representation of the parameters in the current <xref:System.Security.Cryptography.AsymmetricAlgorithm> object.</span></span> <span data-ttu-id="05db7-219">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Security.Cryptography.AsymmetricAlgorithm>類別。</span><span class="sxs-lookup"><span data-stu-id="05db7-219">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.AsymmetricAlgorithm> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/cpp/customcrypto.cpp#5)]
 [!code-csharp[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/CS/customcrypto.cs#5)]
 [!code-vb[System.Security.Cryptography.AsymmetricAlgorithm#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.AsymmetricAlgorithm/VB/customcrypto.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>