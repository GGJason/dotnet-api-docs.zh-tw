<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CipherMode.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57c70ff3bf1a311578eeb87faf3ca052f53d7933f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c70ff3bf1a311578eeb87faf3ca052f53d7933f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.CipherMode">
          <source>Specifies the block cipher mode to use for encryption.</source>
          <target state="translated">指定要用來加密的區塊加密模式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Block cipher algorithms encrypt data in block units, rather than a single byte at a time.</source>
          <target state="translated">區塊的加密演算法加密資料以區塊為單位，而非一次的單一位元組。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>The most common block size is 8 bytes.</source>
          <target state="translated">最常見的區塊大小是 8 位元組。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Because each block is heavily processed, block ciphers provide a higher level of security than stream ciphers.</source>
          <target state="translated">每個區塊的處理時有很大，因為區塊密碼會提供較高層級的安全性比串流式密碼。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>However, block cipher algorithms tend to execute more slowly than stream ciphers.</source>
          <target state="translated">不過，通常比串流式密碼的放慢執行區塊的加密演算法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Block ciphers use the same encryption algorithm for each block.</source>
          <target state="translated">區塊密碼的每個區塊，使用相同的加密演算法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Because of this, a block of plain text will always return the same cipher text when encrypted with the same key and algorithm.</source>
          <target state="translated">因為這個緣故，純文字區塊一定會傳回相同的加密文字加密使用相同的索引鍵和演算法。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>Because this behavior can be used to crack a cipher, cipher modes are introduced that modify the encryption process based on feedback from earlier block encryptions.</source>
          <target state="translated">因為此行為可以用來破解加密，加密模式會引進修改加密程序，根據先前區塊加密回饋。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.CipherMode">
          <source>The resulting encryption provides a higher level of security than a simple block encryption.</source>
          <target state="translated">產生的加密會提供比簡單的區塊加密更高的安全性層級。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>The Cipher Block Chaining (<ph id="ph1">&lt;see langword="CBC" /&gt;</ph>) mode introduces feedback.</source>
          <target state="translated">密碼區塊鏈結 (Cipher Block Chaining，<ph id="ph1">&lt;see langword="CBC" /&gt;</ph>) 模式會引用回饋。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>Before each plain text block is encrypted, it is combined with the cipher text of the previous block by a bitwise exclusive OR operation.</source>
          <target state="translated">在每個純文字區塊被加密之前，會以位元互斥 OR 運算將它與前一個區塊的密碼文字相結合。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>This ensures that even if the plain text contains many identical blocks, they will each encrypt to a different cipher text block.</source>
          <target state="translated">這樣可以確保即使純文字含有許多相同的區塊，也會各自被加密成為不同的密碼文字區塊。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>The initialization vector is combined with the first plain text block by a bitwise exclusive OR operation before the block is encrypted.</source>
          <target state="translated">初始化向量在區塊被加密之前，會與第一個純文字區塊以位元互斥 OR 運算結合。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>If a single bit of the cipher text block is mangled, the corresponding plain text block will also be mangled.</source>
          <target state="translated">如果密碼文字區塊的單一位元受損，對應的純文字區塊也會受損。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CBC">
          <source>In addition, a bit in the subsequent block, in the same position as the original mangled bit, will be mangled.</source>
          <target state="translated">此外，在後續區塊中，與原來受損位元在同一位置的位元也會受損。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>The Cipher Feedback (<ph id="ph1">&lt;see langword="CFB" /&gt;</ph>) mode processes small increments of plain text into cipher text, instead of processing an entire block at a time.</source>
          <target state="translated">密碼回饋 (Cipher Feedback，<ph id="ph1">&lt;see langword="CFB" /&gt;</ph>) 模式會將純文字以小量的增量方式處理成密碼文字，而不是一次處理整個區塊。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>This mode uses a shift register that is one block in length and is divided into sections.</source>
          <target state="translated">這個模式會使用移位 (Shift) 暫存器，它的長度為一個區塊並且分成若干個區段。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>For example, if the block size is 8 bytes, with one byte processed at a time, the shift register is divided into eight sections.</source>
          <target state="translated">舉例來說，如果區塊的大小為 8 個位元組，每次處理一個位元組，那麼位移暫存器就會分成八個區段。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>If a bit in the cipher text is mangled, one plain text bit is mangled and the shift register is corrupted.</source>
          <target state="translated">如果密碼文字中某個位元受損，那麼就會有一個純文字位元受損，而且位移暫存器也就損毀了。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>This results in the next several plain text increments being mangled until the bad bit is shifted out of the shift register.</source>
          <target state="translated">這樣會造成接下來的幾個純文字增量也跟著受損，直到損壞的位元被位移到位移暫存器之外為止。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>The default feedback size can vary by algorithm, but is typically either 8 bits or the number of bits of the block size.</source>
          <target state="translated">預設的回饋大小可能因演算法而異，但通常是 8 個位元或是區塊大小的位元數。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>You can alter the number of feedback bits by using the <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /&gt;</ph> property.</source>
          <target state="translated">您可以使用 <ph id="ph1">&lt;see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /&gt;</ph> 屬性來變更回饋的位元數。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CFB">
          <source>Algorithms that support CFB use this property to set the feedback.</source>
          <target state="translated">支援 CFB 的演算法會使用這個屬性來設定回饋。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CTS">
          <source>The Cipher Text Stealing (<ph id="ph1">&lt;see langword="CTS" /&gt;</ph>) mode handles any length of plain text and produces cipher text whose length matches the plain text length.</source>
          <target state="translated">密碼文字竊取 (Cipher Text Stealing，<ph id="ph1">&lt;see langword="CTS" /&gt;</ph>) 模式可處理任何長度的純文字，並且會產生與純文字長度相符的密碼文字。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.CTS">
          <source>This mode behaves like the <ph id="ph1">&lt;see langword="CBC" /&gt;</ph> mode for all but the last two blocks of the plain text.</source>
          <target state="translated">這個模式的行為除了純文字的最後兩個區塊之外，其餘都很像是 <ph id="ph1">&lt;see langword="CBC" /&gt;</ph> 模式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>The Electronic Codebook (<ph id="ph1">&lt;see langword="ECB" /&gt;</ph>) mode encrypts each block individually.</source>
          <target state="translated">電子密碼書 (Electronic Codebook，<ph id="ph1">&lt;see langword="ECB" /&gt;</ph>) 模式會個別加密每一個區塊。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>Any blocks of plain text that are identical and in the same message, or that are in a different message encrypted with the same key, will be transformed into identical cipher text blocks.</source>
          <target state="translated">任何相同且在同一訊息中 (或在不同訊息中而以相同金鑰加密) 的純文字區塊，都會被轉換成相同的密碼文字區塊。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source><bpt id="p1">**</bpt>Important<ept id="p1">**</ept>:  This mode is not recommended because it opens the door for multiple security exploits.</source>
          <target state="translated"><bpt id="p1">**</bpt>重要資訊<ept id="p1">**</ept>：不建議您使用這個模式，因為這會使系統門戶洞開，讓許多安全性入侵程式有機可趁。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>If the plain text to be encrypted contains substantial repetition, it is feasible for the cipher text to be broken one block at a time.</source>
          <target state="translated">如果要加密的純文字含有相當多的重複，那麼密碼文字有可能一次被破解一個區塊。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>It is also possible to use block analysis to determine the encryption key.</source>
          <target state="translated">也有可能使用區塊分析來判斷加密金鑰。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.ECB">
          <source>Also, an active adversary can substitute and exchange individual blocks without detection, which allows blocks to be saved and inserted into the stream at other points without detection.</source>
          <target state="translated">此外，積極的入侵者還可以取代和交換個別區塊而不被察覺，也就是可以在不知不覺中將區塊儲存並插入至資料流的其他位置。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>The Output Feedback (<ph id="ph1">&lt;see langword="OFB" /&gt;</ph>) mode processes small increments of plain text into cipher text instead of processing an entire block at a time.</source>
          <target state="translated">輸出回饋 (Output Feedback，<ph id="ph1">&lt;see langword="OFB" /&gt;</ph>) 模式會將純文字以小量的增量方式處理成密碼文字，而不是一次處理整個區塊。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>This mode is similar to <ph id="ph1">&lt;see langword="CFB" /&gt;</ph>; the only difference between the two modes is the way that the shift register is filled.</source>
          <target state="translated">這個模式很類似 <ph id="ph1">&lt;see langword="CFB" /&gt;</ph>；這兩個模式唯一的差異在於填入位移暫存器的方式。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>If a bit in the cipher text is mangled, the corresponding bit of plain text will be mangled.</source>
          <target state="translated">如果密碼文字中某個位元受損，對應的純文字位元也會受損。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Security.Cryptography.CipherMode.OFB">
          <source>However, if there are extra or missing bits from the cipher text, the plain text will be mangled from that point on.</source>
          <target state="translated">但是，如果密碼文字中有多出來的或遺失的位元，那麼從該處開始的純文字都會受損。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>