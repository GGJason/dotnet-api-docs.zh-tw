<Type Name="RC2CryptoServiceProvider" FullName="System.Security.Cryptography.RC2CryptoServiceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16bc262c2a7f325f87f9909a56b1c4bab0fe051d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36529332" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RC2CryptoServiceProvider : System.Security.Cryptography.RC2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RC2CryptoServiceProvider extends System.Security.Cryptography.RC2" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RC2CryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RC2CryptoServiceProvider&#xA;Inherits RC2" />
  <TypeSignature Language="C++ CLI" Value="public ref class RC2CryptoServiceProvider sealed : System::Security::Cryptography::RC2" />
  <TypeSignature Language="F#" Value="type RC2CryptoServiceProvider = class&#xA;    inherit RC2" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RC2</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="71832-101">Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <see cref="T:System.Security.Cryptography.RC2" /> algorithm.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71832-101">Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <see cref="T:System.Security.Cryptography.RC2" /> algorithm.</span>
      </span>
      <span data-ttu-id="71832-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="71832-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71832-103"><xref:System.Security.Cryptography.RC2CryptoServiceProvider>實作 8 位元為增量來支援從 40 位元的金鑰長度為 128 位元。</span><span class="sxs-lookup"><span data-stu-id="71832-103">The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.</span></span>  
  
 <span data-ttu-id="71832-104"><xref:System.Security.Cryptography.RC2CryptoServiceProvider>物件為區塊編碼器來加密及解密的 8 個位元組的區塊中的資料。</span><span class="sxs-lookup"><span data-stu-id="71832-104">The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object is a block cipher that encrypts and decrypts data in blocks of 8 bytes.</span></span>  <span data-ttu-id="71832-105">這個類別會填補的最後一個資料區塊，如果它是不超過 8 個位元組。</span><span class="sxs-lookup"><span data-stu-id="71832-105">This class pads the final block of data if it is less than 8 bytes.</span></span>  <span data-ttu-id="71832-106">由於這個填補，加密資料的長度可能大於原始純文字。</span><span class="sxs-lookup"><span data-stu-id="71832-106">As a result of this padding, the length of encrypted data could be greater than the original plaintext.</span></span>  
  
 <span data-ttu-id="71832-107">請注意，<xref:System.Security.Cryptography.RC2CryptoServiceProvider>物件不會使用 salt。</span><span class="sxs-lookup"><span data-stu-id="71832-107">Note that the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> object does not use salt.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="71832-108">有先進加密標準 (Advanced Encryption Standard，AES) 這個較新的對稱加密演算法可供使用。</span><span class="sxs-lookup"><span data-stu-id="71832-108">A newer symmetric encryption algorithm, Advanced Encryption Standard (AES), is available.</span></span> <span data-ttu-id="71832-109">請考慮使用<xref:System.Security.Cryptography.Aes>演算法和其衍生的類別，而不是<xref:System.Security.Cryptography.RC2CryptoServiceProvider>類別。</span><span class="sxs-lookup"><span data-stu-id="71832-109">Consider using the <xref:System.Security.Cryptography.Aes> algorithm and its derived classes instead of the <xref:System.Security.Cryptography.RC2CryptoServiceProvider> class.</span></span> <span data-ttu-id="71832-110">使用<xref:System.Security.Cryptography.RC2CryptoServiceProvider>只為了與舊版的應用程式和資料的相容性。</span><span class="sxs-lookup"><span data-stu-id="71832-110">Use <xref:System.Security.Cryptography.RC2CryptoServiceProvider> only for compatibility with legacy applications and data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71832-111">下列程式碼範例會加密，然後再解密字串。</span><span class="sxs-lookup"><span data-stu-id="71832-111">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RC2CryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RC2CryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71832-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RC2CryptoServiceProvider" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-112">Initializes a new instance of the <see cref="T:System.Security.Cryptography.RC2CryptoServiceProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="71832-113">下列程式碼範例會加密，然後再解密字串。</span><span class="sxs-lookup"><span data-stu-id="71832-113">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="71832-114">The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-114">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="71832-115">A non-compliant FIPS algorithm was found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-115">A non-compliant FIPS algorithm was found.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDecryptor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71832-116">Creates a symmetric decryptor object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-116">Creates a symmetric decryptor object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDecryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="override this.CreateDecryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="rC2CryptoServiceProvider.CreateDecryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="71832-117">The secret key to use for the symmetric algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-117">The secret key to use for the symmetric algorithm.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="71832-118">The initialization vector to use for the symmetric algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-118">The initialization vector to use for the symmetric algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71832-119">Creates a symmetric <see cref="T:System.Security.Cryptography.RC2" /> decryptor object with the specified key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-119">Creates a symmetric <see cref="T:System.Security.Cryptography.RC2" /> decryptor object with the specified key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />)and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71832-120">A symmetric <see cref="T:System.Security.Cryptography.RC2" /> decryptor object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-120">A symmetric <see cref="T:System.Security.Cryptography.RC2" /> decryptor object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71832-121">這個方法用來解密加密的訊息建立使用<xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A>多載具有相同參數。</span><span class="sxs-lookup"><span data-stu-id="71832-121">This method is used to decrypt an encrypted message created using the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71832-122">下列程式碼範例會加密，然後再解密字串。</span><span class="sxs-lookup"><span data-stu-id="71832-122">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="71832-123">An <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> cipher mode was used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-123">An <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> cipher mode was used.</span>
          </span>
          <span data-ttu-id="71832-124">-or-  A <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> cipher mode with a feedback size other than 8 bits was used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-124">-or-  A <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> cipher mode with a feedback size other than 8 bits was used.</span>
          </span>
          <span data-ttu-id="71832-125">-or-  An invalid key size was used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-125">-or-  An invalid key size was used.</span>
          </span>
          <span data-ttu-id="71832-126">-or-  The algorithm key size was not available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-126">-or-  The algorithm key size was not available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEncryptor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="71832-127">Creates a symmetric encryptor object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-127">Creates a symmetric encryptor object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEncryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="override this.CreateEncryptor : byte[] * byte[] -&gt; System.Security.Cryptography.ICryptoTransform" Usage="rC2CryptoServiceProvider.CreateEncryptor (rgbKey, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">
          <span data-ttu-id="71832-128">The secret key to use for the symmetric algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-128">The secret key to use for the symmetric algorithm.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="71832-129">The initialization vector to use for the symmetric algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-129">The initialization vector to use for the symmetric algorithm.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="71832-130">Creates a symmetric <see cref="T:System.Security.Cryptography.RC2" /> encryptor object with the specified key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-130">Creates a symmetric <see cref="T:System.Security.Cryptography.RC2" /> encryptor object with the specified key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) and initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="71832-131">A symmetric <see cref="T:System.Security.Cryptography.RC2" /> encryptor object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-131">A symmetric <see cref="T:System.Security.Cryptography.RC2" /> encryptor object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71832-132">使用<xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A>多載具有相同的參數來解密此方法的結果。</span><span class="sxs-lookup"><span data-stu-id="71832-132">Use the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71832-133">下列程式碼範例會加密，然後再解密字串。</span><span class="sxs-lookup"><span data-stu-id="71832-133">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="71832-134">An <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> cipher mode was used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-134">An <see cref="F:System.Security.Cryptography.CipherMode.OFB" /> cipher mode was used.</span>
          </span>
          <span data-ttu-id="71832-135">-or-  A <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> cipher mode with a feedback size other than 8 bits was used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-135">-or-  A <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> cipher mode with a feedback size other than 8 bits was used.</span>
          </span>
          <span data-ttu-id="71832-136">-or-  An invalid key size was used.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-136">-or-  An invalid key size was used.</span>
          </span>
          <span data-ttu-id="71832-137">-or-  The algorithm key size was not available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-137">-or-  The algorithm key size was not available.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EffectiveKeySize">
      <MemberSignature Language="C#" Value="public override int EffectiveKeySize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EffectiveKeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EffectiveKeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EffectiveKeySize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EffectiveKeySize : int with get, set" Usage="System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71832-138">Gets or sets the effective size, in bits, of the secret key used by the <see cref="T:System.Security.Cryptography.RC2" /> algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-138">Gets or sets the effective size, in bits, of the secret key used by the <see cref="T:System.Security.Cryptography.RC2" /> algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71832-139">有效的金鑰大小，以位元，由<see cref="T:System.Security.Cryptography.RC2" />演算法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-139">The effective key size, in bits, used by the <see cref="T:System.Security.Cryptography.RC2" /> algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicUnexpectedOperationException">
          <span data-ttu-id="71832-140">The <see cref="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" /> property was set to a value other than the <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-140">The <see cref="P:System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize" /> property was set to a value other than the <see cref="F:System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateIV">
      <MemberSignature Language="C#" Value="public override void GenerateIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateIV ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateIV();" />
      <MemberSignature Language="F#" Value="override this.GenerateIV : unit -&gt; unit" Usage="rC2CryptoServiceProvider.GenerateIV " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71832-141">Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) to use for the algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-141">Generates a random initialization vector (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) to use for the algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71832-142">使用這個方法產生的隨機<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>時未指定。</span><span class="sxs-lookup"><span data-stu-id="71832-142">Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71832-143">下列程式碼範例會加密，然後再解密字串。</span><span class="sxs-lookup"><span data-stu-id="71832-143">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey();" />
      <MemberSignature Language="F#" Value="override this.GenerateKey : unit -&gt; unit" Usage="rC2CryptoServiceProvider.GenerateKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="71832-144">Generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) to be used for the algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-144">Generates a random key (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) to be used for the algorithm.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71832-145">使用此方法時未指定產生的隨機金鑰。</span><span class="sxs-lookup"><span data-stu-id="71832-145">Use this method to generate a random key when none is specified.</span></span>  
  
 <span data-ttu-id="71832-146"><xref:System.Security.Cryptography.RC2CryptoServiceProvider>實作 8 位元為增量來支援從 40 位元的金鑰長度為 128 位元。</span><span class="sxs-lookup"><span data-stu-id="71832-146">The <xref:System.Security.Cryptography.RC2CryptoServiceProvider> implementation supports key lengths from 40 bits to 128 bits in increments of 8 bits.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71832-147">下列程式碼範例會加密，然後再解密字串。</span><span class="sxs-lookup"><span data-stu-id="71832-147">The following code example encrypts and then decrypts a string.</span></span>  
  
 [!code-csharp[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/CS/class1.cs#1)]
 [!code-vb[System.Security.Cryptography.RC2CryptoServiceProvider Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.RC2CryptoServiceProvider Example/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseSalt">
      <MemberSignature Language="C#" Value="public bool UseSalt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSalt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt" />
      <MemberSignature Language="VB.NET" Value="Public Property UseSalt As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseSalt { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSalt : bool with get, set" Usage="System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="71832-148">Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-148">Gets or sets a value that determines whether to create a key with an 11-byte-long, zero-value salt.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="71832-149">
            <see langword="true" /> 如果金鑰應建立與 11 位元組長、 零值的 salt。否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-149">
              <see langword="true" /> if the key should be created with an 11-byte-long, zero-value salt; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="71832-150">預設值為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="71832-150">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="71832-151"><xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A>屬性可讓您與使用 11 位元組長、 零值的 salt 的現有應用程式交互操作。</span><span class="sxs-lookup"><span data-stu-id="71832-151">The <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> property allows you to interoperate with an existing application that uses an 11-byte-long, zero-value salt.</span></span>  <span data-ttu-id="71832-152">大部分情況下，您不應該使用與 salt<xref:System.Security.Cryptography.RC2CryptoServiceProvider>索引鍵。</span><span class="sxs-lookup"><span data-stu-id="71832-152">For most scenarios, you should not use a salt with an <xref:System.Security.Cryptography.RC2CryptoServiceProvider> key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="71832-153">下列程式碼範例會設定<xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A>屬性`true`，然後加密和解密值。</span><span class="sxs-lookup"><span data-stu-id="71832-153">The following code example sets the <xref:System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt%2A> property to `true`, and then encrypts and decrypts a value.</span></span>  
  
 [!code-cpp[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/cpp/example.cpp#1)]
 [!code-csharp[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/CS/example.cs#1)]
 [!code-vb[Cryptography.RC2CryptoServiceProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.RC2CryptoServiceProvider/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>