<Type Name="LayoutEngine" FullName="System.Windows.Forms.Layout.LayoutEngine">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d763d9741de1ef3eae2cf1833e7afef65840c972" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37576417" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class LayoutEngine" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LayoutEngine extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.LayoutEngine" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LayoutEngine" />
  <TypeSignature Language="C++ CLI" Value="public ref class LayoutEngine abstract" />
  <TypeSignature Language="F#" Value="type LayoutEngine = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dae48-101">提供用來實作配置引擎的基底型別 (Base Class)。</span>
      <span class="sxs-lookup">
        <span data-stu-id="dae48-101">Provides the base class for implementing layout engines.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dae48-102">使用<xref:System.Windows.Forms.Layout.LayoutEngine>類別，在您想要在執行階段建立自訂的版面配置行為。</span><span class="sxs-lookup"><span data-stu-id="dae48-102">Use the <xref:System.Windows.Forms.Layout.LayoutEngine> class when you want to create custom layout behavior at run time.</span></span> <span data-ttu-id="dae48-103">衍生您自己的類別，從<xref:System.Windows.Forms.Layout.LayoutEngine>類別並覆寫<xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A>方法來定義自訂版面配置行為。</span><span class="sxs-lookup"><span data-stu-id="dae48-103">Derive your own class from the <xref:System.Windows.Forms.Layout.LayoutEngine> class and override the <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> method to define your custom layout behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dae48-104">下列程式碼範例示範使用<xref:System.Windows.Forms.Layout.LayoutEngine>類別來實作自訂的版面配置行為。</span><span class="sxs-lookup"><span data-stu-id="dae48-104">The following code example demonstrates the use of the <xref:System.Windows.Forms.Layout.LayoutEngine> class to implement custom layout behavior.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#1)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#1)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LayoutEngine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dae48-105">初始化 <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-105">Initializes a new instance of the <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="dae48-106">
            <para>版面配置行為應該是相同的版面配置引擎的相關聯的容器任何的類別執行個體。基於這個理由，請考慮您的版面配置引擎的建構函式宣告<see langword="protected" />或<see langword="private" />，和實作您的版面配置引擎，作為單一類別。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-106">
              <para>Layout behavior should be the same for any instance of your layout engine's associated container class. For this reason, consider declaring your layout engine's constructor <see langword="protected" /> or <see langword="private" />, and implementing your layout engine as a singleton class.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InitLayout">
      <MemberSignature Language="C#" Value="public virtual void InitLayout (object child, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitLayout(object child, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitLayout (child As Object, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitLayout(System::Object ^ child, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="layoutEngine.InitLayout (child, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="dae48-107">配置引擎將在其中作業的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-107">The container on which the layout engine will operate.</span>
          </span>
        </param>
        <param name="specified">
          <span data-ttu-id="dae48-108">定義容器大小和位置的界限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-108">The bounds defining the container's size and position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae48-109">初始化配置引擎。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-109">Initializes the layout engine.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dae48-110">選擇性地提供中的初始化邏輯<xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dae48-110">Optionally provide initialization logic in the <xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dae48-111">
            <paramref name="child" /> 不是 <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> 可以在上面執行配置的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-111">
              <paramref name="child" /> is not a type on which <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> can perform layout.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="dae48-112">
            <para>覆寫<see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" />方法，以提供您的自訂初始設定行為。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-112">
              <para>Override the <see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" /> method to provide your custom initialization behavior.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public virtual bool Layout (object container, System.Windows.Forms.LayoutEventArgs layoutEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Layout(object container, class System.Windows.Forms.LayoutEventArgs layoutEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Layout(System::Object ^ container, System::Windows::Forms::LayoutEventArgs ^ layoutEventArgs);" />
      <MemberSignature Language="F#" Value="abstract member Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool&#xA;override this.Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool" Usage="layoutEngine.Layout (container, layoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="layoutEventArgs" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="dae48-113">配置引擎將在其中作業的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-113">The container on which the layout engine will operate.</span>
          </span>
        </param>
        <param name="layoutEventArgs">
          <span data-ttu-id="dae48-114">
            <see cref="E:System.Windows.Forms.Control.Layout" /> 事件的事件引數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-114">An event argument from a <see cref="E:System.Windows.Forms.Control.Layout" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dae48-115">要求配置引擎執行一個配置作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-115">Requests that the layout engine perform a layout operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dae48-116">如果 <paramref name="container" /> 的父代 (Parent) 應該再次執行配置，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-116">
              <see langword="true" /> if layout should be performed again by the parent of <paramref name="container" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dae48-117">版面配置引擎上執行配置作業時，會呼叫這個方法`container`參數。</span><span class="sxs-lookup"><span data-stu-id="dae48-117">This method is called when the layout engine is to perform a layout operation on the `container` parameter.</span></span> <span data-ttu-id="dae48-118">您可以檢查的值<xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>， <xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A>，並<xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>上的屬性`layoutEventArgs`決定如果有必要的配置作業。</span><span class="sxs-lookup"><span data-stu-id="dae48-118">You can check the value of the <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>, <xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A>, and <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> properties on `layoutEventArgs` to decide if a layout operation is necessary.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dae48-119">下列程式碼範例示範使用<xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A>方法，以實作自訂的版面配置行為。</span><span class="sxs-lookup"><span data-stu-id="dae48-119">The following code example demonstrates the use of the <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> method to implement custom layout behavior.</span></span> <span data-ttu-id="dae48-120">此程式碼範例是針對提供之較大範例的一部分<xref:System.Windows.Forms.Layout.LayoutEngine>類別。</span><span class="sxs-lookup"><span data-stu-id="dae48-120">This code example is part of a larger example provided for the <xref:System.Windows.Forms.Layout.LayoutEngine> class.</span></span>  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#4)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#4)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="dae48-121">
            <paramref name="container" /> 不是 <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> 可以在上面執行配置的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-121">
              <paramref name="container" /> is not a type on which <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> can perform layout.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="dae48-122">
            <para>覆寫<see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" />方法，以提供自訂的版面配置行為。當配置的內容<paramref name="container" />參數，請務必檢查<see cref="P:System.Windows.Forms.Control.Visible" />每個子控制項的屬性。傳回<see langword="true" />如果您的版面配置引擎的邏輯會決定應該再次執行該版面配置，由容器的父系。這可能是，比方說，當版面配置引擎調整子控制項的大小，並判斷容器，必須以容納新的版面配置的大小增加時。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="dae48-122">
              <para>Override the <see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" /> method to provide your custom layout behavior.  When laying out the contents of the <paramref name="container" /> parameter, be sure to check the <see cref="P:System.Windows.Forms.Control.Visible" /> property of each child control.  Return <see langword="true" /> if your layout engine logic determines that layout should be performed again by the parent of the container. This might occur, for example, when the layout engine resizes child controls and determines that the container must be increased in size to accommodate the new layout.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Forms.LayoutEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>