<Type Name="SyndicationLink" FullName="System.ServiceModel.Syndication.SyndicationLink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fcd7adae7ecadbee1c762ec234fcaf23f0a9441e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36612142" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SyndicationLink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationLink extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationLink" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationLink" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationLink" />
  <TypeSignature Language="F#" Value="type SyndicationLink = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="f3870-101">表示新聞訂閱摘要或項目內的連結。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f3870-101">Represents a link within a syndication feed or item.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-102"><xref:System.ServiceModel.Syndication.SyndicationLink> 可新增至 <xref:System.ServiceModel.Syndication.SyndicationFeed> 或 <xref:System.ServiceModel.Syndication.SyndicationItem>。</span><span class="sxs-lookup"><span data-stu-id="f3870-102"><xref:System.ServiceModel.Syndication.SyndicationLink> can be added to a <xref:System.ServiceModel.Syndication.SyndicationFeed> or <xref:System.ServiceModel.Syndication.SyndicationItem>.</span></span> <span data-ttu-id="f3870-103">序列化為 Atom 1.0 時，<xref:System.ServiceModel.Syndication.SyndicationLink> 會寫出做為 `<link>` 項目，而且 <xref:System.ServiceModel.Syndication.SyndicationLink> 屬性 (Property) 也會寫出做為 `<link>` 項目的屬性 (Attribute)。</span><span class="sxs-lookup"><span data-stu-id="f3870-103">When serialized to Atom 1.0 a <xref:System.ServiceModel.Syndication.SyndicationLink> is written out as a `<link>` element, with the <xref:System.ServiceModel.Syndication.SyndicationLink> properties written out as attributes of the `<link>` element.</span></span> <span data-ttu-id="f3870-104">當序列化至 RSS 2.0 時，第一個<xref:System.ServiceModel.Syndication.SyndicationLink>具有關係 '的替代' 的值會寫出做`<link>`項目。</span><span class="sxs-lookup"><span data-stu-id="f3870-104">When serialized to RSS 2.0, the first <xref:System.ServiceModel.Syndication.SyndicationLink> with a relationship value of ‘alternate’ is written out as a `<link>` element.</span></span> <span data-ttu-id="f3870-105">任何其他連結都會寫出做為 `<a10:link>` 項目。</span><span class="sxs-lookup"><span data-stu-id="f3870-105">Any additional links are written out as a `<a10:link>` elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3870-106">下列範例將示範如何使用 <xref:System.ServiceModel.Syndication.SyndicationLink> 類別。</span><span class="sxs-lookup"><span data-stu-id="f3870-106">The following example shows how to use the <xref:System.ServiceModel.Syndication.SyndicationLink> class.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-107">初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3870-108">建立 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 執行個體的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-108">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationLink (System.ServiceModel.Syndication.SyndicationLink source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationLink source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.ServiceModel.Syndication.SyndicationLink)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationLink)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationLink(System::ServiceModel::Syndication::SyndicationLink ^ source);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : System.ServiceModel.Syndication.SyndicationLink -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationLink" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="f3870-109">用來初始化新執行個體的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-109">The <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance used to initialize the new instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-110">使用指定的執行個體，初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified instance.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink uri" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="f3870-111">已連結之資源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-111">The URI to the linked resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-112">使用指定的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 初始化 <see cref="T:System.Uri" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-112">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f3870-113">下列範例將示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="f3870-113">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationLink#1](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#1)]
 [!code-vb[SyndicationLink#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationLink (Uri uri, string relationshipType, string title, string mediaType, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri uri, string relationshipType, string title, string mediaType, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.#ctor(System.Uri,System.String,System.String,System.String,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationLink(Uri ^ uri, System::String ^ relationshipType, System::String ^ title, System::String ^ mediaType, long length);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationLink : Uri * string * string * string * int64 -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="new System.ServiceModel.Syndication.SyndicationLink (uri, relationshipType, title, mediaType, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="relationshipType" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="f3870-114">已連結之資源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-114">The URI to the linked resource.</span>
          </span>
        </param>
        <param name="relationshipType">
          <span data-ttu-id="f3870-115">關係類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-115">The relationship type.</span>
          </span>
        </param>
        <param name="title">
          <span data-ttu-id="f3870-116">連結標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-116">The title of the link.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="f3870-117">連結的媒體類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-117">The media type of the link.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="f3870-118">已連結之內容的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-118">The length of the linked content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-119">使用指定的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />、關聯類型、標題、媒體類型和長度，初始化 <see cref="T:System.Uri" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-119">Initializes a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> class with the specified <see cref="T:System.Uri" />, relation type, title, media type, and length.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-120">已知的關係類型包括：</span><span class="sxs-lookup"><span data-stu-id="f3870-120">Well-known relationship types include:</span></span>  
  
-   <span data-ttu-id="f3870-121">`alternate` - 連結會識別由包含摘要或項目所描述的資源替代版本。</span><span class="sxs-lookup"><span data-stu-id="f3870-121">`alternate` - The link identifies an alternate version of the resource described by the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f3870-122">`related` - 連結會識別與包含摘要或項目相關的資源。</span><span class="sxs-lookup"><span data-stu-id="f3870-122">`related` - The link identifies a resource related to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f3870-123">`self` - 連結會識別與包含摘要或項目對等的資源。</span><span class="sxs-lookup"><span data-stu-id="f3870-123">`self` - The link identifies a resource equivalent to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f3870-124">`enclosure` - 連結會識別大小可能巨大而需要特殊處理的相關資源。</span><span class="sxs-lookup"><span data-stu-id="f3870-124">`enclosure` - The link identifies a related resource that is potentially large in size and might require special handling.</span></span> <span data-ttu-id="f3870-125">在摘要中發行 Podcast 或音訊檔案時，通常就會使用這個連結關聯。</span><span class="sxs-lookup"><span data-stu-id="f3870-125">This link relation is often used when podcasts or audio files are distributed in a Feed.</span></span>  
  
-   <span data-ttu-id="f3870-126">`via` - 連結會識別身為包含摘要或項目中提供之資訊來源的資源。</span><span class="sxs-lookup"><span data-stu-id="f3870-126">`via` - The link identifies a resource that is the source of the information provided in the containing Feed or Item.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3870-127">下列範例將示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="f3870-127">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeExtensions : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, string&gt;" Usage="System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-128">取得連結的屬性延伸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-128">Gets the attribute extensions of the link.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3870-129">字典，其中包含屬性延伸的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-129">A dictionary that contains a collection of attribute extensions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-130"><xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A> 可讓您新增自訂屬性至 <xref:System.ServiceModel.Syndication.SyndicationLink>。</span><span class="sxs-lookup"><span data-stu-id="f3870-130"><xref:System.ServiceModel.Syndication.SyndicationLink.AttributeExtensions%2A> allows you to add custom attributes to the <xref:System.ServiceModel.Syndication.SyndicationLink>.</span></span> <span data-ttu-id="f3870-131">序列化為 Atom 1.0 時，自訂屬性會在 `<link>` 項目中出現。</span><span class="sxs-lookup"><span data-stu-id="f3870-131">When serialized to Atom 1.0, the custom attributes appear within the `<link>` element.</span></span> <span data-ttu-id="f3870-132">序列化為 RSS 2.0 時，自訂屬性會在 `<a10:link>` 項目中出現。</span><span class="sxs-lookup"><span data-stu-id="f3870-132">When serialized to RSS 2.0, the custom attributes appear in the `<a10:link>` element.</span></span> <span data-ttu-id="f3870-133">您可新增任何有效的 XML 屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-133">Any valid XML attribute can be added.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3870-134">下列程式碼會示範如何將屬性延伸加入至新聞訂閱連結。</span><span class="sxs-lookup"><span data-stu-id="f3870-134">The following code shows how to add an attribute extension to a syndication link.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#4)]
 [!code-vb[LooselyTypedExtensions#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-135">取得與設定新聞訂閱連結的基底 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-135">Gets and sets the base URI of the syndication link.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3870-136">包含新聞訂閱連結基底 URI 的 <see cref="T:System.Uri" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-136">A <see cref="T:System.Uri" /> instance that contains the base URI of the syndication link.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f3870-137">下列程式碼會示範如何設定新聞訂閱連結的基底 URI。</span><span class="sxs-lookup"><span data-stu-id="f3870-137">The following code shows how to set the base URI of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationLink Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationLink Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SyndicationLink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationLink ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationLink&#xA;override this.Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="syndicationLink.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3870-138">建立目前 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 執行個體的複本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-138">Creates a copy of the current <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3870-139">新的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-139">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f3870-140">下列程式碼會示範如何建立新聞訂閱連結的複製品。</span><span class="sxs-lookup"><span data-stu-id="f3870-140">The following code shows how to create a clone of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateAlternateLink">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-141">建立新的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-141">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-142">此方法會建立新的 <xref:System.ServiceModel.Syndication.SyndicationLink> 物件，並將 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 設定為 `alternate`。</span><span class="sxs-lookup"><span data-stu-id="f3870-142">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `alternate`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateAlternateLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateAlternateLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member CreateAlternateLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="f3870-143">已連結之資源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-143">The URI of the linked resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-144">建立具有指定之 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /><see cref="T:System.Uri" />的新 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-144">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3870-145">新的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-145">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f3870-146">下列範例會示範如何建立替代連結。</span><span class="sxs-lookup"><span data-stu-id="f3870-146">The following example shows how to create an alternate link.</span></span>  
  
 [!code-csharp[SyndicationLink#4](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#4)]
 [!code-vb[SyndicationLink#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAlternateLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateAlternateLink(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateAlternateLink(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="static member CreateAlternateLink : Uri * string -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateAlternateLink (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="f3870-147">已連結之資源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-147">The URI of the linked resource.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="f3870-148">連結的媒體類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-148">The media type of the link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-149">建立具有指定之 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 與媒體類型的新 <see cref="T:System.Uri" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-149">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> object with the specified <see cref="T:System.Uri" /> and media type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3870-150">新的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-150">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f3870-151">下列範例會示範如何建立替代連結。</span><span class="sxs-lookup"><span data-stu-id="f3870-151">The following example shows how to create an alternate link.</span></span>  
  
 [!code-csharp[SyndicationLink#5](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#5)]
 [!code-vb[SyndicationLink#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMediaEnclosureLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateMediaEnclosureLink (Uri uri, string mediaType, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateMediaEnclosureLink(class System.Uri uri, string mediaType, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink(System.Uri,System.String,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateMediaEnclosureLink(Uri ^ uri, System::String ^ mediaType, long length);" />
      <MemberSignature Language="F#" Value="static member CreateMediaEnclosureLink : Uri * string * int64 -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateMediaEnclosureLink (uri, mediaType, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="f3870-152">已連結之資源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-152">The URI of the linked resource.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="f3870-153">連結的媒體類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-153">The media type of the link.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="f3870-154">已連結之內容的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-154">The length of the linked content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-155">建立具有指定 URI、媒體類型與長度的媒體內含連結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-155">Creates a media enclosure link with the specified URI, media type, and length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3870-156">新的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-156">A new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-157">此方法會建立新的 <xref:System.ServiceModel.Syndication.SyndicationLink> 物件，並將 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 設定為 `enclosure`。</span><span class="sxs-lookup"><span data-stu-id="f3870-157">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `enclosure`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3870-158">下列範例會示範如何建立媒體內含連結。</span><span class="sxs-lookup"><span data-stu-id="f3870-158">The following example shows how to create a media enclosure link.</span></span>  
  
 [!code-csharp[SyndicationLink#6](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#6)]
 [!code-vb[SyndicationLink#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateSelfLink">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-159">建立關係類型設為 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 的新 <see langword="self" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-159">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the relationship type set to <see langword="self" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-160">此方法會建立新的 <xref:System.ServiceModel.Syndication.SyndicationLink> 物件，並將 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 設定為 `self`。</span><span class="sxs-lookup"><span data-stu-id="f3870-160">This method creates a new <xref:System.ServiceModel.Syndication.SyndicationLink> object and sets <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> to `self`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateSelfLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateSelfLink (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateSelfLink(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateSelfLink(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="static member CreateSelfLink : Uri -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="f3870-161">已連結之資源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-161">The URI to the linked resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-162">建立具有指定 URI 且關聯性類型設定為 <see langword="self" /> 的新 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-162">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI and relationship type set to <see langword="self" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3870-163">
            <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-163">A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f3870-164">下列範例會示範如何建立自我連結。</span><span class="sxs-lookup"><span data-stu-id="f3870-164">The following example shows how to create a self link.</span></span>  
  
 [!code-csharp[SyndicationLink#7](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#7)]
 [!code-vb[SyndicationLink#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSelfLink">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Syndication.SyndicationLink CreateSelfLink (Uri uri, string mediaType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Syndication.SyndicationLink CreateSelfLink(class System.Uri uri, string mediaType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink(System.Uri,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Syndication::SyndicationLink ^ CreateSelfLink(Uri ^ uri, System::String ^ mediaType);" />
      <MemberSignature Language="F#" Value="static member CreateSelfLink : Uri * string -&gt; System.ServiceModel.Syndication.SyndicationLink" Usage="System.ServiceModel.Syndication.SyndicationLink.CreateSelfLink (uri, mediaType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationLink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
        <Parameter Name="mediaType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">
          <span data-ttu-id="f3870-165">已連結之資源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-165">The URI to the linked resource.</span>
          </span>
        </param>
        <param name="mediaType">
          <span data-ttu-id="f3870-166">連結的媒體類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-166">The media type of the link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-167">建立新的 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />，其指定 URI、媒體類型和關係類型設為 <see langword="self" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-167">Creates a new <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> with the specified URI, media type, and relationship type set to <see langword="self" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3870-168">
            <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-168">A <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f3870-169">下列範例會示範如何建立自我連結。</span><span class="sxs-lookup"><span data-stu-id="f3870-169">The following example shows how to create a self link.</span></span>  
  
 [!code-csharp[SyndicationLink#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#8)]
 [!code-vb[SyndicationLink#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementExtensions : System.ServiceModel.Syndication.SyndicationElementExtensionCollection" Usage="System.ServiceModel.Syndication.SyndicationLink.ElementExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-170">取得 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 的項目延伸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-170">Gets the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3870-171">
            <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />，其中包含 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 的項目延伸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-171">A <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" /> that contains the element extensions for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-172">項目延伸是指 Atom 1.0 或 RSS 2.0 規格中未指定的有效 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="f3870-172">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="f3870-173">假設某個有效 XML 項目的命名空間與封入命名空間不同，您便可將任何此類項目新增為延伸。</span><span class="sxs-lookup"><span data-stu-id="f3870-173">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3870-174">下列程式碼會示範如何將項目延伸加入至新聞訂閱連結。</span><span class="sxs-lookup"><span data-stu-id="f3870-174">The following code shows how to add an element extension to a syndication link.</span></span>  
  
 [!code-csharp[LooselyTypedExtensions#5](~/samples/snippets/csharp/VS_Snippets_CFX/looselytypedextensions/cs/snippets.cs#5)]
 [!code-vb[LooselyTypedExtensions#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/looselytypedextensions/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAbsoluteUri">
      <MemberSignature Language="C#" Value="public Uri GetAbsoluteUri ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Uri GetAbsoluteUri() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.GetAbsoluteUri" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAbsoluteUri () As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Uri ^ GetAbsoluteUri();" />
      <MemberSignature Language="F#" Value="member this.GetAbsoluteUri : unit -&gt; Uri" Usage="syndicationLink.GetAbsoluteUri " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f3870-175">取得 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />的絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-175">Gets the absolute URI for the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3870-176">
            <see cref="T:System.Uri" /> 執行個體，其中包含 <see cref="T:System.ServiceModel.Syndication.SyndicationLink" /> 的絕對 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-176">A <see cref="T:System.Uri" /> instance that contains the absolute URI of the <see cref="T:System.ServiceModel.Syndication.SyndicationLink" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f3870-177">下列程式碼會示範如何取得新聞訂閱連結的絕對 URI。</span><span class="sxs-lookup"><span data-stu-id="f3870-177">The following code shows how to get the absolute URI of a syndication link.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int64 with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-178">取得與設定已連結之資源的長度 (以位元組為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-178">Gets and sets the length of the linked resource in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3870-179">已連結之資源的長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-179">The length of the linked resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-180">序列化為 Atom 1.0 時，會將 <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> 屬性 (Property) 寫入做為 `length` 項目中的 `<link>` 屬性 (Attribute)。</span><span class="sxs-lookup"><span data-stu-id="f3870-180">When serialized to Atom 1.0 the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is written as a `length` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="f3870-181">序列化為 RSS 2.0 時，此值會寫入做為 `length` 項目的 `<a10:link>` 屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-181">When serialized to RSS 2.0 this value is written as the `length` attribute of the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3870-182">下列程式碼會示範如何設定新聞訂閱連結的長度。</span><span class="sxs-lookup"><span data-stu-id="f3870-182">The following code shows how to set the length of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="f3870-183">下列 XML 會示範 <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> 屬性如何序列化為 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="f3870-183">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="f3870-184">下列 XML 會說明 <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> 屬性如何序列化為 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="f3870-184">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Length%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public string MediaType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MediaType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MediaType : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-185">取得與設定已連結之資源的媒體類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-185">Gets and sets the media type of the linked resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3870-186">已連結之資源的媒體類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-186">The media type of the linked resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-187">序列化為 Atom 1.0 時，此值會寫入做為 `type` 項目中的 `<link>` 屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-187">When serialized to Atom 1.0 this value is written as a `type` attribute in the `<link>` element.</span></span> <span data-ttu-id="f3870-188">序列化為 RSS 2.0 時，此值會寫入做為 `type` 項目中的 `<a10:link>` 屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-188">When serialized to RSS 2.0 this value is written as the `type` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3870-189">下列程式碼會示範如何設定新聞訂閱連結的媒體類型。</span><span class="sxs-lookup"><span data-stu-id="f3870-189">The following code shows how to set the media type on a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="f3870-190">下列 XML 會示範 <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> 屬性如何序列化為 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="f3870-190">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="f3870-191">下列 XML 會說明 <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> 屬性如何序列化為 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="f3870-191">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.MediaType%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelationshipType">
      <MemberSignature Language="C#" Value="public string RelationshipType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RelationshipType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.RelationshipType" />
      <MemberSignature Language="VB.NET" Value="Public Property RelationshipType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RelationshipType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RelationshipType : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.RelationshipType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-192">取得與設定已連結之資源的關係類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-192">Gets and sets the relationship type of the linked resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3870-193">已連結之資源的關係類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-193">The relationship type of the linked resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-194">已知的關係類型包括：</span><span class="sxs-lookup"><span data-stu-id="f3870-194">Well-known relationship types include:</span></span>  
  
-   <span data-ttu-id="f3870-195">`alternate` - 連結會識別由包含摘要或項目所描述的資源替代版本。</span><span class="sxs-lookup"><span data-stu-id="f3870-195">`alternate` - The link identifies an alternate version of the resource described by the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f3870-196">`related` - 連結會識別與包含摘要或項目相關的資源。</span><span class="sxs-lookup"><span data-stu-id="f3870-196">`related` - The link identifies a resource related to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f3870-197">`self` - 連結會識別與包含摘要或項目對等的資源。</span><span class="sxs-lookup"><span data-stu-id="f3870-197">`self` - The link identifies a resource equivalent to the containing Feed or Item.</span></span>  
  
-   <span data-ttu-id="f3870-198">`enclosure` - 連結會識別大小可能巨大而需要特殊處理的相關資源。</span><span class="sxs-lookup"><span data-stu-id="f3870-198">`enclosure` - The link identifies a related resource that is potentially large in size and might require special handling.</span></span> <span data-ttu-id="f3870-199">在摘要中發行 Podcast 或音訊檔案時，通常就會使用這個連結關聯。</span><span class="sxs-lookup"><span data-stu-id="f3870-199">This link relation is often used when podcasts or audio files are distributed in a Feed.</span></span>  
  
-   <span data-ttu-id="f3870-200">`via` - 連結會識別身為包含摘要或項目中提供之資訊來源的資源。</span><span class="sxs-lookup"><span data-stu-id="f3870-200">`via` - The link identifies a resource that is the source of the information provided in the containing Feed or Item.</span></span>  
  
 <span data-ttu-id="f3870-201">序列化為 Atom 1.0 時，此值會寫出做為 `rel` 項目的 `<link>` 屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-201">When serialized to Atom 1.0 this value is written out as the `rel` attribute of the `<link>` element.</span></span> <span data-ttu-id="f3870-202">序列化為 RSS 2.0 時，此值會寫出做為 `rel` 項目中的 `<a10:link>` 屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-202">When serialized to RSS 2.0, this value is written out as the `rel` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3870-203">下列程式碼會示範如何設定新聞訂閱連結的關係類型。</span><span class="sxs-lookup"><span data-stu-id="f3870-203">The following code shows how to set the relationship type of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="f3870-204">下列 XML 會示範 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 屬性如何序列化為 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="f3870-204">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="f3870-205">下列 XML 會說明 <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> 屬性如何序列化為 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="f3870-205">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.RelationshipType%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-206">取得與設定已連結之資源的標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-206">Gets and sets the title of the linked resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3870-207">已連結之資源的標題。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-207">The title of the linked resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-208">序列化為 Atom 1.0 時，此值會寫出做為 `title` 項目中的 `<link>` 屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-208">When serialized to Atom 1.0 this value is written out as the `title` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="f3870-209">序列化為 RSS 2.0 時，標題會寫出做為 `title` 項目中的 `<a10:link>` 屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-209">When serialized to RSS 2.0 the title is written out as the `title` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3870-210">下列程式碼會示範如何設定新聞訂閱連結的標題。</span><span class="sxs-lookup"><span data-stu-id="f3870-210">The following code shows how to set the title of a syndication link.</span></span>  
  
 [!code-csharp[SyndicationLink#0](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationlink/cs/program.cs#0)]
 [!code-vb[SyndicationLink#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationlink/vb/snippets.vb#0)]  
  
 <span data-ttu-id="f3870-211">下列 XML 會示範 <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> 屬性如何序列化為 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="f3870-211">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="f3870-212">下列 XML 會說明 <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> 屬性如何序列化為 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="f3870-212">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Title%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseAttribute : string * string * string * string -&gt; bool&#xA;override this.TryParseAttribute : string * string * string * string -&gt; bool" Usage="syndicationLink.TryParseAttribute (name, ns, value, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f3870-213">項目的名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-213">The name of the element.</span>
          </span>
        </param>
        <param name="ns">
          <span data-ttu-id="f3870-214">項目的命名空間。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-214">The namespace of the element.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f3870-215">要剖析的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-215">The attribute to parse.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="f3870-216">剖析時要使用的新聞訂閱版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-216">The syndication version to use when parsing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-217">嘗試剖析屬性延伸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-217">Attempts to parse an attribute extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3870-218">指定是否已成功剖析屬性延伸的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-218">A value that specifies whether the attribute extension was parsed successfully.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-219">屬性延伸是指未由 Atom 1.0 或 RSS 2.0 規格定義的自訂屬性，</span><span class="sxs-lookup"><span data-stu-id="f3870-219">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="f3870-220">它們會序列化的屬性為`<link`> 項目。</span><span class="sxs-lookup"><span data-stu-id="f3870-220">They are serialized as an attribute of the `<link`> element.</span></span> <span data-ttu-id="f3870-221">這個方法是延伸點，可讓您處理自訂屬性延伸的還原序列化作業。</span><span class="sxs-lookup"><span data-stu-id="f3870-221">This method is an extension point that allows you to handle the deserialization of a custom attribute extension.</span></span> <span data-ttu-id="f3870-222">若要執行這項動作，您必須自 <xref:System.ServiceModel.Syndication.SyndicationLink> 衍生類別，並且覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="f3870-222">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="f3870-223">這個方法是針對所有無法辨識的屬性延伸來呼叫。</span><span class="sxs-lookup"><span data-stu-id="f3870-223">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f3870-224">在讀取期間遇到無效的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-224">Invalid XML encountered during read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseElement : System.Xml.XmlReader * string -&gt; bool&#xA;override this.TryParseElement : System.Xml.XmlReader * string -&gt; bool" Usage="syndicationLink.TryParseElement (reader, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="f3870-225">要從其中讀取的 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-225">The <see cref="T:System.Xml.XmlReader" /> to read from.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="f3870-226">剖析期間要使用的新聞訂閱版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-226">The syndication version to use while parsing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-227">嘗試剖析項目延伸。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-227">Attempts to parse an element extension.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f3870-228">指定是否已成功剖析項目延伸的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-228">A value that specifies whether the element extension was parsed successfully.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-229">項目延伸是指 Atom 1.0 或 RSS 2.0 規格中未指定的有效 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="f3870-229">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="f3870-230">假設某個有效 XML 項目的命名空間與封入命名空間不同，您便可將任何此類項目新增為延伸。</span><span class="sxs-lookup"><span data-stu-id="f3870-230">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="f3870-231">這個方法是延伸點，可讓您處理自訂項目延伸的還原序列化作業。</span><span class="sxs-lookup"><span data-stu-id="f3870-231">This method is an extension point that allows you to handle the deserialization of a custom element extension.</span></span> <span data-ttu-id="f3870-232">若要執行這項動作，您必須自 <xref:System.ServiceModel.Syndication.SyndicationLink> 衍生類別，並且覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="f3870-232">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="f3870-233">這個方法是針對所有無法辨識的項目延伸來呼叫。</span><span class="sxs-lookup"><span data-stu-id="f3870-233">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="f3870-234">在讀取期間遇到無效的 XML。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-234">Invalid XML encountered during read.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public Uri Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationLink.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Uri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : Uri with get, set" Usage="System.ServiceModel.Syndication.SyndicationLink.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f3870-235">取得與設定已連結之資源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-235">Gets and sets the URI for the linked resource.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f3870-236">
            <see cref="T:System.Uri" /> 執行個體，其中包含已連結之資源的 URI。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-236">A <see cref="T:System.Uri" /> instance that contains the URI for the linked resource.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-237">序列化為 Atom 1.0 時，此值會寫出做為 `href` 項目中的 `<link>` 屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-237">When serialized to Atom 1.0 this value is written out as the `href` attribute in the `<link>` element.</span></span>  
  
 <span data-ttu-id="f3870-238">序列化為 RSS 2.0 時，此值會寫出做為 `href` 項目中的 `<a10:link>` 屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-238">When serialized to RSS 2.0, this value is written out as the `href` attribute in the `<a10:link>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f3870-239">下列程式碼會示範如何設定新聞訂閱連結的 URI。</span><span class="sxs-lookup"><span data-stu-id="f3870-239">The following code shows how to set the URI of a syndication link.</span></span>  
  
  
  
 <span data-ttu-id="f3870-240">下列 XML 會示範 <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> 屬性如何序列化為 Atom 1.0。</span><span class="sxs-lookup"><span data-stu-id="f3870-240">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> property is serialized to Atom 1.0.</span></span>  
  
 [!code-xml[SyndicationLink#2](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/atom.xml#2)]  
  
 <span data-ttu-id="f3870-241">下列 XML 會說明 <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> 屬性如何序列化為 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="f3870-241">The following XML shows how the <xref:System.ServiceModel.Syndication.SyndicationLink.Uri%2A> property is serialized to RSS 2.0.</span></span>  
  
 [!code-xml[SyndicationLink#3](~/samples/snippets/xml/VS_Snippets_CFX/syndicationlink/XML/rss.xml#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationLink.WriteAttributeExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="f3870-242">要寫入的目標 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-242">The <see cref="T:System.Xml.XmlReader" /> to write to.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="f3870-243">寫入期間要使用的新聞訂閱版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-243">The syndication version to use while writing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-244">使用指定的新聞訂閱版本，將屬性延伸寫入指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-244">Writes the attribute extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-245">屬性延伸是指未由 Atom 1.0 或 RSS 2.0 規格定義的自訂屬性，</span><span class="sxs-lookup"><span data-stu-id="f3870-245">Attribute extensions are custom attributes that are not defined by the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="f3870-246">這些屬性會序列化為 `<link>` 項目的屬性。</span><span class="sxs-lookup"><span data-stu-id="f3870-246">They are serialized as an attribute of the `<link>` element.</span></span> <span data-ttu-id="f3870-247">這個方法是擴充點，可讓您處理自訂屬性延伸的序列化作業。</span><span class="sxs-lookup"><span data-stu-id="f3870-247">This method is an extension point that allows you to handle the serialization of custom attribute extensions.</span></span> <span data-ttu-id="f3870-248">若要執行這項動作，您必須自 <xref:System.ServiceModel.Syndication.SyndicationLink> 衍生類別，並且覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="f3870-248">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="f3870-249">這個方法是針對所有無法辨識的屬性延伸來呼叫。</span><span class="sxs-lookup"><span data-stu-id="f3870-249">This method is called for all unrecognized attribute extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationLink.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationLink.WriteElementExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="f3870-250">要寫入的目標 <see cref="T:System.Xml.XmlReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-250">The <see cref="T:System.Xml.XmlReader" /> to write to.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="f3870-251">寫入期間要使用的新聞訂閱版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-251">The syndication version to use while writing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f3870-252">使用指定的新聞訂閱版本，將項目延伸寫入至指定的 <see cref="T:System.Xml.XmlWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f3870-252">Writes the element extensions to the specified <see cref="T:System.Xml.XmlWriter" /> using the specified syndication version.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f3870-253">項目延伸是指 Atom 1.0 或 RSS 2.0 規格中未指定的有效 XML 項目。</span><span class="sxs-lookup"><span data-stu-id="f3870-253">Element extensions are valid XML elements that are not specified in either the Atom 1.0 or RSS 2.0 specifications.</span></span> <span data-ttu-id="f3870-254">假設某個有效 XML 項目的命名空間與封入命名空間不同，您便可將任何此類項目新增為延伸。</span><span class="sxs-lookup"><span data-stu-id="f3870-254">You can add any valid XML element as an extension, provided its namespace is different from the enclosing namespace.</span></span> <span data-ttu-id="f3870-255">這個方法是擴充點，可讓您處理自訂項目延伸的序列化作業。</span><span class="sxs-lookup"><span data-stu-id="f3870-255">This method is an extension point that allows you to handle the serialization of custom element extensions.</span></span> <span data-ttu-id="f3870-256">若要執行這項動作，您必須自 <xref:System.ServiceModel.Syndication.SyndicationLink> 衍生類別，並且覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="f3870-256">To do this, you must derive a class from <xref:System.ServiceModel.Syndication.SyndicationLink> and override this method.</span></span> <span data-ttu-id="f3870-257">這個方法是針對所有無法辨識的項目延伸來呼叫。</span><span class="sxs-lookup"><span data-stu-id="f3870-257">This method is called for all unrecognized element extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>