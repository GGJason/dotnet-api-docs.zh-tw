<Type Name="SyndicationPerson" FullName="System.ServiceModel.Syndication.SyndicationPerson">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="09cd8cf55e1fe68e69c3b14f660903374ca210d9" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48732318" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SyndicationPerson" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyndicationPerson extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.SyndicationPerson" />
  <TypeSignature Language="VB.NET" Value="Public Class SyndicationPerson" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyndicationPerson" />
  <TypeSignature Language="F#" Value="type SyndicationPerson = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.ServiceModel.Web, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示新聞訂閱內容的作者或參與者。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以將 <xref:System.ServiceModel.Syndication.SyndicationPerson> 物件加入至 <xref:System.ServiceModel.Syndication.SyndicationFeed> 和 <xref:System.ServiceModel.Syndication.SyndicationItem> 物件上的作者和參與者集合中。  
  
 序列化為 Atom 1.0 時，會將 <xref:System.ServiceModel.Syndication.SyndicationPerson> 做為 `<author>` 或 `<contributor>` 項目寫出。  
  
 序列化為 RSS 2.0 時，會將 <xref:System.ServiceModel.Syndication.SyndicationPerson> 執行個體做為 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 項目寫出。 序列化 <xref:System.ServiceModel.Syndication.SyndicationPerson> 的方式需取決於新增至 <xref:System.ServiceModel.Syndication.SyndicationPerson> 或 <xref:System.ServiceModel.Syndication.SyndicationFeed> 的 <xref:System.ServiceModel.Syndication.SyndicationItem> 物件數目、<xref:System.ServiceModel.Syndication.SyndicationPerson> 執行個體新增至哪一個集合，以及傳入 `SerializeExtensionAsAtom` 建構函式的 <xref:System.ServiceModel.Syndication.Rss20ItemFormatter.%23ctor%28System.ServiceModel.Syndication.SyndicationItem%2CSystem.Boolean%29> 參數值。 如果只新增一個 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> (或 <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>) 集合中，<xref:System.ServiceModel.Syndication.SyndicationPerson> 會序列化為 `<managingEditor>` 項目。 如果新增一個以上的 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至 <xref:System.ServiceModel.Syndication.SyndicationFeed.Authors%2A> (或 <xref:System.ServiceModel.Syndication.SyndicationItem.Authors%2A>) 集合中，而且 `SerializeExtensionsAsAtom` 設定為 `true`，所有的 <xref:System.ServiceModel.Syndication.SyndicationPerson> 物件都會序列化為 `<a10:author>` 項目。 如果 `SerializeExtensionsAsAtom` 設定為 `false`，<xref:System.ServiceModel.Syndication.SyndicationPerson> 執行個體便不會序列化。 只有在 <xref:System.ServiceModel.Syndication.SyndicationPerson> 設為 <xref:System.ServiceModel.Syndication.SyndicationFeed.Contributors%2A> 時，才會序列化任何新增至 <xref:System.ServiceModel.Syndication.SyndicationItem.Contributors%2A> (或 `SerializeExtensionsAsAtom`) 集合的 `true` 執行個體，在這個情況中會序列化為 `<a10:contributor>` 項目。  
  
   
  
## Examples  
 下列程式碼會示範如何將 <xref:System.ServiceModel.Syndication.SyndicationPerson> 加入至 <xref:System.ServiceModel.Syndication.SyndicationFeed> 執行個體的作者集合。  
  
 [!code-csharp[SyndicationPerson#8](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#8)]
 [!code-vb[SyndicationPerson#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#8)]  
  
 下列 XML 顯示 <xref:System.ServiceModel.Syndication.SyndicationPerson> 如何序列化為 Atom 1.0。  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 下列 XML 顯示 <xref:System.ServiceModel.Syndication.SyndicationPerson> 如何序列化為 RSS 2.0。  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化新的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>初始化新的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SyndicationPerson (System.ServiceModel.Syndication.SyndicationPerson source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Syndication.SyndicationPerson source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.ServiceModel.Syndication.SyndicationPerson)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As SyndicationPerson)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SyndicationPerson(System::ServiceModel::Syndication::SyndicationPerson ^ source);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : System.ServiceModel.Syndication.SyndicationPerson -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.ServiceModel.Syndication.SyndicationPerson" />
      </Parameters>
      <Docs>
        <param name="source">要初始化新執行個體的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 執行個體。</param>
        <summary>使用指定的執行個體，初始化 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (email As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson(System::String ^ email);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : string -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson email" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">人員的電子郵件地址。</param>
        <summary>使用指定的電子郵件地址，初始化新的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例將示範如何呼叫這個建構函式。  
  
 [!code-csharp[SyndicationPerson#2](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#2)]
 [!code-vb[SyndicationPerson#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyndicationPerson (string email, string name, string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string email, string name, string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (email As String, name As String, uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyndicationPerson(System::String ^ email, System::String ^ name, System::String ^ uri);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Syndication.SyndicationPerson : string * string * string -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="new System.ServiceModel.Syndication.SyndicationPerson (email, name, uri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">人員的電子郵件地址。</param>
        <param name="name">人員的名稱。</param>
        <param name="uri">人員的網頁 URI。</param>
        <summary>使用指定的電子郵件地址、名稱及統一資源識別碼 (URI) 初始化新的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列範例將示範如何呼叫這個建構函式。  
  
 [!code-csharp[SyndicationPerson#3](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#3)]
 [!code-vb[SyndicationPerson#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,string&gt; AttributeExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, string&gt; AttributeExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeExtensions As Dictionary(Of XmlQualifiedName, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ AttributeExtensions { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AttributeExtensions : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, string&gt;" Usage="System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.AttributeExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 的屬性延伸。</summary>
        <value>字典，其中包含屬性延伸的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新聞訂閱物件模型允許您新增自訂屬性至 <xref:System.ServiceModel.Syndication.SyndicationPerson> 執行個體。 您可以新增任何有效的 XML 屬性/值。  
  
 序列化為 Atom 1.0 時，會將任何自訂屬性/值做為屬性寫入 `<author>` 或 `<contributor>` 項目中。 序列化為 RSS 2.0 時，會將任何自訂屬性/值做為屬性寫入 `<managingEditor>`、`<a10:contributor>` 或 `<a10:author>` 項目中。  
  
   
  
## Examples  
 下列程式碼示範如何將屬性延伸加入至 <xref:System.ServiceModel.Syndication.SyndicationPerson> 執行個體。  
  
 [!code-csharp[SyndicationPerson#9](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#9)]
 [!code-vb[SyndicationPerson#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#9)]  
  
 下列 XML 會說明 <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> 集合如何序列化為 Atom 1.0。  
  
 [!code-xml[SyndicationPerson#4](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#4)]  
  
 下列 XML 會說明 <xref:System.ServiceModel.Syndication.SyndicationPerson.AttributeExtensions%2A> 集合如何序列化為 RSS 2.0。  
  
 [!code-xml[SyndicationPerson#5](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Syndication.SyndicationPerson Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Syndication.SyndicationPerson Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As SyndicationPerson" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Syndication::SyndicationPerson ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationPerson&#xA;override this.Clone : unit -&gt; System.ServiceModel.Syndication.SyndicationPerson" Usage="syndicationPerson.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationPerson</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立現有 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 執行個體的複本。</summary>
        <returns>新的 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 下列程式碼示範如何複製 <xref:System.ServiceModel.Syndication.SyndicationPerson> 執行個體。  
  
 [!code-csharp[SyndicationPerson#14](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#14)]
 [!code-vb[SyndicationPerson#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementExtensions">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Syndication.SyndicationElementExtensionCollection ElementExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementExtensions As SyndicationElementExtensionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ ElementExtensions { System::ServiceModel::Syndication::SyndicationElementExtensionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ElementExtensions : System.ServiceModel.Syndication.SyndicationElementExtensionCollection" Usage="System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Syndication.ISyndicationElement.ElementExtensions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationElementExtensionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 的項目延伸。</summary>
        <value>包含項目延伸的 <see cref="T:System.ServiceModel.Syndication.SyndicationElementExtensionCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新聞訂閱物件模型允許您新增自訂 XML 項目至 <xref:System.ServiceModel.Syndication.SyndicationPerson> 執行個體。 只要項目命名空間與包含命名空間不同，您便可以新增任何有效的 XML 項目。  
  
 序列化為 Atom 1.0 時，會將任何自訂項目做為 `<author>` 或 `<contributor>` 項目內的 XML 項目寫入。  
  
 序列化為 RSS 2.0 時，會將任何自訂項目做為 `<managingEditor>`、`<a10:contributor>` 或 `<a10:author>` 項目內的 XML 項目寫入。  
  
   
  
## Examples  
 下列程式碼示範如何將項目延伸加入至 <xref:System.ServiceModel.Syndication.SyndicationPerson> 執行個體。  
  
 [!code-csharp[SyndicationPerson#10](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#10)]
 [!code-vb[SyndicationPerson#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#10)]  
  
 下列 XML 會說明 <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> 集合如何序列化為 Atom 1.0。  
  
 [!code-xml[SyndicationPerson#6](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#6)]  
  
 下列 XML 會說明 <xref:System.ServiceModel.Syndication.SyndicationPerson.ElementExtensions%2A> 集合如何序列化為 RSS 2.0。  
  
 [!code-xml[SyndicationPerson#7](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Email">
      <MemberSignature Language="C#" Value="public string Email { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Email" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Email" />
      <MemberSignature Language="VB.NET" Value="Public Property Email As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Email { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Email : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Email" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得並設定 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 的電子郵件地址。</summary>
        <value>人員的電子郵件地址。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化為 Atom 1.0 時，會將 <xref:System.ServiceModel.Syndication.SyndicationPerson> 屬性做為 `<email>` 項目寫入。 `<email>` 項目可能出現在 `<author>` 或 `<contributor>` 項目內，視 <xref:System.ServiceModel.Syndication.SyndicationPerson> 新增至哪一個集合 (作者或參與者) 而定。  
  
 序列化為 RSS 2.0 時，會將此值做為 `<a10:email>` 項目寫入。 `<a10:email>` 項目可能會出現在 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 項目內。 如果只新增一個 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至作者集合中，`<email>` 項目會寫入至 `<managingEditor>` 項目中。 如果新增一個以上的 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至作者集合中，`<email>` 項目會寫入至 `<a10:author>` 項目中。 如果新增 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至參與者集合中，`<email>` 項目會寫入至 `<a10:contributor>` 項目中。  
  
   
  
## Examples  
 下列程式碼會示範如何設定 <xref:System.ServiceModel.Syndication.SyndicationPerson> 執行個體的電子郵件地址。  
  
 [!code-csharp[SyndicationPerson#11](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#11)]
 [!code-vb[SyndicationPerson#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#11)]  
  
 下列 XML 顯示 <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> 如何序列化為 Atom 1.0。  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 下列 XML 顯示 <xref:System.ServiceModel.Syndication.SyndicationPerson.Email%2A> 如何序列化為 RSS 2.0。  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得並設定 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 的名稱。</summary>
        <value>人員的名稱。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化為 Atom 1.0 時，會將 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 屬性做為 `<name>` 項目寫入。 `<name>` 項目可能出現在 `<author>` 或 `<contributor>` 項目內，視 <xref:System.ServiceModel.Syndication.SyndicationPerson> 新增至哪一個集合 (作者或參與者) 而定。  
  
 序列化為 RSS 2.0 時，會將 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 屬性做為 `<a10:name>` 項目寫入。 `<a10:name>` 項目可能會出現在 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 項目內。 如果只新增一個 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至作者集合中，`<a10:name>` 項目會寫入至 `<managingEditor>` 項目中。 如果新增一個以上的 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至作者集合中，`<a10:name>` 項目會寫入至 `<a10:author>` 項目中。 如果新增 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至參與者集合中，`<a10:name>` 項目會寫入至 `<a10:contributor>` 項目中。  
  
   
  
## Examples  
 下列程式碼示範如何設定 <xref:System.ServiceModel.Syndication.SyndicationPerson> 的名稱。  
  
 [!code-csharp[SyndicationPerson#12](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#12)]
 [!code-vb[SyndicationPerson#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#12)]  
  
 下列 XML 顯示 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 如何序列化為 Atom 1.0。  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 下列 XML 顯示 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 如何序列化為 RSS 2.0。  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseAttribute">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseAttribute (string name, string ns, string value, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseAttribute(string name, string ns, string value, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseAttribute(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseAttribute (name As String, ns As String, value As String, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseAttribute(System::String ^ name, System::String ^ ns, System::String ^ value, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseAttribute : string * string * string * string -&gt; bool&#xA;override this.TryParseAttribute : string * string * string * string -&gt; bool" Usage="syndicationPerson.TryParseAttribute (name, ns, value, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ns" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">項目的名稱。</param>
        <param name="ns">項目的命名空間。</param>
        <param name="value">要剖析的屬性。</param>
        <param name="version">剖析時要使用的新聞訂閱版本。</param>
        <summary>嘗試剖析屬性延伸。</summary>
        <returns>指定是否已成功剖析屬性延伸的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 屬性延伸是指未由 Atom 1.0 或 RSS 2.0 規格定義的自訂屬性， 它們會序列化為 Atom 1.0 中 `<author>` 或 `<contributor>` 項目的屬性，或是序列化為 RSS 2.0 中 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 項目的屬性。 這個方法是延伸點，可讓您處理自訂屬性延伸的還原序列化作業。 若要執行這項動作，您必須自 <xref:System.ServiceModel.Syndication.SyndicationPerson> 衍生類別，並且覆寫這個方法。 這個方法是針對所有無法辨識的屬性延伸來呼叫。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">在讀取期間遇到無效的 XML。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryParseElement">
      <MemberSignature Language="C#" Value="protected internal virtual bool TryParseElement (System.Xml.XmlReader reader, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryParseElement(class System.Xml.XmlReader reader, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.TryParseElement(System.Xml.XmlReader,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function TryParseElement (reader As XmlReader, version As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool TryParseElement(System::Xml::XmlReader ^ reader, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member TryParseElement : System.Xml.XmlReader * string -&gt; bool&#xA;override this.TryParseElement : System.Xml.XmlReader * string -&gt; bool" Usage="syndicationPerson.TryParseElement (reader, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reader">讀取自 <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="version">剖析期間要使用的新聞訂閱版本。</param>
        <summary>嘗試剖析項目延伸。</summary>
        <returns>指定是否已成功剖析項目延伸的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 項目延伸是指 Atom 1.0 或 RSS 2.0 規格中未指定的有效 XML 項目。 假設某個有效 XML 項目的命名空間與封入命名空間不同，您便可將任何此類項目新增為延伸。 這個方法是延伸點，可讓您處理自訂項目延伸的還原序列化作業。 若要執行這項動作，您必須自 <xref:System.ServiceModel.Syndication.SyndicationPerson> 衍生類別，並且覆寫這個方法。 這個方法是針對所有無法辨識的項目延伸來呼叫。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">在讀取期間遇到無效的 XML。</exception>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Syndication.SyndicationPerson.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Uri : string with get, set" Usage="System.ServiceModel.Syndication.SyndicationPerson.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得並設定 <see cref="T:System.ServiceModel.Syndication.SyndicationPerson" /> 的 URI。</summary>
        <value>人員的網站 URI。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 序列化為 Atom 1.0 時，會將 <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> 屬性做為 `<uri>` 項目寫入。 `<uri>` 項目可能出現在 `<author>` 或 `<contributor>` 項目內，視 <xref:System.ServiceModel.Syndication.SyndicationPerson> 新增至哪一個集合 (作者或參與者) 而定。  
  
 序列化為 RSS 2.0 時，會將 <xref:System.ServiceModel.Syndication.SyndicationPerson.Uri%2A> 屬性做為 `<a10:uri>` 項目寫入。 `<a10:uri>` 項目可能會出現在 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 項目內。 如果只新增一個 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至作者集合中，`<a10:uri>` 項目會寫入至 `<managingEditor>` 項目中。 如果新增一個以上的 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至作者集合中，`<a10:uri>` 項目會寫入至 `<a10:author>` 項目中。 如果新增 <xref:System.ServiceModel.Syndication.SyndicationPerson> 至參與者集合中，`<a10:uri>` 項目會寫入至 `<a10:contributor>` 項目中。  
  
   
  
## Examples  
 下列程式碼會示範如何設定 <xref:System.ServiceModel.Syndication.SyndicationPerson> 執行個體的 URI。  
  
 [!code-csharp[SyndicationPerson#13](~/samples/snippets/csharp/VS_Snippets_CFX/syndicationperson/cs/program.cs#13)]
 [!code-vb[SyndicationPerson#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/syndicationperson/vb/snippets.vb#13)]  
  
 下列 XML 顯示 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 如何序列化為 Atom 1.0。  
  
 [!code-xml[SyndicationPerson#0](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/atom.xml#0)]  
  
 下列 XML 顯示 <xref:System.ServiceModel.Syndication.SyndicationPerson.Name%2A> 如何序列化為 RSS 2.0。  
  
 [!code-xml[SyndicationPerson#1](~/samples/snippets/common/VS_Snippets_CFX/syndicationperson/common/rss.xml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAttributeExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteAttributeExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteAttributeExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.WriteAttributeExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteAttributeExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteAttributeExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteAttributeExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationPerson.WriteAttributeExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">要寫入至其中的 <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="version">寫入期間要使用的新聞訂閱版本。</param>
        <summary>使用指定的新聞訂閱版本，將屬性延伸寫入指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 屬性延伸是指未由 Atom 1.0 或 RSS 2.0 規格定義的自訂屬性， 它們會序列化為 Atom 1.0 中 `<author>` 或 `<contributor>` 項目的屬性，或是序列化為 RSS 2.0 中 `<managingEditor>`、`<a10:author>` 或 `<a10:contributor>` 項目的屬性。 這個方法是擴充點，可讓您處理自訂屬性延伸的序列化作業。 若要執行這項動作，您必須自 <xref:System.ServiceModel.Syndication.SyndicationLink> 衍生類別，並且覆寫這個方法。 這個方法是針對所有無法辨識的屬性延伸來呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteElementExtensions">
      <MemberSignature Language="C#" Value="protected internal virtual void WriteElementExtensions (System.Xml.XmlWriter writer, string version);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void WriteElementExtensions(class System.Xml.XmlWriter writer, string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.SyndicationPerson.WriteElementExtensions(System.Xml.XmlWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub WriteElementExtensions (writer As XmlWriter, version As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void WriteElementExtensions(System::Xml::XmlWriter ^ writer, System::String ^ version);" />
      <MemberSignature Language="F#" Value="abstract member WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit&#xA;override this.WriteElementExtensions : System.Xml.XmlWriter * string -&gt; unit" Usage="syndicationPerson.WriteElementExtensions (writer, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Syndication</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlWriter" />
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">要寫入至其中的 <see cref="T:System.Xml.XmlReader" />。</param>
        <param name="version">寫入期間要使用的新聞訂閱版本。</param>
        <summary>使用指定的新聞訂閱版本，將項目延伸寫入至指定的 <see cref="T:System.Xml.XmlWriter" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 項目延伸是指 Atom 1.0 或 RSS 2.0 規格中未指定的有效 XML 項目。 假設某個有效 XML 項目的命名空間與封入命名空間不同，您便可將任何此類項目新增為延伸。 這個方法是擴充點，可讓您處理自訂項目延伸的序列化作業。 若要執行這項動作，您必須自 <xref:System.ServiceModel.Syndication.SyndicationPerson> 衍生類別，並且覆寫這個方法。 這個方法是針對所有無法辨識的項目延伸來呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>