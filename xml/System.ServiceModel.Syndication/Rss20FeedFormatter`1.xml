<Type Name="Rss20FeedFormatter&lt;TSyndicationFeed&gt;" FullName="System.ServiceModel.Syndication.Rss20FeedFormatter&lt;TSyndicationFeed&gt;">
  <TypeSignature Language="C#" Value="public class Rss20FeedFormatter&lt;TSyndicationFeed&gt; : System.ServiceModel.Syndication.Rss20FeedFormatter where TSyndicationFeed : SyndicationFeednew()" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Rss20FeedFormatter`1&lt;.ctor (class System.ServiceModel.Syndication.SyndicationFeed) TSyndicationFeed&gt; extends System.ServiceModel.Syndication.Rss20FeedFormatter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" />
  <TypeSignature Language="VB.NET" Value="Public Class Rss20FeedFormatter(Of TSyndicationFeed)&#xA;Inherits Rss20FeedFormatter" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSyndicationFeed&gt;&#xA; where TSyndicationFeed : SyndicationFeedgcnew()public ref class Rss20FeedFormatter : System::ServiceModel::Syndication::Rss20FeedFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSyndicationFeed">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <BaseTypeName>System.ServiceModel.Syndication.SyndicationFeed</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.ServiceModel.Syndication.Rss20FeedFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Xml.Serialization.XmlRoot("rss", Namespace="")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TSyndicationFeed"><span data-ttu-id="65933-101">要序列化的 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 衍生型別。</span><span class="sxs-lookup"><span data-stu-id="65933-101">The <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived type to serialize.</span></span></typeparam>
    <summary><span data-ttu-id="65933-102">此類別可將 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 衍生類別序列化為 RSS 2.0 格式。</span><span class="sxs-lookup"><span data-stu-id="65933-102">A class that serializes <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" />-derived classes to RSS 2.0 format.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65933-103">使用此類別序列化 <xref:System.ServiceModel.Syndication.SyndicationFeed> 衍生類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="65933-103">Use this class to serialize instances of <xref:System.ServiceModel.Syndication.SyndicationFeed> derived classes.</span></span> <span data-ttu-id="65933-104">若您需要序列化 <xref:System.ServiceModel.Syndication.SyndicationFeed> 執行個體，請轉而使用 <xref:System.ServiceModel.Syndication.Rss20FeedFormatter> 格式器。</span><span class="sxs-lookup"><span data-stu-id="65933-104">If you need to serialize a <xref:System.ServiceModel.Syndication.SyndicationFeed> instance, use the <xref:System.ServiceModel.Syndication.Rss20FeedFormatter> formatter instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65933-105">下列程式碼範例會示範如何建立 <xref:System.ServiceModel.Syndication.SyndicationFeed> 衍生類別，並將這個類別序列化為 RSS 2.0。</span><span class="sxs-lookup"><span data-stu-id="65933-105">The following code shows how to create a <xref:System.ServiceModel.Syndication.SyndicationFeed> derived class and serialize it to RSS 2.0.</span></span>  
  
 [!code-csharp[RssFormatter#3](~/samples/snippets/csharp/VS_Snippets_CFX/rssformatter/cs/snippets.cs#3)]
 [!code-vb[RssFormatter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/rssformatter/vb/snippets.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65933-106">建立 <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="65933-106">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rss20FeedFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rss20FeedFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65933-107">建立 <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="65933-107">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rss20FeedFormatter (TSyndicationFeed feedToWrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TSyndicationFeed feedToWrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (feedToWrite As TSyndicationFeed)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rss20FeedFormatter(TSyndicationFeed feedToWrite);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="feedToWrite" Type="TSyndicationFeed" />
      </Parameters>
      <Docs>
        <param name="feedToWrite"><span data-ttu-id="65933-108">要序列化的摘要。</span><span class="sxs-lookup"><span data-stu-id="65933-108">The feed to serialize.</span></span></param>
        <summary><span data-ttu-id="65933-109">使用指定的 <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> 衍生執行個體，建立 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="65933-109">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="65933-110">下列範例將示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="65933-110">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[RssFormatter#4](~/samples/snippets/csharp/VS_Snippets_CFX/rssformatter/cs/snippets.cs#4)]
 [!code-vb[RssFormatter#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/rssformatter/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rss20FeedFormatter (TSyndicationFeed feedToWrite, bool serializeExtensionsAsAtom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TSyndicationFeed feedToWrite, bool serializeExtensionsAsAtom) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.#ctor(`0,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (feedToWrite As TSyndicationFeed, serializeExtensionsAsAtom As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rss20FeedFormatter(TSyndicationFeed feedToWrite, bool serializeExtensionsAsAtom);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="feedToWrite" Type="TSyndicationFeed" />
        <Parameter Name="serializeExtensionsAsAtom" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="feedToWrite"><span data-ttu-id="65933-111">要序列化的摘要。</span><span class="sxs-lookup"><span data-stu-id="65933-111">The feed to serialize.</span></span></param>
        <param name="serializeExtensionsAsAtom"><span data-ttu-id="65933-112">一個值，指定是否要序列化在 Atom 1.0 規格中已定義但未於 RSS 2.0 規格中定義的項目。</span><span class="sxs-lookup"><span data-stu-id="65933-112">A value that specifies whether to serialize elements that are defined in the Atom 1.0 specification, but not in the RSS 2.0 specification.</span></span> <span data-ttu-id="65933-113">預設值為 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="65933-113">The default is <see langword="true" />.</span></span></param>
        <summary><span data-ttu-id="65933-114">使用指定的 <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> 衍生執行個體，建立 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="65933-114">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.Rss20FeedFormatter`1" /> class with the specified <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65933-115">如果 `serializeExtensionsAsAtom` 參數為 `true`，則會使用 Atom 1.0 命名空間序列化在 Atom 1.0 規格中已定義，但是在 RSS 2.0 規格中未定義的所有項目。</span><span class="sxs-lookup"><span data-stu-id="65933-115">If the `serializeExtensionsAsAtom` parameter is `true`, all elements defined in the Atom 1.0 specification that are not defined in the RSS 2.0 specification are serialized with the Atom 1.0 namespace.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65933-116">下列範例將示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="65933-116">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[RssFormatter#5](~/samples/snippets/csharp/VS_Snippets_CFX/rssformatter/cs/snippets.cs#5)]
 [!code-vb[RssFormatter#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/rssformatter/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFeedInstance">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.Syndication.SyndicationFeed CreateFeedInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.Syndication.SyndicationFeed CreateFeedInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Syndication.Rss20FeedFormatter`1.CreateFeedInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateFeedInstance () As SyndicationFeed" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::Syndication::SyndicationFeed ^ CreateFeedInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Syndication.SyndicationFeed</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65933-117">建立 <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 衍生類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="65933-117">Creates a new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> derived class.</span></span></summary>
        <returns><span data-ttu-id="65933-118"><see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="65933-118">A new instance of the <see cref="T:System.ServiceModel.Syndication.SyndicationFeed" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>