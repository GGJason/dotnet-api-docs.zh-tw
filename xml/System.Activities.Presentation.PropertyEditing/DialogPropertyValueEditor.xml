<Type Name="DialogPropertyValueEditor" FullName="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor">
  <TypeSignature Language="C#" Value="public class DialogPropertyValueEditor : System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DialogPropertyValueEditor extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class DialogPropertyValueEditor&#xA;Inherits PropertyValueEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DialogPropertyValueEditor : System::Activities::Presentation::PropertyEditing::PropertyValueEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.PropertyEditing.PropertyValueEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8a794-101">用於 <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyContainer.PropertyEntry" /> 物件之所有對話方塊編輯邏輯的容器。</span><span class="sxs-lookup"><span data-stu-id="8a794-101">Container for all dialog-editing logic for <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyContainer.PropertyEntry" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a794-102">使用 <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> 類別顯示可以擁有關聯之對話方塊編輯器的內嵌編輯器。</span><span class="sxs-lookup"><span data-stu-id="8a794-102">Use the <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> class to show an inline editor that can have an associated dialog box editor.</span></span>  
  
 <span data-ttu-id="8a794-103"><xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> 類別可以保存 <xref:System.Windows.DataTemplate> 供對話方塊編輯器使用，或保存叫用對話方塊時呼叫的自訂邏輯。</span><span class="sxs-lookup"><span data-stu-id="8a794-103">The <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> class can hold either a <xref:System.Windows.DataTemplate> for a dialog box editor or custom logic that is called when the dialog box is invoked.</span></span>  
  
 <span data-ttu-id="8a794-104">使用 <xref:System.Activities.Presentation.PropertyEditing.EditModeSwitchButton> 中的 <xref:System.Windows.DataTemplate> 叫用您自訂的 <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> 類別。</span><span class="sxs-lookup"><span data-stu-id="8a794-104">Use the <xref:System.Activities.Presentation.PropertyEditing.EditModeSwitchButton> in your <xref:System.Windows.DataTemplate> to invoke your custom <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> class.</span></span>  
  
 <span data-ttu-id="8a794-105">您可以提供顯示在主機對話方塊中的 <xref:System.Windows.DataTemplate>，或者您可以覆寫 <xref:System.Windows.Forms.Form.ShowDialog> 方法，這個方法允許重複使用現有的對話方塊或系統對話方塊。</span><span class="sxs-lookup"><span data-stu-id="8a794-105">You can provide a <xref:System.Windows.DataTemplate> which is shown in a host dialog box, or you can override the <xref:System.Windows.Forms.Form.ShowDialog> method, which enables the reuse of existing or system dialog boxes.</span></span>  
  
 <span data-ttu-id="8a794-106">下表顯示決定使用 <xref:System.Windows.DataTemplate> 或 <xref:System.Windows.Forms.Form.ShowDialog> 方法的規則。</span><span class="sxs-lookup"><span data-stu-id="8a794-106">The following list shows the rules for determining whether the <xref:System.Windows.DataTemplate> or <xref:System.Windows.Forms.Form.ShowDialog> method is used.</span></span>  
  
 <span data-ttu-id="8a794-107">如果<xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A>屬性不是 null 參考 (Nothing 在 Visual Basic 中)，可<xref:System.Windows.DataTemplate>裝載在主機專用對話方塊中，提供主機樣式。</span><span class="sxs-lookup"><span data-stu-id="8a794-107">If the <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> property is not a null reference (Nothing in Visual Basic), that <xref:System.Windows.DataTemplate> is hosted in a host-specific dialog box, which provides host styling.</span></span> <span data-ttu-id="8a794-108">系統不會呼叫 <xref:System.Windows.Forms.Form.ShowDialog>。</span><span class="sxs-lookup"><span data-stu-id="8a794-108">The <xref:System.Windows.Forms.Form.ShowDialog> is not called.</span></span>  
  
 <span data-ttu-id="8a794-109">如果<xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A>屬性為 null 參考 (Nothing 在 Visual Basic 中)，虛擬<xref:System.Windows.Forms.Form.ShowDialog>方法呼叫，而且您可以覆寫此方法，以顯示任何對話方塊。</span><span class="sxs-lookup"><span data-stu-id="8a794-109">If the <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> property is a null reference (Nothing in Visual Basic), the virtual <xref:System.Windows.Forms.Form.ShowDialog> method is called and you can override this method to show any dialog box.</span></span>  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8a794-110">建立 <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8a794-110">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a794-111">建立沒有特定範本之 <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8a794-111">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> class with no specific templates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor (System.Windows.DataTemplate dialogEditorTemplate, System.Windows.DataTemplate inlineEditorTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DataTemplate dialogEditorTemplate, class System.Windows.DataTemplate inlineEditorTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogEditorTemplate As DataTemplate, inlineEditorTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor(System::Windows::DataTemplate ^ dialogEditorTemplate, System::Windows::DataTemplate ^ inlineEditorTemplate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dialogEditorTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="inlineEditorTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="dialogEditorTemplate"><span data-ttu-id="8a794-112">以主機專用對話方塊色彩裝載，並將其 <see cref="T:System.Window.DataTemplate" /> 設定為 <see cref="P:System.Activities.ActivityContext.DataContext" /> (對應至要編輯的屬性) 的 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />。</span><span class="sxs-lookup"><span data-stu-id="8a794-112">A <see cref="T:System.Window.DataTemplate" /> that is hosted in a host-specific dialog chrome and has its <see cref="P:System.Activities.ActivityContext.DataContext" /> set to the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> that corresponds to the property being edited.</span></span></param>
        <param name="inlineEditorTemplate"><span data-ttu-id="8a794-113">用於內嵌編輯器使用者介面的 <see cref="T:System.Windows.DataTemplate" />。</span><span class="sxs-lookup"><span data-stu-id="8a794-113">A <see cref="T:System.Windows.DataTemplate" /> that is used for the inline editor user interface.</span></span> <span data-ttu-id="8a794-114">如果有使用，其 <see cref="P:System.Activities.ActivityContext.DataContext" /> 會設定為對應至要編輯之屬性的 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />。</span><span class="sxs-lookup"><span data-stu-id="8a794-114">If used, its <see cref="P:System.Activities.ActivityContext.DataContext" /> is set to the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> that corresponds to the property being edited.</span></span></param>
        <summary><span data-ttu-id="8a794-115">使用指定的對話方塊編輯器與內嵌編輯器範本，建立 <see cref="T:System.Activities.Design.PropertyEditing.DialogPropertyValueEditor" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8a794-115">Creates a new instance of the <see cref="T:System.Activities.Design.PropertyEditing.DialogPropertyValueEditor" /> class with the specified dialog editor and inline editor templates.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogEditorTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate DialogEditorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate DialogEditorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogEditorTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ DialogEditorTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8a794-116">取得或設定由主機專用對話方塊裝載，並將其 <see cref="T:System.Windows.DataTemplate" /> 設定為 <see cref="P:System.Activities.ActivityContext.DataContext" /> 的 <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />。</span><span class="sxs-lookup"><span data-stu-id="8a794-116">Gets or sets the <see cref="T:System.Windows.DataTemplate" /> that is hosted by a host-specific dialog and has its <see cref="P:System.Activities.ActivityContext.DataContext" /> set to a <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />.</span></span></summary>
        <value><span data-ttu-id="8a794-117">由主機專用對話方塊裝載的<see cref="T:System.Windows.DataTemplate" />物件。</span><span class="sxs-lookup"><span data-stu-id="8a794-117">The <see cref="T:System.Windows.DataTemplate" /> object that is hosted by a host-specific dialog.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a794-118">如果這個屬性會傳回`null`、<xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog%2A>改為呼叫方法。</span><span class="sxs-lookup"><span data-stu-id="8a794-118">If this property returns `null`, the <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog%2A> method is called instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public virtual void ShowDialog (System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, System.Windows.IInputElement commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class System.Windows.IInputElement commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog(System.Activities.Presentation.PropertyEditing.PropertyValue,System.Windows.IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowDialog(System::Activities::Presentation::PropertyEditing::PropertyValue ^ propertyValue, System::Windows::IInputElement ^ commandSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
        <Parameter Name="commandSource" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="propertyValue"><span data-ttu-id="8a794-119">要編輯之屬性的 <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />。</span><span class="sxs-lookup"><span data-stu-id="8a794-119">The <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" /> for the property being edited.</span></span></param>
        <param name="commandSource"><span data-ttu-id="8a794-120"><see cref="T:System.Windows.IinputElement" />，可以做為執行 <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands" /> 的來源。</span><span class="sxs-lookup"><span data-stu-id="8a794-120">The <see cref="T:System.Windows.IinputElement" /> that can be used as a source for execution of <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands" />.</span></span></param>
        <summary><span data-ttu-id="8a794-121">當 <see cref="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" /> 為 null，而且對話方塊已由使用者叫用時呼叫。</span><span class="sxs-lookup"><span data-stu-id="8a794-121">Called when the <see cref="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" /> is null and a dialog has been invoked by the user.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a794-122">由於命令會由主機處理，而且自訂對話方塊不會成為該視覺化樹狀結構的一部分，因此，`commandSource` 會公開屬於主機之視覺化樹狀結構一部分的 <xref:System.Windows.IInputElement>，而且可以用正確處理命令的這種方式，用來執行屬性編輯命令。</span><span class="sxs-lookup"><span data-stu-id="8a794-122">Since the commands get handled by the host and since custom dialogs are not going to be part of that visual tree, the `commandSource` exposes an <xref:System.Windows.IInputElement> that is part of the host's visual tree and that, therefore, can be used to execute property editing commands in such a way that they are handled correctly.</span></span> <span data-ttu-id="8a794-123">覆寫此方法可讓您實作任何自訂的對話方塊邏輯，例如，叫用現有的系統對話方塊。</span><span class="sxs-lookup"><span data-stu-id="8a794-123">Overriding this method enables you to implement any custom dialog logic, such as invoking existing system dialogs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>