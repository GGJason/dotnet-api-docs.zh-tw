<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46abe19aea8376a990307ff0ed9a404e52a57119" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="36637479" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate TValue ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback(TKey key) where TKey : class where TValue : class;" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed ConditionalWeakTable`2/CreateValueCallback&lt;class TKey, class TValue&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ConditionalWeakTable(Of TKey, TValue).CreateValueCallback(key As TKey) As TValue " />
  <TypeSignature Language="C++ CLI" Value="public:  where TKey : class where TValue : classdelegate TValue ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback(TKey key);" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback = delegate of 'Key -&gt; 'Value" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="key" Type="TKey" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TValue</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="key">屬於所要建立之值的索引鍵。</param>
    <summary>代表方法，這個方法會建立非預設值，以作為索引鍵/值組的一部分加入 <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> 物件。</summary>
    <returns>參考類型的執行個體，代表要附加至所指定索引鍵的值。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>委派所封裝的叫用的回呼方法<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A?displayProperty=nameWithType>中找不到方法時傳遞給方法的索引鍵<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>物件。 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法就會傳遞回呼方法，表示屬性值後要以動態方式連結到受管理的物件的索引鍵。 方法負責傳回給呼叫端，其接著會新增至資料表的索引鍵/值組的屬性值。  
  
 <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>方法用來傳回可附加至指定的索引鍵的參考類型的執行個體。 它可讓使用非預設值來初始化該執行個體。 如果在資料表中，找不到索引鍵<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A?displayProperty=nameWithType>方法會將在其值會初始化使用預設值的索引鍵/值組。  
  
   
  
## Examples  
 下列範例會定義`MainClass`類別和`MainInfo`類別。 `MainInfo` 提供下列相關資訊`MainClass`執行個體。 它也會定義靜態 (`Shared`在 Visual Basic)`CreateAttachedValue`方法，可以指派給<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>委派，並傳遞至<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法。 此範例會呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法來加入`MainClass`物件和其相對應`MainInfo`物件<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>資料表。 此範例也會示範呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>並<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>方法，以將索引鍵/值組加入至資料表，以及呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A>方法來擷取屬於現有的索引鍵的值。  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
  </Docs>
</Type>