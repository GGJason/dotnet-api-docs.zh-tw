<Type Name="IteratorStateMachineAttribute" FullName="System.Runtime.CompilerServices.IteratorStateMachineAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cadcb56fea16e89f978e07aeb7b94eff562ca547" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30477262" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IteratorStateMachineAttribute : System.Runtime.CompilerServices.StateMachineAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit IteratorStateMachineAttribute extends System.Runtime.CompilerServices.StateMachineAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IteratorStateMachineAttribute&#xA;Inherits StateMachineAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class IteratorStateMachineAttribute sealed : System::Runtime::CompilerServices::StateMachineAttribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.CompilerServices.StateMachineAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6d7a7-101">指出 Visual Basic 的方法是否以 <see langword="Iterator" /> 修飾詞標記。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6d7a7-101">Indicates whether a method in Visual Basic is marked with the <see langword="Iterator" /> modifier.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d7a7-102">您不應該套用`IteratorStateMachine`屬性至您的程式碼中的方法。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-102">You shouldn't apply the `IteratorStateMachine` attribute to methods in your code.</span></span> <span data-ttu-id="6d7a7-103">在 Visual Basic 中的方法具有[迭代器](~/docs/visual-basic/language-reference/modifiers/iterator.md)修飾詞，編譯器將會套用`IteratorStateMachine`中發出的 IL 屬性。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-103">For methods in Visual Basic that have the [Iterator](~/docs/visual-basic/language-reference/modifiers/iterator.md) modifier, the compiler will apply the `IteratorStateMachine` attribute in the IL that it emits.</span></span>  
  
 <span data-ttu-id="6d7a7-104">當方法 (*MethodName*) 在 Visual Basic 中有`Iterator`修飾詞，編譯器會發出包含狀態機器結構的 IL。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-104">When a method (*MethodName*) in Visual Basic has the `Iterator` modifier, the compiler emits IL that includes a state machine structure.</span></span> <span data-ttu-id="6d7a7-105">該結構包含在方法中的程式碼。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-105">That structure contains the code in the method.</span></span> <span data-ttu-id="6d7a7-106">IL 也包含虛設常式方法 (*MethodName*)，呼叫狀態機器。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-106">That IL also contains a stub method (*MethodName*) that calls into the state machine.</span></span> <span data-ttu-id="6d7a7-107">編譯器會加入`IteratorStateMachine`屬性虛設常式方法，讓工具可以識別對應的狀態機器。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-107">The compiler adds the `IteratorStateMachine` attribute to the stub method so that tools can identify the corresponding state machine.</span></span> <span data-ttu-id="6d7a7-108">發出的 IL 的詳細資料可能在未來變更編譯器的版本。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-108">Details of the emitted IL might change in future releases of the compilers.</span></span>  
  
 <span data-ttu-id="6d7a7-109">Iterator 方法，執行自訂反覆項目集合上使用`Yield`(Visual Basic) 陳述式來一次傳回一個項目。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-109">An iterator method performs a custom iteration over a collection by using the `Yield` (Visual Basic) statement to return each element one at a time.</span></span> <span data-ttu-id="6d7a7-110">如需詳細資訊，請參閱 [Iterator](http://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7)。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-110">For more information, see [Iterators](http://msdn.microsoft.com/library/f45331db-d595-46ec-9142-551d3d1eb1a7).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6d7a7-111">您無法使用`IteratorStateMachineAttribute`來測試是否方法是在 C# 中的迭代器方法。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-111">You can't use `IteratorStateMachineAttribute` to test whether a method is an iterator method in C#.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d7a7-112">下列範例會示範如何判斷方法是否為迭代器方法。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-112">The following example shows how to determine whether a method is an iterator method.</span></span> <span data-ttu-id="6d7a7-113">在範例中，`IsIteratorMethod`執行下列步驟：</span><span class="sxs-lookup"><span data-stu-id="6d7a7-113">In the example, `IsIteratorMethod` performs the following steps:</span></span>  
  
-   <span data-ttu-id="6d7a7-114">取得<xref:System.Reflection.MethodInfo>物件使用的方法名稱<xref:System.Type.GetMethod%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-114">Obtains a <xref:System.Reflection.MethodInfo> object for the method name by using <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="6d7a7-115">取得<xref:System.Type>物件使用屬性[GetType 運算子](~/docs/visual-basic/language-reference/operators/gettype-operator.md)。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-115">Obtains a <xref:System.Type> object for the attribute by using [GetType Operator](~/docs/visual-basic/language-reference/operators/gettype-operator.md).</span></span>  
  
-   <span data-ttu-id="6d7a7-116">取得屬性物件的方法和屬性類型使用`MethodInfo.GetCustomAttribute`。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-116">Obtains an attribute object for the method and attribute type by using `MethodInfo.GetCustomAttribute`.</span></span> <span data-ttu-id="6d7a7-117">如果`GetCustomAttribute`傳回`Nothing`(Visual Basic)，此方法不包含屬性。</span><span class="sxs-lookup"><span data-stu-id="6d7a7-117">If `GetCustomAttribute` returns `Nothing` (Visual Basic), the method doesn't contain the attribute.</span></span>  
  
 [!code-vb[Runtime.CompilerServices.AsyncStateMachineAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/runtime.compilerservices.asyncstatemachineattribute/vb/module2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.CompilerServices.AsyncStateMachineAttribute" />
    <altmember cref="P:System.Runtime.CompilerServices.StateMachineAttribute.StateMachineType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IteratorStateMachineAttribute (Type stateMachineType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type stateMachineType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.IteratorStateMachineAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (stateMachineType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IteratorStateMachineAttribute(Type ^ stateMachineType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stateMachineType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="stateMachineType">
          <span data-ttu-id="6d7a7-118">基礎狀態機器類型的類型物件，該類型會被用來實作狀態機器方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d7a7-118">The type object for the underlying state machine type that's used to implement a state machine method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6d7a7-119">初始化 <see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6d7a7-119">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.IteratorStateMachineAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>