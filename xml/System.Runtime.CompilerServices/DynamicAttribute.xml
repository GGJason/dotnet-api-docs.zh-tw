<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DynamicAttribute.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55ddc2d5ee0473dd31989303c7bafc28758658df6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ddc2d5ee0473dd31989303c7bafc28758658df6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.DynamicAttribute">
          <source>Indicates that the use of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> on a member is meant to be treated as a dynamically dispatched type.</source>
          <target state="translated">表示成員上 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 的使用將視為動態分派型別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.CompilerServices.DynamicAttribute">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor">
          <source>When used in an attribute specification, the default constructor is semantically equivalent to <ph id="ph1">`DynamicAttribute({ true })`</ph>, and can be considered a shorthand for that expression.</source>
          <target state="translated">屬性規格中使用時，預設建構函式，語意等於<ph id="ph1">`DynamicAttribute({ true })`</ph>，且可以被視為該運算式的縮寫。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor">
          <source>It should therefore only be used on an element of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">它應該因此只能在類型的元素上<ph id="ph1">&lt;xref:System.Object&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])">
          <source>Specifies, in a prefix traversal of a type's construction, which <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> occurrences are meant to be treated as a dynamically dispatched type.</source>
          <target state="translated">以型別建構的前置周遊方式，指定哪些 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 相符項目將視為動態分派型別。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Runtime.CompilerServices.DynamicAttribute" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])">
          <source>This constructor is meant to be used on types that are built on an underlying occurrence of <ph id="ph1">&lt;xref:System.Object&gt;</ph> that is meant to be treated dynamically.</source>
          <target state="translated">這個建構函式要用於之上的基礎項目類型<ph id="ph1">&lt;xref:System.Object&gt;</ph>，要以動態方式來處理。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.CompilerServices.DynamicAttribute.#ctor(System.Boolean[])">
          <source>For instance, if <ph id="ph1">`C`</ph> is a generic type with two type parameters, a use of the constructed type <ph id="ph2">`C&lt;Object,Object&gt;`</ph> might be intended to treat the first type argument dynamically and the second typically, in which case the appropriate attribute specification should use a <ph id="ph3">`transformFlags`</ph> value of <ph id="ph4">`{ false, true, false }`</ph>.</source>
          <target state="translated">比方說，如果<ph id="ph1">`C`</ph>具有兩個型別參數，使用建構的型別為泛型型別<ph id="ph2">`C&lt;Object,Object&gt;`</ph>可能會將第一個型別引數以動態方式提供，而第二個一般而言，在此情況下的適當屬性規格應該使用<ph id="ph3">`transformFlags`</ph>值<ph id="ph4">`{ false, true, false }`</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Runtime.CompilerServices.DynamicAttribute.TransformFlags">
          <source>Specifies, in a prefix traversal of a type's construction, which <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> occurrences are meant to be treated as a dynamically dispatched type.</source>
          <target state="translated">以型別建構的前置周遊方式，指定哪些 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 相符項目將視為動態分派型別。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.CompilerServices.DynamicAttribute.TransformFlags">
          <source>The list of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> occurrences that are meant to be treated as a dynamically dispatched type.</source>
          <target state="translated">將視為動態分派型別 <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> 相符項目清單。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>