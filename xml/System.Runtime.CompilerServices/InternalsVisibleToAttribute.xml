<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f0b6174ea837be0c0d10d39a109f0e32df7ca13" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56393589" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>將通常只有在目前組件中可見的類型，指定為指定組件中可見的。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般情況下，類型和成員`internal`或`private protected`範圍 (在C#) 和`Friend`並`Private Protected`（在 Visual Basic) 的範圍只會顯示在所定義的組件。 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性可讓它們的類型也可以看到指定的組件，也就是 friend 組件中。 這只適用於`internal`(`Friend` VB 中) 或`private protected`(`Private Protected`在 VB) 方法，而非`private`的。
  
 組件層級套用屬性。 這表示它可以是包含來源的程式碼檔案的開頭，或者它可以包含在 Visual Studio 專案的 AssemblyInfo 檔案中。 您可以使用屬性來指定單一的 friend 組件可以存取的內部類型和成員的目前組件。 您可以定義多個 friend 組件有兩種。 它們可顯示為個別的組件層級屬性，如下列範例所示。  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 也可以使用不同出現<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>標記，但單一`assembly`關鍵字，如下列範例說明。  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 Friend 組件由<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>建構函式。 目前的組件和 friend 組件必須是不帶正負號，或兩個組件必須以強式名稱簽署。  
  
 如果兩個組件是不帶正負號，`assemblyName`引數是由指定不含目錄的路徑或檔案名稱副檔名的 friend 組件的名稱所組成。  
  
 如果兩個組件會使用強式簽署名稱、 引數<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>建構函式必須包含目錄路徑或檔案名稱副檔名，以及完整公開金鑰 （和不的公開金鑰 token） 沒有組件的名稱。 若要取得完整公開金鑰的強式名稱組件，請參閱[取得完整公開金鑰](#Key)本文稍後的章節。 如需使用詳細資訊<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>強式名稱的組件，請參閱<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>建構函式。  
  
 不包含值<xref:System.Reflection.AssemblyName.CultureInfo%2A>， <xref:System.Reflection.AssemblyName.Version%2A>，或<xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A>引數中的欄位; Visual Basic、 C# 和 c + + 編譯器會將這視為編譯器錯誤。 如果您使用的編譯器，不將它視為錯誤 (例如[IL 組譯工具 (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) 以及組件強式名稱，<xref:System.MethodAccessException>存取指定的 friend 組件的第一次擲回例外狀況包含組件<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性。  
  
 如需如何使用這個屬性的詳細資訊，請參閱下列主題：  
  
-   [Friend 組件 (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Friend 組件](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a>取得完整公開金鑰  
 您可以使用[強式名稱工具 (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md)來擷取強式名稱金鑰 (.snk) 檔案的完整公開金鑰。 若要這樣做，您可以執行下列步驟：  
  
1.  從強式名稱金鑰檔擷取公開金鑰，到個別的檔案：  
  
     **Sn-p***snk_file* *outfile*   
  
2.  在主控台中顯示完整的公開金鑰：  
  
     **Sn-tp***outfile*  
  
3.  複製並貼到您的程式碼的完整公開金鑰值。  
  
## <a name="compiling-the-friend-assembly-with-c"></a>編譯 C# 的 friend 組件  
 如果您使用 C# 編譯器來編譯 friend 組件時，您必須使用明確指定輸出檔 （.exe 或.dll） 的名稱 **/out**編譯器選項。 因為編譯器尚未針對在繫結至外部參考時所建立的組件產生名稱，所以這是必要動作。 **/Out**編譯器選項是選擇性的 Visual Basic 編譯器，以及對應 **-out**或 **-o**編譯 friend 時，應該未使用編譯器選項組件的F#編譯器。  
  
## <a name="compiling-the-friend-assembly-with-c"></a>編譯 c + + 的 friend 組件  
 在 c + +，才能啟用內部成員<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性的 friend 組件的存取，您必須使用`as_friend`c + + 指示詞中的屬性。 如需詳細資訊，請參閱 < [Friend 組件 （c + +）](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)。  
  
   
  
## Examples  
 **簽署的組件**  
  
 下列範例會使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，讓`internal`方法，名為`AppendDirectorySeparator`中可以看到另一個已簽署的組件簽署的組件。 它會定義`FileUtilities`類別，其中包含內部`AppendDirectorySeparator`方法。 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性會套用至包含的組件`FileUtilities`類別。 屬性可讓組件名為`Friend1`存取這個內部成員。  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 如果下列範例會編譯至名為強式名稱組件`Friend1`，則`Example.Main`方法中的`Friend1`可以成功呼叫`FileUtilities.AppendDirectorySeparator`方法，雖然此方法是內部`Assembly1`組件。 請注意，是否您正在從命令列編譯 C# 中，您必須使用 **/out**編譯器參數，確保 friend 組件的名稱可用時，編譯器會將繫結至外部參考。  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 **不帶正負號的組件**  
  
 下列範例會使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，讓`internal`不帶正負號的組件到另一個可見的成員不帶正負號的組件。 屬性可確保`internal``StringLib.IsFirstLetterUpperCase`名為組件中的方法`UtilityLib`會顯示名為組件中的程式碼`Friend2`。  以下是 UtilityLib.dll 的原始程式碼：  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 下列範例提供的原始程式碼`Friend2`組件。 請注意，是否您正在從命令列編譯 C# 中，您必須使用 **/out**編譯器參數，確保 friend 組件的名稱可用時，編譯器會將繫結至外部參考。  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">Friend 組件的名稱。</param>
        <summary>使用指定的 Friend 組件名稱，初始化 <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>建構函式定義的 friend 組件，也就是可存取的內部組件和私用受保護的類型和成員的目前組件。  
  
 目前的組件和 friend 組件必須是不帶正負號，或兩者都必須使用強式名稱簽署。 (如需有關強式名稱組件的詳細資訊，請參閱 <<c0> [ 建立和使用強式名稱組件](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)。)如果兩者都是不帶正負號，`assemblyName`引數是由指定不含目錄的路徑或檔案副檔名的 friend 組件的名稱所組成。 如果兩者都已簽署， `assemblyName` friend 組件，而不需要目錄路徑或檔案名稱副檔名，以及其完整公開金鑰 （但不是的公開金鑰 token） 的名稱所組成。 強式名稱，例如文化特性、 版本或處理器架構的資訊，請提供的其他元件中不能指定`assemblyName`引數。  
  
> [!IMPORTANT]
>  如果您使用 C# 編譯器來編譯 friend 組件時，您必須使用明確指定輸出檔 （.exe 或.dll） 的名稱 **/out**編譯器選項。 因為編譯器尚未針對在繫結至外部參考時所建立的組件產生名稱，所以這是必要動作。 **/Out**編譯器選項是選擇性的 Visual Basic 編譯器，以及對應 **-out**或 **-o**編譯 friend 時，應該未使用編譯器選項組件的F#編譯器。  
  
 您可以使用[Sn.exe （強式名稱工具）](~/docs/framework/tools/sn-exe-strong-name-tool.md)來擷取強式名稱金鑰 (.snk) 檔案的完整公開金鑰。 若要這樣做，您可以執行下列步驟：  
  
1.  從強式名稱金鑰檔擷取公開金鑰，到個別的檔案：  
  
     **Sn-p***snk_file* *outfile*   
  
2.  在主控台中顯示完整的公開金鑰：  
  
     **Sn-tp***outfile*  
  
3.  複製並貼到您的程式碼的完整公開金鑰值。  
  
 如需有關如何使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，請參閱下列主題：  
  
-   [Friend 組件 (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Friend 組件](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 **簽署的組件**  
  
 下列範例會使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，讓`internal`方法，名為`AppendDirectorySeparator`中可以看到另一個已簽署的組件簽署的組件。 它會定義`FileUtilities`類別，其中包含內部`AppendDirectorySeparator`方法。 <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性會套用至包含的組件`FileUtilities`類別。 屬性可讓組件名為`Friend1`存取這個內部成員。  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 如果下列範例會編譯至名為強式名稱組件`Friend1`，它可以成功地呼叫`FileUtilities.AppendDirectorySeparator`方法，即使方法是內部`Assembly1`組件。 請注意，是否您正在從命令列編譯 C# 中，您必須使用 **/out**編譯器參數，確保 friend 組件的名稱可用時，編譯器會將繫結至外部參考。  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 下列範例會使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，讓`internal`不帶正負號的組件到另一個可見的成員不帶正負號的組件。 屬性可確保`internal``StringLib.IsFirstLetterUpperCase`名為組件中的方法`UtilityLib`會顯示名為組件中的程式碼`Friend2`。  以下是 UtilityLib.dll 的原始程式碼：  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 **不帶正負號的組件**  
  
 下列範例提供的原始程式碼`Friend2`組件。 請注意，是否您正在從命令列編譯 C# 中，您必須使用 **/out**編譯器參數，確保 friend 組件的名稱可用時，編譯器會將繫結至外部參考。  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性未實作。</summary>
        <value>這個屬性不會傳回值。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 friend 組件的名稱，以利使用 <see langword="internal" /> 關鍵字標記的所有型別和型別成員都能看見。</summary>
        <value>表示 friend 組件之名稱的字串。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如需有關如何使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，請參閱下列主題：  
  
-   [Friend 組件 (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [Friend 組件](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>