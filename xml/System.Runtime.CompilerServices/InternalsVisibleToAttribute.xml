<Type Name="InternalsVisibleToAttribute" FullName="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="74b4ad010e7aacda9354d35c92864c58b90a0987" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58703499" /></Metadata><TypeSignature Language="C#" Value="public sealed class InternalsVisibleToAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InternalsVisibleToAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InternalsVisibleToAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class InternalsVisibleToAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type InternalsVisibleToAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0;netstandard-2.1">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2352a-101">將通常只有在目前組件中可見的類型，指定為指定組件中可見的。</span><span class="sxs-lookup"><span data-stu-id="2352a-101">Specifies that types that are ordinarily visible only within the current assembly are visible to a specified assembly.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2352a-102">一般情況下，類型和成員`internal`或`private protected`範圍 (在C#) 和`Friend`並`Private Protected`（在 Visual Basic) 的範圍只會顯示在所定義的組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-102">Ordinarily, types and members with `internal` or `private protected` scope (in C#) and `Friend` and `Private Protected` scope (in Visual Basic) are visible only in the assembly in which they are defined.</span></span> <span data-ttu-id="2352a-103"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性可讓它們的類型也可以看到指定的組件，也就是 friend 組件中。</span><span class="sxs-lookup"><span data-stu-id="2352a-103">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute makes them also visible to the types in a specified assembly, which is known as a friend assembly.</span></span> <span data-ttu-id="2352a-104">這只適用於`internal`(`Friend` VB 中) 或`private protected`(`Private Protected`在 VB) 方法，而非`private`的。</span><span class="sxs-lookup"><span data-stu-id="2352a-104">This only applies to `internal` (`Friend` in VB) or `private protected`(`Private Protected` in VB) methods only, but not `private` ones.</span></span>
  
 <span data-ttu-id="2352a-105">組件層級套用屬性。</span><span class="sxs-lookup"><span data-stu-id="2352a-105">The attribute is applied at the assembly level.</span></span> <span data-ttu-id="2352a-106">這表示它可以是包含來源的程式碼檔案的開頭，或者它可以包含在 Visual Studio 專案的 AssemblyInfo 檔案中。</span><span class="sxs-lookup"><span data-stu-id="2352a-106">This means that it can be included at the beginning of a source code file, or it can be included in the AssemblyInfo file in a Visual Studio project.</span></span> <span data-ttu-id="2352a-107">您可以使用屬性來指定單一的 friend 組件可以存取的內部類型和成員的目前組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-107">You can use the attribute to specify a single friend assembly that can access the internal types and members of the current assembly.</span></span> <span data-ttu-id="2352a-108">您可以定義多個 friend 組件有兩種。</span><span class="sxs-lookup"><span data-stu-id="2352a-108">You can define multiple friend assemblies in two ways.</span></span> <span data-ttu-id="2352a-109">它們可顯示為個別的組件層級屬性，如下列範例所示。</span><span class="sxs-lookup"><span data-stu-id="2352a-109">They can appear as individual assembly-level attributes, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple1.cs#3)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple1.vb#3)]  
  
 <span data-ttu-id="2352a-110">也可以使用不同出現<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>標記，但單一`assembly`關鍵字，如下列範例說明。</span><span class="sxs-lookup"><span data-stu-id="2352a-110">They can also appear with separate <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> tags but a single `assembly` keyword, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/multiple2.cs#4)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/multiple2.vb#4)]  
  
 <span data-ttu-id="2352a-111">Friend 組件由<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="2352a-111">The friend assembly is identified by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span> <span data-ttu-id="2352a-112">目前的組件和 friend 組件必須是不帶正負號，或兩個組件必須以強式名稱簽署。</span><span class="sxs-lookup"><span data-stu-id="2352a-112">Both the current assembly and the friend assembly must be unsigned, or both assemblies must be signed with a strong name.</span></span>  
  
 <span data-ttu-id="2352a-113">如果兩個組件是不帶正負號，`assemblyName`引數是由指定不含目錄的路徑或檔案名稱副檔名的 friend 組件的名稱所組成。</span><span class="sxs-lookup"><span data-stu-id="2352a-113">If both assemblies are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file name extension.</span></span>  
  
 <span data-ttu-id="2352a-114">如果兩個組件會使用強式簽署名稱、 引數<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>建構函式必須包含目錄路徑或檔案名稱副檔名，以及完整公開金鑰 （和不的公開金鑰 token） 沒有組件的名稱。</span><span class="sxs-lookup"><span data-stu-id="2352a-114">If both assemblies are signed with a strong name, the argument to the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor must consist of the name of the assembly without its directory path or file name extension, along with the full public key (and not its public key token).</span></span> <span data-ttu-id="2352a-115">若要取得完整公開金鑰的強式名稱組件，請參閱[取得完整公開金鑰](#Key)本文稍後的章節。</span><span class="sxs-lookup"><span data-stu-id="2352a-115">To get the full public key of a strong-named assembly, see the [Getting the full public key](#Key) section later in this article.</span></span> <span data-ttu-id="2352a-116">如需使用詳細資訊<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>強式名稱的組件，請參閱<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="2352a-116">For more information about using <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> with strong-named assemblies, see the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="2352a-117">不包含值<xref:System.Reflection.AssemblyName.CultureInfo%2A>， <xref:System.Reflection.AssemblyName.Version%2A>，或<xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A>引數中的欄位; Visual Basic、 C# 和 c + + 編譯器會將這視為編譯器錯誤。</span><span class="sxs-lookup"><span data-stu-id="2352a-117">Do not include values for the <xref:System.Reflection.AssemblyName.CultureInfo%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, or <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A> field in the argument; the Visual Basic, C#, and C++ compilers treat this as a compiler error.</span></span> <span data-ttu-id="2352a-118">如果您使用的編譯器，不將它視為錯誤 (例如[IL 組譯工具 (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) 以及組件強式名稱，<xref:System.MethodAccessException>存取指定的 friend 組件的第一次擲回例外狀況包含組件<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性。</span><span class="sxs-lookup"><span data-stu-id="2352a-118">If you use a compiler that does not treat it as an error (such as the [IL Assembler (ILAsm.exe)](~/docs/framework/tools/ilasm-exe-il-assembler.md)) and the assemblies are strong-named, a <xref:System.MethodAccessException> exception is thrown the first time the specified friend assembly accesses the assembly that contains the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute.</span></span>  
  
 <span data-ttu-id="2352a-119">如需如何使用這個屬性的詳細資訊，請參閱下列主題：</span><span class="sxs-lookup"><span data-stu-id="2352a-119">For more information about how to use this attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="2352a-120">Friend 組件 (C++)</span><span class="sxs-lookup"><span data-stu-id="2352a-120">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="2352a-121">Friend 組件</span><span class="sxs-lookup"><span data-stu-id="2352a-121">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
<a name="Key"></a>   
## <a name="getting-the-full-public-key"></a><span data-ttu-id="2352a-122">取得完整公開金鑰</span><span class="sxs-lookup"><span data-stu-id="2352a-122">Getting the full public key</span></span>  
 <span data-ttu-id="2352a-123">您可以使用[強式名稱工具 (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md)來擷取強式名稱金鑰 (.snk) 檔案的完整公開金鑰。</span><span class="sxs-lookup"><span data-stu-id="2352a-123">You can use the [Strong Name Tool (Sn.exe)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="2352a-124">若要這樣做，您可以執行下列步驟：</span><span class="sxs-lookup"><span data-stu-id="2352a-124">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="2352a-125">從強式名稱金鑰檔擷取公開金鑰，到個別的檔案：</span><span class="sxs-lookup"><span data-stu-id="2352a-125">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="2352a-126">\**Sn-p\*\*\*snk_file* *outfile* </span><span class="sxs-lookup"><span data-stu-id="2352a-126">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="2352a-127">在主控台中顯示完整的公開金鑰：</span><span class="sxs-lookup"><span data-stu-id="2352a-127">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="2352a-128">\**Sn-tp\*\*\*outfile*</span><span class="sxs-lookup"><span data-stu-id="2352a-128">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="2352a-129">複製並貼到您的程式碼的完整公開金鑰值。</span><span class="sxs-lookup"><span data-stu-id="2352a-129">Copy and paste the full public key value into your source code.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="2352a-130">編譯 C# 的 friend 組件</span><span class="sxs-lookup"><span data-stu-id="2352a-130">Compiling the friend assembly with C#</span></span>  
 <span data-ttu-id="2352a-131">如果您使用 C# 編譯器來編譯 friend 組件時，您必須使用明確指定輸出檔 （.exe 或.dll） 的名稱 **/out**編譯器選項。</span><span class="sxs-lookup"><span data-stu-id="2352a-131">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="2352a-132">因為編譯器尚未針對在繫結至外部參考時所建立的組件產生名稱，所以這是必要動作。</span><span class="sxs-lookup"><span data-stu-id="2352a-132">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="2352a-133">**/Out**編譯器選項是選擇性的 Visual Basic 編譯器，以及對應 **-out**或 **-o**編譯 friend 時，應該未使用編譯器選項組件的F#編譯器。</span><span class="sxs-lookup"><span data-stu-id="2352a-133">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
## <a name="compiling-the-friend-assembly-with-c"></a><span data-ttu-id="2352a-134">編譯 c + + 的 friend 組件</span><span class="sxs-lookup"><span data-stu-id="2352a-134">Compiling the friend assembly with C++</span></span>  
 <span data-ttu-id="2352a-135">在 c + +，才能啟用內部成員<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性的 friend 組件的存取，您必須使用`as_friend`c + + 指示詞中的屬性。</span><span class="sxs-lookup"><span data-stu-id="2352a-135">In C++, in order to make the internal members enabled by the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute accessible to a friend assembly, you must use the `as_friend` attribute in the C++  directive.</span></span> <span data-ttu-id="2352a-136">如需詳細資訊，請參閱 < [Friend 組件 （c + +）](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)。</span><span class="sxs-lookup"><span data-stu-id="2352a-136">For more information, see [Friend Assemblies (C++)](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2352a-137">**簽署的組件**</span><span class="sxs-lookup"><span data-stu-id="2352a-137">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="2352a-138">下列範例會使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，讓`internal`方法，名為`AppendDirectorySeparator`中可以看到另一個已簽署的組件簽署的組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-138">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="2352a-139">它會定義`FileUtilities`類別，其中包含內部`AppendDirectorySeparator`方法。</span><span class="sxs-lookup"><span data-stu-id="2352a-139">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="2352a-140"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性會套用至包含的組件`FileUtilities`類別。</span><span class="sxs-lookup"><span data-stu-id="2352a-140">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="2352a-141">屬性可讓組件名為`Friend1`存取這個內部成員。</span><span class="sxs-lookup"><span data-stu-id="2352a-141">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="2352a-142">如果下列範例會編譯至名為強式名稱組件`Friend1`，則`Example.Main`方法中的`Friend1`可以成功呼叫`FileUtilities.AppendDirectorySeparator`方法，雖然此方法是內部`Assembly1`組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-142">If the following example is compiled into a strong-named assembly named `Friend1`, the `Example.Main` method in `Friend1` can successfully call the `FileUtilities.AppendDirectorySeparator` method, although the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="2352a-143">請注意，是否您正在從命令列編譯 C# 中，您必須使用 **/out**編譯器參數，確保 friend 組件的名稱可用時，編譯器會將繫結至外部參考。</span><span class="sxs-lookup"><span data-stu-id="2352a-143">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="2352a-144">**不帶正負號的組件**</span><span class="sxs-lookup"><span data-stu-id="2352a-144">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="2352a-145">下列範例會使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，讓`internal`不帶正負號的組件到另一個可見的成員不帶正負號的組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-145">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="2352a-146">屬性可確保`internal``StringLib.IsFirstLetterUpperCase`名為組件中的方法`UtilityLib`會顯示名為組件中的程式碼`Friend2`。</span><span class="sxs-lookup"><span data-stu-id="2352a-146">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="2352a-147">以下是 UtilityLib.dll 的原始程式碼：</span><span class="sxs-lookup"><span data-stu-id="2352a-147">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="2352a-148">下列範例提供的原始程式碼`Friend2`組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-148">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="2352a-149">請注意，是否您正在從命令列編譯 C# 中，您必須使用 **/out**編譯器參數，確保 friend 組件的名稱可用時，編譯器會將繫結至外部參考。</span><span class="sxs-lookup"><span data-stu-id="2352a-149">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InternalsVisibleToAttribute (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.InternalsVisibleToAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InternalsVisibleToAttribute(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.CompilerServices.InternalsVisibleToAttribute : string -&gt; System.Runtime.CompilerServices.InternalsVisibleToAttribute" Usage="new System.Runtime.CompilerServices.InternalsVisibleToAttribute assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="2352a-150">Friend 組件的名稱。</span><span class="sxs-lookup"><span data-stu-id="2352a-150">The name of a friend assembly.</span></span></param>
        <summary><span data-ttu-id="2352a-151">使用指定的 Friend 組件名稱，初始化 <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="2352a-151">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.InternalsVisibleToAttribute" /> class with the name of the specified friend assembly.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2352a-152"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A>建構函式定義的 friend 組件，也就是可存取的內部組件和私用受保護的類型和成員的目前組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-152">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute.%23ctor%2A> constructor defines a friend assembly, which is an assembly that has access to the internal and private protected types and members of the current assembly.</span></span>  
  
 <span data-ttu-id="2352a-153">目前的組件和 friend 組件必須是不帶正負號，或兩者都必須使用強式名稱簽署。</span><span class="sxs-lookup"><span data-stu-id="2352a-153">Both the current assembly and the friend assembly must be unsigned, or both must be signed with a strong name.</span></span> <span data-ttu-id="2352a-154">(如需有關強式名稱組件的詳細資訊，請參閱 <<c0> [ 建立和使用強式名稱組件](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md)。)如果兩者都是不帶正負號，`assemblyName`引數是由指定不含目錄的路徑或檔案副檔名的 friend 組件的名稱所組成。</span><span class="sxs-lookup"><span data-stu-id="2352a-154">(For more information about strong-named assemblies, see [Creating and Using Strong-Named Assemblies](~/docs/framework/app-domains/create-and-use-strong-named-assemblies.md).) If both are unsigned, the `assemblyName` argument consists of the name of the friend assembly, specified without a directory path or file extension.</span></span> <span data-ttu-id="2352a-155">如果兩者都已簽署， `assemblyName` friend 組件，而不需要目錄路徑或檔案名稱副檔名，以及其完整公開金鑰 （但不是的公開金鑰 token） 的名稱所組成。</span><span class="sxs-lookup"><span data-stu-id="2352a-155">If both are signed, `assemblyName` consists of the name of the friend assembly without its directory path or file name extension, along with its full public key (but not its public key token).</span></span> <span data-ttu-id="2352a-156">強式名稱，例如文化特性、 版本或處理器架構的資訊，請提供的其他元件中不能指定`assemblyName`引數。</span><span class="sxs-lookup"><span data-stu-id="2352a-156">The other components of a strong name, such as those that provide culture, version, or processor architecture information, cannot be specified in the `assemblyName` argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2352a-157">如果您使用 C# 編譯器來編譯 friend 組件時，您必須使用明確指定輸出檔 （.exe 或.dll） 的名稱 **/out**編譯器選項。</span><span class="sxs-lookup"><span data-stu-id="2352a-157">If you use the C# compiler to compile the friend assembly, you must explicitly specify the name of the output file (.exe or .dll) by using the **/out** compiler option.</span></span> <span data-ttu-id="2352a-158">因為編譯器尚未針對在繫結至外部參考時所建立的組件產生名稱，所以這是必要動作。</span><span class="sxs-lookup"><span data-stu-id="2352a-158">This is required because the compiler has not yet generated the name for the assembly it is building at the time it is binding to external references.</span></span> <span data-ttu-id="2352a-159">**/Out**編譯器選項是選擇性的 Visual Basic 編譯器，以及對應 **-out**或 **-o**編譯 friend 時，應該未使用編譯器選項組件的F#編譯器。</span><span class="sxs-lookup"><span data-stu-id="2352a-159">The **/out** compiler option is optional for the Visual Basic compiler, and the corresponding **-out** or **-o** compiler option should not be used when compiling friend assemblies with the F# compiler.</span></span>  
  
 <span data-ttu-id="2352a-160">您可以使用[Sn.exe （強式名稱工具）](~/docs/framework/tools/sn-exe-strong-name-tool.md)來擷取強式名稱金鑰 (.snk) 檔案的完整公開金鑰。</span><span class="sxs-lookup"><span data-stu-id="2352a-160">You can use [Sn.exe (Strong Name Tool)](~/docs/framework/tools/sn-exe-strong-name-tool.md) to retrieve the full public key from a strong-named key (.snk) file.</span></span> <span data-ttu-id="2352a-161">若要這樣做，您可以執行下列步驟：</span><span class="sxs-lookup"><span data-stu-id="2352a-161">To do this, you perform the following steps:</span></span>  
  
1.  <span data-ttu-id="2352a-162">從強式名稱金鑰檔擷取公開金鑰，到個別的檔案：</span><span class="sxs-lookup"><span data-stu-id="2352a-162">Extract the public key from the strong-named key file to a separate file:</span></span>  
  
     <span data-ttu-id="2352a-163">\**Sn-p\*\*\*snk_file* *outfile* </span><span class="sxs-lookup"><span data-stu-id="2352a-163">**Sn -p**  *snk_file* *outfile*</span></span>  
  
2.  <span data-ttu-id="2352a-164">在主控台中顯示完整的公開金鑰：</span><span class="sxs-lookup"><span data-stu-id="2352a-164">Display the full public key to the console:</span></span>  
  
     <span data-ttu-id="2352a-165">\**Sn-tp\*\*\*outfile*</span><span class="sxs-lookup"><span data-stu-id="2352a-165">**Sn -tp**  *outfile*</span></span>  
  
3.  <span data-ttu-id="2352a-166">複製並貼到您的程式碼的完整公開金鑰值。</span><span class="sxs-lookup"><span data-stu-id="2352a-166">Copy and paste the full public key value into your source code.</span></span>  
  
 <span data-ttu-id="2352a-167">如需有關如何使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，請參閱下列主題：</span><span class="sxs-lookup"><span data-stu-id="2352a-167">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="2352a-168">Friend 組件 (C++)</span><span class="sxs-lookup"><span data-stu-id="2352a-168">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="2352a-169">Friend 組件</span><span class="sxs-lookup"><span data-stu-id="2352a-169">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
   
  
## Examples  
 <span data-ttu-id="2352a-170">**簽署的組件**</span><span class="sxs-lookup"><span data-stu-id="2352a-170">**Signed assemblies**</span></span>  
  
 <span data-ttu-id="2352a-171">下列範例會使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，讓`internal`方法，名為`AppendDirectorySeparator`中可以看到另一個已簽署的組件簽署的組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-171">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` method named `AppendDirectorySeparator` in a signed assembly visible to another signed assembly.</span></span> <span data-ttu-id="2352a-172">它會定義`FileUtilities`類別，其中包含內部`AppendDirectorySeparator`方法。</span><span class="sxs-lookup"><span data-stu-id="2352a-172">It defines a `FileUtilities` class that includes an internal `AppendDirectorySeparator` method.</span></span> <span data-ttu-id="2352a-173"><xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性會套用至包含的組件`FileUtilities`類別。</span><span class="sxs-lookup"><span data-stu-id="2352a-173">The <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute is applied to the assembly that contains the `FileUtilities` class.</span></span> <span data-ttu-id="2352a-174">屬性可讓組件名為`Friend1`存取這個內部成員。</span><span class="sxs-lookup"><span data-stu-id="2352a-174">The attribute allows an assembly named `Friend1` to access this internal member.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/assembly1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="2352a-175">如果下列範例會編譯至名為強式名稱組件`Friend1`，它可以成功地呼叫`FileUtilities.AppendDirectorySeparator`方法，即使方法是內部`Assembly1`組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-175">If the following example is compiled into a strong-named assembly named `Friend1`, it can successfully call the `FileUtilities.AppendDirectorySeparator` method, even though the method is internal to the `Assembly1` assembly.</span></span> <span data-ttu-id="2352a-176">請注意，是否您正在從命令列編譯 C# 中，您必須使用 **/out**編譯器參數，確保 friend 組件的名稱可用時，編譯器會將繫結至外部參考。</span><span class="sxs-lookup"><span data-stu-id="2352a-176">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend1.cpp#2)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend1.cs#2)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend1.vb#2)]  
  
 <span data-ttu-id="2352a-177">下列範例會使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，讓`internal`不帶正負號的組件到另一個可見的成員不帶正負號的組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-177">The following example uses the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute to make an `internal` member of an unsigned assembly visible to another unsigned assembly.</span></span> <span data-ttu-id="2352a-178">屬性可確保`internal``StringLib.IsFirstLetterUpperCase`名為組件中的方法`UtilityLib`會顯示名為組件中的程式碼`Friend2`。</span><span class="sxs-lookup"><span data-stu-id="2352a-178">The attribute ensures that the `internal` `StringLib.IsFirstLetterUpperCase` method in an assembly named `UtilityLib` is visible to the code in an assembly named `Friend2`.</span></span>  <span data-ttu-id="2352a-179">以下是 UtilityLib.dll 的原始程式碼：</span><span class="sxs-lookup"><span data-stu-id="2352a-179">The following is the source code for UtilityLib.dll:</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/utilitylib.cs#5)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/utilitylib.vb#5)]  
  
 <span data-ttu-id="2352a-180">**不帶正負號的組件**</span><span class="sxs-lookup"><span data-stu-id="2352a-180">**Unsigned assemblies**</span></span>  
  
 <span data-ttu-id="2352a-181">下列範例提供的原始程式碼`Friend2`組件。</span><span class="sxs-lookup"><span data-stu-id="2352a-181">The following example provides the source code for the `Friend2` assembly.</span></span> <span data-ttu-id="2352a-182">請注意，是否您正在從命令列編譯 C# 中，您必須使用 **/out**編譯器參數，確保 friend 組件的名稱可用時，編譯器會將繫結至外部參考。</span><span class="sxs-lookup"><span data-stu-id="2352a-182">Note that if you are compiling in C# from the command line, you must use the **/out** compiler switch to ensure that the name of the friend assembly is available when the compiler binds to external references.</span></span>  
  
 [!code-cpp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cpp/friend2.cpp#6)]
 [!code-csharp[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/cs/friend2.cs#6)]
 [!code-vb[System.Runtime.CompilerServices.InternalsVisibleToAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.internalsvisibletoattribute/vb/friend2.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllInternalsVisible">
      <MemberSignature Language="C#" Value="public bool AllInternalsVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllInternalsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property AllInternalsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllInternalsVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllInternalsVisible : bool with get, set" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AllInternalsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2352a-183">這個屬性未實作。</span><span class="sxs-lookup"><span data-stu-id="2352a-183">This property is not implemented.</span></span></summary>
        <value><span data-ttu-id="2352a-184">這個屬性不會傳回值。</span><span class="sxs-lookup"><span data-stu-id="2352a-184">This property does not return a value.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="System.Runtime.CompilerServices.InternalsVisibleToAttribute.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2352a-185">取得 friend 組件的名稱，以利使用 <see langword="internal" /> 關鍵字標記的所有型別和型別成員都能看見。</span><span class="sxs-lookup"><span data-stu-id="2352a-185">Gets the name of the friend assembly to which all types and type members that are marked with the <see langword="internal" /> keyword are to be made visible.</span></span></summary>
        <value><span data-ttu-id="2352a-186">表示 friend 組件之名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="2352a-186">A string that represents the name of the friend assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2352a-187">如需有關如何使用<xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute>屬性，請參閱下列主題：</span><span class="sxs-lookup"><span data-stu-id="2352a-187">For more information about how to use the <xref:System.Runtime.CompilerServices.InternalsVisibleToAttribute> attribute, see the following topics:</span></span>  
  
-   [<span data-ttu-id="2352a-188">Friend 組件 (C++)</span><span class="sxs-lookup"><span data-stu-id="2352a-188">Friend Assemblies (C++)</span></span>](https://msdn.microsoft.com/library/8d55fee0-b7c2-4fbe-a23b-dfe424dc71cd)  
  
-   [<span data-ttu-id="2352a-189">Friend 組件</span><span class="sxs-lookup"><span data-stu-id="2352a-189">Friend Assemblies</span></span>](https://msdn.microsoft.com/library/df0c70ea-2c2a-4bdc-9526-df951ad2d055)  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>