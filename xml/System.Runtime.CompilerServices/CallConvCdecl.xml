<Type Name="CallConvCdecl" FullName="System.Runtime.CompilerServices.CallConvCdecl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f926620ac0251f852260a83f4c995c3fe3b31730" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37639627" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallConvCdecl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvCdecl extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvCdecl" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvCdecl" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvCdecl" />
  <TypeSignature Language="F#" Value="type CallConvCdecl = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e0d31-101">表示方法應該使用 <see langword="Cdecl" /> 呼叫慣例。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e0d31-101">Indicates that a method should use the <see langword="Cdecl" /> calling convention.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d31-102">呼叫端會清除堆疊。</span><span class="sxs-lookup"><span data-stu-id="e0d31-102">The caller cleans the stack.</span></span> <span data-ttu-id="e0d31-103">這可讓呼叫的函式與`varargs`。</span><span class="sxs-lookup"><span data-stu-id="e0d31-103">This enables calling functions with `varargs`.</span></span>  
  
 <span data-ttu-id="e0d31-104">這個類別只作為方法的中繼資料簽章的自訂修飾詞。</span><span class="sxs-lookup"><span data-stu-id="e0d31-104">This class is used only as a custom modifier of the metadata signature of a method.</span></span>  
  
 <span data-ttu-id="e0d31-105">中的類別<xref:System.Runtime.CompilerServices>編譯器寫入器的僅供使用。</span><span class="sxs-lookup"><span data-stu-id="e0d31-105">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="e0d31-106">編譯器會發出中繼資料，以變更在 just-in-time (JIT) 編譯器在沒有適當的預設行為時，會處理值的方式中的自訂修飾詞。</span><span class="sxs-lookup"><span data-stu-id="e0d31-106">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="e0d31-107">當 JIT 編譯器遇到的 custom 修飾詞時，它會處理修飾詞指定的方式中的值。</span><span class="sxs-lookup"><span data-stu-id="e0d31-107">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="e0d31-108">編譯器可以自訂修飾詞套用至方法、 參數和傳回值。</span><span class="sxs-lookup"><span data-stu-id="e0d31-108">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="e0d31-109">JIT 編譯器的必要修飾詞必須回應，但可以忽略選擇性修飾詞。</span><span class="sxs-lookup"><span data-stu-id="e0d31-109">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="e0d31-110">C + + 編譯器可以發出自訂修飾詞來描述預設情況下，如何應該在 JIT 編譯器與 c + + 不相容的方式處理位元組被視為一個位元組。</span><span class="sxs-lookup"><span data-stu-id="e0d31-110">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in a manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="e0d31-111">您可以將自訂修飾詞發出至中繼資料，使用下列技巧的其中一個：</span><span class="sxs-lookup"><span data-stu-id="e0d31-111">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="e0d31-112">使用中的方法<xref:System.Reflection.Emit.TypeBuilder>這類類別<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>，和<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="e0d31-112">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="e0d31-113">產生 Microsoft intermediate language (MSIL) 指令檔，其中包含呼叫`modopt`並`modreq`，並組合的檔案[Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md)。</span><span class="sxs-lookup"><span data-stu-id="e0d31-113">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="e0d31-114">使用 unmanaged 的反映 API。</span><span class="sxs-lookup"><span data-stu-id="e0d31-114">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvCdecl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvCdecl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvCdecl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0d31-115">初始化 <see cref="T:System.Runtime.CompilerServices.CallConvCdecl" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0d31-115">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallConvCdecl" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0d31-116">中的類別<xref:System.Runtime.CompilerServices>編譯器寫入器的僅供使用。</span><span class="sxs-lookup"><span data-stu-id="e0d31-116">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>