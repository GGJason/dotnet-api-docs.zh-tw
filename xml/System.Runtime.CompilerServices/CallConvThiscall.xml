<Type Name="CallConvThiscall" FullName="System.Runtime.CompilerServices.CallConvThiscall">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6cffd7611f859c3e258c6cd4fe066aaa05720c09" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30475722" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallConvThiscall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvThiscall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvThiscall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvThiscall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvThiscall" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示方法應該使用 <see langword="ThisCall" /> 呼叫慣例。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當使用`ThisCall`呼叫慣例、 方法呼叫的第一個參數是`this`指標，它會儲存在暫存器 ECX。 方法呼叫的其他參數會推送至堆疊上。 這個呼叫慣例是用來呼叫從 Unmanaged DLL 匯出之類別上的方法。  
  
 中的類別<xref:System.Runtime.CompilerServices>編譯器撰寫者僅供使用。  
  
 編譯器會發出中繼資料，以變更預設行為不適用時，在 just-in-time (JIT) 編譯器，處理值的方式中的自訂修飾詞。  當 JIT 編譯器遇到的自訂修飾詞時，它會處理修飾詞指定的方式中的值。  編譯器可以套用的自訂修飾詞來方法、 參數和傳回值。  JIT 編譯器的必要修飾詞必須回應，但可以忽略的選擇性修飾詞。  C + + 編譯器可以發出來描述如何 byte，應該要視為 JIT 編譯器以 c + + 與不相容的方式處理位元組中預設的自訂修飾詞。  
  
 您可以發出自訂修飾詞至中繼資料，使用下列技巧：  
  
-   使用中的方法<xref:System.Reflection.Emit.TypeBuilder>類別如<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>，和<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>。  
  
-   產生 Microsoft intermediate language (MSIL) 指令檔，其中包含呼叫`modopt`和`modreq`，然後將組合至檔案最[Ilasm.exe （IL 組譯工具）](~/docs/framework/tools/ilasm-exe-il-assembler.md)。  
  
-   使用 unmanaged 的反映 API。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvThiscall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvThiscall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvThiscall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Runtime.CompilerServices.CallConvThiscall" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的類別<xref:System.Runtime.CompilerServices>編譯器撰寫者僅供使用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>