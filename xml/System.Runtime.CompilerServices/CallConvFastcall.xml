<Type Name="CallConvFastcall" FullName="System.Runtime.CompilerServices.CallConvFastcall">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="25a4cfb2de701654b77f9bc9640f28aecdbeaddd" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39819763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallConvFastcall" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CallConvFastcall extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.CallConvFastcall" />
  <TypeSignature Language="VB.NET" Value="Public Class CallConvFastcall" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallConvFastcall" />
  <TypeSignature Language="F#" Value="type CallConvFastcall = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1f27c-101">這個呼叫慣例在這個 .NET Framework 版本中不支援。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f27c-101">This calling convention is not supported in this version of the .NET Framework.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f27c-102">`__fastcall`呼叫慣例會指定函數的引數會傳入暫存器，可能的話。</span><span class="sxs-lookup"><span data-stu-id="1f27c-102">The `__fastcall` calling convention specifies that arguments to functions be passed in registers, when possible.</span></span>  
  
 <span data-ttu-id="1f27c-103">中的類別<xref:System.Runtime.CompilerServices>編譯器寫入器的僅供使用。</span><span class="sxs-lookup"><span data-stu-id="1f27c-103">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 <span data-ttu-id="1f27c-104">編譯器會發出中繼資料，以變更在 just-in-time (JIT) 編譯器在沒有適當的預設行為時，會處理值的方式中的自訂修飾詞。</span><span class="sxs-lookup"><span data-stu-id="1f27c-104">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="1f27c-105">當 JIT 編譯器遇到的 custom 修飾詞時，它會處理修飾詞指定的方式中的值。</span><span class="sxs-lookup"><span data-stu-id="1f27c-105">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="1f27c-106">編譯器可以自訂修飾詞套用至方法、 參數和傳回值。</span><span class="sxs-lookup"><span data-stu-id="1f27c-106">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="1f27c-107">JIT 編譯器的必要修飾詞必須回應，但可以忽略選擇性修飾詞。</span><span class="sxs-lookup"><span data-stu-id="1f27c-107">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  <span data-ttu-id="1f27c-108">C + + 編譯器可以發出自訂修飾詞來描述預設情況下，如何應該在 JIT 編譯器與 c + + 不相容的方式處理位元組被視為一個位元組。</span><span class="sxs-lookup"><span data-stu-id="1f27c-108">A C++ compiler could emit a custom modifier to describe how a byte should be treated in cases where the JIT compiler treats bytes in manner that is not compatible with C++ by default.</span></span>  
  
 <span data-ttu-id="1f27c-109">您可以將自訂修飾詞發出至中繼資料，使用下列技巧的其中一個：</span><span class="sxs-lookup"><span data-stu-id="1f27c-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="1f27c-110">使用中的方法<xref:System.Reflection.Emit.TypeBuilder>類別等<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>，和<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="1f27c-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class like <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="1f27c-111">產生 Microsoft intermediate language (MSIL) 指令檔，其中包含呼叫`modopt`並`modreq`，並組合的檔案[Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md)。</span><span class="sxs-lookup"><span data-stu-id="1f27c-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="1f27c-112">使用 unmanaged 的反映 API。</span><span class="sxs-lookup"><span data-stu-id="1f27c-112">Using the unmanaged reflection API.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallConvFastcall ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.CallConvFastcall.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallConvFastcall();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f27c-113">初始化 <see cref="T:System.Runtime.CompilerServices.CallConvFastcall" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f27c-113">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.CallConvFastcall" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f27c-114">中的類別<xref:System.Runtime.CompilerServices>編譯器寫入器的僅供使用。</span><span class="sxs-lookup"><span data-stu-id="1f27c-114">The classes in <xref:System.Runtime.CompilerServices> are for compiler writers' use only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>