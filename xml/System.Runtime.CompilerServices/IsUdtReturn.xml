<Type Name="IsUdtReturn" FullName="System.Runtime.CompilerServices.IsUdtReturn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f0ed8c7fe932669d0f5ed16b5f3bbbac146ec5f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37471967" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class IsUdtReturn" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit IsUdtReturn extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.IsUdtReturn" />
  <TypeSignature Language="VB.NET" Value="Public Class IsUdtReturn" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsUdtReturn abstract sealed" />
  <TypeSignature Language="F#" Value="type IsUdtReturn = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.CompilerServices.VisualC</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="27e84-101">表示傳回型別為使用者定義型別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="27e84-101">Indicates that a return type is a user-defined type.</span>
      </span>
      <span data-ttu-id="27e84-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="27e84-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27e84-103"><xref:System.Runtime.CompilerServices.IsUdtReturn>修飾詞可由 c + + 編譯器來標示具有原生 c + + 物件傳回語意的方法的傳回型別。</span><span class="sxs-lookup"><span data-stu-id="27e84-103">The <xref:System.Runtime.CompilerServices.IsUdtReturn> modifier is used by the C++ compiler to mark return types of methods that have native C++ object return semantics.</span></span>  <span data-ttu-id="27e84-104">Managed 偵錯工具會辨識正確地判斷要原生呼叫慣例，已在使用這個修飾詞。</span><span class="sxs-lookup"><span data-stu-id="27e84-104">The managed debugger recognizes this modifier to correctly determine that the native calling convention is in use.</span></span>  
  
 <span data-ttu-id="27e84-105">編譯器會發出中繼資料，以變更在 just-in-time (JIT) 編譯器在沒有適當的預設行為時，會處理值的方式中的自訂修飾詞。</span><span class="sxs-lookup"><span data-stu-id="27e84-105">Compilers emit custom modifiers within metadata to change the way that the just-in-time (JIT) compiler handles values when the default behavior is not appropriate.</span></span>  <span data-ttu-id="27e84-106">當 JIT 編譯器遇到的 custom 修飾詞時，它會處理修飾詞指定的方式中的值。</span><span class="sxs-lookup"><span data-stu-id="27e84-106">When the JIT compiler encounters a custom modifier, it handles the value in the way that the modifier specifies.</span></span>  <span data-ttu-id="27e84-107">編譯器可以自訂修飾詞套用至方法、 參數和傳回值。</span><span class="sxs-lookup"><span data-stu-id="27e84-107">Compilers can apply custom modifiers to methods, parameters, and return values.</span></span>  <span data-ttu-id="27e84-108">JIT 編譯器的必要修飾詞必須回應，但可以忽略選擇性修飾詞。</span><span class="sxs-lookup"><span data-stu-id="27e84-108">The JIT compiler must respond to required modifiers but can ignore optional modifiers.</span></span>  
  
 <span data-ttu-id="27e84-109">您可以將自訂修飾詞發出至中繼資料，使用下列技巧的其中一個：</span><span class="sxs-lookup"><span data-stu-id="27e84-109">You can emit custom modifiers into metadata using one of the following techniques:</span></span>  
  
-   <span data-ttu-id="27e84-110">使用中的方法<xref:System.Reflection.Emit.TypeBuilder>這類類別<xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>， <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>，和<xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>。</span><span class="sxs-lookup"><span data-stu-id="27e84-110">Using methods in the <xref:System.Reflection.Emit.TypeBuilder> class such as <xref:System.Reflection.Emit.TypeBuilder.DefineMethod%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineField%2A>, <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A>, and <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A>.</span></span>  
  
-   <span data-ttu-id="27e84-111">產生 Microsoft intermediate language (MSIL) 指令檔，其中包含呼叫`modopt`並`modreq`，並組合的檔案[Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md)。</span><span class="sxs-lookup"><span data-stu-id="27e84-111">Generating a Microsoft intermediate language (MSIL) instruction file that contains calls to `modopt` and `modreq`, and assembling the file with the [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span>  
  
-   <span data-ttu-id="27e84-112">使用 unmanaged 的反映 API。</span><span class="sxs-lookup"><span data-stu-id="27e84-112">Using the unmanaged reflection API.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27e84-113">下列程式碼範例會建立組件中的類別<xref:System.Reflection.Emit>命名空間，並發出<xref:System.Runtime.CompilerServices.IsUdtReturn>該組件的修飾詞。</span><span class="sxs-lookup"><span data-stu-id="27e84-113">The following code example creates an assembly using classes in the <xref:System.Reflection.Emit> namespace and emits the <xref:System.Runtime.CompilerServices.IsUdtReturn> modifier into that assembly.</span></span>  
  
 [!code-cpp[Runtime.CompilerServices.IsUdtReturn#1](~/samples/snippets/cpp/VS_Snippets_CLR/Runtime.CompilerServices.IsUdtReturn/CPP/sample.cpp#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members />
</Type>