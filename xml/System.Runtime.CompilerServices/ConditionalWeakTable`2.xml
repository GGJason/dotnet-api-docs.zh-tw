<Type Name="ConditionalWeakTable&lt;TKey,TValue&gt;" FullName="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bce20f7cca9b913a61401bd35c2b545b5de16a2f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39726199" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ConditionalWeakTable&lt;TKey,TValue&gt; where TKey : class where TValue : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ConditionalWeakTable`2&lt;class TKey, class TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConditionalWeakTable(Of TKey, TValue)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TValue&gt;&#xA; where TKey : class where TValue : classpublic ref class ConditionalWeakTable sealed" />
  <TypeSignature Language="F#" Value="type ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TValue">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">
      <span data-ttu-id="e72c7-101">欄位所附加至的參考類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e72c7-101">The reference type to which the field is attached.</span>
      </span>
    </typeparam>
    <typeparam name="TValue">
      <span data-ttu-id="e72c7-102">欄位的類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e72c7-102">The field's type.</span>
      </span>
      <span data-ttu-id="e72c7-103">這必須是參考類型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e72c7-103">This must be a reference type.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="e72c7-104">讓編譯器動態地將物件欄位附加至 Managed 物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e72c7-104">Enables compilers to dynamically attach object fields to managed objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e72c7-105"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>類別可讓您將任意屬性至受管理物件，在執行階段的語言編譯器。</span><span class="sxs-lookup"><span data-stu-id="e72c7-105">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class enables language compilers to attach arbitrary properties to managed objects at run time.</span></span> <span data-ttu-id="e72c7-106">A<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>物件是一個字典，將受管理的物件，代表依索引鍵，對其附加的屬性，由值表示繫結。</span><span class="sxs-lookup"><span data-stu-id="e72c7-106">A <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object is a dictionary that binds a managed object, which is represented by a key, to its attached property, which is represented by a value.</span></span> <span data-ttu-id="e72c7-107">物件的索引鍵是個別的執行個體之`TKey`類別要附加屬性，且其值為屬性值指派給對應的物件。</span><span class="sxs-lookup"><span data-stu-id="e72c7-107">The object's keys are the individual instances of the `TKey` class to which the property is attached, and its values are the property values that are assigned to the corresponding objects.</span></span>  
  
 <span data-ttu-id="e72c7-108">索引鍵必須是唯一的。換句話說，<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>類別支援一個附加的值，每個受管理的物件。</span><span class="sxs-lookup"><span data-stu-id="e72c7-108">Keys must be unique; in other words, the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class supports one attached value per managed object.</span></span> <span data-ttu-id="e72c7-109">兩個索引鍵是否相等，如果將其傳遞至<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="e72c7-109">Two keys are equal if passing them to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e72c7-110">您無法控制相等比較，藉由覆寫<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>明確地將設定索引鍵的雜湊碼。</span><span class="sxs-lookup"><span data-stu-id="e72c7-110">You cannot control equality comparisons by overriding <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> to explicitly set the hash code for a key.</span></span> <span data-ttu-id="e72c7-111"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>類別不會使用<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>方法來計算雜湊程式碼，並因此不會呼叫<xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>會覆寫。</span><span class="sxs-lookup"><span data-stu-id="e72c7-111">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class does not use the <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> method to compute hash codes, and therefore does not invoke <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType> overrides.</span></span>  
  
 <span data-ttu-id="e72c7-112">雖然<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>類別保存索引鍵/值組的集合，它最適合視為資料表，而不是一個字典物件。</span><span class="sxs-lookup"><span data-stu-id="e72c7-112">Although the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class holds a collection of key/value pairs, it is best thought of as a table rather than a dictionary object.</span></span> <span data-ttu-id="e72c7-113"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>字典中的幾種不同的類別：</span><span class="sxs-lookup"><span data-stu-id="e72c7-113">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from a dictionary in several ways:</span></span>  
  
-   <span data-ttu-id="e72c7-114">它不會保存金鑰。</span><span class="sxs-lookup"><span data-stu-id="e72c7-114">It does not persist keys.</span></span> <span data-ttu-id="e72c7-115">也就是索引鍵不保持運作只是因為它是集合的成員。</span><span class="sxs-lookup"><span data-stu-id="e72c7-115">That is, a key is not kept alive only because it is a member of the collection.</span></span>  
  
-   <span data-ttu-id="e72c7-116">它不包含的所有方法 (例如`GetEnumerator`或`Contains`) 通常具有字典。</span><span class="sxs-lookup"><span data-stu-id="e72c7-116">It does not include all the methods (such as `GetEnumerator` or `Contains`) that a dictionary typically has.</span></span>  
  
-   <span data-ttu-id="e72c7-117">它不會實作<xref:System.Collections.Generic.IDictionary%602>介面。</span><span class="sxs-lookup"><span data-stu-id="e72c7-117">It does not implement the <xref:System.Collections.Generic.IDictionary%602> interface.</span></span>  
  
 <span data-ttu-id="e72c7-118"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>類別不同於其他集合中的物件儲存在集合中的索引鍵的物件存留期管理。</span><span class="sxs-lookup"><span data-stu-id="e72c7-118">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class differs from other collection objects in its management of the object lifetime of keys stored in the collection.</span></span> <span data-ttu-id="e72c7-119">一般情況下，當物件儲存在集合中時，其存留期會持續直到它會移除 （而沒有其他參考的物件） 或集合物件本身被終結。</span><span class="sxs-lookup"><span data-stu-id="e72c7-119">Ordinarily, when an object is stored in a collection, its lifetime lasts until it is removed (and there are no additional references to the object) or until the collection object itself is destroyed.</span></span> <span data-ttu-id="e72c7-120">不過，在<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>類別，新增至資料表的索引鍵/值組並不保證，將會保存金鑰，即使可以直接從儲存在資料表中 （例如，如果資料表包含一個索引鍵，A 值 V1 值觸達與第二個金鑰，B，P2，其中包含參考的值)。</span><span class="sxs-lookup"><span data-stu-id="e72c7-120">However, in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> class, adding a key/value pair to the table does not ensure that the key will persist, even if it can be reached directly from a value stored in the table (for example, if the table contains one key, A, with a value V1, and a second key, B, with a value P2 that contains a reference to A).</span></span> <span data-ttu-id="e72c7-121">相反地，<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>會自動移除的索引鍵/值項目，只要不存在資料表外部的任何其他索引鍵的參考。</span><span class="sxs-lookup"><span data-stu-id="e72c7-121">Instead, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> automatically removes the key/value entry as soon as no other references to a key exist outside the table.</span></span> <span data-ttu-id="e72c7-122">這個範例將提供說明。</span><span class="sxs-lookup"><span data-stu-id="e72c7-122">The example provides an illustration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e72c7-123">下列範例說明的金鑰儲存在<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>後終結它的參考資料表外部資料表不存在。</span><span class="sxs-lookup"><span data-stu-id="e72c7-123">The following example illustrates that a key stored in the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table does not persist after references to it outside the table are destroyed.</span></span> <span data-ttu-id="e72c7-124">此範例會定義兩個類別： `ManagedClass`，這代表資料表中的索引鍵和`ClassData`，代表索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="e72c7-124">The example defines two classes: `ManagedClass`, which represents the key in the table, and `ClassData`, which represents the key's value.</span></span> <span data-ttu-id="e72c7-125">此範例會具現化每個類型的三個物件。</span><span class="sxs-lookup"><span data-stu-id="e72c7-125">The example instantiates three objects of each type.</span></span> <span data-ttu-id="e72c7-126">它也會具現化<xref:System.WeakReference>物件，表示第二個`ManagedClass`，然後終結第二個`ManagedClass`執行個體。</span><span class="sxs-lookup"><span data-stu-id="e72c7-126">It also instantiates a <xref:System.WeakReference> object that represents the second `ManagedClass`, and then destroys the second `ManagedClass` instance.</span></span> <span data-ttu-id="e72c7-127">嘗試擷取第二個`ManagedClass`物件從<xref:System.WeakReference.Target%2A>屬性會指出物件沒有參考保留。</span><span class="sxs-lookup"><span data-stu-id="e72c7-127">The attempt to retrieve the second `ManagedClass` object from the <xref:System.WeakReference.Target%2A> property indicates that no references to the object remain.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/cs/example1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.class/vb/example1.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="e72c7-128">執行個體<see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" />類別都是安全執行緒。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e72c7-128">Instances of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class are thread safe.</span>
      </span>
      <span data-ttu-id="e72c7-129">它們不需要呼叫端進行任何額外的鎖定。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e72c7-129">They do not require callers to do any additional locking.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConditionalWeakTable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e72c7-130">初始化 <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-130">Initializes a new instance of the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e72c7-131"><xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A>建構函式具現化空<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>資料表; 也就是說，資料表包含任何索引鍵/值組。</span><span class="sxs-lookup"><span data-stu-id="e72c7-131">The <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.%23ctor%2A> constructor instantiates an empty <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table; that is, the table contains no key/value pairs.</span></span> <span data-ttu-id="e72c7-132">您可以加入索引鍵/值組，藉由呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>， <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>，或<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e72c7-132">You can add key/value pairs by calling the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>, or <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method.</span></span>  
  
 <span data-ttu-id="e72c7-133">在每個索引鍵<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>必須是唯一的物件。</span><span class="sxs-lookup"><span data-stu-id="e72c7-133">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="e72c7-134">索引鍵不是唯一，如果它們參考相同的物件 (亦即，如果將它們傳遞做為引數時，才<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法會傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="e72c7-134">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Add(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.Add : 'Key * 'Value -&gt; unit" Usage="conditionalWeakTable.Add (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e72c7-135">要加入的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-135">The key to add.</span>
          </span>
          <span data-ttu-id="e72c7-136">
            <c>索引鍵</c> 代表要附加屬性的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-136">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e72c7-137">索引鍵的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-137">The key's property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e72c7-138">將索引鍵加入至表格。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-138">Adds a key to the table.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e72c7-139">在每個索引鍵<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>必須是唯一的物件。</span><span class="sxs-lookup"><span data-stu-id="e72c7-139">Every key in a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> object must be unique.</span></span> <span data-ttu-id="e72c7-140">索引鍵不是唯一，如果它們參考相同的物件 (亦即，如果將它們傳遞做為引數時，才<xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType>方法會傳回`true`)。</span><span class="sxs-lookup"><span data-stu-id="e72c7-140">Keys are not unique if they refer to the same object (that is, if passing them as arguments to the <xref:System.Object.ReferenceEquals%2A?displayProperty=nameWithType> method returns `true`).</span></span>  
  
 <span data-ttu-id="e72c7-141">如果金鑰是記憶體回收期間加法運算，已移除現有的索引鍵/值組，並將新的索引鍵/值組加入沒有擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="e72c7-141">If the key is garbage-collected during the addition operation, the existing key/value pair is removed and the new key/value pair is added without an exception being thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e72c7-142">下列範例會定義`MainClass`類別以及`MainInfo`類別，可提供下列相關資訊`MainClass`執行個體。</span><span class="sxs-lookup"><span data-stu-id="e72c7-142">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="e72c7-143">此範例接著會呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>方法來加入`MainClass`物件和其附加`MainInfo`物件<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>資料表。</span><span class="sxs-lookup"><span data-stu-id="e72c7-143">The example then calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="e72c7-144">此範例也會示範呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>並<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法，以將索引鍵/值組新增至資料表，和<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A>方法來擷取現有的索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="e72c7-144">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e72c7-145">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-145">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="e72c7-146">
            <paramref name="key" /> 已存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-146">
              <paramref name="key" /> already exists.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e72c7-147">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-147">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e72c7-148">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-148">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      </Docs>
    </Member>
    <Member MemberName="AddOrUpdate">
      <MemberSignature Language="C#" Value="public void AddOrUpdate (TKey key, TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrUpdate(!TKey key, !TValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.AddOrUpdate(`0,`1)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrUpdate (key As TKey, value As TValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrUpdate(TKey key, TValue value);" />
      <MemberSignature Language="F#" Value="member this.AddOrUpdate : 'Key * 'Value -&gt; unit" Usage="conditionalWeakTable.AddOrUpdate (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" />
      </Parameters>
      <Docs>
        <param name="key">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="conditionalWeakTable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ConditionalWeakTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ConditionalWeakTable`2 ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="conditionalWeakTable.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e72c7-149">確認釋出資源，並在記憶體回收行程再利用 <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> 物件時執行其他清除作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-149">Ensures that resources are freed and other cleanup operations are performed when the garbage collector reclaims the <see cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e72c7-150">記憶體回收行程呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A>時準備好完成目前的物件。</span><span class="sxs-lookup"><span data-stu-id="e72c7-150">The garbage collector calls <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Finalize%2A> when the current object is ready to be finalized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="GetOrCreateValue">
      <MemberSignature Language="C#" Value="public TValue GetOrCreateValue (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetOrCreateValue(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOrCreateValue (key As TKey) As TValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetOrCreateValue(TKey key);" />
      <MemberSignature Language="F#" Value="member this.GetOrCreateValue : 'Key -&gt; 'Value" Usage="conditionalWeakTable.GetOrCreateValue key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e72c7-151">要搜尋的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-151">The key to search for.</span>
          </span>
          <span data-ttu-id="e72c7-152">
            <c>索引鍵</c> 代表要附加屬性的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-152">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e72c7-153">以不可分割方式搜尋表格中的指定索引鍵並傳回對應值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-153">Atomically searches for a specified key in the table and returns the corresponding value.</span>
          </span>
          <span data-ttu-id="e72c7-154">如果索引鍵不存在於表格中，則此方法會叫用代表表格值之類別的預設建構函式，以建立繫結至指定索引鍵的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-154">If the key does not exist in the table, the method invokes the default constructor of the class that represents the table's value to create a value that is bound to the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e72c7-155">如果 <paramref name="key" /> 已存在於表格中，則為對應於 <paramref name="key" /> 的值；否則為 <paramref name="TValue" /> 泛型類型參數定義之類別的預設建構函式所建立的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-155">The value that corresponds to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, a new value created by the default constructor of the class defined by the <paramref name="TValue" /> generic type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e72c7-156">如果`key`沒有在資料表中，方法就會將它，藉由呼叫類別所定義的預設建構函式具現化的物件以及`TValue`泛型型別參數。</span><span class="sxs-lookup"><span data-stu-id="e72c7-156">If `key` does not exist in the table, the method adds it, along with the object that is instantiated by calling the default constructor of the class defined by the `TValue` generic type parameter.</span></span> <span data-ttu-id="e72c7-157">如果`TValue`類別具有沒有預設建構函式，<xref:System.MissingMethodException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="e72c7-157">If the `TValue` class has no default constructor, a <xref:System.MissingMethodException> is thrown.</span></span>  
  
 <span data-ttu-id="e72c7-158">這是建議的方法，擷取現有的值，或加入新的值，以<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>資料表的資料表值的類別定義的預設建構函式。</span><span class="sxs-lookup"><span data-stu-id="e72c7-158">This is the recommended method of retrieving an existing value or adding a new value to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table if the class of the table's value defines a default constructor.</span></span> <span data-ttu-id="e72c7-159">如果它不會定義預設建構函式，可以改為呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法，它依賴提供回呼方法以具現化物件，代表資料表的值</span><span class="sxs-lookup"><span data-stu-id="e72c7-159">If it does not define a default constructor, you can instead call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method, which relies on a callback-provided method to instantiate the object representing the table's value</span></span>  
  
 <span data-ttu-id="e72c7-160">若要擷取現有的索引鍵的值，而不會增加索引鍵/值組，在資料表中，找不到索引鍵時呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e72c7-160">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e72c7-161">下列範例會定義`MainClass`類別以及`MainInfo`類別，可提供下列相關資訊`MainClass`執行個體。</span><span class="sxs-lookup"><span data-stu-id="e72c7-161">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="e72c7-162">此範例會呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>方法來加入`MainClass`物件和其附加`MainInfo`物件<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>資料表。</span><span class="sxs-lookup"><span data-stu-id="e72c7-162">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="e72c7-163">此範例也會示範呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>並<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法，以將索引鍵/值組新增至資料表，和<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A>方法來擷取現有的索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="e72c7-163">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e72c7-164">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-164">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="e72c7-165">
            <block subset="none" type="note">
              <para>在[適用於 Microsoft Store 應用程式的 .NET](http://go.microsoft.com/fwlink/?LinkID=247912)中或[可攜式類別庫](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)中，改為捕捉基底類別例外狀況 <see cref="T:System.MissingMemberException" />。</para>
            </block>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-165">
              <block subset="none" type="note">
                <para> In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.MissingMemberException" />, instead.  </para>
              </block>
            </span>
          </span>
          <span data-ttu-id="e72c7-166">此類別代表資料表的值未定義預設建構函式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-166">The class that represents the table's value does not define a default constructor.</span>
          </span>
        </exception>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public TValue GetValue (TKey key, System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;.CreateValueCallback createValueCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !TValue GetValue(!TKey key, class System.Runtime.CompilerServices.ConditionalWeakTable`2/CreateValueCallback&lt;!TKey, !TValue&gt; createValueCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback{`0,`1})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TValue GetValue(TKey key, System::Runtime::CompilerServices::ConditionalWeakTable&lt;TKey, TValue&gt;::CreateValueCallback ^ createValueCallback);" />
      <MemberSignature Language="F#" Value="member this.GetValue : 'Key * System.Runtime.CompilerServices.ConditionalWeakTable&lt;'Key, 'Value (requires 'Key : null and 'Value : null)&gt;.CreateValueCallback -&gt; 'Value" Usage="conditionalWeakTable.GetValue (key, createValueCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="createValueCallback" Type="System.Runtime.CompilerServices.ConditionalWeakTable&lt;TKey,TValue&gt;+CreateValueCallback" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e72c7-167">要搜尋的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-167">The key to search for.</span>
          </span>
          <span data-ttu-id="e72c7-168">
            <c>索引鍵</c> 代表要附加屬性的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-168">
              <c>key</c> represents the object to which the property is attached.</span>
          </span>
        </param>
        <param name="createValueCallback">
          <span data-ttu-id="e72c7-169">方法的委派，可針對指定的 <c>索引鍵</c> 建立值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-169">A delegate to a method that can create a value for the given <c>key</c>.</span>
          </span>
          <span data-ttu-id="e72c7-170">它具有類型為 <c>TKey</c> 的單一參數，並且會傳回 <c>TValue</c> 類型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-170">It has a single parameter of type <c>TKey</c>, and returns a value of type <c>TValue</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e72c7-171">以不可分割方式搜尋表格中的指定索引鍵並傳回對應值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-171">Atomically searches for a specified key in the table and returns the corresponding value.</span>
          </span>
          <span data-ttu-id="e72c7-172">如果索引鍵不存在於表格中，則此方法會叫用回呼方法來建立繫結至指定索引鍵的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-172">If the key does not exist in the table, the method invokes a callback method to create a value that is bound to the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e72c7-173">如果 <paramref name="key" /> 已存在於表格中，則為附加至 <paramref name="key" /> 的值，否則為 <paramref name="createValueCallback" /> 委派所傳回的新值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-173">The value attached to <paramref name="key" />, if <paramref name="key" /> already exists in the table; otherwise, the new value returned by the <paramref name="createValueCallback" /> delegate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e72c7-174">如果`key`不存在於資料表中，<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>叫用方法所定義`createValueCallback`參數並將它傳遞的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e72c7-174">If `key` does not exist in the table, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> invokes the method that is defined by the `createValueCallback` parameter and passes it the key.</span></span> <span data-ttu-id="e72c7-175">新的值會繫結至資料表中的索引鍵，並傳回結果。</span><span class="sxs-lookup"><span data-stu-id="e72c7-175">A new value is bound to the key in the table and returned as a result.</span></span>  
  
 <span data-ttu-id="e72c7-176">類別表示資料表的值不會定義預設建構函式時，才，請使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="e72c7-176">Use this method only when the class that represents the table's value does not define a default constructor.</span></span> <span data-ttu-id="e72c7-177">如果它未定義的預設建構函式，請使用<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>方法改為。</span><span class="sxs-lookup"><span data-stu-id="e72c7-177">If it does define a default constructor, use the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> method instead.</span></span> <span data-ttu-id="e72c7-178">若要擷取現有的索引鍵的值，而不會增加索引鍵/值組，在資料表中，找不到索引鍵時呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e72c7-178">To retrieve the value of an existing key without adding the key/value pair if the key is not found in the table, call the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method.</span></span>  
  
 <span data-ttu-id="e72c7-179">如果多個執行緒嘗試建立相同的索引鍵，`createValueCallback`可能多次叫用具有相同索引鍵。</span><span class="sxs-lookup"><span data-stu-id="e72c7-179">If multiple threads try to create the same key, `createValueCallback` may be invoked multiple times with the same key.</span></span> <span data-ttu-id="e72c7-180">只有其中一個這些呼叫會成功，並將其傳回的值會加入資料表。</span><span class="sxs-lookup"><span data-stu-id="e72c7-180">Only one of these calls will succeed, and its returned value will be added to the table.</span></span> <span data-ttu-id="e72c7-181">哪一個執行緒成功地建立值為不定。</span><span class="sxs-lookup"><span data-stu-id="e72c7-181">Which thread succeeds in creating the value is indeterminate.</span></span> <span data-ttu-id="e72c7-182">此規則允許叫用資料表`createValueCallback`外部的內部資料表鎖定，以防止發生鎖死。</span><span class="sxs-lookup"><span data-stu-id="e72c7-182">This rule permits the table to invoke `createValueCallback` outside the internal table lock to prevent deadlocks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e72c7-183">下列範例會定義`MainClass`類別以及`MainInfo`類別，可提供下列相關資訊`MainClass`執行個體。</span><span class="sxs-lookup"><span data-stu-id="e72c7-183">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="e72c7-184">它也會定義靜態 (`Shared`在 Visual Basic)`CreateAttachedValue`方法，可以指派給<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback>委派，並傳遞至<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="e72c7-184">It also defines a static (`Shared` in Visual Basic) `CreateAttachedValue` method that can be assigned to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.CreateValueCallback> delegate and passed to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method.</span></span> <span data-ttu-id="e72c7-185">此範例會呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法來加入`MainClass`物件和其附加`MainInfo`物件<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>資料表。</span><span class="sxs-lookup"><span data-stu-id="e72c7-185">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> method to add a `MainClass` object and its attached `MainInfo` object to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="e72c7-186">此範例也會示範呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>並<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>方法，以將索引鍵/值組新增至資料表，和<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A>方法來擷取現有的索引鍵的值。</span><span class="sxs-lookup"><span data-stu-id="e72c7-186">The example also illustrates calls to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A> and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A> methods to add key/value pairs to the table, and to the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to retrieve the value of an existing key.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e72c7-187">
            <paramref name="key" /> 或 <paramref name="createValueCallback" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-187">
              <paramref name="key" /> or <paramref name="createValueCallback" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e72c7-188">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-188">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e72c7-189">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-189">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
        <altmember cref="T:System.Runtime.CompilerServices.ConditionalWeakTable`2.CreateValueCallback" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Remove(!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As TKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Remove(TKey key);" />
      <MemberSignature Language="F#" Value="member this.Remove : 'Key -&gt; bool" Usage="conditionalWeakTable.Remove key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e72c7-190">要移除的索引鍵。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-190">The key to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e72c7-191">從表格移除索引鍵和其值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-191">Removes a key and its value from the table.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e72c7-192">如果已找到並移除索引鍵則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-192">
              <see langword="true" /> if the key is found and removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e72c7-193">如果金鑰是回收此作業期間，此方法不會引發例外狀況，並傳回的值會是未定義。</span><span class="sxs-lookup"><span data-stu-id="e72c7-193">If the key is garbage-collected during this operation, the method does not raise an exception and the return value is undefined.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e72c7-194">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-194">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e72c7-195">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-195">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e72c7-196">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-196">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt; IEnumerable&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;!TKey, !TValue&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;TKey,TValue&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;TKey, TValue&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;TKey,TValue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (TKey key, out TValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetValue(!TKey key, [out] !TValue&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.TryGetValue(`0,`1@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As TKey, ByRef value As TValue) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetValue(TKey key, [Runtime::InteropServices::Out] TValue % value);" />
      <MemberSignature Language="F#" Value="member this.TryGetValue : 'Key *  -&gt; bool" Usage="conditionalWeakTable.TryGetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="value" Type="TValue" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="e72c7-197">索引鍵，代表具有附加屬性的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-197">The key that represents an object with an attached property.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="e72c7-198">這個方法傳回的內容會包含附加的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-198">When this method returns, contains the attached property value.</span>
          </span>
          <span data-ttu-id="e72c7-199">如果找不到 <c>索引鍵</c>，<c>值</c> 會包含預設值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-199">If <c>key</c> is not found, <c>value</c> contains the default value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e72c7-200">取得指定之索引鍵的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-200">Gets the value of the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e72c7-201">如果找到 <paramref name="key" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-201">
              <see langword="true" /> if <paramref name="key" /> is found; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e72c7-202">如果金鑰是回收此作業期間，此方法可能會傳回`false`並設定`value`為預設值 （如同索引鍵是不存在）。</span><span class="sxs-lookup"><span data-stu-id="e72c7-202">If the key is garbage-collected during this operation, the method may return `false` and set `value` to the default value (as if the key were not present).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e72c7-203">下列範例會定義`MainClass`類別以及`MainInfo`類別，可提供下列相關資訊`MainClass`執行個體。</span><span class="sxs-lookup"><span data-stu-id="e72c7-203">The following example defines a `MainClass` class and a `MainInfo` class, which provides information about the `MainClass` instance.</span></span> <span data-ttu-id="e72c7-204">此範例會呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>， <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>，並<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A>方法，以新增至索引鍵/值組<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602>資料表。</span><span class="sxs-lookup"><span data-stu-id="e72c7-204">The example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.Add%2A>, <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetOrCreateValue%2A>, and <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.GetValue%2A> methods to add key/value pairs to a <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602> table.</span></span> <span data-ttu-id="e72c7-205">在每個案例中，此範例會呼叫<xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A>方法，以確認索引鍵/值組已加入至資料表。</span><span class="sxs-lookup"><span data-stu-id="e72c7-205">In each case, the example calls the <xref:System.Runtime.CompilerServices.ConditionalWeakTable%602.TryGetValue%2A> method to confirm that the key/value pair has been added to the table.</span></span>  
  
 [!code-csharp[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Runtime.CompilerServices.ConditionalWeakTable.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.compilerservices.conditionalweaktable.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e72c7-206">
            <paramref name="key" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-206">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="e72c7-207">需要完全信任立即呼叫端。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-207">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="e72c7-208">此成員不能由部分信任或不透明的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e72c7-208">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetOrCreateValue(`0)" />
        <altmember cref="M:System.Runtime.CompilerServices.ConditionalWeakTable`2.GetValue(`0,System.Runtime.CompilerServices.ConditionalWeakTable{`0,`1}.CreateValueCallback)" />
      </Docs>
    </Member>
  </Members>
</Type>