<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CodeGroup.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ed7902f2adebda5a22b06a65e6b163e182e032e4.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed7902f2adebda5a22b06a65e6b163e182e032e4</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Policy.CodeGroup">
          <source>Represents the abstract base class from which all implementations of code groups must derive.</source>
          <target state="translated">表示抽象基底類別，程式碼群組之所有實作 (Implementation) 必須從它衍生。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.CodeGroup">
          <source>Code groups are the building blocks of code access security policy.</source>
          <target state="translated">程式碼群組是建置組塊的程式碼存取安全性原則。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.CodeGroup">
          <source>Each policy level consists of a root code group that can have child code groups.</source>
          <target state="translated">每個原則層級是由根程式碼群組可以有子程式碼群組所組成。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.CodeGroup">
          <source>Each child code group can have their own child code groups; this behavior extends to any number of levels, forming a tree.</source>
          <target state="translated">每一個子程式碼群組可以有自己的子程式碼群組。這個行為會延伸到任何數目的層級，進而形成樹狀。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.CodeGroup">
          <source>Each code group has a membership condition that determines if a given assembly belongs to it based on the evidence for that assembly.</source>
          <target state="translated">每個程式碼群組有成員資格條件，可判斷指定的組件所屬是否會根據該組件的辨識項。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.CodeGroup">
          <source>Only those code groups whose membership conditions match a given assembly's evidence will be applied.</source>
          <target state="translated">程式碼的群組成員資格符合給定組件的辨識項將會套用。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Policy.CodeGroup">
          <source>If a matching code group has child code groups, then those children whose membership conditions also match the supplied evidence will likewise be applied.</source>
          <target state="translated">如果比對程式碼群組沒有子程式碼群組，那些成員資格條件也符合提供的辨識項的子系會同樣地套用。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>A membership condition that tests evidence to determine whether this code group applies policy.</source>
          <target state="translated">成員資格條件，其測試辨識項以判斷這個程式碼群組是否套用原則。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.</source>
          <target state="translated">程式碼群組的原則陳述式，形式為要授與符合成員資格條件的程式碼之使用權限集合和屬性 (Attribute)。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>Initializes a new instance of <ph id="ph1">&lt;see cref="T:System.Security.Policy.CodeGroup" /&gt;</ph>.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Security.Policy.CodeGroup" /&gt;</ph> 的新執行個體。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>This constructor creates a basic code group and should be called from the constructors of custom code groups.</source>
          <target state="translated">這個建構函式會建立基本的程式碼群組，並應從自訂程式碼群組的建構函式呼叫。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>You can add child code groups using the <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</ph> method.</source>
          <target state="translated">您可以將子程式碼群組使用<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>The <ph id="ph1">&lt;paramref name="membershipCondition" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="membershipCondition" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>The type of the <ph id="ph1">&lt;paramref name="membershipCondition" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="membershipCondition" /&gt;</ph> 參數的型別無效。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)">
          <source>The type of the <ph id="ph1">&lt;paramref name="policy" /&gt;</ph> parameter is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="policy" /&gt;</ph> 參數的型別無效。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
          <source>The code group to be added as a child.</source>
          <target state="translated">要加入為子程式碼群組的程式碼群組。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
          <source>This new child code group is added to the end of the list.</source>
          <target state="translated">這個新的子程式碼群組會加入至清單的結尾處。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
          <source>Adds a child code group to the current code group.</source>
          <target state="translated">加入子程式碼群組到目前程式碼群組。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
          <source>The <ph id="ph1">&lt;paramref name="group" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="group" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)">
          <source>The <ph id="ph1">&lt;paramref name="group" /&gt;</ph> parameter is not a valid code group.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="group" /&gt;</ph> 參數不是有效程式碼群組。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.AttributeString">
          <source>Gets a string representation of the attributes of the policy statement for the code group.</source>
          <target state="translated">取得程式碼群組之原則陳述式屬性 (Attribute) 的字串表示。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.AttributeString">
          <source>A string representation of the attributes of the policy statement for the code group.</source>
          <target state="translated">程式碼群組之原則陳述式屬性的字串表示。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.AttributeString">
          <source>The string representation is not localized.</source>
          <target state="translated">未當地語系化的字串表示。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.Children">
          <source>Gets or sets an ordered list of the child code groups of a code group.</source>
          <target state="translated">取得或設定程式碼群組的子程式碼群組之排序清單。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.Children">
          <source>A list of child code groups.</source>
          <target state="translated">子程式碼群組清單。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.Children">
          <source>The order of child code groups is significant for certain code groups.</source>
          <target state="translated">子程式碼群組的順序很重要的特定程式碼群組。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.Children">
          <source>The return value is a copy of the child code list.</source>
          <target state="translated">傳回值是一份子程式碼清單。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.Children">
          <source>Do not use the returned list to add a child code group; instead, use the <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</ph> method.</source>
          <target state="translated">請勿使用傳回的清單來加入子程式碼群組。請改用<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.AddChild%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.Children">
          <source>An attempt is made to set this property to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">嘗試將這個屬性設定為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.Children">
          <source>An attempt is made to set this property with a list of children that are not <ph id="ph1">&lt;see cref="T:System.Security.Policy.CodeGroup" /&gt;</ph> objects.</source>
          <target state="translated">嘗試以不是 <ph id="ph1">&lt;see cref="T:System.Security.Policy.CodeGroup" /&gt;</ph> 物件的子系清單來設定此屬性。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Copy">
          <source>When overridden in a derived class, makes a deep copy of the current code group.</source>
          <target state="translated">在衍生類別中覆寫時，製作目前程式碼群組的深層複本 (Deep Copy)。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Copy">
          <source>An equivalent copy of the current code group, including its membership conditions and child code groups.</source>
          <target state="translated">目前程式碼群組的相等複本，包含它的成員資格條件和子程式碼群組。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.Copy">
          <source>This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.</source>
          <target state="translated">這樣也會套用程式碼群組包含的所有物件的複本，此方法會讓程式碼群組的深層複本。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>The XML encoding to which to add the serialization.</source>
          <target state="translated">要加入到序列化的 XML 編碼方式。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>The policy level within which the code group exists.</source>
          <target state="translated">程式碼群組所存在的原則層級。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>When overridden in a derived class, serializes properties and internal state specific to a derived code group and adds the serialization to the specified <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph>.</source>
          <target state="translated">在衍生類別中覆寫時，序列化衍生的程式碼群組特定的屬性和內部狀態，並加入序列化到指定的 <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;</ph> cannot be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;</ph> 無法覆寫。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>If you need to serialize members specific to a particular implementation of <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup&gt;</ph>, you must override <ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.CreateXml%2A&gt;</ph> and serialize your members there.</source>
          <target state="translated">如果您要序列化的特定實作的特定成員<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup&gt;</ph>，您必須覆寫<ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.CreateXml%2A&gt;</ph>和序列化您的成員。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>When the code group is serialized, <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.CreateXml%2A&gt;</ph> and adds your serialization to the <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> created by <ph id="ph4">&lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;</ph>.</source>
          <target state="translated">序列化程式碼群組時，<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.CreateXml%2A&gt;</ph>並加入至您序列化<ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph>由<ph id="ph4">&lt;xref:System.Security.Policy.CodeGroup.ToXml%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>The XML created using this method is deserialized by the <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.ParseXml%2A&gt;</ph> method.</source>
          <target state="translated">使用這個方法所建立的 XML 還原序列化為<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.ParseXml%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>If you implement this method, you must implement the <ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph> method as well.</source>
          <target state="translated">如果您實作這個方法時，您必須實作<ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph>以及方法。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.Description">
          <source>Gets or sets the description of the code group.</source>
          <target state="translated">取得或設定程式碼群組的描述。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.Description">
          <source>The description of the code group.</source>
          <target state="translated">程式碼群組的描述。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Security.Policy.CodeGroup">
          <source>Determines whether two code groups are equivalent.</source>
          <target state="translated">判斷兩個程式碼群組是否相等。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
          <source>The code group to compare with the current code group.</source>
          <target state="translated">要和目前程式碼群組比較的程式碼群組。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
          <source>Determines whether the specified code group is equivalent to the current code group.</source>
          <target state="translated">判斷指定的程式碼群組是否相等於目前程式碼群組。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified code group is equivalent to the current code group; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的程式碼群組相等於目前程式碼群組，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
          <source>Two code groups are equivalent if they have the same <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;</ph>.</source>
          <target state="translated">兩個程式碼群組是它們都有相同的對等<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.Equals(System.Object)">
          <source>This method tests the top-level code group only, not its child code groups.</source>
          <target state="translated">這個方法會測試最上層的程式碼群組，不及其子程式碼群組。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
          <source>The code group to compare with the current code group.</source>
          <target state="translated">要和目前程式碼群組比較的程式碼群組。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to compare child code groups, as well; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">若也要比較子程式碼群組，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
          <source>Determines whether the specified code group is equivalent to the current code group, checking the child code groups as well, if specified.</source>
          <target state="translated">判斷指定的程式碼群組是否等於目前程式碼群組，若有指定則檢查子程式碼群組。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified code group is equivalent to the current code group; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果指定的程式碼群組相等於目前程式碼群組，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
          <source>Two code groups are equivalent if they have the same <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;</ph>.</source>
          <target state="translated">兩個程式碼群組是它們都有相同的對等<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.Name%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.Description%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Security.Policy.CodeGroup.MembershipCondition%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)">
          <source>If the <ph id="ph1">`compareChildren`</ph> parameter is <ph id="ph2">`true`</ph>, this method will only return <ph id="ph3">`true`</ph> if the current code group and all its child code groups are equivalent to the specified code group and all its child code groups.</source>
          <target state="translated">如果<ph id="ph1">`compareChildren`</ph>參數是<ph id="ph2">`true`</ph>，這個方法只會傳回<ph id="ph3">`true`</ph>目前的程式碼群組和其所有子程式碼群組是否等於指定的程式碼群組和其所有子程式碼群組。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="T:System.Security.Policy.CodeGroup">
          <source>Reconstructs a security object with a given state from an XML encoding.</source>
          <target state="translated">使用 XML 編碼方式重建具有指定狀態的安全性物件。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">用來重新建構安全性物件的 XML 編碼。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
          <source>Reconstructs a security object with a given state from an XML encoding.</source>
          <target state="translated">使用 XML 編碼方式重建具有指定狀態的安全性物件。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
          <source>The <ph id="ph1">&lt;paramref name="e" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
          <source><ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.ToXml" /&gt;</ph> cannot be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /&gt;</ph> 和<ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.ToXml" /&gt;</ph>無法覆寫。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)">
          <source>If you need to change the way in which your code group implementation handles XML, override the <ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph> methods.</source>
          <target state="translated">如果您需要變更您的程式碼群組實作會處理 XML 的方式，覆寫<ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">用來重新建構安全性物件的 XML 編碼。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>The policy level within which the code group exists.</source>
          <target state="translated">程式碼群組所存在的原則層級。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>Reconstructs a security object with a given state and policy level from an XML encoding.</source>
          <target state="translated">使用 XML 編碼方式重建具有指定狀態和原則層級的安全性物件。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>The policy level context is provided for resolution of named permission sets.</source>
          <target state="translated">解決方式的具名使用權限集合提供原則層級的內容。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>The <ph id="ph1">&lt;paramref name="e" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="e" /&gt;</ph> 參數為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source><ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.ToXml" /&gt;</ph> cannot be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /&gt;</ph> 和<ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.ToXml" /&gt;</ph>無法覆寫。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>If you need to change the way in which your code group implementation handles XML, override the <ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph> methods.</source>
          <target state="translated">如果您需要變更您的程式碼群組實作會處理 XML 的方式，覆寫<ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.GetHashCode">
          <source>Gets the hash code of the current code group.</source>
          <target state="translated">取得目前程式碼群組的雜湊碼。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.GetHashCode">
          <source>The hash code of the current code group.</source>
          <target state="translated">目前程式碼群組的雜湊碼。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.MembershipCondition">
          <source>Gets or sets the code group's membership condition.</source>
          <target state="translated">取得或設定程式碼群組的成員資格條件。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.MembershipCondition">
          <source>The membership condition that determines to which evidence the code group is applicable.</source>
          <target state="translated">判斷程式碼群組可套用哪個辨識項的成員資格條件。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.MembershipCondition">
          <source>A membership condition tests evidence and returns a Boolean value that tells whether there is a match.</source>
          <target state="translated">成員資格條件測試的辨識項，並傳回布林值，指出是否有相符項目。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.MembershipCondition">
          <source>An attempt is made to set this parameter to <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">嘗試將這個參數設定為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.MergeLogic">
          <source>When overridden in a derived class, gets the merge logic for the code group.</source>
          <target state="translated">在衍生類別中覆寫時，取得程式碼群組的合併邏輯。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.MergeLogic">
          <source>A description of the merge logic for the code group.</source>
          <target state="translated">程式碼群組之合併邏輯的描述。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.MergeLogic">
          <source>This property is a string description of the merge logic used by the code group to resolve the permissions granted by its child code groups.</source>
          <target state="translated">這個屬性是用來解析它的子程式碼群組授與權限的程式碼群組的合併式邏輯的字串描述。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.MergeLogic">
          <source>It is meant to aid administrators using the code group, but is not used by the policy system.</source>
          <target state="translated">它用來協助系統管理員使用的程式碼群組，但不是由原則系統。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.Name">
          <source>Gets or sets the name of the code group.</source>
          <target state="translated">取得或設定程式碼群組的名稱。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.Name">
          <source>The name of the code group.</source>
          <target state="translated">程式碼群組的名稱。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>The XML encoding to use to reconstruct the security object.</source>
          <target state="translated">用來重新建構安全性物件的 XML 編碼。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>The policy level within which the code group exists.</source>
          <target state="translated">程式碼群組所存在的原則層級。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>When overridden in a derived class, reconstructs properties and internal state specific to a derived code group from the specified <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph>.</source>
          <target state="translated">在衍生類別中覆寫時，從指定的 <ph id="ph1">&lt;see cref="T:System.Security.SecurityElement" /&gt;</ph> 重建衍生程式碼群組特定的屬性和內部狀態。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source><ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.FromXml%2A&gt;</ph> cannot be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.FromXml%2A&gt;</ph> 無法覆寫。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>If you need to deserialize members specific to a particular implementation of <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup&gt;</ph>, you must override <ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.ParseXml%2A&gt;</ph> and deserialize your members there.</source>
          <target state="translated">如果您要還原序列化的特定實作的特定成員<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup&gt;</ph>，您必須覆寫<ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.ParseXml%2A&gt;</ph>和還原序列化您的成員。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>When the code group is deserialized, <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.FromXml%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.ParseXml%2A&gt;</ph> and reconstructs your members from the <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph>.</source>
          <target state="translated">程式碼群組還原序列化時，<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.FromXml%2A&gt;</ph>呼叫<ph id="ph2">&lt;xref:System.Security.Policy.CodeGroup.ParseXml%2A&gt;</ph>並重建您的成員從<ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>This method deserializes XML created using <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.CreateXml%2A&gt;</ph>.</source>
          <target state="translated">這個方法將使用所建立的 XML 還原序列化<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.CreateXml%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)">
          <source>If you implement this method, you must implement the <ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph> method as well.</source>
          <target state="translated">如果您實作這個方法時，您必須實作<ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph>以及方法。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.PermissionSetName">
          <source>Gets the name of the named permission set for the code group.</source>
          <target state="translated">取得程式碼群組的具名使用權限之名稱。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.PermissionSetName">
          <source>The name of a named permission set of the policy level.</source>
          <target state="translated">原則層級的具名使用權限集合的名稱。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.PermissionSetName">
          <source>This property can be <ph id="ph1">`null`</ph> if the code group contains an unnamed permission set.</source>
          <target state="translated">這個屬性可以是<ph id="ph1">`null`</ph>如果程式碼群組包含未命名的權限集合。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Security.Policy.CodeGroup.PolicyStatement">
          <source>Gets or sets the policy statement associated with the code group.</source>
          <target state="translated">取得或設定與程式碼群組相關的原則陳述式。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.PolicyStatement">
          <source>The policy statement for the code group.</source>
          <target state="translated">程式碼群組的原則陳述式。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.PolicyStatement">
          <source>The policy statement applies to code in assemblies when evidence matches the membership condition.</source>
          <target state="translated">辨識項符合成員資格條件時，原則陳述式就適用於組件中的程式碼。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.PolicyStatement">
          <source>This property can also be set by passing a policy statement to the constructor.</source>
          <target state="translated">這個屬性也可以設定將原則陳述式傳遞至建構函式。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Policy.CodeGroup.PolicyStatement">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Security.Policy.PolicyStatement&gt;</ph> for a code group.</source>
          <target state="translated">下列範例會設定<ph id="ph1">&lt;xref:System.Security.Policy.PolicyStatement&gt;</ph>之程式碼群組。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
          <source>The code group to be removed as a child.</source>
          <target state="translated">要做為子程式碼群組來移除的程式碼群組。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
          <source>Removes the specified child code group.</source>
          <target state="translated">移除指定的子程式碼群組。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
          <source>Only immediate child code groups can be removed with this method.</source>
          <target state="translated">使用這個方法，就可以移除直屬子程式碼群組。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)">
          <source>The <ph id="ph1">&lt;paramref name="group" /&gt;</ph> parameter is not an immediate child code group of the current code group.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="group" /&gt;</ph> 參數不是目前程式碼群組的直接子程式碼群組。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>The evidence for the assembly.</source>
          <target state="translated">組件的辨識項。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>When overridden in a derived class, resolves policy for the code group and its descendants for a set of evidence.</source>
          <target state="translated">在衍生類別中覆寫時，解析程式碼群組的原則和它的子代 (Descendant) 辨識項集。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>A policy statement that consists of the permissions granted by the code group with optional attributes, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the code group does not apply (the membership condition does not match the specified evidence).</source>
          <target state="translated">原則陳述式，包含由程式碼群組以選擇性屬性授與的使用權限，或為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>，如果程式碼群組無法套用 (成員資格條件不符合指定的辨識項)。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>Given evidence for an assembly to be loaded, this method evaluates the code group by checking the membership condition against the specified evidence.</source>
          <target state="translated">指定要載入的組件的辨識項，這個方法會評估程式碼群組，藉由檢查成員資格條件，針對指定的辨識項。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</source>
          <target state="translated">如果沒有相符項目，這個方法會傳回程式碼群組，包括評估子程式碼群組的原則陳述式。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>For a <ph id="ph1">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph>, all child code groups whose membership condition match the specified evidence are also resolved, and all resulting policy statements are combined with the policy statement of the parent union code group.</source>
          <target state="translated">如<ph id="ph1">&lt;xref:System.Security.Policy.UnionCodeGroup&gt;</ph>、 解決的所有子程式碼群組的成員資格條件的比對指定的辨識項，以及與父代等位的程式碼群組的原則陳述式結合所有產生的原則陳述式。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>Each child code group type determines how all child groups under it are applied, depending on how the <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;</ph> methods of these child groups work.</source>
          <target state="translated">每一個子程式碼群組類型則決定如何套用其下的所有子群組，依據<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;</ph>方法，這些子群組的工作。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.Resolve(System.Security.Policy.Evidence)">
          <source>The .NET Framework security system uses <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;</ph> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.</source>
          <target state="translated">.NET Framework 安全性系統會使用<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;</ph>來判斷哪些權限可授與要載入的程式碼，從產生的原則陳述式和程式碼要求組件上的原則層級上。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>The evidence for the assembly.</source>
          <target state="translated">組件的辨識項。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>When overridden in a derived class, resolves matching code groups.</source>
          <target state="translated">在衍生類別中覆寫時，解析符合的程式碼群組。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Policy.CodeGroup" /&gt;</ph> that is the root of the tree of matching code groups.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Policy.CodeGroup" /&gt;</ph>，是符合程式碼群組的樹狀結構的根 (Root)。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>This method has the same evaluation characteristics as <ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;</ph>.</source>
          <target state="translated">這個方法具有相同的評估特性<ph id="ph1">&lt;xref:System.Security.Policy.CodeGroup.Resolve%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)">
          <source>The code group that is returned contains child code groups, which in turn can have child code groups as necessary to reflect the complete set of code groups that were matched by the evidence provided.</source>
          <target state="translated">傳回的程式碼群組包含子程式碼群組，也可以有子程式碼群組，以反映一組完整的程式碼群組，以符合所提供的辨識項，視。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="T:System.Security.Policy.CodeGroup">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">建立安全物件及其目前狀態的 XML 編碼方式。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ToXml">
          <source>Creates an XML encoding of the security object and its current state.</source>
          <target state="translated">建立安全物件及其目前狀態的 XML 編碼方式。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ToXml">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">安全物件的 XML 編碼方式，包含所有狀態資訊。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ToXml">
          <source><ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.ToXml" /&gt;</ph> cannot be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /&gt;</ph> 和<ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.ToXml" /&gt;</ph>無法覆寫。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ToXml">
          <source>If you need to change the way in which your code group implementation handles XML, override the <ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph> methods.</source>
          <target state="translated">如果您需要變更您的程式碼群組實作會處理 XML 的方式，覆寫<ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
          <source>The policy level within which the code group exists.</source>
          <target state="translated">程式碼群組所存在的原則層級。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
          <source>Creates an XML encoding of the security object, its current state, and the policy level within which the code exists.</source>
          <target state="translated">建立安全性物件、它的目前狀態和程式碼所存在的原則層級的 XML 編碼方式。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
          <source>An XML encoding of the security object, including any state information.</source>
          <target state="translated">安全物件的 XML 編碼方式，包含所有狀態資訊。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
          <source>The policy level context is provided for resolution of named permission sets.</source>
          <target state="translated">解決方式的具名使用權限集合提供原則層級的內容。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
          <source><ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.ToXml" /&gt;</ph> cannot be overridden.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)" /&gt;</ph> 和<ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.ToXml" /&gt;</ph>無法覆寫。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)">
          <source>If you need to change the way in which your code group implementation handles XML, override the <ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph> methods.</source>
          <target state="translated">如果您需要變更您的程式碼群組實作會處理 XML 的方式，覆寫<ph id="ph1">&lt;see cref="M:System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" /&gt;</ph>方法。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>