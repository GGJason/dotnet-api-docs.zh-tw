<Type Name="UnionCodeGroup" FullName="System.Security.Policy.UnionCodeGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44d4803db51e63162592a0192e205ecdfcbc76ed" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37629813" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UnionCodeGroup : System.Security.Policy.CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit UnionCodeGroup extends System.Security.Policy.CodeGroup" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.UnionCodeGroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnionCodeGroup&#xA;Inherits CodeGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnionCodeGroup sealed : System::Security::Policy::CodeGroup" />
  <TypeSignature Language="F#" Value="type UnionCodeGroup = class&#xA;    inherit CodeGroup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.CodeGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="bf07a-101">Represents a code group whose policy statement is the union of the current code group's policy statement and the policy statement of all its matching child code groups.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf07a-101">Represents a code group whose policy statement is the union of the current code group's policy statement and the policy statement of all its matching child code groups.</span>
      </span>
      <span data-ttu-id="bf07a-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bf07a-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf07a-103">程式碼群組是建置組塊的程式碼存取安全性原則。</span><span class="sxs-lookup"><span data-stu-id="bf07a-103">Code groups are the building blocks of code access security policy.</span></span> <span data-ttu-id="bf07a-104">每個原則層級是由可以有子程式碼群組 （依此類推），進而形成樹狀的根程式碼群組所組成。</span><span class="sxs-lookup"><span data-stu-id="bf07a-104">Each policy level consists of a root code group that can have child code groups (and so on), forming a tree.</span></span> <span data-ttu-id="bf07a-105">每個程式碼群組有成員資格條件，可判斷是否指定的組件屬於它，根據該組件的辨識項。</span><span class="sxs-lookup"><span data-stu-id="bf07a-105">Each code group has a membership condition that determines if a given assembly belongs to it or not, based on the evidence for that assembly.</span></span> <span data-ttu-id="bf07a-106">成員資格條件符合指定的組件的唯一程式碼群組和其子程式碼群組套用原則。</span><span class="sxs-lookup"><span data-stu-id="bf07a-106">Only code groups whose membership conditions match a given assembly and their child code groups apply policy.</span></span>  
  
 <span data-ttu-id="bf07a-107"><xref:System.Security.Policy.UnionCodeGroup> 是最常見的一種程式碼群組;所有相符的子程式碼群組的原則陳述式 (並延伸它們的子程式碼群組) 會結合相符的父代的程式碼群組的權限集。</span><span class="sxs-lookup"><span data-stu-id="bf07a-107"><xref:System.Security.Policy.UnionCodeGroup> is the most common type of code group; the policy statement of all matching child code groups (and by extension their child code groups) are combined with the permission set of the matching parent code group.</span></span> <span data-ttu-id="bf07a-108">因此，如果其成員資格條件符合時，這個程式碼群組會形成原則陳述式的聯集和其所有子程式碼群組，也符合辨識項。</span><span class="sxs-lookup"><span data-stu-id="bf07a-108">Thus, if its membership condition matches, this code group forms the union of its policy statement and those of all its child code groups that also match the evidence.</span></span>  
  
 <span data-ttu-id="bf07a-109"><xref:System.Security.Policy.UnionCodeGroup> 程式碼群組會 CASPOL 公用程式所建立的程式碼群組 (請參閱[Caspol.exe （程式碼存取安全性原則工具）](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md))。</span><span class="sxs-lookup"><span data-stu-id="bf07a-109"><xref:System.Security.Policy.UnionCodeGroup> code groups are the code groups created by the CASPOL utility (see [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UnionCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Policy.PolicyStatement policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.IMembershipCondition membershipCondition, class System.Security.Policy.PolicyStatement policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (membershipCondition As IMembershipCondition, policy As PolicyStatement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UnionCodeGroup(System::Security::Policy::IMembershipCondition ^ membershipCondition, System::Security::Policy::PolicyStatement ^ policy);" />
      <MemberSignature Language="F#" Value="new System.Security.Policy.UnionCodeGroup : System.Security.Policy.IMembershipCondition * System.Security.Policy.PolicyStatement -&gt; System.Security.Policy.UnionCodeGroup" Usage="new System.Security.Policy.UnionCodeGroup (membershipCondition, policy)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="membershipCondition" Type="System.Security.Policy.IMembershipCondition" />
        <Parameter Name="policy" Type="System.Security.Policy.PolicyStatement" />
      </Parameters>
      <Docs>
        <param name="membershipCondition">
          <span data-ttu-id="bf07a-110">A membership condition that tests evidence to determine whether this code group applies policy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-110">A membership condition that tests evidence to determine whether this code group applies policy.</span>
          </span>
        </param>
        <param name="policy">
          <span data-ttu-id="bf07a-111">The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-111">The policy statement for the code group in the form of a permission set and attributes to grant code that matches the membership condition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf07a-112">Initializes a new instance of the <see cref="T:System.Security.Policy.UnionCodeGroup" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-112">Initializes a new instance of the <see cref="T:System.Security.Policy.UnionCodeGroup" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf07a-113">這個建構函式會建立基本的程式碼群組，並應該從自訂程式碼群組的建構函式呼叫。</span><span class="sxs-lookup"><span data-stu-id="bf07a-113">This constructor creates a basic code group and should be called from the constructors of custom code groups.</span></span> <span data-ttu-id="bf07a-114">您可以使用，以新增子程式碼群組<xref:System.Security.Policy.CodeGroup.AddChild%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="bf07a-114">You can add child code groups by using the <xref:System.Security.Policy.CodeGroup.AddChild%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="bf07a-115">The type of the <paramref name="membershipCondition" /> parameter is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-115">The type of the <paramref name="membershipCondition" /> parameter is not valid.</span>
          </span>
          <span data-ttu-id="bf07a-116">-or-  The type of the <paramref name="policy" /> parameter is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-116">-or-  The type of the <paramref name="policy" /> parameter is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As CodeGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.Policy.CodeGroup" Usage="unionCodeGroup.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bf07a-117">Makes a deep copy of the current code group.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-117">Makes a deep copy of the current code group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf07a-118">An equivalent copy of the current code group, including its membership conditions and child code groups.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-118">An equivalent copy of the current code group, including its membership conditions and child code groups.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf07a-119">此方法會讓程式碼群組的深層複本，如此也會在程式碼群組包含的所有物件的複本。</span><span class="sxs-lookup"><span data-stu-id="bf07a-119">This method makes a deep copy of the code group, so that copies of all objects the code group contains are also made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeLogic">
      <MemberSignature Language="C#" Value="public override string MergeLogic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MergeLogic" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.UnionCodeGroup.MergeLogic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MergeLogic As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MergeLogic { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MergeLogic : string" Usage="System.Security.Policy.UnionCodeGroup.MergeLogic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bf07a-120">Gets the merge logic.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-120">Gets the merge logic.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bf07a-121">永遠是字串"Union"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-121">Always the string "Union".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::PolicyStatement ^ Resolve(System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="override this.Resolve : System.Security.Policy.Evidence -&gt; System.Security.Policy.PolicyStatement" Usage="unionCodeGroup.Resolve evidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">
          <span data-ttu-id="bf07a-122">The evidence for the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-122">The evidence for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf07a-123">Resolves policy for the code group and its descendants for a set of evidence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-123">Resolves policy for the code group and its descendants for a set of evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf07a-124">A policy statement consisting of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-124">A policy statement consisting of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf07a-125">指定要載入的組件辨識項，這個方法會評估第一個檢查成員資格條件，針對指定的辨識項的程式碼群組。</span><span class="sxs-lookup"><span data-stu-id="bf07a-125">Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</span></span> <span data-ttu-id="bf07a-126">如果沒有相符項目，則這個方法會傳回程式碼群組，包括評估子程式碼群組的原則陳述式。</span><span class="sxs-lookup"><span data-stu-id="bf07a-126">If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</span></span>  
  
 <span data-ttu-id="bf07a-127">等位的程式碼群組，也會解析所有的子程式碼群組的成員資格條件符合的辨識項，以及所有產生的原則陳述式形成聯父聯集的程式碼群組的原則陳述式。</span><span class="sxs-lookup"><span data-stu-id="bf07a-127">For union code groups, all child code groups whose membership condition match the evidence are also resolved, and all resulting policy statements form a union with the policy statement of the parent union code group.</span></span> <span data-ttu-id="bf07a-128">每一個子程式碼群組類型會決定它的子群組的套用方式，根據其各自<xref:System.Security.Policy.UnionCodeGroup.Resolve%2A>方法運作。</span><span class="sxs-lookup"><span data-stu-id="bf07a-128">Each child code group type determines how its child groups are applied, depending on how their respective <xref:System.Security.Policy.UnionCodeGroup.Resolve%2A> methods work.</span></span>  
  
 <span data-ttu-id="bf07a-129">.NET Framework 安全性系統會使用<xref:System.Security.Policy.UnionCodeGroup.Resolve%2A>來判斷哪些權限授與給載入的程式碼，從產生的原則陳述式和程式碼要求組件上的原則層級。</span><span class="sxs-lookup"><span data-stu-id="bf07a-129">The .NET Framework security system uses <xref:System.Security.Policy.UnionCodeGroup.Resolve%2A> on the policy levels to determine which permissions to grant to loaded code from the resulting policy statements and the code request on the assembly.</span></span>  
  
 <span data-ttu-id="bf07a-130">如果成員資格條件不符合指定的辨識項，則這個方法會傳回`null`; 否則它將權限設定為傳回 (P) 設定為等於程式碼群組的原則陳述式，然後再繼續執行。</span><span class="sxs-lookup"><span data-stu-id="bf07a-130">If the membership condition does not match the specified evidence, this method returns `null`; otherwise, it sets the permission set to be returned (P) equal to the code group's policy statement, and then continues.</span></span> <span data-ttu-id="bf07a-131">每個子程式碼群組，方法會解析程式碼群組與相同的辨識項;如果結果不是`null`，它會設定 P 等於 P 和子程式碼群組的原則陳述式的 union。</span><span class="sxs-lookup"><span data-stu-id="bf07a-131">For each child code group, the method resolves the code group with the same evidence; if the result is not `null`, it sets P equal to the union of P and the child code group's policy statement.</span></span> <span data-ttu-id="bf07a-132">然後，它會傳回 P，現在是目前的程式碼群組原則陳述式和所有子群組的原則陳述式的 union。</span><span class="sxs-lookup"><span data-stu-id="bf07a-132">It then returns P, which is now the union of the current code group's policy statement and all child group policy statements.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bf07a-133">The <paramref name="evidence" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-133">The <paramref name="evidence" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Policy.PolicyException">
          <span data-ttu-id="bf07a-134">More than one code group (including the parent code group and any child code groups) is marked <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-134">More than one code group (including the parent code group and any child code groups) is marked <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.UnionCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ ResolveMatchingCodeGroups(System::Security::Policy::Evidence ^ evidence);" />
      <MemberSignature Language="F#" Value="override this.ResolveMatchingCodeGroups : System.Security.Policy.Evidence -&gt; System.Security.Policy.CodeGroup" Usage="unionCodeGroup.ResolveMatchingCodeGroups evidence" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">
          <span data-ttu-id="bf07a-135">The evidence for the assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-135">The evidence for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bf07a-136">Resolves matching code groups.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-136">Resolves matching code groups.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bf07a-137">The complete set of code groups that were matched by the evidence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-137">The complete set of code groups that were matched by the evidence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bf07a-138">指定要載入的組件辨識項，這個方法會評估第一個檢查成員資格條件，針對指定的辨識項的程式碼群組。</span><span class="sxs-lookup"><span data-stu-id="bf07a-138">Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</span></span> <span data-ttu-id="bf07a-139">如果沒有相符項目，則這個方法會傳回根程式碼群組。</span><span class="sxs-lookup"><span data-stu-id="bf07a-139">If there is a match, this method returns a root code group.</span></span> <span data-ttu-id="bf07a-140">傳回程式碼群組可能包含子程式碼群組，其中，接著，也可能包含子程式碼群組，因此傳回的值會反映出一組完整的程式碼群組相符的提供辨識項。</span><span class="sxs-lookup"><span data-stu-id="bf07a-140">The code group that is returned may contain child code groups, which, in turn, may also contain child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="bf07a-141">The <paramref name="evidence" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bf07a-141">The <paramref name="evidence" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>