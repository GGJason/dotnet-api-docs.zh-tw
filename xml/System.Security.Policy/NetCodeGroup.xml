<Type Name="NetCodeGroup" FullName="System.Security.Policy.NetCodeGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3cb0f97af74421f532dd05e94231b2ab08ceebc3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NetCodeGroup : System.Security.Policy.CodeGroup" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit NetCodeGroup extends System.Security.Policy.CodeGroup" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.NetCodeGroup" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NetCodeGroup&#xA;Inherits CodeGroup" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetCodeGroup sealed : System::Security::Policy::CodeGroup" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Policy.CodeGroup</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c0fbc-101">將 Web 使用權限授權給下載組件的來源站台。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0fbc-101">Grants Web permission to the site from which the assembly was downloaded.</span>
      </span>
      <span data-ttu-id="c0fbc-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0fbc-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-103">程式碼群組是建置組塊的程式碼存取安全性原則。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-103">Code groups are the building blocks of code access security policy.</span></span> <span data-ttu-id="c0fbc-104">每個原則層級是由根程式碼群組可以有一或多個子程式碼群組所組成。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-104">Each policy level consists of a root code group that can have one or more child code groups.</span></span> <span data-ttu-id="c0fbc-105">每一個子程式碼群組可以有它自己的子程式碼群組。這個行為會延伸到任何數目的層級，進而形成樹狀。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-105">Each child code group can have its own child code groups; this behavior extends to any number of levels, forming a tree.</span></span> <span data-ttu-id="c0fbc-106">每個程式碼群組都具有成員資格條件會判斷是否有指定的組件所屬的群組中，根據該組件的辨識項。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-106">Each code group has a membership condition that determines if a given assembly belongs to the group, based on the evidence for that assembly.</span></span> <span data-ttu-id="c0fbc-107">只有程式碼群組成員資格符合指定的組件，其子程式碼群組，以及適用於程式碼存取安全性原則。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-107">Only code groups whose membership conditions match a given assembly, along with their child code groups, apply code access security policy.</span></span>  
  
 <span data-ttu-id="c0fbc-108"><xref:System.Security.Policy.NetCodeGroup> 具有相同的合併語意的<xref:System.Security.Policy.UnionCodeGroup>; 組件可構成的聯集<xref:System.Security.Policy.PolicyStatement>物件所有比對的子系的程式碼群組和<xref:System.Security.Policy.PolicyStatement>它會產生從輸入<xref:System.Security.Policy.Url>辨識項。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-108"><xref:System.Security.Policy.NetCodeGroup> has the same merge semantics as that of <xref:System.Security.Policy.UnionCodeGroup>; it forms the union of the <xref:System.Security.Policy.PolicyStatement> objects of all matching child code groups and the <xref:System.Security.Policy.PolicyStatement> it generates from the input <xref:System.Security.Policy.Url> evidence.</span></span> <span data-ttu-id="c0fbc-109">不過，<xref:System.Security.Policy.NetCodeGroup>包含動態計算出的權限傳回<xref:System.Net.WebPermission>授與連線存取，網站從中執行程式碼;<xref:System.Security.Policy.UnionCodeGroup>只會傳回靜態權限集。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-109">However, <xref:System.Security.Policy.NetCodeGroup> returns a permission containing a dynamically calculated <xref:System.Net.WebPermission> that grants connect access to the site from which the code is run; <xref:System.Security.Policy.UnionCodeGroup> simply returns a static permission set.</span></span>  
  
 <span data-ttu-id="c0fbc-110">當<xref:System.Security.Policy.NetCodeGroup>已建立，它包含下表所示的預設連線存取規則。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-110">When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.</span></span>  
  
|<span data-ttu-id="c0fbc-111">URI 配置</span><span class="sxs-lookup"><span data-stu-id="c0fbc-111">URI Scheme</span></span>|<span data-ttu-id="c0fbc-112">規則</span><span class="sxs-lookup"><span data-stu-id="c0fbc-112">Rule</span></span>|  
|----------------|----------|  
|<span data-ttu-id="c0fbc-113">檔案</span><span class="sxs-lookup"><span data-stu-id="c0fbc-113">file</span></span>|<span data-ttu-id="c0fbc-114">不連線到原始伺服器允許存取。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-114">No connection access to the origin server is permitted.</span></span>|  
|<span data-ttu-id="c0fbc-115">http</span><span class="sxs-lookup"><span data-stu-id="c0fbc-115">http</span></span>|<span data-ttu-id="c0fbc-116">使用來源的連接埠來允許 HTTP 和 HTTPS 的存取。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-116">HTTP and HTTPS access is permitted using the origin port.</span></span>|  
|<span data-ttu-id="c0fbc-117">https</span><span class="sxs-lookup"><span data-stu-id="c0fbc-117">https</span></span>|<span data-ttu-id="c0fbc-118">使用來源的連接埠來允許 HTTPS 存取。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-118">HTTPS access is permitted using the origin port.</span></span>|  
  
 <span data-ttu-id="c0fbc-119">您可以控制配置和程式碼可以藉由傳遞回其原來網站的連接時使用的連接埠<xref:System.Security.Policy.CodeConnectAccess>具有適當物件<xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>和<xref:System.Security.Policy.CodeConnectAccess.Port%2A>屬性值來<xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-119">You can control the scheme and port that code is permitted to use when connecting back to its site of origin by passing a <xref:System.Security.Policy.CodeConnectAccess> object with the appropriate <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A> and <xref:System.Security.Policy.CodeConnectAccess.Port%2A> property values to the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method.</span></span> <span data-ttu-id="c0fbc-120">您可以建立適用於當原始配置不存在於此辨識項，或無法辨識指定的連接存取規則<xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>("") 做為配置。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-120">You can create a connection access rule that applies when the origin scheme is not present in the evidence or is not recognized by specifying <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> ("") as the scheme.</span></span> <span data-ttu-id="c0fbc-121">您也可以建立適用於當藉由指定沒有連線的存取規則以符合結構描述的連接存取規則<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>("\*") 做為配置。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-121">You can also create a connection access rule that applies when there is no connection access rule with a matching scheme by specifying <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> ("\*") as the scheme.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c0fbc-122">如果程式碼內未提交任何 URI 配置，以辨識項，回到原始網站中使用任何配置允許存取。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-122">If code does not submit the URI scheme as evidence, access is permitted using any scheme back to the origin site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0fbc-123">下列程式碼範例將示範如何建立<xref:System.Security.Policy.NetCodeGroup>並加入<xref:System.Security.Policy.CodeConnectAccess>下載使用 HTTP 配置的程式碼的物件。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-123">The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.</span></span>  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Policy.IMembershipCondition membershipCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (membershipCondition As IMembershipCondition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetCodeGroup(System::Security::Policy::IMembershipCondition ^ membershipCondition);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="membershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      </Parameters>
      <Docs>
        <param name="membershipCondition">
          <span data-ttu-id="c0fbc-124">測試辨識項以判斷這個程式碼群組是否套用程式碼存取安全性原則的成員資格條件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-124">A membership condition that tests evidence to determine whether this code group applies code access security policy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0fbc-125">初始化 <see cref="T:System.Security.Policy.NetCodeGroup" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-125">Initializes a new instance of the <see cref="T:System.Security.Policy.NetCodeGroup" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-126">當<xref:System.Security.Policy.NetCodeGroup>已建立，它包含下表所示的預設連線存取規則。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-126">When a <xref:System.Security.Policy.NetCodeGroup> is created, it contains the default connection access rules shown in the following table.</span></span>  
  
|<span data-ttu-id="c0fbc-127">配置</span><span class="sxs-lookup"><span data-stu-id="c0fbc-127">Scheme</span></span>|<span data-ttu-id="c0fbc-128">規則</span><span class="sxs-lookup"><span data-stu-id="c0fbc-128">Rule</span></span>|  
|------------|----------|  
|<span data-ttu-id="c0fbc-129">檔案</span><span class="sxs-lookup"><span data-stu-id="c0fbc-129">file</span></span>|<span data-ttu-id="c0fbc-130">不連線到原始伺服器允許存取。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-130">No connection access to the origin server is permitted.</span></span>|  
|<span data-ttu-id="c0fbc-131">http</span><span class="sxs-lookup"><span data-stu-id="c0fbc-131">http</span></span>|<span data-ttu-id="c0fbc-132">使用來源的連接埠來允許 HTTP 和 HTTPS 的存取。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-132">HTTP and HTTPS access is permitted using the origin port.</span></span>|  
|<span data-ttu-id="c0fbc-133">https</span><span class="sxs-lookup"><span data-stu-id="c0fbc-133">https</span></span>|<span data-ttu-id="c0fbc-134">使用來源的連接埠來允許 HTTPS 存取。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-134">HTTPS access is permitted using the origin port.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c0fbc-135">下列程式碼範例將示範如何建立<xref:System.Security.Policy.NetCodeGroup>並加入<xref:System.Security.Policy.CodeConnectAccess>下載使用 HTTP 配置的程式碼的物件。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-135">The following code example demonstrates creating a <xref:System.Security.Policy.NetCodeGroup> and adding <xref:System.Security.Policy.CodeConnectAccess> objects for code downloaded using the HTTP scheme.</span></span>  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0fbc-136">
            <paramref name="membershipCondition" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-136">The <paramref name="membershipCondition" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="c0fbc-137">
            <paramref name="membershipCondition" /> 參數的型別無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-137">The type of the <paramref name="membershipCondition" /> parameter is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AbsentOriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string AbsentOriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AbsentOriginScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AbsentOriginScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ AbsentOriginScheme;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0fbc-138">包含用來指定程式碼 (具有未知或無法辨認之原始配置) 連接存取的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-138">Contains a value used to specify connection access for code with an unknown or unrecognized origin scheme.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-139">當呼叫<xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>方法，您指定配置和相關聯<xref:System.Security.Policy.CodeConnectAccess>物件。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-139">When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object.</span></span> <span data-ttu-id="c0fbc-140">任何<xref:System.Security.Policy.CodeConnectAccess>物件加入至<xref:System.Security.Policy.NetCodeGroup>使用<xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>作為來源的程式碼的原始配置不存在於它的辨識項，或無法配置所能辨識時，會套用配置<xref:System.Security.Policy.NetCodeGroup>物件。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-140">Any <xref:System.Security.Policy.CodeConnectAccess> objects that you add to the <xref:System.Security.Policy.NetCodeGroup> using <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> as the origin scheme are applied when the code's origin scheme is not present in its evidence, or is not a scheme recognized by the <xref:System.Security.Policy.NetCodeGroup> object.</span></span>  
  
 <span data-ttu-id="c0fbc-141">若要指定<xref:System.Security.Policy.CodeConnectAccess>物件使用的程式碼的原始配置不符合任何加入至目前的原始配置的集合所包含的結構描述時<xref:System.Security.Policy.NetCodeGroup>物件，請使用<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>值。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-141">To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to use when the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object, use the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> value.</span></span>  
  
 <span data-ttu-id="c0fbc-142">值<xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>欄位是空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-142">The value of the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> field is an empty string ("").</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddConnectAccess">
      <MemberSignature Language="C#" Value="public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddConnectAccess(string originScheme, class System.Security.Policy.CodeConnectAccess connectAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddConnectAccess (originScheme As String, connectAccess As CodeConnectAccess)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddConnectAccess(System::String ^ originScheme, System::Security::Policy::CodeConnectAccess ^ connectAccess);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originScheme" Type="System.String" />
        <Parameter Name="connectAccess" Type="System.Security.Policy.CodeConnectAccess" />
      </Parameters>
      <Docs>
        <param name="originScheme">
          <span data-ttu-id="c0fbc-143">
            <see cref="T:System.String" /> 包含與程式碼配置相符的配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-143">A <see cref="T:System.String" /> containing the scheme to match against the code's scheme.</span>
          </span>
        </param>
        <param name="connectAccess">
          <span data-ttu-id="c0fbc-144">
            <see cref="T:System.Security.Policy.CodeConnectAccess" />，指定配置與連接埠程式碼可用於連回其原始伺服器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-144">A <see cref="T:System.Security.Policy.CodeConnectAccess" /> that specifies the scheme and port code can use to connect back to its origin server.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0fbc-145">將指定的連接存取加入至目前的程式碼群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-145">Adds the specified connection access to the current code group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-146">您可以加入多個<xref:System.Security.Policy.CodeConnectAccess>物件具有相同`origin scheme`。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-146">You can add multiple <xref:System.Security.Policy.CodeConnectAccess> objects for the same `origin scheme`.</span></span> <span data-ttu-id="c0fbc-147">如果`origin scheme`已有一或多個相關聯<xref:System.Security.Policy.CodeConnectAccess>物件，指定`null`如`connectAccess`沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-147">If an `origin scheme` already has one or more associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` has no effect.</span></span> <span data-ttu-id="c0fbc-148">如果不相關的原始配置<xref:System.Security.Policy.CodeConnectAccess>物件，指定`null`如`connectAccess`可以避免程式碼，以符合來源結構描述`originScheme`存取其原始伺服器。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-148">If the origin scheme does not have associated <xref:System.Security.Policy.CodeConnectAccess> objects, specifying `null` for `connectAccess` prevents code with an origin scheme that matches `originScheme` from accessing its origin server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0fbc-149">下列程式碼範例示範如何建立和加入<xref:System.Security.Policy.CodeConnectAccess>物件加入至<xref:System.Security.Policy.NetCodeGroup>。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-149">The following code example demonstrates creating and adding <xref:System.Security.Policy.CodeConnectAccess> objects to a <xref:System.Security.Policy.NetCodeGroup>.</span></span>  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0fbc-150">
            <paramref name="originScheme" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-150">
              <paramref name="originScheme" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c0fbc-151">
            <paramref name="originScheme" /> 包含配置內不允許的字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-151">
              <paramref name="originScheme" /> contains characters that are not permitted in schemes.</span>
          </span>
          <span data-ttu-id="c0fbc-152">-或-</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-152">-or-</span>
          </span>
          <span data-ttu-id="c0fbc-153">
            <paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> 和 <paramref name="connectAccess" /> 指定 <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> 作為其配置。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-153">
              <paramref name="originScheme" /> = <see cref="F:System.Security.Policy.NetCodeGroup.AbsentOriginScheme" /> and <paramref name="connectAccess" /> specifies <see cref="F:System.Security.Policy.CodeConnectAccess.OriginScheme" /> as its scheme.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AnyOtherOriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string AnyOtherOriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AnyOtherOriginScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AnyOtherOriginScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ AnyOtherOriginScheme;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0fbc-154">包含用來指定任何其他未指定原始配置的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-154">Contains a value used to specify any other unspecified origin scheme.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-155">當呼叫<xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A>方法，您指定配置和相關聯<xref:System.Security.Policy.CodeConnectAccess>物件。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-155">When calling the <xref:System.Security.Policy.NetCodeGroup.AddConnectAccess%2A> method, you specify a scheme and an associated <xref:System.Security.Policy.CodeConnectAccess> object.</span></span> <span data-ttu-id="c0fbc-156">您可以使用的值<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>欄位來指定<xref:System.Security.Policy.CodeConnectAccess>物件應該用於任何未明確包含在組加入至目前的原始配置的配置<xref:System.Security.Policy.NetCodeGroup>物件。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-156">You can use the value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field to specify the <xref:System.Security.Policy.CodeConnectAccess> objects that should be used for any scheme that is not explicitly contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.</span></span>  
  
 <span data-ttu-id="c0fbc-157"><xref:System.Security.Policy.CodeConnectAccess>與指定的物件<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>如果程式碼的原始配置不符合任何結構描述新增到目前的原始結構描述集合所包含的欄位才會使用<xref:System.Security.Policy.NetCodeGroup>物件。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-157">The <xref:System.Security.Policy.CodeConnectAccess> objects specified with the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field are only used if the code's origin scheme does not match any of the schemes contained in the set of origin schemes added to the current <xref:System.Security.Policy.NetCodeGroup> object.</span></span>  
  
 <span data-ttu-id="c0fbc-158">若要指定<xref:System.Security.Policy.CodeConnectAccess>物件套用程式碼的原始配置不適用於它的辨識項，或無法辨識時使用<xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme>值。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-158">To specify the <xref:System.Security.Policy.CodeConnectAccess> objects to apply when the code's origin scheme is not available in its evidence or is not recognized, use the <xref:System.Security.Policy.NetCodeGroup.AbsentOriginScheme> value.</span></span>  
  
 <span data-ttu-id="c0fbc-159">值<xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme>欄位是"\*"。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-159">The value of the <xref:System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme> field is "\*".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeString">
      <MemberSignature Language="C#" Value="public override string AttributeString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeString" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.NetCodeGroup.AttributeString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AttributeString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AttributeString { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0fbc-160">取得程式碼群組之原則陳述式屬性 (Attribute) 的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-160">Gets a string representation of the attributes of the policy statement for the code group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0fbc-161">一定是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-161">Always <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As CodeGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ Copy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0fbc-162">製作目前程式碼群組的深層複本 (Deep Copy)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-162">Makes a deep copy of the current code group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0fbc-163">目前程式碼群組的相等複本，包含它的成員資格條件和子程式碼群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-163">An equivalent copy of the current code group, including its membership conditions and child code groups.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-164">此方法會讓程式碼群組，這表示程式碼群組包含的所有物件的複本也會套用的深層複本。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-164">This method makes a deep copy of the code group, meaning that copies of all objects the code group contains are also made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateXml">
      <MemberSignature Language="C#" Value="protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateXml(class System.Security.SecurityElement element, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateXml (element As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateXml(System::Security::SecurityElement ^ element, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="element">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="c0fbc-165">要和目前程式碼群組比較的 <see cref="T:System.Security.Policy.NetCodeGroup" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-165">The <see cref="T:System.Security.Policy.NetCodeGroup" /> object to compare with the current code group.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0fbc-166">判斷指定的程式碼群組是否相等於目前程式碼群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-166">Determines whether the specified code group is equivalent to the current code group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0fbc-167">如果指定的程式碼群組相等於目前程式碼群組，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-167">
              <see langword="true" /> if the specified code group is equivalent to the current code group; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-168">下列資料可用來判斷兩個等號比較<xref:System.Security.Policy.NetCodeGroup>物件：</span><span class="sxs-lookup"><span data-stu-id="c0fbc-168">The following data are used to determine the equality of two <xref:System.Security.Policy.NetCodeGroup> objects:</span></span>  
  
-   <span data-ttu-id="c0fbc-169"><xref:System.Security.Policy.CodeGroup.Name%2A>和<xref:System.Security.Policy.CodeGroup.Description%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-169">The <xref:System.Security.Policy.CodeGroup.Name%2A> and <xref:System.Security.Policy.CodeGroup.Description%2A> properties.</span></span>  
  
-   <span data-ttu-id="c0fbc-170"><xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-170">The <xref:System.Security.Policy.CodeGroup.MembershipCondition%2A> property.</span></span>  
  
-   <span data-ttu-id="c0fbc-171">一組來源結構描述和相關聯<xref:System.Security.Policy.CodeConnectAccess>物件。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-171">The set of origin schemes and the associated <xref:System.Security.Policy.CodeConnectAccess> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetConnectAccessRules">
      <MemberSignature Language="C#" Value="public System.Collections.DictionaryEntry[] GetConnectAccessRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.DictionaryEntry[] GetConnectAccessRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.GetConnectAccessRules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConnectAccessRules () As DictionaryEntry()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Collections::DictionaryEntry&gt; ^ GetConnectAccessRules();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.DictionaryEntry[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0fbc-172">取得目前程式碼群組的連接存取資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-172">Gets the connection access information for the current code group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0fbc-173">
            <see cref="T:System.Collections.DictionaryEntry" /> 陣列包含連接存取資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-173">A <see cref="T:System.Collections.DictionaryEntry" /> array containing connection access information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-174">在每個字典項目，<xref:System.Collections.DictionaryEntry.Key%2A>屬性值為原始配置，而<xref:System.Collections.DictionaryEntry.Value%2A>屬性值是陣列的相關聯<xref:System.Security.Policy.CodeConnectAccess>物件。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-174">In each dictionary entry, the <xref:System.Collections.DictionaryEntry.Key%2A> property value is the origin scheme, and the <xref:System.Collections.DictionaryEntry.Value%2A> property value is the array of associated <xref:System.Security.Policy.CodeConnectAccess> objects.</span></span> <span data-ttu-id="c0fbc-175">如果沒有相關聯<xref:System.Security.Policy.CodeConnectAccess>物件<xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=nameWithType>傳回空陣列。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-175">If there are no associated <xref:System.Security.Policy.CodeConnectAccess> objects, <xref:System.Collections.DictionaryEntry.Value%2A?displayProperty=nameWithType> returns an empty array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0fbc-176">下列程式碼範例會示範如何顯示的連接存取規則<xref:System.Security.Policy.NetCodeGroup>物件。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-176">The following code example demonstrates displaying the connection access rules for a <xref:System.Security.Policy.NetCodeGroup> object.</span></span>  
  
 [!code-cpp[NclCodeGroup#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#8)]
 [!code-csharp[NclCodeGroup#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0fbc-177">取得目前程式碼群組的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-177">Gets the hash code of the current code group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0fbc-178">目前程式碼群組的雜湊碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-178">The hash code of the current code group.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Security.Policy.CodeGroup.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="MergeLogic">
      <MemberSignature Language="C#" Value="public override string MergeLogic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MergeLogic" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.NetCodeGroup.MergeLogic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MergeLogic As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MergeLogic { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0fbc-179">取得用於合併群組的邏輯。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-179">Gets the logic to use for merging groups.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0fbc-180">字串 "Union"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-180">The string "Union".</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseXml">
      <MemberSignature Language="C#" Value="protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ParseXml(class System.Security.SecurityElement e, class System.Security.Policy.PolicyLevel level) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ParseXml (e As SecurityElement, level As PolicyLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ParseXml(System::Security::SecurityElement ^ e, System::Security::Policy::PolicyLevel ^ level);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
        <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSetName">
      <MemberSignature Language="C#" Value="public override string PermissionSetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PermissionSetName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.NetCodeGroup.PermissionSetName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PermissionSetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PermissionSetName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0fbc-181">取得用於程式碼群組的 <see cref="T:System.Security.NamedPermissionSet" /> 名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-181">Gets the name of the <see cref="T:System.Security.NamedPermissionSet" /> for the code group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0fbc-182">永遠是字串 "Same site Web"。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-182">Always the string "Same site Web."</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetConnectAccess">
      <MemberSignature Language="C#" Value="public void ResetConnectAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetConnectAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.ResetConnectAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetConnectAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetConnectAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0fbc-183">移除目前程式碼群組的所有連接存取資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-183">Removes all connection access information for the current code group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-184">使用這個方法來移除系統提供的預設連線存取規則。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-184">Use this method to remove the system-supplied default connection access rules.</span></span>  
  
 <span data-ttu-id="c0fbc-185">下表中，會顯示預設規則。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-185">The default rules are shown in the following table.</span></span>  
  
|<span data-ttu-id="c0fbc-186">配置</span><span class="sxs-lookup"><span data-stu-id="c0fbc-186">Scheme</span></span>|<span data-ttu-id="c0fbc-187">規則</span><span class="sxs-lookup"><span data-stu-id="c0fbc-187">Rule</span></span>|  
|------------|----------|  
|<span data-ttu-id="c0fbc-188">檔案</span><span class="sxs-lookup"><span data-stu-id="c0fbc-188">file</span></span>|<span data-ttu-id="c0fbc-189">不連線到原始伺服器允許存取。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-189">No connection access to the origin server is permitted.</span></span>|  
|<span data-ttu-id="c0fbc-190">http</span><span class="sxs-lookup"><span data-stu-id="c0fbc-190">http</span></span>|<span data-ttu-id="c0fbc-191">使用來源的連接埠來允許 HTTP 和 HTTPS 的存取。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-191">HTTP and HTTPS access is permitted using the origin port.</span></span>|  
|<span data-ttu-id="c0fbc-192">https</span><span class="sxs-lookup"><span data-stu-id="c0fbc-192">https</span></span>|<span data-ttu-id="c0fbc-193">使用來源的連接埠來允許 HTTPS 存取。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-193">HTTPS access is permitted using the origin port.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c0fbc-194">下列程式碼範例示範如何呼叫這個方法，以移除預設程式碼存取連線規則。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-194">The following code example demonstrates calling this method to remove the default code access connection rules.</span></span>  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.PolicyStatement Resolve(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::PolicyStatement ^ Resolve(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.PolicyStatement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">
          <span data-ttu-id="c0fbc-195">用於組件的 <see cref="T:System.Security.Policy.Evidence" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-195">The <see cref="T:System.Security.Policy.Evidence" /> for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0fbc-196">解析程式碼群組的原則和其辨識項集合的子代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-196">Resolves policy for the code group and its descendants for a set of evidence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0fbc-197">
            <see cref="T:System.Security.Policy.PolicyStatement" />，是由含選擇性屬性之程式碼群組授與的使用權限所組成，如果程式碼群組無法套用 (成員資格條件不符合指定的辨識項)，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-197">A <see cref="T:System.Security.Policy.PolicyStatement" /> that consists of the permissions granted by the code group with optional attributes, or <see langword="null" /> if the code group does not apply (the membership condition does not match the specified evidence).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-198">指定要載入的組件的辨識項，這個方法會評估第一個檢查成員資格條件，針對指定的辨識項的程式碼群組。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-198">Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</span></span> <span data-ttu-id="c0fbc-199">如果沒有相符項目，這個方法會傳回程式碼群組，包括評估子程式碼群組的原則陳述式。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-199">If there is a match, this method returns a policy statement for the code group, including evaluation of child code groups.</span></span>  
  
 <span data-ttu-id="c0fbc-200">這個方法的作業如下所示：</span><span class="sxs-lookup"><span data-stu-id="c0fbc-200">The operation of this method is as follows:</span></span>  
  
 <span data-ttu-id="c0fbc-201">如果成員資格條件不符合指定的辨識項，傳回`null`; 否則設定權限設定為傳回 (P) 等於程式碼群組的原則陳述式，然後繼續。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-201">If the membership condition does not match the specified evidence, return `null`; otherwise, set the permission set to be returned (P) equal to the code group's policy statement and continue.</span></span> <span data-ttu-id="c0fbc-202">針對每一個子程式碼群組，解決程式碼群組使用相同的辨識項。如果結果不是`null`，傳回該原則陳述式。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-202">For each child code group, resolve the code group with the same evidence; if the result is not `null`, return that policy statement.</span></span> <span data-ttu-id="c0fbc-203">如果沒有子程式碼群組符合項目，會傳回 P （父系的原則陳述式）。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-203">If no child code group matched, return P (the parent's policy statement).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0fbc-204">
            <paramref name="evidence" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-204">The <paramref name="evidence" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Policy.PolicyException">
          <span data-ttu-id="c0fbc-205">一個以上的程式碼群組 (包含父程式碼群組和任何的子程式碼群組) 標記為 <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-205">More than one code group (including the parent code group and any child code groups) is marked <see cref="F:System.Security.Policy.PolicyStatementAttribute.Exclusive" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ResolveMatchingCodeGroups">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Policy.CodeGroup ResolveMatchingCodeGroups(class System.Security.Policy.Evidence evidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Policy::CodeGroup ^ ResolveMatchingCodeGroups(System::Security::Policy::Evidence ^ evidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="evidence">
          <span data-ttu-id="c0fbc-206">組件的辨識項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-206">The evidence for the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0fbc-207">解析符合的程式碼群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-207">Resolves matching code groups.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0fbc-208">與辨識項相符的一組完整的程式碼群組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-208">The complete set of code groups that were matched by the evidence.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0fbc-209">指定要載入的組件的辨識項，這個方法會評估第一個檢查成員資格條件，針對指定的辨識項的程式碼群組。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-209">Given evidence for an assembly to be loaded, this method evaluates the code group by first checking the membership condition against the specified evidence.</span></span> <span data-ttu-id="c0fbc-210">如果沒有相符項目，這個方法會傳回根程式碼群組。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-210">If there is a match, this method returns a root code group.</span></span> <span data-ttu-id="c0fbc-211">傳回的程式碼群組可能包含子程式碼群組，其亦可能也有子程式碼群組，因此傳回值會反映出一組完整的程式碼群組，以符合所提供的辨識項。</span><span class="sxs-lookup"><span data-stu-id="c0fbc-211">The code group that is returned may contain child code groups, which, in turn, may also have child code groups, so the return value reflects the complete set of code groups that were matched by the evidence provided.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0fbc-212">
            <paramref name="evidence" /> 參數為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0fbc-212">The <paramref name="evidence" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>