<Type Name="CodeConnectAccess" FullName="System.Security.Policy.CodeConnectAccess">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c72d2e15fade048a2b73080a97e60c80dd12d42" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499852" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CodeConnectAccess" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CodeConnectAccess extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Policy.CodeConnectAccess" />
  <TypeSignature Language="VB.NET" Value="Public Class CodeConnectAccess" />
  <TypeSignature Language="C++ CLI" Value="public ref class CodeConnectAccess" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>指定要授與程式碼的網路資源存取權限。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個類別用來搭配<xref:System.Security.Policy.NetCodeGroup>從已下載的類別來控制如何執行程式碼可以回到網站中將它連接。 這些類別會提供程式設計的方式控制<xref:System.Net.WebPermission>授與執行控制哪些配置和連接埠的程式碼可以使用來存取其來源站台的程式碼。 您可以指定配置和連接埠配對允許根據程式碼來源的 URL 中的配置。  
  
 若要建立<xref:System.Security.Policy.CodeConnectAccess>根據程式碼的原始配置的物件，請使用<xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A>方法。  
  
 若要建立<xref:System.Security.Policy.CodeConnectAccess>物件，可以使用任何配置，但受限於連接埠，使用<xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A>方法。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Security.Policy.NetCodeGroup>物件，並將它加入至使用者原則層級。  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeConnectAccess (string allowScheme, int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string allowScheme, int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (allowScheme As String, allowPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeConnectAccess(System::String ^ allowScheme, int allowPort);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="allowScheme" Type="System.String" />
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowScheme">目前執行個體所表示的 URI 配置。</param>
        <param name="allowPort">目前執行個體所表示的連接埠。</param>
        <summary>初始化 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>屬性會設定使用`allowScheme`參數。 配置會轉換成小寫。 值<xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>控制執行程式碼可用來連線到網路資源的配置。  
  
 <xref:System.Security.Policy.CodeConnectAccess.Port%2A>屬性會設定使用`allowPort`參數。 值<xref:System.Security.Policy.CodeConnectAccess.Port%2A>控制執行程式碼可用來連線到網路資源的連接埠。  
  
   
  
## Examples  
 下列程式碼範例將示範如何建立<xref:System.Security.Policy.CodeConnectAccess>物件允許下載連回其原始伺服器，使用 HTTP 通訊協定的程式碼，和相同連接埠已下載的。 如需範例，示範如何使用<xref:System.Security.Policy.CodeConnectAccess>物件建立程式碼群組和程式碼群組加入原則層級，請參閱<xref:System.Security.Policy.CodeConnectAccess>類別概觀。  
  
 [!code-cpp[NclCodeGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#2)]
 [!code-csharp[NclCodeGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowScheme" /> 為 <see langword="null" />。  
  
 -或-  
  
 <paramref name="allowScheme" /> 為空字串 ("")。  
  
 -或-  
  
 <paramref name="allowScheme" /> 包含配置內不允許的字元。  
  
 -或-  
  
 <paramref name="allowPort" /> 小於 0。  
  
 -或-  
  
 <paramref name="allowPort" /> 大於 65,535。</exception>
      </Docs>
    </Member>
    <Member MemberName="AnyScheme">
      <MemberSignature Language="C#" Value="public static readonly string AnyScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string AnyScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.AnyScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AnyScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ AnyScheme;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>包含表示配置萬用字元的字串值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 做為建構替代<xref:System.Security.Policy.CodeConnectAccess>物件使用此值，您可以呼叫<xref:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess%2A>方法，以取得<xref:System.Security.Policy.CodeConnectAccess>物件，表示指定的連接埠和任何配置。  
  
 此欄位的值是"*"。  
  
   
  
## Examples  
 下列程式碼範例會顯示這個欄位的值。  
  
 [!code-cpp[NclCodeGroup#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#6)]
 [!code-csharp[NclCodeGroup#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAnySchemeAccess">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.CodeConnectAccess CreateAnySchemeAccess (int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.CodeConnectAccess CreateAnySchemeAccess(int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.CreateAnySchemeAccess(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAnySchemeAccess (allowPort As Integer) As CodeConnectAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::CodeConnectAccess ^ CreateAnySchemeAccess(int allowPort);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeConnectAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowPort">傳回的執行個體所表示的連接埠。</param>
        <summary>傳回 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 執行個體，表示使用任何配置來存取指定的連接埠。</summary>
        <returns>指定連接埠的 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.CodeConnectAccess>這個方法所傳回的執行個體使用的配置萬用字元值<xref:System.Security.Policy.CodeConnectAccess.AnyScheme>("*") 來代表配置。  
  
   
  
## Examples  
 下列程式碼範例示範如何呼叫這個方法。 如需範例，示範如何使用<xref:System.Security.Policy.CodeConnectAccess>物件建立程式碼群組和程式碼群組加入原則層級，請參閱<xref:System.Security.Policy.CodeConnectAccess>類別概觀。  
  
 [!code-cpp[NclCodeGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#5)]
 [!code-csharp[NclCodeGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowPort" /> 小於 0。  
  
 -或-  
  
 <paramref name="allowPort" /> 大於 65,535。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOriginSchemeAccess">
      <MemberSignature Language="C#" Value="public static System.Security.Policy.CodeConnectAccess CreateOriginSchemeAccess (int allowPort);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Policy.CodeConnectAccess CreateOriginSchemeAccess(int32 allowPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateOriginSchemeAccess (allowPort As Integer) As CodeConnectAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Policy::CodeConnectAccess ^ CreateOriginSchemeAccess(int allowPort);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.CodeConnectAccess</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="allowPort">傳回的執行個體所表示的連接埠。</param>
        <summary>傳回 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 執行個體，表示使用程式碼的原始配置來存取指定的連接埠。</summary>
        <returns>指定連接埠的 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 執行個體。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Policy.CodeConnectAccess>這個方法所傳回的執行個體已配置值<xref:System.Security.Policy.CodeConnectAccess.OriginScheme>。 原始配置是由程式碼來源的 URI 配置值。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Security.Policy.CodeConnectAccess>物件建立程式碼群組和程式碼群組加入原則層級。  
  
 [!code-cpp[NclCodeGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#3)]
 [!code-csharp[NclCodeGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="allowPort" /> 小於 0。  
  
 -或-  
  
 <paramref name="allowPort" /> 大於 65,535。</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultPort">
      <MemberSignature Language="C#" Value="public static readonly int DefaultPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 DefaultPort" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.DefaultPort" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultPort As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int DefaultPort;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>包含用來代表預設連接埠的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要建立<xref:System.Security.Policy.CodeConnectAccess>物件具有指定配置的預設通訊埠使用此欄位為`allowPort`參數<xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A>建構函式。  
  
 這個欄位的值是-3。  
  
   
  
## Examples  
 下列程式碼範例將示範如何建立<xref:System.Security.Policy.CodeConnectAccess>ftp 指定 FTP 配置和預設連接埠的物件。  
  
 [!code-cpp[NclCodeGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#1)]
 [!code-csharp[NclCodeGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">要與目前 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 物件進行比較的物件。</param>
        <summary>傳回數值，指出兩個 <see cref="T:System.Security.Policy.CodeConnectAccess" /> 物件是否代表相同的配置和連接埠。</summary>
        <returns>
          如果這兩個物件都代表相同的配置和連接埠則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 兩個<xref:System.Security.Policy.CodeConnectAccess>物件是否相等如果其<xref:System.Security.Policy.CodeConnectAccess.Scheme%2A>和<xref:System.Security.Policy.CodeConnectAccess.Port%2A>屬性值是否相等。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Policy.CodeConnectAccess.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>做為特定型別的雜湊函式。</summary>
        <returns>目前 <see cref="T:System.Object" /> 的雜湊碼。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="OriginPort">
      <MemberSignature Language="C#" Value="public static readonly int OriginPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly int32 OriginPort" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.OriginPort" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OriginPort As Integer " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly int OriginPort;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>包含用來代表 URI (程式碼來源處) 中連接埠值的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要建立<xref:System.Security.Policy.CodeConnectAccess>物件具有相同的連接埠與通訊埠中執行的程式碼的 URL 辨識項，可以使用此欄位為`allowPort`參數<xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A>建構函式。  
  
 這個欄位的值為-4。  
  
   
  
## Examples  
 下列程式碼範例將示範如何建立<xref:System.Security.Policy.CodeConnectAccess>物件，指定 HTTP 配置及來源的連接埠。  
  
 [!code-cpp[NclCodeGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#2)]
 [!code-csharp[NclCodeGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginScheme">
      <MemberSignature Language="C#" Value="public static readonly string OriginScheme;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string OriginScheme" />
      <MemberSignature Language="DocId" Value="F:System.Security.Policy.CodeConnectAccess.OriginScheme" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OriginScheme As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ OriginScheme;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>包含用來代表 URL (程式碼來源的 URL) 中配置的值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 請勿使用此欄位<xref:System.Security.Policy.CodeConnectAccess.%23ctor%2A>建構函式。 請改用<xref:System.Security.Policy.CodeConnectAccess.CreateOriginSchemeAccess%2A>方法。  
  
 這個欄位的值是"$origin"。  
  
   
  
## Examples  
 下列程式碼範例會顯示這個欄位的值。  
  
 [!code-cpp[NclCodeGroup#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#6)]
 [!code-csharp[NclCodeGroup#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeConnectAccess.Port" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前執行個體所表示的連接埠。</summary>
        <value>會與 <see cref="T:System.Int32" /> 屬性結合使用，並辨識電腦通訊埠的 <see cref="P:System.Security.Policy.CodeConnectAccess.Scheme" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 連接埠的值為介於 0 到 65,535 之間。 當您建立的執行個體指定連接埠值<xref:System.Security.Policy.CodeConnectAccess>。  
  
   
  
## Examples  
 下列程式碼範例會示範如何顯示這個屬性的值。  
  
 [!code-cpp[NclCodeGroup#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#4)]
 [!code-csharp[NclCodeGroup#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.Security.Policy.CodeConnectAccess.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前執行個體所表示的 URI 配置。</summary>
        <value>辨識 URI 配置的 <see cref="T:System.String" /> 已轉換為小寫。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您建立的執行個體時指定的配置值<xref:System.Security.Policy.CodeConnectAccess>。  
  
   
  
## Examples  
 下列程式碼範例會示範如何顯示這個屬性的值。  
  
 [!code-cpp[NclCodeGroup#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclCodeGroup/cpp/sample.cpp#4)]
 [!code-csharp[NclCodeGroup#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclCodeGroup/CS/sample.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>