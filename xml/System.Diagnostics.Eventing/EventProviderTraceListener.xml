<Type Name="EventProviderTraceListener" FullName="System.Diagnostics.Eventing.EventProviderTraceListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3aaca0a2966419625b6bdc153f840025bb3235d" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53520934" /></Metadata><TypeSignature Language="C#" Value="public class EventProviderTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventProviderTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.Eventing.EventProviderTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class EventProviderTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventProviderTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type EventProviderTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3cb60-101"><see cref="T:System.Diagnostics.TraceSource" /> 的接聽項，其負責將事件寫入至 ETW 子系統。</span><span class="sxs-lookup"><span data-stu-id="3cb60-101">A listener for <see cref="T:System.Diagnostics.TraceSource" /> that writes events to the ETW subsytem.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cb60-102">所有事件資料 （追蹤或偵錯） 從來源事件會都寫入至 ETW 子系統做為字串。</span><span class="sxs-lookup"><span data-stu-id="3cb60-102">All event data (trace or debug) from the source event is written to the ETW subsystem as a string.</span></span> <span data-ttu-id="3cb60-103">資料元素是使用逗號來分隔。</span><span class="sxs-lookup"><span data-stu-id="3cb60-103">The data elements are delimited using a comma.</span></span> <span data-ttu-id="3cb60-104">若要指定不同的分隔符號，請使用<xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="3cb60-104">To specify a different delimiter, use the <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A> property.</span></span>  
  
 <span data-ttu-id="3cb60-105">新增接聽程式<xref:System.Diagnostics.TraceSource?displayProperty=nameWithType>註冊提供者的 ETW 子系統。</span><span class="sxs-lookup"><span data-stu-id="3cb60-105">Adding the listener to <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> registers the provider with the ETW subsystem.</span></span> <span data-ttu-id="3cb60-106">您必須建立 ETW 追蹤工作階段使用 Logman.exe 可執行程式 （或類似） 將事件寫入記錄檔。</span><span class="sxs-lookup"><span data-stu-id="3cb60-106">You must create an ETW trace session using the Logman.exe executable program (or something similar) to write the events to a log file.</span></span>  
  
 <span data-ttu-id="3cb60-107">您不需要資訊清單就可以取用從接聽程式的事件，因為事件資料的單一字串。</span><span class="sxs-lookup"><span data-stu-id="3cb60-107">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="3cb60-108">當您呼叫<xref:System.Diagnostics.TraceSource?displayProperty=nameWithType>方法來寫入事件，您將傳遞<xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType>列舉值。</span><span class="sxs-lookup"><span data-stu-id="3cb60-108">When you call the <xref:System.Diagnostics.TraceSource?displayProperty=nameWithType> methods to write events, you pass a <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration value.</span></span> <span data-ttu-id="3cb60-109">列舉包含的層級和關鍵字的值。</span><span class="sxs-lookup"><span data-stu-id="3cb60-109">The enumeration contains both level and keyword values.</span></span> <span data-ttu-id="3cb60-110">當您啟用 ETW 工作階段的追蹤接聽程式提供者時，您指定的層級值可以是下列其中一個相關聯的值<xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType>列舉值：</span><span class="sxs-lookup"><span data-stu-id="3cb60-110">When you enable a trace listener provider from an ETW session, the level value that you specify can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="3cb60-111">重大 （值為 1）</span><span class="sxs-lookup"><span data-stu-id="3cb60-111">Critical (value is 1)</span></span>  
  
-   <span data-ttu-id="3cb60-112">錯誤 （值為 2）</span><span class="sxs-lookup"><span data-stu-id="3cb60-112">Error (value is 2)</span></span>  
  
-   <span data-ttu-id="3cb60-113">（值為 8） 的資訊</span><span class="sxs-lookup"><span data-stu-id="3cb60-113">Information (value is 8)</span></span>  
  
-   <span data-ttu-id="3cb60-114">詳細資訊 （值為 16）</span><span class="sxs-lookup"><span data-stu-id="3cb60-114">Verbose (value is 16)</span></span>  
  
-   <span data-ttu-id="3cb60-115">警告 （值為 4）</span><span class="sxs-lookup"><span data-stu-id="3cb60-115">Warning (value is 4)</span></span>  
  
 <span data-ttu-id="3cb60-116">您的工作階段可以使用下列其中一個項目相關聯的值為指定的關鍵字值<xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType>列舉值：</span><span class="sxs-lookup"><span data-stu-id="3cb60-116">The keyword value that you specify for the session can be the value associated with one of the following <xref:System.Diagnostics.TraceEventType?displayProperty=nameWithType> enumeration values:</span></span>  
  
-   <span data-ttu-id="3cb60-117">繼續 （值為 2048）</span><span class="sxs-lookup"><span data-stu-id="3cb60-117">Resume (value is 2,048)</span></span>  
  
-   <span data-ttu-id="3cb60-118">啟動 （值為 256）</span><span class="sxs-lookup"><span data-stu-id="3cb60-118">Start (value is 256)</span></span>  
  
-   <span data-ttu-id="3cb60-119">停止 （值為 512）</span><span class="sxs-lookup"><span data-stu-id="3cb60-119">Stop (value is 512)</span></span>  
  
-   <span data-ttu-id="3cb60-120">暫停 （值為 1,024）</span><span class="sxs-lookup"><span data-stu-id="3cb60-120">Suspend (value is 1,024)</span></span>  
  
-   <span data-ttu-id="3cb60-121">傳送 （值為 4,096）</span><span class="sxs-lookup"><span data-stu-id="3cb60-121">Transfer (value is 4,096)</span></span>  
  
   
  
## Examples  
  
```csharp  
private static Guid providerId = new Guid("{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}");  
  
    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), "Test Listener", "::");  
  
    // You should use the All default level and control the level using the  
    // ETW session; otherwise, you may not log all the events requested by the  
    // session.  
    TraceSource source = new TraceSource("MyProvider", SourceLevels.All);  
  
    source.Listeners.Add(listener);  
  
    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { "abc", "def", true, 123 });  
  
    source.TraceEvent(TraceEventType.Warning, 12, "Provider guid: {0}", new object[] { providerId });  
  
    source.TraceInformation("string {0}, bool {1}, int {2}, ushort {3}", new object[] { "abc", false, 123, (UInt32)5 });  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Diagnostics.TraceListener" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cb60-122">初始化 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3cb60-122">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener providerId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId"><span data-ttu-id="3cb60-123">可識別提供者的唯一字串 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="3cb60-123">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span></span></param>
        <summary><span data-ttu-id="3cb60-124">使用指定的提供者識別項，初始化 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3cb60-124">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string * string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener (providerId, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId"><span data-ttu-id="3cb60-125">可識別提供者的唯一字串 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="3cb60-125">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span></span></param>
        <param name="name"><span data-ttu-id="3cb60-126">接聽項的名稱。</span><span class="sxs-lookup"><span data-stu-id="3cb60-126">Name of the listener.</span></span></param>
        <summary><span data-ttu-id="3cb60-127">使用指定的提供者識別項和接聽項的名稱，初始化 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3cb60-127">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier and name of the listener.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventProviderTraceListener (string providerId, string name, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerId, string name, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerId As String, name As String, delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventProviderTraceListener(System::String ^ providerId, System::String ^ name, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.Eventing.EventProviderTraceListener : string * string * string -&gt; System.Diagnostics.Eventing.EventProviderTraceListener" Usage="new System.Diagnostics.Eventing.EventProviderTraceListener (providerId, name, delimiter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerId" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerId"><span data-ttu-id="3cb60-128">可識別提供者的唯一字串 <see cref="T:System.Guid" />。</span><span class="sxs-lookup"><span data-stu-id="3cb60-128">A unique string <see cref="T:System.Guid" /> that identifies the provider.</span></span></param>
        <param name="name"><span data-ttu-id="3cb60-129">接聽項的名稱。</span><span class="sxs-lookup"><span data-stu-id="3cb60-129">Name of the listener.</span></span></param>
        <param name="delimiter"><span data-ttu-id="3cb60-130">用來分隔事件資料的分隔符號 </span><span class="sxs-lookup"><span data-stu-id="3cb60-130">Delimiter used to delimit the event data.</span></span> <span data-ttu-id="3cb60-131">(如需詳細資訊，請參閱 <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> 屬性)。</span><span class="sxs-lookup"><span data-stu-id="3cb60-131">(For more details, see the <see cref="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" /> property.)</span></span></param>
        <summary><span data-ttu-id="3cb60-132">使用指定的提供者識別項、接聽項的名稱和分隔符號，初始化 <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="3cb60-132">Initializes a new instance of the <see cref="T:System.Diagnostics.Eventing.EventProviderTraceListener" /> class using the specified provider identifier, name of the listener, and delimiter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
-  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="eventProviderTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3cb60-133">關閉輸出資料流，使它不再接收追蹤或偵錯輸出。</span><span class="sxs-lookup"><span data-stu-id="3cb60-133">Closes the output stream so it no longer receives tracing or debugging output.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cb60-134">取得或設定用來分隔寫入至 ETW 子系統事件資料的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="3cb60-134">Gets or sets the delimiter used to delimit the event data that is written to the ETW subsystem.</span></span></summary>
        <value><span data-ttu-id="3cb60-135">用來分隔事件資料的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="3cb60-135">The delimiter used to delimit the event data.</span></span> <span data-ttu-id="3cb60-136">預設分隔符號是逗號。</span><span class="sxs-lookup"><span data-stu-id="3cb60-136">The default delimiter is a comma.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cb60-137">接聽程式將資料元素轉換成字串，然後串連字串，使用指定的分隔符號分隔字串中的每個資料元素。</span><span class="sxs-lookup"><span data-stu-id="3cb60-137">The listener converts the data elements to strings and then concatenates the strings together, using the specified delimiter to delimit each data element in the string.</span></span> <span data-ttu-id="3cb60-138">字串接著會寫入為 ETW 子系統中的事件資料。</span><span class="sxs-lookup"><span data-stu-id="3cb60-138">The string is then written as the event data in the ETW subsystem.</span></span>  
  
 <span data-ttu-id="3cb60-139">若要成功剖析字串，取用者必須知道所使用的分隔符號。</span><span class="sxs-lookup"><span data-stu-id="3cb60-139">To successfully parse the string, the consumer must know the delimiter that was used.</span></span>  
  
 <span data-ttu-id="3cb60-140">如果資料包含可能包含逗號的字串，指定適當的分隔符號，以便可正確剖析事件資料。</span><span class="sxs-lookup"><span data-stu-id="3cb60-140">If the data contains a string that may contain a comma, specify an appropriate delimiter, so that the event data can be correctly parsed.</span></span>  
  
 <span data-ttu-id="3cb60-141">您不需要資訊清單就可以取用從接聽程式的事件，因為事件資料的單一字串。</span><span class="sxs-lookup"><span data-stu-id="3cb60-141">You do not need a manifest to consume events from the listener because the event data is a single string.</span></span>  
  
 <span data-ttu-id="3cb60-142">適用於使用所撰寫的事件資料的分隔符號<xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="3cb60-142">The delimiter applies to event data written using the <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Fail">
      <MemberSignature Language="C#" Value="public override void Fail (string message, string detailMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Fail(string message, string detailMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Fail (message As String, detailMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Fail(System::String ^ message, System::String ^ detailMessage);" />
      <MemberSignature Language="F#" Value="override this.Fail : string * string -&gt; unit" Usage="eventProviderTraceListener.Fail (message, detailMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="detailMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3cb60-143">要發出的訊息。</span><span class="sxs-lookup"><span data-stu-id="3cb60-143">A message to emit.</span></span></param>
        <param name="detailMessage"><span data-ttu-id="3cb60-144">要發出的詳細訊息。</span><span class="sxs-lookup"><span data-stu-id="3cb60-144">A detailed message to emit.</span></span></param>
        <summary><span data-ttu-id="3cb60-145">當您實做 <see cref="T:System.Diagnostics.TraceListener" /> 類別時，發出錯誤訊息和詳細的錯誤訊息給您建立的接聽程式。</span><span class="sxs-lookup"><span data-stu-id="3cb60-145">Emits an error message and a detailed error message to the listener you create when you implement the <see cref="T:System.Diagnostics.TraceListener" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Fail(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override sealed void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="override this.Flush : unit -&gt; unit" Usage="eventProviderTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3cb60-146">排清輸出緩衝區。</span><span class="sxs-lookup"><span data-stu-id="3cb60-146">Flushes the output buffer.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="override this.GetSupportedAttributes : unit -&gt; string[]" Usage="eventProviderTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3cb60-147">取得由追蹤接聽程式支援的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="3cb60-147">Gets the custom attributes supported by the trace listener.</span></span></summary>
        <returns><span data-ttu-id="3cb60-148">字串陣列，為追蹤接聽程式支援的自訂屬性命名；如果沒有自訂屬性，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="3cb60-148">A string array naming the custom attributes supported by the trace listener, or <see langword="null" /> if there are no custom attributes.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsThreadSafe">
      <MemberSignature Language="C#" Value="public override sealed bool IsThreadSafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThreadSafe" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property IsThreadSafe As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThreadSafe { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsThreadSafe : bool" Usage="System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cb60-149">取得值，指出追蹤接聽程式是否為安全執行緒。</span><span class="sxs-lookup"><span data-stu-id="3cb60-149">Gets a value indicating whether the trace listener is thread safe.</span></span></summary>
        <value><span data-ttu-id="3cb60-150">如果追蹤接聽程式是安全執行緒，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cb60-150"><see langword="true" /> if the trace listener is thread safe; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="3cb60-151">預設為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="3cb60-151">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Diagnostics.TraceListener.IsThreadSafe" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="eventProviderTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="3cb60-152"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3cb60-152">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="3cb60-153">用來識別輸出的名稱，通常是產生追蹤事件的應用程式名稱。</span><span class="sxs-lookup"><span data-stu-id="3cb60-153">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="3cb60-154">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 值，可指定引發追蹤的事件類型。</span><span class="sxs-lookup"><span data-stu-id="3cb60-154">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="3cb60-155">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="3cb60-155">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="3cb60-156">要發出的追蹤資料。</span><span class="sxs-lookup"><span data-stu-id="3cb60-156">The trace data to emit.</span></span></param>
        <summary><span data-ttu-id="3cb60-157">寫入追蹤資訊、資料物件與事件資訊至特定接聽程式的輸出。</span><span class="sxs-lookup"><span data-stu-id="3cb60-157">Writes trace information, a data object and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="eventProviderTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="3cb60-158"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3cb60-158">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="3cb60-159">用來識別輸出的名稱，通常是產生追蹤事件的應用程式名稱。</span><span class="sxs-lookup"><span data-stu-id="3cb60-159">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="3cb60-160">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 值，可指定引發追蹤的事件類型。</span><span class="sxs-lookup"><span data-stu-id="3cb60-160">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="3cb60-161">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="3cb60-161">A numeric identifier for the event.</span></span></param>
        <param name="data"><span data-ttu-id="3cb60-162">要發出做為資料的物件陣列。</span><span class="sxs-lookup"><span data-stu-id="3cb60-162">An array of objects to emit as data.</span></span></param>
        <summary><span data-ttu-id="3cb60-163">寫入追蹤資訊、資料物件與事件資訊至特定接聽程式的輸出。</span><span class="sxs-lookup"><span data-stu-id="3cb60-163">Writes trace information, a data object and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="3cb60-164"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3cb60-164">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="3cb60-165">用來識別輸出的名稱，通常是產生追蹤事件的應用程式名稱。</span><span class="sxs-lookup"><span data-stu-id="3cb60-165">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="3cb60-166">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 值，可指定引發追蹤的事件類型。</span><span class="sxs-lookup"><span data-stu-id="3cb60-166">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="3cb60-167">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="3cb60-167">A numeric identifier for the event.</span></span></param>
        <summary><span data-ttu-id="3cb60-168">寫入追蹤和事件資訊至特定接聽程式的輸出。</span><span class="sxs-lookup"><span data-stu-id="3cb60-168">Writes trace and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="3cb60-169"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3cb60-169">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="3cb60-170">用來識別輸出的名稱，通常是產生追蹤事件的應用程式名稱。</span><span class="sxs-lookup"><span data-stu-id="3cb60-170">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="3cb60-171">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 值，可指定引發追蹤的事件類型。</span><span class="sxs-lookup"><span data-stu-id="3cb60-171">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="3cb60-172">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="3cb60-172">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="3cb60-173">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="3cb60-173">A message to write.</span></span></param>
        <summary><span data-ttu-id="3cb60-174">寫入追蹤資訊、訊息與事件資訊至特定接聽程式的輸出。</span><span class="sxs-lookup"><span data-stu-id="3cb60-174">Writes trace information, a message, and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="eventProviderTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="3cb60-175"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3cb60-175">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="3cb60-176">用來識別輸出的名稱，通常是產生追蹤事件的應用程式名稱。</span><span class="sxs-lookup"><span data-stu-id="3cb60-176">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="eventType"><span data-ttu-id="3cb60-177">其中一個 <see cref="T:System.Diagnostics.TraceEventType" /> 值，可指定引發追蹤的事件類型。</span><span class="sxs-lookup"><span data-stu-id="3cb60-177">One of the <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the type of event that has caused the trace.</span></span></param>
        <param name="id"><span data-ttu-id="3cb60-178">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="3cb60-178">A numeric identifier for the event.</span></span></param>
        <param name="format"><span data-ttu-id="3cb60-179">包含零或多個格式項目的格式字串，它與 <paramref name="args" /> 陣列中的物件相對應。</span><span class="sxs-lookup"><span data-stu-id="3cb60-179">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args" /> array.</span></span></param>
        <param name="args"><span data-ttu-id="3cb60-180"><see langword="object" /> 陣列，含有零或多個要格式化的物件。</span><span class="sxs-lookup"><span data-stu-id="3cb60-180">An <see langword="object" /> array containing zero or more objects to format.</span></span></param>
        <summary><span data-ttu-id="3cb60-181">寫入追蹤資訊、格式化的物件陣列與事件資訊至特定接聽程式的輸出。</span><span class="sxs-lookup"><span data-stu-id="3cb60-181">Writes trace information, a formatted array of objects and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="TraceTransfer">
      <MemberSignature Language="C#" Value="public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceTransfer(class System.Diagnostics.TraceEventCache eventCache, string source, int32 id, string message, valuetype System.Guid relatedActivityId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub TraceTransfer (eventCache As TraceEventCache, source As String, id As Integer, message As String, relatedActivityId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceTransfer(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, int id, System::String ^ message, Guid relatedActivityId);" />
      <MemberSignature Language="F#" Value="override this.TraceTransfer : System.Diagnostics.TraceEventCache * string * int * string * Guid -&gt; unit" Usage="eventProviderTraceListener.TraceTransfer (eventCache, source, id, message, relatedActivityId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="relatedActivityId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="eventCache"><span data-ttu-id="3cb60-182"><see cref="T:System.Diagnostics.TraceEventCache" /> 物件，包含目前處理程序識別碼、執行緒識別碼與堆疊追蹤資訊。</span><span class="sxs-lookup"><span data-stu-id="3cb60-182">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span></span></param>
        <param name="source"><span data-ttu-id="3cb60-183">用來識別輸出的名稱，通常是產生追蹤事件的應用程式名稱。</span><span class="sxs-lookup"><span data-stu-id="3cb60-183">A name used to identify the output, typically the name of the application that generated the trace event.</span></span></param>
        <param name="id"><span data-ttu-id="3cb60-184">事件的數值識別項。</span><span class="sxs-lookup"><span data-stu-id="3cb60-184">A numeric identifier for the event.</span></span></param>
        <param name="message"><span data-ttu-id="3cb60-185">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="3cb60-185">A message to write.</span></span></param>
        <param name="relatedActivityId"><span data-ttu-id="3cb60-186"><see cref="T:System.Guid" /> 物件，識別相關活動。</span><span class="sxs-lookup"><span data-stu-id="3cb60-186">A <see cref="T:System.Guid" /> object identifying a related activity.</span></span></param>
        <summary><span data-ttu-id="3cb60-187">寫入追蹤資訊、訊息、相關活動身分識別與事件資訊至特定接聽程式的輸出。</span><span class="sxs-lookup"><span data-stu-id="3cb60-187">Writes trace information, a message, a related activity identity and event information to the listener specific output.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override sealed void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="eventProviderTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3cb60-188">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="3cb60-188">A message to write.</span></span></param>
        <summary><span data-ttu-id="3cb60-189">當在衍生類別中覆寫時，將指定的訊息寫入您在衍生類別中建立的接聽程式。</span><span class="sxs-lookup"><span data-stu-id="3cb60-189">When overridden in a derived class, writes the specified message to the listener you create in the derived class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override sealed void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : string -&gt; unit" Usage="eventProviderTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="3cb60-190">要寫入的訊息。</span><span class="sxs-lookup"><span data-stu-id="3cb60-190">A message to write.</span></span></param>
        <summary><span data-ttu-id="3cb60-191">當在衍生類別中覆寫時，將訊息寫入您在衍生類別中所建立的接聽程式，後面跟隨著行結束字元。</span><span class="sxs-lookup"><span data-stu-id="3cb60-191">When overridden in a derived class, writes a message to the listener you create in the derived class, followed by a line terminator.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Diagnostics.TraceListener.WriteLine(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>