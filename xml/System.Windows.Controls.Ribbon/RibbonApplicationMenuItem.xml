<Type Name="RibbonApplicationMenuItem" FullName="System.Windows.Controls.Ribbon.RibbonApplicationMenuItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5481c6828d8e5482bed563a2c087ee929d097a20" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36568485" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RibbonApplicationMenuItem : System.Windows.Controls.Ribbon.RibbonMenuItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RibbonApplicationMenuItem extends System.Windows.Controls.Ribbon.RibbonMenuItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />
  <TypeSignature Language="VB.NET" Value="Public Class RibbonApplicationMenuItem&#xA;Inherits RibbonMenuItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class RibbonApplicationMenuItem : System::Windows::Controls::Ribbon::RibbonMenuItem" />
  <TypeSignature Language="F#" Value="type RibbonApplicationMenuItem = class&#xA;    inherit RibbonMenuItem" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Ribbon.RibbonMenuItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ItemContainerStyle", StyleTargetType=typeof(System.Windows.Controls.Ribbon.RibbonApplicationMenuItem))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4e5d4-101">表示 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" />控制項中的功能表項目。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4e5d4-101">Represents a menu item inside a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" /> control.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e5d4-102">您通常會使用<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>按一下功能表項目時叫用命令。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-102">You typically use a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> to invoke a command when the menu item is clicked.</span></span> <span data-ttu-id="4e5d4-103">更多的功能表項目中使用命令的詳細資訊，請參閱[How to： 將命令加入 MenuItem](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370)。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-103">For more information about using commands with menu items, see [How to: Add a Command to a MenuItem](http://msdn.microsoft.com/library/013d68a0-5373-4a68-bd91-5de574307370).</span></span>  
  
 <span data-ttu-id="4e5d4-104">A<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>可以有子功能表。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-104">A <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> can have submenus.</span></span> <span data-ttu-id="4e5d4-105">中子功能表的<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>中的物件由組成<xref:System.Windows.Controls.ItemsControl.Items%2A>集合<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-105">The submenu of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> is made up of the objects within the <xref:System.Windows.Controls.ItemsControl.Items%2A> collection of a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>.</span></span> <span data-ttu-id="4e5d4-106">它是很常見的<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>來包含其他<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>物件，以建立巢狀的子功能表。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-106">It is common for a <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> to contain other <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects to create nested submenus.</span></span>  
  
 <span data-ttu-id="4e5d4-107">A<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>無法具有子功能表，並同時叫用命令。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-107">A <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> cannot have submenus and also invoke a command.</span></span> <span data-ttu-id="4e5d4-108">如果<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>具有子功能表，與關聯的命令<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>不會叫用。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-108">If the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> has a submenu, the command associated with the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> is not invoked.</span></span> <span data-ttu-id="4e5d4-109">當您需要做為功能表標頭，並叫用命令的控制項時，使用<xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-109">When you need a control that acts as a menu header and invokes a command, use a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span></span>  
  
 <span data-ttu-id="4e5d4-110">下圖顯示功能區控制項的應用程式功能表。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-110">The following illustration shows the Application Menu for a ribbon control.</span></span> <span data-ttu-id="4e5d4-111">**開啟**，**儲存**，和**版面**項目都屬於<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>控制項。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-111">The **Open**, **Save**, and **Page Setup** items are examples of the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> control.</span></span>  
  
 <span data-ttu-id="4e5d4-112">![功能區應用程式功能表](~/add/media/wpfribbon-appmenu.png "功能區應用程式功能表")</span><span class="sxs-lookup"><span data-stu-id="4e5d4-112">![Ribbon Application Menu](~/add/media/wpfribbon-appmenu.png "Ribbon Application Menu")</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4e5d4-113">下列範例顯示先前顯示的應用程式功能表的功能表項目。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-113">The following example shows the menu items of the Application Menu shown previously.</span></span> <span data-ttu-id="4e5d4-114"><xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>物件會直接在裝載<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu>和<xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-114">The <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem> objects are hosted directly in the <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu> and in a <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>.</span></span>  
  
 [!code-xaml[Ribbon_Snippets#AppMenuItems](~/samples/snippets/csharp/VS_Snippets_Wpf/ribbon_snippets/cs/ribbonwindow1.xaml#appmenuitems)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RibbonApplicationMenuItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RibbonApplicationMenuItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e5d4-115">初始化 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-115">Initializes a new instance of the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="ribbonApplicationMenuItem.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e5d4-116">傳回新的 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-116">Returns a new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4e5d4-117">新的 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> 容器物件，這個物件是用來顯示 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 容器中的某個項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-117">A new <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> container object that is used to display an item from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="ribbonApplicationMenuItem.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="4e5d4-118">要測試的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-118">The item to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e5d4-119">傳回值，這個值表示指定的項目是否 (或是否有資格) 是其本身的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-119">Returns a value that indicates whether the specified item is (or is eligible to be) its own container.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4e5d4-120">如果項目是 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />、<see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />、<see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> 或 <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-120">
              <see langword="true" /> if the item is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, a <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or a <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Level">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel Level" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Level As RibbonApplicationMenuItemLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel Level { System::Windows::Controls::Ribbon::RibbonApplicationMenuItemLevel get(); };" />
      <MemberSignature Language="F#" Value="member this.Level : System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel" Usage="System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e5d4-121">取得值，這個值指出功能表項目的顯示等級。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-121">Gets a value that indicates at what level the menu item is displayed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4e5d4-122">其中一個列舉值，指定顯示哪一個層級的功能表項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-122">One the enumeration values that specifies at what level the menu item is displayed.</span>
          </span>
          <span data-ttu-id="4e5d4-123">已註冊的預設值是 <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-123">The registered default is <see cref="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItemLevel.Top" />.</span>
          </span>
          <span data-ttu-id="4e5d4-124">如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-124">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_Level"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="4e5d4-125">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="4e5d4-125">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="4e5d4-126">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="4e5d4-126">Identifier field</span></span>|<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty>|  
|<span data-ttu-id="4e5d4-127">中繼資料屬性設定為 `true`</span><span class="sxs-lookup"><span data-stu-id="4e5d4-127">Metadata properties set to `true`</span></span>|<span data-ttu-id="4e5d4-128">無</span><span class="sxs-lookup"><span data-stu-id="4e5d4-128">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LevelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LevelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LevelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LevelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LevelProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LevelProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.LevelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4e5d4-129">識別 <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" /> 相依性屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-129">Identifies the <see cref="P:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.Level" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnActivatingKeyTip">
      <MemberSignature Language="C#" Value="protected override void OnActivatingKeyTip (System.Windows.Controls.ActivatingKeyTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnActivatingKeyTip(class System.Windows.Controls.ActivatingKeyTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnActivatingKeyTip(System.Windows.Controls.ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnActivatingKeyTip (e As ActivatingKeyTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnActivatingKeyTip(System::Windows::Controls::ActivatingKeyTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnActivatingKeyTip : System.Windows.Controls.ActivatingKeyTipEventArgs -&gt; unit" Usage="ribbonApplicationMenuItem.OnActivatingKeyTip e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ActivatingKeyTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4e5d4-130">包含啟動的相關資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-130">Contains data about the activation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e5d4-131">在按下 KeyTip 或快速鍵時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-131">Called when the KeyTip or accelerator key is pressed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="ribbonApplicationMenuItem.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4e5d4-132">在套用新的範本時，建置 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> 的視覺化樹狀結構。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-132">Builds the visual tree for the <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem" /> when a new template is applied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4e5d4-133">每當應用程式程式碼或內部處理序 (例如重建配置傳遞) 呼叫 <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> 方法時，就會叫用此方法。</span><span class="sxs-lookup"><span data-stu-id="4e5d4-133">This method is invoked whenever application code or an internal process, such as a rebuilding layout pass, calls the <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="ribbonApplicationMenuItem.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="4e5d4-134">事件資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-134">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e5d4-135">提供 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件的類別處理。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-135">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="ribbonApplicationMenuItem.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="4e5d4-136">用來顯示項目 (Item) 的項目 (Element)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-136">The element that is used to display the item.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="4e5d4-137">要在 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 中顯示的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-137">The item to display from the <see cref="P:System.Windows.Controls.ItemsControl.Items" /> collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e5d4-138">準備指定項目 (Element) 以顯示指定項目 (Item)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-138">Prepares the specified element to display the specified item.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldApplyItemContainerStyle">
      <MemberSignature Language="C#" Value="protected override bool ShouldApplyItemContainerStyle (System.Windows.DependencyObject container, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ShouldApplyItemContainerStyle(class System.Windows.DependencyObject container, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem.ShouldApplyItemContainerStyle(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ShouldApplyItemContainerStyle (container As DependencyObject, item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ShouldApplyItemContainerStyle(System::Windows::DependencyObject ^ container, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.ShouldApplyItemContainerStyle : System.Windows.DependencyObject * obj -&gt; bool" Usage="ribbonApplicationMenuItem.ShouldApplyItemContainerStyle (container, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">
          <span data-ttu-id="4e5d4-139">容器項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-139">The container element.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="4e5d4-140">適用容器的項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-140">The item that the container is for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4e5d4-141">傳回值，這個值表示是否要從 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> 或 <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> 屬性將樣式套用至指定項目 (item) 的容器項目 (element)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-141">Returns a value that indicates whether to apply the style from the <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyle" /> or <see cref="P:System.Windows.Controls.ItemsControl.ItemContainerStyleSelector" /> property to the container element of the specified item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4e5d4-142">如果 <paramref name="container" /> 是 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />、<see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" /> 或 <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />，則為 <see langword="false" />，否則為基底實作傳回的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4e5d4-142">
              <see langword="false" /> if <paramref name="container" /> is a <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem" />, <see cref="T:System.Windows.Controls.Ribbon.RibbonSeparator" />, or <see cref="T:System.Windows.Controls.Ribbon.RibbonGallery" />; otherwise, the value returned by the base implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>