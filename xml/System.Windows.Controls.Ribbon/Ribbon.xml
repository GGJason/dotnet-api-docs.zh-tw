<Type Name="Ribbon" FullName="System.Windows.Controls.Ribbon.Ribbon">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c0b8fc819263f584ab2921cf60a1652761428dc0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36568611" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Ribbon : System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Ribbon extends System.Windows.Controls.Primitives.Selector" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Ribbon.Ribbon" />
  <TypeSignature Language="VB.NET" Value="Public Class Ribbon&#xA;Inherits Selector" />
  <TypeSignature Language="C++ CLI" Value="public ref class Ribbon : System::Windows::Controls::Primitives::Selector" />
  <TypeSignature Language="F#" Value="type Ribbon = class&#xA;    inherit Selector" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.Selector</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="ContextualTabGroupStyle", StyleTargetType=typeof(System.Windows.Controls.Ribbon.RibbonContextualTabGroup))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.StyleTypedProperty(Property="TabHeaderStyle", StyleTargetType=typeof(System.Windows.Controls.Ribbon.RibbonTabHeader))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContextualTabGroupItemsControl", Type=typeof(System.Windows.Controls.Ribbon.RibbonContextualTabGroupItemsControl))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_TitlePanel", Type=typeof(System.Windows.Controls.Ribbon.Primitives.RibbonTitlePanel))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_TitleHost", Type=typeof(System.Windows.Controls.ContentPresenter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="QatTopHost", Type=typeof(System.Windows.Controls.Grid))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_HelpPane", Type=typeof(System.Windows.Controls.ContentPresenter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ITEMSPRESENTERPOPUP", Type=typeof(System.Windows.Controls.Primitives.Popup))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示功能區使用者介面的根項目，可主控快速存取工具列、應用程式功能表，以及標籤。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 功能區是一種命令列，會組織成一系列的索引標籤頂端的應用程式視窗的應用程式的功能。 它會取代傳統的功能表列和工具列。  
  
 <xref:System.Windows.Controls.Ribbon.Ribbon>類別是功能區使用者介面 (UI) 中 Windows Presentation Foundation (WPF) 的根項目。 <xref:System.Windows.Controls.Ribbon.Ribbon>類別裝載<xref:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar>、 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu>，和一或多個<xref:System.Windows.Controls.Ribbon.RibbonTab>控制項。 這些控制項，然後裝載各種不同的按鈕控制項和功能表控制項可讓您存取應用程式的命令。  
  
 下列清單顯示功能區項目的一般階層。  
  
-   <xref:System.Windows.Controls.Ribbon.Ribbon>  
  
    -   <xref:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContent%2A?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar>  
  
        -   <xref:System.Windows.Controls.Ribbon.RibbonButton>, <xref:System.Windows.Controls.Ribbon.RibbonRadioButton>, <xref:System.Windows.Controls.Ribbon.RibbonToggleButton>, <xref:System.Windows.Controls.Ribbon.RibbonCheckBox>, <xref:System.Windows.Controls.Ribbon.RibbonTextBox>  
  
        -   <xref:System.Windows.Controls.Ribbon.RibbonComboBox>, <xref:System.Windows.Controls.Ribbon.RibbonMenuButton>, <xref:System.Windows.Controls.Ribbon.RibbonSplitButton>  
  
        -   <xref:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar.CustomizeMenuButton%2A>  
  
    -   <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu>  
  
        -   <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenuItem>  
  
        -   <xref:System.Windows.Controls.Ribbon.RibbonApplicationSplitMenuItem>  
  
        -   <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu.FooterPaneContent%2A>  
  
        -   <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu.AuxiliaryPaneContent%2A>  
  
    -   <xref:System.Windows.Controls.Ribbon.RibbonTab>  
  
        -   <xref:System.Windows.Controls.Ribbon.RibbonGroup>  
  
            -   <xref:System.Windows.Controls.Ribbon.RibbonButton>, <xref:System.Windows.Controls.Ribbon.RibbonRadioButton>, <xref:System.Windows.Controls.Ribbon.RibbonToggleButton>, <xref:System.Windows.Controls.Ribbon.RibbonCheckBox>, <xref:System.Windows.Controls.Ribbon.RibbonTextBox>  
  
            -   <xref:System.Windows.Controls.Ribbon.RibbonComboBox>, <xref:System.Windows.Controls.Ribbon.RibbonMenuButton>, <xref:System.Windows.Controls.Ribbon.RibbonSplitButton>  
  
            -   <xref:System.Windows.Controls.Ribbon.RibbonControlGroup>  
  
   
  
## Examples  
 下列範例會示範簡單的功能區所建立的 Visual Studio 2010 範本的 [說明] 窗格與新增的快速存取工具列項目。  
  
 [!code-xaml[Ribbon_Snippets#RibbonDefault](~/samples/snippets/csharp/VS_Snippets_Wpf/ribbon_snippets/cs/mainwindow.xaml#ribbondefault)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Ribbon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Ribbon();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Ribbon.RibbonApplicationMenu ApplicationMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Ribbon.RibbonApplicationMenu ApplicationMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.ApplicationMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationMenu As RibbonApplicationMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Ribbon::RibbonApplicationMenu ^ ApplicationMenu { System::Windows::Controls::Ribbon::RibbonApplicationMenu ^ get(); void set(System::Windows::Controls::Ribbon::RibbonApplicationMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationMenu : System.Windows.Controls.Ribbon.RibbonApplicationMenu with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.ApplicationMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonApplicationMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Controls.Ribbon.RibbonApplicationMenu" />，這是此 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項的邏輯子系。</summary>
        <value>功能區應用程式功能表是此 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項的邏輯子項目。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用<xref:System.Windows.Controls.Ribbon.Ribbon.ApplicationMenu%2A>相關聯屬性<xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu>物件<xref:System.Windows.Controls.Ribbon.Ribbon>。  
  
<a name="dependencyPropertyInfo_ApplicationMenu"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.ApplicationMenuProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
   
  
## Examples  
 下列範例會示範簡單的應用程式功能表附加至功能區控制項。 如需更多範例，請參閱 <xref:System.Windows.Controls.Ribbon.RibbonApplicationMenu>。  
  
```xaml  
xmlns:ribbon="clr-namespace:System.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"  
...  
<ribbon:Ribbon >  
    <ribbon:Ribbon.ApplicationMenu>  
        <ribbon:RibbonApplicationMenu SmallImageSource="Images\SmallIcon.png">  
            <ribbon:RibbonApplicationMenuItem Header="Hello _Ribbon"  
                                              x:Name="MenuItem1"  
                                              ImageSource="Images\LargeIcon.png"/>  
        </ribbon:RibbonApplicationMenu>  
    </ribbon:Ribbon.ApplicationMenu>  
    <ribbon:RibbonTab>  
        <!-- Ribbon content goes here. -->  
    </ribbon:RibbonTab>  
</ribbon:Ribbon >  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ApplicationMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ApplicationMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.ApplicationMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ApplicationMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ApplicationMenuProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ApplicationMenuProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.ApplicationMenuProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.ApplicationMenu" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CheckedBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CheckedBackground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.CheckedBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckedBackground As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CheckedBackground { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CheckedBackground : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.CheckedBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定,筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項處於核取狀態時繪製其背景。</summary>
        <value>筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項處於核取狀態時繪製其背景。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CheckedBackground"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.CheckedBackgroundProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedBackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CheckedBackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CheckedBackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.CheckedBackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckedBackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CheckedBackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CheckedBackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.CheckedBackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.CheckedBackground" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedBorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CheckedBorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CheckedBorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.CheckedBorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckedBorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CheckedBorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CheckedBorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.CheckedBorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" />控制項處於核取狀態時繪製外邊界。</summary>
        <value>筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項處於 Checked 狀態時繪製其外邊界。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_CheckedBorderBrush"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.CheckedBorderBrushProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedBorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CheckedBorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CheckedBorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.CheckedBorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckedBorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CheckedBorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CheckedBorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.CheckedBorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.CheckedBorderBrush" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collapsed">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Collapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Collapsed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Ribbon.Ribbon.Collapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Collapsed As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Collapsed;" />
      <MemberSignature Language="F#" Value="member this.Collapsed : System.Windows.RoutedEventHandler " Usage="member this.Collapsed : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於<see cref="P:System.Windows.Controls.Ribbon.Ribbon.IsCollapsed" />屬性變更為<see langword="true" />且<see cref="T:System.Windows.Controls.Ribbon.Ribbon" />摺疊時。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CollapsedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent CollapsedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent CollapsedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.CollapsedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CollapsedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ CollapsedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable CollapsedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Ribbon.Ribbon.CollapsedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="E:System.Windows.Controls.Ribbon.Ribbon.Collapsed" /> 路由事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualTabGroupHeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ContextualTabGroupHeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ContextualTabGroupHeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupHeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextualTabGroupHeaderTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ContextualTabGroupHeaderTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextualTabGroupHeaderTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupHeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來顯示 <see cref="P:System.Windows.Controls.Ribbon.RibbonContextualTabGroup.Header" /> 中 <see cref="T:System.Windows.Controls.Ribbon.RibbonContextualTabGroup" /> 項目的範本。</summary>
        <value>用於顯示 <see cref="P:System.Windows.Controls.Ribbon.RibbonContextualTabGroup.Header" /> 之 <see cref="T:System.Windows.Controls.Ribbon.RibbonContextualTabGroup" /> 項目的範本。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ContextualTabGroupHeaderTemplate"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupHeaderTemplateProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualTabGroupHeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextualTabGroupHeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextualTabGroupHeaderTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupHeaderTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextualTabGroupHeaderTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextualTabGroupHeaderTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextualTabGroupHeaderTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupHeaderTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupHeaderTemplate" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualTabGroups">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.Ribbon.RibbonContextualTabGroup&gt; ContextualTabGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.Ribbon.RibbonContextualTabGroup&gt; ContextualTabGroups" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextualTabGroups As Collection(Of RibbonContextualTabGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::Ribbon::RibbonContextualTabGroup ^&gt; ^ ContextualTabGroups { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::Ribbon::RibbonContextualTabGroup ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextualTabGroups : System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.Ribbon.RibbonContextualTabGroup&gt;" Usage="System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.Ribbon.RibbonContextualTabGroup&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得集合，這個集合包含<see cref="T:System.Windows.Controls.Ribbon.RibbonContextualTabGroup" /> 中所有的 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 項目。</summary>
        <value>若存在，則為<see cref="T:System.Windows.Controls.Ribbon.RibbonContextualTabGroup" /> 中的 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 項目的集合，否則則為新的空集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您使用*內容相關索引標籤*顯示群組的只在特定內容相關的命令。 內容相關索引標籤群組顯示或隱藏根據指定的準則。 比方說，當偵測到 tablet 輸入時，或圖片工具索引標籤群組可能會顯示選取的映像物件時，可能會顯示 筆跡工具索引標籤群組。  
  
   
  
## Examples  
 下列範例所示<xref:System.Windows.Controls.Ribbon.RibbonTab>名為**畫筆**位於**筆跡工具**內容相關索引標籤群組。  
  
```xaml  
</ribbon:Ribbon>  
    <ribbon:RibbonTab Name="Pens" Header="Pens" ContextualTabGroupHeader="Ink Tools" >  
    <!-- Ribbon Tab Content -->  
    </ribbon:RibbonTab>  
    <ribbon:Ribbon.ContextualTabGroups>  
        <ribbon:RibbonContextualTabGroup Header="Ink Tools" Visibility="Visible" Background="Green" />  
    </ribbon:Ribbon.ContextualTabGroups>  
</ribbon:Ribbon>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualTabGroupsSource">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable ContextualTabGroupsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerable ContextualTabGroupsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextualTabGroupsSource As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerable ^ ContextualTabGroupsSource { System::Collections::IEnumerable ^ get(); void set(System::Collections::IEnumerable ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextualTabGroupsSource : System.Collections.IEnumerable with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來產生 <see cref="T:System.Windows.Controls.Ribbon.RibbonContextualTabGroup" /> 項目之內容的集合。</summary>
        <value>用來產生 <see cref="T:System.Windows.Controls.Ribbon.RibbonContextualTabGroup" /> 項目之內容的集合。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ContextualTabGroupHeadersSource"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupsSourceProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualTabGroupsSourceProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextualTabGroupsSourceProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextualTabGroupsSourceProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupsSourceProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextualTabGroupsSourceProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextualTabGroupsSourceProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextualTabGroupsSourceProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupsSourceProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupsSource" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualTabGroupStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ContextualTabGroupStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ContextualTabGroupStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextualTabGroupStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ContextualTabGroupStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextualTabGroupStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當呈現 <see cref="T:System.Windows.Controls.Ribbon.RibbonContextualTabGroup" /> 中的 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 項目時所使用的樣式。</summary>
        <value>在 <see cref="T:System.Windows.Controls.Ribbon.RibbonContextualTabGroup" /> 中套用至所有 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 項目的樣式。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ContextualTabGroupHeaderStyle"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupStyleProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextualTabGroupStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextualTabGroupStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextualTabGroupStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextualTabGroupStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextualTabGroupStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextualTabGroupStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.ContextualTabGroupStyle" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Expanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Expanded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Ribbon.Ribbon.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Expanded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Expanded;" />
      <MemberSignature Language="F#" Value="member this.Expanded : System.Windows.RoutedEventHandler " Usage="member this.Expanded : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.IsCollapsed" />屬性變更為<see langword="false" />且<see cref="T:System.Windows.Controls.Ribbon.Ribbon" />擴充時。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ExpandedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ExpandedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.ExpandedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ExpandedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ExpandedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ExpandedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Ribbon.Ribbon.ExpandedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="E:System.Windows.Controls.Ribbon.Ribbon.Expanded" /> 路由事件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush FocusedBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush FocusedBackground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.FocusedBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusedBackground As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ FocusedBackground { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FocusedBackground : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.FocusedBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來繪製處於對焦狀態之 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 的背景。</summary>
        <value>筆刷，用來繪製處於對焦狀態之 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 的背景。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_FocusedBackground"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.FocusedBackgroundProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedBackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedBackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedBackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.FocusedBackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedBackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedBackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedBackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.FocusedBackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.FocusedBackground" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedBorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush FocusedBorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush FocusedBorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.FocusedBorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusedBorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ FocusedBorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FocusedBorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.FocusedBorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定筆刷，此筆刷用來繪製處於對焦狀態之 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 外邊界的背景。</summary>
        <value>筆刷，用來繪製處於對焦狀態之 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 的外邊界。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要將鍵盤焦點放在功能區控制項上，按下 ALT + KeyTip 字母然後使用方向鍵。  
  
<a name="dependencyPropertyInfo_FocusedBorderBrush"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.FocusedBorderBrushProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedBorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedBorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedBorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.FocusedBorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedBorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedBorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedBorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.FocusedBorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.FocusedBorderBrush" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.DependencyObject GetContainerForItemOverride ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.DependencyObject GetContainerForItemOverride() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.GetContainerForItemOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetContainerForItemOverride () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::DependencyObject ^ GetContainerForItemOverride();" />
      <MemberSignature Language="F#" Value="override this.GetContainerForItemOverride : unit -&gt; System.Windows.DependencyObject" Usage="ribbon.GetContainerForItemOverride " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回新的 <see cref="T:System.Windows.Controls.Ribbon.RibbonTab" /> 物件。</summary>
        <returns>新的 <see cref="T:System.Windows.Controls.Ribbon.RibbonTab" /> 容器物件，這個物件是用來顯示 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 容器中的某個項目。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPaneContent">
      <MemberSignature Language="C#" Value="public object HelpPaneContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object HelpPaneContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContent" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpPaneContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ HelpPaneContent { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPaneContent : obj with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.HelpPaneContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定說明窗格的內容。</summary>
        <value>説明窗格的內容。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以設定讓使用者能夠存取您的應用程式的說明內容的 [說明] 窗格的內容。 您通常會設定<xref:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContent%2A>啟動個別的 [說明] 視窗的單一按鈕的屬性。 不過，您可以定義前往 [說明] 窗格中的任何內容。 您可以藉由設定指定的配置和內容的外觀<xref:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContentTemplate%2A>屬性。  
  
<a name="dependencyPropertyInfo_HelpPaneContent"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContentProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPaneContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HelpPaneContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HelpPaneContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HelpPaneContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HelpPaneContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HelpPaneContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.HelpPaneContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContent" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPaneContentTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate HelpPaneContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate HelpPaneContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property HelpPaneContentTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ HelpPaneContentTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HelpPaneContentTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.HelpPaneContentTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於顯示說明窗格內容的範本。</summary>
        <value>用於顯示說明窗格內容的範本。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HelpPaneContentTemplate"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContentTemplateProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpPaneContentTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HelpPaneContentTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HelpPaneContentTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContentTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HelpPaneContentTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HelpPaneContentTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HelpPaneContentTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.HelpPaneContentTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.HelpPaneContentTemplate" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollapsed">
      <MemberSignature Language="C#" Value="public bool IsCollapsed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollapsed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.IsCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCollapsed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollapsed { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsCollapsed : bool with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.IsCollapsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得黎設定值，這個值表示 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 是否已摺疊。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 已摺疊，則為 <see langword="true" />，否則為 <see langword="false" />。 已註冊的預設值是 <see langword="false" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 功能區摺疊自動，當應用程式視窗調整大小時，而且沒有足夠的空間來顯示功能區中有意義的方式。 摺疊功能區時，所有功能區項目會從檢視中隱藏。  
  
 摺疊功能區時，<xref:System.Windows.Controls.Ribbon.Ribbon.Collapsed>就會發生事件。 展開功能區時，<xref:System.Windows.Controls.Ribbon.Ribbon.Expanded>就會發生事件。  
  
<a name="dependencyPropertyInfo_IsCollapsed"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.IsCollapsedProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Ribbon.Ribbon.IsMinimized" />
        <altmember cref="E:System.Windows.Controls.Ribbon.Ribbon.Collapsed" />
        <altmember cref="E:System.Windows.Controls.Ribbon.Ribbon.Expanded" />
      </Docs>
    </Member>
    <Member MemberName="IsCollapsedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCollapsedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCollapsedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.IsCollapsedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCollapsedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCollapsedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsCollapsedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.IsCollapsedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.IsCollapsed" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpen">
      <MemberSignature Language="C#" Value="public bool IsDropDownOpen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDropDownOpen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpen" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDropDownOpen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDropDownOpen { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDropDownOpen : bool with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示開啟還是關閉 <see cref="T:System.Windows.Controls.Ribbon.RibbonTab" /> 的下拉部分。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.Ribbon.RibbonTab" /> 的下拉部分已開啟則為 <see langword="true" />，否則為 <see langword="false" />。 已註冊的預設值是 <see langword="false" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當<xref:System.Windows.Controls.Ribbon.Ribbon.IsMinimized%2A>屬性是`true`、 快速存取工具列、 應用程式功能表和索引標籤標頭都會顯示，但是內容會放在下拉式清單和預設不顯示。 當使用者選取的索引標籤標頭時，開啟下拉式索引標籤，並顯示其內容。 選取或取消選取索引標籤標頭切換<xref:System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpen%2A>屬性之間`true`和`false`。  
  
 如果<xref:System.Windows.Controls.Ribbon.Ribbon.IsMinimized%2A>屬性是`false`、<xref:System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpen%2A>屬性也是`false`。  
  
<a name="dependencyPropertyInfo_IsDropDownOpen"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpenProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Ribbon.Ribbon.IsMinimized" />
      </Docs>
    </Member>
    <Member MemberName="IsDropDownOpenProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDropDownOpenProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDropDownOpenProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpenProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDropDownOpenProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDropDownOpenProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDropDownOpenProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpenProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpen" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHostedInRibbonWindow">
      <MemberSignature Language="C#" Value="public bool IsHostedInRibbonWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHostedInRibbonWindow" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.IsHostedInRibbonWindow" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHostedInRibbonWindow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHostedInRibbonWindow { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHostedInRibbonWindow : bool" Usage="System.Windows.Controls.Ribbon.Ribbon.IsHostedInRibbonWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 目前是否裝載於 <see cref="T:System.Windows.Controls.Ribbon.RibbonWindow" /> 中。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 裝載於 <see cref="T:System.Windows.Controls.Ribbon.RibbonWindow" /> 中則為 <see langword="true" />，否則為 <see langword="false" />。 已註冊的預設值是 <see langword="false" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsHostedInRibbonWindow"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.IsHostedInRibbonWindowProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHostedInRibbonWindowProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHostedInRibbonWindowProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHostedInRibbonWindowProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.IsHostedInRibbonWindowProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHostedInRibbonWindowProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHostedInRibbonWindowProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHostedInRibbonWindowProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.IsHostedInRibbonWindowProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.IsHostedInRibbonWindow" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsItemItsOwnContainerOverride">
      <MemberSignature Language="C#" Value="protected override bool IsItemItsOwnContainerOverride (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool IsItemItsOwnContainerOverride(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.IsItemItsOwnContainerOverride(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function IsItemItsOwnContainerOverride (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool IsItemItsOwnContainerOverride(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.IsItemItsOwnContainerOverride : obj -&gt; bool" Usage="ribbon.IsItemItsOwnContainerOverride item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">要測試的項目。</param>
        <summary>傳回值，這個值表示指定的項目是否 (或是否有資格) 是其本身的容器。</summary>
        <returns>如果此項目為 <see cref="T:System.Windows.Controls.Ribbon.RibbonTab" /> 則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMinimized">
      <MemberSignature Language="C#" Value="public bool IsMinimized { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMinimized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.IsMinimized" />
      <MemberSignature Language="VB.NET" Value="Public Property IsMinimized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMinimized { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsMinimized : bool with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.IsMinimized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值表示 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 是否已最小化。</summary>
        <value>如果 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 已最小化則為 <see langword="true" />，否則為 <see langword="false" />。 已註冊的預設值是 <see langword="false" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用者可以最小化功能區上按一下滑鼠右鍵功能區選取**功能區最小化**從內容功能表。 當<xref:System.Windows.Controls.Ribbon.Ribbon.IsMinimized%2A>屬性是`true`、 快速存取工具列、 應用程式功能表和索引標籤標頭都會顯示，但是內容會放在下拉式清單和預設不顯示。 當使用者選取的索引標籤標頭時，開啟下拉式索引標籤，並顯示其內容。  
  
 如果<xref:System.Windows.Controls.Ribbon.Ribbon.IsMinimized%2A>屬性是`true`、 選取或取消選取索引標籤標頭切換<xref:System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpen%2A>屬性之間`true`和`false`。 如果<xref:System.Windows.Controls.Ribbon.Ribbon.IsMinimized%2A>屬性是`false`、<xref:System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpen%2A>屬性也是`false`。  
  
<a name="dependencyPropertyInfo_IsMinimized"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.IsMinimizedProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Ribbon.Ribbon.IsDropDownOpen" />
        <altmember cref="P:System.Windows.Controls.Ribbon.Ribbon.IsCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="IsMinimizedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMinimizedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMinimizedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.IsMinimizedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMinimizedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMinimizedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMinimizedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.IsMinimizedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.IsMinimized" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Controls.Ribbon.Ribbon.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得會逐一查看 <see cref="T:System.Collections.IEnumerator" /> 之子項目的 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" />。</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseOverBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush MouseOverBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush MouseOverBackground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.MouseOverBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property MouseOverBackground As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ MouseOverBackground { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MouseOverBackground : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.MouseOverBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項處於 MouseOver 狀態時繪製其背景。</summary>
        <value>筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項處於 MouseOver 狀態時繪製其背景。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_MouseOverBackground"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.MouseOverBackgroundProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseOverBackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MouseOverBackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MouseOverBackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.MouseOverBackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseOverBackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MouseOverBackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseOverBackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.MouseOverBackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.MouseOverBackground" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseOverBorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush MouseOverBorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush MouseOverBorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.MouseOverBorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property MouseOverBorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ MouseOverBorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MouseOverBorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.MouseOverBorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" />控制項處於 MouseOver 狀態時繪製其外邊界。</summary>
        <value>筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項處於 MouseOver 狀態時繪製其外邊界。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_MouseOverBorderBrush"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.MouseOverBorderBrushProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseOverBorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MouseOverBorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MouseOverBorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.MouseOverBorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseOverBorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MouseOverBorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseOverBorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.MouseOverBorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.MouseOverBorderBrush" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="ribbon.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在套用新的範本時，建置 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 的視覺化樹狀結構。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 每當應用程式程式碼或內部處理序 (例如重建配置傳遞) 呼叫 <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> 方法時，就會叫用此方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="ribbon.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>為這個控制項建立新的 <see cref="T:System.Windows.Automation.Peers.RibbonAutomationPeer" /> 物件。</summary>
        <returns>這個控制項的新自動對等物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemsChanged">
      <MemberSignature Language="C#" Value="protected override void OnItemsChanged (System.Collections.Specialized.NotifyCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnItemsChanged(class System.Collections.Specialized.NotifyCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnItemsChanged (e As NotifyCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnItemsChanged(System::Collections::Specialized::NotifyCollectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnItemsChanged : System.Collections.Specialized.NotifyCollectionChangedEventArgs -&gt; unit" Usage="ribbon.OnItemsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Collections.Specialized.NotifyCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件資料。</param>
        <summary>當 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 中的項目變更時，更新目前選取範圍並同步處理標題。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="ribbon.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件資料。</param>
        <summary>提供 <see cref="E:System.Windows.UIElement.KeyDown" /> 事件的類別處理。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="ribbon.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件資料。</param>
        <summary>提供 <see cref="E:System.Windows.UIElement.MouseDown" /> 事件的類別處理。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="ribbon.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件資料。</param>
        <summary>提供 <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> 事件的類別處理。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="ribbon.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件資料。</param>
        <summary>提供 <see cref="E:System.Windows.UIElement.MouseWheel" /> 事件的類別處理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當滑鼠指標位於轉動滑鼠滾輪<xref:System.Windows.Controls.Ribbon.Ribbon>導致<xref:System.Windows.Controls.Ribbon.Ribbon>索引標籤之間切換。  
  
 此實作會將標示<xref:System.Windows.UIElement.MouseWheel>事件，如藉由設定處理<xref:System.Windows.RoutedEventArgs.Handled%2A>屬性的事件資料至`true`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectionChanged (System.Windows.Controls.SelectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectionChanged(class System.Windows.Controls.SelectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectionChanged (e As SelectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectionChanged(System::Windows::Controls::SelectionChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnSelectionChanged : System.Windows.Controls.SelectionChangedEventArgs -&gt; unit" Usage="ribbon.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.SelectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">事件資料。</param>
        <summary>提供 <see cref="E:System.Windows.Controls.Primitives.Selector.SelectionChanged" /> 事件的類別處理。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會強制執行中的單一選取<xref:System.Windows.Controls.Ribbon.Ribbon>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareContainerForItemOverride">
      <MemberSignature Language="C#" Value="protected override void PrepareContainerForItemOverride (System.Windows.DependencyObject element, object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PrepareContainerForItemOverride(class System.Windows.DependencyObject element, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Ribbon.Ribbon.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PrepareContainerForItemOverride (element As DependencyObject, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PrepareContainerForItemOverride(System::Windows::DependencyObject ^ element, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="override this.PrepareContainerForItemOverride : System.Windows.DependencyObject * obj -&gt; unit" Usage="ribbon.PrepareContainerForItemOverride (element, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="element">用於顯示 <c>item</c> 的項目。</param>
        <param name="item">要在 <see cref="P:System.Windows.Controls.ItemsControl.Items" /> 中顯示的項目。</param>
        <summary>準備指定項目 (Element) 以顯示指定項目 (Item)。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PressedBackground">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush PressedBackground { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush PressedBackground" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.PressedBackground" />
      <MemberSignature Language="VB.NET" Value="Public Property PressedBackground As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ PressedBackground { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PressedBackground : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.PressedBackground" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項處於按下狀態時繪製其背景。</summary>
        <value>筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項處於 Pressed 狀態時繪製其背景。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PressedBackground"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.PressedBackgroundProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PressedBackgroundProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PressedBackgroundProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PressedBackgroundProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.PressedBackgroundProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PressedBackgroundProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PressedBackgroundProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PressedBackgroundProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.PressedBackgroundProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.PressedBackground" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PressedBorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush PressedBorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush PressedBorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.PressedBorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property PressedBorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ PressedBorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PressedBorderBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.PressedBorderBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" />控制項處於暗下狀態時繪製外邊界。</summary>
        <value>筆刷，這個筆刷用於在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項處於 Pressed 狀態時繪製其外邊界。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_PressedBorderBrush"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.PressedBorderBrushProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PressedBorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PressedBorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PressedBorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.PressedBorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PressedBorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PressedBorderBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PressedBorderBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.PressedBorderBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.PressedBorderBrush" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAccessToolBar">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar QuickAccessToolBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar QuickAccessToolBar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.QuickAccessToolBar" />
      <MemberSignature Language="VB.NET" Value="Public Property QuickAccessToolBar As RibbonQuickAccessToolBar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::Ribbon::RibbonQuickAccessToolBar ^ QuickAccessToolBar { System::Windows::Controls::Ribbon::RibbonQuickAccessToolBar ^ get(); void set(System::Windows::Controls::Ribbon::RibbonQuickAccessToolBar ^ value); };" />
      <MemberSignature Language="F#" Value="member this.QuickAccessToolBar : System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.QuickAccessToolBar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Windows.Controls.Ribbon.RibbonQuickAccessToolBar" />，這是此<see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 的邏輯子系。</summary>
        <value>快速存取工具列是此 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項的邏輯子系。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_QuichAccessToolBar"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.QuickAccessToolBarProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QuickAccessToolBarProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty QuickAccessToolBarProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty QuickAccessToolBarProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.QuickAccessToolBarProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QuickAccessToolBarProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ QuickAccessToolBarProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable QuickAccessToolBarProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.QuickAccessToolBarProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.QuickAccessToolBar" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAccessToolBarOnTop">
      <MemberSignature Language="C#" Value="public bool ShowQuickAccessToolBarOnTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowQuickAccessToolBarOnTop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.ShowQuickAccessToolBarOnTop" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowQuickAccessToolBarOnTop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowQuickAccessToolBarOnTop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowQuickAccessToolBarOnTop : bool with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.ShowQuickAccessToolBarOnTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指出是否在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" />上方顯示快速存取工具列。</summary>
        <value>如果快速存取工具列顯示在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 上方，則為 <see langword="true" />。如果快速存取工具列顯示在 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 下方，則為 <see langword="false" />。 已註冊的預設值是 <see langword="true" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ShowQuickAccessToolbarOnTop"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.ShowQuickAccessToolBarOnTopProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowQuickAccessToolBarOnTopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowQuickAccessToolBarOnTopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowQuickAccessToolBarOnTopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.ShowQuickAccessToolBarOnTopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowQuickAccessToolBarOnTopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowQuickAccessToolBarOnTopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowQuickAccessToolBarOnTopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.ShowQuickAccessToolBarOnTopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.ShowQuickAccessToolBarOnTop" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabHeaderStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style TabHeaderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style TabHeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.TabHeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property TabHeaderStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ TabHeaderStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TabHeaderStyle : System.Windows.Style with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.TabHeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當呈現索引標籤標題時所使用的樣式。</summary>
        <value>呈現索引標籤標題時所使用的樣式。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TabHeaderStyle"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.TabHeaderStyleProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabHeaderStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TabHeaderStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TabHeaderStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.TabHeaderStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TabHeaderStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TabHeaderStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TabHeaderStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.TabHeaderStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.TabHeaderStyle" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TabHeaderTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate TabHeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate TabHeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.TabHeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property TabHeaderTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ TabHeaderTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TabHeaderTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.TabHeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來顯示索引標籤標題的範本。</summary>
        <value>用於顯示索引標籤標題的範本。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TabHeaderTemplate"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.TabHeaderTemplateProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabHeaderTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TabHeaderTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TabHeaderTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.TabHeaderTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TabHeaderTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TabHeaderTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TabHeaderTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.TabHeaderTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.TabHeaderTemplate" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public object Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Title { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : obj with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定這個 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項的標題。</summary>
        <value>這個 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 控制項的標題。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您通常會設定<xref:System.Windows.Window.Title%2A>屬性<xref:System.Windows.Controls.Ribbon.RibbonWindow>而不是設定<xref:System.Windows.Controls.Ribbon.Ribbon.Title%2A?displayProperty=nameWithType>屬性。  
  
 <xref:System.Windows.Controls.Ribbon.Ribbon.Title%2A?displayProperty=nameWithType>如下所示的標題列<xref:System.Windows.Controls.Ribbon.RibbonWindow>如果<xref:System.Windows.Window.Title%2A?displayProperty=nameWithType>屬性<xref:System.Windows.Controls.Ribbon.RibbonWindow>是`null`。 如果<xref:System.Windows.Window.Title%2A?displayProperty=nameWithType>屬性不是`null`、<xref:System.Windows.Controls.Ribbon.RibbonWindow>標題會顯示而不是<xref:System.Windows.Controls.Ribbon.Ribbon.Title%2A?displayProperty=nameWithType>值。  
  
 如果<xref:System.Windows.Controls.Ribbon.Ribbon>裝載於<xref:System.Windows.Window>而不是<xref:System.Windows.Controls.Ribbon.RibbonWindow>、<xref:System.Windows.Controls.Ribbon.Ribbon.Title%2A?displayProperty=nameWithType>旁邊快速存取工具列中，如下所示<xref:System.Windows.Window.Title%2A?displayProperty=nameWithType>。  
  
<a name="dependencyPropertyInfo_Title"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.TitleProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Ribbon.Ribbon.IsHostedInRibbonWindow" />
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.Title" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate TitleTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate TitleTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.TitleTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ TitleTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.TitleTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來顯示 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 標題的範本。</summary>
        <value>用於顯示 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" /> 標題的範本。 已註冊的預設值是 <see langword="null" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TitleTemplate"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.TitleTemplateProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.TitleTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleTemplateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleTemplateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleTemplateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.TitleTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.TitleTemplate" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowIconVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility WindowIconVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility WindowIconVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Ribbon.Ribbon.WindowIconVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowIconVisibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility WindowIconVisibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.WindowIconVisibility : System.Windows.Visibility with get, set" Usage="System.Windows.Controls.Ribbon.Ribbon.WindowIconVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定包含此<see cref="T:System.Windows.Visibility" /> 之<see cref="T:System.Windows.Controls.Ribbon.RibbonWindow" /> 的圖示的 <see cref="T:System.Windows.Controls.Ribbon.Ribbon" />。</summary>
        <value>一個列舉值，這個值會指定圖示的可見度。 已註冊的預設值是 <see cref="F:System.Windows.Visibility.Visible" />。 如需有關什麼可能會影響該值的詳細資訊，請參閱 [相依性屬性的值 Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_WindowIconVisibility"></a>   
## <a name="dependency-property-information"></a>相依性屬性資訊  
  
|||  
|-|-|  
|識別項欄位|<xref:System.Windows.Controls.Ribbon.Ribbon.WindowIconVisibilityProperty>|  
|中繼資料屬性設定為 `true`|無|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowIconVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowIconVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowIconVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Ribbon.Ribbon.WindowIconVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowIconVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowIconVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowIconVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Ribbon.Ribbon.WindowIconVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Controls.Ribbon</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>識別 <see cref="P:System.Windows.Controls.Ribbon.Ribbon.WindowIconVisibility" /> 相依性屬性。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>