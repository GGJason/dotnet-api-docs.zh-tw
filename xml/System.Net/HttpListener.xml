<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpListener.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e05b5b2-d481-4262-b7b7-7de7ac2afe0782573ef12ea9f2297019f9e271a52a13621c873d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82573ef12ea9f2297019f9e271a52a13621c873d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/07/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListener">
          <source>Provides a simple, programmatically controlled HTTP protocol listener.</source>
          <target state="translated">提供簡單、以程式設計方式控制的 HTTP 通訊協定接聽程式。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Net.HttpListener">
          <source>This class cannot be inherited.</source>
          <target state="translated">這個類別無法被繼承。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>類別，您可以建立簡單的 HTTP 通訊協定接聽程式以回應 HTTP 要求。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The listener is active for the lifetime of the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object and runs within your application with its permissions.</source>
          <target state="translated">接聽程式均可使用的存留期<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>物件，並以其權限的應用程式中執行。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To use <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, create a new instance of the class using the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> constructor and use the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <ph id="ph4">&lt;xref:System.Net.HttpListener&gt;</ph> should process.</source>
          <target state="translated">若要使用<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>，建立使用類別的新執行個體<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>建構函式和使用<ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>屬性來存取保存字串，其中指定的統一資源識別元 (URI) 的集合做為前置詞<ph id="ph4">&lt;xref:System.Net.HttpListener&gt;</ph>應該處理。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</source>
          <target state="translated">URI 的前置詞字串是由配置 （http 或 https）、 主機、 選用連接埠和選擇性路徑所組成。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>An example of a complete prefix string is <bpt id="p1">*</bpt><ph id="ph1">http://www.contoso.com:8080/customerData/</ph><ept id="p1">*</ept>.</source>
          <target state="translated">完整的前置詞字串的範例是<bpt id="p1">*</bpt> <ph id="ph1">http://www.contoso.com:8080/customerData/</ph> <ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Prefixes must end in a forward slash ("/").</source>
          <target state="translated">前置詞必須結尾斜線 （"/"）。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object with the prefix that most closely matches a requested URI responds to the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>回應要求最符合要求的 URI 前置詞的物件。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Multiple <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> objects cannot add the same prefix; a <ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph> exception is thrown if a <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> adds a prefix that is already in use.</source>
          <target state="translated">多個<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>物件無法加入相同的前置詞;<ph id="ph2">&lt;xref:System.ComponentModel.Win32Exception&gt;</ph>擲回例外狀況如果<ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph>新增已經在前置詞使用。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>When a port is specified, the host element can be replaced with "<ph id="ph1">\*</ph>" to indicate that the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> accepts requests sent to the port if the requested URI does not match any other prefix.</source>
          <target state="translated">指定連接埠時，裝載項目都可以使用取代"<ph id="ph1">\*</ph>"表示<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>接受要求傳送至連接埠，如果要求的 URI 不符合任何前置詞。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the prefix is <bpt id="p1">*</bpt>http://<ph id="ph2">\*</ph>:8080/<ept id="p1">*</ept>.</source>
          <target state="translated">比方說，若要接收的所有要求傳送至連接埠 8080 當要求的 URI 不由處理任何<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>，前置詞是<bpt id="p1">*</bpt>http://<ph id="ph2">\*</ph>: 8080 /<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Similarly, to specify that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> accepts all requests sent to a port, replace the host element with the "+" character.</source>
          <target state="translated">同樣地，以指定<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>接受連接埠，傳送的所有要求的主機項目取代為"+"字元。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, <bpt id="p1">*</bpt><ph id="ph1">https://+:8080</ph><ept id="p1">*</ept>.</source>
          <target state="translated">For example, <bpt id="p1">*</bpt><ph id="ph1">https://+:8080</ph><ept id="p1">*</ept>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The "<ph id="ph1">\*</ph>" and "+" characters can be present in prefixes that include paths.</source>
          <target state="translated">「<ph id="ph1">\*</ph>"和"+"字元可出現在 包含路徑的前置詞。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">.NET Core 2.0 或 Windows 10 上的.NET Framework 4.6 起，萬用字元子網域中支援所管理的 URI 前置詞<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To specify a wildcard subdomain, use the "<ph id="ph1">\*</ph>" character as part of the hostname in a URI prefix.</source>
          <target state="translated">若要指定萬用字元子網域，請使用"<ph id="ph1">\*</ph>"字元的 URI 前置詞中的主機名稱的一部分。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For example, <bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>.foo.com/<ept id="p1">*</ept>.</source>
          <target state="translated">例如， <bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>.foo.com/<ept id="p1">*</ept>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Pass this as the argument to the <ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection.Add%2A&gt;</ph> method.</source>
          <target state="translated">將此變數傳遞做為引數<ph id="ph1">&lt;xref:System.Net.HttpListenerPrefixCollection.Add%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>.</source>
          <target state="translated">這適用於.NET Core 2.0 或 Windows 10; 上的.NET Framework 4.6 為準，在舊版中，這會產生<ph id="ph1">&lt;xref:System.Net.HttpListenerException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Top-level wildcard bindings (<bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>:8080/<ept id="p1">*</ept> and <bpt id="p2">*</bpt><ph id="ph2">http://+:8080</ph><ept id="p2">*</ept>) should <bpt id="p3">**</bpt>not<ept id="p3">**</ept> be used.</source>
          <target state="translated">最上層的萬用字元繫結 (<bpt id="p1">*</bpt>http://<ph id="ph1">\*</ph>: 8080 /<ept id="p1">*</ept>和<bpt id="p2">*</bpt> <ph id="ph2">http://+:8080</ph> <ept id="p2">*</ept>) 應該<bpt id="p3">**</bpt>不<ept id="p3">**</ept>使用。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Top-level wildcard bindings can open up your app to security vulnerabilities.</source>
          <target state="translated">最上層萬用字元繫結可能暴露您的應用程式安全性弱點。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>This applies to both strong and weak wildcards.</source>
          <target state="translated">這對強式與弱式萬用字元皆適用。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Use explicit host names rather than wildcards.</source>
          <target state="translated">請使用明確主機名稱，而非萬用字元。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Subdomain wildcard binding (for example, <ph id="ph1">`*.mysub.com`</ph>) doesn't have this security risk if you control the entire parent domain (as opposed to <ph id="ph2">`*.com`</ph>, which is vulnerable).</source>
          <target state="translated">若您擁有整個父網域 (與具弱點的 <ph id="ph2">`*.com`</ph> 相對) 的控制權，則子網域萬用字元繫結 (例如 <ph id="ph1">`*.mysub.com`</ph>) 就沒有此安全性風險。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>See <bpt id="p1">[</bpt>rfc7230 section-5.4<ept id="p1">](https://tools.ietf.org/html/rfc7230#section-5.4)</ept> for more information.</source>
          <target state="translated">如需詳細資訊，請參閱 <bpt id="p1">[</bpt>rfc7230 5.4 節<ept id="p1">](https://tools.ietf.org/html/rfc7230#section-5.4)</ept>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>To begin listening for requests from clients, add the URI prefixes to the collection and call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">若要開始接聽來自用戶端的要求，將 URI 前置詞加入至集合並呼叫<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> offers both synchronous and asynchronous models for processing client requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> 提供同步和非同步模式，處理用戶端要求。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Requests and their associated responses are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method or its asynchronous counterparts, the <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods.</source>
          <target state="translated">要求和其相關聯的回應則使用存取<ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph>所傳回物件<ph id="ph2">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>方法或其非同步對應項目<ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>和<ph id="ph4">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</source>
          <target state="translated">如果您的應用程式應該要封鎖等候用戶端要求時，如果您想要一次處理一個要求適合同步模型。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Using the synchronous model, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method, which waits for a client to send a request.</source>
          <target state="translated">使用同步的模型時，呼叫<ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>方法，等待用戶端傳送要求。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The method returns an <ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object to you for processing when one occurs.</source>
          <target state="translated">方法會傳回<ph id="ph1">&lt;xref:System.Net.HttpListenerContext&gt;</ph>物件要處理時，就會發生。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</source>
          <target state="translated">在更複雜的非同步模型中，您的應用程式不會封鎖同時等候要求和每個要求在它自己的執行緒中處理。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method to specify an application-defined method to be called for each incoming request.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>方法，以指定應用程式定義要呼叫的方法為每個連入要求。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Within that method, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method to obtain the request, process it, and respond.</source>
          <target state="translated">該方法內呼叫<ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>方法來取得要求、 處理它，並回應。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>In either model, incoming requests are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph> property and are represented by <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph> objects.</source>
          <target state="translated">在這兩種模式中，連入要求會使用存取<ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType&gt;</ph>屬性且由<ph id="ph2">&lt;xref:System.Net.HttpListenerRequest&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Similarly, responses are accessed using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType&gt;</ph> property and are represented by <ph id="ph2">&lt;xref:System.Net.HttpListenerResponse&gt;</ph> objects.</source>
          <target state="translated">同樣地，使用存取回應<ph id="ph1">&lt;xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType&gt;</ph>屬性且由<ph id="ph2">&lt;xref:System.Net.HttpListenerResponse&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>These objects share some functionality with the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpWebResponse&gt;</ph> objects, but the latter objects cannot be used in conjunction with <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> because they implement client, not server, behaviors.</source>
          <target state="translated">這些物件共用的某些功能<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.HttpWebResponse&gt;</ph>物件，而第二個物件不能搭配<ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph>因為它們實作用戶端、 不伺服器、 行為。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>An <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> can require client authentication.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>可以要求用戶端驗證。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</source>
          <target state="translated">您可以指定要用於驗證特定配置，或者您可以指定委派，會決定要使用的配置。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You must require some form of authentication to obtain information about the client's identity.</source>
          <target state="translated">您必須要求某種形式的驗證，以取得用戶端身分識別的相關資訊。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>For additional information, see the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> properties.</source>
          <target state="translated">如需詳細資訊，請參閱<ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A&gt;</ph>， <ph id="ph2">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>，和<ph id="ph3">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>If you create an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> using https, you must select a Server Certificate for that listener.</source>
          <target state="translated">如果您建立<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>使用 https，您必須選取伺服器憑證該接聽項。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> query of this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> will fail with an unexpected close of the connection.</source>
          <target state="translated">否則，<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>這個查詢<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>會失敗，意外的關閉的連接。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</source>
          <target state="translated">您可以使用網路殼層 (netsh.exe)，來設定伺服器憑證和其他接聽程式選項。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>See <bpt id="p1">[</bpt>Network Shell (Netsh)<ept id="p1">](/windows-server/networking/technologies/netsh/netsh)</ept> for more details.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>網路殼層 (Netsh)<ept id="p1">](/windows-server/networking/technologies/netsh/netsh)</ept>如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The executable began shipping with Windows Server 2008 and Windows Vista.</source>
          <target state="translated">可執行檔開始隨附於 Windows Server 2008 和 Windows Vista。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>If you specify multiple authentication schemes for the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, the listener will challenge clients in the following order: <ph id="ph2">`Negotiate`</ph>, <ph id="ph3">`NTLM`</ph>, <ph id="ph4">`Digest`</ph>, and then <ph id="ph5">`Basic`</ph>.</source>
          <target state="translated">如果您指定多個驗證配置<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>，接聽程式是以下列順序的用戶端的挑戰： <ph id="ph2">`Negotiate`</ph>， <ph id="ph3">`NTLM`</ph>， <ph id="ph4">`Digest`</ph>，然後<ph id="ph5">`Basic`</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.HttpListener">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>Before using the instance returned by this constructor, you must invoke its <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">之前使用此建構函式所傳回的執行個體，您必須叫用其<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> constructor to create a new <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>建構函式來建立新<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>For the complete example, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class topic.</source>
          <target state="translated">完整的範例，請參閱<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>類別主題。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>This class cannot be used on the current operating system.</source>
          <target state="translated">這個類別不可用於目前作業系統。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.#ctor">
          <source>Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</source>
          <target state="translated">需要 Windows Server 2003 或 Windows XP SP2，才能使用這個類別的執行個體。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>Note: This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">注意： 這個成員會輸出追蹤資訊在應用程式中啟用網路追蹤時。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>網路追蹤.NET Framework 中<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Abort">
          <source>Shuts down the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object immediately, discarding all currently queued requests.</source>
          <target state="translated">立即關閉 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 物件，並捨棄所有目前排入佇列的要求。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>This method disposes of all resources held by this listener.</source>
          <target state="translated">這個方法會處置此接聽程式所持有的所有資源。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>Any pending requests are unable to complete.</source>
          <target state="translated">任何暫止要求都無法完成。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>After calling this method, you will receive an <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> if you attempt to use this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>.</source>
          <target state="translated">之後呼叫這個方法，您會收到<ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph>如果您嘗試使用這個<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">下列程式碼範例示範如何呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Abort">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>網路追蹤.NET Framework 中<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>Gets or sets the scheme used to authenticate clients.</source>
          <target state="translated">取得或設定用來驗證用戶端的配置。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>A bitwise combination of <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemes" /&gt;</ph> enumeration values that indicates how clients are to be authenticated.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemes" /&gt;</ph> 列舉值的位元組合，表示用戶端的驗證方式。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The default value is <ph id="ph1">&lt;see cref="F:System.Net.AuthenticationSchemes.Anonymous" /&gt;</ph>.</source>
          <target state="translated">預設值是 <ph id="ph1">&lt;see cref="F:System.Net.AuthenticationSchemes.Anonymous" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> uses the specified scheme to authenticate all incoming requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>使用指定的配置來驗證所有連入要求。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods return an incoming client request only if the <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> successfully authenticates the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>方法才會傳回傳入的用戶端要求<ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph>順利通過驗證的要求。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>You can interrogate the identity of a successfully authenticated client by using the <ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">您可以使用查閱成功驗證的用戶端的身分識別<ph id="ph1">&lt;xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>If you want an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostName%2A&gt;</ph> property), you must implement a method that chooses the authentication scheme.</source>
          <target state="translated">如果您想<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>物件以使用不同的驗證機制會根據所接收的要求特性 (例如，要求的<ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostName%2A&gt;</ph>屬性)，您必須實作選擇的方法驗證配置。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>For instructions about how to do this, see the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph> property documentation.</source>
          <target state="translated">如需有關如何執行這項操作的指示，請參閱<ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A&gt;</ph>屬性文件。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>To set this property to enable Digest, NTLM, or Negotiate requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</source>
          <target state="translated">若要設定這個屬性，以啟用 Digest，NTLM 或交涉需要<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>， <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property to specify an authentication scheme.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>屬性來指定驗證配置。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemes">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>Gets or sets the delegate called to determine the protocol used to authenticate clients.</source>
          <target state="translated">取得或設定委派，呼叫這個委派可決定用來驗證用戶端的通訊協定。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemeSelector" /&gt;</ph> delegate that invokes the method used to select an authentication protocol.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.AuthenticationSchemeSelector" /&gt;</ph> 委派，叫用用來選取驗證通訊協定的方法。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">預設值是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If you want the same authentication protocol to be used for all requests handled by a particular instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, you do not need to set this property.</source>
          <target state="translated">如果您想要用於特定的執行個體所處理的所有要求相同的驗證通訊協定<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>，您不需要設定此屬性。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>To specify a protocol to be used for all client requests, use the <ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph> property.</source>
          <target state="translated">若要指定要用於所有用戶端要求的通訊協定，使用<ph id="ph1">&lt;xref:System.Net.HttpListener.AuthenticationSchemes%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If the client has not specified authentication information in its headers, the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</source>
          <target state="translated">如果用戶端沒有在其標頭，指定驗證資訊<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>呼叫指定的每個未驗證的傳入要求，來判斷，如果有的話，要使用通訊協定來驗證用戶端的委派。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> methods return an incoming request only if the <ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph> successfully authenticated the request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>方法會傳回傳入的要求才<ph id="ph3">&lt;xref:System.Net.HttpListener&gt;</ph>成功驗證要求。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>If a request cannot be authenticated, the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> automatically sends back a 401 response.</source>
          <target state="translated">如果無法驗證要求，<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>自動傳送回去 401 回應。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>You can get the identity of a successfully authenticated client using the <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">您可以取得已成功驗證用戶端使用的身分識別<ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostAddress%2A&gt;</ph> property).</source>
          <target state="translated">委派的驗證通訊協定的應用程式專屬方法來選擇適合您想要的執行個體<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>使用不同的驗證通訊協定會根據它所收到 （要求的特性例如，要求的<ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.Url%2A&gt;</ph>或<ph id="ph3">&lt;xref:System.Net.HttpListenerRequest.UserHostAddress%2A&gt;</ph>屬性)。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>To set this property to enable Digest, NTLM, or Negotiate requires the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>.</source>
          <target state="translated">若要設定這個屬性，以啟用 Digest，NTLM 或交涉需要<ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph>， <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The following code example sets the value of this property.</source>
          <target state="translated">下列程式碼範例會設定這個屬性的值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>The following code example provides an implementation of a method invoked by an <ph id="ph1">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph> delegate.</source>
          <target state="translated">下列程式碼範例提供叫用方法的實作<ph id="ph1">&lt;xref:System.Net.AuthenticationSchemeSelector&gt;</ph>委派。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when a client request is available.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> 委派，有用戶端要求時，它會參考要叫用的方法。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the operation.</source>
          <target state="translated">使用者定義物件，包含作業的相關資訊。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation completes.</source>
          <target state="translated">作業完成時，這個物件會傳遞給「回呼」<bpt id="p1">&lt;c&gt;</bpt><ept id="p1">&lt;/c&gt;</ept>委派。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Begins asynchronously retrieving an incoming request.</source>
          <target state="translated">開始非同步擷取傳入要求。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that indicates the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件，表示非同步作業的狀態。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method begins an asynchronous (non-blocking) call to receive incoming client requests.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>方法開始的非同步 （非封鎖） 呼叫接收內送的用戶端要求。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">之前呼叫這個方法，您必須呼叫<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>方法並加入至少一個統一資源識別元 (URI) 前置詞加 URI 字串，以接聽<ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>傳回<ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The asynchronous operation must be completed by calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method.</source>
          <target state="translated">非同步作業必須完成呼叫<ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`callback`</ph> delegate.</source>
          <target state="translated">一般而言，方法由叫用<ph id="ph1">`callback`</ph>委派。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This method does not block while the operation completes.</source>
          <target state="translated">在作業完成時，這個方法不會封鎖。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>To get an incoming request and block until the operation completes, call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> method.</source>
          <target state="translated">若要取得連入要求和區塊的作業完成之前，呼叫<ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method to specify a callback method that will handle incoming client requests.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>方法，以指定將會處理內送的用戶端要求的回呼方法。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>The following code example implements a callback method.</source>
          <target state="translated">下列程式碼範例會實作回呼方法。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>A Win32 function call failed.</source>
          <target state="translated">Win32 函式呼叫失敗。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">請檢查例外狀況的 <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> 屬性，以判斷造成例外狀況的原因。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object has not been started or is currently stopped.</source>
          <target state="translated">這個物件尚未啟動或目前已停止。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This object is closed.</source>
          <target state="translated">這個物件已經關閉。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>網路追蹤.NET Framework 中<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Close">
          <source>Shuts down the <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>.</source>
          <target state="translated">關閉 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>After calling this method, you can no longer use the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object.</source>
          <target state="translated">之後呼叫這個方法，您無法再使用<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>To temporarily pause an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method.</source>
          <target state="translated">若要暫時暫停<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>物件，請使用<ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>This method shut downs the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object without processing queued requests.</source>
          <target state="translated">這個方法關閉清單<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>物件，而不處理要求排入佇列。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>Any pending requests are unable to complete.</source>
          <target state="translated">任何暫止要求都無法完成。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">下列程式碼範例示範如何呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>網路追蹤.NET Framework 中<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</source>
          <target state="translated">取得由已註冊前置詞所決定之服務提供者名稱 (SPN) 的預設清單。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /&gt;</ph> that contains a list of SPNs.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /&gt;</ph>，包含 SPN 清單。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph>屬性搭配整合式 Windows 驗證以提供延伸的保護。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The list of SPNs is initialized from the <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property when accessed and cleared when new prefixes are added to the <ph id="ph2">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">Spn 的清單初始化自<ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>屬性時存取並清除 加入新的前置詞時<ph id="ph2">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is used if an application doesn't set the <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A&gt;</ph> property on its extended protection policy.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph>屬性使用應用程式不會設定<ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A&gt;</ph>其延伸的保護原則上的屬性。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&gt;</ph> that is retrieved with the <ph id="ph2">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property is built from the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property according to the following rules:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection&gt;</ph> ，會擷取與<ph id="ph2">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph>屬性從建置<ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>屬性根據下列規則：</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "<ph id="ph1">\*</ph>" but restricted to a specific local interface), the following SPN is added:</source>
          <target state="translated">如果主機名稱為"+""*"，或 IPv4 或 IPv6 常值 (相當於"<ph id="ph1">\*</ph>"但限制為特定的本機介面)，加入下列的 SPN:</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the fully qualified domain name of the computer.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> 加上電腦的完整的網域名稱。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>).</source>
          <target state="translated">如果主機名稱不包含句點 （沒有網域或子網域），嘗試使用 DNS 完整網域名稱解析 (使用相同的行為<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the fully-qualified domain name can be resolved, the following SPNs are added:</source>
          <target state="translated">如果可以解析的完整網域名稱，則會加入下列的 Spn:</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname (the short name).</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> 加上的主機名稱 （簡短名稱）。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the fully qualified domain name for the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> 加上主機名稱的完整的網域名稱。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</source>
          <target state="translated">如果主機名稱包含不點 （沒有網域或子網域），而無法解析完整網域名稱，則會加入下列的 SPN:</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> 加上主機名稱。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If the hostname contains dots (domains or subdomains), the following SPN is added:</source>
          <target state="translated">如果主機名稱包含句點 （網域或子網域），則會加入下列的 SPN:</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source><ph id="ph1">`"HTTP/"`</ph> plus the hostname.</source>
          <target state="translated"><ph id="ph1">`"HTTP/"`</ph> 加上主機名稱。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.DefaultServiceNames%2A&gt;</ph>屬性可以由應用程式用來檢閱清單，如果未不提供任何自訂的清單會用於驗證的預設 spn。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>If other SPNs are needed, an application can add them using one of the <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A&gt;</ph> methods.</source>
          <target state="translated">如需其他 Spn，應用程式可以將它們使用其中一種<ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</source>
          <target state="translated">使用延伸的保護原則決策依據要求的 URL，因為這可能會被欺騙時，它並不安全。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.DefaultServiceNames">
          <source>Rather, applications should rely on the <ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph> properties to make such policy decisions.</source>
          <target state="translated">相反地，應用程式應該會仰賴<ph id="ph1">&lt;xref:System.Net.HttpListenerRequest.LocalEndPoint%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A&gt;</ph>屬性，使這類原則決策。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that was obtained when the asynchronous operation was started.</source>
          <target state="translated">啟動非同步作業時所取得的 <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>Completes an asynchronous operation to retrieve an incoming client request.</source>
          <target state="translated">完成擷取傳入用戶端要求的非同步作業。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents the client request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> 物件，代表用戶端要求。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <ph id="ph2">&lt;xref:System.Net.HttpListenerContext&gt;</ph> object that contains an incoming client request and its associated response.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>呼叫方法時，通常出現在應用程式定義的回呼方法的委派中，以取得所叫用<ph id="ph2">&lt;xref:System.Net.HttpListenerContext&gt;</ph>物件，包含傳入的用戶端要求和其相關聯的回應。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This method completes an operation previously started by calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">這個方法完成作業，藉由呼叫先前已啟動<ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>If the operation has not completed, this method blocks until it does.</source>
          <target state="translated">如果作業尚未完成，這個方法會封鎖，直到它執行。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>Because calling the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method requires the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object, this object is typically passed into a callback method by using the state object passed into the <ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">因為呼叫<ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>方法需要<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>物件，這個物件通常會傳遞至回呼方法的使用狀態物件傳遞至<ph id="ph3">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>You can obtain this state object by using the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph> property of the <ph id="ph2">`asyncResult`</ph> object.</source>
          <target state="translated">您可以使用，以取得此狀態物件<ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A&gt;</ph>屬性<ph id="ph2">`asyncResult`</ph>物件。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></source>
          <target state="translated">如需使用非同步程式設計模型的詳細資訊，請參閱<bpt id="p1">[</bpt>非同步呼叫同步方法<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept></target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The following code example shows the implementation of a callback method that calls the <ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph> method.</source>
          <target state="translated">下列程式碼範例示範呼叫的回呼方法的實作<ph id="ph1">&lt;xref:System.Net.HttpListener.EndGetContext%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not obtained by calling the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">未呼叫 <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /&gt;</ph> 方法，取得 <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /&gt;</ph> method was already called for the specified <ph id="ph2">&lt;paramref name="asyncResult" /&gt;</ph> object.</source>
          <target state="translated">已針對指定的 <ph id="ph2">&lt;paramref name="asyncResult" /&gt;</ph> 物件，呼叫 <ph id="ph1">&lt;see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This object is closed.</source>
          <target state="translated">這個物件已經關閉。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>網路追蹤.NET Framework 中<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>Get or set the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> to use for extended protection for a session.</source>
          <target state="translated">取得或設定工作階段之延伸保護所使用的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that specifies the policy to use for extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>，指定延伸保護所使用的原則。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph>屬性搭配整合式 Windows 驗證以提供延伸的保護。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property allows the configuration of the extended protection policy for the whole <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph>屬性所允許的延伸的保護原則，為整個組態<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>工作階段。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> property allows the configuration of the extended protection policy for each individual request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph>屬性所允許的每個要求的延伸的保護原則設定。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> property must be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> 屬性必須為 <ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>執行個體直接從自己的 TLS 工作階段取得通道繫結權杖 (CBT) 有一個。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property, but the <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> property was not <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">嘗試設定 <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> 屬性，但 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> 屬性不是 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">已嘗試將 <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> 屬性設定為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> method was already called.</source>
          <target state="translated">已嘗試於 <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /&gt;</ph> 方法叫用後，再設定 <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>This object is closed.</source>
          <target state="translated">這個物件已經關閉。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionPolicy">
          <source>The <ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /&gt;</ph> property was set to <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph> on a platform that does not support extended protection.</source>
          <target state="translated">在不支援延伸保護的平台上，<ph id="ph1">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /&gt;</ph> 屬性設定為 <ph id="ph2">&lt;see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>Get or set the delegate called to determine the <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> to use for each request.</source>
          <target state="translated">取得或設定委派，呼叫這個委派可決定每個要求所使用的 <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>A <ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph> that specifies the policy to use for extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /&gt;</ph>，指定延伸保護所使用的原則。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property is used with integrated Windows authentication to provide extended protection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph>屬性搭配整合式 Windows 驗證以提供延伸的保護。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph> property allows the configuration of the extended protection policy for the whole <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> session.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A&gt;</ph>屬性所允許的延伸的保護原則，為整個組態<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>工作階段。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph> property allows the configuration of the extended protection policy per individual request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A&gt;</ph>屬性所允許的每個個別要求的延伸的保護原則設定。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> property must be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A&gt;</ph> 屬性必須為 <ph id="ph2">`null`</ph>。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>執行個體直接從自己的 TLS 工作階段取得通道繫結權杖 (CBT) 有一個。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>For each request, the delegate can choose the settings that the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance will use to provide extended protection.</source>
          <target state="translated">針對每個要求中，委派可以選擇的設定，<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>執行個體會使用提供延伸的保護。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>If a delegate returns <ph id="ph1">`null`</ph> for this property, this represents a <ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph> which the <ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>.</source>
          <target state="translated">如果委派傳回<ph id="ph1">`null`</ph>對於這個屬性，這代表<ph id="ph2">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy&gt;</ph>其中<ph id="ph3">&lt;xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A&gt;</ph>屬性設定為<ph id="ph4">&lt;xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property, but the <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> property must be <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">已嘗試設定 <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> 屬性，但 <ph id="ph2">&lt;see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /&gt;</ph> 屬性必須為 <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">已嘗試將 <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> 屬性設定為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property after the <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> method was already called.</source>
          <target state="translated">已嘗試於 <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> 方法叫用後，再設定 <ph id="ph2">&lt;see cref="M:System.Net.HttpListener.Start" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>This object is closed.</source>
          <target state="translated">這個物件已經關閉。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate">
          <source>An attempt was made to set the <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> property on a platform that does not support extended protection.</source>
          <target state="translated">已在不支援擴充保護的平台上嘗試設定 <ph id="ph1">&lt;see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>Waits for an incoming request and returns when one is received.</source>
          <target state="translated">等候傳入要求，並在收到要求時傳回。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents a client request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> 物件，代表用戶端要求。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one URI prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">之前呼叫這個方法，您必須呼叫<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>方法並加入至少一個接聽所加入的 URI 字串的 URI 前置詞<ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>傳回<ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">前置詞的詳細說明，請參閱<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>類別概觀。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>This method blocks while waiting for an incoming request.</source>
          <target state="translated">這個方法會封鎖等候傳入要求。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">如果您想要進行處理以非同步方式 （在個別執行緒上） 中，以供您的應用程式不會封鎖連入要求，請使用<ph id="ph1">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>The following code example demonstrates calling this method.</source>
          <target state="translated">下列程式碼範例示範如何呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>A Win32 function call failed.</source>
          <target state="translated">Win32 函式呼叫失敗。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">請檢查例外狀況的 <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> 屬性，以判斷造成例外狀況的原因。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>This object has not been started or is currently stopped.</source>
          <target state="translated">這個物件尚未啟動或目前已停止。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 沒有任何要回應的統一資源識別元 (URI) 前置詞。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContext">
          <source>This object is closed.</source>
          <target state="translated">這個物件已經關閉。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContext">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>網路追蹤.NET Framework 中<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Waits for an incoming request as an asynchronous operation.</source>
          <target state="translated">以非同步作業的方式，等候傳入要求。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">工作物件，表示非同步作業。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> property on the task object returns an <ph id="ph2">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> object that represents a client request.</source>
          <target state="translated">工作物件上的 <ph id="ph1">&lt;see cref="P:System.Threading.Tasks.Task`1.Result" /&gt;</ph> 屬性會傳回代表用戶端要求的 <ph id="ph2">&lt;see cref="T:System.Net.HttpListenerContext" /&gt;</ph> 物件。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>This operation will not block.</source>
          <target state="translated">這項作業不會封鎖。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete when the incoming request has been received.</source>
          <target state="translated">傳回<ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>物件將會完成時收到內送要求。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>Before calling this method, you must call the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method and add at least one URI prefix to listen for by adding the URI strings to the <ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property.</source>
          <target state="translated">之前呼叫這個方法，您必須呼叫<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>方法並加入至少一個接聽所加入的 URI 字串的 URI 前置詞<ph id="ph2">&lt;xref:System.Net.HttpListenerPrefixCollection&gt;</ph>傳回<ph id="ph3">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.GetContextAsync">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">前置詞的詳細說明，請參閱<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>類別概觀。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether your application receives exceptions that occur when an <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> sends the response to the client.</source>
          <target state="translated">取得或設定 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，指定您的應用程式是否要接收在 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 傳送回應至用戶端時所發生的例外狀況。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> should not return exceptions that occur when sending the response to the client; otherwise <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果這個 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 不應傳回在傳送回應至用戶端時所發生的例外狀況，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值是 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>Set this property to <ph id="ph1">`true`</ph> if your application does not require that a response is successfully sent to each client.</source>
          <target state="translated">將此屬性設定為<ph id="ph1">`true`</ph>如果您的應用程式不需要回應，已成功傳送給每個用戶端。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>The following code example demonstrates setting this property.</source>
          <target state="translated">下列程式碼範例將示範如何設定這個屬性。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IgnoreWriteExceptions">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IsListening">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> has been started.</source>
          <target state="translated">取得值，表示是否已啟動 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> was started; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果已啟動 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source>To start an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method.</source>
          <target state="translated">若要啟動<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>，呼叫<ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsListening">
          <source>The following code example demonstrates using this property to determine the listening state of an instance.</source>
          <target state="translated">下列程式碼範例示範如何使用這個屬性來判斷執行個體的接聽狀態。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.IsSupported">
          <source>Gets a value that indicates whether <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> can be used with the current operating system.</source>
          <target state="translated">取得值，表示 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 是否可以用於目前的作業系統。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> is supported; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果支援 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph>，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source>This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</source>
          <target state="translated">這個類別是只能在執行 Windows XP SP2 或 Windows Server 2003 作業系統的電腦上使用。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.IsSupported">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.HttpListener.IsSupported%2A&gt;</ph> property to detect whether an <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> object can be used with the current operating system.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Net.HttpListener.IsSupported%2A&gt;</ph>屬性來偵測是否<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>物件可以用與目前的作業系統。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Prefixes">
          <source>Gets the Uniform Resource Identifier (URI) prefixes handled by this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">取得這個 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 物件所處理的統一資源識別項 (URI) 前置詞。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph> that contains the URI prefixes that this <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object is configured to handle.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.HttpListenerPrefixCollection" /&gt;</ph>，包含這個 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 物件設定要處理的 URI 前置詞。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>The prefixes are in canonical form.</source>
          <target state="translated">前置詞會採用標準格式。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>For a detailed description of prefixes, see the <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> class overview.</source>
          <target state="translated">前置詞的詳細說明，請參閱<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>類別概觀。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Prefixes">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph> property to obtain and print the URI prefixes that are handled.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Net.HttpListener.Prefixes%2A&gt;</ph>屬性來取得和列印處理的 URI 前置詞。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Prefixes">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Realm">
          <source>Gets or sets the realm, or resource partition, associated with this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">取得或設定與這個 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 物件關聯的領域 (或資源分割)。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value that contains the name of the realm associated with the <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> 值，包含與 <ph id="ph2">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 物件關聯的領域名稱。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</source>
          <target state="translated">伺服器使用領域來分割受保護的資源;每個資料分割可以有自己的驗證配置和 （或） 授權資料庫。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>Realms are used only for basic and digest authentication.</source>
          <target state="translated">領域只限於基本和摘要式驗證使用。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>After a client successfully authenticates, the authentication is valid for all resources in a given realm.</source>
          <target state="translated">當用戶端成功驗證之後，驗證對指定領域中的所有資源都有效。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>For a detailed description of realms, see RFC 2617 at <bpt id="p1">[</bpt><ph id="ph1">https://www.ietf.org/</ph><ept id="p1">](https://www.ietf.org/)</ept>.</source>
          <target state="translated">領域的詳細說明，請參閱 RFC 2617 在<bpt id="p1">[</bpt> <ph id="ph1">https://www.ietf.org/</ph> <ept id="p1">](https://www.ietf.org/)</ept>。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>An instance of <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> has only one associated realm.</source>
          <target state="translated">執行個體<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>有只有一個相關聯的領域。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.Realm">
          <source>The following code example demonstrates setting the <ph id="ph1">&lt;xref:System.Net.HttpListener.Realm%2A&gt;</ph> property.</source>
          <target state="translated">下列程式碼範例示範如何設定<ph id="ph1">&lt;xref:System.Net.HttpListener.Realm%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.Realm">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>Allows this instance to receive incoming requests.</source>
          <target state="translated">允許這個執行個體接收傳入要求。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>This method must be called before you call the <ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph> method.</source>
          <target state="translated">必須呼叫這個方法，才能呼叫<ph id="ph1">&lt;xref:System.Net.HttpListener.GetContext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Net.HttpListener.BeginGetContext%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>After you have started an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method to stop it.</source>
          <target state="translated">啟動之後<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>物件，您可以使用<ph id="ph2">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph>方法可加以停止。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>If this listener instance uses https, you must install and select a Server Certificate.</source>
          <target state="translated">如果此接聽程式執行個體使用 https，您必須安裝並選取 伺服器憑證。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>Otherwise, an <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> query of this <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> will fail with an unexpected close of the connection.</source>
          <target state="translated">否則，<ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph>這個查詢<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>會失敗，意外的關閉的連接。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>You can configure Server Certificates and other listener options by using HttpCfg.exe.</source>
          <target state="translated">您可以使用 HttpCfg.exe 來設定伺服器憑證和其他接聽程式選項。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>See <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp</ph><ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)</ept> for more details.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp</ph> <ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)</ept>如需詳細資訊。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method to begin processing incoming requests.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>方法開始處理傳入要求。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>A Win32 function call failed.</source>
          <target state="translated">Win32 函式呼叫失敗。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>Check the exception's <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> property to determine the cause of the exception.</source>
          <target state="translated">請檢查例外狀況的 <ph id="ph1">&lt;see cref="P:System.Net.HttpListenerException.ErrorCode" /&gt;</ph> 屬性，以判斷造成例外狀況的原因。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Start">
          <source>This object is closed.</source>
          <target state="translated">這個物件已經關閉。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Start">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>網路追蹤.NET Framework 中<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Stop">
          <source>Causes this instance to stop receiving incoming requests.</source>
          <target state="translated">使這個執行個體停止接收傳入要求。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>If this instance is already stopped, calling this method has no effect.</source>
          <target state="translated">如果這個執行個體已停止，呼叫這個方法沒有任何作用。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>After you have stopped an <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> object, you can use the <ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph> method to restart it.</source>
          <target state="translated">您已停止之後<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>物件，您可以使用<ph id="ph2">&lt;xref:System.Net.HttpListener.Start%2A&gt;</ph>方法來重新啟動它。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph> method to stop processing incoming requests.</source>
          <target state="translated">下列程式碼範例示範如何使用<ph id="ph1">&lt;xref:System.Net.HttpListener.Stop%2A&gt;</ph>停止處理內送要求的方法。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.Stop">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.Stop">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>網路追蹤.NET Framework 中<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Net.HttpListener.System#IDisposable#Dispose">
          <source>Releases the resources held by this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> object.</source>
          <target state="translated">釋出這個 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 物件所持有的資源。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.HttpListener.System#IDisposable#Dispose">
          <source>Applications should use the <ph id="ph1">&lt;xref:System.Net.HttpListener.Close%2A&gt;</ph> method instead of calling this method.</source>
          <target state="translated">應用程式應該使用<ph id="ph1">&lt;xref:System.Net.HttpListener.Close%2A&gt;</ph>方法，而非呼叫這個方法。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager for this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> instance.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 執行個體的逾時管理員。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerTimeoutManager" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Net.HttpListenerTimeoutManager" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager for this <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> instance.</source>
          <target state="translated">這個 <ph id="ph1">&lt;see cref="T:System.Net.HttpListener" /&gt;</ph> 執行個體的逾時管理員。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.TimeoutManager">
          <source>The timeout manager defines the connection timeout limits for this <ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph> instance.</source>
          <target state="translated">逾時管理員定義的連接逾時限制此<ph id="ph1">&lt;xref:System.Net.HttpListener&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</source>
          <target state="translated">取得或設定 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 值，控制使用 NTLM 時，是否必須驗證其他使用相同傳輸控制通訊協定 (TCP) 連接的要求。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> of the first request will be used for subsequent requests on the same connection; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果第一個要求的 <ph id="ph2">&lt;see cref="T:System.Security.Principal.IIdentity" /&gt;</ph> 將用於相同連接上的後續要求，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">預設值是 <ph id="ph1">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>When this property is set to <ph id="ph1">`true`</ph> and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph>) of the initial request.</source>
          <target state="translated">當這個屬性設定為<ph id="ph1">`true`</ph>透過特定的 TCP 連接的第一個要求會使用 NTLM 進行驗證，透過相同的 TCP 連線的後續要求將會使用處理的驗證資訊 (<ph id="ph2">&lt;xref:System.Security.Principal.IIdentity&gt;</ph>) 的初始要求。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>This property has no effect when NTLM is not the authentication protocol.</source>
          <target state="translated">當 NTLM 不是驗證通訊協定時，這個屬性不會有任何作用。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</source>
          <target state="translated">做為驗證通訊協定指定交涉時，這個屬性才 NTLM 是實際的通訊協定用於驗證，就會有效果。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>While setting this property to <ph id="ph1">`true`</ph> increases performance because the <ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</source>
          <target state="translated">若要設定這個屬性時<ph id="ph1">`true`</ph>可提升效能，因為<ph id="ph2">&lt;xref:System.Net.HttpListener&gt;</ph>不傳送其他 NTLM 驗證挑戰，不需要提供驗證資訊的所有要求中有安全性風險。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>You must determine whether the increase in performance is worth this risk.</source>
          <target state="translated">您必須決定是否值得冒這個風險以提升效能。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>The following code example demonstrates setting this property.</source>
          <target state="translated">下列程式碼範例將示範如何設定這個屬性。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication">
          <source>This object has been closed.</source>
          <target state="translated">此物件已關閉。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>