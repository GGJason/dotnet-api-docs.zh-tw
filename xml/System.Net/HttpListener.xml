<Type Name="HttpListener" FullName="System.Net.HttpListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f991291f719da3b2389d059c7533baa7d1e345a0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36472512" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListener : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListener extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListener" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListener&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListener sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpListener = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="da4b0-101">Provides a simple, programmatically controlled HTTP protocol listener.</span>
      <span class="sxs-lookup">
        <span data-stu-id="da4b0-101">Provides a simple, programmatically controlled HTTP protocol listener.</span>
      </span>
      <span data-ttu-id="da4b0-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="da4b0-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-103">使用<xref:System.Net.HttpListener>類別，您可以建立簡單的 HTTP 通訊協定接聽程式以回應 HTTP 要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-103">Using the <xref:System.Net.HttpListener> class, you can create a simple HTTP protocol listener that responds to HTTP requests.</span></span> <span data-ttu-id="da4b0-104">接聽程式均可使用的存留期<xref:System.Net.HttpListener>物件，並以其權限的應用程式中執行。</span><span class="sxs-lookup"><span data-stu-id="da4b0-104">The listener is active for the lifetime of the <xref:System.Net.HttpListener> object and runs within your application with its permissions.</span></span>
   
 <span data-ttu-id="da4b0-105">若要使用<xref:System.Net.HttpListener>，建立使用類別的新執行個體<xref:System.Net.HttpListener>建構函式和使用<xref:System.Net.HttpListener.Prefixes%2A>屬性來存取保存字串，其中指定的統一資源識別元 (URI) 的集合做為前置詞<xref:System.Net.HttpListener>應該處理。</span><span class="sxs-lookup"><span data-stu-id="da4b0-105">To use <xref:System.Net.HttpListener>, create a new instance of the class using the <xref:System.Net.HttpListener> constructor and use the <xref:System.Net.HttpListener.Prefixes%2A> property to gain access to the collection that holds the strings that specify which Uniform Resource Identifier (URI) prefixes the <xref:System.Net.HttpListener> should process.</span></span>
  
 <span data-ttu-id="da4b0-106">URI 的前置詞字串是由配置 （http 或 https）、 主機、 選用連接埠和選擇性路徑所組成。</span><span class="sxs-lookup"><span data-stu-id="da4b0-106">A URI prefix string is composed of a scheme (http or https), a host, an optional port, and an optional path.</span></span> <span data-ttu-id="da4b0-107">完整的前置詞字串的範例是* http://www.contoso.com:8080/customerData/ *。</span><span class="sxs-lookup"><span data-stu-id="da4b0-107">An example of a complete prefix string is *http://www.contoso.com:8080/customerData/*.</span></span> <span data-ttu-id="da4b0-108">前置詞必須結尾斜線 （"/"）。</span><span class="sxs-lookup"><span data-stu-id="da4b0-108">Prefixes must end in a forward slash ("/").</span></span> <span data-ttu-id="da4b0-109"><xref:System.Net.HttpListener>回應要求最符合要求的 URI 前置詞的物件。</span><span class="sxs-lookup"><span data-stu-id="da4b0-109">The <xref:System.Net.HttpListener> object with the prefix that most closely matches a requested URI responds to the request.</span></span> <span data-ttu-id="da4b0-110">多個<xref:System.Net.HttpListener>物件無法加入相同的前置詞;<xref:System.ComponentModel.Win32Exception>擲回例外狀況如果<xref:System.Net.HttpListener>新增已經在前置詞使用。</span><span class="sxs-lookup"><span data-stu-id="da4b0-110">Multiple <xref:System.Net.HttpListener> objects cannot add the same prefix; a <xref:System.ComponentModel.Win32Exception> exception is thrown if a <xref:System.Net.HttpListener> adds a prefix that is already in use.</span></span>
  
 <span data-ttu-id="da4b0-111">指定連接埠時，裝載項目都可以使用取代"\*"表示<xref:System.Net.HttpListener>接受要求傳送至連接埠，如果要求的 URI 不符合任何前置詞。</span><span class="sxs-lookup"><span data-stu-id="da4b0-111">When a port is specified, the host element can be replaced with "\*" to indicate that the <xref:System.Net.HttpListener> accepts requests sent to the port if the requested URI does not match any other prefix.</span></span> <span data-ttu-id="da4b0-112">比方說，若要接收的所有要求傳送至連接埠 8080 當要求的 URI 不由處理任何<xref:System.Net.HttpListener>，前置詞是*http://\*: 8080 /*。</span><span class="sxs-lookup"><span data-stu-id="da4b0-112">For example, to receive all requests sent to port 8080 when the requested URI is not handled by any <xref:System.Net.HttpListener>, the prefix is *http://\*:8080/*.</span></span> <span data-ttu-id="da4b0-113">同樣地，以指定<xref:System.Net.HttpListener>接受連接埠，傳送的所有要求的主機項目取代為"+"字元。</span><span class="sxs-lookup"><span data-stu-id="da4b0-113">Similarly, to specify that the <xref:System.Net.HttpListener> accepts all requests sent to a port, replace the host element with the "+" character.</span></span> <span data-ttu-id="da4b0-114">例如，*https://+:8080*。</span><span class="sxs-lookup"><span data-stu-id="da4b0-114">For example, *https://+:8080*.</span></span> <span data-ttu-id="da4b0-115">「\*"和"+"字元可出現在 包含路徑的前置詞。</span><span class="sxs-lookup"><span data-stu-id="da4b0-115">The "\*" and "+" characters can be present in prefixes that include paths.</span></span>
  
 <span data-ttu-id="da4b0-116">.NET Core 2.0 或 Windows 10 上的.NET Framework 4.6 起，萬用字元子網域中支援所管理的 URI 前置詞<xref:System.Net.HttpListener>物件。</span><span class="sxs-lookup"><span data-stu-id="da4b0-116">Starting with .NET Core 2.0 or .NET Framework 4.6 on Windows 10, wildcard subdomains are supported in URI prefixes that are managed by an <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="da4b0-117">若要指定萬用字元子網域，請使用"\*"字元的 URI 前置詞中的主機名稱的一部分。</span><span class="sxs-lookup"><span data-stu-id="da4b0-117">To specify a wildcard subdomain, use the "\*" character as part of the hostname in a URI prefix.</span></span> <span data-ttu-id="da4b0-118">例如， *http://\*.foo.com/*。</span><span class="sxs-lookup"><span data-stu-id="da4b0-118">For example, *http://\*.foo.com/*.</span></span> <span data-ttu-id="da4b0-119">將此變數傳遞做為引數<xref:System.Net.HttpListenerPrefixCollection.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-119">Pass this as the argument to the <xref:System.Net.HttpListenerPrefixCollection.Add%2A> method.</span></span> <span data-ttu-id="da4b0-120">這適用於.NET Core 2.0 或 Windows 10; 上的.NET Framework 4.6 為準，在舊版中，這會產生<xref:System.Net.HttpListenerException>。</span><span class="sxs-lookup"><span data-stu-id="da4b0-120">This works as of .NET Core 2.0 or .NET Framework 4.6 on Windows 10; in earlier versions, this generates an <xref:System.Net.HttpListenerException>.</span></span>

 > [!WARNING]
 > <span data-ttu-id="da4b0-121">最上層的萬用字元繫結 (*http://\*: 8080 /* 和\* http://+:8080 \*) 應該**不**使用。</span><span class="sxs-lookup"><span data-stu-id="da4b0-121">Top-level wildcard bindings (*http://\*:8080/* and *http://+:8080*) should **not** be used.</span></span> <span data-ttu-id="da4b0-122">最上層萬用字元繫結可能暴露您的應用程式安全性弱點。</span><span class="sxs-lookup"><span data-stu-id="da4b0-122">Top-level wildcard bindings can open up your app to security vulnerabilities.</span></span> <span data-ttu-id="da4b0-123">這對強式與弱式萬用字元皆適用。</span><span class="sxs-lookup"><span data-stu-id="da4b0-123">This applies to both strong and weak wildcards.</span></span> <span data-ttu-id="da4b0-124">請使用明確主機名稱，而非萬用字元。</span><span class="sxs-lookup"><span data-stu-id="da4b0-124">Use explicit host names rather than wildcards.</span></span> <span data-ttu-id="da4b0-125">若您擁有整個父網域 (與具弱點的 `*.com` 相對) 的控制權，則子網域萬用字元繫結 (例如 `*.mysub.com`) 就沒有此安全性風險。</span><span class="sxs-lookup"><span data-stu-id="da4b0-125">Subdomain wildcard binding (for example, `*.mysub.com`) doesn't have this security risk if you control the entire parent domain (as opposed to `*.com`, which is vulnerable).</span></span> <span data-ttu-id="da4b0-126">如需詳細資訊，請參閱 [rfc7230 5.4 節](https://tools.ietf.org/html/rfc7230#section-5.4)。</span><span class="sxs-lookup"><span data-stu-id="da4b0-126">See [rfc7230 section-5.4](https://tools.ietf.org/html/rfc7230#section-5.4) for more information.</span></span>
  
 <span data-ttu-id="da4b0-127">若要開始接聽來自用戶端的要求，將 URI 前置詞加入至集合並呼叫<xref:System.Net.HttpListener.Start%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-127">To begin listening for requests from clients, add the URI prefixes to the collection and call the <xref:System.Net.HttpListener.Start%2A> method.</span></span> <span data-ttu-id="da4b0-128"><xref:System.Net.HttpListener> 提供同步和非同步模式，處理用戶端要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-128"><xref:System.Net.HttpListener> offers both synchronous and asynchronous models for processing client requests.</span></span> <span data-ttu-id="da4b0-129">要求和其相關聯的回應則使用存取<xref:System.Net.HttpListenerContext>所傳回物件<xref:System.Net.HttpListener.GetContext%2A>方法或其非同步對應項目<xref:System.Net.HttpListener.BeginGetContext%2A>和<xref:System.Net.HttpListener.EndGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-129">Requests and their associated responses are accessed using the <xref:System.Net.HttpListenerContext> object returned by the <xref:System.Net.HttpListener.GetContext%2A> method or its asynchronous counterparts, the <xref:System.Net.HttpListener.BeginGetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods.</span></span>
  
 <span data-ttu-id="da4b0-130">如果您的應用程式應該要封鎖等候用戶端要求時，如果您想要一次處理一個要求適合同步模型。</span><span class="sxs-lookup"><span data-stu-id="da4b0-130">The synchronous model is appropriate if your application should block while waiting for a client request and if you want to process only one request at a time.</span></span> <span data-ttu-id="da4b0-131">使用同步的模型時，呼叫<xref:System.Net.HttpListener.GetContext%2A>方法，等待用戶端傳送要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-131">Using the synchronous model, call the <xref:System.Net.HttpListener.GetContext%2A> method, which waits for a client to send a request.</span></span> <span data-ttu-id="da4b0-132">方法會傳回<xref:System.Net.HttpListenerContext>物件要處理時，就會發生。</span><span class="sxs-lookup"><span data-stu-id="da4b0-132">The method returns an <xref:System.Net.HttpListenerContext> object to you for processing when one occurs.</span></span>
  
 <span data-ttu-id="da4b0-133">在更複雜的非同步模型中，您的應用程式不會封鎖同時等候要求和每個要求在它自己的執行緒中處理。</span><span class="sxs-lookup"><span data-stu-id="da4b0-133">In the more complex asynchronous model, your application does not block while waiting for requests and each request is processed in its own execution thread.</span></span> <span data-ttu-id="da4b0-134">使用<xref:System.Net.HttpListener.BeginGetContext%2A>方法，以指定應用程式定義要呼叫的方法為每個連入要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-134">Use the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify an application-defined method to be called for each incoming request.</span></span> <span data-ttu-id="da4b0-135">該方法內呼叫<xref:System.Net.HttpListener.EndGetContext%2A>方法來取得要求、 處理它，並回應。</span><span class="sxs-lookup"><span data-stu-id="da4b0-135">Within that method, call the <xref:System.Net.HttpListener.EndGetContext%2A> method to obtain the request, process it, and respond.</span></span>
  
 <span data-ttu-id="da4b0-136">在這兩種模式中，連入要求會使用存取<xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType>屬性且由<xref:System.Net.HttpListenerRequest>物件。</span><span class="sxs-lookup"><span data-stu-id="da4b0-136">In either model, incoming requests are accessed using the <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerRequest> objects.</span></span> <span data-ttu-id="da4b0-137">同樣地，使用存取回應<xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType>屬性且由<xref:System.Net.HttpListenerResponse>物件。</span><span class="sxs-lookup"><span data-stu-id="da4b0-137">Similarly, responses are accessed using the <xref:System.Net.HttpListenerContext.Response%2A?displayProperty=nameWithType> property and are represented by <xref:System.Net.HttpListenerResponse> objects.</span></span> <span data-ttu-id="da4b0-138">這些物件共用的某些功能<xref:System.Net.HttpWebRequest>和<xref:System.Net.HttpWebResponse>物件，而第二個物件不能搭配<xref:System.Net.HttpListener>因為它們實作用戶端、 不伺服器、 行為。</span><span class="sxs-lookup"><span data-stu-id="da4b0-138">These objects share some functionality with the <xref:System.Net.HttpWebRequest> and <xref:System.Net.HttpWebResponse> objects, but the latter objects cannot be used in conjunction with <xref:System.Net.HttpListener> because they implement client, not server, behaviors.</span></span>
  
 <span data-ttu-id="da4b0-139"><xref:System.Net.HttpListener>可以要求用戶端驗證。</span><span class="sxs-lookup"><span data-stu-id="da4b0-139">An <xref:System.Net.HttpListener> can require client authentication.</span></span> <span data-ttu-id="da4b0-140">您可以指定要用於驗證特定配置，或者您可以指定委派，會決定要使用的配置。</span><span class="sxs-lookup"><span data-stu-id="da4b0-140">You can either specify a particular scheme to use for authentication, or you can specify a delegate that determines the scheme to use.</span></span> <span data-ttu-id="da4b0-141">您必須要求某種形式的驗證，以取得用戶端身分識別的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="da4b0-141">You must require some form of authentication to obtain information about the client's identity.</span></span> <span data-ttu-id="da4b0-142">如需詳細資訊，請參閱<xref:System.Net.HttpListenerContext.User%2A>， <xref:System.Net.HttpListener.AuthenticationSchemes%2A>，和<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-142">For additional information, see the <xref:System.Net.HttpListenerContext.User%2A>, <xref:System.Net.HttpListener.AuthenticationSchemes%2A>, and <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> properties.</span></span>
  
> [!NOTE]
> <span data-ttu-id="da4b0-143">如果您建立<xref:System.Net.HttpListener>使用 https，您必須選取伺服器憑證該接聽項。</span><span class="sxs-lookup"><span data-stu-id="da4b0-143">If you create an <xref:System.Net.HttpListener> using https, you must select a Server Certificate for that listener.</span></span> <span data-ttu-id="da4b0-144">否則，<xref:System.Net.HttpWebRequest>這個查詢<xref:System.Net.HttpListener>會失敗，意外的關閉的連接。</span><span class="sxs-lookup"><span data-stu-id="da4b0-144">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span>
  
> [!NOTE]
> <span data-ttu-id="da4b0-145">您可以使用網路殼層 (netsh.exe)，來設定伺服器憑證和其他接聽程式選項。</span><span class="sxs-lookup"><span data-stu-id="da4b0-145">You can configure Server Certificates and other listener options by using Network Shell (netsh.exe).</span></span> <span data-ttu-id="da4b0-146">請參閱[網路殼層 (Netsh)](/windows-server/networking/technologies/netsh/netsh)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="da4b0-146">See [Network Shell (Netsh)](/windows-server/networking/technologies/netsh/netsh) for more details.</span></span> <span data-ttu-id="da4b0-147">可執行檔開始隨附於 Windows Server 2008 和 Windows Vista。</span><span class="sxs-lookup"><span data-stu-id="da4b0-147">The executable began shipping with Windows Server 2008 and Windows Vista.</span></span>
  
> [!NOTE]
> <span data-ttu-id="da4b0-148">如果您指定多個驗證配置<xref:System.Net.HttpListener>，接聽程式是以下列順序的用戶端的挑戰： `Negotiate`， `NTLM`， `Digest`，然後`Basic`。</span><span class="sxs-lookup"><span data-stu-id="da4b0-148">If you specify multiple authentication schemes for the <xref:System.Net.HttpListener>, the listener will challenge clients in the following order: `Negotiate`, `NTLM`, `Digest`, and then `Basic`.</span></span>
  
   
  
## Examples
 <span data-ttu-id="da4b0-149">下列程式碼範例示範如何使用<xref:System.Net.HttpListener>。</span><span class="sxs-lookup"><span data-stu-id="da4b0-149">The following code example demonstrates using a <xref:System.Net.HttpListener>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-150">Initializes a new instance of the <see cref="T:System.Net.HttpListener" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-151">之前使用此建構函式所傳回的執行個體，您必須叫用其<xref:System.Net.HttpListener.Start%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-151">Before using the instance returned by this constructor, you must invoke its <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-152">下列程式碼範例示範如何使用<xref:System.Net.HttpListener>建構函式來建立新<xref:System.Net.HttpListener>物件。</span><span class="sxs-lookup"><span data-stu-id="da4b0-152">The following code example demonstrates using the <xref:System.Net.HttpListener> constructor to create a new <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="da4b0-153">完整的範例，請參閱<xref:System.Net.HttpListener>類別主題。</span><span class="sxs-lookup"><span data-stu-id="da4b0-153">For the complete example, see the <xref:System.Net.HttpListener> class topic.</span></span>  
  
 [!code-csharp[Net_listener_Basic#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="da4b0-154">This class cannot be used on the current operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-154">This class cannot be used on the current operating system.</span>
          </span>
          <span data-ttu-id="da4b0-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-155">Windows Server 2003 or Windows XP SP2 is required to use instances of this class.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="da4b0-156">
            <para>注意： 這個成員會輸出追蹤資訊在應用程式中啟用網路追蹤時。如需詳細資訊，請參閱 [追蹤.NET Framework](~/docs/framework/network-programming/network-tracing.md) 中的網路。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-156">
              <para>Note: This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="member this.Abort : unit -&gt; unit" Usage="httpListener.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-157">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-157">Shuts down the <see cref="T:System.Net.HttpListener" /> object immediately, discarding all currently queued requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-158">這個方法會處置此接聽程式所持有的所有資源。</span><span class="sxs-lookup"><span data-stu-id="da4b0-158">This method disposes of all resources held by this listener.</span></span> <span data-ttu-id="da4b0-159">任何暫止要求都無法完成。</span><span class="sxs-lookup"><span data-stu-id="da4b0-159">Any pending requests are unable to complete.</span></span>  
  
 <span data-ttu-id="da4b0-160">之後呼叫這個方法，您會收到<xref:System.ObjectDisposedException>如果您嘗試使用這個<xref:System.Net.HttpListener>。</span><span class="sxs-lookup"><span data-stu-id="da4b0-160">After calling this method, you will receive an <xref:System.ObjectDisposedException> if you attempt to use this <xref:System.Net.HttpListener>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-161">下列程式碼範例示範如何呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-161">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="da4b0-162">
            <para>您的應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。如需詳細資訊，請參閱 [追蹤.NET Framework](~/docs/framework/network-programming/network-tracing.md) 中的網路。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-162">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemes">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemes AuthenticationSchemes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.AuthenticationSchemes AuthenticationSchemes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemes" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemes As AuthenticationSchemes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemes AuthenticationSchemes { System::Net::AuthenticationSchemes get(); void set(System::Net::AuthenticationSchemes value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemes : System.Net.AuthenticationSchemes with get, set" Usage="System.Net.HttpListener.AuthenticationSchemes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-163">Gets or sets the scheme used to authenticate clients.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-163">Gets or sets the scheme used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-164">
            <see cref="T:System.Net.AuthenticationSchemes" /> 列舉值的位元組合，表示用戶端的驗證方式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-164">A bitwise combination of <see cref="T:System.Net.AuthenticationSchemes" /> enumeration values that indicates how clients are to be authenticated.</span>
          </span>
          <span data-ttu-id="da4b0-165">預設值是 <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-165">The default value is <see cref="F:System.Net.AuthenticationSchemes.Anonymous" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-166"><xref:System.Net.HttpListener>使用指定的配置來驗證所有連入要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-166">The <xref:System.Net.HttpListener> uses the specified scheme to authenticate all incoming requests.</span></span> <span data-ttu-id="da4b0-167"><xref:System.Net.HttpListener.GetContext%2A>和<xref:System.Net.HttpListener.EndGetContext%2A>方法才會傳回傳入的用戶端要求<xref:System.Net.HttpListener>順利通過驗證的要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-167">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming client request only if the <xref:System.Net.HttpListener> successfully authenticates the request.</span></span>  
  
 <span data-ttu-id="da4b0-168">您可以使用查閱成功驗證的用戶端的身分識別<xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-168">You can interrogate the identity of a successfully authenticated client by using the <xref:System.Net.HttpListenerContext.User%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="da4b0-169">如果您想<xref:System.Net.HttpListener>物件以使用不同的驗證機制會根據所接收的要求特性 (例如，要求的<xref:System.Net.HttpListenerRequest.Url%2A>或<xref:System.Net.HttpListenerRequest.UserHostName%2A>屬性)，您必須實作選擇的方法驗證配置。</span><span class="sxs-lookup"><span data-stu-id="da4b0-169">If you want an <xref:System.Net.HttpListener> object to use different authentication mechanisms based on characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostName%2A> property), you must implement a method that chooses the authentication scheme.</span></span> <span data-ttu-id="da4b0-170">如需有關如何執行這項操作的指示，請參閱<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>屬性文件。</span><span class="sxs-lookup"><span data-stu-id="da4b0-170">For instructions about how to do this, see the <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da4b0-171">若要設定這個屬性，以啟用 Digest，NTLM 或交涉需要<xref:System.Security.Permissions.SecurityPermission>， <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="da4b0-171">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-172">下列程式碼範例示範如何使用<xref:System.Net.HttpListener.AuthenticationSchemes%2A>屬性來指定驗證配置。</span><span class="sxs-lookup"><span data-stu-id="da4b0-172">The following code example demonstrates using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property to specify an authentication scheme.</span></span>  
  
 [!code-csharp[Net_listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-173">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-173">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationSchemeSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.AuthenticationSchemeSelector AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationSchemeSelectorDelegate As AuthenticationSchemeSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::AuthenticationSchemeSelector ^ AuthenticationSchemeSelectorDelegate { System::Net::AuthenticationSchemeSelector ^ get(); void set(System::Net::AuthenticationSchemeSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationSchemeSelectorDelegate : System.Net.AuthenticationSchemeSelector with get, set" Usage="System.Net.HttpListener.AuthenticationSchemeSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.AuthenticationSchemeSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-174">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-174">Gets or sets the delegate called to determine the protocol used to authenticate clients.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-175">
            <see cref="T:System.Net.AuthenticationSchemeSelector" /> 委派，叫用用來選取驗證通訊協定的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-175">An <see cref="T:System.Net.AuthenticationSchemeSelector" /> delegate that invokes the method used to select an authentication protocol.</span>
          </span>
          <span data-ttu-id="da4b0-176">預設值是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-176">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="da4b0-177">如果您想要用於特定的執行個體所處理的所有要求相同的驗證通訊協定<xref:System.Net.HttpListener>，您不需要設定此屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-177">If you want the same authentication protocol to be used for all requests handled by a particular instance of <xref:System.Net.HttpListener>, you do not need to set this property.</span></span> <span data-ttu-id="da4b0-178">若要指定要用於所有用戶端要求的通訊協定，使用<xref:System.Net.HttpListener.AuthenticationSchemes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-178">To specify a protocol to be used for all client requests, use the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> property.</span></span>  
  
 <span data-ttu-id="da4b0-179">如果用戶端沒有在其標頭，指定驗證資訊<xref:System.Net.HttpListener>呼叫指定的每個未驗證的傳入要求，來判斷，如果有的話，要使用通訊協定來驗證用戶端的委派。</span><span class="sxs-lookup"><span data-stu-id="da4b0-179">If the client has not specified authentication information in its headers, the <xref:System.Net.HttpListener> calls the specified delegate for each unauthenticated incoming request to determine which, if any, protocol to use to authenticate the client.</span></span> <span data-ttu-id="da4b0-180"><xref:System.Net.HttpListener.GetContext%2A>和<xref:System.Net.HttpListener.EndGetContext%2A>方法會傳回傳入的要求才<xref:System.Net.HttpListener>成功驗證要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-180">The <xref:System.Net.HttpListener.GetContext%2A> and <xref:System.Net.HttpListener.EndGetContext%2A> methods return an incoming request only if the <xref:System.Net.HttpListener> successfully authenticated the request.</span></span> <span data-ttu-id="da4b0-181">如果無法驗證要求，<xref:System.Net.HttpListener>自動傳送回去 401 回應。</span><span class="sxs-lookup"><span data-stu-id="da4b0-181">If a request cannot be authenticated, the <xref:System.Net.HttpListener> automatically sends back a 401 response.</span></span> <span data-ttu-id="da4b0-182">您可以取得已成功驗證用戶端使用的身分識別<xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-182">You can get the identity of a successfully authenticated client using the <xref:System.Web.HttpRequest.LogonUserIdentity%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="da4b0-183">委派的驗證通訊協定的應用程式專屬方法來選擇適合您想要的執行個體<xref:System.Net.HttpListener>使用不同的驗證通訊協定會根據它所收到 （要求的特性例如，要求的<xref:System.Net.HttpListenerRequest.Url%2A>或<xref:System.Net.HttpListenerRequest.UserHostAddress%2A>屬性)。</span><span class="sxs-lookup"><span data-stu-id="da4b0-183">The ability to delegate the choice of authentication protocol to an application-specific method is useful if you want an instance of <xref:System.Net.HttpListener> to use different authentication protocols depending on the characteristics of the requests it receives (for example, the request's <xref:System.Net.HttpListenerRequest.Url%2A> or <xref:System.Net.HttpListenerRequest.UserHostAddress%2A> property).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da4b0-184">若要設定這個屬性，以啟用 Digest，NTLM 或交涉需要<xref:System.Security.Permissions.SecurityPermission>， <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>。</span><span class="sxs-lookup"><span data-stu-id="da4b0-184">To set this property to enable Digest, NTLM, or Negotiate requires the <xref:System.Security.Permissions.SecurityPermission>, <xref:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-185">下列程式碼範例會設定這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="da4b0-185">The following code example sets the value of this property.</span></span>  
  
 [!code-csharp[NclListener#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#2)]
 [!code-vb[NclListener#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#2)]  
  
 <span data-ttu-id="da4b0-186">下列程式碼範例提供叫用方法的實作<xref:System.Net.AuthenticationSchemeSelector>委派。</span><span class="sxs-lookup"><span data-stu-id="da4b0-186">The following code example provides an implementation of a method invoked by an <xref:System.Net.AuthenticationSchemeSelector> delegate.</span></span>  
  
 [!code-csharp[NclListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#1)]
 [!code-vb[NclListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-187">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-187">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginGetContext">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetContext (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetContext(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetContext (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetContext(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetContext : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListener.BeginGetContext (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="da4b0-188">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-188">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when a client request is available.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="da4b0-189">A user-defined object that contains information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-189">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="da4b0-190">This object is passed to the <c>callback</c> delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-190">This object is passed to the <c>callback</c> delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da4b0-191">Begins asynchronously retrieving an incoming request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-191">Begins asynchronously retrieving an incoming request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da4b0-192">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-192">An <see cref="T:System.IAsyncResult" /> object that indicates the status of the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-193"><xref:System.Net.HttpListener.BeginGetContext%2A>方法開始的非同步 （非封鎖） 呼叫接收內送的用戶端要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-193">The <xref:System.Net.HttpListener.BeginGetContext%2A> method begins an asynchronous (non-blocking) call to receive incoming client requests.</span></span> <span data-ttu-id="da4b0-194">之前呼叫這個方法，您必須呼叫<xref:System.Net.HttpListener.Start%2A>方法並加入至少一個統一資源識別元 (URI) 前置詞加 URI 字串，以接聽<xref:System.Net.HttpListenerPrefixCollection>傳回<xref:System.Net.HttpListener.Prefixes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-194">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one Uniform Resource Identifier (URI) prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="da4b0-195">非同步作業必須完成呼叫<xref:System.Net.HttpListener.EndGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-195">The asynchronous operation must be completed by calling the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span> <span data-ttu-id="da4b0-196">一般而言，方法由叫用`callback`委派。</span><span class="sxs-lookup"><span data-stu-id="da4b0-196">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="da4b0-197">在作業完成時，這個方法不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="da4b0-197">This method does not block while the operation completes.</span></span> <span data-ttu-id="da4b0-198">若要取得連入要求和區塊的作業完成之前，呼叫<xref:System.Net.HttpListener.GetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-198">To get an incoming request and block until the operation completes, call the <xref:System.Net.HttpListener.GetContext%2A> method.</span></span>  
  
 <span data-ttu-id="da4b0-199">如需使用非同步程式設計模型的詳細資訊，請參閱[非同步呼叫同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="da4b0-199">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-200">下列程式碼範例示範如何使用<xref:System.Net.HttpListener.BeginGetContext%2A>方法，以指定將會處理內送的用戶端要求的回呼方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-200">The following code example demonstrates using the <xref:System.Net.HttpListener.BeginGetContext%2A> method to specify a callback method that will handle incoming client requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 <span data-ttu-id="da4b0-201">下列程式碼範例會實作回呼方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-201">The following code example implements a callback method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="da4b0-202">A Win32 function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-202">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="da4b0-203">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-203">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da4b0-204">This object has not been started or is currently stopped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-204">This object has not been started or is currently stopped.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-205">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-205">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="da4b0-206">
            <para>您的應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。如需詳細資訊，請參閱 [追蹤.NET Framework](~/docs/framework/network-programming/network-tracing.md) 中的網路。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-206">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="httpListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-207">Shuts down the <see cref="T:System.Net.HttpListener" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-207">Shuts down the <see cref="T:System.Net.HttpListener" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-208">之後呼叫這個方法，您無法再使用<xref:System.Net.HttpListener>物件。</span><span class="sxs-lookup"><span data-stu-id="da4b0-208">After calling this method, you can no longer use the <xref:System.Net.HttpListener> object.</span></span> <span data-ttu-id="da4b0-209">若要暫時暫停<xref:System.Net.HttpListener>物件，請使用<xref:System.Net.HttpListener.Stop%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-209">To temporarily pause an <xref:System.Net.HttpListener> object, use the <xref:System.Net.HttpListener.Stop%2A> method.</span></span>  
  
 <span data-ttu-id="da4b0-210">這個方法關閉清單<xref:System.Net.HttpListener>物件，而不處理要求排入佇列。</span><span class="sxs-lookup"><span data-stu-id="da4b0-210">This method shut downs the <xref:System.Net.HttpListener> object without processing queued requests.</span></span> <span data-ttu-id="da4b0-211">任何暫止要求都無法完成。</span><span class="sxs-lookup"><span data-stu-id="da4b0-211">Any pending requests are unable to complete.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-212">下列程式碼範例示範如何呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-212">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="da4b0-213">
            <para>您的應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。如需詳細資訊，請參閱 [追蹤.NET Framework](~/docs/framework/network-programming/network-tracing.md) 中的網路。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-213">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DefaultServiceNames">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ServiceNameCollection DefaultServiceNames" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.DefaultServiceNames" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultServiceNames As ServiceNameCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ DefaultServiceNames { System::Security::Authentication::ExtendedProtection::ServiceNameCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultServiceNames : System.Security.Authentication.ExtendedProtection.ServiceNameCollection" Usage="System.Net.HttpListener.DefaultServiceNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ServiceNameCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-214">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-214">Gets a default list of Service Provider Names (SPNs) as determined by registered prefixes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-215">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" />，包含 SPN 清單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-215">A <see cref="T:System.Security.Authentication.ExtendedProtection.ServiceNameCollection" /> that contains a list of SPNs.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-216"><xref:System.Net.HttpListener.DefaultServiceNames%2A>屬性搭配整合式 Windows 驗證以提供延伸的保護。</span><span class="sxs-lookup"><span data-stu-id="da4b0-216">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="da4b0-217">Spn 的清單初始化自<xref:System.Net.HttpListener.Prefixes%2A>屬性時存取並清除 加入新的前置詞時<xref:System.Net.HttpListener.Prefixes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-217">The list of SPNs is initialized from the <xref:System.Net.HttpListener.Prefixes%2A> property when accessed and cleared when new prefixes are added to the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span>  
  
 <span data-ttu-id="da4b0-218"><xref:System.Net.HttpListener.DefaultServiceNames%2A>屬性使用應用程式不會設定<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A>其延伸的保護原則上的屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-218">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is used if an application doesn't set the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomServiceNames%2A> property on its extended protection policy.</span></span>  
  
 <span data-ttu-id="da4b0-219"><xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> ，會擷取與<xref:System.Net.HttpListener.DefaultServiceNames%2A>屬性從建置<xref:System.Net.HttpListener.Prefixes%2A>屬性根據下列規則：</span><span class="sxs-lookup"><span data-stu-id="da4b0-219">The <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection> that is retrieved with the <xref:System.Net.HttpListener.DefaultServiceNames%2A> property is built from the <xref:System.Net.HttpListener.Prefixes%2A> property according to the following rules:</span></span>  
  
1.  <span data-ttu-id="da4b0-220">如果主機名稱為"+""*"，或 IPv4 或 IPv6 常值 (相當於"\*"但限制為特定的本機介面)，加入下列的 SPN:</span><span class="sxs-lookup"><span data-stu-id="da4b0-220">If the hostname is "+", "*", or an IPv4 or IPv6 literal (equivalent to "\*" but restricted to a specific local interface), the following SPN is added:</span></span>  
  
 <span data-ttu-id="da4b0-221">`"HTTP/"` 加上電腦的完整的網域名稱。</span><span class="sxs-lookup"><span data-stu-id="da4b0-221">`"HTTP/"` plus the fully qualified domain name of the computer.</span></span>  
  
1.  <span data-ttu-id="da4b0-222">如果主機名稱不包含句點 （沒有網域或子網域），嘗試使用 DNS 完整網域名稱解析 (使用相同的行為<xref:System.Net.HttpWebRequest>)。</span><span class="sxs-lookup"><span data-stu-id="da4b0-222">If the hostname contains no dots (no domains or subdomains), an attempt is made to resolve the fully-qualified domain name using DNS (the same behavior used by <xref:System.Net.HttpWebRequest>).</span></span> <span data-ttu-id="da4b0-223">如果可以解析的完整網域名稱，則會加入下列的 Spn:</span><span class="sxs-lookup"><span data-stu-id="da4b0-223">If the fully-qualified domain name can be resolved, the following SPNs are added:</span></span>  
  
 <span data-ttu-id="da4b0-224">`"HTTP/"` 加上的主機名稱 （簡短名稱）。</span><span class="sxs-lookup"><span data-stu-id="da4b0-224">`"HTTP/"` plus the hostname (the short name).</span></span>  
  
 <span data-ttu-id="da4b0-225">`"HTTP/"` 加上主機名稱的完整的網域名稱。</span><span class="sxs-lookup"><span data-stu-id="da4b0-225">`"HTTP/"` plus the fully qualified domain name for the hostname.</span></span>  
  
1.  <span data-ttu-id="da4b0-226">如果主機名稱包含不點 （沒有網域或子網域），而無法解析完整網域名稱，則會加入下列的 SPN:</span><span class="sxs-lookup"><span data-stu-id="da4b0-226">If the hostname contains not dots (no domains or subdomains) and a fully-qualified domain name can't be resolved, the following SPN is added:</span></span>  
  
 <span data-ttu-id="da4b0-227">`"HTTP/"` 加上主機名稱。</span><span class="sxs-lookup"><span data-stu-id="da4b0-227">`"HTTP/"` plus the hostname.</span></span>  
  
1.  <span data-ttu-id="da4b0-228">如果主機名稱包含句點 （網域或子網域），則會加入下列的 SPN:</span><span class="sxs-lookup"><span data-stu-id="da4b0-228">If the hostname contains dots (domains or subdomains), the following SPN is added:</span></span>  
  
 <span data-ttu-id="da4b0-229">`"HTTP/"` 加上主機名稱。</span><span class="sxs-lookup"><span data-stu-id="da4b0-229">`"HTTP/"` plus the hostname.</span></span>  
  
 <span data-ttu-id="da4b0-230"><xref:System.Net.HttpListener.DefaultServiceNames%2A>屬性可以由應用程式用來檢閱清單，如果未不提供任何自訂的清單會用於驗證的預設 spn。</span><span class="sxs-lookup"><span data-stu-id="da4b0-230">The <xref:System.Net.HttpListener.DefaultServiceNames%2A> property can be used by an application to review the list of default SPNs which will be used for authentication if no custom list is supplied.</span></span> <span data-ttu-id="da4b0-231">如需其他 Spn，應用程式可以將它們使用其中一種<xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-231">If other SPNs are needed, an application can add them using one of the <xref:System.Security.Authentication.ExtendedProtection.ServiceNameCollection.Merge%2A> methods.</span></span>  
  
 <span data-ttu-id="da4b0-232">使用延伸的保護原則決策依據要求的 URL，因為這可能會被欺騙時，它並不安全。</span><span class="sxs-lookup"><span data-stu-id="da4b0-232">It is not safe when using extended protection to make policy decisions based on the requested URL, since this can be spoofed.</span></span> <span data-ttu-id="da4b0-233">相反地，應用程式應該會仰賴<xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>或<xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>屬性，使這類原則決策。</span><span class="sxs-lookup"><span data-stu-id="da4b0-233">Rather, applications should rely on the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> or <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> properties to make such policy decisions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EndGetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext EndGetContext (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext EndGetContext(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetContext (asyncResult As IAsyncResult) As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ EndGetContext(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetContext : IAsyncResult -&gt; System.Net.HttpListenerContext" Usage="httpListener.EndGetContext asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="da4b0-234">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-234">An <see cref="T:System.IAsyncResult" /> object that was obtained when the asynchronous operation was started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="da4b0-235">Completes an asynchronous operation to retrieve an incoming client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-235">Completes an asynchronous operation to retrieve an incoming client request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da4b0-236">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-236">An <see cref="T:System.Net.HttpListenerContext" /> object that represents the client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-237"><xref:System.Net.HttpListener.EndGetContext%2A>呼叫方法時，通常出現在應用程式定義的回呼方法的委派中，以取得所叫用<xref:System.Net.HttpListenerContext>物件，包含傳入的用戶端要求和其相關聯的回應。</span><span class="sxs-lookup"><span data-stu-id="da4b0-237">The <xref:System.Net.HttpListener.EndGetContext%2A> method is called, usually within an application-defined callback method invoked by a delegate, to obtain the <xref:System.Net.HttpListenerContext> object that contains an incoming client request and its associated response.</span></span> <span data-ttu-id="da4b0-238">這個方法完成作業，藉由呼叫先前已啟動<xref:System.Net.HttpListener.BeginGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-238">This method completes an operation previously started by calling the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="da4b0-239">如果作業尚未完成，這個方法會封鎖，直到它執行。</span><span class="sxs-lookup"><span data-stu-id="da4b0-239">If the operation has not completed, this method blocks until it does.</span></span>  
  
 <span data-ttu-id="da4b0-240">因為呼叫<xref:System.Net.HttpListener.EndGetContext%2A>方法需要<xref:System.Net.HttpListener>物件，這個物件通常會傳遞至回呼方法的使用狀態物件傳遞至<xref:System.Net.HttpListener.BeginGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-240">Because calling the <xref:System.Net.HttpListener.EndGetContext%2A> method requires the <xref:System.Net.HttpListener> object, this object is typically passed into a callback method by using the state object passed into the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span> <span data-ttu-id="da4b0-241">您可以使用，以取得此狀態物件<xref:System.IAsyncResult.AsyncState%2A>屬性`asyncResult`物件。</span><span class="sxs-lookup"><span data-stu-id="da4b0-241">You can obtain this state object by using the <xref:System.IAsyncResult.AsyncState%2A> property of the `asyncResult` object.</span></span>  
  
 <span data-ttu-id="da4b0-242">如需使用非同步程式設計模型的詳細資訊，請參閱[非同步呼叫同步方法](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span><span class="sxs-lookup"><span data-stu-id="da4b0-242">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-243">下列程式碼範例示範呼叫的回呼方法的實作<xref:System.Net.HttpListener.EndGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-243">The following code example shows the implementation of a callback method that calls the <xref:System.Net.HttpListener.EndGetContext%2A> method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da4b0-244">
            <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-244">
              <paramref name="asyncResult" /> was not obtained by calling the <see cref="M:System.Net.HttpListener.BeginGetContext(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da4b0-245">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-245">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da4b0-246">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-246">The <see cref="M:System.Net.HttpListener.EndGetContext(System.IAsyncResult)" /> method was already called for the specified <paramref name="asyncResult" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-247">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-247">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="da4b0-248">
            <para>您的應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。如需詳細資訊，請參閱 [追蹤.NET Framework](~/docs/framework/network-programming/network-tracing.md) 中的網路。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-248">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionPolicy">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy ExtendedProtectionPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionPolicy As ExtendedProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ ExtendedProtectionPolicy { System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ get(); void set(System::Security::Authentication::ExtendedProtection::ExtendedProtectionPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionPolicy : System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy with get, set" Usage="System.Net.HttpListener.ExtendedProtectionPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("not used anywhere in the implementation")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-249">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-249">Get or set the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for extended protection for a session.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-250">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />，指定延伸保護所使用的原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-250">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-251"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>屬性搭配整合式 Windows 驗證以提供延伸的保護。</span><span class="sxs-lookup"><span data-stu-id="da4b0-251">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="da4b0-252"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>屬性所允許的延伸的保護原則，為整個組態<xref:System.Net.HttpListener>工作階段。</span><span class="sxs-lookup"><span data-stu-id="da4b0-252">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="da4b0-253"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A>屬性所允許的每個要求的延伸的保護原則設定。</span><span class="sxs-lookup"><span data-stu-id="da4b0-253">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy for each individual request.</span></span>  
  
 <span data-ttu-id="da4b0-254"><xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A>屬性必須是`null`。</span><span class="sxs-lookup"><span data-stu-id="da4b0-254">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="da4b0-255"><xref:System.Net.HttpListener>執行個體直接從自己的 TLS 工作階段取得通道繫結權杖 (CBT) 有一個。</span><span class="sxs-lookup"><span data-stu-id="da4b0-255">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da4b0-256">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-256">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property was not <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da4b0-257">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-257">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da4b0-258">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-258">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-259">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-259">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="da4b0-260">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-260">The <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement" /> property was set to <see cref="F:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Always" /> on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="ExtendedProtectionSelectorDelegate">
      <MemberSignature Language="C#" Value="public System.Net.HttpListener.ExtendedProtectionSelector ExtendedProtectionSelectorDelegate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListener/ExtendedProtectionSelector ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedProtectionSelectorDelegate As HttpListener.ExtendedProtectionSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListener::ExtendedProtectionSelector ^ ExtendedProtectionSelectorDelegate { System::Net::HttpListener::ExtendedProtectionSelector ^ get(); void set(System::Net::HttpListener::ExtendedProtectionSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtendedProtectionSelectorDelegate : System.Net.HttpListener.ExtendedProtectionSelector with get, set" Usage="System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListener+ExtendedProtectionSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-261">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-261">Get or set the delegate called to determine the <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> to use for each request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-262">
            <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />，指定延伸保護所使用的原則。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-262">A <see cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" /> that specifies the policy to use for extended protection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-263"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>屬性搭配整合式 Windows 驗證以提供延伸的保護。</span><span class="sxs-lookup"><span data-stu-id="da4b0-263">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property is used with integrated Windows authentication to provide extended protection.</span></span> <span data-ttu-id="da4b0-264"><xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A>屬性所允許的延伸的保護原則，為整個組態<xref:System.Net.HttpListener>工作階段。</span><span class="sxs-lookup"><span data-stu-id="da4b0-264">The <xref:System.Net.HttpListener.ExtendedProtectionPolicy%2A> property allows the configuration of the extended protection policy for the whole <xref:System.Net.HttpListener> session.</span></span> <span data-ttu-id="da4b0-265"><xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A>屬性所允許的每個個別要求的延伸的保護原則設定。</span><span class="sxs-lookup"><span data-stu-id="da4b0-265">The <xref:System.Net.HttpListener.ExtendedProtectionSelectorDelegate%2A> property allows the configuration of the extended protection policy per individual request.</span></span>  
  
 <span data-ttu-id="da4b0-266"><xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A>屬性必須是`null`。</span><span class="sxs-lookup"><span data-stu-id="da4b0-266">The <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding%2A> property must be `null`.</span></span> <span data-ttu-id="da4b0-267"><xref:System.Net.HttpListener>執行個體直接從自己的 TLS 工作階段取得通道繫結權杖 (CBT) 有一個。</span><span class="sxs-lookup"><span data-stu-id="da4b0-267">The <xref:System.Net.HttpListener> instance gets the Channel Binding Token (CBT) directly from its own TLS session if there is one.</span></span>  
  
 <span data-ttu-id="da4b0-268">針對每個要求中，委派可以選擇的設定，<xref:System.Net.HttpListener>執行個體會使用提供延伸的保護。</span><span class="sxs-lookup"><span data-stu-id="da4b0-268">For each request, the delegate can choose the settings that the <xref:System.Net.HttpListener> instance will use to provide extended protection.</span></span>  
  
 <span data-ttu-id="da4b0-269">如果委派傳回`null`對於這個屬性，這代表<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy>其中<xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A>屬性設定為<xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>。</span><span class="sxs-lookup"><span data-stu-id="da4b0-269">If a delegate returns `null` for this property, this represents a <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy> which the <xref:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.PolicyEnforcement%2A> property set to <xref:System.Security.Authentication.ExtendedProtection.PolicyEnforcement.Never>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="da4b0-270">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-270">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property, but the <see cref="P:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy.CustomChannelBinding" /> property must be <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="da4b0-271">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-271">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property to <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da4b0-272">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-272">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property after the <see cref="M:System.Net.HttpListener.Start" /> method was already called.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-273">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-273">This object is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="da4b0-274">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-274">An attempt was made to set the <see cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" /> property on a platform that does not support extended protection.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerContext GetContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.HttpListenerContext GetContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContext" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext () As HttpListenerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::HttpListenerContext ^ GetContext();" />
      <MemberSignature Language="F#" Value="member this.GetContext : unit -&gt; System.Net.HttpListenerContext" Usage="httpListener.GetContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerContext</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-275">Waits for an incoming request and returns when one is received.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-275">Waits for an incoming request and returns when one is received.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da4b0-276">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-276">An <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-277">之前呼叫這個方法，您必須呼叫<xref:System.Net.HttpListener.Start%2A>方法並加入至少一個接聽所加入的 URI 字串的 URI 前置詞<xref:System.Net.HttpListenerPrefixCollection>傳回<xref:System.Net.HttpListener.Prefixes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-277">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="da4b0-278">前置詞的詳細說明，請參閱<xref:System.Net.HttpListener>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="da4b0-278">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 <span data-ttu-id="da4b0-279">這個方法會封鎖等候傳入要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-279">This method blocks while waiting for an incoming request.</span></span> <span data-ttu-id="da4b0-280">如果您想要進行處理以非同步方式 （在個別執行緒上） 中，以供您的應用程式不會封鎖連入要求，請使用<xref:System.Net.HttpListener.BeginGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-280">If you want incoming requests to be processed asynchronously (on separate threads) so that your application does not block, use the <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-281">下列程式碼範例示範如何呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-281">The following code example demonstrates calling this method.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="da4b0-282">A Win32 function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-282">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="da4b0-283">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-283">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="da4b0-284">This object has not been started or is currently stopped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-284">This object has not been started or is currently stopped.</span>
          </span>
          <span data-ttu-id="da4b0-285">-or-  The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-285">-or-  The <see cref="T:System.Net.HttpListener" /> does not have any Uniform Resource Identifier (URI) prefixes to respond to.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-286">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-286">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="da4b0-287">
            <para>您的應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。如需詳細資訊，請參閱 [追蹤.NET Framework](~/docs/framework/network-programming/network-tracing.md) 中的網路。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-287">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetContextAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt; GetContextAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.HttpListenerContext&gt; GetContextAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.GetContextAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContextAsync () As Task(Of HttpListenerContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::HttpListenerContext ^&gt; ^ GetContextAsync();" />
      <MemberSignature Language="F#" Value="member this.GetContextAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;" Usage="httpListener.GetContextAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.HttpListenerContext&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-288">Waits for an incoming request as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-288">Waits for an incoming request as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="da4b0-289">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-289">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="da4b0-290">The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-290">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="da4b0-291">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-291">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns an <see cref="T:System.Net.HttpListenerContext" /> object that represents a client request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-292">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="da4b0-292">This operation will not block.</span></span> <span data-ttu-id="da4b0-293">傳回<xref:System.Threading.Tasks.Task%601>物件將會完成時收到內送要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-293">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the incoming request has been received.</span></span>  
  
 <span data-ttu-id="da4b0-294">之前呼叫這個方法，您必須呼叫<xref:System.Net.HttpListener.Start%2A>方法並加入至少一個接聽所加入的 URI 字串的 URI 前置詞<xref:System.Net.HttpListenerPrefixCollection>傳回<xref:System.Net.HttpListener.Prefixes%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-294">Before calling this method, you must call the <xref:System.Net.HttpListener.Start%2A> method and add at least one URI prefix to listen for by adding the URI strings to the <xref:System.Net.HttpListenerPrefixCollection> returned by the <xref:System.Net.HttpListener.Prefixes%2A> property.</span></span> <span data-ttu-id="da4b0-295">前置詞的詳細說明，請參閱<xref:System.Net.HttpListener>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="da4b0-295">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListenerContext" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreWriteExceptions">
      <MemberSignature Language="C#" Value="public bool IgnoreWriteExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IgnoreWriteExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property IgnoreWriteExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IgnoreWriteExceptions { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreWriteExceptions : bool with get, set" Usage="System.Net.HttpListener.IgnoreWriteExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-296">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-296">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether your application receives exceptions that occur when an <see cref="T:System.Net.HttpListener" /> sends the response to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-297">如果這個 <see cref="T:System.Net.HttpListener" /> 不應傳回在傳送回應至用戶端時所發生的例外狀況，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-297">
              <see langword="true" /> if this <see cref="T:System.Net.HttpListener" /> should not return exceptions that occur when sending the response to the client; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="da4b0-298">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-298">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-299">將此屬性設定為`true`如果您的應用程式不需要回應，已成功傳送給每個用戶端。</span><span class="sxs-lookup"><span data-stu-id="da4b0-299">Set this property to `true` if your application does not require that a response is successfully sent to each client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-300">下列程式碼範例將示範如何設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-300">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-301">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-301">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsListening">
      <MemberSignature Language="C#" Value="public bool IsListening { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsListening" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsListening" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsListening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsListening { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsListening : bool" Usage="System.Net.HttpListener.IsListening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-302">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-302">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> has been started.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-303">如果已啟動 <see cref="T:System.Net.HttpListener" />，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-303">
              <see langword="true" /> if the <see cref="T:System.Net.HttpListener" /> was started; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-304">若要啟動<xref:System.Net.HttpListener>，呼叫<xref:System.Net.HttpListener.Start%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-304">To start an <xref:System.Net.HttpListener>, call the <xref:System.Net.HttpListener.Start%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-305">下列程式碼範例示範如何使用這個屬性來判斷執行個體的接聽狀態。</span><span class="sxs-lookup"><span data-stu-id="da4b0-305">The following code example demonstrates using this property to determine the listening state of an instance.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="C#" Value="public static bool IsSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsSupported" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.IsSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSupported : bool" Usage="System.Net.HttpListener.IsSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-306">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-306">Gets a value that indicates whether <see cref="T:System.Net.HttpListener" /> can be used with the current operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-307">如果支援 <see cref="T:System.Net.HttpListener" />，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-307">
              <see langword="true" /> if <see cref="T:System.Net.HttpListener" /> is supported; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-308">這個類別是只能在執行 Windows XP SP2 或 Windows Server 2003 作業系統的電腦上使用。</span><span class="sxs-lookup"><span data-stu-id="da4b0-308">This class is available only on computers running the Windows XP SP2 or Windows Server 2003 operating systems.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-309">下列程式碼範例示範如何使用<xref:System.Net.HttpListener.IsSupported%2A>屬性來偵測是否<xref:System.Net.HttpListener>物件可以用與目前的作業系統。</span><span class="sxs-lookup"><span data-stu-id="da4b0-309">The following code example demonstrates the use of the <xref:System.Net.HttpListener.IsSupported%2A> property to detect whether an <xref:System.Net.HttpListener> object can be used with the current operating system.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefixes">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerPrefixCollection Prefixes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerPrefixCollection Prefixes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Prefixes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefixes As HttpListenerPrefixCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerPrefixCollection ^ Prefixes { System::Net::HttpListenerPrefixCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Prefixes : System.Net.HttpListenerPrefixCollection" Usage="System.Net.HttpListener.Prefixes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerPrefixCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-310">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-310">Gets the Uniform Resource Identifier (URI) prefixes handled by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-311">
            <see cref="T:System.Net.HttpListenerPrefixCollection" />，包含這個 <see cref="T:System.Net.HttpListener" /> 物件設定要處理的 URI 前置詞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-311">An <see cref="T:System.Net.HttpListenerPrefixCollection" /> that contains the URI prefixes that this <see cref="T:System.Net.HttpListener" /> object is configured to handle.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-312">前置詞會採用標準格式。</span><span class="sxs-lookup"><span data-stu-id="da4b0-312">The prefixes are in canonical form.</span></span> <span data-ttu-id="da4b0-313">前置詞的詳細說明，請參閱<xref:System.Net.HttpListener>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="da4b0-313">For a detailed description of prefixes, see the <xref:System.Net.HttpListener> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-314">下列程式碼範例示範如何使用<xref:System.Net.HttpListener.Prefixes%2A>屬性來取得和列印處理的 URI 前置詞。</span><span class="sxs-lookup"><span data-stu-id="da4b0-314">The following code example demonstrates using the <xref:System.Net.HttpListener.Prefixes%2A> property to obtain and print the URI prefixes that are handled.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-315">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-315">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.Net.HttpListener.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-316">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-316">Gets or sets the realm, or resource partition, associated with this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-317">
            <see cref="T:System.String" /> 值，包含與 <see cref="T:System.Net.HttpListener" /> 物件關聯的領域名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-317">A <see cref="T:System.String" /> value that contains the name of the realm associated with the <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-318">伺服器使用領域來分割受保護的資源;每個資料分割可以有自己的驗證配置和 （或） 授權資料庫。</span><span class="sxs-lookup"><span data-stu-id="da4b0-318">Servers use realms to partition protected resources; each partition can have its own authentication scheme and/or authorization database.</span></span> <span data-ttu-id="da4b0-319">領域只限於基本和摘要式驗證使用。</span><span class="sxs-lookup"><span data-stu-id="da4b0-319">Realms are used only for basic and digest authentication.</span></span> <span data-ttu-id="da4b0-320">當用戶端成功驗證之後，驗證對指定領域中的所有資源都有效。</span><span class="sxs-lookup"><span data-stu-id="da4b0-320">After a client successfully authenticates, the authentication is valid for all resources in a given realm.</span></span> <span data-ttu-id="da4b0-321">領域的詳細說明，請參閱 RFC 2617 在[ https://www.ietf.org/ ](https://www.ietf.org/)。</span><span class="sxs-lookup"><span data-stu-id="da4b0-321">For a detailed description of realms, see RFC 2617 at [https://www.ietf.org/](https://www.ietf.org/).</span></span>  
  
 <span data-ttu-id="da4b0-322">執行個體<xref:System.Net.HttpListener>有只有一個相關聯的領域。</span><span class="sxs-lookup"><span data-stu-id="da4b0-322">An instance of <xref:System.Net.HttpListener> has only one associated realm.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-323">下列程式碼範例示範如何設定<xref:System.Net.HttpListener.Realm%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-323">The following code example demonstrates setting the <xref:System.Net.HttpListener.Realm%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-324">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-324">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="httpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-325">Allows this instance to receive incoming requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-325">Allows this instance to receive incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-326">必須呼叫這個方法，才能呼叫<xref:System.Net.HttpListener.GetContext%2A>或<xref:System.Net.HttpListener.BeginGetContext%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-326">This method must be called before you call the <xref:System.Net.HttpListener.GetContext%2A> or <xref:System.Net.HttpListener.BeginGetContext%2A> method.</span></span>  
  
 <span data-ttu-id="da4b0-327">啟動之後<xref:System.Net.HttpListener>物件，您可以使用<xref:System.Net.HttpListener.Stop%2A>方法可加以停止。</span><span class="sxs-lookup"><span data-stu-id="da4b0-327">After you have started an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Stop%2A> method to stop it.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da4b0-328">如果此接聽程式執行個體使用 https，您必須安裝並選取 伺服器憑證。</span><span class="sxs-lookup"><span data-stu-id="da4b0-328">If this listener instance uses https, you must install and select a Server Certificate.</span></span> <span data-ttu-id="da4b0-329">否則，<xref:System.Net.HttpWebRequest>這個查詢<xref:System.Net.HttpListener>會失敗，意外的關閉的連接。</span><span class="sxs-lookup"><span data-stu-id="da4b0-329">Otherwise, an <xref:System.Net.HttpWebRequest> query of this <xref:System.Net.HttpListener> will fail with an unexpected close of the connection.</span></span> <span data-ttu-id="da4b0-330">您可以使用 HttpCfg.exe 來設定伺服器憑證和其他接聽程式選項。</span><span class="sxs-lookup"><span data-stu-id="da4b0-330">You can configure Server Certificates and other listener options by using HttpCfg.exe.</span></span> <span data-ttu-id="da4b0-331">請參閱[ http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp ](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp)如需詳細資訊。</span><span class="sxs-lookup"><span data-stu-id="da4b0-331">See [http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp](http://msdn.microsoft.com/library/default.asp?url=/library/http/http/httpcfg_exe.asp) for more details.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-332">下列程式碼範例示範如何使用<xref:System.Net.HttpListener.Start%2A>方法開始處理傳入要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-332">The following code example demonstrates using the <xref:System.Net.HttpListener.Start%2A> method to begin processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.HttpListenerException">
          <span data-ttu-id="da4b0-333">A Win32 function call failed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-333">A Win32 function call failed.</span>
          </span>
          <span data-ttu-id="da4b0-334">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-334">Check the exception's <see cref="P:System.Net.HttpListenerException.ErrorCode" /> property to determine the cause of the exception.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-335">This object is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-335">This object is closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="da4b0-336">
            <para>您的應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。如需詳細資訊，請參閱 [追蹤.NET Framework](~/docs/framework/network-programming/network-tracing.md) 中的網路。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-336">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="httpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-337">Causes this instance to stop receiving incoming requests.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-337">Causes this instance to stop receiving incoming requests.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-338">如果這個執行個體已停止，呼叫這個方法沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="da4b0-338">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 <span data-ttu-id="da4b0-339">您已停止之後<xref:System.Net.HttpListener>物件，您可以使用<xref:System.Net.HttpListener.Start%2A>方法來重新啟動它。</span><span class="sxs-lookup"><span data-stu-id="da4b0-339">After you have stopped an <xref:System.Net.HttpListener> object, you can use the <xref:System.Net.HttpListener.Start%2A> method to restart it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-340">下列程式碼範例示範如何使用<xref:System.Net.HttpListener.Stop%2A>停止處理內送要求的方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-340">The following code example demonstrates using the <xref:System.Net.HttpListener.Stop%2A> method to stop processing incoming requests.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#12](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-341">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-341">This object has been closed.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="da4b0-342">
            <para>您的應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。如需詳細資訊，請參閱 [追蹤.NET Framework](~/docs/framework/network-programming/network-tracing.md) 中的網路。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-342">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListener.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-343">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-343">Releases the resources held by this <see cref="T:System.Net.HttpListener" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-344">應用程式應該使用<xref:System.Net.HttpListener.Close%2A>方法，而非呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="da4b0-344">Applications should use the <xref:System.Net.HttpListener.Close%2A> method instead of calling this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutManager">
      <MemberSignature Language="C#" Value="public System.Net.HttpListenerTimeoutManager TimeoutManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.HttpListenerTimeoutManager TimeoutManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.TimeoutManager" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutManager As HttpListenerTimeoutManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::HttpListenerTimeoutManager ^ TimeoutManager { System::Net::HttpListenerTimeoutManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutManager : System.Net.HttpListenerTimeoutManager" Usage="System.Net.HttpListener.TimeoutManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.HttpListenerTimeoutManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-345">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-345">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-346">傳回 <see cref="T:System.Net.HttpListenerTimeoutManager" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-346">Returns <see cref="T:System.Net.HttpListenerTimeoutManager" />.</span>
          </span>
          <span data-ttu-id="da4b0-347">這個 <see cref="T:System.Net.HttpListener" /> 執行個體的逾時管理員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-347">The timeout manager for this <see cref="T:System.Net.HttpListener" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-348">逾時管理員定義的連接逾時限制此<xref:System.Net.HttpListener>執行個體。</span><span class="sxs-lookup"><span data-stu-id="da4b0-348">The timeout manager defines the connection timeout limits for this <xref:System.Net.HttpListener> instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeConnectionNtlmAuthentication">
      <MemberSignature Language="C#" Value="public bool UnsafeConnectionNtlmAuthentication { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberSignature Language="VB.NET" Value="Public Property UnsafeConnectionNtlmAuthentication As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UnsafeConnectionNtlmAuthentication { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UnsafeConnectionNtlmAuthentication : bool with get, set" Usage="System.Net.HttpListener.UnsafeConnectionNtlmAuthentication" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Support for NTLM needs some loving.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="da4b0-349">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-349">Gets or sets a <see cref="T:System.Boolean" /> value that controls whether, when NTLM is used, additional requests using the same Transmission Control Protocol (TCP) connection are required to authenticate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="da4b0-350">如果第一個要求的 <see cref="T:System.Security.Principal.IIdentity" /> 將用於相同連接上的後續要求，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-350">
              <see langword="true" /> if the <see cref="T:System.Security.Principal.IIdentity" /> of the first request will be used for subsequent requests on the same connection; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="da4b0-351">預設值是 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-351">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="da4b0-352">當這個屬性設定為`true`透過特定的 TCP 連接的第一個要求會使用 NTLM 進行驗證，透過相同的 TCP 連線的後續要求將會使用處理的驗證資訊 (<xref:System.Security.Principal.IIdentity>) 的初始要求。</span><span class="sxs-lookup"><span data-stu-id="da4b0-352">When this property is set to `true` and the first request over a particular TCP connection is authenticated using NTLM, subsequent requests over the same TCP connection are processed using the authentication information (<xref:System.Security.Principal.IIdentity>) of the initial request.</span></span>  
  
 <span data-ttu-id="da4b0-353">當 NTLM 不是驗證通訊協定時，這個屬性不會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="da4b0-353">This property has no effect when NTLM is not the authentication protocol.</span></span> <span data-ttu-id="da4b0-354">做為驗證通訊協定指定交涉時，這個屬性才 NTLM 是實際的通訊協定用於驗證，就會有效果。</span><span class="sxs-lookup"><span data-stu-id="da4b0-354">When Negotiate is specified as the authentication protocol, this property has an effect only if NTLM is the actual protocol used for authentication.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="da4b0-355">若要設定這個屬性時`true`可提升效能，因為<xref:System.Net.HttpListener>不傳送其他 NTLM 驗證挑戰，不需要提供驗證資訊的所有要求中有安全性風險。</span><span class="sxs-lookup"><span data-stu-id="da4b0-355">While setting this property to `true` increases performance because the <xref:System.Net.HttpListener> does not send additional NTLM authentication challenges, there is a security risk in not requiring all requests to provide authentication information.</span></span> <span data-ttu-id="da4b0-356">您必須決定是否值得冒這個風險以提升效能。</span><span class="sxs-lookup"><span data-stu-id="da4b0-356">You must determine whether the increase in performance is worth this risk.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="da4b0-357">下列程式碼範例將示範如何設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="da4b0-357">The following code example demonstrates setting this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#14](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="da4b0-358">This object has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="da4b0-358">This object has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>