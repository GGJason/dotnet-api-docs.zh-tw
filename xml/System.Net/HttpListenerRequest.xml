<Type Name="HttpListenerRequest" FullName="System.Net.HttpListenerRequest">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f61c51e43decaf4c046020886055904c7ddfa5aa" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37643509" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpListenerRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpListenerRequest extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.HttpListenerRequest" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpListenerRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpListenerRequest sealed" />
  <TypeSignature Language="F#" Value="type HttpListenerRequest = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.HttpListener</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="62e40-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span>
      <span class="sxs-lookup">
        <span data-stu-id="62e40-101">Describes an incoming HTTP request to an <see cref="T:System.Net.HttpListener" /> object.</span>
      </span>
      <span data-ttu-id="62e40-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="62e40-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-103">當用戶端會提出要求來統一資源識別元 (URI) 由<xref:System.Net.HttpListener>物件，<xref:System.Net.HttpListener>提供<xref:System.Net.HttpListenerContext>物件，包含寄件者、 要求和傳送至用戶端的回應相關資訊。</span><span class="sxs-lookup"><span data-stu-id="62e40-103">When a client makes a request to a Uniform Resource Identifier (URI) handled by an <xref:System.Net.HttpListener> object, the <xref:System.Net.HttpListener> provides a <xref:System.Net.HttpListenerContext> object that contains information about the sender, the request, and the response that is sent to the client.</span></span> <span data-ttu-id="62e40-104"><xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType>屬性會傳回<xref:System.Net.HttpListenerRequest>描述要求的物件。</span><span class="sxs-lookup"><span data-stu-id="62e40-104">The <xref:System.Net.HttpListenerContext.Request%2A?displayProperty=nameWithType> property returns the <xref:System.Net.HttpListenerRequest> object that describes the request.</span></span>  
  
 <span data-ttu-id="62e40-105"><xref:System.Net.HttpListenerRequest>物件包含要求資訊，例如要求<xref:System.Net.HttpListenerRequest.HttpMethod%2A>字串<xref:System.Net.HttpListenerRequest.UserAgent%2A>字串，並要求主體資料 (請參閱<xref:System.Net.HttpListenerRequest.InputStream%2A>屬性)。</span><span class="sxs-lookup"><span data-stu-id="62e40-105">The <xref:System.Net.HttpListenerRequest> object contains information about the request, such as the request <xref:System.Net.HttpListenerRequest.HttpMethod%2A> string, <xref:System.Net.HttpListenerRequest.UserAgent%2A> string, and request body data (see the <xref:System.Net.HttpListenerRequest.InputStream%2A> property).</span></span>  
  
 <span data-ttu-id="62e40-106">若要回覆的要求，您必須取得相關聯的回應使用<xref:System.Net.HttpListenerContext.Response%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-106">To reply to the request, you must get the associated response using the <xref:System.Net.HttpListenerContext.Response%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-107">下列程式碼範例示範如何接收和回應<xref:System.Net.HttpListenerRequest>。</span><span class="sxs-lookup"><span data-stu-id="62e40-107">The following code example demonstrates how to receive and respond to a <xref:System.Net.HttpListenerRequest>.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.HttpListener" />
    <altmember cref="T:System.Net.HttpListenerContext" />
    <altmember cref="T:System.Net.HttpListenerResponse" />
  </Docs>
  <Members>
    <Member MemberName="AcceptTypes">
      <MemberSignature Language="C#" Value="public string[] AcceptTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AcceptTypes" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptTypes As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AcceptTypes { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptTypes : string[]" Usage="System.Net.HttpListenerRequest.AcceptTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-108">Gets the MIME types accepted by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-108">Gets the MIME types accepted by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-109">A<see cref="T:System.String" />包含在要求中指定的型別名稱的陣列<see langword="Accept" />標頭或<see langword="null" />如果用戶端要求沒有包含<see langword="Accept" />標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-109">A <see cref="T:System.String" /> array that contains the type names specified in the request's <see langword="Accept" /> header or <see langword="null" /> if the client request did not include an <see langword="Accept" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-110">`Accept`標頭會以空格分隔的多用途網際網路郵件延伸標準 (MIME) 類型名稱的字串 (例如`image/jpeg`)，這表示用戶端是準備好接受及處理在回應中的 MIME 類型。</span><span class="sxs-lookup"><span data-stu-id="62e40-110">The `Accept` header is a string of space-separated Multipurpose Internet Mail Extensions (MIME) type names (for example, `image/jpeg`), which indicate the MIME types that the client is prepared to accept and process in a response.</span></span> <span data-ttu-id="62e40-111">`*/*`項目會指出用戶端接受任何 MIME 類型。</span><span class="sxs-lookup"><span data-stu-id="62e40-111">The `*/*` entry indicates that the client accepts any MIME type.</span></span> <span data-ttu-id="62e40-112">如需詳細的說明`Accept`標頭，請參閱網址的 RFC 2616 [ https://www.rfc-editor.org ](https://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="62e40-112">For a detailed description of the `Accept` header, see RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="62e40-113">要求標頭的完整清單，請參閱<xref:System.Net.HttpRequestHeader>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="62e40-113">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-114">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-114">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="BeginGetClientCertificate">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetClientCertificate (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetClientCertificate(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetClientCertificate (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetClientCertificate(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetClientCertificate : AsyncCallback * obj -&gt; IAsyncResult" Usage="httpListenerRequest.BeginGetClientCertificate (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="62e40-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-115">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="62e40-116">A user-defined object that contains information about the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-116">A user-defined object that contains information about the operation.</span>
          </span>
          <span data-ttu-id="62e40-117">This object is passed to the callback delegate when the operation completes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-117">This object is passed to the callback delegate when the operation completes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62e40-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-118">Begins an asynchronous request for the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62e40-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-119">An <see cref="T:System.IAsyncResult" /> that indicates the status of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateError">
      <MemberSignature Language="C#" Value="public int ClientCertificateError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ClientCertificateError" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificateError As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ClientCertificateError { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateError : int" Usage="System.Net.HttpListenerRequest.ClientCertificateError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-120">Gets an error code that identifies a problem with the <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate" /> provided by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-121">
            <see cref="T:System.Int32" />包含 Windows 錯誤程式碼的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-121">An <see cref="T:System.Int32" /> value that contains a Windows error code.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-122">此屬性包含 Windows 錯誤的程式碼，傳回透過安全通道 (Schannel) 安全性支援提供者介面 (SSPI)，用來驗證憑證。</span><span class="sxs-lookup"><span data-stu-id="62e40-122">This property contains a Windows error code returned by the Secure Channel (Schannel) Security Support Provider Interface (SSPI), which is used to validate the certificate.</span></span> <span data-ttu-id="62e40-123">更多的安全通道的 SSPI 支援的詳細資訊，請參閱 「 建立安全連線使用安全通道 」，在安全性文件，網址[ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)。</span><span class="sxs-lookup"><span data-stu-id="62e40-123">For more information about SSPI support for Schannel, see "Creating a Secure Connection Using Schannel" in the Security documentation at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-124">下列程式碼範例會檢查這個屬性，以判斷要求是否包含有效的用戶端憑證。</span><span class="sxs-lookup"><span data-stu-id="62e40-124">The following code example checks this property to determine whether the request includes a valid client certificate.</span></span>  
  
 [!code-csharp[NCLListener#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLListener/CS/sample.cs#3)]
 [!code-vb[NCLListener#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLListener/vb/sample.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62e40-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods  -or -  The operation is still in progress.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-125">The client certificate has not been initialized yet by a call to the <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /> or <see cref="M:System.Net.HttpListenerRequest.GetClientCertificate" /> methods  -or -  The operation is still in progress.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding ContentEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ContentEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ ContentEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentEncoding : System.Text.Encoding" Usage="System.Net.HttpListenerRequest.ContentEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-126">Gets the content encoding that can be used with data sent with the request</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-126">Gets the content encoding that can be used with data sent with the request</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-127">
            <see cref="T:System.Text.Encoding" />適用於使用中的資料物件<see cref="P:System.Net.HttpListenerRequest.InputStream" />屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-127">An <see cref="T:System.Text.Encoding" /> object suitable for use with the data in the <see cref="P:System.Net.HttpListenerRequest.InputStream" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-128"><xref:System.Text.Encoding>物件可用來將位元組序列轉換成字元集 （字碼頁） 和成位元組序列的字元。</span><span class="sxs-lookup"><span data-stu-id="62e40-128">An <xref:System.Text.Encoding> object can be used to convert byte sequences into character sets (code pages) and characters into byte sequences.</span></span> <span data-ttu-id="62e40-129">這個屬性會使用的字元集值`Content-Type`標頭來判斷的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="62e40-129">This property uses the charset value from the `Content-Type` header to determine the encoding.</span></span> <span data-ttu-id="62e40-130">如果未提供該資訊，則這個屬性會傳回<xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="62e40-130">If that information is not available, this property returns <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-131">下列程式碼範例示範如何使用<xref:System.Net.HttpListenerRequest.ContentEncoding%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-131">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.ContentEncoding%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentLength64">
      <MemberSignature Language="C#" Value="public long ContentLength64 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ContentLength64" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentLength64" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentLength64 As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ContentLength64 { long get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentLength64 : int64" Usage="System.Net.HttpListenerRequest.ContentLength64" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-132">Gets the length of the body data included in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-132">Gets the length of the body data included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-133">從要求的值<see langword="Content-Length" />標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-133">The value from the request's <see langword="Content-Length" /> header.</span>
          </span>
          <span data-ttu-id="62e40-134">如果內容長度未知，此值為-1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-134">This value is -1 if the content length is not known.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-135">`Content-Length`標頭表示的長度，以位元組為單位，隨附於要求主體資料。</span><span class="sxs-lookup"><span data-stu-id="62e40-135">The `Content-Length` header expresses the length, in bytes, of the body data that accompanies the request.</span></span>  
  
 <span data-ttu-id="62e40-136">要求標頭的完整清單，請參閱<xref:System.Net.HttpRequestHeader>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="62e40-136">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-137">下列程式碼範例使用<xref:System.Net.HttpListenerRequest.ContentLength64%2A>處理主體資料的屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-137">The following code example uses the <xref:System.Net.HttpListenerRequest.ContentLength64%2A> property while processing body data.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.Net.HttpListenerRequest.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-138">Gets the MIME type of the body data included in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-138">Gets the MIME type of the body data included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-139">A <see cref="T:System.String" /> ，其中包含要求的文字<see langword="Content-Type" />標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-139">A <see cref="T:System.String" /> that contains the text of the request's <see langword="Content-Type" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-140">如果用戶端在要求中包含主體資料，它會宣告中的主體資料的多用途網際網路郵件延伸標準 (MIME) 類型`Content-Type`標頭。</span><span class="sxs-lookup"><span data-stu-id="62e40-140">If a client includes body data in a request, it declares the Multipurpose Internet Mail Extensions (MIME) type of the body data in the `Content-Type` header.</span></span> <span data-ttu-id="62e40-141">例如，資料的預設 MIME 類型傳回使用 Web 表單`POST`方法是`application/x-www-form-urlencoded`。</span><span class="sxs-lookup"><span data-stu-id="62e40-141">For example, the default MIME type of data returned from a Web form using the `POST` method is `application/x-www-form-urlencoded`.</span></span>  
  
 <span data-ttu-id="62e40-142">要求標頭的完整清單，請參閱<xref:System.Net.HttpRequestHeader>列舉型別以及網址的 RFC 2616 [ https://www.rfc-editor.org ](https://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="62e40-142">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration and RFC 2616, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="62e40-143"><xref:System.Net.HttpListenerRequest.ContentType%2A>為 null 時沒有任何`Content-Type`要求標頭。</span><span class="sxs-lookup"><span data-stu-id="62e40-143">The <xref:System.Net.HttpListenerRequest.ContentType%2A> is null when there is no `Content-Type` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-144">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-144">The following code example demonstrates how to use this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Cookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieCollection Cookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieCollection Cookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Cookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Cookies As CookieCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieCollection ^ Cookies { System::Net::CookieCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Cookies : System.Net.CookieCollection" Usage="System.Net.HttpListenerRequest.Cookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-145">Gets the cookies sent with the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-145">Gets the cookies sent with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-146">A<see cref="T:System.Net.CookieCollection" />包含隨附於要求的 cookie。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-146">A <see cref="T:System.Net.CookieCollection" /> that contains cookies that accompany the request.</span>
          </span>
          <span data-ttu-id="62e40-147">如果要求沒有包含 cookie，這個屬性會傳回空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-147">This property returns an empty collection if the request does not contain cookies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-148">Cookie 是從儲存在本機 （用戶端） 的電腦的 Web 伺服器的名稱/值的文字資料。</span><span class="sxs-lookup"><span data-stu-id="62e40-148">A cookie is name/value text data from a Web server that is stored on the local (client) computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-149">下列程式碼範例會顯示與要求一起傳送的 cookie 值。</span><span class="sxs-lookup"><span data-stu-id="62e40-149">The following code example displays the values of cookies sent with the request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#18](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="EndGetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.EndGetClientCertificate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetClientCertificate (asyncResult As IAsyncResult) As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ EndGetClientCertificate(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndGetClientCertificate : IAsyncResult -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.EndGetClientCertificate asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="62e40-150">The pending request for the certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-150">The pending request for the certificate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62e40-151">Ends an asynchronous request for the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-151">Ends an asynchronous request for the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62e40-152">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-152">The <see cref="T:System.IAsyncResult" /> object that is returned when the operation started.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62e40-153">
            <paramref name="asyncResult" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-153">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="62e40-154">
            <paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-154">
              <paramref name="asyncResult" /> was not obtained by calling <see cref="M:System.Net.HttpListenerRequest.BeginGetClientCertificate(System.AsyncCallback,System.Object)" /><paramref name="e." /></span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62e40-155">This method was already called for the operation identified by <paramref name="asyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-155">This method was already called for the operation identified by <paramref name="asyncResult" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificate" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificate () As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Security::Cryptography::X509Certificates::X509Certificate2 ^ GetClientCertificate();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificate : unit -&gt; System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="httpListenerRequest.GetClientCertificate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62e40-156">Retrieves the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-156">Retrieves the client's X.509 v.3 certificate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62e40-157">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-157">A <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-158">這個方法會封鎖直到擷取憑證。</span><span class="sxs-lookup"><span data-stu-id="62e40-158">This method blocks until the certificate is retrieved.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62e40-159">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-159">A call to this method to retrieve the client's X.509 v.3 certificate is in progress and therefore another call to this method cannot be made.</span>
          </span>
        </exception>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="GetClientCertificateAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Security.Cryptography.X509Certificates.X509Certificate2&gt; GetClientCertificateAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.HttpListenerRequest.GetClientCertificateAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientCertificateAsync () As Task(Of X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Security::Cryptography::X509Certificates::X509Certificate2 ^&gt; ^ GetClientCertificateAsync();" />
      <MemberSignature Language="F#" Value="member this.GetClientCertificateAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;" Usage="httpListenerRequest.GetClientCertificateAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Cryptography.X509Certificates.X509Certificate2&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62e40-160">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-160">Retrieves the client's X.509 v.3 certificate as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62e40-161">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-161">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="62e40-162">The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-162">The task object representing the asynchronous operation.</span>
          </span>
          <span data-ttu-id="62e40-163">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-163">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="N:System.Security.Cryptography.X509Certificates" /> object that contains the client's X.509 v.3 certificate.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-164">這項作業不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="62e40-164">This operation will not block.</span></span> <span data-ttu-id="62e40-165">傳回<xref:System.Threading.Tasks.Task%601>物件將會完成時在擷取的憑證。</span><span class="sxs-lookup"><span data-stu-id="62e40-165">The returned <xref:System.Threading.Tasks.Task%601> object will complete when the certificate has been retrieved.</span></span>  
  
 <span data-ttu-id="62e40-166">如果此方法來擷取用戶端的 X.509 v.3 憑證的呼叫正在進行中，無法進行另一個呼叫此方法。</span><span class="sxs-lookup"><span data-stu-id="62e40-166">If a call to this method to retrieve the client's X.509 v.3 certificate is in progress, then another call to this method cannot be made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Security.Cryptography.X509Certificates" />
      </Docs>
    </Member>
    <Member MemberName="HasEntityBody">
      <MemberSignature Language="C#" Value="public bool HasEntityBody { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEntityBody" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasEntityBody As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasEntityBody { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasEntityBody : bool" Usage="System.Net.HttpListenerRequest.HasEntityBody" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-167">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-167">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request has associated body data.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-168">
            <see langword="true" /> 如果要求有關聯的主體資料;，否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-168">
              <see langword="true" /> if the request has associated body data; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-169">將資料傳送至伺服器的要求`POST`方法，例如，應該有實體內容。</span><span class="sxs-lookup"><span data-stu-id="62e40-169">A request that sends data to the server using the `POST` method, for example, should have an entity body.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-170">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-170">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ Headers { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-171">Gets the collection of header name/value pairs sent in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-171">Gets the collection of header name/value pairs sent in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-172">A <see cref="T:System.Net.WebHeaderCollection" /> ，其中包含要求中所包含的 HTTP 標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-172">A <see cref="T:System.Net.WebHeaderCollection" /> that contains the HTTP headers included in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-173">要求標頭包含中繼資料資訊。</span><span class="sxs-lookup"><span data-stu-id="62e40-173">Request headers contain metadata information.</span></span> <span data-ttu-id="62e40-174">例如，標頭可以包含用來參考伺服器資源的統一資源識別元 (URI)，使用者代理程式的身分識別採用用戶端，並可接受的 MIME 類型的回應主體中的資料。</span><span class="sxs-lookup"><span data-stu-id="62e40-174">For example, headers can contain the Uniform Resource Identifier (URI) of the resource that referred the client to the server, the identity of the user agent employed by the client, and the acceptable MIME types for data in the response body.</span></span>  
  
 <span data-ttu-id="62e40-175">要求標頭的完整清單，請參閱<xref:System.Net.HttpRequestHeader>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="62e40-175">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-176">下列程式碼範例會顯示在中的所有資訊指定<xref:System.Net.WebHeaderCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="62e40-176">The following code example displays all the information in a given <xref:System.Net.WebHeaderCollection> object.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#21](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="HttpMethod">
      <MemberSignature Language="C#" Value="public string HttpMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HttpMethod" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.HttpMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HttpMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HttpMethod { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HttpMethod : string" Usage="System.Net.HttpListenerRequest.HttpMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-177">Gets the HTTP method specified by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-177">Gets the HTTP method specified by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-178">A <see cref="T:System.String" /> ，其中包含要求中使用的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-178">A <see cref="T:System.String" /> that contains the method used in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-179">HTTP 方法通常是 GET 或 POST，根據用戶端所需的動作。</span><span class="sxs-lookup"><span data-stu-id="62e40-179">The HTTP method is typically GET or POST, depending on the action desired by the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-180">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-180">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="InputStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream InputStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream InputStream" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.InputStream" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputStream As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ InputStream { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputStream : System.IO.Stream" Usage="System.Net.HttpListenerRequest.InputStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-181">Gets a stream that contains the body data sent by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-181">Gets a stream that contains the body data sent by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-182">可讀取<see cref="T:System.IO.Stream" />物件，其中包含所要求的主體中的用戶端傳送的位元組。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-182">A readable <see cref="T:System.IO.Stream" /> object that contains the bytes sent by the client in the body of the request.</span>
          </span>
          <span data-ttu-id="62e40-183">這個屬性會傳回<see cref="F:System.IO.Stream.Null" />如果隨著要求不傳送任何資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-183">This property returns <see cref="F:System.IO.Stream.Null" /> if no data is sent with the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-184">如果用戶端會將資料傳輸 (例如，使用 HTTP`POST`方法)，這個方法所傳回的資料流包含該資料。</span><span class="sxs-lookup"><span data-stu-id="62e40-184">If the client transmits data (for example, using the HTTP `POST` method), the stream returned by this method contains that data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62e40-185">關閉要求不會關閉這個屬性所傳回的資料流。</span><span class="sxs-lookup"><span data-stu-id="62e40-185">Closing the request does not close the stream returned by this property.</span></span> <span data-ttu-id="62e40-186">當您不再需要資料流時，您應該關閉它藉由呼叫<xref:System.IO.Stream.Close%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="62e40-186">When you no longer need the stream, you should close it by calling the <xref:System.IO.Stream.Close%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-187">下列程式碼範例示範如何使用這個屬性讀取要求一起傳送的資料。</span><span class="sxs-lookup"><span data-stu-id="62e40-187">The following code example demonstrates using this property to read the data sent with a request.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#16](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#16)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="62e40-188">
            <para>當您在應用程式中啟用網路追蹤時，這個成員會輸出追蹤資訊。如需詳細資訊，請參閱 [追蹤中.NET Framework](~/docs/framework/network-programming/network-tracing.md) 的網路。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-188">
              <para>This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Net.HttpListenerRequest.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns false")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-189">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-189">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client sending this request is authenticated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-190">
            <see langword="true" /> 如果用戶端的驗證;否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-190">
              <see langword="true" /> if the client was authenticated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-191">您的應用程式要求用戶端使用的驗證<xref:System.Net.HttpListener.AuthenticationSchemes%2A>或<xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-191">Your application requests client authentication using the <xref:System.Net.HttpListener.AuthenticationSchemes%2A> or <xref:System.Net.HttpListener.AuthenticationSchemeSelectorDelegate%2A> property.</span></span>  
  
 <span data-ttu-id="62e40-192">您的應用程式不會收到<xref:System.Net.HttpListenerContext>未成功經過驗證的用戶端要求。</span><span class="sxs-lookup"><span data-stu-id="62e40-192">Your application does not receive an <xref:System.Net.HttpListenerContext> for requests from clients that are not successfully authenticated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-193">下列程式碼範例顯示的值<xref:System.Net.HttpListenerRequest.IsAuthenticated%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-193">The following code example displays the value of the <xref:System.Net.HttpListenerRequest.IsAuthenticated%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsLocal">
      <MemberSignature Language="C#" Value="public bool IsLocal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLocal" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsLocal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLocal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLocal : bool" Usage="System.Net.HttpListenerRequest.IsLocal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-194">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-194">Gets a <see cref="T:System.Boolean" /> value that indicates whether the request is sent from the local computer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-195">
            <see langword="true" /> 如果要求是源自於同一部電腦上<see cref="T:System.Net.HttpListener" />物件，提供要求; 否則<see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-195">
              <see langword="true" /> if the request originated on the same computer as the <see cref="T:System.Net.HttpListener" /> object that provided the request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-196">應用程式可以使用這個屬性，以執行特殊處理的要求時從本機電腦。</span><span class="sxs-lookup"><span data-stu-id="62e40-196">Applications can use this property to perform special processing when requests are from the local computer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-197">下列程式碼範例示範如何使用<xref:System.Net.HttpListenerRequest.IsLocal%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-197">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsLocal%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsSecureConnection">
      <MemberSignature Language="C#" Value="public bool IsSecureConnection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecureConnection" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSecureConnection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecureConnection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecureConnection : bool" Usage="System.Net.HttpListenerRequest.IsSecureConnection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-198">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-198">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection used to send the request is using the Secure Sockets Layer (SSL) protocol.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-199">
            <see langword="true" /> 如果 TCP 連線使用 SSL，否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-199">
              <see langword="true" /> if the TCP connection is using SSL; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-200">若要要求安全連線，用戶端要求會使用<xref:System.Uri.UriSchemeHttps>而不是<xref:System.Uri.UriSchemeHttp>。</span><span class="sxs-lookup"><span data-stu-id="62e40-200">To request a secure connection, the client request uses <xref:System.Uri.UriSchemeHttps> instead of <xref:System.Uri.UriSchemeHttp>.</span></span> <span data-ttu-id="62e40-201">如果無法使用 SSL 建立連接，用戶端會收到<xref:System.Net.WebException>提供錯誤的相關資訊。</span><span class="sxs-lookup"><span data-stu-id="62e40-201">If the connection cannot be established using SSL, the client receives a <xref:System.Net.WebException> that provides information about the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-202">下列程式碼範例示範如何使用<xref:System.Net.HttpListenerRequest.IsSecureConnection%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-202">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.IsSecureConnection%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWebSocketRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsWebSocketRequest : bool" Usage="System.Net.HttpListenerRequest.IsWebSocketRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-203">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-203">Gets a <see cref="T:System.Boolean" /> value that indicates whether the TCP connection was  a WebSocket request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-204">傳回 <see cref="T:System.Boolean" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-204">Returns <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="62e40-205">
            <see langword="true" /> 如果 TCP 連線的 WebSocket 要求;否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-205">
              <see langword="true" /> if the TCP connection is a WebSocket request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepAlive">
      <MemberSignature Language="C#" Value="public bool KeepAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepAlive" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.KeepAlive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeepAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepAlive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeepAlive : bool" Usage="System.Net.HttpListenerRequest.KeepAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-206">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-206">Gets a <see cref="T:System.Boolean" /> value that indicates whether the client requests a persistent connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-207">
            <see langword="true" /> 如果連線應該保持開啟，否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-207">
              <see langword="true" /> if the connection should be kept open; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-208">如果 HTTP 用戶端和伺服器會預期在短時間內多次交換資料，持續連線加快其通訊，讓它們能夠避免來開啟和關閉每個訊息的 TCP 連線所需的額外負荷。</span><span class="sxs-lookup"><span data-stu-id="62e40-208">If an HTTP client and server expect to exchange data multiple times in a short time period, a persistent connection speeds up their communications by allowing them to avoid the overhead required to open and close a TCP connection for each message.</span></span> <span data-ttu-id="62e40-209">使用 HTTP/1.1 的用戶端，此屬性的預設值是`true`。</span><span class="sxs-lookup"><span data-stu-id="62e40-209">For clients using HTTP/1.1, the default value for this property is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-210">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-210">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint LocalEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint LocalEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ LocalEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.LocalEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-211">Get the server IP address and port number to which the request is directed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-211">Get the server IP address and port number to which the request is directed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-212">
            <see cref="T:System.Net.IPEndPoint" />表示要求傳送至的 IP 位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-212">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address that the request is sent to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-213">當您想要回應的方式處理這些要求，此屬性相當實用。</span><span class="sxs-lookup"><span data-stu-id="62e40-213">This property is useful when you want to respond to requests based on the way they are addressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-214">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-214">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="ProtocolVersion">
      <MemberSignature Language="C#" Value="public Version ProtocolVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version ProtocolVersion" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtocolVersion As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ ProtocolVersion { Version ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtocolVersion : Version" Usage="System.Net.HttpListenerRequest.ProtocolVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-215">Gets the HTTP version used by the requesting client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-215">Gets the HTTP version used by the requesting client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-216">A<see cref="T:System.Version" />可識別用戶端的 HTTP 版本。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-216">A <see cref="T:System.Version" /> that identifies the client's version of HTTP.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-217">在可用的文件中指定不同的 HTTP 版本的功能[ https://www.rfc-editor.org ](https://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="62e40-217">The capabilities of different HTTP versions are specified in the documents available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-218">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-218">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="QueryString">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.NameValueCollection QueryString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.NameValueCollection QueryString" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.QueryString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QueryString As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::NameValueCollection ^ QueryString { System::Collections::Specialized::NameValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.QueryString : System.Collections.Specialized.NameValueCollection" Usage="System.Net.HttpListenerRequest.QueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-219">Gets the query string included in the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-219">Gets the query string included in the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-220">A<see cref="T:System.Collections.Specialized.NameValueCollection" />物件，其中包含要求中所包含的查詢資料<see cref="P:System.Net.HttpListenerRequest.Url" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-220">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> object that contains the query data included in the request <see cref="P:System.Net.HttpListenerRequest.Url" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-221">在 URL 中，查詢資訊被分開的路徑資訊，由問號 （？）。</span><span class="sxs-lookup"><span data-stu-id="62e40-221">In a URL, the query information is separated from the path information by a question mark (?).</span></span> <span data-ttu-id="62e40-222">名稱/值組是以等號 （=） 分隔。</span><span class="sxs-lookup"><span data-stu-id="62e40-222">Name/value pairs are separated by an equals sign (=).</span></span> <span data-ttu-id="62e40-223">若要存取單一字串形式的查詢資料，取得<xref:System.Uri.Query%2A>屬性值從<xref:System.Uri>所傳回的物件<xref:System.Net.HttpListenerRequest.Url%2A>。</span><span class="sxs-lookup"><span data-stu-id="62e40-223">To access the query data as a single string, get the <xref:System.Uri.Query%2A> property value from the <xref:System.Uri> object returned by <xref:System.Net.HttpListenerRequest.Url%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62e40-224">查詢時不含等號 (範例： [ http://www.contoso.com/query.htm?Name ](http://www.contoso.com/query.htm?Name) ) 新增至`null`中的索引鍵<xref:System.Collections.Specialized.NameValueCollection>。</span><span class="sxs-lookup"><span data-stu-id="62e40-224">Queries without an equal sign (example: [http://www.contoso.com/query.htm?Name](http://www.contoso.com/query.htm?Name) ) are added to the `null` key in the <xref:System.Collections.Specialized.NameValueCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-225">下列程式碼範例示範如何使用<xref:System.Net.HttpListenerRequest.QueryString%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-225">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.QueryString%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RawUrl">
      <MemberSignature Language="C#" Value="public string RawUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RawUrl" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RawUrl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RawUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RawUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RawUrl : string" Usage="System.Net.HttpListenerRequest.RawUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-226">Gets the URL information (without the host and port) requested by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-226">Gets the URL information (without the host and port) requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-227">A <see cref="T:System.String" /> ，其中包含這個要求的原始 URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-227">A <see cref="T:System.String" /> that contains the raw URL for this request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-228">原始的 URL 被定義為下列網域資訊的 URL 的一部分。</span><span class="sxs-lookup"><span data-stu-id="62e40-228">The raw URL is defined as the part of the URL following the domain information.</span></span> <span data-ttu-id="62e40-229">URL 字串中`http://www.contoso.com/articles/recent.aspx`，原始的 URL 是`/articles/recent.aspx`。</span><span class="sxs-lookup"><span data-stu-id="62e40-229">In the URL string `http://www.contoso.com/articles/recent.aspx`, the raw URL is `/articles/recent.aspx`.</span></span> <span data-ttu-id="62e40-230">如果有的話，原始的 URL 會包含查詢字串。</span><span class="sxs-lookup"><span data-stu-id="62e40-230">The raw URL includes the query string, if present.</span></span>  
  
 <span data-ttu-id="62e40-231">若要取得主機和連接埠資訊，請使用<xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-231">To obtain the host and port information, use the <xref:System.Net.HttpListenerRequest.RemoteEndPoint%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-232">下列程式碼範例示範如何使用<xref:System.Net.HttpListenerRequest.RawUrl%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-232">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RemoteEndPoint">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPoint RemoteEndPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPoint RemoteEndPoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteEndPoint As IPEndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPoint ^ RemoteEndPoint { System::Net::IPEndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteEndPoint : System.Net.IPEndPoint" Usage="System.Net.HttpListenerRequest.RemoteEndPoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-233">Gets the client IP address and port number from which the request originated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-233">Gets the client IP address and port number from which the request originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-234">
            <see cref="T:System.Net.IPEndPoint" />表示起始要求的 IP 位址和連接埠號碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-234">An <see cref="T:System.Net.IPEndPoint" /> that represents the IP address and port number from which the request originated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="62e40-235">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-235">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#17](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="RequestTraceIdentifier">
      <MemberSignature Language="C#" Value="public Guid RequestTraceIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid RequestTraceIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestTraceIdentifier As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid RequestTraceIdentifier { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.RequestTraceIdentifier : Guid" Usage="System.Net.HttpListenerRequest.RequestTraceIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO("Always returns Guid.Empty")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-236">Gets the request identifier of the incoming HTTP request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-236">Gets the request identifier of the incoming HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-237">A<see cref="T:System.Guid" />物件，其中包含 HTTP 要求的識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-237">A <see cref="T:System.Guid" /> object that contains the identifier of the HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceName">
      <MemberSignature Language="C#" Value="public string ServiceName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.ServiceName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceName : string" Usage="System.Net.HttpListenerRequest.ServiceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-238">Gets the Service Provider Name (SPN) that the client sent on the request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-238">Gets the Service Provider Name (SPN) that the client sent on the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-239">A <see cref="T:System.String" /> ，其中包含用戶端傳送要求的 SPN。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-239">A <see cref="T:System.String" /> that contains the SPN the client sent on the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-240">應用程式可以使用<xref:System.Net.HttpListenerRequest.ServiceName%2A>屬性，以執行自訂的服務提供名稱 (SPN) 驗證。</span><span class="sxs-lookup"><span data-stu-id="62e40-240">An application could use the <xref:System.Net.HttpListenerRequest.ServiceName%2A> property to perform custom Service Provide Name (SPN) validation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.TransportContext" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="TransportContext">
      <MemberSignature Language="C#" Value="public System.Net.TransportContext TransportContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.TransportContext TransportContext" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.TransportContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TransportContext As TransportContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::TransportContext ^ TransportContext { System::Net::TransportContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TransportContext : System.Net.TransportContext" Usage="System.Net.HttpListenerRequest.TransportContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.TransportContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-241">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-241">Gets the <see cref="T:System.Net.TransportContext" /> for the client request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-242">A<see cref="T:System.Net.TransportContext" />用戶端要求的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-242">A <see cref="T:System.Net.TransportContext" /> object for the client request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-243"><xref:System.Net.TransportContext>屬性可以用來擷取之通道繫結語彙基元 (CBT)<xref:System.Net.HttpListenerRequest>送出使用 HTTPS。</span><span class="sxs-lookup"><span data-stu-id="62e40-243">The <xref:System.Net.TransportContext> property can be used to retrieve the channel binding token (CBT) for an <xref:System.Net.HttpListenerRequest> which was sent using HTTPS.</span></span>  
  
 <span data-ttu-id="62e40-244">應用程式可以使用<xref:System.Net.TransportContext>屬性，以執行自訂驗證，使用呼叫原生 Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021)函式。</span><span class="sxs-lookup"><span data-stu-id="62e40-244">An application could use the <xref:System.Net.TransportContext> property to perform custom authentication using calls to the native Win32 [AcceptSecurityContext](http://go.microsoft.com/fwlink/?LinkId=147021) function.</span></span>  
  
 <span data-ttu-id="62e40-245">如果應用程式嘗試擷取之通道繫結語彙基元 (CBT) 從此<xref:System.Net.HttpListenerRequest.TransportContext%2A>屬性使用<xref:System.Net.TransportContext.GetChannelBinding%2A>方法並<xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind>不是<xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>，則<xref:System.Net.HttpListenerRequest>將會擲回<xref:System.NotSupportedException>。</span><span class="sxs-lookup"><span data-stu-id="62e40-245">If an application attempts to retrieve the channel binding token (CBT) from this <xref:System.Net.HttpListenerRequest.TransportContext%2A> property using the <xref:System.Net.TransportContext.GetChannelBinding%2A> method and the <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind> is not <xref:System.Security.Authentication.ExtendedProtection.ChannelBindingKind.Endpoint>, then the <xref:System.Net.HttpListenerRequest> will throw <xref:System.NotSupportedException>.</span></span> <span data-ttu-id="62e40-246"><xref:System.Net.HttpListenerRequest>會覆寫<xref:System.Net.TransportContext.GetChannelBinding%2A>的內部實作的方法。</span><span class="sxs-lookup"><span data-stu-id="62e40-246">The <xref:System.Net.HttpListenerRequest> overrides the <xref:System.Net.TransportContext.GetChannelBinding%2A> method with an internal implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.HttpListener.DefaultServiceNames" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionPolicy" />
        <altmember cref="P:System.Net.HttpListener.ExtendedProtectionSelectorDelegate" />
        <altmember cref="T:System.Net.HttpListener.ExtendedProtectionSelector" />
        <altmember cref="P:System.Net.HttpListenerRequest.ServiceName" />
        <altmember cref="N:System.Security.Authentication.ExtendedProtection" />
        <altmember cref="T:System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy" />
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public Uri Url { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Url" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.Url" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Url As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Url { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Url : Uri" Usage="System.Net.HttpListenerRequest.Url" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-247">Gets the <see cref="T:System.Uri" /> object requested by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-247">Gets the <see cref="T:System.Uri" /> object requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-248">A<see cref="T:System.Uri" />物件，可識別用戶端所要求的資源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-248">A <see cref="T:System.Uri" /> object that identifies the resource requested by the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-249"><xref:System.Net.HttpListenerRequest.Url%2A>屬性可讓您取得所有可用的資訊<xref:System.Uri>物件。</span><span class="sxs-lookup"><span data-stu-id="62e40-249">The <xref:System.Net.HttpListenerRequest.Url%2A> property allows you to obtain all the information available from a <xref:System.Uri> object.</span></span> <span data-ttu-id="62e40-250">如果您需要知道 URI 要求的原始文字，請考慮使用<xref:System.Net.HttpListenerRequest.RawUrl%2A>屬性改為。</span><span class="sxs-lookup"><span data-stu-id="62e40-250">If you need to know only the raw text of the URI request, consider using the <xref:System.Net.HttpListenerRequest.RawUrl%2A> property instead.</span></span>  
  
 <span data-ttu-id="62e40-251"><xref:System.Net.HttpListenerRequest.Url%2A>屬性為 null 如果<xref:System.Uri>從用戶端無法剖析。</span><span class="sxs-lookup"><span data-stu-id="62e40-251">The <xref:System.Net.HttpListenerRequest.Url%2A> property is null if the <xref:System.Uri> from the client could not be parsed.</span></span>  
  
 <span data-ttu-id="62e40-252"><xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>屬性會指出如果<xref:System.Net.HttpListener>使用原始未逸出的 URI，而不是轉換的 URI，其中任何百分比編碼的值會轉換，並且會採取其他的正規化步驟。</span><span class="sxs-lookup"><span data-stu-id="62e40-252">The <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property indicates if <xref:System.Net.HttpListener> uses the raw unescaped URI instead of the converted URI where any percent-encoded values are converted and other normalization steps are taken.</span></span>  
  
 <span data-ttu-id="62e40-253">當<xref:System.Net.HttpListener>執行個體收到的要求，透過`http.sys`服務，它會建立所提供的 URI 字串的執行個體`http.sys`，並公開為<xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-253">When a <xref:System.Net.HttpListener> instance receives a request through the `http.sys` service, it creates an instance of the URI string provided by `http.sys`, and exposes it as the <xref:System.Net.HttpListenerRequest.Url%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="62e40-254">`http.sys`服務會公開兩個要求的 URI 字串：</span><span class="sxs-lookup"><span data-stu-id="62e40-254">The `http.sys` service exposes two request URI strings:</span></span>  
  
-   <span data-ttu-id="62e40-255">原始 URI</span><span class="sxs-lookup"><span data-stu-id="62e40-255">Raw URI</span></span>  
  
-   <span data-ttu-id="62e40-256">轉換的 URI</span><span class="sxs-lookup"><span data-stu-id="62e40-256">Converted URI</span></span>  
  
 <span data-ttu-id="62e40-257">未經處理的 URI 是<xref:System.Uri?displayProperty=nameWithType>HTTP 要求的要求行中提供：</span><span class="sxs-lookup"><span data-stu-id="62e40-257">The raw URI is the <xref:System.Uri?displayProperty=nameWithType> provided in the request line of a HTTP request:</span></span>  
  
 `GET /path/`  
  
 `Host: www.contoso.com`  
  
 <span data-ttu-id="62e40-258">所提供的原始 URI`http.sys`前面所述，此要求是"/ 路徑 /"。</span><span class="sxs-lookup"><span data-stu-id="62e40-258">The raw URI provided by `http.sys` for the request mentioned above, is "/path/".</span></span> <span data-ttu-id="62e40-259">這表示透過網路傳送下列 HTTP 動詞命令的字串。</span><span class="sxs-lookup"><span data-stu-id="62e40-259">This represents the string following the HTTP verb as it was sent over the network.</span></span>  
  
 <span data-ttu-id="62e40-260">`http.sys`服務會使用 HTTP 要求行中所提供的 URI 要求中所提供的資訊來建立轉換的 URI 和主機標頭，以判斷原始伺服器要求應該轉送到。</span><span class="sxs-lookup"><span data-stu-id="62e40-260">The `http.sys` service creates a converted URI from the information provided in the request using the URI provided in the HTTP request line and the Host header to determine the origin server the request should be forwarded to.</span></span> <span data-ttu-id="62e40-261">這是藉由比較從已註冊的 URI 前置詞的一組與要求的資訊。</span><span class="sxs-lookup"><span data-stu-id="62e40-261">This is done by comparing the information from the request with a set of registered URI prefixes.</span></span> <span data-ttu-id="62e40-262">為了能夠比較這些值，需要進行某些要求的正規化。</span><span class="sxs-lookup"><span data-stu-id="62e40-262">In order to be able to compare those values, some normalization to the request needs to be done.</span></span> <span data-ttu-id="62e40-263">上述轉換的 URI 範例會是，如下所示：</span><span class="sxs-lookup"><span data-stu-id="62e40-263">For the sample above the converted URI would be as follows:</span></span>  
  
 `http://www.contoso.com/path/`  
  
 <span data-ttu-id="62e40-264">`http.sys`服務結合了<xref:System.Uri.Host%2A?displayProperty=nameWithType>屬性值，並建立轉換的 URI 要求行中的字串。</span><span class="sxs-lookup"><span data-stu-id="62e40-264">The `http.sys` service combines the <xref:System.Uri.Host%2A?displayProperty=nameWithType> property value and the string in the request line to create a converted URI.</span></span> <span data-ttu-id="62e40-265">颾魤 ㄛ`http.sys`而<xref:System.Uri?displayProperty=nameWithType>類別也會執行下列動作：</span><span class="sxs-lookup"><span data-stu-id="62e40-265">In addition, `http.sys` and the <xref:System.Uri?displayProperty=nameWithType> class also do the following:</span></span>  
  
-   <span data-ttu-id="62e40-266">取消-逸出所有百分比編碼的值。</span><span class="sxs-lookup"><span data-stu-id="62e40-266">Un-escapes all percent encoded values.</span></span>  
  
-   <span data-ttu-id="62e40-267">將百分比編碼為 utf-16 字元表示法的非 ASCII 字元。</span><span class="sxs-lookup"><span data-stu-id="62e40-267">Converts percent-encoded non-ASCII characters into a UTF-16 character representation.</span></span> <span data-ttu-id="62e40-268">請注意，Unicode 字元 （Unicode 編碼使用 %uxxxx 格式） 以及支援 utf-8 和 ANSI/DBCS 字元。</span><span class="sxs-lookup"><span data-stu-id="62e40-268">Note that UTF-8 and ANSI/DBCS characters are supported as well as Unicode characters (Unicode encoding using the %uXXXX format).</span></span>  
  
-   <span data-ttu-id="62e40-269">執行其他的正規化步驟，例如路徑壓縮。</span><span class="sxs-lookup"><span data-stu-id="62e40-269">Executes other normalization steps, like path compression.</span></span>  
  
 <span data-ttu-id="62e40-270">因為要求未包含任何百分比編碼的值使用的編碼方式相關資訊，它可能無法判斷正確的編碼方式，就只是藉由剖析的百分比編碼的值。</span><span class="sxs-lookup"><span data-stu-id="62e40-270">Since the request doesn't contain any information about the encoding used for percent-encoded values, it may not be possible to determine the correct encoding just by parsing the percent-encoded values.</span></span>  
  
 <span data-ttu-id="62e40-271">因此`http.sys`提供兩個登錄機碼修改程序：</span><span class="sxs-lookup"><span data-stu-id="62e40-271">Therefore `http.sys` provides two registry keys for modifying the process:</span></span>  
  
|<span data-ttu-id="62e40-272">登錄機碼</span><span class="sxs-lookup"><span data-stu-id="62e40-272">Registry Key</span></span>|<span data-ttu-id="62e40-273">預設值</span><span class="sxs-lookup"><span data-stu-id="62e40-273">Default Value</span></span>|<span data-ttu-id="62e40-274">描述</span><span class="sxs-lookup"><span data-stu-id="62e40-274">Description</span></span>|  
|------------------|-------------------|-----------------|  
|<span data-ttu-id="62e40-275">EnableNonUTF8</span><span class="sxs-lookup"><span data-stu-id="62e40-275">EnableNonUTF8</span></span>|<span data-ttu-id="62e40-276">1</span><span class="sxs-lookup"><span data-stu-id="62e40-276">1</span></span>|<span data-ttu-id="62e40-277">如果是零，`http.sys`接受僅 UTF-8 編碼的 Url。</span><span class="sxs-lookup"><span data-stu-id="62e40-277">If zero, `http.sys` accepts only UTF-8-encoded URLs.</span></span><br /><br /> <span data-ttu-id="62e40-278">如果不是零，`http.sys`也接受 ANSI 編碼或 DBCS 編碼在要求中的 Url。</span><span class="sxs-lookup"><span data-stu-id="62e40-278">If non-zero, `http.sys` also accepts ANSI-encoded or DBCS-encoded URLs in requests.</span></span>|  
|<span data-ttu-id="62e40-279">FavorUTF8</span><span class="sxs-lookup"><span data-stu-id="62e40-279">FavorUTF8</span></span>|<span data-ttu-id="62e40-280">1</span><span class="sxs-lookup"><span data-stu-id="62e40-280">1</span></span>|<span data-ttu-id="62e40-281">如果不是零，`http.sys`一律要解碼的 URL 為 utf-8 第一次; 如果該轉換會失敗，而且 EnableNonUTF8 為非零的嘗試，Http.sys，然後嘗試將它解碼為 ANSI 或 DBCS。</span><span class="sxs-lookup"><span data-stu-id="62e40-281">If non-zero, `http.sys` always tries to decode a URL as UTF-8 first; if that conversion fails and EnableNonUTF8 is non-zero, Http.sys then tries to decode it as ANSI or DBCS.</span></span><br /><br /> <span data-ttu-id="62e40-282">如果是零 （和 EnableNonUTF8 為非零）`http.sys`嘗試將它解碼為 ANSI 或 DBCS; 如果不成功，它嘗試 utf-8 轉換。</span><span class="sxs-lookup"><span data-stu-id="62e40-282">If zero (and EnableNonUTF8 is non-zero), `http.sys` tries to decode it as ANSI or DBCS; if that is not successful, it tries a UTF-8 conversion.</span></span>|  
  
 <span data-ttu-id="62e40-283">當<xref:System.Net.HttpListener>收到要求時，它會使用轉換的 URI，從`http.sys`來作為輸入<xref:System.Net.HttpListenerRequest.Url%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-283">When <xref:System.Net.HttpListener> receives a request, it uses the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 <span data-ttu-id="62e40-284">沒有需要支援在 Uri 中的字元和數字以外的字元。</span><span class="sxs-lookup"><span data-stu-id="62e40-284">There is a need for supporting characters besides characters and numbers in URIs.</span></span> <span data-ttu-id="62e40-285">舉例來說，下列 URI，用來擷取客戶的客戶資訊數字"1/3812 」:</span><span class="sxs-lookup"><span data-stu-id="62e40-285">An example is the following URI, which is used to retrieve customer information for customer number "1/3812":</span></span>  
  
 `http://www.contoso.com/Customer('1%2F3812')/`  
  
 <span data-ttu-id="62e40-286">請注意百分比編碼中的斜線的 Uri (%2f)。</span><span class="sxs-lookup"><span data-stu-id="62e40-286">Note the percent-encoded slash in the Uri (%2F).</span></span> <span data-ttu-id="62e40-287">這是必要的因為在此情況下的斜線字元代表的資料，不是路徑分隔符號。</span><span class="sxs-lookup"><span data-stu-id="62e40-287">This is necessary, since in this case the slash character represents data and not a path delimiter.</span></span>  
  
 <span data-ttu-id="62e40-288">將字串傳遞至 Uri 建構函式會導致下列 URI:</span><span class="sxs-lookup"><span data-stu-id="62e40-288">Passing the string to Uri constructor will lead to the following URI:</span></span>  
  
 `http://www.contoso.com/Customer('1/3812')/`  
  
 <span data-ttu-id="62e40-289">將路徑分割成其區段，會導致下列項目：</span><span class="sxs-lookup"><span data-stu-id="62e40-289">Splitting the path into its segments would result in the following elements:</span></span>  
  
 `Customer('1`  
  
 `3812')`  
  
 <span data-ttu-id="62e40-290">這不是要求的寄件者的意圖。</span><span class="sxs-lookup"><span data-stu-id="62e40-290">This is not the intent of the sender of the request.</span></span>  
  
 <span data-ttu-id="62e40-291">如果<xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A>屬性設為 false，則當<xref:System.Net.HttpListener>收到要求時，它會使用原始 URI，而不是從轉換的 URI`http.sys`來作為輸入<xref:System.Net.HttpListenerRequest.Url%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-291">If the <xref:System.Net.Configuration.HttpListenerElement.UnescapeRequestUrl%2A> property is set to false, then when the <xref:System.Net.HttpListener> receives a request, it uses the raw URI instead of the converted URI from `http.sys` as input to the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-292">下列程式碼範例示範如何使用<xref:System.Net.HttpListenerRequest.Url%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-292">The following code example demonstrates using the <xref:System.Net.HttpListenerRequest.Url%2A> property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Configuration.HttpListenerElement" />
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UrlReferrer">
      <MemberSignature Language="C#" Value="public Uri UrlReferrer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri UrlReferrer" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UrlReferrer As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ UrlReferrer { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UrlReferrer : Uri" Usage="System.Net.HttpListenerRequest.UrlReferrer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-293">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-293">Gets the Uniform Resource Identifier (URI) of the resource that referred the client to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-294">A<see cref="T:System.Uri" />物件，其中包含要求的文字<see cref="F:System.Net.HttpRequestHeader.Referer" />標頭，或<see langword="null" />如果標頭未包含在要求中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-294">A <see cref="T:System.Uri" /> object that contains the text of the request's <see cref="F:System.Net.HttpRequestHeader.Referer" /> header, or <see langword="null" /> if the header was not included in the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-295">如果用戶端都遵循超連結，要求的 uri，其要求可能會包含`Referrer`識別包含超連結的資源 URI 的標頭。</span><span class="sxs-lookup"><span data-stu-id="62e40-295">If a client has followed a hyperlink to the requested URI, its request might contain a `Referrer` header that identifies the URI of the resource that contained the hyperlink.</span></span>  
  
 <span data-ttu-id="62e40-296">用戶端可以假冒或選擇不呈現<xref:System.Net.HttpRequestHeader.Referer>標頭。</span><span class="sxs-lookup"><span data-stu-id="62e40-296">Clients can falsify or choose not to present a <xref:System.Net.HttpRequestHeader.Referer> header.</span></span> <span data-ttu-id="62e40-297">因此，雖然<xref:System.Net.HttpListenerRequest.UrlReferrer%2A>屬性可用於找出基本的 Web 流量的趨勢; 您應該使用它做為一部分的授權配置來控制資料的存取權。</span><span class="sxs-lookup"><span data-stu-id="62e40-297">Therefore, while the <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> property can be useful for identifying basic trends in Web traffic; you should not use it as part of an authorization scheme to control access to data.</span></span>  
  
 <span data-ttu-id="62e40-298">要求標頭的完整清單，請參閱<xref:System.Net.HttpRequestHeader>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="62e40-298">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="62e40-299"><xref:System.Net.HttpListenerRequest.UrlReferrer%2A>為 null 時沒有任何`Referrer`要求標頭或當`Referrer`標頭在要求中存在，但是不會剖析為有效<xref:System.Uri>。</span><span class="sxs-lookup"><span data-stu-id="62e40-299">The <xref:System.Net.HttpListenerRequest.UrlReferrer%2A> is null when there is no `Referrer` header in the request or when the `Referrer` header is present in the request but does not parse to a valid <xref:System.Uri>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-300">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-300">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Net.HttpListenerRequest.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-301">Gets the user agent presented by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-301">Gets the user agent presented by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-302">A<see cref="T:System.String" />物件，其中包含要求的文字<see langword="User-Agent" />標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-302">A <see cref="T:System.String" /> object that contains the text of the request's <see langword="User-Agent" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-303">`User-Agent`標頭通常會包含識別用來產生要求的軟體的名稱和版本號碼的文字。</span><span class="sxs-lookup"><span data-stu-id="62e40-303">The `User-Agent` header typically contains text that identifies the name and version number of the software used to generate the request.</span></span>  
  
 <span data-ttu-id="62e40-304">要求標頭的完整清單，請參閱<xref:System.Net.HttpRequestHeader>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="62e40-304">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
 <span data-ttu-id="62e40-305"><xref:System.Net.HttpListenerRequest.UserAgent%2A>為 null 時沒有任何`User-Agent`要求標頭。</span><span class="sxs-lookup"><span data-stu-id="62e40-305">The <xref:System.Net.HttpListenerRequest.UserAgent%2A> is null when there is no `User-Agent` header in the request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-306">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-306">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostAddress">
      <MemberSignature Language="C#" Value="public string UserHostAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostAddress : string" Usage="System.Net.HttpListenerRequest.UserHostAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-307">Gets the server IP address and port number to which the request is directed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-307">Gets the server IP address and port number to which the request is directed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-308">A<see cref="T:System.String" />包含主機位址資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-308">A <see cref="T:System.String" /> that contains the host address information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-309">這個屬性所傳回的資訊也會提供<xref:System.Net.HttpListenerRequest.LocalEndPoint%2A>屬性值。</span><span class="sxs-lookup"><span data-stu-id="62e40-309">The information returned by this property is also available in the <xref:System.Net.HttpListenerRequest.LocalEndPoint%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-310">下列程式碼範例會顯示這個屬性的值。</span><span class="sxs-lookup"><span data-stu-id="62e40-310">The following code example displays the value of this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserHostName">
      <MemberSignature Language="C#" Value="public string UserHostName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserHostName" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserHostName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserHostName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserHostName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserHostName : string" Usage="System.Net.HttpListenerRequest.UserHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-311">Gets the DNS name and, if provided, the port number specified by the client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-311">Gets the DNS name and, if provided, the port number specified by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-312">A<see cref="T:System.String" />值，包含要求的文字<see langword="Host" />標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-312">A <see cref="T:System.String" /> value that contains the text of the request's <see langword="Host" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-313">`Host`標頭包含要求的伺服器主機名稱和連接埠號碼，如果指定，並以冒號分隔 (例如`www.contoso.com:8080`)。</span><span class="sxs-lookup"><span data-stu-id="62e40-313">The `Host` header contains the requested server host name and port number, if specified, separated by a colon (for example, `www.contoso.com:8080`).</span></span>  
  
 <span data-ttu-id="62e40-314">您可以使用這個屬性來傳回不同的回應，根據要求中指定的主機名稱。</span><span class="sxs-lookup"><span data-stu-id="62e40-314">You can use this property to return different responses depending on the host name specified in the request.</span></span>  
  
 <span data-ttu-id="62e40-315">要求標頭的完整清單，請參閱<xref:System.Net.HttpRequestHeader>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="62e40-315">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-316">下列程式碼範例示範如何使用這個屬性。</span><span class="sxs-lookup"><span data-stu-id="62e40-316">The following code example demonstrates using this property.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
    <Member MemberName="UserLanguages">
      <MemberSignature Language="C#" Value="public string[] UserLanguages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] UserLanguages" />
      <MemberSignature Language="DocId" Value="P:System.Net.HttpListenerRequest.UserLanguages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserLanguages As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ UserLanguages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserLanguages : string[]" Usage="System.Net.HttpListenerRequest.UserLanguages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.HttpListener</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62e40-317">Gets the natural languages that are preferred for the response.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-317">Gets the natural languages that are preferred for the response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62e40-318">A<see cref="T:System.String" />陣列，其中包含在要求中指定的語言<see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" />標頭或<see langword="null" />如果用戶端要求沒有包含<see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" />標頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="62e40-318">A <see cref="T:System.String" /> array that contains the languages specified in the request's <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header or <see langword="null" /> if the client request did not include an <see cref="F:System.Net.HttpRequestHeader.AcceptLanguage" /> header.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62e40-319">如需詳細的說明`Accept-Language`標頭，請參閱 RFC 2616 節 14.4，位於[ https://www.rfc-editor.org ](https://www.rfc-editor.org/)。</span><span class="sxs-lookup"><span data-stu-id="62e40-319">For a detailed description of the `Accept-Language` header, see RFC 2616 Section 14.4, available at [https://www.rfc-editor.org](https://www.rfc-editor.org/).</span></span>  
  
 <span data-ttu-id="62e40-320">要求標頭的完整清單，請參閱<xref:System.Net.HttpRequestHeader>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="62e40-320">For a complete list of request headers, see the <xref:System.Net.HttpRequestHeader> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62e40-321">下列程式碼範例會顯示從要求的語言`Accept-Language`標頭。</span><span class="sxs-lookup"><span data-stu-id="62e40-321">The following code example displays the languages from the request's `Accept-Language` header.</span></span>  
  
 [!code-csharp[Net_Listener_Basic#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Net_Listener_Basic/CS/test.cs#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.HttpListener" />
        <altmember cref="T:System.Net.HttpListenerContext" />
        <altmember cref="T:System.Net.HttpListenerResponse" />
      </Docs>
    </Member>
  </Members>
</Type>