<Type Name="CredentialCache" FullName="System.Net.CredentialCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="894e0d53c0aaf6a45547b3e6846b35c176d742aa" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57956722" /></Metadata><TypeSignature Language="C#" Value="public class CredentialCache : System.Collections.IEnumerable, System.Net.ICredentials, System.Net.ICredentialsByHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CredentialCache extends System.Object implements class System.Collections.IEnumerable, class System.Net.ICredentials, class System.Net.ICredentialsByHost" />
  <TypeSignature Language="DocId" Value="T:System.Net.CredentialCache" />
  <TypeSignature Language="VB.NET" Value="Public Class CredentialCache&#xA;Implements ICredentials, ICredentialsByHost, IEnumerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CredentialCache : System::Collections::IEnumerable, System::Net::ICredentials, System::Net::ICredentialsByHost" />
  <TypeSignature Language="F#" Value="type CredentialCache = class&#xA;    interface ICredentials&#xA;    interface ICredentialsByHost&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentials</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Net.ICredentialsByHost</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="9978c-101">提供多個認證的儲存區。</span><span class="sxs-lookup"><span data-stu-id="9978c-101">Provides storage for multiple credentials.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9978c-102"><xref:System.Net.CredentialCache>類別會儲存多個網際網路資源的認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-102">The <xref:System.Net.CredentialCache> class stores credentials for multiple Internet resources.</span></span> <span data-ttu-id="9978c-103">需要存取多個資源的應用程式可以儲存在這些資源的認證<xref:System.Net.CredentialCache>再提供適當的網際網路資源時所需的認證集的執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-103">Applications that need to access multiple resources can store the credentials for those resources in a <xref:System.Net.CredentialCache> instance that then provides the proper set of credentials to the Internet resource when required.</span></span> <span data-ttu-id="9978c-104">當<xref:System.Net.CredentialCache.GetCredential%2A>呼叫方法、 它會比較統一資源識別元 (URI) 和提供的驗證型別儲存在快取，並傳回第一組相符的認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-104">When the <xref:System.Net.CredentialCache.GetCredential%2A> method is called, it compares the Uniform Resource Identifier (URI) and authentication type provided with those stored in the cache and returns the first set of credentials that match.</span></span>  
  
 <span data-ttu-id="9978c-105"><xref:System.Net.CredentialCache.DefaultCredentials%2A>屬性包含目前的安全性內容的系統認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-105">The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property contains the system credentials of the current security context.</span></span> <span data-ttu-id="9978c-106">用戶端應用程式，這些代表使用者名稱、 密碼和網域目前已登入的使用者。</span><span class="sxs-lookup"><span data-stu-id="9978c-106">For client applications, these represent the user name, password, and domain of the user who is currently logged in.</span></span> <span data-ttu-id="9978c-107">ASP.NET 應用程式，預設認證是使用者的認證登入的使用者或使用者被模擬。</span><span class="sxs-lookup"><span data-stu-id="9978c-107">For ASP.NET applications, the default credentials are the user credentials of the logged-in user or the user being impersonated.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9978c-108">下列程式碼範例會初始化<xref:System.Net.CredentialCache>具有多個安全性認證和使用這些認證與<xref:System.Net.WebRequest>。</span><span class="sxs-lookup"><span data-stu-id="9978c-108">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.ICredentials" />
    <altmember cref="P:System.Net.WebRequest.Credentials" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CredentialCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CredentialCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9978c-109">建立 <see cref="T:System.Net.CredentialCache" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-109">Creates a new instance of the <see cref="T:System.Net.CredentialCache" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9978c-110">建構函式建立<xref:System.Net.CredentialCache>執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-110">The constructor creates a <xref:System.Net.CredentialCache> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9978c-111">下列程式碼範例會初始化<xref:System.Net.CredentialCache>具有多個安全性認證和使用這些認證與<xref:System.Net.WebRequest>。</span><span class="sxs-lookup"><span data-stu-id="9978c-111">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9978c-112">將 <see cref="T:System.Net.NetworkCredential" /> 執行個體加入至認證快取。</span><span class="sxs-lookup"><span data-stu-id="9978c-112">Adds a <see cref="T:System.Net.NetworkCredential" /> instance to the credential cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (Uri uriPrefix, string authType, System.Net.NetworkCredential cred);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Uri uriPrefix, string authType, class System.Net.NetworkCredential cred) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.Uri,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (uriPrefix As Uri, authType As String, cred As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(Uri ^ uriPrefix, System::String ^ authType, System::Net::NetworkCredential ^ cred);" />
      <MemberSignature Language="F#" Value="member this.Add : Uri * string * System.Net.NetworkCredential -&gt; unit" Usage="credentialCache.Add (uriPrefix, authType, cred)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
        <Parameter Name="cred" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="9978c-113"><see cref="T:System.Uri" />，指定認證允許存取之資源的 URI 前置詞。</span><span class="sxs-lookup"><span data-stu-id="9978c-113">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential grants access to.</span></span></param>
        <param name="authType"><span data-ttu-id="9978c-114">驗證配置，由在 <paramref name="uriPrefix" /> 中指名的資源所使用。</span><span class="sxs-lookup"><span data-stu-id="9978c-114">The authentication scheme used by the resource named in <paramref name="uriPrefix" />.</span></span></param>
        <param name="cred"><span data-ttu-id="9978c-115"><see cref="T:System.Net.NetworkCredential" />，要加入至認證快取。</span><span class="sxs-lookup"><span data-stu-id="9978c-115">The <see cref="T:System.Net.NetworkCredential" /> to add to the credential cache.</span></span></param>
        <summary><span data-ttu-id="9978c-116">將要搭配 SMTP 以外其他通訊協定使用的 <see cref="T:System.Net.NetworkCredential" /> 執行個體加入至認證快取，並使其與統一資源識別元 (URI) 和驗證通訊協定產生關聯。</span><span class="sxs-lookup"><span data-stu-id="9978c-116">Adds a <see cref="T:System.Net.NetworkCredential" /> instance to the credential cache for use with protocols other than SMTP and associates it with a Uniform Resource Identifier (URI) prefix and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9978c-117"><xref:System.Net.CredentialCache.Add%2A>方法上的芳鄰<xref:System.Net.NetworkCredential>到 SMTP 以外的通訊協定搭配使用的執行個體<xref:System.Net.CredentialCache>。</span><span class="sxs-lookup"><span data-stu-id="9978c-117">The <xref:System.Net.CredentialCache.Add%2A> method places a <xref:System.Net.NetworkCredential> instance for use with protocols other than SMTP into the <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="9978c-118">快取中，加入的順序儲存的認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-118">The cache stores credentials in the order in which they are added to it.</span></span> <span data-ttu-id="9978c-119">當<xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29>呼叫方法，它會傳回適當的比對<xref:System.Net.NetworkCredential>執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-119">When the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method is called, it returns the proper matching <xref:System.Net.NetworkCredential> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9978c-120">下列程式碼範例會初始化<xref:System.Net.CredentialCache>具有多個安全性認證和使用這些認證與<xref:System.Net.WebRequest>。</span><span class="sxs-lookup"><span data-stu-id="9978c-120">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials and uses those credentials with a <xref:System.Net.WebRequest>.</span></span>  
  
 [!code-cpp[Classic CredentialCache.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CredentialCache.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic CredentialCache.Add Example/CS/source.cs#1)]
 [!code-vb[Classic CredentialCache.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic CredentialCache.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9978c-121"><paramref name="uriPrefix" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-121"><paramref name="uriPrefix" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9978c-122">-或-</span><span class="sxs-lookup"><span data-stu-id="9978c-122">-or-</span></span> 
 <span data-ttu-id="9978c-123"><paramref name="authType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-123"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9978c-124">相同的認證會加入多次</span><span class="sxs-lookup"><span data-stu-id="9978c-124">The same credentials are added more than once.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string host, int port, string authenticationType, System.Net.NetworkCredential credential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string host, int32 port, string authenticationType, class System.Net.NetworkCredential credential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Add(System.String,System.Int32,System.String,System.Net.NetworkCredential)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (host As String, port As Integer, authenticationType As String, credential As NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ host, int port, System::String ^ authenticationType, System::Net::NetworkCredential ^ credential);" />
      <MemberSignature Language="F#" Value="member this.Add : string * int * string * System.Net.NetworkCredential -&gt; unit" Usage="credentialCache.Add (host, port, authenticationType, credential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="credential" Type="System.Net.NetworkCredential" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="9978c-125">識別主機電腦的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-125">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="9978c-126"><see cref="T:System.Int32" />，指定 <paramref name="host" /> 上的連接埠。</span><span class="sxs-lookup"><span data-stu-id="9978c-126">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="9978c-127"><see cref="T:System.String" />，識別使用 <paramref name="host" /> 連接到 <paramref name="cred" /> 時，所使用的驗證配置。</span><span class="sxs-lookup"><span data-stu-id="9978c-127">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" /> using <paramref name="cred" />.</span></span></param>
        <param name="credential"><span data-ttu-id="9978c-128"><see cref="T:System.Net.NetworkCredential" />，要加入至認證快取。</span><span class="sxs-lookup"><span data-stu-id="9978c-128">The <see cref="T:System.Net.NetworkCredential" /> to add to the credential cache.</span></span></param>
        <summary><span data-ttu-id="9978c-129">將要搭配 Simple Mail Transfer Protocol (SMTP) 使用的 <see cref="T:System.Net.NetworkCredential" /> 執行個體加入至認證快取，並使其與主機電腦、連接埠和驗證通訊協定產生關聯。</span><span class="sxs-lookup"><span data-stu-id="9978c-129">Adds a <see cref="T:System.Net.NetworkCredential" /> instance for use with SMTP to the credential cache and associates it with a host computer, port, and authentication protocol.</span></span> <span data-ttu-id="9978c-130">使用此方法加入的認證只適用於 SMTP。</span><span class="sxs-lookup"><span data-stu-id="9978c-130">Credentials added using this method are valid for SMTP only.</span></span> <span data-ttu-id="9978c-131">這個方法不適用於 HTTP 或 FTP 要求。</span><span class="sxs-lookup"><span data-stu-id="9978c-131">This method does not work for HTTP or FTP requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9978c-132">這個方法會放置<xref:System.Net.NetworkCredential>執行個體用於 SMTP 到<xref:System.Net.CredentialCache>。</span><span class="sxs-lookup"><span data-stu-id="9978c-132">This method places a <xref:System.Net.NetworkCredential> instance for use with SMTP into the <xref:System.Net.CredentialCache>.</span></span> <span data-ttu-id="9978c-133">快取中，加入的順序儲存的認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-133">The cache stores credentials in the order in which they are added to it.</span></span> <span data-ttu-id="9978c-134">當<xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29>呼叫方法時，它會傳回<xref:System.Net.NetworkCredential>比對選取的執行個體`host`， `port`，和`authType`。</span><span class="sxs-lookup"><span data-stu-id="9978c-134">When the <xref:System.Net.CredentialCache.GetCredential%28System.String%2CSystem.Int32%2CSystem.String%29> method is called, it returns a <xref:System.Net.NetworkCredential> instance that is selected by matching the `host`, `port`, and `authType`.</span></span> <span data-ttu-id="9978c-135">比較是不區分大小寫。</span><span class="sxs-lookup"><span data-stu-id="9978c-135">The comparison is done case-insensitively.</span></span>  
  
 <span data-ttu-id="9978c-136">為支援的值`authType`"NTLM"、"Digest"、"Kerberos"，且"Negotiate"。</span><span class="sxs-lookup"><span data-stu-id="9978c-136">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span>  
  
 <span data-ttu-id="9978c-137">使用此方法加入的認證的有效期僅用於 SMTP。</span><span class="sxs-lookup"><span data-stu-id="9978c-137">Credentials added with this method are only valid for use with SMTP.</span></span> <span data-ttu-id="9978c-138">這個方法不適用於 HTTP 或 FTP 通訊協定。</span><span class="sxs-lookup"><span data-stu-id="9978c-138">This method does not work for HTTP or FTP protocols.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9978c-139">下列程式碼範例會初始化<xref:System.Net.CredentialCache>的多個安全性認證來與 SMTP 搭配使用，並使用其中一個這些認證以<xref:System.Net.Mail.SmtpClient>。</span><span class="sxs-lookup"><span data-stu-id="9978c-139">The following code example initializes a <xref:System.Net.CredentialCache> with multiple security credentials for use with SMTP and uses one of those credentials with a <xref:System.Net.Mail.SmtpClient>.</span></span>  
  
 [!code-cpp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/CPP/source.cpp#1)]
 [!code-csharp[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/cs/source.cs#1)]
 [!code-vb[NCL_Credential.Cache.Add_SMTP#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCL_Credential.Cache.Add_SMTP/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9978c-140"><paramref name="host" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-140"><paramref name="host" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9978c-141">-或-</span><span class="sxs-lookup"><span data-stu-id="9978c-141">-or-</span></span> 
 <span data-ttu-id="9978c-142"><paramref name="authType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-142"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9978c-143"><paramref name="authType" /> 不是接受的值。</span><span class="sxs-lookup"><span data-stu-id="9978c-143"><paramref name="authType" /> not an accepted value.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9978c-144"><paramref name="port" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="9978c-144"><paramref name="port" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentials DefaultCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentials DefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentials ^ DefaultCredentials { System::Net::ICredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCredentials : System.Net.ICredentials" Usage="System.Net.CredentialCache.DefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9978c-145">取得應用程式的系統認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-145">Gets the system credentials of the application.</span></span></summary>
        <value><span data-ttu-id="9978c-146"><see cref="T:System.Net.ICredentials" />，表示應用程式的系統認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-146">An <see cref="T:System.Net.ICredentials" /> that represents the system credentials of the application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9978c-147"><xref:System.Net.CredentialCache.DefaultCredentials%2A>屬性僅適用於 NTLM、 交涉和 Kerberos 驗證。</span><span class="sxs-lookup"><span data-stu-id="9978c-147">The <xref:System.Net.CredentialCache.DefaultCredentials%2A> property applies only to NTLM, negotiate, and Kerberos-based authentication.</span></span>  
  
 <span data-ttu-id="9978c-148"><xref:System.Net.CredentialCache.DefaultCredentials%2A> 表示應用程式執行所在的目前安全性內容的系統認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-148"><xref:System.Net.CredentialCache.DefaultCredentials%2A> represents the system credentials for the current security context in which the application is running.</span></span> <span data-ttu-id="9978c-149">用戶端應用程式，這些通常是使用者執行應用程式的 Windows 認證 （使用者名稱、 密碼和網域）。</span><span class="sxs-lookup"><span data-stu-id="9978c-149">For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application.</span></span> <span data-ttu-id="9978c-150">ASP.NET 應用程式，預設認證是使用者的認證登入的使用者或正在模擬的使用者。</span><span class="sxs-lookup"><span data-stu-id="9978c-150">For ASP.NET applications, the default credentials are the user credentials of the logged-in user, or the user being impersonated.</span></span>  
  
 <span data-ttu-id="9978c-151">若要取得與認證<xref:System.Net.NetworkCredential>執行個體，使用<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="9978c-151">To get the credentials as a <xref:System.Net.NetworkCredential> instance, use the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property.</span></span>  
  
 <span data-ttu-id="9978c-152">為支援的值`authType`"NTLM"、"Digest"、"Kerberos"，且"Negotiate"。</span><span class="sxs-lookup"><span data-stu-id="9978c-152">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span> <span data-ttu-id="9978c-153">這個方法不適用於 HTTP 或 FTP 通訊協定。</span><span class="sxs-lookup"><span data-stu-id="9978c-153">This method does not work for HTTP or FTP protocols.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9978c-154"><xref:System.Net.ICredentials>所傳回的執行個體<xref:System.Net.CredentialCache.DefaultCredentials%2A>不能用來檢視使用者名稱、 密碼或網域的目前安全性內容。</span><span class="sxs-lookup"><span data-stu-id="9978c-154">The <xref:System.Net.ICredentials> instance returned by <xref:System.Net.CredentialCache.DefaultCredentials%2A> cannot be used to view the user name, password, or domain of the current security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9978c-155">下列程式碼範例使用<xref:System.Net.CredentialCache.DefaultCredentials%2A>屬性來取得應用程式的系統認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-155">The following code example uses the <xref:System.Net.CredentialCache.DefaultCredentials%2A> property to get the system credentials of the application.</span></span>  
  
 [!code-cpp[CredentialCache_DefaultCredentials#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CPP/credentialcache_defaultcredentials.cpp#1)]
 [!code-csharp[CredentialCache_DefaultCredentials#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/CS/credentialcache_defaultcredentials.cs#1)]
 [!code-vb[CredentialCache_DefaultCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_DefaultCredentials/VB/credentialcache_defaultcredentials.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="9978c-156">用於讀取 USERNAME 的環境變數。</span><span class="sxs-lookup"><span data-stu-id="9978c-156">for reading the USERNAME environment variable.</span></span> <span data-ttu-id="9978c-157">相關聯的列舉型別： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="9978c-157">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="DefaultNetworkCredentials">
      <MemberSignature Language="C#" Value="public static System.Net.NetworkCredential DefaultNetworkCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.NetworkCredential DefaultNetworkCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultNetworkCredentials As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::NetworkCredential ^ DefaultNetworkCredentials { System::Net::NetworkCredential ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultNetworkCredentials : System.Net.NetworkCredential" Usage="System.Net.CredentialCache.DefaultNetworkCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9978c-158">取得目前安全性內容的網路認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-158">Gets the network credentials of the current security context.</span></span></summary>
        <value><span data-ttu-id="9978c-159"><see cref="T:System.Net.NetworkCredential" />，表示目前使用者或應用程式的網路認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-159">An <see cref="T:System.Net.NetworkCredential" /> that represents the network credentials of the current user or application.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9978c-160">所傳回的認證<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>屬性是僅適用於 NTLM、 交涉和 Kerberos 驗證。</span><span class="sxs-lookup"><span data-stu-id="9978c-160">The credentials returned by the <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> property is applicable only for NTLM, negotiate, and Kerberos-based authentication.</span></span>  
  
 <span data-ttu-id="9978c-161">所傳回的認證<xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A>代表應用程式執行所在的目前安全性內容的驗證認證。</span><span class="sxs-lookup"><span data-stu-id="9978c-161">The credentials returned by <xref:System.Net.CredentialCache.DefaultNetworkCredentials%2A> represents the authentication credentials for the current security context in which the application is running.</span></span> <span data-ttu-id="9978c-162">用戶端應用程式，這些通常是使用者執行應用程式的 Windows 認證 （使用者名稱、 密碼和網域）。</span><span class="sxs-lookup"><span data-stu-id="9978c-162">For a client-side application, these are usually the Windows credentials (user name, password, and domain) of the user running the application.</span></span> <span data-ttu-id="9978c-163">ASP.NET 應用程式，預設網路認證是使用者的認證登入的使用者或正在模擬的使用者。</span><span class="sxs-lookup"><span data-stu-id="9978c-163">For ASP.NET applications, the default network credentials are the user credentials of the logged-in user, or the user being impersonated.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission"><span data-ttu-id="9978c-164">用於讀取 USERNAME 的環境變數。</span><span class="sxs-lookup"><span data-stu-id="9978c-164">for reading the USERNAME environment variable.</span></span> <span data-ttu-id="9978c-165">相關聯的列舉型別： <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="9978c-165">Associated enumeration: <see cref="F:System.Security.Permissions.EnvironmentPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCredential">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9978c-166">傳回與所指定之統一資源識別元 (URI) 或主機以及驗證類型關聯的 <see cref="T:System.Net.NetworkCredential" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-166">Returns a <see cref="T:System.Net.NetworkCredential" /> instance associated with a specified Uniform Resource Identifier (URI) or host, and authentication type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (uriPrefix As Uri, authType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberSignature Language="F#" Value="abstract member GetCredential : Uri * string -&gt; System.Net.NetworkCredential&#xA;override this.GetCredential : Uri * string -&gt; System.Net.NetworkCredential" Usage="credentialCache.GetCredential (uriPrefix, authType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentials.GetCredential(System.Uri,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="9978c-167"><see cref="T:System.Uri" />，指定認證允許存取之資源的 URI 前置詞。</span><span class="sxs-lookup"><span data-stu-id="9978c-167">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential grants access to.</span></span></param>
        <param name="authType"><span data-ttu-id="9978c-168">驗證配置，由在 <paramref name="uriPrefix" /> 中指名的資源所使用。</span><span class="sxs-lookup"><span data-stu-id="9978c-168">The authentication scheme used by the resource named in <paramref name="uriPrefix" />.</span></span></param>
        <summary><span data-ttu-id="9978c-169">傳回與所指定之統一資源識別項 (URI) 和驗證類型關聯的 <see cref="T:System.Net.NetworkCredential" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-169">Returns the <see cref="T:System.Net.NetworkCredential" /> instance associated with the specified Uniform Resource Identifier (URI) and authentication type.</span></span></summary>
        <returns><span data-ttu-id="9978c-170"><see cref="T:System.Net.NetworkCredential" />，或 <see langword="null" /> (如果在快取中沒有相符的認證)。</span><span class="sxs-lookup"><span data-stu-id="9978c-170">A <see cref="T:System.Net.NetworkCredential" /> or, if there is no matching credential in the cache, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9978c-171"><xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29>方法會搜尋<xref:System.Net.CredentialCache>，並傳回<xref:System.Net.NetworkCredential>指定的 URI 和授權類型的執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-171">The <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified URI and authorization type.</span></span> <span data-ttu-id="9978c-172">如果<xref:System.Net.CredentialCache>包含沒有相符<xref:System.Net.NetworkCredential>執行個體，`null`會傳回。</span><span class="sxs-lookup"><span data-stu-id="9978c-172">If the <xref:System.Net.CredentialCache> contains no matching <xref:System.Net.NetworkCredential> instance, `null` is returned.</span></span>  
  
 <span data-ttu-id="9978c-173"><xref:System.Net.CredentialCache.GetCredential%2A> 使用快取中的最長相符的 URI 前置詞，來決定要傳回的授權類型的認證集。</span><span class="sxs-lookup"><span data-stu-id="9978c-173"><xref:System.Net.CredentialCache.GetCredential%2A> uses the longest matching URI prefix in the cache to determine which set of credentials to return for an authorization type.</span></span> <span data-ttu-id="9978c-174">下表顯示範例。</span><span class="sxs-lookup"><span data-stu-id="9978c-174">The following table shows examples.</span></span>  
  
|<span data-ttu-id="9978c-175">URI 前置詞</span><span class="sxs-lookup"><span data-stu-id="9978c-175">URI Prefix</span></span>|<span data-ttu-id="9978c-176">符合</span><span class="sxs-lookup"><span data-stu-id="9978c-176">Matches</span></span>|  
|----------------|-------------|  
|`http://www.contoso.com/portal/news.htm`|<span data-ttu-id="9978c-177">在特定的 Web 網頁的要求`news.htm`。</span><span class="sxs-lookup"><span data-stu-id="9978c-177">Requests for the specific Web page `news.htm`.</span></span>|  
|`http://www.contoso.com/portal/`|<span data-ttu-id="9978c-178">要求中的所有內容`portal`路徑中的，除了頁面`news.htm`。</span><span class="sxs-lookup"><span data-stu-id="9978c-178">Requests for all content in the `portal` path, except the page `news.htm`.</span></span>|  
|`http://www.contoso.com/`|<span data-ttu-id="9978c-179">在所有資源的要求`www.contoso.com`，但不包括在`portal`路徑。</span><span class="sxs-lookup"><span data-stu-id="9978c-179">Requests for all resources at `www.contoso.com`, except those in the `portal` path.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="9978c-180">下列程式碼範例會使用<xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29>方法來傳回<xref:System.Net.NetworkCredential>與指定的 URI 和驗證類型相關聯的執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-180">The following code example uses the <xref:System.Net.CredentialCache.GetCredential%28System.Uri%2CSystem.String%29> method to return the <xref:System.Net.NetworkCredential> instance associated with the specified URI and authentication type.</span></span>  
  
 [!code-cpp[CredentialCache_GetCredential#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetCredential/CPP/credentialcache_getcredential.cpp#1)]
 [!code-csharp[CredentialCache_GetCredential#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetCredential/CS/credentialcache_getcredential.cs#1)]
 [!code-vb[CredentialCache_GetCredential#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetCredential/VB/credentialcache_getcredential.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9978c-181"><paramref name="uriPrefix" /> 或 <paramref name="authType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-181"><paramref name="uriPrefix" /> or <paramref name="authType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential GetCredential (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Net.NetworkCredential GetCredential(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetCredential(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCredential (host As String, port As Integer, authenticationType As String) As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Net::NetworkCredential ^ GetCredential(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="abstract member GetCredential : string * int * string -&gt; System.Net.NetworkCredential&#xA;override this.GetCredential : string * int * string -&gt; System.Net.NetworkCredential" Usage="credentialCache.GetCredential (host, port, authenticationType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Net.ICredentialsByHost.GetCredential(System.String,System.Int32,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="9978c-182">識別主機電腦的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-182">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="9978c-183"><see cref="T:System.Int32" />，指定 <paramref name="host" /> 上的連接埠。</span><span class="sxs-lookup"><span data-stu-id="9978c-183">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="9978c-184"><see cref="T:System.String" />，識別連接到 <paramref name="host" /> 時，所使用的驗證配置。</span><span class="sxs-lookup"><span data-stu-id="9978c-184">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" />.</span></span></param>
        <summary><span data-ttu-id="9978c-185">傳回與指定主機、連接埠和驗證通訊協定關聯的 <see cref="T:System.Net.NetworkCredential" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-185">Returns the <see cref="T:System.Net.NetworkCredential" /> instance associated with the specified host, port, and authentication protocol.</span></span></summary>
        <returns><span data-ttu-id="9978c-186"><see cref="T:System.Net.NetworkCredential" />，或 <see langword="null" /> (如果在快取中沒有相符的認證)。</span><span class="sxs-lookup"><span data-stu-id="9978c-186">A <see cref="T:System.Net.NetworkCredential" /> or, if there is no matching credential in the cache, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9978c-187">這個方法會搜尋<xref:System.Net.CredentialCache>，並傳回<xref:System.Net.NetworkCredential>指定的主機、 連接埠和授權類型的執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-187">This method searches the <xref:System.Net.CredentialCache> and returns the <xref:System.Net.NetworkCredential> instance for the specified host, port, and authorization type.</span></span> <span data-ttu-id="9978c-188">`host`， `port`，並`authType`認證新增至時，所指定的值不區分大小比較值傳遞至此方法<xref:System.Net.CredentialCache>使用<xref:System.Net.CredentialCache.Add%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="9978c-188">The `host`, `port`, and `authType` values passed to this method are case-insensitively compared to the values specified when the credential was added to the <xref:System.Net.CredentialCache> using the <xref:System.Net.CredentialCache.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="9978c-189">為支援的值`authType`"NTLM"、"Digest"、"Kerberos"，且"Negotiate"。</span><span class="sxs-lookup"><span data-stu-id="9978c-189">The supported values for `authType` are "NTLM", "Digest", "Kerberos", and "Negotiate".</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="9978c-190"><paramref name="host" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-190"><paramref name="host" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="9978c-191">-或-</span><span class="sxs-lookup"><span data-stu-id="9978c-191">-or-</span></span> 
 <span data-ttu-id="9978c-192"><paramref name="authType" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-192"><paramref name="authType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="9978c-193"><paramref name="authType" /> 不是接受的值。</span><span class="sxs-lookup"><span data-stu-id="9978c-193"><paramref name="authType" /> not an accepted value.</span></span>  
  
<span data-ttu-id="9978c-194">-或-</span><span class="sxs-lookup"><span data-stu-id="9978c-194">-or-</span></span> 
 <span data-ttu-id="9978c-195"><paramref name="host" /> 等於空字串 ("")。</span><span class="sxs-lookup"><span data-stu-id="9978c-195"><paramref name="host" /> is equal to the empty string ("").</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="9978c-196"><paramref name="port" /> 小於零。</span><span class="sxs-lookup"><span data-stu-id="9978c-196"><paramref name="port" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="credentialCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9978c-197">傳回可以逐一查看 <see cref="T:System.Net.CredentialCache" /> 執行個體的列舉值。</span><span class="sxs-lookup"><span data-stu-id="9978c-197">Returns an enumerator that can iterate through the <see cref="T:System.Net.CredentialCache" /> instance.</span></span></summary>
        <returns><span data-ttu-id="9978c-198">
  <see cref="T:System.Collections.IEnumerator" /> 的 <see cref="T:System.Net.CredentialCache" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-198">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Net.CredentialCache" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9978c-199">下列程式碼範例會使用<xref:System.Net.CredentialCache.GetEnumerator%2A>方法，以傳回可逐一查看的列舉值<xref:System.Net.CredentialCache>執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-199">The following code example uses the <xref:System.Net.CredentialCache.GetEnumerator%2A> method to return an enumerator that can iterate through the <xref:System.Net.CredentialCache> instance.</span></span>  
  
 [!code-cpp[CredentialCache_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CPP/credentialcache_getenumerator.cpp#1)]
 [!code-csharp[CredentialCache_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_GetEnumerator/CS/credentialcache_getenumerator.cs#1)]
 [!code-vb[CredentialCache_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_GetEnumerator/VB/credentialcache_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9978c-200">將 <see cref="T:System.Net.NetworkCredential" /> 執行個體從快取中刪除。</span><span class="sxs-lookup"><span data-stu-id="9978c-200">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (Uri uriPrefix, string authType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Uri uriPrefix, string authType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.Uri,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (uriPrefix As Uri, authType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(Uri ^ uriPrefix, System::String ^ authType);" />
      <MemberSignature Language="F#" Value="member this.Remove : Uri * string -&gt; unit" Usage="credentialCache.Remove (uriPrefix, authType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uriPrefix" Type="System.Uri" />
        <Parameter Name="authType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uriPrefix"><span data-ttu-id="9978c-201"><see cref="T:System.Uri" />，指定認證使用之資源的 URI 前置詞。</span><span class="sxs-lookup"><span data-stu-id="9978c-201">A <see cref="T:System.Uri" /> that specifies the URI prefix of the resources that the credential is used for.</span></span></param>
        <param name="authType"><span data-ttu-id="9978c-202">由在 <paramref name="uriPrefix" /> 中命名的主機所使用的驗證配置。</span><span class="sxs-lookup"><span data-stu-id="9978c-202">The authentication scheme used by the host named in <paramref name="uriPrefix" />.</span></span></param>
        <summary><span data-ttu-id="9978c-203">從快取刪除 <see cref="T:System.Net.NetworkCredential" /> 執行個體，如果它與所指定之統一資源識別元 (URI) 和驗證通訊協定關聯。</span><span class="sxs-lookup"><span data-stu-id="9978c-203">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache if it is associated with the specified Uniform Resource Identifier (URI) prefix and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9978c-204">這個方法會移除<xref:System.Net.NetworkCredential>執行個體<xref:System.Net.CredentialCache>如果指定的 URI 前置詞和驗證通訊協定符合與認證相關聯。</span><span class="sxs-lookup"><span data-stu-id="9978c-204">This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified URI prefix and authentication protocol match those associated with the credential.</span></span> <span data-ttu-id="9978c-205">多次呼叫<xref:System.Net.CredentialCache.Remove%2A>方法相同<xref:System.Net.NetworkCredential>會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="9978c-205">Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.</span></span>  
  
 <span data-ttu-id="9978c-206">如果`authType`已`null`或是`uriPrefix`是`null`，或沒有相符的認證是快取中找到，這個方法不會執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="9978c-206">If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9978c-207">下列程式碼範例會使用這個方法來刪除<xref:System.Net.NetworkCredential>從快取的執行個體。</span><span class="sxs-lookup"><span data-stu-id="9978c-207">The following code example uses this method to delete a <xref:System.Net.NetworkCredential> instance from the cache.</span></span>  
  
 [!code-cpp[CredentialCache_Add_Remove#3](~/samples/snippets/cpp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CPP/credentialcache_add_remove.cpp#3)]
 [!code-csharp[CredentialCache_Add_Remove#3](~/samples/snippets/csharp/VS_Snippets_Remoting/CredentialCache_Add_Remove/CS/credentialcache_add_remove.cs#3)]
 [!code-vb[CredentialCache_Add_Remove#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/CredentialCache_Add_Remove/VB/credentialcache_add_remove.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string host, int port, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string host, int32 port, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.CredentialCache.Remove(System.String,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (host As String, port As Integer, authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ host, int port, System::String ^ authenticationType);" />
      <MemberSignature Language="F#" Value="member this.Remove : string * int * string -&gt; unit" Usage="credentialCache.Remove (host, port, authenticationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="authenticationType" Type="System.String" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="host"><span data-ttu-id="9978c-208">識別主機電腦的 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="9978c-208">A <see cref="T:System.String" /> that identifies the host computer.</span></span></param>
        <param name="port"><span data-ttu-id="9978c-209"><see cref="T:System.Int32" />，指定 <paramref name="host" /> 上的連接埠。</span><span class="sxs-lookup"><span data-stu-id="9978c-209">A <see cref="T:System.Int32" /> that specifies the port to connect to on <paramref name="host" />.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="9978c-210"><see cref="T:System.String" />，識別連接到 <paramref name="host" /> 時，所使用的驗證配置。</span><span class="sxs-lookup"><span data-stu-id="9978c-210">A <see cref="T:System.String" /> that identifies the authentication scheme used when connecting to <paramref name="host" />.</span></span></param>
        <summary><span data-ttu-id="9978c-211">從快取刪除 <see cref="T:System.Net.NetworkCredential" /> 執行個體，如果它與所指定之主機、連接埠和驗證通訊協定關聯。</span><span class="sxs-lookup"><span data-stu-id="9978c-211">Deletes a <see cref="T:System.Net.NetworkCredential" /> instance from the cache if it is associated with the specified host, port, and authentication protocol.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9978c-212">這個方法會移除<xref:System.Net.NetworkCredential>執行個體<xref:System.Net.CredentialCache>如果指定的主機、 連接埠和驗證通訊協定符合與認證相關聯。</span><span class="sxs-lookup"><span data-stu-id="9978c-212">This method removes a <xref:System.Net.NetworkCredential> instance from the <xref:System.Net.CredentialCache> if the specified host, port, and authentication protocol match those associated with the credential.</span></span> <span data-ttu-id="9978c-213">多次呼叫<xref:System.Net.CredentialCache.Remove%2A>方法相同<xref:System.Net.NetworkCredential>會有任何作用。</span><span class="sxs-lookup"><span data-stu-id="9978c-213">Multiple calls to the <xref:System.Net.CredentialCache.Remove%2A> method for the same <xref:System.Net.NetworkCredential> have no effect.</span></span>  
  
 <span data-ttu-id="9978c-214">如果`authType`已`null`或是`uriPrefix`是`null`，或沒有相符的認證是快取中找到，這個方法不會執行任何動作。</span><span class="sxs-lookup"><span data-stu-id="9978c-214">If `authType` is `null` or `uriPrefix` is `null`, or no matching credential is found in the cache, this method does nothing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>