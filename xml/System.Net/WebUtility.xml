<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00077ce3265b7c9b8c9786ed662a0c1ce1775cb1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="40449525" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e850a-101">提供處理 Web 要求時用於編碼和解碼 URL 的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e850a-101">Provides methods for encoding and decoding URLs when processing Web requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e850a-102"><xref:System.Web.HttpUtility>類別包含編碼和解碼公用程式方法，用於進行 HTML 編碼字串。</span><span class="sxs-lookup"><span data-stu-id="e850a-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="e850a-103"><xref:System.Uri?displayProperty=nameWithType>類別也包含方法和屬性，可用於類似的目的。</span><span class="sxs-lookup"><span data-stu-id="e850a-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e850a-104">將 HTTP 傳輸的 HTTP 編碼字串轉換成已解碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-104">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e850a-105">要解碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-105">The string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e850a-106">將 HTTP 傳輸的 HTTP 編碼字串轉換成已解碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-106">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e850a-107">已解碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-107">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e850a-108">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="e850a-108">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e850a-109">HTML 編碼方式將對等的字元實體; 不允許在 HTML 中的字元轉換HTML 解碼反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="e850a-109">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e850a-110">例如，當內嵌在區塊的文字，字元`<`和`>`編碼為`&lt;`和`&gt;`HTTP 傳輸。</span><span class="sxs-lookup"><span data-stu-id="e850a-110">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="e850a-111">如果`value`參數是`null`，然後傳回已解碼的字串是`null`。</span><span class="sxs-lookup"><span data-stu-id="e850a-111">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="e850a-112">如果`value`參數是空字串，則傳回解碼的字串是空字串。</span><span class="sxs-lookup"><span data-stu-id="e850a-112">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e850a-113">要解碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-113">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e850a-114">
            <see cref="T:System.IO.TextWriter" /> 的輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-114">A <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e850a-115">將已 HTML 編碼的字串轉換成已解碼的字串，並將解碼的字串傳送至 <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-115">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e850a-116">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="e850a-116">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e850a-117">HTML 編碼方式將對等的字元實體; 不允許在 HTML 中的字元轉換HTML 解碼反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="e850a-117">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e850a-118">例如，當內嵌在區塊的文字，字元`<`和`>`編碼為`&lt;`和`&gt;`HTTP 傳輸。</span><span class="sxs-lookup"><span data-stu-id="e850a-118">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e850a-119">如果 <paramref name="output" /> 參數不是 <see langword="null" />，<paramref name="value" /> 不能為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-119">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e850a-120">將字串轉換成 HTML 編碼字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-120">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e850a-121">要編碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-121">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e850a-122">將字串轉換成 HTML 編碼字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-122">Converts a string to an HTML-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e850a-123">編碼字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-123">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e850a-124">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="e850a-124">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e850a-125">HTML 編碼方式將對等的字元實體; 不允許在 HTML 中的字元轉換HTML 解碼反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="e850a-125">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e850a-126">例如，當內嵌在區塊的文字，字元`<`和`>`編碼為`&lt;`和`&gt;`HTTP 傳輸。</span><span class="sxs-lookup"><span data-stu-id="e850a-126">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="e850a-127">如果`value`參數是`null`，然後傳回已編碼的字串是`null`。</span><span class="sxs-lookup"><span data-stu-id="e850a-127">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="e850a-128">如果`value`參數是空字串，則傳回編碼的字串是空字串。</span><span class="sxs-lookup"><span data-stu-id="e850a-128">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e850a-129">要編碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-129">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="e850a-130">
            <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-130">A <see cref="T:System.IO.TextWriter" /> output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e850a-131">將字串轉換為 HTML 編碼的字串，並以 <see cref="T:System.IO.TextWriter" /> 輸出資料流的形式傳回輸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-131">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e850a-132">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="e850a-132">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e850a-133">HTML 編碼方式將對等的字元實體; 不允許在 HTML 中的字元轉換HTML 解碼反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="e850a-133">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="e850a-134">例如，當內嵌在區塊的文字，字元`<`和`>`編碼為`&lt;`和`&gt;`HTTP 傳輸。</span><span class="sxs-lookup"><span data-stu-id="e850a-134">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e850a-135">如果 <paramref name="output" /> 參數不是 <see langword="null" />，<paramref name="value" /> 不能為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-135">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="e850a-136">要解碼的 URL 編碼字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-136">A URL-encoded string to decode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e850a-137">將在 URL 中傳輸的已編碼字串轉換成已解碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-137">Converts a string that has been encoded for transmission in a URL into a decoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e850a-138">已解碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-138">A decoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e850a-139">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="e850a-139">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e850a-140">URL 編碼轉換成相等的十六進位逸出序列不允許在 URL 中的字元。</span><span class="sxs-lookup"><span data-stu-id="e850a-140">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="e850a-141"><xref:System.Net.WebUtility.UrlEncode%2A>方法會建立 URL 編碼的字串。</span><span class="sxs-lookup"><span data-stu-id="e850a-141">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="e850a-142">URL 解碼取代對應的 ASCII 字元對等的十六進位逸出序列。</span><span class="sxs-lookup"><span data-stu-id="e850a-142">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="e850a-143">例如，當內嵌在 URL 編碼的文字區塊，逸出序列`%3c`並`%3e`解碼成字元`<`和`>`。</span><span class="sxs-lookup"><span data-stu-id="e850a-143">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue">
          <span data-ttu-id="e850a-144">要解碼的 URL 編碼 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-144">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e850a-145">與要解碼之 <see cref="T:System.Byte" /> 陣列開頭的位址，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-145">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e850a-146">要在 <see cref="T:System.Byte" /> 陣列中解碼的計數，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-146">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e850a-147">將已經將為在 URL 中傳輸而進行編碼的編碼位元組陣列轉換為解碼的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-147">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e850a-148">解碼的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-148">A decoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e850a-149">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="e850a-149">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e850a-150">URL 編碼轉換成相等的十六進位逸出序列不允許在 URL 中的字元。</span><span class="sxs-lookup"><span data-stu-id="e850a-150">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="e850a-151"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A>方法會建立 URL 編碼的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="e850a-151">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="e850a-152">URL 解碼取代對應的 ASCII 字元對等的十六進位逸出序列。</span><span class="sxs-lookup"><span data-stu-id="e850a-152">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="e850a-153">例如，當內嵌在 URL 編碼的文字區塊，逸出序列`%3c`並`%3e`解碼成字元`<`和`>`。</span><span class="sxs-lookup"><span data-stu-id="e850a-153">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e850a-154">要作 URL 編碼的文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-154">The text to URL-encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e850a-155">將文字字串轉換為 URL 編碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-155">Converts a text string into a URL-encoded string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e850a-156">URL 編碼的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-156">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e850a-157">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="e850a-157">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e850a-158">URL 編碼取代字元不允許在 URL 中包含十六進位逸出序列的對等的字元實體。</span><span class="sxs-lookup"><span data-stu-id="e850a-158">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="e850a-159">已轉換的字串是以 utf-8 格式符合預期。</span><span class="sxs-lookup"><span data-stu-id="e850a-159">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="e850a-160">URL 編碼取代字母、 數字和下列的標點符號字元除外的所有字元碼：</span><span class="sxs-lookup"><span data-stu-id="e850a-160">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="e850a-161">`-` （減號）</span><span class="sxs-lookup"><span data-stu-id="e850a-161">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="e850a-162">`_` （底線）</span><span class="sxs-lookup"><span data-stu-id="e850a-162">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="e850a-163">`.` （句點）</span><span class="sxs-lookup"><span data-stu-id="e850a-163">`.` (period)</span></span>  
  
-   <span data-ttu-id="e850a-164">`!` （驚嘆號）</span><span class="sxs-lookup"><span data-stu-id="e850a-164">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="e850a-165">`*` （星號）</span><span class="sxs-lookup"><span data-stu-id="e850a-165">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="e850a-166">`(` 和`)`（左和右括弧）</span><span class="sxs-lookup"><span data-stu-id="e850a-166">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="e850a-167">例如，當內嵌在 URL 中，字元在要傳送的文字區塊`<`並`>`編碼為`%3c`和`%3e`。</span><span class="sxs-lookup"><span data-stu-id="e850a-167">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="e850a-168"><xref:System.Net.WebUtility.UrlDecode%2A>方法會反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="e850a-168">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="e850a-169">要進行 URL 編碼的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-169">The <see cref="T:System.Byte" /> array to URL-encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="e850a-170">與要編碼之 <see cref="T:System.Byte" /> 陣列開頭的位址，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-170">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="e850a-171">要在 <see cref="T:System.Byte" /> 陣列中編碼的計數，以位元組為單位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-171">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e850a-172">將位元組陣列轉換為 URL 編碼的位元組陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-172">Converts a byte array into a URL-encoded byte array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e850a-173">編碼的 <see cref="T:System.Byte" /> 陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e850a-173">An encoded <see cref="T:System.Byte" /> array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e850a-174">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="e850a-174">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="e850a-175">URL 編碼取代字元不允許在 URL 中包含十六進位逸出序列的對等的字元實體。</span><span class="sxs-lookup"><span data-stu-id="e850a-175">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="e850a-176">已轉換的字串是以 utf-8 格式符合預期。</span><span class="sxs-lookup"><span data-stu-id="e850a-176">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="e850a-177">URL 編碼取代字母、 數字和下列的標點符號字元除外的所有字元碼：</span><span class="sxs-lookup"><span data-stu-id="e850a-177">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="e850a-178">`-` （減號）</span><span class="sxs-lookup"><span data-stu-id="e850a-178">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="e850a-179">`_` （底線）</span><span class="sxs-lookup"><span data-stu-id="e850a-179">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="e850a-180">`.` （句點）</span><span class="sxs-lookup"><span data-stu-id="e850a-180">`.` (period)</span></span>  
  
-   <span data-ttu-id="e850a-181">`!` （驚嘆號）</span><span class="sxs-lookup"><span data-stu-id="e850a-181">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="e850a-182">`*` （星號）</span><span class="sxs-lookup"><span data-stu-id="e850a-182">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="e850a-183">`'` （單引號）</span><span class="sxs-lookup"><span data-stu-id="e850a-183">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="e850a-184">`(` 和`)`（左和右括弧）</span><span class="sxs-lookup"><span data-stu-id="e850a-184">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="e850a-185">例如，當內嵌在 URL 中，字元在要傳送的文字區塊`<`並`>`編碼為`%3c`和`%3e`。</span><span class="sxs-lookup"><span data-stu-id="e850a-185">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="e850a-186"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A>方法會反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="e850a-186">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>