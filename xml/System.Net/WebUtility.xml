<Type Name="WebUtility" FullName="System.Net.WebUtility">
  <Metadata><Meta Name="ms.openlocfilehash" Value="897921efe400b6b55c24d5ca77b0f8414c09c181" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51912780" /></Metadata><TypeSignature Language="C#" Value="public static class WebUtility" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WebUtility extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebUtility" />
  <TypeSignature Language="VB.NET" Value="Public Class WebUtility" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebUtility abstract sealed" />
  <TypeSignature Language="F#" Value="type WebUtility = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c92ad-101">提供處理 Web 要求時用於編碼和解碼 URL 的方法。</span><span class="sxs-lookup"><span data-stu-id="c92ad-101">Provides methods for encoding and decoding URLs when processing Web requests.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c92ad-102"><xref:System.Web.HttpUtility>類別包含編碼和解碼公用程式方法，用於進行 HTML 編碼字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-102">The <xref:System.Web.HttpUtility> class contains encoding and decoding utility methods for use with HTML-encode strings.</span></span> <span data-ttu-id="c92ad-103"><xref:System.Uri?displayProperty=nameWithType>類別也包含方法和屬性，可用於類似的目的。</span><span class="sxs-lookup"><span data-stu-id="c92ad-103">The <xref:System.Uri?displayProperty=nameWithType> class also contains methods and properties that can be used for similar purposes.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Uri" />
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="P:System.Web.HttpContext.Server" />
    <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="c92ad-104">如何： 防止 Web 應用程式中的指令碼攻擊，藉由套用 HTML 編碼字串</span><span class="sxs-lookup"><span data-stu-id="c92ad-104">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="HtmlDecode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c92ad-105">將 HTTP 傳輸的 HTTP 編碼字串轉換成已解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-105">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static string HtmlDecode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlDecode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlDecode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlDecode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string -&gt; string" Usage="System.Net.WebUtility.HtmlDecode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c92ad-106">要解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-106">The string to decode.</span></span></param>
        <summary><span data-ttu-id="c92ad-107">將 HTTP 傳輸的 HTTP 編碼字串轉換成已解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-107">Converts a string that has been HTML-encoded for HTTP transmission into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="c92ad-108">已解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-108">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c92ad-109">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="c92ad-109">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c92ad-110">HTML 編碼方式將對等的字元實體; 不允許在 HTML 中的字元轉換HTML 解碼反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c92ad-110">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c92ad-111">例如，當內嵌在區塊的文字，字元`<`和`>`編碼為`&lt;`和`&gt;`HTTP 傳輸。</span><span class="sxs-lookup"><span data-stu-id="c92ad-111">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="c92ad-112">如果`value`參數是`null`，然後傳回已解碼的字串是`null`。</span><span class="sxs-lookup"><span data-stu-id="c92ad-112">If the `value` parameter is `null`, then the returned decoded string is `null`.</span></span> <span data-ttu-id="c92ad-113">如果`value`參數是空字串，則傳回解碼的字串是空字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-113">If the `value` parameter is an empty string, then the returned decoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="public static void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c92ad-114">要解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-114">The string to decode.</span></span></param>
        <param name="output"><span data-ttu-id="c92ad-115"><see cref="T:System.IO.TextWriter" /> 的輸出資料流。</span><span class="sxs-lookup"><span data-stu-id="c92ad-115">A <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></param>
        <summary><span data-ttu-id="c92ad-116">將已 HTML 編碼的字串轉換成已解碼的字串，並將解碼的字串傳送至 <see cref="T:System.IO.TextWriter" /> 輸出資料流。</span><span class="sxs-lookup"><span data-stu-id="c92ad-116">Converts a string that has been HTML-encoded into a decoded string, and sends the decoded string to a <see cref="T:System.IO.TextWriter" /> output stream.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c92ad-117">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="c92ad-117">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c92ad-118">HTML 編碼方式將對等的字元實體; 不允許在 HTML 中的字元轉換HTML 解碼反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c92ad-118">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c92ad-119">例如，當內嵌在區塊的文字，字元`<`和`>`編碼為`&lt;`和`&gt;`HTTP 傳輸。</span><span class="sxs-lookup"><span data-stu-id="c92ad-119">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c92ad-120">如果 <paramref name="output" /> 參數不是 <see langword="null" />，<paramref name="value" /> 不能為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c92ad-120">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <MemberGroup MemberName="HtmlEncode">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c92ad-121">將字串轉換成 HTML 編碼字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-121">Converts a string to an HTML-encoded string.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static string HtmlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HtmlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HtmlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HtmlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string -&gt; string" Usage="System.Net.WebUtility.HtmlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c92ad-122">要編碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-122">The string to encode.</span></span></param>
        <summary><span data-ttu-id="c92ad-123">將字串轉換成 HTML 編碼字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-123">Converts a string to an HTML-encoded string.</span></span></summary>
        <returns><span data-ttu-id="c92ad-124">編碼字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-124">An encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c92ad-125">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="c92ad-125">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c92ad-126">HTML 編碼方式將對等的字元實體; 不允許在 HTML 中的字元轉換HTML 解碼反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c92ad-126">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c92ad-127">例如，當內嵌在區塊的文字，字元`<`和`>`編碼為`&lt;`和`&gt;`HTTP 傳輸。</span><span class="sxs-lookup"><span data-stu-id="c92ad-127">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 <span data-ttu-id="c92ad-128">如果`value`參數是`null`，然後傳回已編碼的字串是`null`。</span><span class="sxs-lookup"><span data-stu-id="c92ad-128">If the `value` parameter is `null`, then the returned encoded string is `null`.</span></span> <span data-ttu-id="c92ad-129">如果`value`參數是空字串，則傳回編碼的字串是空字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-129">If the `value` parameter is an empty string, then the returned encoded string is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="c92ad-130">如何： 防止 Web 應用程式中的指令碼攻擊，藉由套用 HTML 編碼字串</span><span class="sxs-lookup"><span data-stu-id="c92ad-130">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public static void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="static member HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="System.Net.WebUtility.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c92ad-131">要編碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-131">The string to encode.</span></span></param>
        <param name="output"><span data-ttu-id="c92ad-132"><see cref="T:System.IO.TextWriter" /> 輸出資料流。</span><span class="sxs-lookup"><span data-stu-id="c92ad-132">A <see cref="T:System.IO.TextWriter" /> output stream.</span></span></param>
        <summary><span data-ttu-id="c92ad-133">將字串轉換成 HTML 編碼字串，並以 <see cref="T:System.IO.TextWriter" /> 輸出資料流的形式傳回輸出。</span><span class="sxs-lookup"><span data-stu-id="c92ad-133">Converts a string into an HTML-encoded string, and returns the output as a <see cref="T:System.IO.TextWriter" /> stream of output.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c92ad-134">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="c92ad-134">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c92ad-135">HTML 編碼方式將對等的字元實體; 不允許在 HTML 中的字元轉換HTML 解碼反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c92ad-135">HTML encoding converts characters that are not allowed in HTML into character-entity equivalents; HTML decoding reverses the encoding.</span></span> <span data-ttu-id="c92ad-136">例如，當內嵌在區塊的文字，字元`<`和`>`編碼為`&lt;`和`&gt;`HTTP 傳輸。</span><span class="sxs-lookup"><span data-stu-id="c92ad-136">For example, when embedded in a block of text, the characters `<` and `>` are encoded as `&lt;` and `&gt;` for HTTP transmission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c92ad-137">如果 <paramref name="output" /> 參數不是 <see langword="null" />，<paramref name="value" /> 不能為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="c92ad-137">The <paramref name="output" /> parameter cannot be <see langword="null" /> if the <paramref name="value" /> parameter is not <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.WebUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.HttpUtility.HtmlDecode(System.String,System.IO.TextWriter)" />
        <altmember cref="T:System.Uri" />
        <related type="Article" href="https://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b"><span data-ttu-id="c92ad-138">如何： 防止 Web 應用程式中的指令碼攻擊，藉由套用 HTML 編碼字串</span><span class="sxs-lookup"><span data-stu-id="c92ad-138">How to: Protect Against Script Exploits in a Web Application by Applying HTML Encoding to Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="UrlDecode">
      <MemberSignature Language="C#" Value="public static string UrlDecode (string encodedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlDecode(string encodedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecode (encodedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlDecode(System::String ^ encodedValue);" />
      <MemberSignature Language="F#" Value="static member UrlDecode : string -&gt; string" Usage="System.Net.WebUtility.UrlDecode encodedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="c92ad-139">要解碼的 URL 編碼字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-139">A URL-encoded string to decode.</span></span></param>
        <summary><span data-ttu-id="c92ad-140">將在 URL 中傳輸的已編碼字串轉換成已解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-140">Converts a string that has been encoded for transmission in a URL into a decoded string.</span></span></summary>
        <returns><span data-ttu-id="c92ad-141">已解碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-141">A decoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c92ad-142">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="c92ad-142">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c92ad-143">URL 編碼轉換成相等的十六進位逸出序列不允許在 URL 中的字元。</span><span class="sxs-lookup"><span data-stu-id="c92ad-143">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="c92ad-144"><xref:System.Net.WebUtility.UrlEncode%2A>方法會建立 URL 編碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-144">The <xref:System.Net.WebUtility.UrlEncode%2A> method creates a URL-encoded string.</span></span>  
  
 <span data-ttu-id="c92ad-145">URL 解碼取代對應的 ASCII 字元對等的十六進位逸出序列。</span><span class="sxs-lookup"><span data-stu-id="c92ad-145">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="c92ad-146">例如，當內嵌在 URL 編碼的文字區塊，逸出序列`%3c`並`%3e`解碼成字元`<`和`>`。</span><span class="sxs-lookup"><span data-stu-id="c92ad-146">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlDecodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlDecodeToBytes (byte[] encodedValue, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlDecodeToBytes(unsigned int8[] encodedValue, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlDecodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlDecodeToBytes (encodedValue As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlDecodeToBytes(cli::array &lt;System::Byte&gt; ^ encodedValue, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlDecodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlDecodeToBytes (encodedValue, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedValue" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="encodedValue"><span data-ttu-id="c92ad-147">要解碼的 URL 編碼 <see cref="T:System.Byte" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="c92ad-147">A URL-encoded <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="offset"><span data-ttu-id="c92ad-148">與要解碼之 <see cref="T:System.Byte" /> 陣列開頭的位址，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="c92ad-148">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to decode.</span></span></param>
        <param name="count"><span data-ttu-id="c92ad-149">要在 <see cref="T:System.Byte" /> 陣列中解碼的計數，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="c92ad-149">The count, in bytes, to decode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="c92ad-150">將已經將為在 URL 中傳輸而進行編碼的編碼位元組陣列轉換為解碼的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="c92ad-150">Converts an encoded byte array that has been encoded for transmission in a URL into a decoded byte array.</span></span></summary>
        <returns><span data-ttu-id="c92ad-151">解碼的 <see cref="T:System.Byte" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="c92ad-151">A decoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c92ad-152">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="c92ad-152">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c92ad-153">URL 編碼轉換成相等的十六進位逸出序列不允許在 URL 中的字元。</span><span class="sxs-lookup"><span data-stu-id="c92ad-153">URL encoding converts characters that are not allowed in a URL into equivalent hexadecimal escape sequences.</span></span> <span data-ttu-id="c92ad-154"><xref:System.Net.WebUtility.UrlEncodeToBytes%2A>方法會建立 URL 編碼的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="c92ad-154">The <xref:System.Net.WebUtility.UrlEncodeToBytes%2A> method creates a URL-encoded byte array.</span></span>  
  
 <span data-ttu-id="c92ad-155">URL 解碼取代對應的 ASCII 字元對等的十六進位逸出序列。</span><span class="sxs-lookup"><span data-stu-id="c92ad-155">URL decoding replaces hexadecimal escape sequences with corresponding ASCII character equivalents.</span></span> <span data-ttu-id="c92ad-156">例如，當內嵌在 URL 編碼的文字區塊，逸出序列`%3c`並`%3e`解碼成字元`<`和`>`。</span><span class="sxs-lookup"><span data-stu-id="c92ad-156">For example, when embedded in a block of URL-encoded text, the escape sequences `%3c` and `%3e` are decoded into the characters `<` and `>`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="public static string UrlEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string UrlEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ UrlEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member UrlEncode : string -&gt; string" Usage="System.Net.WebUtility.UrlEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c92ad-157">要作 URL 編碼的文字。</span><span class="sxs-lookup"><span data-stu-id="c92ad-157">The text to URL-encode.</span></span></param>
        <summary><span data-ttu-id="c92ad-158">將文字字串轉換為 URL 編碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-158">Converts a text string into a URL-encoded string.</span></span></summary>
        <returns><span data-ttu-id="c92ad-159">URL 編碼的字串。</span><span class="sxs-lookup"><span data-stu-id="c92ad-159">A URL-encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c92ad-160">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="c92ad-160">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c92ad-161">URL 編碼取代字元不允許在 URL 中包含十六進位逸出序列的對等的字元實體。</span><span class="sxs-lookup"><span data-stu-id="c92ad-161">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="c92ad-162">已轉換的字串是以 utf-8 格式符合預期。</span><span class="sxs-lookup"><span data-stu-id="c92ad-162">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="c92ad-163">URL 編碼取代字母、 數字和下列的標點符號字元除外的所有字元碼：</span><span class="sxs-lookup"><span data-stu-id="c92ad-163">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="c92ad-164">`-` （減號）</span><span class="sxs-lookup"><span data-stu-id="c92ad-164">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="c92ad-165">`_` （底線）</span><span class="sxs-lookup"><span data-stu-id="c92ad-165">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="c92ad-166">`.` （句點）</span><span class="sxs-lookup"><span data-stu-id="c92ad-166">`.` (period)</span></span>  
  
-   <span data-ttu-id="c92ad-167">`!` （驚嘆號）</span><span class="sxs-lookup"><span data-stu-id="c92ad-167">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="c92ad-168">`*` （星號）</span><span class="sxs-lookup"><span data-stu-id="c92ad-168">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="c92ad-169">`(` 和`)`（左和右括弧）</span><span class="sxs-lookup"><span data-stu-id="c92ad-169">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="c92ad-170">例如，當內嵌在 URL 中，字元在要傳送的文字區塊`<`並`>`編碼為`%3c`和`%3e`。</span><span class="sxs-lookup"><span data-stu-id="c92ad-170">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="c92ad-171"><xref:System.Net.WebUtility.UrlDecode%2A>方法會反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c92ad-171">The <xref:System.Net.WebUtility.UrlDecode%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncodeToBytes">
      <MemberSignature Language="C#" Value="public static byte[] UrlEncodeToBytes (byte[] value, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] UrlEncodeToBytes(unsigned int8[] value, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebUtility.UrlEncodeToBytes(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UrlEncodeToBytes (value As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ UrlEncodeToBytes(cli::array &lt;System::Byte&gt; ^ value, int offset, int count);" />
      <MemberSignature Language="F#" Value="static member UrlEncodeToBytes : byte[] * int * int -&gt; byte[]" Usage="System.Net.WebUtility.UrlEncodeToBytes (value, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c92ad-172">要進行 URL 編碼的 <see cref="T:System.Byte" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="c92ad-172">The <see cref="T:System.Byte" /> array to URL-encode.</span></span></param>
        <param name="offset"><span data-ttu-id="c92ad-173">與要編碼之 <see cref="T:System.Byte" /> 陣列開頭的位址，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="c92ad-173">The offset, in bytes, from the start of the <see cref="T:System.Byte" /> array to encode.</span></span></param>
        <param name="count"><span data-ttu-id="c92ad-174">要在 <see cref="T:System.Byte" /> 陣列中編碼的計數，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="c92ad-174">The count, in bytes, to encode from the <see cref="T:System.Byte" /> array.</span></span></param>
        <summary><span data-ttu-id="c92ad-175">將位元組陣列轉換為 URL 編碼的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="c92ad-175">Converts a byte array into a URL-encoded byte array.</span></span></summary>
        <returns><span data-ttu-id="c92ad-176">編碼的 <see cref="T:System.Byte" /> 陣列。</span><span class="sxs-lookup"><span data-stu-id="c92ad-176">An encoded <see cref="T:System.Byte" /> array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c92ad-177">如果空白和標點符號之類的字元傳遞到 HTTP 資料流，它們可能錯誤地解譯接收方。</span><span class="sxs-lookup"><span data-stu-id="c92ad-177">If characters such as blanks and punctuation are passed in an HTTP stream, they might be misinterpreted at the receiving end.</span></span> <span data-ttu-id="c92ad-178">URL 編碼取代字元不允許在 URL 中包含十六進位逸出序列的對等的字元實體。</span><span class="sxs-lookup"><span data-stu-id="c92ad-178">URL encoding replaces characters that are not allowed in a URL with character-entity equivalents consisting of hexadecimal escape sequences.</span></span> <span data-ttu-id="c92ad-179">已轉換的字串是以 utf-8 格式符合預期。</span><span class="sxs-lookup"><span data-stu-id="c92ad-179">The converted string is expected to conform to the UTF-8 format.</span></span>  
  
 <span data-ttu-id="c92ad-180">URL 編碼取代字母、 數字和下列的標點符號字元除外的所有字元碼：</span><span class="sxs-lookup"><span data-stu-id="c92ad-180">URL encoding replaces all character codes except for letters, numbers, and the following punctuation characters:</span></span>  
  
-   <span data-ttu-id="c92ad-181">`-` （減號）</span><span class="sxs-lookup"><span data-stu-id="c92ad-181">`-` (minus sign)</span></span>  
  
-   <span data-ttu-id="c92ad-182">`_` （底線）</span><span class="sxs-lookup"><span data-stu-id="c92ad-182">`_` (underscore)</span></span>  
  
-   <span data-ttu-id="c92ad-183">`.` （句點）</span><span class="sxs-lookup"><span data-stu-id="c92ad-183">`.` (period)</span></span>  
  
-   <span data-ttu-id="c92ad-184">`!` （驚嘆號）</span><span class="sxs-lookup"><span data-stu-id="c92ad-184">`!` (exclamation point)</span></span>  
  
-   <span data-ttu-id="c92ad-185">`*` （星號）</span><span class="sxs-lookup"><span data-stu-id="c92ad-185">`*` (asterisk)</span></span>  
  
-   <span data-ttu-id="c92ad-186">`'` （單引號）</span><span class="sxs-lookup"><span data-stu-id="c92ad-186">`'` (single quotation mark)</span></span>  
  
-   <span data-ttu-id="c92ad-187">`(` 和`)`（左和右括弧）</span><span class="sxs-lookup"><span data-stu-id="c92ad-187">`(` and `)` (opening and closing parentheses)</span></span>  
  
 <span data-ttu-id="c92ad-188">例如，當內嵌在 URL 中，字元在要傳送的文字區塊`<`並`>`編碼為`%3c`和`%3e`。</span><span class="sxs-lookup"><span data-stu-id="c92ad-188">For example, when embedded in a block of text to be transmitted in a URL, the characters `<` and `>` are encoded as `%3c` and `%3e`.</span></span>  
  
 <span data-ttu-id="c92ad-189"><xref:System.Net.WebUtility.UrlDecodeToBytes%2A>方法會反轉的編碼方式。</span><span class="sxs-lookup"><span data-stu-id="c92ad-189">The <xref:System.Net.WebUtility.UrlDecodeToBytes%2A> method reverses the encoding.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>