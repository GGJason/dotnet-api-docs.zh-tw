<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IPAddress.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b382b2e424f3335e396090615b29820d1cd62c1d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b382b2e424f3335e396090615b29820d1cd62c1d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.IPAddress">
          <source>Provides an Internet Protocol (IP) address.</source>
          <target state="translated">提供網際網路通訊協定 (IP) 位址。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.IPAddress">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> class contains the address of a computer on an IP network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph>類別包含位址的 IP 網路上的電腦。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.IPAddress">
          <source>The following code example shows how to query a server to obtain the family addresses and the IP addresses it supports.</source>
          <target state="translated">下列程式碼範例示範如何查詢伺服器以取得家族的位址和 IP 位址與它支援。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Net.IPAddress">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[])">
          <source>The byte array value of the IP address.</source>
          <target state="translated">IP 位址的位元組陣列值。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> class with the address specified as a <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> array.</source>
          <target state="translated">使用指定為 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 陣列的位址，初始化 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> is created with the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property set to <ph id="ph3">`address`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph>會透過<ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph>屬性設定為<ph id="ph3">`address`</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.#ctor(System.Byte[])">
          <source>If the length of <ph id="ph1">`address`</ph> is 4, <ph id="ph2">&lt;xref:System.Net.IPAddress.%23ctor%28System.Byte%5B%5D%29&gt;</ph> constructs an IPv4 address; otherwise, an IPv6 address with a scope of 0 is constructed.</source>
          <target state="translated">如果長度<ph id="ph1">`address`</ph>為 4，<ph id="ph2">&lt;xref:System.Net.IPAddress.%23ctor%28System.Byte%5B%5D%29&gt;</ph>建構 IPv4 位址; 否則建構的範圍為 0 的 IPv6 位址。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.#ctor(System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array is assumed to be in network byte order with the most significant byte first in index position 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph>假設為以網路位元組順序的索引位置 0 中的第一個最重要的位元組陣列。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[])">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> contains a bad IP address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 包含錯誤的 IP 位址。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Int64)">
          <source>The long value of the IP address.</source>
          <target state="translated">IP 位址的長整數值。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Int64)">
          <source>For example, the value 0x2414188f in big-endian format would be the IP address "143.24.20.36".</source>
          <target state="translated">例如，位元組由大到小格式的 0x2414188f 值將為 IP 位址 "143.24.20.36"。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Int64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> class with the address specified as an <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated">使用指定為 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 的位址，初始化 <ph id="ph2">&lt;see cref="T:System.Int64" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.#ctor(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> instance is created with the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property set to <ph id="ph3">`newAddress`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph>使用建立執行個體<ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph>屬性設定為<ph id="ph3">`newAddress`</ph>。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.#ctor(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Int64&gt;</ph> value is assumed to be in network byte order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int64&gt;</ph>值會被假設為以網路位元組順序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="newAddress" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 or</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newAddress" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 或</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Int64)">
          <source><ph id="ph1">&lt;paramref name="newAddress" /&gt;</ph> <ph id="ph2">&amp;gt;</ph> 0x00000000FFFFFFFF</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="newAddress" /&gt;</ph> <ph id="ph2">&amp;gt;</ph> 0x00000000FFFFFFFF</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source>The byte array value of the IP address.</source>
          <target state="translated">IP 位址的位元組陣列值。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source>The long value of the scope identifier.</source>
          <target state="translated">範圍識別項的長整數值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> class with the address specified as a <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> array and the specified scope identifier.</source>
          <target state="translated">使用指定為 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 陣列且具有指定之範圍識別項的位址，初始化 <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source>This constructor instantiates an IPv6 address.</source>
          <target state="translated">這個建構函式具現化的 IPv6 位址。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source>The <ph id="ph1">`scopeid`</ph> identifies a network interface in the case of a link-local address.</source>
          <target state="translated"><ph id="ph1">`scopeid`</ph>識別在連結-本機位址的網路介面。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source>The scope is valid only for link-local and site-local addresses.</source>
          <target state="translated">範圍是僅適用於本機連結和網站-本機位址。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array is assumed to be in network byte order with the most significant byte first in index position 0.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Byte&gt;</ph>假設為以網路位元組順序的索引位置 0 中的第一個最重要的位元組陣列。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source><ph id="ph1">&lt;paramref name="address" /&gt;</ph> contains a bad IP address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="address" /&gt;</ph> 包含錯誤的 IP 位址。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source><ph id="ph1">&lt;paramref name="scopeid" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 or</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="scopeid" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0 或</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.#ctor(System.Byte[],System.Int64)">
          <source><ph id="ph1">&lt;paramref name="scopeid" /&gt;</ph> <ph id="ph2">&amp;gt;</ph> 0x00000000FFFFFFFF</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="scopeid" /&gt;</ph> <ph id="ph2">&amp;gt;</ph> 0x00000000FFFFFFFF</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.Address">
          <source>An Internet Protocol (IP) address.</source>
          <target state="translated">網際網路通訊協定 (IP) 位址。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.Address">
          <source>The long value of the IP address.</source>
          <target state="translated">IP 位址的長整數值。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.Address">
          <source>This property is obsolete.</source>
          <target state="translated">這個屬性已經過時。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.Address">
          <source>Use <ph id="ph1">&lt;xref:System.Net.IPAddress.GetAddressBytes%2A&gt;</ph>.</source>
          <target state="translated">使用 <ph id="ph1">&lt;xref:System.Net.IPAddress.GetAddressBytes%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.Address">
          <source>To convert <ph id="ph1">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> to dotted-quad notation, use the <ph id="ph2">&lt;xref:System.Net.IPAddress.ToString%2A&gt;</ph> method.</source>
          <target state="translated">要轉換<ph id="ph1">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph>四點標記法，如果要使用<ph id="ph2">&lt;xref:System.Net.IPAddress.ToString%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.Address">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> parameter to retrieve the IP address of the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> instance.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph>要擷取的 IP 位址參數<ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>執行個體。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.Address">
          <source>The address family is <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</source>
          <target state="translated">位址家族是 <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.AddressFamily">
          <source>Gets the address family of the IP address.</source>
          <target state="translated">取得 IP 位址的位址家族。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.AddressFamily">
          <source>Returns <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> for IPv4 or <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> for IPv6.</source>
          <target state="translated">傳回 IPv4 的 <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph>，或傳回 IPv6 的 <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.AddressFamily">
          <source>Refer to the example in the <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> class topic.</source>
          <target state="translated">中的範例，請參閱<ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph>類別主題。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.Any">
          <source>Provides an IP address that indicates that the server must listen for client activity on all network interfaces.</source>
          <target state="translated">提供指示伺服器必須在所有網路介面上接聽用戶端活動的 IP 位址。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.Any">
          <source>This field is read-only.</source>
          <target state="translated">此欄位為唯讀。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.Any">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Bind%2A?displayProperty=nameWithType&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Net.IPAddress.Any&gt;</ph> field to indicate that a <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> instance must listen for client activity on all network interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Bind%2A?displayProperty=nameWithType&gt;</ph>方法會使用<ph id="ph2">&lt;xref:System.Net.IPAddress.Any&gt;</ph>欄位，指出<ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>必須接聽所有網路介面上的用戶端活動的執行個體。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.Any">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.Any&gt;</ph> field is equivalent to 0.0.0.0 in dotted-quad notation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.Any&gt;</ph>欄位相當於 0.0.0.0 四點表示法。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.Broadcast">
          <source>Provides the IP broadcast address.</source>
          <target state="translated">提供 IP 廣播位址。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.Broadcast">
          <source>This field is read-only.</source>
          <target state="translated">此欄位為唯讀。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.Broadcast">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast&gt;</ph> field is equivalent to 255.255.255.255 in dotted-quad notation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast&gt;</ph>欄位相當於 255.255.255.255 四點表示法。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.Broadcast">
          <source>The following example prints the <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast&gt;</ph> address to the console.</source>
          <target state="translated">下列範例會列印<ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast&gt;</ph>位址到主控台。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.Equals(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> instance to compare to the current instance.</source>
          <target state="translated">要與目前執行個體比較的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.Equals(System.Object)">
          <source>Compares two IP addresses.</source>
          <target state="translated">比較兩個 IP 位址。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two addresses are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果兩個位址相等，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.Equals%2A&gt;</ph> method compares the current <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> instance with the <ph id="ph3">`comparand`</ph> parameter and returns <ph id="ph4">`true`</ph> if the two instances contain the same IP address.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.Equals%2A&gt;</ph>方法會比較目前<ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>執行個體，其<ph id="ph3">`comparand`</ph>參數，並傳回<ph id="ph4">`true`</ph>如果兩個執行個體包含相同的 IP 位址。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.GetAddressBytes">
          <source>Provides a copy of the <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> as an array of bytes.</source>
          <target state="translated">提供做為位元組陣列之 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 的複本。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.GetAddressBytes">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> 陣列。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.GetAddressBytes">
          <source>The following code example shows how to get a server IP address in byte format.</source>
          <target state="translated">下列程式碼範例示範如何取得伺服器 IP 位址，以位元組格式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.GetHashCode">
          <source>Returns a hash value for an IP address.</source>
          <target state="translated">傳回 IP 位址的雜湊值 (Hash Value)。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.GetHashCode">
          <source>An integer hash value.</source>
          <target state="translated">整數雜湊值。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.GetHashCode">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.GetHashCode%2A&gt;</ph> method returns a hash code of the IP address.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.GetHashCode%2A&gt;</ph>方法傳回的 IP 位址的雜湊程式碼。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.GetHashCode">
          <source>This value can be used as a key in hash tables.</source>
          <target state="translated">這個值可以當做雜湊表中的索引鍵。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="T:System.Net.IPAddress">
          <source>Converts a value from host byte order to network byte order.</source>
          <target state="translated">將值從主機位元組順序轉換為網路位元組順序。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
          <source>The number to convert, expressed in host byte order.</source>
          <target state="translated">以主機位元組順序表示之要轉換的數字。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
          <source>Converts a short value from host byte order to network byte order.</source>
          <target state="translated">將短整數 (Short) 值從主機位元組順序轉換為網路位元組順序。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
          <source>A short value, expressed in network byte order.</source>
          <target state="translated">以網路位元組順序表示的短整數值。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
          <source>Different computers use different conventions for ordering the bytes within multibyte integer values.</source>
          <target state="translated">不同的電腦會使用不同的慣例來排序中的多位元組的整數值的位元組。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
          <source>Some computers put the most significant byte first (known as big-endian order) and others put the least-significant byte first (known as little-endian order).</source>
          <target state="translated">某些電腦先放置最大顯著性位元組 （亦即位元組由大到小順序） 和其他人先放置最小顯著性位元組 （又稱為 little-endian 順序）。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
          <source>To work with computers that use different byte ordering, all integer values that are sent over the network are sent in network byte order which has the most significant byte first.</source>
          <target state="translated">若要使用不同的位元組順序的電腦使用，會透過網路傳送的所有整數值會以網路位元組順序先具有最大顯著性位元組都傳送。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int16)">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.HostToNetworkOrder%2A&gt;</ph> method converts multibyte integer values that are stored on the host system from the byte order used by the host to the byte order used by the network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.HostToNetworkOrder%2A&gt;</ph>方法會將轉換從主機網路所使用的位元組順序使用的位元組順序的主機系統所儲存的多位元組的整數值。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
          <source>The number to convert, expressed in host byte order.</source>
          <target state="translated">以主機位元組順序表示之要轉換的數字。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
          <source>Converts an integer value from host byte order to network byte order.</source>
          <target state="translated">將整數值從主機位元組順序轉換為網路位元組順序。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
          <source>An integer value, expressed in network byte order.</source>
          <target state="translated">以網路位元組順序表示的整數值。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
          <source>Different computers use different conventions for ordering the bytes within multibyte integer values.</source>
          <target state="translated">不同的電腦會使用不同的慣例來排序中的多位元組的整數值的位元組。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
          <source>Some computers put the most significant byte first (known as big-endian order) and others put the least-significant byte first (known as little-endian order).</source>
          <target state="translated">某些電腦先放置最大顯著性位元組 （亦即位元組由大到小順序） 和其他人先放置最小顯著性位元組 （又稱為 little-endian 順序）。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
          <source>To work with computers that use different byte ordering, all integer values that are sent over the network are sent in network byte order which has the most significant byte first.</source>
          <target state="translated">若要使用不同的位元組順序的電腦使用，會透過網路傳送的所有整數值會以網路位元組順序先具有最大顯著性位元組都傳送。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.HostToNetworkOrder%2A&gt;</ph> method converts multibyte integer values that are stored on the host system from the byte order used by the host to the byte order used by the network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.HostToNetworkOrder%2A&gt;</ph>方法會將轉換從主機網路所使用的位元組順序使用的位元組順序的主機系統所儲存的多位元組的整數值。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
          <source>The number to convert, expressed in host byte order.</source>
          <target state="translated">以主機位元組順序表示之要轉換的數字。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
          <source>Converts a long value from host byte order to network byte order.</source>
          <target state="translated">將長整數 (Long) 值從主機位元組順序轉換為網路位元組順序。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
          <source>A long value, expressed in network byte order.</source>
          <target state="translated">以網路位元組順序表示的長整數值。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
          <source>Different computers use different conventions for ordering the bytes within multibyte integer values.</source>
          <target state="translated">不同的電腦會使用不同的慣例來排序中的多位元組的整數值的位元組。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
          <source>Some computers put the most significant byte first (known as big-endian order) and others put the least-significant byte first (known as little-endian order).</source>
          <target state="translated">某些電腦先放置最大顯著性位元組 （亦即位元組由大到小順序） 和其他人先放置最小顯著性位元組 （又稱為 little-endian 順序）。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
          <source>To work with computers that use different byte ordering, all integer values that are sent over the network are sent in network byte order which has the most significant byte first.</source>
          <target state="translated">若要使用不同的位元組順序的電腦使用，會透過網路傳送的所有整數值會以網路位元組順序先具有最大顯著性位元組都傳送。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.HostToNetworkOrder(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.HostToNetworkOrder%2A&gt;</ph> method converts multibyte integer values that are stored on the host system from the byte order used by the host to the byte order used by the network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.HostToNetworkOrder%2A&gt;</ph>方法會將轉換從主機網路所使用的位元組順序使用的位元組順序的主機系統所儲存的多位元組的整數值。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.IPv6Any">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /&gt;</ph> method uses the <ph id="ph2">&lt;see cref="F:System.Net.IPAddress.IPv6Any" /&gt;</ph> field to indicate that a <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> must listen for client activity on all network interfaces.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" /&gt;</ph> 方法使用 <ph id="ph2">&lt;see cref="F:System.Net.IPAddress.IPv6Any" /&gt;</ph> 欄位來表示 <ph id="ph3">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> 必須在所有網路介面上接聽用戶端活動。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.IPv6Any">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.IPv6Any&gt;</ph> field is equivalent to 0:0:0:0:0:0:0:0 in colon-hexadecimal notation, or to :: in compact notation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.IPv6Any&gt;</ph>欄位相當於 0:0:0:0:0:0:0:0 以冒號十六進位標記法，或:: compact 的表示法。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.IPv6Any">
          <source>The following code example displays the value of the current host's Any address in standard compressed format.</source>
          <target state="translated">下列程式碼範例顯示標準的壓縮格式的目前值主機的任何位址。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.IPv6Loopback">
          <source>Provides the IP loopback address.</source>
          <target state="translated">提供 IP 回送位址。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.IPv6Loopback">
          <source>This property is read-only.</source>
          <target state="translated">這個屬性是唯讀的。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.IPv6Loopback">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.IPv6Loopback&gt;</ph> field is equivalent to 0:0:0:0:0:0:0:1 in colon-hexadecimal notation, or to ::1 in compact notation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.IPv6Loopback&gt;</ph>欄位相當於 0:0:0:0:0:0:0:1 以冒號十六進位標記法，或:: compact 標記法中的為 1。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.IPv6Loopback">
          <source>The following code example displays the value of the current host's loopback address in standard compressed format.</source>
          <target state="translated">下列程式碼範例顯示標準的壓縮格式的目前主機的回送位址的值。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.IPv6None">
          <source>Provides an IP address that indicates that no network interface should be used.</source>
          <target state="translated">提供 IP 位址，表示不可使用網路介面。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.IPv6None">
          <source>This property is read-only.</source>
          <target state="translated">這個屬性是唯讀的。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.IPv6None">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Bind%2A?displayProperty=nameWithType&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Net.IPAddress.IPv6None&gt;</ph> field to indicate that a <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> must not listen for client activity.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Bind%2A?displayProperty=nameWithType&gt;</ph>方法會使用<ph id="ph2">&lt;xref:System.Net.IPAddress.IPv6None&gt;</ph>欄位，指出<ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>必須接聽用戶端活動。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.IPv6None">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.IPv6None&gt;</ph> field is equivalent to 0:0:0:0:0:0:0:0 in colon-hexadecimal notation, or to ::0 in compact notation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.IPv6None&gt;</ph>欄位相當於 0:0:0:0:0:0:0:0 以冒號十六進位標記法，或:: compact 標記法中的為 0。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.IPv6None">
          <source>The following code example displays the value of the current host's None address in standard compressed format.</source>
          <target state="translated">下列程式碼範例會顯示標準的壓縮格式的目前主機的任何位址的值。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
          <source>Gets whether the IP address is an IPv4-mapped IPv6 address.</source>
          <target state="translated">取得 IP 位址是否為對應 IPv4 的 IPv6 位址。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the IP address is an IPv4-mapped IPv6 address; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 IP 位址是對應 IPv4 的 IPv6 位址，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
          <source>Dual-stack sockets always require IPv6 addresses.</source>
          <target state="translated">雙重堆疊通訊端一定需要 IPv6 位址。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
          <source>The ability to interact with an IPv4 address requires the use of the IPv4-mapped IPv6 address format.</source>
          <target state="translated">IPv4 位址互動的功能需要使用 IPv4 對應的 IPv6 位址格式。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
          <source>Any IPv4 addresses must be represented in the IPv4-mapped IPv6 address format which enables an IPv6 only application to communicate with an IPv4 node.</source>
          <target state="translated">IPv4 對應的 IPv6 位址格式讓 IPv6 只有應用程式進行通訊與 IPv4 節點必須代表任何 IPv4 位址。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
          <source>The IPv4-mapped IPv6 address format allows the IPv4 address of an IPv4 node to be represented as an IPv6 address.</source>
          <target state="translated">IPv4 對應的 IPv6 位址格式可讓以 IPv6 位址表示 IPv4 節點的 IPv4 位址。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
          <source>The IPv4 address is encoded into the low-order 32 bits of the IPv6 address, and the high-order 96 bits hold the fixed prefix 0:0:0:0:0:FFFF.</source>
          <target state="translated">IPv4 位址會編碼為低位 32 位元的 IPv6 位址，高序位 96 位元會保留固定的前置詞 0:0:0:0:0:FFFF。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
          <source>The IPv4-mapped IPv6 address format is specified in RFC 4291.</source>
          <target state="translated">RFC 4291 中指定的 IPv4 對應的 IPv6 位址的格式。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv4MappedToIPv6">
          <source>For more information, see <bpt id="p1">[</bpt>www.ietf.org/rfc/rfc4291.txt<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=92231)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>www.ietf.org/rfc/rfc4291.txt<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=92231)</ept>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.IsIPv6LinkLocal">
          <source>Gets whether the address is an IPv6 link local address.</source>
          <target state="translated">取得位址是否為 IPv6 連結本機位址的資訊。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv6LinkLocal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the IP address is an IPv6 link local address; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 IP 位址是 IPv6 連結本機位址，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.IsIPv6Multicast">
          <source>Gets whether the address is an IPv6 multicast global address.</source>
          <target state="translated">取得位址是否為 IPv6 多點傳送全域位址的資訊。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv6Multicast">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the IP address is an IPv6 multicast global address; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 IP 位址是 IPv6 多點傳送全域位址，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.IsIPv6SiteLocal">
          <source>Gets whether the address is an IPv6 site local address.</source>
          <target state="translated">取得位址是否為 IPv6 站台本機位址的資訊。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv6SiteLocal">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the IP address is an IPv6 site local address; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 IP 位址是 IPv6 站台本機位址，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.IsIPv6Teredo">
          <source>Gets whether the address is an IPv6 Teredo address.</source>
          <target state="translated">取得值，這個值指出位址是否為 IPv6 Teredo 位址。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv6Teredo">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the IP address is an IPv6 Teredo address; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 IP 位址為 IPv6 Teredo 位址則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv6Teredo">
          <source>A Teredo address is an IPv6 address with the prefix of 2001::/32.</source>
          <target state="translated">Teredo 位址是 IPv6 位址首碼為 2001年:: / 32。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.IsIPv6Teredo">
          <source>Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</source>
          <target state="translated">Teredo 位址可透過一般的 DNS 名稱解析傳回或列舉為指派給本機介面的 IPv6 位址。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
          <source>An IP address.</source>
          <target state="translated">IP 位址。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
          <source>Indicates whether the specified IP address is the loopback address.</source>
          <target state="translated">指示指定的 IP 位址是否為回送位址。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="address" /&gt;</ph> is the loopback address; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="address" /&gt;</ph> 是回送位址，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.IsLoopback%2A&gt;</ph> method compares <ph id="ph2">`address`</ph> to <ph id="ph3">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph> and returns <ph id="ph4">`true`</ph> if the two IP addresses are the same.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.IsLoopback%2A&gt;</ph>方法會比較<ph id="ph2">`address`</ph>至<ph id="ph3">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph>並傳回<ph id="ph4">`true`</ph>如果兩個 IP 位址相同。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
          <source>In the case of IPv4, that the <ph id="ph1">&lt;xref:System.Net.IPAddress.IsLoopback%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> for any IP address of the form 127.X.Y.Z (where X, Y, and Z are in the range 0-255), not just <ph id="ph3">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph> (127.0.0.1).</source>
          <target state="translated">在 [IPv4]，<ph id="ph1">&lt;xref:System.Net.IPAddress.IsLoopback%2A&gt;</ph>方法會傳回<ph id="ph2">`true`</ph>表單的任何 IP 位址 （其中 X、 Y 和 Z 位於範圍 0-255） 127.X.Y.Z，不只<ph id="ph3">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph>(127.0.0.1)。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.IsLoopback(System.Net.IPAddress)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Net.IPAddress.IsLoopback%2A&gt;</ph> method to determine whether the specified address is a loopback address.</source>
          <target state="translated">下列程式碼範例使用<ph id="ph1">&lt;xref:System.Net.IPAddress.IsLoopback%2A&gt;</ph>方法，以判斷指定的位址是回送位址。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.Loopback">
          <source>Provides the IP loopback address.</source>
          <target state="translated">提供 IP 回送位址。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.Loopback">
          <source>This field is read-only.</source>
          <target state="translated">此欄位為唯讀。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.Loopback">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph> field is equivalent to 127.0.0.1 in dotted-quad notation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph>欄位相當於 127.0.0.1 四點表示法。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.Loopback">
          <source>The following example prints the <ph id="ph1">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph> address to the console.</source>
          <target state="translated">下列範例會列印<ph id="ph1">&lt;xref:System.Net.IPAddress.Loopback&gt;</ph>位址到主控台。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>Maps the <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> object to an IPv4 address.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 物件對應至 IPv4 位址。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>An IPv4 address.</source>
          <target state="translated">IPv4 位址。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>Dual-stack sockets always require IPv6 addresses.</source>
          <target state="translated">雙重堆疊通訊端一定需要 IPv6 位址。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>The ability to interact with an IPv4 address requires the use of the IPv4-mapped IPv6 address format.</source>
          <target state="translated">IPv4 位址互動的功能需要使用 IPv4 對應的 IPv6 位址格式。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>Any IPv4 addresses must be represented in the IPv4-mapped IPv6 address format which enables an IPv6 only application to communicate with an IPv4 node.</source>
          <target state="translated">IPv4 對應的 IPv6 位址格式讓 IPv6 只有應用程式進行通訊與 IPv4 節點必須代表任何 IPv4 位址。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>The IPv4-mapped IPv6 address format allows the IPv4 address of an IPv4 node to be represented as an IPv6 address.</source>
          <target state="translated">IPv4 對應的 IPv6 位址格式可讓以 IPv6 位址表示 IPv4 節點的 IPv4 位址。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>The IPv4 address is encoded into the low-order 32 bits of the IPv6 address, and the high-order 96 bits hold the fixed prefix 0:0:0:0:0:FFFF.</source>
          <target state="translated">IPv4 位址會編碼為低位 32 位元的 IPv6 位址，高序位 96 位元會保留固定的前置詞 0:0:0:0:0:FFFF。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>The IPv4-mapped IPv6 address format is specified in RFC 4291.</source>
          <target state="translated">RFC 4291 中指定的 IPv4 對應的 IPv6 位址的格式。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>For more information, see <bpt id="p1">[</bpt>www.ietf.org/rfc/rfc4291.txt<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=92231)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>www.ietf.org/rfc/rfc4291.txt<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=92231)</ept>。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>If you want to use <ph id="ph1">&lt;xref:System.Net.IPAddress.MapToIPv4%2A&gt;</ph> to convert an IPv4 address from IPv6 format to IPv4 format, you must first ensure that you've got an IPv4 address.</source>
          <target state="translated">如果您想要使用<ph id="ph1">&lt;xref:System.Net.IPAddress.MapToIPv4%2A&gt;</ph>IPv4 位址從 IPv6 格式轉換成 IPv4 格式，您必須先確定您已取得 IPv4 位址。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>Call <ph id="ph1">&lt;xref:System.Net.IPAddress.IsIPv4MappedToIPv6%2A&gt;</ph>, which will return <ph id="ph2">`true`</ph> if the IP address is originally IPv4 written as IPv6, or <ph id="ph3">`false`</ph> otherwise.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.Net.IPAddress.IsIPv4MappedToIPv6%2A&gt;</ph>，這會傳回<ph id="ph2">`true`</ph>IP 位址是否原本 IPv4 IPv6，以寫入或<ph id="ph3">`false`</ph>否則。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv4">
          <source>If <ph id="ph1">&lt;xref:System.Net.IPAddress.IsIPv4MappedToIPv6%2A&gt;</ph> returns <ph id="ph2">`true`</ph>, use <ph id="ph3">&lt;xref:System.Net.IPAddress.MapToIPv4%2A&gt;</ph> to make the conversion.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Net.IPAddress.IsIPv4MappedToIPv6%2A&gt;</ph>傳回<ph id="ph2">`true`</ph>，使用<ph id="ph3">&lt;xref:System.Net.IPAddress.MapToIPv4%2A&gt;</ph>進行轉換。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.MapToIPv6">
          <source>Maps the <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> object to an IPv6 address.</source>
          <target state="translated">將 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 物件對應至 IPv6 位址。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.MapToIPv6">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.MapToIPv6">
          <source>An IPv6 address.</source>
          <target state="translated">IPv6 位址。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv6">
          <source>Dual-stack sockets always require IPv6 addresses.</source>
          <target state="translated">雙重堆疊通訊端一定需要 IPv6 位址。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv6">
          <source>The ability to interact with an IPv4 address requires the use of the IPv4-mapped IPv6 address format.</source>
          <target state="translated">IPv4 位址互動的功能需要使用 IPv4 對應的 IPv6 位址格式。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv6">
          <source>Any IPv4 addresses must be represented in the IPv4-mapped IPv6 address format which enables an IPv6 only application to communicate with an IPv4 node.</source>
          <target state="translated">IPv4 對應的 IPv6 位址格式讓 IPv6 只有應用程式進行通訊與 IPv4 節點必須代表任何 IPv4 位址。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv6">
          <source>The IPv4-mapped IPv6 address format allows the IPv4 address of an IPv4 node to be represented as an IPv6 address.</source>
          <target state="translated">IPv4 對應的 IPv6 位址格式可讓以 IPv6 位址表示 IPv4 節點的 IPv4 位址。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv6">
          <source>The IPv4 address is encoded into the low-order 32 bits of the IPv6 address, and the high-order 96 bits hold the fixed prefix 0:0:0:0:0:FFFF.</source>
          <target state="translated">IPv4 位址會編碼為低位 32 位元的 IPv6 位址，高序位 96 位元會保留固定的前置詞 0:0:0:0:0:FFFF。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv6">
          <source>The IPv4-mapped IPv6 address format is specified in RFC 4291.</source>
          <target state="translated">RFC 4291 中指定的 IPv4 對應的 IPv6 位址的格式。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.MapToIPv6">
          <source>For more information, see <bpt id="p1">[</bpt>www.ietf.org/rfc/rfc4291.txt<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=92231)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt>www.ietf.org/rfc/rfc4291.txt<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=92231)</ept>。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="T:System.Net.IPAddress">
          <source>Converts a number from network byte order to host byte order.</source>
          <target state="translated">將數字從網路位元組順序轉換為主機位元組順序。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
          <source>The number to convert, expressed in network byte order.</source>
          <target state="translated">以網路位元組順序表示之要轉換的數字。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
          <source>Converts a short value from network byte order to host byte order.</source>
          <target state="translated">將短整數值從網路位元組順序轉換為主機位元組順序。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
          <source>A short value, expressed in host byte order.</source>
          <target state="translated">以主機位元組順序表示的短整數值。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
          <source>Different computers use different conventions for ordering the bytes within multibyte integer values.</source>
          <target state="translated">不同的電腦會使用不同的慣例來排序中的多位元組的整數值的位元組。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
          <source>Some computers put the most significant byte first (known as big-endian order) and others put the least-significant byte first (known as little-endian order).</source>
          <target state="translated">某些電腦先放置最大顯著性位元組 （亦即位元組由大到小順序） 和其他人先放置最小顯著性位元組 （又稱為 little-endian 順序）。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
          <source>To work with computers that use different byte ordering, all integer values that are sent over the network are sent in network byte order which has the most significant byte first.</source>
          <target state="translated">若要使用不同的位元組順序的電腦使用，會透過網路傳送的所有整數值會以網路位元組順序先具有最大顯著性位元組都傳送。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph> method converts multibyte integer values that are stored on the host system from the byte order used by the network to the byte order used by the host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph>方法會將轉換從主機所使用的位元組順序網路所使用的位元組順序的主機系統所儲存的多位元組的整數值。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int16)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph> method to convert a short value from network byte order to host byte order.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph>方法，以將網路位元組順序的短整數值轉換為主機位元組順序。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
          <source>The number to convert, expressed in network byte order.</source>
          <target state="translated">以網路位元組順序表示之要轉換的數字。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
          <source>Converts an integer value from network byte order to host byte order.</source>
          <target state="translated">將整數值從網路位元組順序轉換為主機位元組順序。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
          <source>An integer value, expressed in host byte order.</source>
          <target state="translated">以主機位元組順序表示的整數值。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
          <source>Different computers use different conventions for ordering the bytes within multibyte integer values.</source>
          <target state="translated">不同的電腦會使用不同的慣例來排序中的多位元組的整數值的位元組。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
          <source>Some computers put the most significant byte first (known as big-endian order) and others put the least-significant byte first (known as little-endian order).</source>
          <target state="translated">某些電腦先放置最大顯著性位元組 （亦即位元組由大到小順序） 和其他人先放置最小顯著性位元組 （又稱為 little-endian 順序）。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
          <source>To work with computers that use different byte ordering, all integer values that are sent over the network are sent in network byte order which has the most significant byte first.</source>
          <target state="translated">若要使用不同的位元組順序的電腦使用，會透過網路傳送的所有整數值會以網路位元組順序先具有最大顯著性位元組都傳送。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph> method converts multibyte integer values that are stored on the host system from the byte order used by the network to the byte order used by the host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph>方法會將轉換從主機所使用的位元組順序網路所使用的位元組順序的主機系統所儲存的多位元組的整數值。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int32)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph> method to convert an integer value from network byte order to host byte order.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph>從網路位元組順序的整數值轉換為主機位元組順序的方法。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
          <source>The number to convert, expressed in network byte order.</source>
          <target state="translated">以網路位元組順序表示之要轉換的數字。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
          <source>Converts a long value from network byte order to host byte order.</source>
          <target state="translated">將長整數值從網路位元組順序轉換為主機位元組順序。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
          <source>A long value, expressed in host byte order.</source>
          <target state="translated">以主機位元組順序表示的長整數值。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
          <source>Different computers use different conventions for ordering the bytes within multibyte integer values.</source>
          <target state="translated">不同的電腦會使用不同的慣例來排序中的多位元組的整數值的位元組。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
          <source>Some computers put the most significant byte first (known as big-endian order) and others put the least-significant byte first (known as little-endian order).</source>
          <target state="translated">某些電腦先放置最大顯著性位元組 （亦即位元組由大到小順序） 和其他人先放置最小顯著性位元組 （又稱為 little-endian 順序）。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
          <source>To work with computers that use different byte ordering, all integer values that are sent over the network are sent in network byte order which has the most significant byte first.</source>
          <target state="translated">若要使用不同的位元組順序的電腦使用，會透過網路傳送的所有整數值會以網路位元組順序先具有最大顯著性位元組都傳送。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph> method converts multibyte integer values that are stored on the host system from the byte order used by the network to the byte order used by the host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph>方法會將轉換從主機所使用的位元組順序網路所使用的位元組順序的主機系統所儲存的多位元組的整數值。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.NetworkToHostOrder(System.Int64)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph> method to convert a long value from network byte order to host byte order.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Net.IPAddress.NetworkToHostOrder%2A&gt;</ph>從網路位元組順序的長整數值轉換為主機位元組順序的方法。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.None">
          <source>Provides an IP address that indicates that no network interface should be used.</source>
          <target state="translated">提供 IP 位址，表示不可使用網路介面。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="F:System.Net.IPAddress.None">
          <source>This field is read-only.</source>
          <target state="translated">此欄位為唯讀。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.None">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Bind%2A?displayProperty=nameWithType&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Net.IPAddress.None&gt;</ph> field to indicate that a <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> must not listen for client activity.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Bind%2A?displayProperty=nameWithType&gt;</ph>方法會使用<ph id="ph2">&lt;xref:System.Net.IPAddress.None&gt;</ph>欄位，指出<ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>必須接聽用戶端活動。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.None">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.None&gt;</ph> field is equivalent to 255.255.255.255 in dotted-quad notation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.None&gt;</ph>欄位相當於 255.255.255.255 四點表示法。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Net.IPAddress.None">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Net.IPAddress.None&gt;</ph> property to indicate that no network interface should be used.</source>
          <target state="translated">下列範例會使用<ph id="ph1">&lt;xref:System.Net.IPAddress.None&gt;</ph>以指出應該使用任何網路介面的屬性。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>A string that contains an IP address in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6.</source>
          <target state="translated">字串，包含使用 IPv4 點分隔四組數字標記法和 IPv6 冒號分隔十六進位標記法的 IP 位址。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>Converts an IP address string to an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> instance.</source>
          <target state="translated">將 IP 位址字串轉換為 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 執行個體。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>The static <ph id="ph1">&lt;xref:System.Net.IPAddress.Parse%2A&gt;</ph> method creates an <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> instance from an IP address expressed in dotted-quad notation for IPv4 and in colon-hexadecimal notation for IPv6.</source>
          <target state="translated">靜態<ph id="ph1">&lt;xref:System.Net.IPAddress.Parse%2A&gt;</ph>方法會建立<ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>來自 IP 位址和 IPv6 的冒號十六進位標記法中 ipv4 以點分隔四標記法來表示的執行個體。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>The number of parts (each part is separated by a period) in <ph id="ph1">`ipString`</ph> determines how the IP address is constructed.</source>
          <target state="translated">中的部分數目 （以逗號分隔每個部分）<ph id="ph1">`ipString`</ph>決定如何建構的 IP 位址。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>A one part address is stored directly in the network address.</source>
          <target state="translated">一個部分的位址是直接儲存在網路位址。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>A two part address, convenient for specifying a class A address, puts the leading part in the first byte and the trailing part in the right-most three bytes of the network address.</source>
          <target state="translated">兩個部分的位址，為便於指定類別 A 位址，會將的前置部分放在第一個位元組和網路位址中最右邊的三個位元組的尾端部分。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>A three part address, convenient for specifying a class B address, puts the first part in the first byte, the second part in the second byte, and the final part in the right-most two bytes of the network address.</source>
          <target state="translated">三個部分的位址，為便於指定類別 B 位址，將第一個部分中的第一個位元組、 第二個部分中的第二個位元組和網路位址的最後一個部分中最右邊的兩個位元組。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>For example:</source>
          <target state="translated">例如: </target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>Number of parts and example <ph id="ph1">`ipString`</ph></source>
          <target state="translated">組件和範例的數目 <ph id="ph1">`ipString`</ph></target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>IPv4 address for IPAddress</source>
          <target state="translated">IPAddress 的 IPv4 位址</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>1 -- "65535"</source>
          <target state="translated">1 -- "65535"</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>0.0.255.255</source>
          <target state="translated">0.0.255.255</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>2 -- "20.2"</source>
          <target state="translated">2 -- "20.2"</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>20.0.0.2</source>
          <target state="translated">20.0.0.2</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>2 -- "20.65535"</source>
          <target state="translated">2 -- "20.65535"</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>20.0.255.255</source>
          <target state="translated">20.0.255.255</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>3 -- "128.1.2"</source>
          <target state="translated">3 -- "128.1.2"</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>128.1.0.2</source>
          <target state="translated">128.1.0.2</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>The following code converts a string that contains an IP address, in dotted-quad notation for IPv4 or in colon-hexadecimal notation for IPv6, into an instance of the <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> class.</source>
          <target state="translated">下列程式碼將會包含一個 IP 位址在點線四標記法中 ipv4 或 ipv6 的執行個體的冒號十六進位標記法的字串轉換<ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph>類別。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source>Then it uses the overloaded <ph id="ph1">&lt;xref:System.Net.IPAddress.ToString%2A&gt;</ph> method to display the address in standard notation.</source>
          <target state="translated">然後它會使用多載<ph id="ph1">&lt;xref:System.Net.IPAddress.ToString%2A&gt;</ph>方法，以顯示在標準標記法的位址。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="ipString" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ipString" /&gt;</ph> 為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="ipString" /&gt;</ph> is not a valid IP address.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="ipString" /&gt;</ph> 不是有效的 IP 位址。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.ScopeId">
          <source>Gets or sets the IPv6 address scope identifier.</source>
          <target state="translated">取得或設定 IPv6 位址範圍識別項。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>A long integer that specifies the scope of the address.</source>
          <target state="translated">指定位址範圍的長整數。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>The meaning of <ph id="ph1">&lt;xref:System.Net.IPAddress.ScopeId%2A&gt;</ph> changes depending on the context in which it is used.</source>
          <target state="translated">意義<ph id="ph1">&lt;xref:System.Net.IPAddress.ScopeId%2A&gt;</ph>使用它的內容而有所不同。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>Link-local address.</source>
          <target state="translated">連結-本機位址。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>On a host with multiple interfaces connected to separate links, the same link-local address can be assigned to multiple interfaces.</source>
          <target state="translated">在主機上具有多個介面連接到不同的連結，相同的連結-本機位址可以指派給多個介面。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>To eliminate this ambiguity, a scope identifier is used to specify the interface over which messages are exchanged.</source>
          <target state="translated">若要消除此模稜兩可，範圍識別項用來指定哪些訊息交換的介面。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>Link-local addresses, identified by the Format Prefix (FP) FE80, are used by nodes when communicating with neighboring nodes on the same link.</source>
          <target state="translated">連結-本機位址，格式首碼 (FP) FE80 所識別節點時使用的相同連結上的相鄰節點通訊。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>Site-local addresses.</source>
          <target state="translated">網站-本機位址。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>A host can be connected to multiple sites.</source>
          <target state="translated">主機可以連接到多個站台。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>In this case, a scope identifier is used to indicate a specific site to communicate with.</source>
          <target state="translated">在此情況下，範圍識別項會表示特定站台彼此通訊。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>Site-local addresses, identified by the Format Prefix (FP) FEC0, are used by nodes when communicating on private intranets.</source>
          <target state="translated">私人內部網路上通訊時，節點會使用格式首碼 (FP) FEC0 中，以識別的網站-本機位址。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>The notation that is used to specify the <ph id="ph1">`ScopeId`</ph> with an address is <ph id="ph2">`Address%ScopeId`</ph>.</source>
          <target state="translated">用來指定的標記法<ph id="ph1">`ScopeId`</ph>的位址是<ph id="ph2">`Address%ScopeId`</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.IPAddress.ScopeId">
          <source>For example, <ph id="ph1">`FE80::5EFE:192.168.41.30%2.`</ph></source>
          <target state="translated">例如：<ph id="ph1">`FE80::5EFE:192.168.41.30%2.`</ph></target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.ScopeId">
          <source><ph id="ph1">&lt;see langword="AddressFamily" /&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">&lt;see langword="InterNetwork" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="AddressFamily" /&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">&lt;see langword="InterNetwork" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.ScopeId">
          <source><ph id="ph1">&lt;paramref name="scopeId" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="scopeId" /&gt;</ph> <ph id="ph2">&amp;lt;</ph> 0</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.ScopeId">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph>或-</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="P:System.Net.IPAddress.ScopeId">
          <source><ph id="ph1">&lt;paramref name="scopeId" /&gt;</ph> <ph id="ph2">&amp;gt;</ph> 0x00000000FFFFFFFF</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="scopeId" /&gt;</ph> <ph id="ph2">&amp;gt;</ph> 0x00000000FFFFFFFF</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.ToString">
          <source>Converts an Internet address to its standard notation.</source>
          <target state="translated">將網際網路位址轉換為其標準標記法。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.ToString">
          <source>A string that contains the IP address in either IPv4 dotted-quad or in IPv6 colon-hexadecimal notation.</source>
          <target state="translated">字串，包含使用 IPv4 點分隔四組數字和 IPv6 冒號分隔十六進位之其中一種標記法的 IP 位址。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Net.IPAddress.ToString%2A&gt;</ph> method converts the IP address that is stored in the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property to either IPv4 dotted-quad or IPv6 colon-hexadecimal notation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.IPAddress.ToString%2A&gt;</ph>方法會將轉換的 IP 位址，儲存在<ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph>IPv4 以點分隔四或 IPv6 冒號十六進位標記法的屬性。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.ToString">
          <source>The address family is <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> and the address is bad.</source>
          <target state="translated">位址家族是 <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>，而且位址是錯誤的。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
          <source>The string to validate.</source>
          <target state="translated">要驗證的字串。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> version of the string.</source>
          <target state="translated">字串的 <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> 版本。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
          <source>Determines whether a string is a valid IP address.</source>
          <target state="translated">判斷字串是否為有效的 IP 位址。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="ipString" /&gt;</ph> was able to be parsed as an IP address; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 <ph id="ph2">&lt;paramref name="ipString" /&gt;</ph> 可以剖析為 IP 位址，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
          <source>Note that this method accepts as valid an ipString value that can be parsed as an <ph id="ph1">&lt;xref:System.Int64&gt;</ph>, and then treats that Int64 as the long value of an IP address in network byte order, similar to the way that the <ph id="ph2">&lt;xref:System.Net.IPAddress.%23ctor%2A&gt;</ph> constructor does.</source>
          <target state="translated">請注意，這個方法會接受為有效可以剖析為 ipString 值<ph id="ph1">&lt;xref:System.Int64&gt;</ph>，，然後將該 Int64 視為以網路位元組順序，其方式類似於 IP 位址的長整數值，<ph id="ph2">&lt;xref:System.Net.IPAddress.%23ctor%2A&gt;</ph>建構函式會。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
          <source>This means that this method returns true if the Int64 is parsed successfully, even if it represents an address that's not a valid IP address.</source>
          <target state="translated">這表示此方法傳回如果 Int64 會剖析成功，則為 true，即使它代表不是有效的 IP 位址的位址。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
          <source>For example, if ipString is "1", this method returns true even though "1" (or 0.0.0.1) is not a valid IP address and you might expect this method to return false.</source>
          <target state="translated">例如，如果 ipString"1"，這個方法會傳回 true 即使"1"（或 0.0.0.1） 不是有效的 IP 位址，以及您可能會希望此方法以傳回 false。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
          <source>Fixing this bug would break existing apps, so the current behavior will not be changed.</source>
          <target state="translated">修正這個 bug 會破壞現有的應用程式，因此不會變更目前的行為。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.IPAddress.TryParse(System.String,System.Net.IPAddress@)">
          <source>Your code can avoid this behavior by ensuring that it only uses this method to parse IP addresses in dotted-decimal format.</source>
          <target state="translated">您的程式碼可以確保它只使用這個方法來剖析十進位格式的 IP 位址，以避免這種行為。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>