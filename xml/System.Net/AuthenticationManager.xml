<Type Name="AuthenticationManager" FullName="System.Net.AuthenticationManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a0f9aa5169b172cc926e0915d06e5d5dfc19af4" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37643620" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthenticationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.AuthenticationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationManager" />
  <TypeSignature Language="F#" Value="type AuthenticationManager = class" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Net.Requests</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>管理在用戶端驗證 (Authentication) 處理期間所呼叫的驗證模組。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager> 是管理應用程式使用的驗證模組的靜態類別。 若要提出要求時受保護的資源，<xref:System.Net.AuthenticationManager>呼叫<xref:System.Net.AuthenticationManager.Authenticate%2A>方法來取得<xref:System.Net.Authorization>在後續要求中使用的執行個體。  
  
 <xref:System.Net.AuthenticationManager>藉由呼叫會查詢每個已註冊的驗證模組<xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType>每個模組的方法。 要傳回的第一個驗證模組<xref:System.Net.Authorization>執行個體用來驗證要求。  
  
 模組，提供基本、 摘要式、 交涉，NTLM，並註冊 Kerberos 的驗證類型<xref:System.Net.AuthenticationManager>預設。 額外的驗證模組可實作<xref:System.Net.IAuthenticationModule>可以使用新增介面<xref:System.Net.AuthenticationManager.Register%2A>方法。 已加入至清單的順序，會呼叫驗證模組。  
  
> [!NOTE]
>  Kerberos 和交涉驗證類型不支援在 Windows 95/98 或 Windows NT 4.0 上。  
  
   
  
## Examples  
 [!code-cpp[System.Net.Authentication#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#1)]
 [!code-csharp[System.Net.Authentication#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#1)]
 [!code-vb[System.Net.Authentication#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization Authenticate (string challenge, System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization Authenticate(string challenge, class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Authenticate(System.String,System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (challenge As String, request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ Authenticate(System::String ^ challenge, System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.Authenticate (challenge, request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="challenge" Type="System.String" />
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="challenge">要求，由網際網路資源所傳回。</param>
        <param name="request">
          <see cref="T:System.Net.WebRequest" />，啟始驗證挑戰。</param>
        <param name="credentials">
          <see cref="T:System.Net.ICredentials" />，與這個要求相關。</param>
        <summary>呼叫每個已註冊的驗證模組，找出第一個可以回應驗證要求的模組。</summary>
        <returns>
          <see cref="T:System.Net.Authorization" /> 類別的執行個體，含有授權嘗試的結果。 如果沒有驗證模組回應要求，這個方法會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Authenticate%2A>方法呼叫<xref:System.Net.IAuthenticationModule.Authenticate%2A?displayProperty=nameWithType>方法，直到其中一個模組以回應每個已註冊的驗證模組上<xref:System.Net.Authorization>執行個體。  
  
 第一個<xref:System.Net.Authorization>傳回的執行個體用來驗證要求。 如果沒有驗證模組可以驗證要求，<xref:System.Net.AuthenticationManager.Authenticate%2A>方法會傳回`null`。  
  
 向註冊順序呼叫驗證模組<xref:System.Net.AuthenticationManager>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="challenge" /> 為 <see langword="null" />。  或 <paramref name="request" /> 為 <see langword="null" />。  或 <paramref name="credentials" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="CredentialPolicy">
      <MemberSignature Language="C#" Value="public static System.Net.ICredentialPolicy CredentialPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.ICredentialPolicy CredentialPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property CredentialPolicy As ICredentialPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::ICredentialPolicy ^ CredentialPolicy { System::Net::ICredentialPolicy ^ get(); void set(System::Net::ICredentialPolicy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CredentialPolicy : System.Net.ICredentialPolicy with get, set" Usage="System.Net.AuthenticationManager.CredentialPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentialPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用於資源要求 (使用 <see cref="T:System.Net.HttpWebRequest" /> 類別所提出) 的認證原則。</summary>
        <value>實作 <see cref="T:System.Net.ICredentialPolicy" /> 介面的物件，判斷認證是否與要求一起傳送。 預設值是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 認證原則會決定是否要傳送的網路資源，例如 Web 網頁內容的要求時傳送的認證。 如果傳送認證，需要用戶端驗證的伺服器，可以嘗試驗證用戶端，而不是傳送回應，指出用戶端的認證所收到要求時。 雖然這可以節省往返到伺服器，這必須平衡跨網路傳送認證的固有的安全性風險。 目的地伺服器不需要用戶端驗證時最好不要傳送認證。  
  
 認證原則將會呼叫只會針對要求指定的認證，或使用<xref:System.Net.WebProxy>物件，指定認證。  
  
   
  
## Examples  
 下列程式碼範例將示範如何設定認證原則。  
  
 [!code-cpp[NclCredPolicy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#2)]
 [!code-csharp[NclCredPolicy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTargetNameDictionary">
      <MemberSignature Language="C#" Value="public static System.Collections.Specialized.StringDictionary CustomTargetNameDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Specialized.StringDictionary CustomTargetNameDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CustomTargetNameDictionary As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Specialized::StringDictionary ^ CustomTargetNameDictionary { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomTargetNameDictionary : System.Collections.Specialized.StringDictionary" Usage="System.Net.AuthenticationManager.CustomTargetNameDictionary" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.MonoTODO</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得包含服務主要名稱 (SPN) 的字典，在使用 Kerberos 驗證要求 (使用 <see cref="T:System.Net.WebRequest" /> 及其衍生類別所提出) 期間，這些服務主要名稱用來識別主機。</summary>
        <value>可寫入的 <see cref="T:System.Collections.Specialized.StringDictionary" />，包含由主機資訊所組成之索引鍵的 SPN 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SPN 是用戶端用於唯一識別服務或基於相互驗證的伺服器上的應用程式的執行個體的名稱。 根據預設，要求相互驗證，而您可以要求它藉由設定<xref:System.Net.WebRequest.AuthenticationLevel%2A?displayProperty=nameWithType>至<xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired>在您的要求。  
  
 當<xref:System.Net.WebRequest>需要相互驗證，SPN，目的地必須提供用戶端。 如果您知道 SPN，您可以將它加入<xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>傳送要求之前。 如果您尚未加入至這個字典中，SPN 的資訊<xref:System.Net.AuthenticationManager>使用<xref:System.Net.WebRequest.RequestUri%2A>方法來撰寫最可能的 SPN; 不過，這是計算的值，而且可能不正確。 如果相互驗證嘗試且失敗，您可以檢查字典，以便判斷計算的 SPN。 沒有 SPN 會輸入到字典中，如果驗證通訊協定不支援相互驗證。  
  
 若要將 SPN 值新增至這個字典中，使用<xref:System.Uri.AbsoluteUri%2A>的<xref:System.Net.WebRequest.RequestUri%2A>做為索引鍵。 就內部而言，索引鍵會被截斷成包含<xref:System.Uri.Scheme%2A>， <xref:System.Uri.Host%2A>，和<xref:System.Uri.Port%2A>如果不是預設的連接埠。  
  
> [!NOTE]
>  存取方法和屬性<xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>需要不受限制<xref:System.Net.WebPermission>。  
  
> [!NOTE]
>  透過 proxy 執行 Kerberos 驗證時，需要解析 SPN 為 proxy 和 ultimate 的主機名稱。 Proxy 名稱解析受保護的逾時。 Spn 的 ultimate 的主機名稱解析所需的 DNS 查閱，並沒有直接與這項作業相關聯的逾時。 因此同步作業可能需要較長逾時。 若要解決此問題，加入 SPN 快取之前，要求中的 ultimate 主機的 URI 前置詞。  
  
 如果未設定 <xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A> 屬性，版本 3.5 SP1 現在預設成指定 NTLM (NT LAN Manager) 驗證交換時 SPN 之要求 URL 中所使用的主機名稱。 要求 URL 中所使用的主機名稱可能不同於用戶端要求的 <xref:System.Net.HttpRequestHeader?displayProperty=nameWithType> 中所指定的主機標頭。 要求 URL 中所使用的主機名稱可能不同於伺服器的實際主機名稱、伺服器的電腦名稱、電腦的 IP 位址或迴路位址。 在這些情況下，Windows 會讓驗證要求失敗。 若要解決這個問題，您可能需要通知使用主機名稱的 Windows 中的要求 URL 中用戶端要求 ("contoso"，例如) 是實際的本機電腦的替代名稱。  
  
   
  
## Examples  
 下列程式碼範例會示範如何顯示的內容<xref:System.Net.AuthenticationManager.CustomTargetNameDictionary%2A>。  
  
 [!code-cpp[NclCredPolicy#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLCredPolicy/CPP/NCLCredPolicy.cpp#5)]
 [!code-csharp[NclCredPolicy#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLCredPolicy/CS/websample.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public static System.Net.Authorization PreAuthenticate (System.Net.WebRequest request, System.Net.ICredentials credentials);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Authorization PreAuthenticate(class System.Net.WebRequest request, class System.Net.ICredentials credentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.PreAuthenticate(System.Net.WebRequest,System.Net.ICredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function PreAuthenticate (request As WebRequest, credentials As ICredentials) As Authorization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Authorization ^ PreAuthenticate(System::Net::WebRequest ^ request, System::Net::ICredentials ^ credentials);" />
      <MemberSignature Language="F#" Value="static member PreAuthenticate : System.Net.WebRequest * System.Net.ICredentials -&gt; System.Net.Authorization" Usage="System.Net.AuthenticationManager.PreAuthenticate (request, credentials)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Authorization</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="credentials" Type="System.Net.ICredentials" />
      </Parameters>
      <Docs>
        <param name="request">網際網路資源的 <see cref="T:System.Net.WebRequest" />。</param>
        <param name="credentials">
          <see cref="T:System.Net.ICredentials" />，與要求相關。</param>
        <summary>預先驗證要求。</summary>
        <returns>如果可以預先驗證要求，則為 <see cref="T:System.Net.Authorization" /> 類別的執行個體，否則為 <see langword="null" />。 如果 <paramref name="credentials" /> 為 <see langword="null" />，這個方法會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果驗證模組可以預先驗證要求，<xref:System.Net.AuthenticationManager.PreAuthenticate%2A>方法會傳回驗證執行個體，並傳送給預先而不是等待要發出挑戰的資源伺服器的授權資訊。 此行為概述於 RFC 2617 的 3.3 節 (HTTP 驗證： 基本與摘要式存取驗證)。 支援預先驗證的驗證模組可讓用戶端來避免驗證挑戰所造成的額外往返，進而改善伺服器的效率。  
  
 授權模組可以預先驗證要求組<xref:System.Net.IAuthenticationModule.CanPreAuthenticate%2A?displayProperty=nameWithType>屬性設`true`。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public static void Register (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Register(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Register(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Register (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Register(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Register : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Register authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">
          <see cref="T:System.Net.IAuthenticationModule" />，使用驗證管理員登錄。</param>
        <summary>使用驗證管理員註冊驗證模組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Register%2A>方法會將驗證模組新增至所呼叫的模組清單的結尾<xref:System.Net.AuthenticationManager.Authenticate%2A>方法。 已加入至清單的順序，會呼叫驗證模組。 如果具有相同的模組<xref:System.Net.IAuthenticationModule.AuthenticationType%2A>是已註冊，這個方法會移除已註冊的模組並將`authenticationModule`清單的結尾。  
  
   
  
## Examples  
 下列範例會使用驗證管理員註冊驗證模組。 如需完整範例，請參閱<xref:System.Net.AuthenticationManager>類別。  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationModule" /> 為 <see langword="null" />。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">執行 unmanaged 程式碼。 關聯的列舉型別：<see cref="T:System.Security.Permissions.SecurityPermissionFlag" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="RegisteredModules">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator RegisteredModules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerator RegisteredModules" />
      <MemberSignature Language="DocId" Value="P:System.Net.AuthenticationManager.RegisteredModules" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RegisteredModules As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerator ^ RegisteredModules { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RegisteredModules : System.Collections.IEnumerator" Usage="System.Net.AuthenticationManager.RegisteredModules" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得使用驗證管理員註冊的驗證模組清單。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerator" />，啟用要讀取之已註冊的驗證模組。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.RegisteredModules%2A>屬性會提供<xref:System.Collections.IEnumerator>，可讓清單執行個體註冊驗證模組來讀取。 <xref:System.Net.AuthenticationManager.Register%2A>方法會將模組新增至清單中，而<xref:System.Net.AuthenticationManager.Unregister%2A>方法將從中移除模組。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Net.AuthenticationManager.RegisteredModules%2A>屬性，以取得使用驗證管理員註冊的驗證模組的清單。 如需完整範例，請參閱<xref:System.Net.AuthenticationManager>類別。  
  
 [!code-cpp[System.Net.Authentication#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Authentication/CPP/custombasicauthentication.cpp#8)]
 [!code-csharp[System.Net.Authentication#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Authentication/CS/custombasicauthentication.cs#8)]
 [!code-vb[System.Net.Authentication#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Authentication/VB/custombasicauthentication.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Unregister">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從登錄模組的清單移除驗證模組。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (System.Net.IAuthenticationModule authenticationModule);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(class System.Net.IAuthenticationModule authenticationModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.Net.IAuthenticationModule)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationModule As IAuthenticationModule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::Net::IAuthenticationModule ^ authenticationModule);" />
      <MemberSignature Language="F#" Value="static member Unregister : System.Net.IAuthenticationModule -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationModule" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationModule" Type="System.Net.IAuthenticationModule" />
      </Parameters>
      <Docs>
        <param name="authenticationModule">
          <see cref="T:System.Net.IAuthenticationModule" />，其將從註冊的模組清單移除。</param>
        <summary>從登錄模組的清單移除指定的驗證模組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Unregister%2A>方法會從所呼叫的驗證模組清單中移除指定的驗證模組<xref:System.Net.AuthenticationManager.Authenticate%2A>方法。 此模組必須已新增至清單使用<xref:System.Net.AuthenticationManager.Register%2A>方法之前就可以從清單中移除。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Net.AuthenticationManager.Unregister%2A>方法，以從登錄模組的清單中移除指定的驗證模組。 如需完整範例，請參閱<xref:System.Net.AuthenticationManager>類別。  
  
 [!code-cpp[System.Net.Sockets.Authentication#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CPP/custombasicauthentication.cpp#2)]
 [!code-csharp[System.Net.Sockets.Authentication#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.Authentication/CS/custombasicauthentication.cs#2)]
 [!code-vb[System.Net.Sockets.Authentication#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.Authentication/VB/custombasicauthentication.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationModule" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">指定的 <see cref="T:System.Net.IAuthenticationModule" /> 未註冊。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">執行 unmanaged 程式碼。 關聯的列舉型別：<see cref="T:System.Security.Permissions.SecurityPermissionFlag" />。</permission>
      </Docs>
    </Member>
    <Member MemberName="Unregister">
      <MemberSignature Language="C#" Value="public static void Unregister (string authenticationScheme);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Unregister(string authenticationScheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.AuthenticationManager.Unregister(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Unregister (authenticationScheme As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Unregister(System::String ^ authenticationScheme);" />
      <MemberSignature Language="F#" Value="static member Unregister : string -&gt; unit" Usage="System.Net.AuthenticationManager.Unregister authenticationScheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Requests</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authenticationScheme" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationScheme">要移除之模組的驗證配置。</param>
        <summary>從登錄模組的清單移除具有指定驗證配置的驗證模組。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.AuthenticationManager.Unregister%2A>方法會從所呼叫的驗證模組清單中移除具有指定的驗證配置的驗證模組<xref:System.Net.AuthenticationManager.Authenticate%2A>方法。 此模組必須已新增至清單使用<xref:System.Net.AuthenticationManager.Register%2A>方法之前就可以從清單中移除。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Net.AuthenticationManager.Unregister%2A>方法，以從登錄模組的清單中移除具有指定的驗證配置驗證模組。  
  
 [!code-cpp[AuthenticationManager_UnRegister2#2](~/samples/snippets/cpp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CPP/authenticationmanager_unregister2.cpp#2)]
 [!code-csharp[AuthenticationManager_UnRegister2#2](~/samples/snippets/csharp/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/CS/authenticationmanager_unregister2.cs#2)]
 [!code-vb[AuthenticationManager_UnRegister2#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/AuthenticationManager_UnRegister2/VB/authenticationmanager_unregister2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="authenticationScheme" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">這個驗證配置的模組未註冊。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">執行 unmanaged 程式碼。 關聯的列舉型別：<see cref="T:System.Security.Permissions.SecurityPermissionFlag" />。</permission>
      </Docs>
    </Member>
  </Members>
</Type>