<Type Name="WebPermission" FullName="System.Net.WebPermission">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="242b6b8a03b567b9c2364e4663b7d46e61a5880b" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51913495" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WebPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit WebPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.WebPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WebPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type WebPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>控制對 HTTP 網際網路資源存取的權限。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission> 提供一組方法和屬性來控制對網際網路資源的存取。 您可以使用<xref:System.Net.WebPermission>來提供限制或無限制資源的存取權，根據<xref:System.Security.Permissions.PermissionState>設定時<xref:System.Net.WebPermission>建立。  
  
 建立<xref:System.Net.WebPermission>藉由呼叫其建構函式，使用下列其中一個執行個體設定的參數：  
  
-   沒有參數。 預設的 <xref:System.Security.Permissions.PermissionState> 是 <xref:System.Security.Permissions.PermissionState.None>。  
  
-   <xref:System.Security.Permissions.PermissionState>。 指定<xref:System.Security.Permissions.PermissionState.Unrestricted>以允許要在目標類別中，使用任何 URI 或<xref:System.Security.Permissions.PermissionState.None>供您使用指定的 Uri 存取<xref:System.Net.WebPermission.AddPermission%2A>方法。  
  
-   A<xref:System.Net.NetworkAccess>值和 URI 字串。 指定的 URI 已授與權限<xref:System.Net.NetworkAccess>值。  
  
-   A<xref:System.Net.NetworkAccess>規範和 URI 規則運算式。  
  
 <xref:System.Net.WebPermission.ConnectList%2A>和<xref:System.Net.WebPermission.AcceptList%2A>保存您已對其授與存取權限的 Uri。 若要將 URI 新增至這些清單中，使用<xref:System.Net.WebPermission.AddPermission%2A>。 如果您傳遞<xref:System.Net.NetworkAccess.Accept>作為<xref:System.Net.NetworkAccess>參數，URI 就會加入至<xref:System.Net.WebPermission.AcceptList%2A>。 <xref:System.Net.WebPermission> 將會允許連線到您的目標類別與 Uri 比對<xref:System.Net.WebPermission.AcceptList%2A>。  
  
> [!CAUTION]
>  若要拒絕存取網際網路資源，您必須拒絕所有可能的路徑，該資源的存取。 這需要呼叫<xref:System.Net.WebPermission.%23ctor%2A?displayProperty=nameWithType>狀態參數設定為<xref:System.Security.CodeAccessPermission.Deny%2A>。 更好的方法是允許存取特定資源。 如需有關這個主題的詳細資訊，請參閱[NIB： 使用 Deny 方法](https://msdn.microsoft.com/library/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25)主題。  
  
> [!NOTE]
>  您要拒絕存取使用資源正式路徑。 沒有需要使用所有路徑的語法變化。  
  
> [!NOTE]
>  使用者名稱和預設連接埠的資訊從除去<xref:System.Uri>利用規則運算式的引數提供給在比較之前<xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29>建構函式。 如果規則運算式包含使用者資訊或預設的連接埠號碼，則所有的連入<xref:System.Uri>s 將無法符合規則運算式。  
  
   
  
## Examples  
 下列範例示範如何建立的新執行個體<xref:System.Net.WebPermission>使用<xref:System.Text.RegularExpressions.Regex>。 其他主機新增至連線，並接受清單<xref:System.Net.WebPermission>。 最後，連線並接受清單會顯示到主控台。  
  
 [!code-cpp[WebPermission_Regex#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Regex/CPP/regex.cpp#1)]
 [!code-csharp[WebPermission_Regex#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Regex/CS/regex.cs#1)]
 [!code-vb[WebPermission_Regex#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Regex/VB/regex.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.CodeAccessPermission" />
    <altmember cref="T:System.Security.Permissions.PermissionState" />
    <altmember cref="T:System.Net.NetworkAccess" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立 <see cref="T:System.Net.WebPermission" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Net.WebPermission" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 建立 <xref:System.Net.WebPermission> 類別的新執行個體。 這個建構函式會建立空的權限，不會授與任何權限。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.IsUnrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Security.Permissions.PermissionState -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Security.Permissions.PermissionState" /> 值。</param>
        <summary>初始化 <see cref="T:System.Net.WebPermission" /> 類別的新執行個體，這個執行個體可決定是否通過所有要求。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 值`state`參數是<xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>或<xref:System.Security.Permissions.PermissionState.Unrestricted?displayProperty=nameWithType>分別產生完全受限制或完全不受限制地存取安全性的所有變數。 如果您指定<xref:System.Security.Permissions.PermissionState.None?displayProperty=nameWithType>，然後您可以授與存取個別的 Uri 使用<xref:System.Net.WebPermission.AddPermission%2A>。  
  
   
  
## Examples  
 下列範例建立的執行個體<xref:System.Net.WebPermission>和提供存取至特定 Url 的權限。  
  
 [!code-cpp[WebPermission_Copy#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#1)]
 [!code-csharp[WebPermission_Copy#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#1)]
 [!code-vb[WebPermission_Copy#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Security.Permissions.PermissionState.Unrestricted" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * string -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">NetworkAccess 值，表示對指定的 URI 所授與的存取權限類型。 <see cref="F:System.Net.NetworkAccess.Accept" />，表示允許應用程式接受從網際網路至本機資源的連接。 <see cref="F:System.Net.NetworkAccess.Connect" />指示允許將應用程式連接到特定的網際網路資源。</param>
        <param name="uriString">要授與存取權限的 URI 字串。</param>
        <summary>使用指定 URI 的指定存取權限，建立 <see cref="T:System.Net.WebPermission" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式初始化<xref:System.Net.WebPermission>及加大遠端主機連接或接受遠端主機連接，並使用所描述的 URI 其目標使用權限會授與`uriString`參數。  
  
   
  
## Examples  
 下列範例會建立的新執行個體<xref:System.Net.WebPermission>具有指定之 URI 的 connect 權限。  
  
 [!code-cpp[WebPermission_Union#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#1)]
 [!code-csharp[WebPermission_Union#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#1)]
 [!code-vb[WebPermission_Union#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriString" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.#ctor(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="new System.Net.WebPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; System.Net.WebPermission" Usage="new System.Net.WebPermission (access, uriRegex)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">
          <see cref="T:System.Net.NetworkAccess" /> 值，表示對指定的 URI 所授與的存取權限類型。 <see cref="F:System.Net.NetworkAccess.Accept" />，表示允許應用程式接受從網際網路至本機資源的連接。 <see cref="F:System.Net.NetworkAccess.Connect" />指示允許將應用程式連接到特定的網際網路資源。</param>
        <param name="uriRegex">規則運算式，說明要授與存取權限的 URI。</param>
        <summary>以指定 URI 規則運算式的指定存取權限，初始化 <see cref="T:System.Net.WebPermission" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個建構函式初始化<xref:System.Net.WebPermission>及加大遠端主機連接或接受遠端主機連接，並使用所描述的 URI 其目標使用權限會授與`uriRegex`參數。  
  
> [!NOTE]
>  建議您建立`uriRegex`使用<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>， <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType>，和<xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType>旗標。  
  
> [!NOTE]
>  URI 字串的候選項目會檢查相關的規則運算式的清單進行比對 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 有兩種。 首先，針對適當的清單; 檢查候選 URI 字串然後，如果沒有相符項目，候選 URI 字串會轉換成<xref:System.Uri>和適當的清單核對。  
  
   
  
## Examples  
 下列範例會建立的新執行個體<xref:System.Net.WebPermission>以指定的 connect 權限<xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType>。  
  
 [!code-cpp[WebPermission_Constructor4#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Constructor4/CPP/webpermission_constructor4.cpp#1)]
 [!code-csharp[WebPermission_Constructor4#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Constructor4/CS/webpermission_constructor4.cs#1)]
 [!code-vb[WebPermission_Constructor4#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Constructor4/VB/webpermission_constructor4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.RegularExpressions.Regex" />
      </Docs>
    </Member>
    <Member MemberName="AcceptList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator AcceptList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator AcceptList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.AcceptList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AcceptList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ AcceptList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AcceptList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.AcceptList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性會傳回由這個 <see cref="T:System.Net.WebPermission" /> 保留的單一接受使用權限其列舉型別。 傳回的列舉型別中所包含的可能物件型別為 <see cref="T:System.String" /> 和 <see cref="T:System.Text.RegularExpressions.Regex" />。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerator" /> 介面，包含接受使用權限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會取得一份本機資源，這允許<xref:System.Net.WebPermission>。 您已套用的類別<xref:System.Net.WebPermission>只有接收連入連線到這份清單中找不到本機資源的權限。  
  
> [!NOTE]
>  您可以將 Uri 加入此清單使用<xref:System.Net.WebPermission.AddPermission%2A>。  
  
> [!NOTE]
>  URI 字串的候選項目會檢查相關的規則運算式的清單進行比對 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 有兩種。 首先，針對適當的清單; 檢查候選 URI 字串然後，如果沒有相符項目，候選 URI 字串會轉換成<xref:System.Uri>和適當的清單核對。  
  
   
  
## Examples  
 下列範例會列印中的 Url<xref:System.Net.WebPermission.AcceptList%2A>到主控台。  
  
 [!code-cpp[WebPermission_AcceptConnectList#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#2)]
 [!code-csharp[WebPermission_AcceptConnectList#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#2)]
 [!code-vb[WebPermission_AcceptConnectList#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPermission">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>以指定的存取權限將指定的 URI 加入至目前 <see cref="T:System.Net.WebPermission" />。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, string uriString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, string uriString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::String ^ uriString);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * string -&gt; unit" Usage="webPermission.AddPermission (access, uriString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="access">
          <see cref="T:System.Net.NetworkAccess" />，指定要授與 URI 的存取權限。</param>
        <param name="uriString">字串，說明要授與存取權限的 URI。</param>
        <summary>以指定的存取權限將指定的 URI 字串加入至目前 <see cref="T:System.Net.WebPermission" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您已指定<xref:System.Security.Permissions.PermissionState.None>作為<xref:System.Security.Permissions.PermissionState>，使用<xref:System.Net.WebPermission.AddPermission%2A>以允許使用`uriString`目標類別中。 採用的方式`uriString`可用的目標類別由`access`。 指定<xref:System.Net.NetworkAccess.Accept>做為存取參數，將所指定的 URI`uriString`的 URI 清單的參數接受字串，或指定<xref:System.Net.NetworkAccess.Connect>存取參數將 URI 新增至清單的 URI 連接字串。  
  
> [!NOTE]
>  呼叫<xref:System.Net.WebPermission.AddPermission%2A>上<xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Net.WebPermission>會有任何作用，因為權限會授與所有 Uri。  
  
> [!NOTE]
>  URI 字串的候選項目會檢查相關的規則運算式的清單進行比對 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 有兩種。 首先，針對適當的清單; 檢查候選 URI 字串然後，如果沒有相符項目，候選 URI 字串會轉換成<xref:System.Uri>和適當的清單核對。  
  
   
  
## Examples  
 下列範例示範如何加入特定的 URL 字串的存取權限。  
  
 [!code-cpp[WebPermission_Intersect#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#2)]
 [!code-csharp[WebPermission_Intersect#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#2)]
 [!code-vb[WebPermission_Intersect#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriString" /> 為 <see langword="null" />。</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public void AddPermission (System.Net.NetworkAccess access, System.Text.RegularExpressions.Regex uriRegex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPermission(valuetype System.Net.NetworkAccess access, class System.Text.RegularExpressions.Regex uriRegex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.Text.RegularExpressions.Regex)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPermission (access As NetworkAccess, uriRegex As Regex)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPermission(System::Net::NetworkAccess access, System::Text::RegularExpressions::Regex ^ uriRegex);" />
      <MemberSignature Language="F#" Value="member this.AddPermission : System.Net.NetworkAccess * System.Text.RegularExpressions.Regex -&gt; unit" Usage="webPermission.AddPermission (access, uriRegex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="access" Type="System.Net.NetworkAccess" />
        <Parameter Name="uriRegex" Type="System.Text.RegularExpressions.Regex" />
      </Parameters>
      <Docs>
        <param name="access">NetworkAccess，指定要授與 URI 的存取權限。</param>
        <param name="uriRegex">規則運算式，說明要授與存取權限的 URI 集合。</param>
        <summary>以指定的存取權限將指定的 URI 加入至目前 <see cref="T:System.Net.WebPermission" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果您已指定<xref:System.Security.Permissions.PermissionState.None>作為<xref:System.Security.Permissions.PermissionState>，使用<xref:System.Net.WebPermission.AddPermission%2A>以允許使用`uriRegex`目標類別中。 指定<xref:System.Net.NetworkAccess.Accept>作為`access`要加入所指定的 URI 參數`uriRegex`至的 URI 清單的參數接受字串，或指定<xref:System.Net.NetworkAccess.Connect>存取參數將 URI 新增至清單的 URI 連接字串。  
  
> [!NOTE]
>  呼叫<xref:System.Net.WebPermission.AddPermission%2A>上<xref:System.Security.Permissions.PermissionState.Unrestricted><xref:System.Net.WebPermission>執行個體將會有任何作用，因為權限會授與所有 Uri。  
  
> [!NOTE]
>  建議您建立`uriRegex`使用<xref:System.Text.RegularExpressions.RegexOptions.IgnoreCase?displayProperty=nameWithType>， <xref:System.Text.RegularExpressions.RegexOptions.Compiled?displayProperty=nameWithType>，和<xref:System.Text.RegularExpressions.RegexOptions.Singleline?displayProperty=nameWithType>旗標。  
  
> [!NOTE]
>  URI 字串的候選項目會檢查相關的規則運算式的清單進行比對 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 有兩種。 首先，針對適當的清單; 檢查候選 URI 字串然後，如果沒有相符項目，候選 URI 字串會轉換成<xref:System.Uri>和適當的清單核對。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Net.WebPermission.AddPermission%2A>來授與指定之 uri 的存取權。  
  
 [!code-cpp[WebPermission_IsSubset#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset/CPP/webpermission_issubset.cpp#1)]
 [!code-csharp[WebPermission_IsSubset#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset/CS/webpermission_issubset.cs#1)]
 [!code-vb[WebPermission_IsSubset#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset/VB/webpermission_issubset.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="uriRegex" /> 參數為 <see langword="null" />。</exception>
        <altmember cref="T:System.Net.NetworkAccess" />
      </Docs>
    </Member>
    <Member MemberName="ConnectList">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator ConnectList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator ConnectList" />
      <MemberSignature Language="DocId" Value="P:System.Net.WebPermission.ConnectList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectList As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IEnumerator ^ ConnectList { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectList : System.Collections.IEnumerator" Usage="System.Net.WebPermission.ConnectList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性會傳回由這個 <see cref="T:System.Net.WebPermission" /> 保留的單一接受使用權限其列舉型別。 傳回的列舉型別中所包含的可能物件型別為 <see cref="T:System.String" /> 和 <see cref="T:System.Text.RegularExpressions.Regex" />。</summary>
        <value>
          <see cref="T:System.Collections.IEnumerator" /> 介面，包含連接使用權限。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性會取得遠端資源所允許的這一份<xref:System.Net.WebPermission>。 您已套用的類別<xref:System.Net.WebPermission>只有交流這份清單中找不到資源的權限。  
  
> [!NOTE]
>  您可以將 Uri 加入此清單使用<xref:System.Net.WebPermission.AddPermission%2A>。  
  
> [!NOTE]
>  URI 字串的候選項目會檢查相關的規則運算式的清單進行比對 (<xref:System.Net.WebPermission.AcceptList%2A>或<xref:System.Net.WebPermission.ConnectList%2A>) 有兩種。 首先，針對適當的清單; 檢查候選 URI 字串然後，如果沒有相符項目，候選 URI 字串會轉換成<xref:System.Uri>和適當的清單核對。  
  
   
  
## Examples  
 下列範例會列印中的 Url<xref:System.Net.WebPermission.ConnectList%2A>到主控台。  
  
 [!code-cpp[WebPermission_AcceptConnectList#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CPP/webpermission_acceptconnectlist.cpp#1)]
 [!code-csharp[WebPermission_AcceptConnectList#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_AcceptConnectList/CS/webpermission_acceptconnectlist.cs#1)]
 [!code-vb[WebPermission_AcceptConnectList#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_AcceptConnectList/VB/webpermission_acceptconnectlist.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="abstract member Copy : unit -&gt; System.Security.IPermission&#xA;override this.Copy : unit -&gt; System.Security.IPermission" Usage="webPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Net.WebPermission" /> 的複本。</summary>
        <returns>
          <see cref="T:System.Net.WebPermission" /> 類別的新執行個體，具有和原始類別相同的值。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.IPermission>傳回的相同資源的存取權與原始這個方法代表<xref:System.Net.WebPermission>。 這個方法會覆寫<xref:System.Security.CodeAccessPermission.Copy%2A>並實作以支援<xref:System.Security.IPermission>介面。  
  
   
  
## Examples  
 下列範例示範如何建立的第二個執行個體<xref:System.Net.WebPermission>使用<xref:System.Net.WebPermission.Copy%2A>。 這個第二個執行個體完全相同的第一個項目。  
  
 [!code-cpp[WebPermission_Copy#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Copy/CPP/webpermission_copy.cpp#2)]
 [!code-csharp[WebPermission_Copy#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Copy/CS/webpermission_copy.cs#2)]
 [!code-vb[WebPermission_Copy#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Copy/VB/webpermission_copy.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ securityElement);" />
      <MemberSignature Language="F#" Value="abstract member FromXml : System.Security.SecurityElement -&gt; unit&#xA;override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="webPermission.FromXml securityElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">要重建 <see cref="T:System.Net.WebPermission" /> 的 XML 編碼方式。</param>
        <summary>從 XML 編碼方式重建 <see cref="T:System.Net.WebPermission" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.FromXml%2A>方法重建<xref:System.Net.WebPermission>從 XML 編碼，可定義由<xref:System.Security.SecurityElement>類別。  
  
 使用<xref:System.Net.WebPermission.ToXml%2A>方法，以 XML 編碼<xref:System.Net.WebPermission>，包含狀態資訊。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Security.SecurityElement?displayProperty=nameWithType>、 填入其屬性，並使用<xref:System.Net.WebPermission.FromXml%2A>將此資訊傳送到的執行個體<xref:System.Net.WebPermission>。  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="securityElement" /> 參數為 <see langword="null." />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="securityElement" /> 不是這個型別的使用權限項目。</exception>
        <altmember cref="M:System.Net.WebPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Intersect : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">要與目前執行個體比較的 <see cref="T:System.Net.WebPermission" />。</param>
        <summary>傳回兩個 <see cref="T:System.Net.WebPermission" /> 執行個體的邏輯交集。</summary>
        <returns>新 <see cref="T:System.Net.WebPermission" />，表示目前執行個體和 <paramref name="target" /> 參數的交集。 如果交集為空的，方法會傳回 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Intersect%2A> 會傳回<xref:System.Net.WebPermission>，其中包含在兩者中很常見的那些使用權限`target`和目前的執行個體。  
  
 這個方法會覆寫<xref:System.Security.CodeAccessPermission.Intersect%2A>並實作以支援<xref:System.Security.IPermission>介面。  
  
   
  
## Examples  
 下列範例示範如何建立的執行個體<xref:System.Net.WebPermission>使用兩個現有的邏輯交集<xref:System.Net.WebPermission>執行個體。  
  
 [!code-cpp[WebPermission_Intersect#3](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Intersect/CPP/webpermission_intersect.cpp#3)]
 [!code-csharp[WebPermission_Intersect#3](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Intersect/CS/webpermission_intersect.cs#3)]
 [!code-vb[WebPermission_Intersect#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Intersect/VB/webpermission_intersect.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="target" /> 不是 <see langword="null" /> 或屬於 <see cref="T:System.Net.WebPermission" /> 型別</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member IsSubsetOf : System.Security.IPermission -&gt; bool&#xA;override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="webPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">要與目前 <see cref="T:System.Net.WebPermission" /> 比較的 <see cref="T:System.Net.WebPermission" />。</param>
        <summary>判斷目前 <see cref="T:System.Net.WebPermission" /> 是否為指定物件的子集。</summary>
        <returns>如果目前的執行個體是 <paramref name="target" /> 參數的子集，則為 <see langword="true" />，否則為 <see langword="false" />。 如果目標為 <see langword="null" />，則方法會傳回 <see langword="true" />，表示目前為空的不受限制的使用權限，否則傳回 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果目前<xref:System.Net.WebPermission>指定相關聯的資源全部包含的一組`target`參數，則目前<xref:System.Net.WebPermission>子集`target`。 這個方法會覆寫<xref:System.Net.WebPermission.IsSubsetOf%2A>並實作以支援<xref:System.Security.IPermission>介面。  
  
   
  
## Examples  
 下列範例會使用<xref:System.Net.WebPermission.IsSubsetOf%2A>來判斷某個執行個體中是否找到的存取權限<xref:System.Net.WebPermission>位於另一個執行個體<xref:System.Net.WebPermission>。  
  
 [!code-cpp[WebPermission_IsSubset2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_IsSubset2/CPP/source.cpp#1)]
 [!code-csharp[WebPermission_IsSubset2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_IsSubset2/CS/source.cs#1)]
 [!code-vb[WebPermission_IsSubset2#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_IsSubset2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">目標參數不是 <see cref="T:System.Net.WebPermission" /> 的執行個體。</exception>
        <exception cref="T:System.NotSupportedException">目前執行個體含有 Regex 編碼權限，且在目標執行個體中找不到完全相同的權限。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="webPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>檢查 <see cref="T:System.Net.WebPermission" /> 的整體使用權限狀態。</summary>
        <returns>如果 <see cref="T:System.Net.WebPermission" /> 是使用 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /><see cref="T:System.Security.Permissions.PermissionState" /> 建立的，則為 <see langword="true" />；否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Net.WebPermission>是<xref:System.Security.Permissions.PermissionState.Unrestricted>，則目標類別可以使用所有的 Uri。 否則，特定的權限必須給任何您想要使用與目標類別的 URI。  
  
> [!NOTE]
>  使用<xref:System.Net.WebPermission.AddPermission%2A>uri，並指定其權限。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.AddPermission(System.Net.NetworkAccess,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="abstract member ToXml : unit -&gt; System.Security.SecurityElement&#xA;override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="webPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立 <see cref="T:System.Net.WebPermission" /> 和其目前狀態的 XML 編碼方式。</summary>
        <returns>
          <see cref="T:System.Security.SecurityElement" />，包含 <see cref="T:System.Net.WebPermission" /> 的 XML 編碼表示，包含狀態資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Net.WebPermission.FromXml%2A>若要還原的狀態資訊的方法<xref:System.Security.SecurityElement>。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Net.WebPermission.ToXml%2A>來建立<xref:System.Security.SecurityElement?displayProperty=nameWithType>並列印到主控台及其屬性。  
  
 [!code-cpp[WebPermission_FromToXml#1](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_FromToXml/CPP/webpermission_fromtoxml.cpp#1)]
 [!code-csharp[WebPermission_FromToXml#1](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_FromToXml/CS/webpermission_fromtoxml.cs#1)]
 [!code-vb[WebPermission_FromToXml#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_FromToXml/VB/webpermission_fromtoxml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.WebPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.WebPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="abstract member Union : System.Security.IPermission -&gt; System.Security.IPermission&#xA;override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="webPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">
          <see cref="T:System.Net.WebPermission" />，要與目前的 <see cref="T:System.Net.WebPermission" /> 比較。</param>
        <summary>傳回 <see cref="T:System.Net.WebPermission" /> 類別的兩個執行個體間的邏輯等位。</summary>
        <returns>
          <see cref="T:System.Net.WebPermission" />，表示目前執行個體和 <paramref name="target" /> 參數間的聯集。 如果 <see langword="WebPermission" /> 是 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />，方法將傳回屬於 <see cref="T:System.Net.WebPermission" /> 的 <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />。 如果目標是 <see langword="null" />，則方法會傳回目前 <see cref="T:System.Net.WebPermission" /> 的複本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.WebPermission.Union%2A> 會傳回<xref:System.Net.WebPermission>，其中包含的所有使用權限同時`target`和目前的執行個體。  
  
   
  
## Examples  
 下列範例會採用兩個的邏輯聯集<xref:System.Net.WebPermission>若要建立的第三個執行個體的執行個體<xref:System.Net.WebPermission>。  
  
 [!code-cpp[WebPermission_Union#2](~/samples/snippets/cpp/VS_Snippets_Remoting/WebPermission_Union/CPP/webpermission_union.cpp#2)]
 [!code-csharp[WebPermission_Union#2](~/samples/snippets/csharp/VS_Snippets_Remoting/WebPermission_Union/CS/webpermission_union.cs#2)]
 [!code-vb[WebPermission_Union#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/WebPermission_Union/VB/webpermission_union.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">目標不是 <see langword="null" /> 或屬於 <see cref="T:System.Net.WebPermission" /> 型別。</exception>
        <altmember cref="T:System.Security.Permissions.PermissionState" />
      </Docs>
    </Member>
  </Members>
</Type>