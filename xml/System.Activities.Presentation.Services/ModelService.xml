<Type Name="ModelService" FullName="System.Activities.Presentation.Services.ModelService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="03ab8a7343d58fd156490ca4d5d2269a0530ffd4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30350112" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ModelService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Services.ModelService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelService" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelService abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>此類別是設計工具用來與模型互動的主要進入點。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 此服務在公用方法與受保護的方法之間有一個分隔，當您建立衍生類別時，您必須實作這個分隔。 公開方法可由任何人呼叫。 受保護的方法是由模型叫用。  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>建立新的 <see cref="T:System.Activities.Presentation.Services.ModelService" />。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateItem">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立給定型別的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。 當使用者想要建立新的項目時，<see cref="T:System.Activities.Presentation.Model.ModelFactory" /> 會呼叫這個方法。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (object item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (item As Object) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">要複製與換行的項目。</param>
        <summary>採用現有的執行個體，建立深層複製的模型項目。</summary>
        <returns>傳回新建立的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />，這個項目是現有項目的複製品。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateItem (Type itemType, System.Activities.Presentation.Model.CreateOptions options, params object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateItem(class System.Type itemType, valuetype System.Activities.Presentation.Model.CreateOptions options, object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateItem(System.Type,System.Activities.Presentation.Model.CreateOptions,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateItem (itemType As Type, options As CreateOptions, ParamArray arguments As Object()) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateItem(Type ^ itemType, System::Activities::Presentation::Model::CreateOptions options, ... cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Type" />
        <Parameter Name="options" Type="System.Activities.Presentation.Model.CreateOptions" />
        <Parameter Name="arguments" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="itemType">要建立之項目的型別。</param>
        <param name="options">建立時的選項。 您可以指定是否要初始化項目的預設值。</param>
        <param name="arguments">項目建構函式的引數陣列。</param>
        <summary>建立給定型別的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。 當使用者想要建立新的項目時，<see cref="T:System.Activities.Presentation.Model.ModelFactory" /> 會呼叫這個方法。</summary>
        <returns>傳回新建立的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateStaticMemberItem">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem (Type type, string memberName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem CreateStaticMemberItem(class System.Type type, string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.CreateStaticMemberItem(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ CreateStaticMemberItem(Type ^ type, System::String ^ memberName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">包含參考之靜態成員的型別。</param>
        <param name="memberName">參考之靜態成員的名稱。</param>
        <summary>建立新的模型項目，這個項目表示給定類別的靜態成員值。</summary>
        <returns>傳回 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 例如，若要將 `Brushes.Red` 的參考加入至模型，使用 `typeof(Brushes)` 與字串 "Red" 做為參數，呼叫這個方法。 這將會當做 `{x:Static Brushes.Red}`，序列化為 XAML。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Find">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從要查看的給定起點尋找相符的模型項目。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有查核行程都是遞迴的。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Predicate&lt;Type&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Predicate`1&lt;class System.Type&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Predicate{System.Type})" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Find (startingItem As ModelItem, match As Predicate(Of Type)) As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Predicate&lt;Type ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="match" Type="System.Predicate&lt;System.Type&gt;" />
      </Parameters>
      <Docs>
        <param name="startingItem">要開始搜尋的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。 這個項目上方的所有項目都將遭忽略。 在階層架構中，這個項目及其下方的所有項目都包含在這個搜尋的範圍內。 如果這個值為 <see langword="null" />，則會改用 <see cref="P:System.Activities.Presentation.Services.ModelService.Root" />。</param>
        <param name="match">述詞，允許使用更複雜的型別比對。 此方法將會列舉符合述詞之給定父範圍中的所有項目。</param>
        <summary>從要查看的給定起點尋找相符的模型項目。</summary>
        <returns>傳回包含符合查詢之所有模型項目的 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有查核行程都是遞迴的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="match" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Find (System.Activities.Presentation.Model.ModelItem startingItem, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Find(class System.Activities.Presentation.Model.ModelItem startingItem, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.Find(System.Activities.Presentation.Model.ModelItem,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Find(System::Activities::Presentation::Model::ModelItem ^ startingItem, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startingItem" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="startingItem">要開始搜尋的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。 這個項目上方的所有項目都將遭忽略。 在階層架構中，這個項目及其下方的所有項目都包含在這個搜尋的範圍內。 如果這個值為 <see langword="null" />，則會改用 <see cref="P:System.Activities.Presentation.Services.ModelService.Root" />。</param>
        <param name="type">要尋找之物件的 <see cref="T:System.Type" />。 此方法將會列舉屬於所要求型別之給定父範圍中的所有項目。</param>
        <summary>從要查看的給定起點尋找相符的模型項目。</summary>
        <returns>傳回包含符合查詢之所有模型項目的 <see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有查核行程都是遞迴的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FromName">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在給定範圍中找出具有給定名稱的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回`null`如果找不到模型項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FromName (scope As ModelItem, name As String) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">要提供的選擇性範圍。 如果未提供範圍，將會使用 <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> 做為範圍。 如果有提供範圍，將會使用階層架構中最接近的 <see cref="T:System.Windows.Markup.INameScope" /> 來找出該項目。</param>
        <param name="name">要尋找的名稱。</param>
        <summary>在給定範圍中找出具有給定名稱的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</summary>
        <returns>傳回其名稱與 <paramref name="name" /> 相符的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />，如果找不到相符項目，則為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="FromName">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem FromName (System.Activities.Presentation.Model.ModelItem scope, string name, StringComparison comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelItem FromName(class System.Activities.Presentation.Model.ModelItem scope, string name, valuetype System.StringComparison comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Services.ModelService.FromName(System.Activities.Presentation.Model.ModelItem,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FromName (scope As ModelItem, name As String, comparison As StringComparison) As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelItem ^ FromName(System::Activities::Presentation::Model::ModelItem ^ scope, System::String ^ name, StringComparison comparison);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Activities.Presentation.Model.ModelItem" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="comparison" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="scope">要提供的選擇性範圍。 如果未提供範圍，將會使用 <see cref="P:System.Activities.Presentation.Services.ModelService.Root" /> 做為範圍。 如果有提供範圍，將會使用階層架構中最接近的 <see cref="T:System.Windows.Markup.INameScope" /> 來找出該項目。</param>
        <param name="name">要尋找的名稱。</param>
        <param name="comparison">決定應如何比較名稱。 預設的方式是針對序數進行比較。</param>
        <summary>在給定範圍中找出具有給定名稱的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</summary>
        <returns>傳回其名稱與 <paramref name="name" /> 相符的 <see cref="T:System.Activities.Presentation.Model.ModelItem" />，如果找不到相符項目，則為 <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="ModelChanged">
      <MemberSignature Language="C#" Value="public abstract event EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.Services.ModelChangedEventArgs&gt; ModelChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Services.ModelService.ModelChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event ModelChanged As EventHandler(Of ModelChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event EventHandler&lt;System::Activities::Presentation::Services::ModelChangedEventArgs ^&gt; ^ ModelChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.Services.ModelChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>當模型中的項目變更時，會引發此事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 事件中的事件引數可用來尋找已變更的項目。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Services.ModelService.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>物件階層架構的根。</summary>
        <value>傳回模型階層的根，做為 <see cref="T:System.Activities.Presentation.Model.ModelItem" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若是線性存放區，根是存放區中的第一個物件。 若是表示物件樹狀結構的存放區，這會傳回樹狀結構最上方的節點。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>