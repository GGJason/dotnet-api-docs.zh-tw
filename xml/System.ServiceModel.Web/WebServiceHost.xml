<Type Name="WebServiceHost" FullName="System.ServiceModel.Web.WebServiceHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f694029287d49c4108157d9413aba04b2be7054" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37451942" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebServiceHost : System.ServiceModel.ServiceHost" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebServiceHost extends System.ServiceModel.ServiceHost" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Web.WebServiceHost" />
  <TypeSignature Language="VB.NET" Value="Public Class WebServiceHost&#xA;Inherits ServiceHost" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebServiceHost : System::ServiceModel::ServiceHost" />
  <TypeSignature Language="F#" Value="type WebServiceHost = class&#xA;    inherit ServiceHost" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.ServiceHost</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ab926-101">補充 Windows Communication Foundation (WCF) REST 程式設計模型的 <see cref="T:System.ServiceModel.ServiceHost" /> 衍生類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ab926-101">A <see cref="T:System.ServiceModel.ServiceHost" /> derived class that compliments the Windows Communication Foundation (WCF) REST programming model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab926-102">如果 <xref:System.ServiceModel.Web.WebServiceHost> 在服務描述中找不到端點，則會自動針對 HTTP 與 HTTPS 的基底位址在服務的基底位址建立預設端點。</span><span class="sxs-lookup"><span data-stu-id="ab926-102">If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it automatically creates a default endpoint at the service's base address for HTTP and HTTPS base addresses.</span></span> <span data-ttu-id="ab926-103">如果使用者已在基底位址明確設定端點，則不會自動建立端點。</span><span class="sxs-lookup"><span data-stu-id="ab926-103">It does not create an endpoint automatically if the user has configured an endpoint explicitly at the base address.</span></span> <span data-ttu-id="ab926-104"><xref:System.ServiceModel.Web.WebServiceHost> 會自動將端點的繫結設定為用於安全性虛擬目錄時，搭配使用相關的網際網路資訊服務 (IIS) 安全性設定。</span><span class="sxs-lookup"><span data-stu-id="ab926-104"><xref:System.ServiceModel.Web.WebServiceHost> automatically configures the endpoint's binding to work with the associated Internet Information Services (IIS) security settings when used in a secure virtual directory.</span></span>  
  
 <span data-ttu-id="ab926-105">建立預設 HTTP 端點時，<xref:System.ServiceModel.Web.WebServiceHost> 也會停用 HTTP 說明網頁和 Web 服務描述語言 (WSDL) 的 GET 功能，使中繼資料端點不會干擾預設 HTTP 端點。</span><span class="sxs-lookup"><span data-stu-id="ab926-105">When creating a default HTTP endpoint, the <xref:System.ServiceModel.Web.WebServiceHost> also disables the HTTP Help page and the Web Services Description Language (WSDL) GET functionality so the metadata endpoint does not interfere with the default HTTP endpoint.</span></span>  
  
 <span data-ttu-id="ab926-106">此外，<xref:System.ServiceModel.Web.WebServiceHost> 類別會將 <xref:System.ServiceModel.Description.WebHttpBehavior> 新增至所有尚未具有該行為但有 <xref:System.ServiceModel.Configuration.WebMessageEncodingElement> 的所有端點。</span><span class="sxs-lookup"><span data-stu-id="ab926-106">In addition, the <xref:System.ServiceModel.Web.WebServiceHost> class adds the <xref:System.ServiceModel.Description.WebHttpBehavior> to all endpoints that do not already have the behavior and that have a <xref:System.ServiceModel.Configuration.WebMessageEncodingElement>.</span></span> <span data-ttu-id="ab926-107">如果服務上所有作業的 HTTP 要求主體空白，或是將 HTTP 要求主體當成資料流處理，<xref:System.ServiceModel.Web.WebServiceHost> 就會針對繫結自動設定適當的內容型別對應器。</span><span class="sxs-lookup"><span data-stu-id="ab926-107">If all the operations on the service have either empty HTTP request bodies or deal with the HTTP request body as a stream, then the <xref:System.ServiceModel.Web.WebServiceHost> automatically configures the appropriate content type mapper for the binding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab926-108">下列範例示範如何使用<xref:System.ServiceModel.Web.WebServiceHost>類別，以裝載服務，可讓使用 WCF REST 程式設計模型。</span><span class="sxs-lookup"><span data-stu-id="ab926-108">The following example shows how to use the <xref:System.ServiceModel.Web.WebServiceHost> class to host a service that makes use of the WCF REST programming model.</span></span>  
  
 [!code-csharp[WebServiceHost#0](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/program.cs#0)]
 [!code-vb[WebServiceHost#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/program.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ab926-109">初始化 <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab926-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab926-110">初始化 <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab926-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost (object singletonInstance, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object singletonInstance, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Object,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (singletonInstance As Object, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost(System::Object ^ singletonInstance, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Web.WebServiceHost : obj * Uri[] -&gt; System.ServiceModel.Web.WebServiceHost" Usage="new System.ServiceModel.Web.WebServiceHost (singletonInstance, baseAddresses)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="singletonInstance" Type="System.Object" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="singletonInstance">
          <span data-ttu-id="ab926-111">要當成單一執行個體使用的服務執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab926-111">A service instance to be used as the singleton instance.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="ab926-112">服務的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab926-112">The base address of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab926-113">使用指定的單一伺服器執行個體及基底位址，初始化 <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab926-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified singleton server instance and base address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab926-114">`baseAddresses` 參數可包含一個或多個基底位址。</span><span class="sxs-lookup"><span data-stu-id="ab926-114">The `baseAddresses` parameter can consist of one or more base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab926-115">下列範例將示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="ab926-115">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[WebServiceHost#1](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/snippets.cs#1)]
 [!code-vb[WebServiceHost#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebServiceHost (Type serviceType, params Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.#ctor(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (serviceType As Type, ParamArray baseAddresses As Uri())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebServiceHost(Type ^ serviceType, ... cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Web.WebServiceHost : Type * Uri[] -&gt; System.ServiceModel.Web.WebServiceHost" Usage="new System.ServiceModel.Web.WebServiceHost (serviceType, baseAddresses)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="ab926-116">服務類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab926-116">The service type.</span>
          </span>
        </param>
        <param name="baseAddresses">
          <span data-ttu-id="ab926-117">服務的基底位址。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab926-117">The base address of the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ab926-118">使用指定的服務類型與基底位址，初始化 <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab926-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> class with the specified service type and base address.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab926-119">`baseAddresses` 參數可包含一個或多個基底位址。</span><span class="sxs-lookup"><span data-stu-id="ab926-119">The `baseAddresses` parameter can consist of one or more base addresses.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab926-120">下列範例將示範如何呼叫這個建構函式。</span><span class="sxs-lookup"><span data-stu-id="ab926-120">The following example shows how to call this constructor.</span></span>  
  
 [!code-csharp[WebServiceHost#2](~/samples/snippets/csharp/VS_Snippets_CFX/webservicehost/cs/snippets.cs#2)]
 [!code-vb[WebServiceHost#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/webservicehost/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Web.WebServiceHost.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpening();" />
      <MemberSignature Language="F#" Value="override this.OnOpening : unit -&gt; unit" Usage="webServiceHost.OnOpening " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ab926-121">在開啟 <see cref="T:System.ServiceModel.Web.WebServiceHost" /> 執行個體時呼叫。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ab926-121">Called when the <see cref="T:System.ServiceModel.Web.WebServiceHost" /> instance opens.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab926-122">呼叫此方法時，會發生下列狀況︰</span><span class="sxs-lookup"><span data-stu-id="ab926-122">The following occurs when this method is called:</span></span>  
  
1.  <span data-ttu-id="ab926-123">如果 <xref:System.ServiceModel.Web.WebServiceHost> 在服務描述中找不到端點，則會在服務的基底位址中建立預設端點。</span><span class="sxs-lookup"><span data-stu-id="ab926-123">If <xref:System.ServiceModel.Web.WebServiceHost> finds no endpoints in the service description, it creates a default endpoint at the service's base address.</span></span> <span data-ttu-id="ab926-124"><xref:System.ServiceModel.Web.WebServiceHost> 會自動停用 HTTP 說明網頁與 WSDL GET 功能，使中繼資料端點不會干擾預設 HTTP 端點。</span><span class="sxs-lookup"><span data-stu-id="ab926-124"><xref:System.ServiceModel.Web.WebServiceHost> automatically disables the HTTP Help page and the WSDL GET functionality so that the metadata endpoint does not interfere with the default HTTP endpoint.</span></span>  
  
2.  <span data-ttu-id="ab926-125"><xref:System.ServiceModel.Web.WebServiceHost> 會檢查所有使用 <xref:System.ServiceModel.WebHttpBinding> 的端點，查看它們是否有必要的 <xref:System.ServiceModel.Description.WebHttpBehavior>。</span><span class="sxs-lookup"><span data-stu-id="ab926-125"><xref:System.ServiceModel.Web.WebServiceHost> checks all endpoints that use the <xref:System.ServiceModel.WebHttpBinding> to see if they have the required <xref:System.ServiceModel.Description.WebHttpBehavior>.</span></span> <span data-ttu-id="ab926-126">如果沒有，<xref:System.ServiceModel.Web.WebServiceHost> 就會為端點新增 <xref:System.ServiceModel.Description.WebHttpBehavior>。</span><span class="sxs-lookup"><span data-stu-id="ab926-126">If not present, <xref:System.ServiceModel.Web.WebServiceHost> adds the <xref:System.ServiceModel.Description.WebHttpBehavior> for the endpoint.</span></span>  
  
3.  <span data-ttu-id="ab926-127"><xref:System.ServiceModel.Web.WebServiceHost> 會將端點的繫結設定為用於安全虛擬目錄時，搭配使用相關聯的 IIS 安全性設定。</span><span class="sxs-lookup"><span data-stu-id="ab926-127"><xref:System.ServiceModel.Web.WebServiceHost> configures the endpoint's binding to work with the associated IIS security settings when used in a secure virtual directory.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>