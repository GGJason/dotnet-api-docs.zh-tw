<Type Name="WorkflowRuntimeService" FullName="System.Workflow.Runtime.Hosting.WorkflowRuntimeService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7fbbd24977b76945374cd4b1082c0b7cb99c085" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51896895" /></Metadata><TypeSignature Language="C#" Value="public abstract class WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowRuntimeService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowRuntimeService abstract" />
  <TypeSignature Language="F#" Value="type WorkflowRuntimeService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示抽象基底類別，工作流程執行階段引擎核心服務由此衍生。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 工作流程執行階段引擎可以啟動和停止衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別的服務。 然而服務啟動或停止的順序是不確定的。服務可能需要其他服務的支援才可以在啟動時將自己本身正常初始化，相對的，服務也可能需要其他服務的支援才能在停止時正常關閉。 為了解決這個問題，工作流程執行階段引擎提供用於啟動和停止服務的兩階段機制。 呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A> 時，工作流程執行階段引擎會為每個衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 類別的服務叫用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 方法。  啟動所有這些服務後，工作流程執行階段引擎會引發 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> 事件，從而為每個工作流程執行階段引擎服務叫用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法。 您的服務可以覆寫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法以參與這個兩階段的過程。 同樣地，當呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> 時，<xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 方法、<xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 事件和 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法會提供這個兩階段機制。  State 屬性包含 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState> 值，該值表示服務正在啟動或停止中，或是已完全啟動或停止。  
  
 衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別的服務在遇到造成未處理例外狀況的情況時，可以透過呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> 來引發 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 事件。  
  
 衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> 類別、<xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> 類別、<xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 類別和 <xref:System.Workflow.Runtime.Tracking.TrackingService> 類別的服務，最終都是衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowRuntimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowRuntimeService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>在衍生類別中實作時，初始化 <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 初始化為 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStarted();" />
      <MemberSignature Language="F#" Value="abstract member OnStarted : unit -&gt; unit&#xA;override this.OnStarted : unit -&gt; unit" Usage="workflowRuntimeService.OnStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，代表在工作流程執行階段引擎引發 <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Started" /> 事件時將呼叫的方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別會實作兩階段啟動機制，因此工作流程執行階段引擎服務可能在工作流程執行階段引擎已叫用所有它的工作流程執行階段引擎服務的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 方法後，執行任何依賴其他服務的初始化。 工作流程執行階段引擎呼叫所有它的工作流程執行階段引擎服務的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 方法後，會引發 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> 事件。 當 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 事件引發時，您可以覆寫 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> 方法以提供您的服務所需的任何最後啟動功能。 由 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> 事件訂閱和取消訂閱的機能是在內部處理。  
  
> [!NOTE]
>  如果您的服務是在工作流程執行階段引擎已啟動後，經由呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 加入至工作流程執行階段引擎，則工作流程階段引擎將呼叫您的服務上的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>。 但在這種情況中，已經發生 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 事件，因此您的服務可能必須執行它通常由 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法內部的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 中執行的任何初始化。 您可以測試 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 以判斷工作流程執行階段引擎是否已啟動。  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 在叫用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started> 前是設定為 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A>。  預設的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 實作不會執行任何動作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStopped">
      <MemberSignature Language="C#" Value="protected virtual void OnStopped ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStopped() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStopped ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStopped();" />
      <MemberSignature Language="F#" Value="abstract member OnStopped : unit -&gt; unit&#xA;override this.OnStopped : unit -&gt; unit" Usage="workflowRuntimeService.OnStopped " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，代表在工作流程執行階段引擎引發 <see cref="E:System.Workflow.Runtime.WorkflowRuntime.Stopped" /> 事件時將呼叫的方法。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別會實作兩階段的停止機制，因此在工作流程執行階段引擎叫用執行階段引擎服務的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 方法後，這些服務仍可視需要保留部分功能以支援其他服務的關閉。 工作流程執行階段引擎呼叫所有它的工作流程執行階段引擎服務的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 方法後，會引發 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 事件。 當 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 事件引發時，您可以覆寫 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 方法以提供您的服務所需的任何最後關閉功能。 由 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 事件訂閱和取消訂閱的機能是在內部處理。  
  
> [!NOTE]
>  如果在工作流程執行階段引擎執行時，呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 來從工作流程執行階段引擎中移除您的 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>，工作流程執行階段引擎將呼叫您服務上的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>。 但在此情況中，將不會對您的服務呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法。 因此，您的服務可能必須執行它通常由 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法內部的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 中執行的最後關閉功能。 您可以測試 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 以判斷工作流程執行階段引擎是否正在執行。  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 在叫用 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped> 前是設定為 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A>。  預設的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 實作不會執行任何動作。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseServicesExceptionNotHandledEvent">
      <MemberSignature Language="C#" Value="protected void RaiseServicesExceptionNotHandledEvent (Exception exception, Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RaiseServicesExceptionNotHandledEvent(class System.Exception exception, valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RaiseServicesExceptionNotHandledEvent(Exception ^ exception, Guid instanceId);" />
      <MemberSignature Language="F#" Value="member this.RaiseServicesExceptionNotHandledEvent : Exception * Guid -&gt; unit" Usage="workflowRuntimeService.RaiseServicesExceptionNotHandledEvent (exception, instanceId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="exception">無法處理的例外狀況。</param>
        <param name="instanceId">與未處理的例外狀況關聯之工作流程執行個體的 <see cref="T:System.Guid" />。</param>
        <summary>引發 <see cref="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled" /> 事件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您的服務在執行期間遇到無法處理的例外狀況時，可以呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A> 以引發 <xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled?displayProperty=nameWithType> 事件。 您應該傳遞與未處理的例外狀況關聯的工作流程執行個體的 <xref:System.Guid>。 例如，計時器服務可能傳遞與發生例外狀況的計時器關聯的 <xref:System.Guid>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Runtime">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.WorkflowRuntime Runtime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowRuntime Runtime" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Runtime As WorkflowRuntime" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::WorkflowRuntime ^ Runtime { System::Workflow::Runtime::WorkflowRuntime ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Runtime : System.Workflow.Runtime.WorkflowRuntime" Usage="System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowRuntime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得此服務的 <see cref="T:System.Workflow.Runtime.WorkflowRuntime" />。</summary>
        <value><see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 工作流程執行階段引擎會在呼叫服務上的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 之前設定這個屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="protected internal virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Start();" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="workflowRuntimeService.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，啟動服務並將 <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> 變更為 <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 時，工作流程執行階段引擎會在每個衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別的服務上叫用 <xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A>。  
  
 工作流程執行階段引擎啟動後，藉由呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 將工作流程執行階段引擎服務加入至工作流程執行階段引擎時，也會叫用 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>。 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 的預設實作會追蹤服務是否已啟動，並使用這項資訊擲回適當的例外狀況 (如果啟動服務時發現服務已在執行中)。  
  
 您可以透過覆寫此方法，提供由工作流程執行階段引擎啟動您的服務所需的額外方法。 但是，當工作流程執行階段引擎呼叫您服務上的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 時，並不保證將會執行哪些服務 (如果有的話)。 因此，在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 方法中，您應該只執行任何不會依賴由其他服務提供功能的初始化。 這包括由排程器服務等核心服務提供的功能。 工作流程執行階段引擎會在呼叫所有它的工作流程執行階段引擎服務的 <xref:System.Workflow.Runtime.WorkflowRuntime.Started?displayProperty=nameWithType> 方法後，引發 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 事件。 如果您的服務在所有的工作流程執行階段引擎服務啟動後還需要其他的初始化，您可以覆寫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法，以便在 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 事件引發時，執行這類初始化。  
  
> [!NOTE]
>  如果您的服務是在工作流程執行階段引擎已啟動後，經由呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> 加入至工作流程執行階段引擎，則工作流程階段引擎將呼叫您的服務上的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A>。 但在這種情況中，已經發生 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 事件，因此您的服務可能必須執行它通常由 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A> 方法內部的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 中執行的任何初始化。 您可以測試 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 以判斷工作流程執行階段引擎是否已啟動。  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 應該只能由工作流程執行階段引擎呼叫。  
  
   
  
## Examples  
 下列範例將示範呼叫衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 之物件上的 Start 方法 (TerminationTrackingService)。  這個範例來自＜暫止追蹤服務 SDK＞範例。  如需詳細資訊，請參閱 <<c0> [ 終止追蹤服務範例](https://msdn.microsoft.com/library/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439)。  
  
 [!code-csharp[WF_Samples#112](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#112)]
 [!code-vb[WF_Samples#112](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#112)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />) 
-或- 
已經啟動服務。</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="protected System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState State" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property State As WorkflowRuntimeServiceState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState State { System::Workflow::Runtime::Hosting::WorkflowRuntimeServiceState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" Usage="System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /> 的狀態。</summary>
        <value>其中一個 <see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState" /> 值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別會實作用於啟動和停止工作流程執行階段引擎服務的兩階段機制。 啟動機制的第一個階段會從工作流程執行階段引擎呼叫服務的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 方法實作時開始。 此方法應呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A> 的基底實作，將 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 設定為 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Starting>。 第二個階段發生在工作流程執行階段引擎在引發 <xref:System.Workflow.Runtime.WorkflowRuntime.Started> 事件時，並啟動所有工作流程執行階段引擎服務後。 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 在內部管理此事件的訂閱，而且其處理常式會將 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 設定為 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Started>。  
  
 停止工作流程執行階段引擎服務的兩階段機制會在工作流程執行階段引擎呼叫服務的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 方法實作時開始。 此方法應呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 的基底實作，將 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 設定為 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping>。 在停止所有工作流程執行階段引擎服務後，工作流程執行階段引擎會引發 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped> 事件。 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 在內部管理此事件的訂閱，而且其處理常式會將 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State%2A> 設定為 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopped>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="protected internal virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Stop();" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="workflowRuntimeService.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，停止服務並將 <see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State" /> 變更為 <see cref="F:System.Workflow.Runtime.Hosting.WorkflowRuntimeServiceState.Stopping" />。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 時，工作流程執行階段引擎會在每個衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 類別的服務上叫用 <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A>。  呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 從工作流程執行階段引擎移除工作流程執行階段引擎服務時，工作流程執行階段引擎也會叫用 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>。 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 的預設實作會追蹤服務是否已啟動，並使用這項資訊擲回適當的例外狀況 (如果服務在它啟動之前已停止)。  
  
 您可以透過覆寫此方法，提供由工作流程執行階段引擎停止您的服務所需的額外方法， 但是，在服務上呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 時，並不保證將會停止哪些服務或哪些服務仍在執行中 (如果有的話)。 工作流程執行階段引擎會在呼叫所有它的工作流程執行階段引擎服務的 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 方法後，引發 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 事件。 您的服務可能需要保留一些剩餘功能以支援其他服務，直到工作流程執行階段引擎叫用所有工作流程執行階段引擎的停止方法為止。 如果您的服務必須保留這類功能，您可以覆寫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法，以便在 <xref:System.Workflow.Runtime.WorkflowRuntime.Stopped?displayProperty=nameWithType> 事件引發時，執行完成停止服務所需的任何額外動作。  
  
> [!NOTE]
>  如果在工作流程執行階段引擎執行時，呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService> 來從工作流程執行階段引擎中移除您的 <xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A>，工作流程執行階段引擎將呼叫您服務上的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A>。 但在此情況中，將不會對您的服務呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法。 因此，您的服務可能必須執行它通常由 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A> 方法內部的 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 中執行的額外關閉功能。 您可以測試 <xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A> 以判斷工作流程執行階段引擎是否正在執行。  
  
 <xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A> 應該只能由工作流程執行階段引擎呼叫。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime" /> 為 null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。  
  
-或- 
服務尚未啟動。</exception>
      </Docs>
    </Member>
  </Members>
</Type>