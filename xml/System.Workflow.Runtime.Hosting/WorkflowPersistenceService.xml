<Type Name="WorkflowPersistenceService" FullName="System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="89c26523c05346ffee71943e0117ab5d1ebaa453" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37735215" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WorkflowPersistenceService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WorkflowPersistenceService extends System.Workflow.Runtime.Hosting.WorkflowRuntimeService" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WorkflowPersistenceService&#xA;Inherits WorkflowRuntimeService" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowPersistenceService abstract : System::Workflow::Runtime::Hosting::WorkflowRuntimeService" />
  <TypeSignature Language="F#" Value="type WorkflowPersistenceService = class&#xA;    inherit WorkflowRuntimeService" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.Runtime.Hosting.WorkflowRuntimeService</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0fc26-101">所有持續性服務都是衍生自此抽象基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0fc26-101">The abstract base class from which all persistence services are derived.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="0fc26-102">在工作流程執行中發生特定情況時，工作流程執行階段引擎會保存有關工作流程執行個體的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="0fc26-102">When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</span></span> <span data-ttu-id="0fc26-103">例如，不可部分完成的交易完成時、工作流程執行個體閒置時、主機呼叫工作流程執行個體上的 <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> 時、或工作流程執行個體終止或完成時，都可能發生保存。</span><span class="sxs-lookup"><span data-stu-id="0fc26-103">Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls <xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType> on the workflow instance, or when a workflow instance is terminated or finishes.</span></span> <span data-ttu-id="0fc26-104">工作流程執行階段引擎語意指示保存應發生時，工作流程執行階段引擎會呼叫持續性服務所提供的方法，以儲存有關工作流程執行個體的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="0fc26-104">When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</span></span> <span data-ttu-id="0fc26-105">同樣地，當工作流程執行階段引擎需要還原之前保存的工作流程執行個體時，它會呼叫持續性服務所提供的方法以載入此狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="0fc26-105">Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</span></span> <span data-ttu-id="0fc26-106">工作流程執行階段引擎處理有關何時執行保存的語意。</span><span class="sxs-lookup"><span data-stu-id="0fc26-106">The workflow runtime engine handles all the semantics regarding when to perform persistence.</span></span> <span data-ttu-id="0fc26-107">持續性服務實際上是在資料存放區來回儲存和載入工作流程狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="0fc26-107">The persistence service handles actually saving and loading the workflow state information to or from a data store.</span></span>  
  
 <span data-ttu-id="0fc26-108">您可以藉由衍生自 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 類別的類別來建立持續性服務。</span><span class="sxs-lookup"><span data-stu-id="0fc26-108">You can create a persistence service by deriving a class from the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class.</span></span>  <span data-ttu-id="0fc26-109">您可以藉由呼叫 <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A>，或在應用程式組態檔中建立適當的項目，來將您的持續性服務加入至工作流程執行階段引擎。</span><span class="sxs-lookup"><span data-stu-id="0fc26-109">You can add your persistence service to the workflow runtime engine by calling <xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A> or by making an appropriate entry in the application configuration file.</span></span> <span data-ttu-id="0fc26-110"><xref:System.Workflow.Runtime.WorkflowRuntime> 應該只包含一個持續性服務。</span><span class="sxs-lookup"><span data-stu-id="0fc26-110">The <xref:System.Workflow.Runtime.WorkflowRuntime> should only contain one persistence service.</span></span> <span data-ttu-id="0fc26-111">Windows Workflow Foundation 提供 <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> 類別，這是一種您可以依原狀使用或加以擴充的預設持續性服務。</span><span class="sxs-lookup"><span data-stu-id="0fc26-111">Windows Workflow Foundation provides the <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> class, an out-of-box persistence service, which you can use as is or extend.</span></span>  
  
 <span data-ttu-id="0fc26-112">工作流程執行階段引擎具有鎖定工作流程狀態資訊的語意，當執行於不同處理序中的持續性服務可能具有同一個資料存放區的存取權時便可使用這類語意。</span><span class="sxs-lookup"><span data-stu-id="0fc26-112">The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</span></span> <span data-ttu-id="0fc26-113"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> 類別透過提供參數至 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> 指定是否解除鎖定資料存放區中的工作流程執行個體狀態資訊，並提供解除鎖定先前鎖定之工作流程狀態資訊的 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> 方法，來支援這項工作流程執行階段引擎功能。</span><span class="sxs-lookup"><span data-stu-id="0fc26-113">The <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService> class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> to unlock previously locked workflow state information.</span></span> <span data-ttu-id="0fc26-114">在實作鎖定的持續性服務中，呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> 應會鎖定工作流程執行個體的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="0fc26-114">In a persistence service that implements locking, a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> should lock the state information for a workflow instance.</span></span>  
  
 <span data-ttu-id="0fc26-115">如果您的持續性服務無法儲存狀態資訊到其資料存放區，或無法從其資料存放區載入狀態資訊，應會擲回 <xref:System.Workflow.Runtime.Hosting.PersistenceException>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-115">Your persistence service should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> if it fails to save state information to its data store or load state information from its data store.</span></span> <span data-ttu-id="0fc26-116">工作流程執行階段引擎需要這個行為。</span><span class="sxs-lookup"><span data-stu-id="0fc26-116">The workflow runtime engine expects this behavior.</span></span>  
  
 <span data-ttu-id="0fc26-117">系統提供批次處理機制給使用長期存放區儲存工作流程狀態資訊的服務。</span><span class="sxs-lookup"><span data-stu-id="0fc26-117">A batching mechanism is provided for services that use a durable store to save workflow state information.</span></span> <span data-ttu-id="0fc26-118">在這些情況中，保持持續性服務使用的長期存放區與工作流程執行階段引擎內部狀態之間的一致性相當重要。</span><span class="sxs-lookup"><span data-stu-id="0fc26-118">It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</span></span> <span data-ttu-id="0fc26-119">您可以將 <xref:System.Workflow.Runtime.IPendingWork> 介面定義的功能加入至您的服務，然後透過加入變更到您的資料存放區，並將工作項目加入至 <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>，來參與 <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> 所提供的工作流程交易批次處理。</span><span class="sxs-lookup"><span data-stu-id="0fc26-119">You can add functionality defined by the <xref:System.Workflow.Runtime.IPendingWork> interface to your service, and then participate in workflow transaction batching provided by the <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService> by adding changes to your data store as work items to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A>.</span></span> <span data-ttu-id="0fc26-120">長期存放區本身應實作 <xref:System.Transactions.IEnlistmentNotification> 介面，如此在交易復原時就不會錯誤地保存工作流程資訊。</span><span class="sxs-lookup"><span data-stu-id="0fc26-120">The durable store itself should implement the <xref:System.Transactions.IEnlistmentNotification> interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</span></span> <span data-ttu-id="0fc26-121">如需詳細資訊，請參閱 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A>或 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-121">For more information, see <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A> or <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WorkflowPersistenceService ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WorkflowPersistenceService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0fc26-122">在衍生類別中實作時，初始化 <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-122">When implemented in a derived class, initializes a new instance of the <see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0fc26-123">下列範例示範建立 `SqlWorkflowPersistenceService` 類別 (衍生自 `WorkflowPersistenceService`) 的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0fc26-123">The following example demonstrates creating an instance of the `SqlWorkflowPersistenceService` class (derived from `WorkflowPersistenceService`).</span></span> <span data-ttu-id="0fc26-124">這個範例來自 Program.cs 類別中的＜巢狀例外處理常式 SDK＞範例。</span><span class="sxs-lookup"><span data-stu-id="0fc26-124">This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.</span></span>  <span data-ttu-id="0fc26-125">如需詳細資訊，請參閱 <<c0> [ 巢狀例外狀況處理常式範例](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265)。</span><span class="sxs-lookup"><span data-stu-id="0fc26-125">For more information, see the [Nested Exception Handlers Sample](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265).</span></span>  
  
 [!code-csharp[WF_Samples#161](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#161)]
 [!code-vb[WF_Samples#161](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#161)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static byte[] GetDefaultSerializedForm (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig unsigned int8[] GetDefaultSerializedForm(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static cli::array &lt;System::Byte&gt; ^ GetDefaultSerializedForm(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="static member GetDefaultSerializedForm : System.Workflow.ComponentModel.Activity -&gt; byte[]" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="0fc26-126">要求其序列化表單的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-126">The <see cref="T:System.Workflow.ComponentModel.Activity" /> whose serialized form is requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-127">擷取 <see cref="T:System.Workflow.ComponentModel.Activity" /> 的序列化預設表單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-127">Retrieves the serialized default form of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0fc26-128">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> 的序列化預設表單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-128">The serialized default form of the <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsBlocked">
      <MemberSignature Language="C#" Value="protected internal static bool GetIsBlocked (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool GetIsBlocked(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetIsBlocked (rootActivity As Activity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool GetIsBlocked(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetIsBlocked : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="0fc26-129">工作流程執行個體的根活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-129">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-130">指出是否封鎖指定活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-130">Indicates whether the given activity is blocked.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0fc26-131">如果封鎖指定活動則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-131">
              <see langword="true" /> if the given activity is blocked; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSuspendOrTerminateInfo">
      <MemberSignature Language="C#" Value="protected internal static string GetSuspendOrTerminateInfo (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig string GetSuspendOrTerminateInfo(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetSuspendOrTerminateInfo (rootActivity As Activity) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::String ^ GetSuspendOrTerminateInfo(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetSuspendOrTerminateInfo : System.Workflow.ComponentModel.Activity -&gt; string" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="0fc26-132">工作流程執行個體的根活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-132">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-133">擷取指定活動的終止或暫停資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-133">Retrieves the termination or suspend information of the given activity.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0fc26-134">包含終止或暫停資訊的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-134">A <see cref="T:System.String" /> that contains the termination or suspend information.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkflowStatus">
      <MemberSignature Language="C#" Value="protected internal static System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig valuetype System.Workflow.Runtime.WorkflowStatus GetWorkflowStatus(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared Function GetWorkflowStatus (rootActivity As Activity) As WorkflowStatus" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static System::Workflow::Runtime::WorkflowStatus GetWorkflowStatus(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="static member GetWorkflowStatus : System.Workflow.ComponentModel.Activity -&gt; System.Workflow.Runtime.WorkflowStatus" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="0fc26-135">工作流程執行個體的根活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-135">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-136">擷取工作流程的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-136">Retrieves the status of the workflow.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0fc26-137">代表工作流程狀態的 <see cref="T:System.Workflow.Runtime.WorkflowStatus" /> 列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-137">A <see cref="T:System.Workflow.Runtime.WorkflowStatus" /> enumeration value that denotes the status of the workflow.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadCompletedContextActivity (Guid scopeId, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadCompletedContextActivity(valuetype System.Guid scopeId, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadCompletedContextActivity (scopeId As Guid, outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadCompletedContextActivity(Guid scopeId, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="abstract member LoadCompletedContextActivity : Guid * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadCompletedContextActivity (scopeId, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scopeId" Type="System.Guid" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="scopeId">
          <span data-ttu-id="0fc26-138">已完成範圍的 <see cref="T:System.Guid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-138">The <see cref="T:System.Guid" /> of the completed scope.</span>
          </span>
        </param>
        <param name="outerActivity">
          <span data-ttu-id="0fc26-139">
            <see cref="T:System.Workflow.ComponentModel.Activity" />，表示包圍已完成範圍的活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-139">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the activity that encloses the completed scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-140">在衍生類別中實作時，將指定的完成範圍載回記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-140">When implemented in a derived class, loads the specified completed scope back into memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0fc26-141">表示已完成範圍的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-141">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc26-142">工作流程執行階段引擎使用 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> 實作補償。</span><span class="sxs-lookup"><span data-stu-id="0fc26-142">The workflow runtime engine uses <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> to implement compensation.</span></span> <span data-ttu-id="0fc26-143">您必須還原已完成範圍的相同複本。</span><span class="sxs-lookup"><span data-stu-id="0fc26-143">You must restore an identical copy of the completed scope.</span></span> <span data-ttu-id="0fc26-144">若要執行這項作業，您必須從資料存放區中的已完成範圍代表項還原有效的 <xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-144">To do this, you must restore a valid <xref:System.IO.Stream> from your representation of the completed scope in the data store.</span></span> <span data-ttu-id="0fc26-145">然後您必須將此 <xref:System.IO.Stream> 傳遞至 <xref:System.Workflow.ComponentModel.Activity.Load%2A> 的其中一個多載方法，以執行範圍的還原序列化。</span><span class="sxs-lookup"><span data-stu-id="0fc26-145">Then you must pass this <xref:System.IO.Stream> to one of the overloaded methods of <xref:System.Workflow.ComponentModel.Activity.Load%2A> to perform deserialization of the scope.</span></span>  
  
 <span data-ttu-id="0fc26-146">如果您的持續性服務無法從它的資料存放區中載入已完成的範圍，應該擲回有適當錯誤訊息的 <xref:System.Workflow.Runtime.Hosting.PersistenceException>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-146">If your persistence service cannot load the completed scope from its data store, it should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fc26-147">下列範例示範 `LoadCompletedContextActivity` 方法的實作。</span><span class="sxs-lookup"><span data-stu-id="0fc26-147">The following example demonstrates an implementation of the `LoadCompletedContextActivity` method.</span></span> <span data-ttu-id="0fc26-148">這個範例來自 FilePersistenceService.cs 檔案中的＜自訂持續性服務＞範例。</span><span class="sxs-lookup"><span data-stu-id="0fc26-148">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="0fc26-149">如需詳細資訊，請參閱 <<c0> [ 自訂持續性服務範例](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)。</span><span class="sxs-lookup"><span data-stu-id="0fc26-149">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState (Guid instanceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Workflow.ComponentModel.Activity LoadWorkflowInstanceState(valuetype System.Guid instanceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function LoadWorkflowInstanceState (instanceId As Guid) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Workflow::ComponentModel::Activity ^ LoadWorkflowInstanceState(Guid instanceId);" />
      <MemberSignature Language="F#" Value="abstract member LoadWorkflowInstanceState : Guid -&gt; System.Workflow.ComponentModel.Activity" Usage="workflowPersistenceService.LoadWorkflowInstanceState instanceId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="instanceId">
          <span data-ttu-id="0fc26-150">工作流程執行個體之根活動的 <see cref="T:System.Guid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-150">The <see cref="T:System.Guid" /> of the root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-151">在衍生類別中實作時，將工作流程執行個體的指定狀態載回記憶體中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-151">When implemented in a derived class, loads the specified state of the workflow instance back into memory.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0fc26-152">
            <see cref="T:System.Workflow.ComponentModel.Activity" />，代表工作流程執行個體的根活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-152">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the root activity of the workflow instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc26-153">您必須還原活動的相同複本。</span><span class="sxs-lookup"><span data-stu-id="0fc26-153">You must restore an identical copy of the activity.</span></span> <span data-ttu-id="0fc26-154">若要執行這項作業，您必須從資料存放區中的工作流程執行個體代表項載入有效的 <xref:System.IO.Stream>，然後您必須將此 <xref:System.IO.Stream> 傳遞至其中一個多載的 <xref:System.Workflow.ComponentModel.Activity.Load%2A> 方法，以將工作流程執行個體狀態還原序列化。</span><span class="sxs-lookup"><span data-stu-id="0fc26-154">To do this, you must restore a valid <xref:System.IO.Stream> from your representation of the workflow instance in the data store; then you must pass this <xref:System.IO.Stream> to one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Load%2A> methods to deserialize the workflow instance state.</span></span> <span data-ttu-id="0fc26-155">如果您的持續性服務無法從它的資料存放區中載入工作流程執行個體狀態，應該擲回有適當錯誤訊息的 <xref:System.Workflow.Runtime.Hosting.PersistenceException>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-155">If your persistence service cannot load the workflow instance state from its data store, it should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate message.</span></span>  
  
 <span data-ttu-id="0fc26-156">工作流程執行階段引擎實作鎖定語意，以限制存取儲存在資料存放區中的工作流程執行個體狀態。</span><span class="sxs-lookup"><span data-stu-id="0fc26-156">The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</span></span> <span data-ttu-id="0fc26-157">這可由在多個處理序中執行的持續性服務存取。</span><span class="sxs-lookup"><span data-stu-id="0fc26-157">This can be accessed by persistence services that run in multiple processes.</span></span> <span data-ttu-id="0fc26-158">鎖定語意的設計是為了避免兩個不同處理序中執行的持續性服務，同時將相同的工作流程執行個體載入記憶體中。</span><span class="sxs-lookup"><span data-stu-id="0fc26-158">The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</span></span> <span data-ttu-id="0fc26-159">視您的持續性服務在設計上所支援的環境類型而定，您可以選擇是否支援這項功能。</span><span class="sxs-lookup"><span data-stu-id="0fc26-159">Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</span></span> <span data-ttu-id="0fc26-160">如果您選擇支援執行階段鎖定語意，而且此工作流程執行個體狀態之前已由其他處理序鎖定，則您應該擲回 <xref:System.Workflow.Runtime.WorkflowOwnershipException>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-160">If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span></span> <span data-ttu-id="0fc26-161">否則，您應該鎖定對資料存放區中工作流程執行個體狀態的存取。</span><span class="sxs-lookup"><span data-stu-id="0fc26-161">Otherwise, you should lock access to the workflow instance state in your data store.</span></span> <span data-ttu-id="0fc26-162">工作流程執行個體狀態可以由呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A>，或呼叫解除鎖定參數設定為 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> 的 `true` 加以解除鎖定。</span><span class="sxs-lookup"><span data-stu-id="0fc26-162">The workflow instance state can be unlocked by a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A> or a call to <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> with the unlock parameter set to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fc26-163">下列範例示範 `LoadWorkflowInstanceState` 方法的實作。</span><span class="sxs-lookup"><span data-stu-id="0fc26-163">The following example demonstrates an implementation of the `LoadWorkflowInstanceState` method.</span></span> <span data-ttu-id="0fc26-164">這個範例來自 FilePersistenceService.cs 檔案中的＜自訂持續性服務＞範例。</span><span class="sxs-lookup"><span data-stu-id="0fc26-164">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="0fc26-165">如需詳細資訊，請參閱 <<c0> [ 自訂持續性服務範例](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)。</span><span class="sxs-lookup"><span data-stu-id="0fc26-165">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#266](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#266)]
 [!code-vb[WF_Samples#266](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#266)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreFromDefaultSerializedForm">
      <MemberSignature Language="C#" Value="protected static System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm (byte[] activityBytes, System.Workflow.ComponentModel.Activity outerActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.Workflow.ComponentModel.Activity RestoreFromDefaultSerializedForm(unsigned int8[] activityBytes, class System.Workflow.ComponentModel.Activity outerActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function RestoreFromDefaultSerializedForm (activityBytes As Byte(), outerActivity As Activity) As Activity" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::Workflow::ComponentModel::Activity ^ RestoreFromDefaultSerializedForm(cli::array &lt;System::Byte&gt; ^ activityBytes, System::Workflow::ComponentModel::Activity ^ outerActivity);" />
      <MemberSignature Language="F#" Value="static member RestoreFromDefaultSerializedForm : byte[] * System.Workflow.ComponentModel.Activity -&gt; System.Workflow.ComponentModel.Activity" Usage="System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm (activityBytes, outerActivity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityBytes" Type="System.Byte[]" />
        <Parameter Name="outerActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activityBytes">
          <span data-ttu-id="0fc26-166">
            <see cref="T:System.Workflow.ComponentModel.Activity" /> 的序列化表單。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-166">The serialized form of <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </param>
        <param name="outerActivity">
          <span data-ttu-id="0fc26-167">外部 <see cref="T:System.Workflow.ComponentModel.Activity" />，其中包含要還原的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-167">The outer <see cref="T:System.Workflow.ComponentModel.Activity" />, containing the <see cref="T:System.Workflow.ComponentModel.Activity" /> to restore.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-168">從其序列化表單中還原 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-168">Restores the <see cref="T:System.Workflow.ComponentModel.Activity" /> from its serialized form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0fc26-169">還原的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-169">The restored <see cref="T:System.Workflow.ComponentModel.Activity" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0fc26-170">下列範例示範 `RestoreFromDefaultSerializedForm` 方法的實作。</span><span class="sxs-lookup"><span data-stu-id="0fc26-170">The following example demonstrates an implementation of the `RestoreFromDefaultSerializedForm` method.</span></span> <span data-ttu-id="0fc26-171">這個範例來自 FilePersistenceService.cs 檔案中的＜自訂持續性服務＞範例。</span><span class="sxs-lookup"><span data-stu-id="0fc26-171">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="0fc26-172">如需詳細資訊，請參閱 <<c0> [ 自訂持續性服務範例](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)。</span><span class="sxs-lookup"><span data-stu-id="0fc26-172">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#269](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#269)]
 [!code-vb[WF_Samples#269](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#269)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveCompletedContextActivity">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveCompletedContextActivity (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveCompletedContextActivity(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveCompletedContextActivity(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member SaveCompletedContextActivity : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.SaveCompletedContextActivity activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="0fc26-173">表示已完成範圍的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-173">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-174">在衍生類別中實作時，將指定的完成範圍儲存至資料存放區中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-174">When implemented in a derived class, saves the specified completed scope to a data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc26-175">工作流程執行階段引擎會儲存已完成範圍活動的狀態以實作補償。</span><span class="sxs-lookup"><span data-stu-id="0fc26-175">The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</span></span> <span data-ttu-id="0fc26-176">您必須呼叫其中一個多載的 <xref:System.Workflow.ComponentModel.Activity.Save%2A> 方法將 `activity` 序列化至 <xref:System.IO.Stream> 中，然後您可以選擇在將它寫入您的資料存放區之前進一步處理 <xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-176">You must call one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Save%2A> methods to serialize `activity` into a <xref:System.IO.Stream>; you may then choose to additionally process the <xref:System.IO.Stream> before writing it to your data store.</span></span> <span data-ttu-id="0fc26-177">然而，當工作流程執行階段引擎呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> 時，您必須還原活動的相同複本。</span><span class="sxs-lookup"><span data-stu-id="0fc26-177">However, when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A>, you must restore an identical copy of the activity.</span></span>  
  
 <span data-ttu-id="0fc26-178">工作流程執行個體完成或終止時，您必須能夠將完成的範圍與包圍它的工作流程執行個體產生關聯，以在您的資料存放區中將範圍標示為不需要的範圍。</span><span class="sxs-lookup"><span data-stu-id="0fc26-178">You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</span></span> <span data-ttu-id="0fc26-179">因此，您也應該儲存與完成範圍關聯的工作流程執行個體的 <xref:System.Guid>。這可以從與 <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> 關聯的 <xref:System.Workflow.Runtime.WorkflowInstance> 的 `activity` 屬性中取得。</span><span class="sxs-lookup"><span data-stu-id="0fc26-179">Therefore, you should also save the <xref:System.Guid> of the workflow instance that is associated with the completed scope; this can be obtained from the <xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A> property of the <xref:System.Workflow.Runtime.WorkflowInstance> associated with `activity`.</span></span>  
  
 <span data-ttu-id="0fc26-180"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> 會接受完成範圍的 <xref:System.Guid> 做為參數。</span><span class="sxs-lookup"><span data-stu-id="0fc26-180"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A> takes the <xref:System.Guid> of the completed scope as a parameter.</span></span> <span data-ttu-id="0fc26-181">因此，您也必須儲存與 <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> 關聯的 `activity` 屬性。</span><span class="sxs-lookup"><span data-stu-id="0fc26-181">Therefore, you must also save the <xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A> property associated with `activity`.</span></span> <span data-ttu-id="0fc26-182">這個屬性可以透過 <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty> 的 `activity` 欄位來加以參考。</span><span class="sxs-lookup"><span data-stu-id="0fc26-182">This property can be referenced through the <xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty> field of `activity`.</span></span>  
  
 <span data-ttu-id="0fc26-183">如果您實作使用長期存放區的持續性服務，為了維持與工作流程執行階段引擎內部狀態的一致性，您應該參與工作流程異動批次處理，以延遲對您的長期存放區的實際寫入，直到工作流程認可點為止。</span><span class="sxs-lookup"><span data-stu-id="0fc26-183">If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</span></span> <span data-ttu-id="0fc26-184">若要參與批次處理，請將代表暫停變更資料庫的工作項目加入至 <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> 屬性中，然後在您的持續性服務中實作 <xref:System.Workflow.Runtime.IPendingWork> 介面。</span><span class="sxs-lookup"><span data-stu-id="0fc26-184">To participate in batching, add a work item to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> property that represents the pending changes to the database, and implement the <xref:System.Workflow.Runtime.IPendingWork> interface in your persistence service.</span></span>  
  
 <span data-ttu-id="0fc26-185">如果您無法將完成的範圍儲存至資料存放區中，則應該擲回有適當錯誤訊息的 <xref:System.Workflow.Runtime.Hosting.PersistenceException>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-185">If you cannot save the completed scope to your data store, you should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate error message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fc26-186">下列範例示範 `SaveCompletedContextActivity` 方法的實作。</span><span class="sxs-lookup"><span data-stu-id="0fc26-186">The following example demonstrates an implementation of the `SaveCompletedContextActivity` method.</span></span> <span data-ttu-id="0fc26-187">這個範例來自 FilePersistenceService.cs 檔案中的＜自訂持續性服務＞範例。</span><span class="sxs-lookup"><span data-stu-id="0fc26-187">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="0fc26-188">如需詳細資訊，請參閱 <<c0> [ 自訂持續性服務範例](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)。</span><span class="sxs-lookup"><span data-stu-id="0fc26-188">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#268](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#268)]
 [!code-vb[WF_Samples#268](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#268)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void SaveWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity, bool unlock);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SaveWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity, bool unlock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub SaveWorkflowInstanceState (rootActivity As Activity, unlock As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void SaveWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity, bool unlock);" />
      <MemberSignature Language="F#" Value="abstract member SaveWorkflowInstanceState : System.Workflow.ComponentModel.Activity * bool -&gt; unit" Usage="workflowPersistenceService.SaveWorkflowInstanceState (rootActivity, unlock)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
        <Parameter Name="unlock" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="0fc26-189">工作流程執行個體的根活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-189">The root activity of the workflow instance.</span>
          </span>
        </param>
        <param name="unlock">
          <span data-ttu-id="0fc26-190">如果不應鎖定工作流程執行個體則為 <see langword="true" />，如果應鎖定工作流程執行個體則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-190">
              <see langword="true" /> if the workflow instance should not be locked; <see langword="false" /> if the workflow instance should be locked.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-191">在衍生類別中實作時，將工作流程執行個體狀態儲存至資料存放區中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-191">When implemented in a derived class, saves the workflow instance state to a data store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc26-192">您必須呼叫其中一個多載的 <xref:System.Workflow.ComponentModel.Activity.Save%2A> 方法將 `rootActivity` 序列化至 <xref:System.IO.Stream> 中。</span><span class="sxs-lookup"><span data-stu-id="0fc26-192">You must call one of the overloaded <xref:System.Workflow.ComponentModel.Activity.Save%2A> methods to serialize `rootActivity` into a <xref:System.IO.Stream>.</span></span> <span data-ttu-id="0fc26-193">然後您可以選擇在寫入至您的資料存放區之前進一步處理 <xref:System.IO.Stream>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-193">You can then choose to additionally process the <xref:System.IO.Stream> before writing it to your data store.</span></span> <span data-ttu-id="0fc26-194">然而，當工作流程執行階段引擎呼叫 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> 時，您必須還原根活動的相同複本。</span><span class="sxs-lookup"><span data-stu-id="0fc26-194">However, when the workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A>, you must restore an identical copy of the root activity.</span></span> <span data-ttu-id="0fc26-195">如果您無法將工作流程執行個體狀態儲存至資料存放區中，則應該擲回有適當錯誤訊息的 <xref:System.Workflow.Runtime.Hosting.PersistenceException>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-195">If you cannot save the workflow instance state to your data store, you should throw a <xref:System.Workflow.Runtime.Hosting.PersistenceException> with an appropriate error message.</span></span>  
  
 <span data-ttu-id="0fc26-196">工作流程執行階段引擎提供鎖定語意，以限制存取儲存在資料存放區中的工作流程執行個體狀態。</span><span class="sxs-lookup"><span data-stu-id="0fc26-196">The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</span></span> <span data-ttu-id="0fc26-197">這可以由在多台主機中執行並指向相同資料存放區的持續性服務來存取。</span><span class="sxs-lookup"><span data-stu-id="0fc26-197">This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</span></span> <span data-ttu-id="0fc26-198">鎖定語意的設計是為了避免兩個不同工作流程執行階段中執行的持續性服務，同時將相同的工作流程執行個體載入記憶體中。</span><span class="sxs-lookup"><span data-stu-id="0fc26-198">The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</span></span> <span data-ttu-id="0fc26-199">視您的持續性服務在設計上所支援的環境類型而定，您可以選擇是否支援這項功能。</span><span class="sxs-lookup"><span data-stu-id="0fc26-199">Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</span></span> <span data-ttu-id="0fc26-200">如果您選擇支援執行階段鎖定語意，然後，如果持續性服務嘗試儲存之前由其他持續性服務鎖定的工作流程執行個體狀態，則您應該擲回 <xref:System.Workflow.Runtime.WorkflowOwnershipException>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-200">If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a <xref:System.Workflow.Runtime.WorkflowOwnershipException>.</span></span> <span data-ttu-id="0fc26-201">如果 `unlock` 是 `true`，您應該在儲存之後解除鎖定對工作流程執行個體狀態的存取。</span><span class="sxs-lookup"><span data-stu-id="0fc26-201">If `unlock` is `true`, you should unlock access to the workflow instance state after you save it.</span></span>  
  
 <span data-ttu-id="0fc26-202"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> 會接受工作流程執行個體的 <xref:System.Guid> 做為參數。</span><span class="sxs-lookup"><span data-stu-id="0fc26-202"><xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A> takes the <xref:System.Guid> of the workflow instance as a parameter.</span></span> <span data-ttu-id="0fc26-203">因此，您應該儲存此 <xref:System.Guid>。</span><span class="sxs-lookup"><span data-stu-id="0fc26-203">Therefore, you should save this <xref:System.Guid>.</span></span> <span data-ttu-id="0fc26-204">您也可以使用此 <xref:System.Guid> 將工作流程執行個體與其已完成範圍的儲存狀態產生關聯。</span><span class="sxs-lookup"><span data-stu-id="0fc26-204">You can also use this <xref:System.Guid> to associate the workflow instance with the saved states of its completed scopes.</span></span> <span data-ttu-id="0fc26-205">之所以必須這樣做是因為您必須能夠在工作流程執行個體完成時，將這些完成的範圍標示為不需要的範圍。</span><span class="sxs-lookup"><span data-stu-id="0fc26-205">You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</span></span>  
  
 <span data-ttu-id="0fc26-206">工作流程執行個體引擎在工作流程執行個體完成或終止時，對 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> 做最後的呼叫。</span><span class="sxs-lookup"><span data-stu-id="0fc26-206">The workflow runtime engine calls <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> a final time when the workflow instance is completed or terminated.</span></span> <span data-ttu-id="0fc26-207">因此，如果 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> 等於 <xref:System.Workflow.Runtime.WorkflowStatus.Completed> 或 <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>，您就可以從資料存放區中，安全地刪除工作流程執行個體和所有與它關聯的完成範圍。</span><span class="sxs-lookup"><span data-stu-id="0fc26-207">Therefore, if <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A> is equal to <xref:System.Workflow.Runtime.WorkflowStatus.Completed> or <xref:System.Workflow.Runtime.WorkflowStatus.Terminated>, you can safely delete the workflow instance and all its associated completed scopes from your data store.</span></span> <span data-ttu-id="0fc26-208">或者，您可以訂閱 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> 或 <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> 事件，以判斷何時是刪除與工作流程執行個體關聯之記錄的安全時機。</span><span class="sxs-lookup"><span data-stu-id="0fc26-208">Alternatively, you can subscribe to the <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted> or <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated> events to determine when it is safe to delete records associated with the workflow instance.</span></span> <span data-ttu-id="0fc26-209">是否實際從您的資料存放區刪除記錄要視您的實作而定。</span><span class="sxs-lookup"><span data-stu-id="0fc26-209">Whether you actually delete the records from your data store depends on your implementation.</span></span>  
  
 <span data-ttu-id="0fc26-210">如果您實作使用長期存放區的持續性服務，為了維持與工作流程執行階段引擎內部狀態的一致性，您應該參與工作流程交易批次處理，以延遲對您的長期存放區的實際寫入，直到工作流程認可點為止。</span><span class="sxs-lookup"><span data-stu-id="0fc26-210">If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</span></span> <span data-ttu-id="0fc26-211">若要參與批次處理，請將代表暫停變更長期存放區的工作項目加入至 <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> 屬性中，然後在您的持續性服務中實作 <xref:System.Workflow.Runtime.IPendingWork> 介面。</span><span class="sxs-lookup"><span data-stu-id="0fc26-211">To participate in batching, add a work item that represents the pending changes to your durable store to the <xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A> property, and implement the <xref:System.Workflow.Runtime.IPendingWork> interface in your persistence service.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fc26-212">下列範例示範 `SaveWorkflowInstanceState` 方法的實作。</span><span class="sxs-lookup"><span data-stu-id="0fc26-212">The following example demonstrates an implementation of the `SaveWorkflowInstanceState` method.</span></span> <span data-ttu-id="0fc26-213">這個範例來自 FilePersistenceService.cs 檔案中的＜自訂持續性服務＞範例。</span><span class="sxs-lookup"><span data-stu-id="0fc26-213">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="0fc26-214">如需詳細資訊，請參閱 <<c0> [ 自訂持續性服務範例](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)。</span><span class="sxs-lookup"><span data-stu-id="0fc26-214">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#264](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#264)]
 [!code-vb[WF_Samples#264](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#264)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadOnIdle">
      <MemberSignature Language="C#" Value="protected internal abstract bool UnloadOnIdle (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool UnloadOnIdle(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool UnloadOnIdle(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="abstract member UnloadOnIdle : System.Workflow.ComponentModel.Activity -&gt; bool" Usage="workflowPersistenceService.UnloadOnIdle activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity">
          <span data-ttu-id="0fc26-215">表示已完成範圍的 <see cref="T:System.Workflow.ComponentModel.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-215">An <see cref="T:System.Workflow.ComponentModel.Activity" /> that represents the completed scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-216">判斷是否應在工作流程閒置時加以卸載。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-216">Determines whether a workflow should be unloaded when idle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0fc26-217">若為 <see langword="true" />，表示指定的工作流程閒置時，工作流程執行階段引擎會將它卸載。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-217">If <see langword="true" />, the workflow runtime engine unloads the specified workflow when it becomes idle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0fc26-218">下列範例示範 `UnloadOnIdle` 方法的實作。</span><span class="sxs-lookup"><span data-stu-id="0fc26-218">The following example demonstrates an implementation of the `UnloadOnIdle` method.</span></span> <span data-ttu-id="0fc26-219">這個範例來自 FilePersistenceService.cs 檔案中的＜自訂持續性服務＞範例。</span><span class="sxs-lookup"><span data-stu-id="0fc26-219">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="0fc26-220">如需詳細資訊，請參閱 <<c0> [ 自訂持續性服務範例](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)。</span><span class="sxs-lookup"><span data-stu-id="0fc26-220">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#270](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#270)]
 [!code-vb[WF_Samples#270](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#270)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnlockWorkflowInstanceState">
      <MemberSignature Language="C#" Value="protected internal abstract void UnlockWorkflowInstanceState (System.Workflow.ComponentModel.Activity rootActivity);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void UnlockWorkflowInstanceState(class System.Workflow.ComponentModel.Activity rootActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Sub UnlockWorkflowInstanceState (rootActivity As Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract void UnlockWorkflowInstanceState(System::Workflow::ComponentModel::Activity ^ rootActivity);" />
      <MemberSignature Language="F#" Value="abstract member UnlockWorkflowInstanceState : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="workflowPersistenceService.UnlockWorkflowInstanceState rootActivity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rootActivity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="rootActivity">
          <span data-ttu-id="0fc26-221">工作流程執行個體的根活動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-221">The root activity of the workflow instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0fc26-222">在衍生類別中覆寫時，解除鎖定工作流程執行個體狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0fc26-222">When overridden in a derived class, unlocks the workflow instance state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0fc26-223">此方法是抽象的，所以它不包含有關鎖定與解除鎖定的預設實作。</span><span class="sxs-lookup"><span data-stu-id="0fc26-223">This method is abstract, so it does not contain a default implementation on locking and unlocking.</span></span>  
  
 <span data-ttu-id="0fc26-224">實作自訂持續性服務時，如果想要實作鎖定配置，您將需要覆寫此方法，並且在以解除鎖定參數的值為基礎的 <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> 方法中提供鎖定-解除鎖定機制。</span><span class="sxs-lookup"><span data-stu-id="0fc26-224">While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A> method based on the value of the unlock parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0fc26-225">下列範例示範 `UnlockWorkflowInstanceState` 方法的實作。</span><span class="sxs-lookup"><span data-stu-id="0fc26-225">The following example demonstrates an implementation of the `UnlockWorkflowInstanceState` method.</span></span> <span data-ttu-id="0fc26-226">這個範例來自 FilePersistenceService.cs 檔案中的＜自訂持續性服務＞範例。</span><span class="sxs-lookup"><span data-stu-id="0fc26-226">This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</span></span> <span data-ttu-id="0fc26-227">如需詳細資訊，請參閱 <<c0> [ 自訂持續性服務範例](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)。</span><span class="sxs-lookup"><span data-stu-id="0fc26-227">For more information, see [Custom Persistence Service Sample](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d).</span></span>  
  
 [!code-csharp[WF_Samples#267](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#267)]
 [!code-vb[WF_Samples#267](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#267)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>