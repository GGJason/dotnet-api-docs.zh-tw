<Type Name="ZipArchive" FullName="System.IO.Compression.ZipArchive">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb0ae8c34c3e0387afa960a9db19f48f127dca9f" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36485860" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ZipArchive : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipArchive extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipArchive" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipArchive&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipArchive : IDisposable" />
  <TypeSignature Language="F#" Value="type ZipArchive = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>代表 zip 封存格式的壓縮檔封裝。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 管理的 zip 封存和其檔案項目方法分散到三個類別： <xref:System.IO.Compression.ZipFile>， <xref:System.IO.Compression.ZipArchive>，和<xref:System.IO.Compression.ZipArchiveEntry>。  
  
|以|使用|  
|--------|---------|  
|建立 zip 封存的目錄|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|擷取目錄的 zip 封存的內容|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|將新檔案加入至現有的 zip 封存|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|從 zip 封存中擷取|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|擷取 zip 封存中的所有檔案|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|開啟單一檔案的 zip 封存中所包含之資料流|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|從 zip 封存中刪除檔案|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 當您建立新的項目時，檔案會壓縮，並新增至 zip 封裝。 <xref:System.IO.Compression.ZipArchive.CreateEntry%2A>方法可讓您指定的目錄階層時，加入項目。 您包含新的項目 zip 封裝內的相對路徑。 例如，建立新的項目與相對路徑`AddedFolder\NewFile.txt`名為 AddedFolder 的目錄中建立壓縮的文字檔。  
  
 如果您參考`System.IO.Compression.FileSystem`組件在您的專案，您可以存取三個擴充方法 (從<xref:System.IO.Compression.ZipFileExtensions>類別) 的<xref:System.IO.Compression.ZipArchive>類別： <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>， <xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>，和<xref:System.IO.Compression.ZipFileExtensions.ExtractToDirectory%2A>。 這些擴充方法可讓您壓縮和解壓縮檔案的項目內容。 `System.IO.Compression.FileSystem`組件不是供[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]應用程式。 在[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]應用程式，您可以壓縮和解壓縮檔案使用<xref:System.IO.Compression.DeflateStream>或<xref:System.IO.Compression.GZipStream>類別，或者您可以使用[!INCLUDE[wrt](~/includes/wrt-md.md)]類型[壓縮](http://go.microsoft.com/fwlink/p/?LinkID=246357)和[解壓縮程式](http://go.microsoft.com/fwlink/p/?LinkID=246358)。  
  
   
  
## Examples  
 第一個範例示範如何建立新的項目，並使用資料流寫入其中。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 下列範例會示範如何開啟 zip 封存，並逐一查看集合的項目。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 第三個範例示範如何使用擴充方法，從現有的檔案的 zip 封存中建立新的項目，並解壓縮的封存內容。 您必須參考`System.IO.Compression.FileSystem`來執行程式碼的組件。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program3.cs#3)]
 [!code-vb[System.IO.Compression.ZipArchive#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program3.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.Compression.ZipFile" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.IO.Compression.ZipArchive" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">包含要讀取之封存的資料流。</param>
        <summary>從指定的資料流初始化 <see cref="T:System.IO.Compression.ZipArchive" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">資料流已經關閉，或不支援讀取。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.IO.InvalidDataException">資料流的內容不是 zip 封存格式。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
      </Parameters>
      <Docs>
        <param name="stream">輸入或輸出資料流。</param>
        <param name="mode">其中一個列舉值，指出是否使用 zip 封存讀取、建立或更新項目。</param>
        <summary>使用指定的模式，從指定的資料流初始化 <see cref="T:System.IO.Compression.ZipArchive" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode.Read>，資料流必須支援讀取。 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode.Create>，資料流必須支援寫入。 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode.Update>，資料流必須支援讀取、 寫入和搜尋。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">資料流已經關閉，或資料流的容量不符合模式。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> 是無效的值。</exception>
        <exception cref="T:System.IO.InvalidDataException">無法將資料流的內容解譯為 zip 封存。  -或-  <paramref name="mode" /> 為 <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />，而且項目從封存中遺失，或已損毀且無法讀取。  -或-  <paramref name="mode" /> 為 <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />，而且項目太大，無法放入記憶體。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode * bool -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode, leaveOpen)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">輸入或輸出資料流。</param>
        <param name="mode">其中一個列舉值，指出是否使用 zip 封存讀取、建立或更新項目。</param>
        <param name="leaveOpen">
          <see langword="true" /> 表示在處置 <see cref="T:System.IO.Compression.ZipArchive" /> 物件之後，將資料流保持開啟；否則為 <see langword="false" />。</param>
        <summary>在指定之模式的指定資料流上，初始化 <see cref="T:System.IO.Compression.ZipArchive" /> 類別的新執行個體，並選擇性地保留資料流開啟狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode.Read>，資料流必須支援讀取。 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode.Create>，資料流必須支援寫入。 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode.Update>，資料流必須支援讀取、 寫入和搜尋。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">資料流已經關閉，或資料流的容量不符合模式。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> 是無效的值。</exception>
        <exception cref="T:System.IO.InvalidDataException">無法將資料流的內容解譯為 zip 封存。  -或-  <paramref name="mode" /> 為 <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />，而且項目從封存中遺失，或已損毀且無法讀取。  -或-  <paramref name="mode" /> 為 <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />，而且項目太大，無法放入記憶體。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ZipArchive (System.IO.Stream stream, System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, System.Text.Encoding entryNameEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, valuetype System.IO.Compression.ZipArchiveMode mode, bool leaveOpen, class System.Text.Encoding entryNameEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.#ctor(System.IO.Stream,System.IO.Compression.ZipArchiveMode,System.Boolean,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ZipArchive(System::IO::Stream ^ stream, System::IO::Compression::ZipArchiveMode mode, bool leaveOpen, System::Text::Encoding ^ entryNameEncoding);" />
      <MemberSignature Language="F#" Value="new System.IO.Compression.ZipArchive : System.IO.Stream * System.IO.Compression.ZipArchiveMode * bool * System.Text.Encoding -&gt; System.IO.Compression.ZipArchive" Usage="new System.IO.Compression.ZipArchive (stream, mode, leaveOpen, entryNameEncoding)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="mode" Type="System.IO.Compression.ZipArchiveMode" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
        <Parameter Name="entryNameEncoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="stream">輸入或輸出資料流。</param>
        <param name="mode">其中一個列舉值，指出是否使用 zip 封存讀取、建立或更新項目。</param>
        <param name="leaveOpen">
          <see langword="true" /> 表示在處置 <see cref="T:System.IO.Compression.ZipArchive" /> 物件之後，將資料流保持開啟；否則為 <see langword="false" />。</param>
        <param name="entryNameEncoding">在此封存中讀取或寫入項目名稱時要使用的編碼方式。 只有需要編碼以與 Zip 封存工具和程式庫互通，且這類工具和程式庫不支援項目名稱使用 UTF-8 編碼時，才指定此參數的值。</param>
        <summary>在指定之模式的指定資料流上，初始化 <see cref="T:System.IO.Compression.ZipArchive" /> 類別的新執行個體，使用項目名稱的指定編碼方式，並選擇性地保留資料流開啟狀態。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode.Read>，資料流必須支援讀取。 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode.Create>，資料流必須支援寫入。 如果`mode`參數設定為<xref:System.IO.Compression.ZipArchiveMode.Update>，資料流必須支援讀取、 寫入和搜尋。  
  
 當您開啟 zip 封存檔案進行讀取和`entryNameEncoding`設`null`，項目名稱解碼根據下列規則：  
  
-   當未設定的語言編碼 （以本機檔案標頭的一般用途的位元旗標） 旗標時，目前的系統預設字碼頁用來解碼的項目名稱。  
  
-   當設定的語言編碼旗標時，utf-8 用來解碼項目名稱。  
  
 當您開啟 zip 封存檔案進行讀取和`entryNameEncoding`以外設定為值`null`，項目名稱解碼根據下列規則：  
  
-   當語言編碼旗標未設定，指定`entryNameEncoding`用來解碼的項目名稱。  
  
-   當設定的語言編碼旗標時，utf-8 用來解碼項目名稱。  
  
 當您撰寫封存檔案和`entryNameEncoding`設`null`，項目名稱會編碼根據下列規則：  
  
-   包含 ASCII 範圍以外的字元的項目名稱、 語言編碼旗標已設定，而且項目名稱會使用 utf-8 編碼。  
  
-   用於項目只能包含 ASCII 字元的名稱，未設定的語言編碼旗標，並使用目前的系統預設字碼頁來進行編碼的項目名稱。  
  
 當您撰寫封存檔案和`entryNameEncoding`以外設定為值`null`，指定`entryNameEncoding`用來編碼為位元組的項目名稱。 只有當指定的編碼方式為 utf-8 編碼時設定的語言編碼旗標 （以本機檔案標頭的一般用途的位元旗標）。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">資料流已經關閉，或資料流的容量不符合模式。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="mode" /> 是無效的值。</exception>
        <exception cref="T:System.IO.InvalidDataException">無法將資料流的內容解譯為 zip 封存。  -或-  <paramref name="mode" /> 為 <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />，而且項目從封存中遺失，或已損毀且無法讀取。  -或-  <paramref name="mode" /> 為 <see cref="F:System.IO.Compression.ZipArchiveMode.Update" />，而且項目太大，無法放入記憶體。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEntry">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立 zip 封存中的空項目。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="member this.CreateEntry : string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.CreateEntry entryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">指定要建立之項目名稱的路徑 (相對於封存的根目錄)。</param>
        <summary>在 zip 封存中建立具有指定之路徑和項目名稱的空項目。</summary>
        <returns>Zip 封存中的空項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entryName`字串應該會反映您想要建立 zip 封存中的項目相對路徑。 沒有任何限制，在您提供的字串。 不過，如果它不格式化為相對路徑，會建立項目，擷取 zip 封存的內容時，可能會發生例外狀況。 如果封存中已經存在具有指定的路徑和名稱的項目，第二個項目會建立具有相同的路徑和名稱。  
  
 值<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>新項目的屬性設定為目前的時間。 使用預設的壓縮層級基礎的壓縮演算法壓縮項目。 如果您想要指定不同的壓縮層級，使用<xref:System.IO.Compression.ZipArchive.CreateEntry%2A>方法。  
  
   
  
## Examples  
 下列範例會示範如何建立項目，並使用資料流寫入其中。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="entryName" /> 為 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entryName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException">Zip 封存不支援寫入。</exception>
        <exception cref="T:System.ObjectDisposedException">Zip 封存已經處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry CreateEntry (string entryName, System.IO.Compression.CompressionLevel compressionLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry CreateEntry(string entryName, valuetype System.IO.Compression.CompressionLevel compressionLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.CreateEntry(System.String,System.IO.Compression.CompressionLevel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ CreateEntry(System::String ^ entryName, System::IO::Compression::CompressionLevel compressionLevel);" />
      <MemberSignature Language="F#" Value="member this.CreateEntry : string * System.IO.Compression.CompressionLevel -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.CreateEntry (entryName, compressionLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
        <Parameter Name="compressionLevel" Type="System.IO.Compression.CompressionLevel" />
      </Parameters>
      <Docs>
        <param name="entryName">指定要建立之項目名稱的路徑 (相對於封存的根目錄)。</param>
        <param name="compressionLevel">其中一個列舉值，指出建立項目時是否要強調速度或壓縮的效益。</param>
        <summary>在 zip 封存中建立具有指定之項目名稱和壓縮等級的空項目。</summary>
        <returns>Zip 封存中的空項目。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `entryName`字串應該會反映您想要建立 zip 封存中的項目相對路徑。 沒有任何限制，在您提供的字串。 不過，如果它不格式化為相對路徑，會建立項目，擷取 zip 封存的內容時，可能會發生例外狀況。 如果封存中已經存在具有指定名稱的項目，第二個項目會建立具有相同名稱。  
  
 值<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>新項目的屬性設定為目前的時間。 設定`compressionLevel`參數<xref:System.IO.Compression.CompressionLevel.Optimal>如果您想要壓縮檔案盡量。 設定`compressionLevel`參數<xref:System.IO.Compression.CompressionLevel.Fastest>唯一，如果您擔心，壓縮作業將不會完成速度不夠快您的案例。  
  
   
  
## Examples  
 下列範例會示範如何以最佳的壓縮層級建立的項目。 它也會將寫入新項目所使用的資料流。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="entryName" /> 為 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entryName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException">Zip 封存不支援寫入。</exception>
        <exception cref="T:System.ObjectDisposedException">Zip 封存已經處置。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>釋放由 <see cref="T:System.IO.Compression.ZipArchive" /> 物件使用的所有資源。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="zipArchive.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="T:System.IO.Compression.ZipArchive" /> 類別的目前執行個體所使用的資源釋出。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法完成寫入封存，所使用的資源全部釋出<xref:System.IO.Compression.ZipArchive>物件。 除非您使用建構的物件<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>建構函式多載，然後設定其`leaveOpen`參數`true`，所有基礎資料流已關閉且不再可供後續的寫入作業。  
  
 當您完成使用此執行個體<xref:System.IO.Compression.ZipArchive>，呼叫<xref:System.IO.Compression.ZipArchive.Dispose>釋放此執行個體所使用的所有資源。 您應該刪除進一步參考<xref:System.IO.Compression.ZipArchive>執行個體，讓記憶體回收行程可以回收的記憶體，而不是讓它維持在運作進行最終處理的執行個體。  
  
 <xref:System.IO.Compression.ZipArchive.Dispose> 呼叫<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>方法，其中包含表示釋放 managed 和 unmanaged 資源的程式碼。 如需詳細資訊，請參閱 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="zipArchive.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示完成寫入封存並釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 表示只釋放 Unmanaged 資源。</param>
        <summary>由 <see cref="M:System.IO.Compression.ZipArchive.Dispose" /> 和 <see cref="M:System.Object.Finalize" /> 方法呼叫以釋放 <see cref="T:System.IO.Compression.ZipArchive" /> 類別之目前執行個體所使用的 Unmanaged 資源，並選擇性完成封存的寫入以及釋放 Managed 資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`disposing`設`true`，所有基礎資料流已關閉且不再適用於後續的寫入作業，除非您使用建構的物件<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>建構函式多載，然後設定其`leaveOpen`參數`true`.  
  
 會呼叫這個方法只由公用<xref:System.IO.Compression.ZipArchive.Dispose>和<xref:System.Object.Finalize>方法。 請勿直接呼叫這個方法。  
  
 當您實作 dispose 模式的布林參數<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>方法應使用，如下所示：  
  
-   <xref:System.IO.Compression.ZipArchive.Dispose>目前物件的方法應該呼叫<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>布林參數設定為與`true`表示釋放 managed 和 unmanaged 資源。  
  
-   <xref:System.Object.Finalize>目前物件的方法應該呼叫<xref:System.IO.Compression.ZipArchive.Dispose%28System.Boolean%29>布林參數設定為與`false`表示只釋放 unmanaged 的資源。  
  
 如需詳細資訊，請參閱 。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Entries">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt; Entries { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IO.Compression.ZipArchiveEntry&gt; Entries" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Entries" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Entries As ReadOnlyCollection(Of ZipArchiveEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ Entries { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IO::Compression::ZipArchiveEntry ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Entries : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;" Usage="System.IO.Compression.ZipArchive.Entries" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IO.Compression.ZipArchiveEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前 zip 封存中所包含項目的集合。</summary>
        <value>目前 zip 封存中所包含項目的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.IO.Compression.ZipArchive.Entries%2A>屬性，以擷取整個集合的項目。 使用<xref:System.IO.Compression.ZipArchive.GetEntry%2A>方法依名稱擷取單一項目。  
  
   
  
## Examples  
 下列範例會示範如何開啟 zip 封存，並逐一查看集合的項目。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Zip 封存不支援讀取。</exception>
        <exception cref="T:System.ObjectDisposedException">Zip 封存已經處置。</exception>
        <exception cref="T:System.IO.InvalidDataException">Zip 封存已損毀，且無法擷取它的項目。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEntry">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveEntry GetEntry (string entryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Compression.ZipArchiveEntry GetEntry(string entryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchive.GetEntry(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEntry (entryName As String) As ZipArchiveEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Compression::ZipArchiveEntry ^ GetEntry(System::String ^ entryName);" />
      <MemberSignature Language="F#" Value="member this.GetEntry : string -&gt; System.IO.Compression.ZipArchiveEntry" Usage="zipArchive.GetEntry entryName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entryName">識別要擷取之項目的路徑 (相對於封存的根目錄)。</param>
        <summary>在 zip 封存中擷取指定項目的包裝函式。</summary>
        <returns>封存中之指定項目的包裝函式，如果項目不存在於封存中則為 <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果具有指定的名稱的多個項目存在於封存檔中，會傳回第一個。 項目的名稱相較於`entryName`使用序數比較。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.IO.Compression.ZipArchive.GetEntry%2A>方法來擷取項目。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="entryName" /> 為 <see cref="F:System.String.Empty" />。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entryName" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.NotSupportedException">Zip 封存不支援讀取。</exception>
        <exception cref="T:System.ObjectDisposedException">Zip 封存已經處置。</exception>
        <exception cref="T:System.IO.InvalidDataException">Zip 封存已損毀，且無法擷取它的項目。</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchiveMode Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Compression.ZipArchiveMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchive.Mode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Mode As ZipArchiveMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Compression::ZipArchiveMode Mode { System::IO::Compression::ZipArchiveMode get(); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.IO.Compression.ZipArchiveMode" Usage="System.IO.Compression.ZipArchive.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchiveMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，描述 zip 封存可以在項目上執行的動作類型。</summary>
        <value>其中一個列舉值，其描述 zip 封存可以在項目上執行的動作類型 (讀取、建立或更新)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定的值<xref:System.IO.Compression.ZipArchive>屬性，當您建立的執行個體<xref:System.IO.Compression.ZipArchive>類別。 使用<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%29>或<xref:System.IO.Compression.ZipArchive.%23ctor%28System.IO.Stream%2CSystem.IO.Compression.ZipArchiveMode%2CSystem.Boolean%29>建構函式來提供值給<xref:System.IO.Compression.ZipArchive.Mode%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>