<Type Name="ZipArchiveEntry" FullName="System.IO.Compression.ZipArchiveEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2dd9993968d58af82ea157410eadb5ecfa681cc" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
    <Meta Name="ms.locfileid" Value="31043640" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ZipArchiveEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ZipArchiveEntry extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.Compression.ZipArchiveEntry" />
  <TypeSignature Language="VB.NET" Value="Public Class ZipArchiveEntry" />
  <TypeSignature Language="C++ CLI" Value="public ref class ZipArchiveEntry" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Compression</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>表示 zip 封存中的壓縮檔。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zip 封存包含的項目，針對每個壓縮檔。 <xref:System.IO.Compression.ZipArchiveEntry>類別可讓您檢查的內容項目，並開啟或刪除的項目。 當您開啟某個項目時，您可以修改壓縮的檔案寫入該壓縮的檔案資料流。  
  
 管理的 zip 封存和其檔案項目方法分散到三個類別： <xref:System.IO.Compression.ZipFile>，<xref:System.IO.Compression.ZipArchive>和<xref:System.IO.Compression.ZipArchiveEntry>。  
  
|若要...|請使用於…|  
|---------|----------|  
|建立 zip 封存的目錄|<xref:System.IO.Compression.ZipFile.CreateFromDirectory%2A?displayProperty=nameWithType>|  
|擷取目錄的 zip 封存的內容|<xref:System.IO.Compression.ZipFile.ExtractToDirectory%2A?displayProperty=nameWithType>|  
|將新檔案加入至現有的 zip 封存|<xref:System.IO.Compression.ZipArchive.CreateEntry%2A?displayProperty=nameWithType>|  
|擷取 zip 封存中的檔案|<xref:System.IO.Compression.ZipArchive.GetEntry%2A?displayProperty=nameWithType>|  
|擷取所有 zip 封存中的檔案|<xref:System.IO.Compression.ZipArchive.Entries%2A?displayProperty=nameWithType>|  
|若要開啟的資料流的個別檔案所包含之 zip 封存中|<xref:System.IO.Compression.ZipArchiveEntry.Open%2A?displayProperty=nameWithType>|  
|從 zip 封存中刪除檔案|<xref:System.IO.Compression.ZipArchiveEntry.Delete%2A?displayProperty=nameWithType>|  
  
 如果您參考`System.IO.Compression.FileSystem`您專案中的組件，您可以存取的兩個擴充方法<xref:System.IO.Compression.ZipArchiveEntry>類別。 這些方法都是<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>和<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%2CSystem.Boolean%29>，可讓您解壓縮檔案的項目內容。 `System.IO.Compression.FileSystem`組件不提供[!INCLUDE[win8](~/includes/win8-md.md)]。 在[!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]應用程式，您可以使用解壓縮的封存內容<xref:System.IO.Compression.DeflateStream>或<xref:System.IO.Compression.GZipStream>，或者您可以使用[!INCLUDE[wrt](~/includes/wrt-md.md)]類型[壓縮](http://go.microsoft.com/fwlink/p/?LinkId=246357)和[解壓縮程式](http://go.microsoft.com/fwlink/?LinkId=246358)至壓縮和解壓縮檔案。  
  
   
  
## Examples  
 第一個範例示範如何在 zip 封存中建立新的項目，並寫入其中。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 第二個範例示範如何使用<xref:System.IO.Compression.ZipFileExtensions.ExtractToFile%28System.IO.Compression.ZipArchiveEntry%2CSystem.String%29>擴充方法。 您必須參考`System.IO.Compression.FileSystem`来執行的程式碼專案中的組件。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Archive">
      <MemberSignature Language="C#" Value="public System.IO.Compression.ZipArchive Archive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Compression.ZipArchive Archive" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.Archive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Archive As ZipArchive" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Compression::ZipArchive ^ Archive { System::IO::Compression::ZipArchive ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Compression.ZipArchive</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得項目所屬的 zip 封存。</summary>
        <value>項目所屬的 Zip 封存，或者為<see langword="null" />（如果已刪除項目）。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompressedLength">
      <MemberSignature Language="C#" Value="public long CompressedLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CompressedLength" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.CompressedLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompressedLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long CompressedLength { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 Zip 封存中的項目壓縮大小。</summary>
        <value>Zip 封存中項目的壓縮大小。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 無法擷取這個屬性，當模式設定為<xref:System.IO.Compression.ZipArchiveMode.Create>，或將模式設為<xref:System.IO.Compression.ZipArchiveMode.Update>，並且已經開啟的項目。  
  
   
  
## Examples  
 下列範例顯示如何擷取 zip 封存中的項目，以及計算項目屬性的值。 它會使用<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>屬性來顯示項目的名稱和<xref:System.IO.Compression.ZipArchiveEntry.Length%2A>和<xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A>計算多少檔案已壓縮的內容。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">屬性的值無法使用，因為該項目已被修改。</exception>
      </Docs>
    </Member>
    <Member MemberName="Crc32">
      <MemberSignature Language="C#" Value="public uint Crc32 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Crc32" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.Crc32" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Crc32 As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 Crc32 { System::UInt32 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchiveEntry.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從 zip 封存中刪除項目。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">此項目已經開啟供讀取或寫入。</exception>
        <exception cref="T:System.NotSupportedException">這個項目的 Zip 封存的開啟模式不是<see cref="F:System.IO.Compression.ZipArchiveMode.Update" />。</exception>
        <exception cref="T:System.ObjectDisposedException">這個項目的 Zip 封存已經過處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="ExternalAttributes">
      <MemberSignature Language="C#" Value="public int ExternalAttributes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExternalAttributes" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.ExternalAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalAttributes As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExternalAttributes { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>OS 和應用程式專用的檔案屬性。</summary>
        <value>寫入此項目時應用程式所寫入的外部屬性。 其同時為主機 OS 和應用程式的相依項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 外部屬性的對應是主機系統相依。 MS-DOS 的低序位位元組是 MS-DOS 目錄屬性位元組。 For Unix 中，最高位元組經常會用來儲存檔案的權限。 如果輸入是來自標準輸入中，此欄位設為零。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 Zip 封存中的項目相對路徑。</summary>
        <value>Zip 封存中的項目相對路徑。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>屬性包含相對路徑，包括子目錄的階層架構，zip 封存中的項目。 (相較之下，<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>屬性包含的項目名稱並不包含子目錄階層。)例如，如果您在 zip 封存中建立兩個項目使用<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>方法，並提供`NewEntry.txt`做為第一個項目名稱和`AddedFolder\\NewEntry.txt`第二個項目，這兩個項目都會有`NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>屬性。 第一個項目也會有`NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>屬性，但是第二個項目會造成`AddedFolder\\NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>屬性。  
  
 您可以指定任何字串項目，包括字串，其中指定了無效的和絕對路徑的路徑。 因此，<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>屬性可能包含格式不正確的值。 當您擷取 zip 封存的內容無效或絕對路徑可能會導致例外狀況。  
  
   
  
## Examples  
 下列範例會示範如何逐一查看內容的.zip 檔案，並擷取包含.txt 副檔名的檔案。  
  
 [!code-csharp[System.IO.Compression.ZipArchive#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchive/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchive#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchive/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastWriteTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset LastWriteTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastWriteTime" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.LastWriteTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LastWriteTime As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTimeOffset LastWriteTime { DateTimeOffset get(); void set(DateTimeOffset value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定上次變更 zip 封存中之項目的時間。</summary>
        <value>上次變更 zip 封存中之項目的時間。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您建立新的項目從現有的檔案呼叫<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>方法，<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>屬性的項目會自動設定為最後一次檔案被修改。 當您建立新的項目以程式設計方式透過呼叫<xref:System.IO.Compression.ZipArchive.CreateEntry%2A>方法，<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>項目的屬性會自動設定為執行的時間。 如果您修改的項目，您必須明確設定<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>屬性，如果您想要以反映最新變更的時間值。  
  
 當您設定此屬性，<xref:System.DateTimeOffset>值會轉換成特定 zip 封存的時間戳記格式。 此格式支援的兩秒的解析度。 最早的允許的值是 1980 年 1 月 1 日 0:00:00 （午夜）。 最新的允許的值為 2107 年 12 月 31 日 23:59:58 （一個第二個之前午夜）。 如果上次寫入時間的值不是有效的屬性會傳回預設值是 1980 年 1 月 1 日 0:00:00 （午夜）。  
  
   
  
## Examples  
 下列範例示範如何開啟 zip 封存中的項目、 修改它，並設定<xref:System.IO.Compression.ZipArchiveEntry.LastWriteTime%2A>屬性到目前的時間。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program2.cs#2)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">嘗試設定這個屬性失敗，因為項目的 zip 封存處於<see cref="F:System.IO.Compression.ZipArchiveMode.Read" />模式。</exception>
        <exception cref="T:System.IO.IOException">封存模式設定為 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />。  
  
 \-或-  
  
 封存模式設定為 <see cref="F:System.IO.Compression.ZipArchiveMode.Update" /> ，並且已經開啟該項目。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">已嘗試將這個屬性設定為早於 1980 年 1 月 1 日 0:00:00 (午夜) 或晚於 2107 年 12 月 31 日 23:59:58 (午夜前一秒)。</exception>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public long Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Length" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long Length { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 Zip 封存中的項目未壓縮大小。</summary>
        <value>Zip 封存中的項目未壓縮大小。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 無法擷取這個屬性，當模式設定為<xref:System.IO.Compression.ZipArchiveMode.Create>，或將模式設為<xref:System.IO.Compression.ZipArchiveMode.Update>，並且已經開啟的項目。  
  
   
  
## Examples  
 下列範例會示範如何擷取項目從 zip 封存，以及計算項目屬性的值。 它會使用<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>屬性來顯示項目的名稱和<xref:System.IO.Compression.ZipArchiveEntry.Length%2A>和<xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A>計算多少檔案已壓縮的內容。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">屬性的值無法使用，因為該項目已被修改。</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.IO.Compression.ZipArchiveEntry.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 Zip 封存中的項目檔名。</summary>
        <value>Zip 封存中的項目檔名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Compression.ZipArchiveEntry.Name%2A>屬性包含的部分<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>最後一個目錄分隔符號字元後面接著的屬性 (\\)，而且不包含子目錄階層。 例如，如果您在 zip 封存中建立兩個項目使用<xref:System.IO.Compression.ZipFileExtensions.CreateEntryFromFile%2A>方法，並提供`NewEntry.txt`做為第一個項目名稱和`AddedFolder\\NewEntry.txt`第二個項目，這兩個項目都會有`NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>屬性。 第一個項目也會有`NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>屬性，但是第二個項目會造成`AddedFolder\\NewEntry.txt`中<xref:System.IO.Compression.ZipArchiveEntry.FullName%2A>屬性。  
  
   
  
## Examples  
 下列範例會示範如何從 zip 封存中擷取項目，並評估項目的內容。 它會使用<xref:System.IO.Compression.ZipArchiveEntry.Name%2A>屬性來顯示項目的名稱和<xref:System.IO.Compression.ZipArchiveEntry.Length%2A>和<xref:System.IO.Compression.ZipArchiveEntry.CompressedLength%2A>計算多少檔案已壓縮的內容。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveEntry#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchiveentry/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public System.IO.Stream Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.Stream Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchiveEntry.Open" />
      <MemberSignature Language="VB.NET" Value="Public Function Open () As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::Stream ^ Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從 zip 封存中開啟項目。</summary>
        <returns>代表此項目內容的資料流。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用這個方法來存取資料流的 zip 封存中的項目。 擷取後的資料流，您可以讀取或寫入資料流。 當您撰寫資料流時，項目所做的修改會出現在 zip 封存。  
  
   
  
## Examples  
 下列範例示範如何建立新的項目，請開啟具有<xref:System.IO.Compression.ZipArchiveEntry.Open%2A>方法，並寫入資料流。  
  
 [!code-csharp[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/cs/program1.cs#1)]
 [!code-vb[System.IO.Compression.ZipArchiveMode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.compression.ziparchivemode/vb/program1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">項目目前已經開啟供寫入。  
  
 -或-  
  
 已從封存刪除項目。  
  
 -或-  
  
 以 <see cref="F:System.IO.Compression.ZipArchiveMode.Create" />模式開啟此項目的封存，且已寫入此項目。</exception>
        <exception cref="T:System.IO.InvalidDataException">此項目可能是從封存中遺失，或已損毀且無法讀取。  
  
 -或-  
  
 已使用不受支援的壓縮方法壓縮項目。</exception>
        <exception cref="T:System.ObjectDisposedException">這個項目的 Zip 封存已經過處置。</exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Compression.ZipArchiveEntry.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Compression</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>擷取 Zip 封存中項目的相對路徑。</summary>
        <returns>項目的相對路徑，其為儲存在<see cref="P:System.IO.Compression.ZipArchiveEntry.FullName" /> 屬性中的值。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>