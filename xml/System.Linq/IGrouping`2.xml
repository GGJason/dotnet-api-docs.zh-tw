<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IGrouping`2.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c47c1df4018603d8fc86527dc772198530aa223ae.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47c1df4018603d8fc86527dc772198530aa223ae</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The type of the key of the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph> 的索引鍵型別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The type of the values in the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph> 中之值的型別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Linq.IGrouping`2">
          <source>Represents a collection of objects that have a common key.</source>
          <target state="translated">代表具有共同索引鍵的物件集合。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>An <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> is an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> that additionally has a key.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>是<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>此外具有索引鍵。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The key represents the attribute that is common to each value in the <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</source>
          <target state="translated">索引鍵所代表屬性中每個值的通用<ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The values of an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> are accessed much as the elements of an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> are accessed.</source>
          <target state="translated">值<ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>會更存取的項目為<ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph>存取。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>For example, you can access the values by using a <ph id="ph1">`foreach`</ph> in Visual C# or <ph id="ph2">`For Each`</ph> in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> loop to iterate through the <ph id="ph4">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">例如，您可以存取使用的值<ph id="ph1">`foreach`</ph>Visual C# 或<ph id="ph2">`For Each`</ph>中<ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>迴圈逐一<ph id="ph4">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The Example section contains a code example that shows you how to access both the key and the values of an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">範例 &gt; 一節包含的程式碼範例示範如何存取索引鍵和值<ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> type is used by the <ph id="ph2">&lt;xref:System.Linq.Enumerable.GroupBy%2A&gt;</ph> standard query operator methods, which return a sequence of elements of type <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>類型正由<ph id="ph2">&lt;xref:System.Linq.Enumerable.GroupBy%2A&gt;</ph>標準查詢運算子方法，傳回型別的項目序列<ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The following example demonstrates how to work with an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>In this example, <ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> is called on the array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects returned by <ph id="ph3">&lt;xref:System.Type.GetMembers%2A&gt;</ph>.</source>
          <target state="translated">在此範例中，<ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph>的陣列上呼叫<ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph>所傳回的物件<ph id="ph3">&lt;xref:System.Type.GetMembers%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source><ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> groups the objects based on the value of their <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> 根據的值將物件分組其<ph id="ph2">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>Each unique value for <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph> in the array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects becomes a key for a new <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object, and the <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects that have that key form the <ph id="ph5">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object's sequence of values.</source>
          <target state="translated">針對每個唯一值<ph id="ph1">&lt;xref:System.Reflection.MemberInfo.MemberType%2A&gt;</ph>陣列中的<ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph>物件成為新的金鑰<ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件，而<ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph>物件具有該索引鍵的表單<ph id="ph5">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件的值序列。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>Finally, the <ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A&gt;</ph> method is called on the sequence of <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objects to obtain just the first <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object.</source>
          <target state="translated">最後，<ph id="ph1">&lt;xref:System.Linq.Enumerable.First%2A&gt;</ph>方法呼叫的序列上<ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件取得的第一個<ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>The example then outputs the key of the <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object and the <ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph> property of each value in the <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object's sequence of values.</source>
          <target state="translated">此範例，然後輸出的索引鍵<ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件和<ph id="ph2">&lt;xref:System.Reflection.MemberInfo.Name%2A&gt;</ph>中每個值的屬性<ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件的值序列。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Linq.IGrouping`2">
          <source>Notice that to access an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object's sequence of values, you simply use the <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> variable itself.</source>
          <target state="translated">請注意，存取<ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>值物件的序列，您只需要使用<ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph>變數本身。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.Linq.IGrouping`2.Key">
          <source>Gets the key of the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph> 的索引鍵。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The key of the <ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Linq.IGrouping`2" /&gt;</ph> 的索引鍵。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The key of an <ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph> represents the attribute that is common to each value in the <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph>.</source>
          <target state="translated">索引鍵<ph id="ph1">&lt;xref:System.Linq.IGrouping%602&gt;</ph>代表通用於中每個值的屬性<ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Linq.IGrouping%602.Key%2A&gt;</ph> property to label each <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object in a sequence of <ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objects.</source>
          <target state="translated">下列範例示範如何使用<ph id="ph1">&lt;xref:System.Linq.IGrouping%602.Key%2A&gt;</ph>屬性來標示每個<ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph>序列中的物件<ph id="ph3">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph> method is used to obtain a sequence of <ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29&gt;</ph>方法用來取得一系列<ph id="ph2">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Linq.IGrouping`2.Key">
          <source>The <ph id="ph1">`foreach`</ph> in Visual C# or <ph id="ph2">`For Each`</ph> in <ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> loop then iterates through each <ph id="ph4">&lt;xref:System.Linq.IGrouping%602&gt;</ph> object, outputting its key and the number of values it contains.</source>
          <target state="translated"><ph id="ph1">`foreach`</ph> Visual C# 或<ph id="ph2">`For Each`</ph>中<ph id="ph3">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>迴圈然後逐一查看每個<ph id="ph4">&lt;xref:System.Linq.IGrouping%602&gt;</ph>物件，輸出索引鍵和它所包含的值數目。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>