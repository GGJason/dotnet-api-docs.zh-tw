<Type Name="IGrouping&lt;TKey,TElement&gt;" FullName="System.Linq.IGrouping&lt;TKey,TElement&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="437dfcb6e83ef51b61ada590d84a404bfdbf3010" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51316978" /></Metadata><TypeSignature Language="C#" Value="public interface IGrouping&lt;out TKey,out TElement&gt; : System.Collections.Generic.IEnumerable&lt;out TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IGrouping`2&lt;+ TKey, + TElement&gt; implements class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Linq.IGrouping`2" />
  <TypeSignature Language="VB.NET" Value="Public Interface IGrouping(Of Out TKey, Out TElement)&#xA;Implements IEnumerable(Of Out TElement)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TKey, typename TElement&gt;&#xA;public interface class IGrouping : System::Collections::Generic::IEnumerable&lt;TElement&gt;" />
  <TypeSignature Language="F#" Value="type IGrouping&lt;'Key, 'Element&gt; = interface&#xA;    interface seq&lt;'Element&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Linq</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TElement">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TKey"><see cref="T:System.Linq.IGrouping`2" /> 的索引鍵型別。</typeparam>
    <typeparam name="TElement"><see cref="T:System.Linq.IGrouping`2" /> 中之值的型別。</typeparam>
    <summary>代表具有共同索引鍵的物件集合。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Linq.IGrouping%602>是<xref:System.Collections.Generic.IEnumerable%601>，另外有一個索引鍵。 索引鍵所代表屬性中每個值的通用<xref:System.Linq.IGrouping%602>。  
  
 值<xref:System.Linq.IGrouping%602>遠的項目存取<xref:System.Collections.Generic.IEnumerable%601>存取。 例如，您可以存取的值，使用`foreach`Visual C# 中或`For Each`Visual Basic 迴圈來逐一查看<xref:System.Linq.IGrouping%602>物件。 範例 > 一節包含的程式碼範例示範如何存取索引鍵和值<xref:System.Linq.IGrouping%602>物件。  
  
 <xref:System.Linq.IGrouping%602>型別由<xref:System.Linq.Enumerable.GroupBy%2A>標準查詢運算子方法，傳回類型的元素序列<xref:System.Linq.IGrouping%602>。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Linq.IGrouping%602>物件。  
  
 在此範例中，<xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>的陣列上呼叫<xref:System.Reflection.MemberInfo>所傳回的物件<xref:System.Type.GetMembers%2A>。 <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29> 群組的值為基礎的物件及其<xref:System.Reflection.MemberInfo.MemberType%2A>屬性。 針對每個唯一值<xref:System.Reflection.MemberInfo.MemberType%2A>陣列中的<xref:System.Reflection.MemberInfo>物件會變成新的索引鍵<xref:System.Linq.IGrouping%602>物件，而<xref:System.Reflection.MemberInfo>具有該索引鍵的表單物件<xref:System.Linq.IGrouping%602>值物件的序列。  
  
 最後，<xref:System.Linq.Enumerable.First%2A>方法呼叫的序列<xref:System.Linq.IGrouping%602>若要取得的第一個物件<xref:System.Linq.IGrouping%602>物件。  
  
 此範例，然後輸出的索引鍵<xref:System.Linq.IGrouping%602>物件和<xref:System.Reflection.MemberInfo.Name%2A>中每個值的屬性<xref:System.Linq.IGrouping%602>值物件的序列。 請注意，若要存取<xref:System.Linq.IGrouping%602>物件的值序列，您只需要使用<xref:System.Linq.IGrouping%602>變數本身。  
  
 [!code-csharp[System.Linq.IGrouping#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#1)]
 [!code-vb[System.Linq.IGrouping#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:System.Linq.IGrouping`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberSignature Language="F#" Value="member this.Key : 'Key" Usage="System.Linq.IGrouping&lt;'Key, 'Element&gt;.Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TKey Key { TKey get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Linq</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Linq.IGrouping`2" /> 的索引鍵。</summary>
        <value><see cref="T:System.Linq.IGrouping`2" /> 的索引鍵。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 索引鍵<xref:System.Linq.IGrouping%602>表示會在每個值的屬性<xref:System.Linq.IGrouping%602>。  
  
   
  
## Examples  
 下列範例示範如何使用<xref:System.Linq.IGrouping%602.Key%2A>屬性來標記每<xref:System.Linq.IGrouping%602>物件之序列中的<xref:System.Linq.IGrouping%602>物件。 <xref:System.Linq.Enumerable.GroupBy%60%602%28System.Collections.Generic.IEnumerable%7B%60%600%7D%2CSystem.Func%7B%60%600%2C%60%601%7D%29>方法來取得一連串<xref:System.Linq.IGrouping%602>物件。 `foreach` Visual C# 中或`For Each`Visual Basic 中迴圈逐一查看每個<xref:System.Linq.IGrouping%602>物件，輸出其金鑰和它所包含的值數目。  
  
 [!code-csharp[System.Linq.IGrouping#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Linq.IGrouping/CS/igrouping.cs#2)]
 [!code-vb[System.Linq.IGrouping#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Linq.IGrouping/VB/IGrouping.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>