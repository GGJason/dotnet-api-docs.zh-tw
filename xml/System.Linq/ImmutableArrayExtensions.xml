<Type Name="ImmutableArrayExtensions" FullName="System.Linq.ImmutableArrayExtensions">
  <TypeSignature Language="C#" Value="public static class ImmutableArrayExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ImmutableArrayExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Linq.ImmutableArrayExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ImmutableArrayExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImmutableArrayExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Immutable</AssemblyName>
    <AssemblyVersion>1.2.0.0</AssemblyVersion>
    <AssemblyVersion>1.2.1.0</AssemblyVersion>
    <AssemblyVersion>1.2.2.0</AssemblyVersion>
    <AssemblyVersion>1.2.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>  
  
 <span data-ttu-id="5037d-101">LINQ 擴充方法覆寫能針對 <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> 提供比標準 LINQ 方法更高的效率。</span><span class="sxs-lookup"><span data-stu-id="5037d-101">LINQ extension method overrides that offer greater efficiency for <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> than the standard LINQ methods</span></span>  
  
 <span data-ttu-id="5037d-102">**NuGet 套件**：<see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">關於固定集合及其安裝方法</see>)</span><span class="sxs-lookup"><span data-stu-id="5037d-102">**NuGet package**: <see href="https://www.nuget.org/packages/System.Collections.Immutable/">System.Collections.Immutable</see> (<see href="https://docs.microsoft.com/dotnet/api/system.collections.immutable?#Remarks">about immutable collections and how to install</see>)</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Aggregate&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Aggregate&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,T,T&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Aggregate&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`3&lt;!!T, !!T, !!T&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``0,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of T) (immutableArray As ImmutableArray(Of T), func As Func(Of T, T, T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, T, T&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="func" Type="System.Func&lt;T,T,T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-103">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-103">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-104">要套用函式的集合。</span><span class="sxs-lookup"><span data-stu-id="5037d-104">The collection to apply the function to.</span></span></param>
        <param name="func"><span data-ttu-id="5037d-105">要在每個元素上以累加方式叫用的函式。</span><span class="sxs-lookup"><span data-stu-id="5037d-105">A function to be invoked on each element, in a cumulative way.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-106">以累加的方式套用函式到序列的元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-106">Applies a function to a sequence of elements in a cumulative way.</span></span></summary>
        <returns><span data-ttu-id="5037d-107">累加函式套用到所有元素後的最終值。</span><span class="sxs-lookup"><span data-stu-id="5037d-107">The final value after the cumulative function has been applied to all elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5037d-108"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> 方法讓您更輕鬆地透過一連串的值執行計算。</span><span class="sxs-lookup"><span data-stu-id="5037d-108"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="5037d-109">這個方法的運作方式是呼叫`func`的資料來源中的每個項目一次。</span><span class="sxs-lookup"><span data-stu-id="5037d-109">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="5037d-110">每次`func`呼叫時，<xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A>會傳遞兩個元素的順序，而且彙總的值 （做為函式的第一個引數）。</span><span class="sxs-lookup"><span data-stu-id="5037d-110">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="5037d-111">值`seed`參數作為彙總的初始值。</span><span class="sxs-lookup"><span data-stu-id="5037d-111">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="5037d-112">結果`func`會取代先前的彙的總值。</span><span class="sxs-lookup"><span data-stu-id="5037d-112">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="5037d-113"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> 傳回的最終結果`func`。</span><span class="sxs-lookup"><span data-stu-id="5037d-113"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,T&gt;">
      <MemberSignature Language="C#" Value="public static TAccumulate Aggregate&lt;TAccumulate,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TAccumulate Aggregate&lt;TAccumulate, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``2(System.Collections.Immutable.ImmutableArray{``1},``0,System.Func{``0,``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate)) As TAccumulate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TAccumulate Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TAccumulate</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate"><span data-ttu-id="5037d-114">累積值的型別。</span><span class="sxs-lookup"><span data-stu-id="5037d-114">The type of the accumulated value.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="5037d-115">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-115">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-116">要套用函式的集合。</span><span class="sxs-lookup"><span data-stu-id="5037d-116">The collection to apply the function to.</span></span></param>
        <param name="seed"><span data-ttu-id="5037d-117">初始累積值。</span><span class="sxs-lookup"><span data-stu-id="5037d-117">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="5037d-118">要在每個元素上以累加方式叫用的函式。</span><span class="sxs-lookup"><span data-stu-id="5037d-118">A function to be invoked on each element, in a cumulative way.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-119">以累加的方式套用函式到序列的元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-119">Applies a function to a sequence of elements in a cumulative way.</span></span></summary>
        <returns><span data-ttu-id="5037d-120">最終累積值。</span><span class="sxs-lookup"><span data-stu-id="5037d-120">The final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5037d-121"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> 方法讓您更輕鬆地透過一連串的值執行計算。</span><span class="sxs-lookup"><span data-stu-id="5037d-121"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="5037d-122">這個方法的運作方式是呼叫`func`的資料來源中的每個項目一次。</span><span class="sxs-lookup"><span data-stu-id="5037d-122">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="5037d-123">每次`func`呼叫時，<xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A>會傳遞兩個元素的順序，而且彙總的值 （做為函式的第一個引數）。</span><span class="sxs-lookup"><span data-stu-id="5037d-123">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="5037d-124">值`seed`參數作為彙總的初始值。</span><span class="sxs-lookup"><span data-stu-id="5037d-124">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="5037d-125">結果`func`會取代先前的彙的總值。</span><span class="sxs-lookup"><span data-stu-id="5037d-125">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="5037d-126"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> 傳回的最終結果`func`。</span><span class="sxs-lookup"><span data-stu-id="5037d-126"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregate&lt;TAccumulate,TResult,T&gt;">
      <MemberSignature Language="C#" Value="public static TResult Aggregate&lt;TAccumulate,TResult,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate,T,TAccumulate&gt; func, Func&lt;TAccumulate,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TResult Aggregate&lt;TAccumulate, TResult, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, !!TAccumulate seed, class System.Func`3&lt;!!TAccumulate, !!T, !!TAccumulate&gt; func, class System.Func`2&lt;!!TAccumulate, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Aggregate``3(System.Collections.Immutable.ImmutableArray{``2},``0,System.Func{``0,``2,``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Aggregate(Of TAccumulate, TResult, T) (immutableArray As ImmutableArray(Of T), seed As TAccumulate, func As Func(Of TAccumulate, T, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TAccumulate, typename TResult, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static TResult Aggregate(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, TAccumulate seed, Func&lt;TAccumulate, T, TAccumulate&gt; ^ func, Func&lt;TAccumulate, TResult&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TAccumulate" />
        <TypeParameter Name="TResult" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="seed" Type="TAccumulate" />
        <Parameter Name="func" Type="System.Func&lt;TAccumulate,T,TAccumulate&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TAccumulate,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TAccumulate"><span data-ttu-id="5037d-127">累積值的型別。</span><span class="sxs-lookup"><span data-stu-id="5037d-127">The type of the accumulated value.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="5037d-128">結果選取器傳回之結果的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-128">The type of result returned by the result selector.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="5037d-129">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-129">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-130">要套用函式的集合。</span><span class="sxs-lookup"><span data-stu-id="5037d-130">The collection to apply the function to.</span></span></param>
        <param name="seed"><span data-ttu-id="5037d-131">初始累積值。</span><span class="sxs-lookup"><span data-stu-id="5037d-131">The initial accumulator value.</span></span></param>
        <param name="func"><span data-ttu-id="5037d-132">要在每個元素上以累加方式叫用的函式。</span><span class="sxs-lookup"><span data-stu-id="5037d-132">A function to be invoked on each element, in a cumulative way.</span></span></param>
        <param name="resultSelector">To be added.</param>
        <summary>  
  
 <span data-ttu-id="5037d-133">以累加的方式套用函式到序列的元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-133">Applies a function to a sequence of elements in a cumulative way.</span></span></summary>
        <returns><span data-ttu-id="5037d-134">最終累積值。</span><span class="sxs-lookup"><span data-stu-id="5037d-134">The final accumulator value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5037d-135"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> 方法讓您更輕鬆地透過一連串的值執行計算。</span><span class="sxs-lookup"><span data-stu-id="5037d-135"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> method makes it simple to perform a calculation over a sequence of values.</span></span> <span data-ttu-id="5037d-136">這個方法的運作方式是呼叫`func`的資料來源中的每個項目一次。</span><span class="sxs-lookup"><span data-stu-id="5037d-136">This method works by calling `func` one time for each element in source.</span></span> <span data-ttu-id="5037d-137">每次`func`呼叫時，<xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A>會傳遞兩個元素的順序，而且彙總的值 （做為函式的第一個引數）。</span><span class="sxs-lookup"><span data-stu-id="5037d-137">Each time `func` is called, <xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> passes both the element from the sequence and an aggregated value (as the first argument to func).</span></span> <span data-ttu-id="5037d-138">值`seed`參數作為彙總的初始值。</span><span class="sxs-lookup"><span data-stu-id="5037d-138">The value of the `seed` parameter is used as the initial aggregate value.</span></span> <span data-ttu-id="5037d-139">結果`func`會取代先前的彙的總值。</span><span class="sxs-lookup"><span data-stu-id="5037d-139">The result of `func` replaces the previous aggregated value.</span></span> <span data-ttu-id="5037d-140"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> 傳回的最終結果`func`。</span><span class="sxs-lookup"><span data-stu-id="5037d-140"><xref:System.Linq.ImmutableArrayExtensions.Aggregate%2A> returns the final result of `func`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="All&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool All&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool All&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.All``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function All(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool All(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-141">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-141">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-142">要檢查相符項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-142">The array to check for matches.</span></span></param>
        <param name="predicate"><span data-ttu-id="5037d-143">述詞。</span><span class="sxs-lookup"><span data-stu-id="5037d-143">The predicate.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-144">取得值，該值指示此陣列中的所有元素是否符合指定條件。</span><span class="sxs-lookup"><span data-stu-id="5037d-144">Gets a value indicating whether all elements in this array match a given condition.</span></span></summary>
        <returns>
          <span data-ttu-id="5037d-145">如果來源序列中的所有元素均通過所指定述詞中的測試，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5037d-145"><see langword="true" /> if every element of the source sequence passes the test in the specified predicate; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-146">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-146">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-147">要檢查元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-147">The array to check for elements.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-148">取得值，該值指示此陣列中是否包含任何元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-148">Gets a value indicating whether the array contains any elements.</span></span></summary>
        <returns>
          <span data-ttu-id="5037d-149">如果陣列包含元素則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5037d-149"><see langword="true" /> if the array contains an elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-150">陣列中項目的型別。</span><span class="sxs-lookup"><span data-stu-id="5037d-150">The type of elements in the array.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="5037d-151">要檢查相符項目的產生器。</span><span class="sxs-lookup"><span data-stu-id="5037d-151">The builder to check for matches.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-152">傳回值，該值指示此集合是否包含任何元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-152">Returns a value indicating whether this collection contains any elements.</span></span></summary>
        <returns>
          <span data-ttu-id="5037d-153">如果陣列產生器包含任何元素則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5037d-153"><see langword="true" /> if the array builder contains any elements; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Any&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Any&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Any&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Any``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Any(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool Any(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-154">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-154">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-155">要檢查元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-155">The array to check for elements.</span></span></param>
        <param name="predicate"><span data-ttu-id="5037d-156">定義符合某元素條件的委派。</span><span class="sxs-lookup"><span data-stu-id="5037d-156">The delegate that defines the condition to match to an element.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-157">取得值，該值指示此陣列中是否包含任何符合指定條件的元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-157">Gets a value indicating whether the array contains any elements that match a specified condition.</span></span></summary>
        <returns>
          <span data-ttu-id="5037d-158">如果元素符合指定條件則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5037d-158"><see langword="true" /> if an element matches the specified condition; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAt&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAt&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAt&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAt``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAt(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAt(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-159">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-159">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-160">要在其中尋找元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-160">The array to find an element in.</span></span></param>
        <param name="index"><span data-ttu-id="5037d-161">要擷取之元素的索引。</span><span class="sxs-lookup"><span data-stu-id="5037d-161">The index for the element to retrieve.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-162">傳回位於陣列中指定索引處的元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-162">Returns the element at a specified index in the array.</span></span></summary>
        <returns><span data-ttu-id="5037d-163">在指定之索引處的項目。</span><span class="sxs-lookup"><span data-stu-id="5037d-163">The item at the specified index.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementAtOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T ElementAtOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T ElementAtOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ElementAtOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ElementAtOrDefault(Of T) (immutableArray As ImmutableArray(Of T), index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T ElementAtOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-164">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-164">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-165">要在其中尋找元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-165">The array to find an element in.</span></span></param>
        <param name="index"><span data-ttu-id="5037d-166">要擷取之元素的索引。</span><span class="sxs-lookup"><span data-stu-id="5037d-166">The index for the element to retrieve.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-167">傳回位於序列中指定索引處的元素；如果索引超出範圍，則傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-167">Returns the element at a specified index in a sequence or a default value if the index is out of range.</span></span></summary>
        <returns><span data-ttu-id="5037d-168">位於指定索引處的項目，如果找不到索引則為預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-168">The item at the specified index, or the default value if the index is not found.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-169">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-169">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-170">要從其中取得項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-170">The array to get an item from.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-171">傳回陣列中第一個元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-171">Returns the first element in an array.</span></span></summary>
        <returns><span data-ttu-id="5037d-172">陣列中的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="5037d-172">The first item in the array.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5037d-173">如果陣列是空的。</span><span class="sxs-lookup"><span data-stu-id="5037d-173">If the array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-174">陣列中項目的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-174">The type of items in the array.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="5037d-175">要從其中擷取項目的產生器。</span><span class="sxs-lookup"><span data-stu-id="5037d-175">The builder to retrieve an item from.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-176">傳回集合中的第一個元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-176">Returns the first element in the collection.</span></span></summary>
        <returns><span data-ttu-id="5037d-177">清單中的第一個項目。</span><span class="sxs-lookup"><span data-stu-id="5037d-177">The first item in the list.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5037d-178">如果陣列是空的。</span><span class="sxs-lookup"><span data-stu-id="5037d-178">If the array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="First&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T First&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T First&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.First``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function First(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T First(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-179">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-179">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-180">要從其中取得項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-180">The array to get an item from.</span></span></param>
        <param name="predicate"><span data-ttu-id="5037d-181">定義要搜尋項目之條件的委派。</span><span class="sxs-lookup"><span data-stu-id="5037d-181">The delegate that defines the conditions of the element to search for.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-182">傳回序列中符合指定條件的第一個元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-182">Returns the first element in a sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="5037d-183">清單中的第一個元素 (如果符合 <paramref name="predicate" /> 指定的條件)。</span><span class="sxs-lookup"><span data-stu-id="5037d-183">The first item in the list if it meets the condition specified by <paramref name="predicate" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5037d-184">如果陣列是空的。</span><span class="sxs-lookup"><span data-stu-id="5037d-184">If the array is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-185">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-185">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-186">要從其中擷取項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-186">The array to retrieve items from.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-187">傳回序列的第一個元素；如果序列中沒有包含任何元素，則傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-187">Returns the first element of a sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns><span data-ttu-id="5037d-188">如果有找到則為清單中的第一個項目，否則為項目類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-188">The first item in the list, if found; otherwise the default value for the item type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-189">產生器中項目的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-189">The type of item in the builder.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="5037d-190">要從其中擷取元素的產生器。</span><span class="sxs-lookup"><span data-stu-id="5037d-190">The builder to retrieve an element from.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-191">傳回集合中第一個元素，如果集合是空的則傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-191">Returns the first element in the collection, or the default value if the collection is empty.</span></span></summary>
        <returns><span data-ttu-id="5037d-192">如果有找到則為清單中的第一個項目，否則為項目類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-192">The first item in the list, if found; otherwise the default value for the item type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FirstOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FirstOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FirstOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.FirstOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T FirstOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">  
  
 <span data-ttu-id="5037d-193">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-193">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-194">要自其中擷取元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-194">The array to retrieve elments from.</span></span></param>
        <param name="predicate"><span data-ttu-id="5037d-195">定義要搜尋項目之條件的委派。</span><span class="sxs-lookup"><span data-stu-id="5037d-195">The delegate that defines the conditions of the element to search for.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-196">傳回序列中符合條件的第一個元素；如果找不到這類元素，則傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-196">Returns the first element of the sequence that satisfies a condition or a default value if no such element is found.</span></span></summary>
        <returns><span data-ttu-id="5037d-197">如果有找到則為清單中的第一個項目，否則為項目類型的預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-197">The first item in the list, if found; otherwise the default value for the item type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-198">陣列所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-198">The type of element contained by the array.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-199">要從其中擷取項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-199">The array to retrieve items from.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-200">傳回陣列的最後一個元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-200">Returns the last element of the array.</span></span></summary>
        <returns><span data-ttu-id="5037d-201">陣列中的最後一個元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-201">The last element in the array.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5037d-202">如果集合是空的，則擲回。</span><span class="sxs-lookup"><span data-stu-id="5037d-202">Thrown if the collection is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-203">產生器中項目的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-203">The type of item in the builder.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="5037d-204">要自其中擷取元素的產生器。</span><span class="sxs-lookup"><span data-stu-id="5037d-204">The builder to retrieve elements from.</span></span></param>
        <summary><span data-ttu-id="5037d-205">傳回集合中的最後一個元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-205">Returns the last element in the collection.</span></span></summary>
        <returns><span data-ttu-id="5037d-206">產生器中的最後一個元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-206">The last element in the builder.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5037d-207">如果集合是空的，則擲回。</span><span class="sxs-lookup"><span data-stu-id="5037d-207">Thrown if the collection is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Last&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Last&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Last&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Last``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Last(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Last(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-208">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-208">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-209">要自其中擷取元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-209">The array to retrieve elements from.</span></span></param>
        <param name="predicate"><span data-ttu-id="5037d-210">定義要擷取元素之條件的委派。</span><span class="sxs-lookup"><span data-stu-id="5037d-210">The delegate that defines the conditions of the element to retrieve.</span></span></param>
        <summary><span data-ttu-id="5037d-211">傳回序列中符合指定之條件的最後一個元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-211">Returns the last element of a sequence that satisfies a specified condition.</span></span></summary>
        <returns><span data-ttu-id="5037d-212">陣列中符合 <paramref name="predicate" /> 條件的最後一個元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-212">The last element of the array that satisfies the <paramref name="predicate" /> condition.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5037d-213">如果集合是空的，則擲回。</span><span class="sxs-lookup"><span data-stu-id="5037d-213">Thrown if the collection is empty.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-214">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-214">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-215">要從其中擷取項目的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-215">The array to retrieve items from.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-216">傳回序列的最後一個元素；如果序列中沒有包含任何元素，則傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-216">Returns the last element of a sequence, or a default value if the sequence contains no elements.</span></span></summary>
        <returns><span data-ttu-id="5037d-217">序列的最後一個元素；如果序列中沒有包含任何元素，則傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-217">The last element of a sequence, or a default value if the sequence contains no elements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt;.Builder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(class System.Collections.Immutable.ImmutableArray`1/Builder&lt;!!T&gt; builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray`1.Builder{``0})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt;::Builder ^ builder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="builder" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;+Builder" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-218">產生器中項目的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-218">The type of item in the builder.</span></span></typeparam>
        <param name="builder"><span data-ttu-id="5037d-219">要從其中擷取元素的產生器。</span><span class="sxs-lookup"><span data-stu-id="5037d-219">The builder to retrieve an element from.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-220">傳回集合中最後一個元素，如果集合是空的則傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-220">Returns the last element in the collection, or the default value if the collection is empty.</span></span></summary>
        <returns><span data-ttu-id="5037d-221">序列的最後一個元素；如果序列中沒有包含任何元素，則傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-221">The last element of a sequence, or a default value if the sequence contains no elements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T LastOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T LastOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.LastOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function LastOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T LastOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-222">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-222">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-223">要自其中擷取元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-223">The array to retrieve an element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="5037d-224">定義要搜尋項目之條件的委派。</span><span class="sxs-lookup"><span data-stu-id="5037d-224">The delegate that defines the conditions of the element to search for.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-225">傳回序列中符合條件的最後一個元素；如果找不到這類元素，則傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-225">Returns the last element of a sequence that satisfies a condition or a default value if no such element is found.</span></span></summary>
        <returns><span data-ttu-id="5037d-226">序列的最後一個元素；如果序列中沒有包含任何元素，則傳回預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-226">The last element of a sequence, or a default value if the sequence contains no elements.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select&lt;T,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; Select&lt;T,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TResult&gt; selector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; Select&lt;T, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TResult&gt; selector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Select``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Select(Of T, TResult) (immutableArray As ImmutableArray(Of T), selector As Func(Of T, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ Select(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TResult&gt; ^ selector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="selector" Type="System.Func&lt;T,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-227">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-227">The type of element contained by the collection.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="5037d-228">結果元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-228">The type of the result element.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-229">要從其中選取項目的不可變陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-229">The immutable array to select items from.</span></span></param>
        <param name="selector"><span data-ttu-id="5037d-230">要套用至每個項目的轉換函式。</span><span class="sxs-lookup"><span data-stu-id="5037d-230">A transform function to apply to each element.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-231">將序列的每個元素規劃成一個新的表單。</span><span class="sxs-lookup"><span data-stu-id="5037d-231">Projects each element of a sequence into a new form.</span></span></summary>
        <returns><span data-ttu-id="5037d-232"><see cref="T:System.Collections.Generic.IEnumerable`1" />，其元素是對每個來源元素叫用轉換函式所產生的結果。</span><span class="sxs-lookup"><span data-stu-id="5037d-232">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result of invoking the transform function on each element of source.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMany&lt;TSource,TCollection,TResult&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;TResult&gt; SelectMany&lt;TSource,TCollection,TResult&gt; (this System.Collections.Immutable.ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt; collectionSelector, Func&lt;TSource,TCollection,TResult&gt; resultSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!TResult&gt; SelectMany&lt;TSource, TCollection, TResult&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TSource&gt; immutableArray, class System.Func`2&lt;!!TSource, class System.Collections.Generic.IEnumerable`1&lt;!!TCollection&gt;&gt; collectionSelector, class System.Func`3&lt;!!TSource, !!TCollection, !!TResult&gt; resultSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SelectMany``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SelectMany(Of TSource, TCollection, TResult) (immutableArray As ImmutableArray(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As IEnumerable(Of TResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TSource, typename TCollection, typename TResult&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;TResult&gt; ^ SelectMany(System::Collections::Immutable::ImmutableArray&lt;TSource&gt; immutableArray, Func&lt;TSource, System::Collections::Generic::IEnumerable&lt;TCollection&gt; ^&gt; ^ collectionSelector, Func&lt;TSource, TCollection, TResult&gt; ^ resultSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TResult&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TSource" />
        <TypeParameter Name="TCollection" />
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TSource&gt;" RefType="this" />
        <Parameter Name="collectionSelector" Type="System.Func&lt;TSource,System.Collections.Generic.IEnumerable&lt;TCollection&gt;&gt;" />
        <Parameter Name="resultSelector" Type="System.Func&lt;TSource,TCollection,TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TSource"><span data-ttu-id="5037d-233">項目的型別<c>immutableArray</c>。</span><span class="sxs-lookup"><span data-stu-id="5037d-233">The type of the elements of <c>immutableArray</c>.</span></span></typeparam>
        <typeparam name="TCollection"><span data-ttu-id="5037d-234">所收集的中繼項目類型<c>collectionSelector</c>。</span><span class="sxs-lookup"><span data-stu-id="5037d-234">The type of the intermediate elements collected by <c>collectionSelector</c>.</span></span></typeparam>
        <typeparam name="TResult"><span data-ttu-id="5037d-235">產生的序列之項目型別。</span><span class="sxs-lookup"><span data-stu-id="5037d-235">The type of the elements of the resulting sequence.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-236">不可變的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-236">The immutable array.</span></span></param>
        <param name="collectionSelector"><span data-ttu-id="5037d-237">要套用到輸入序列中各個項目的轉換函式。</span><span class="sxs-lookup"><span data-stu-id="5037d-237">A transform function to apply to each element of the input sequence.</span></span></param>
        <param name="resultSelector"><span data-ttu-id="5037d-238">要套用到中繼序列中各個項目的轉換函式。</span><span class="sxs-lookup"><span data-stu-id="5037d-238">A transform function to apply to each element of the intermediate sequence.</span></span></param>
        <summary><span data-ttu-id="5037d-239">將序列的每個項目投影為 <see cref="T:System.Collections.Generic.IEnumerable`1" />、將產生的序列簡化成單一序列，並對其中的每個項目叫用結果選取器函式。</span><span class="sxs-lookup"><span data-stu-id="5037d-239">Projects each element of a sequence to an <see cref="T:System.Collections.Generic.IEnumerable`1" />,             flattens the resulting sequences into one sequence, and invokes a result             selector function on each element therein.</span></span></summary>
        <returns><span data-ttu-id="5037d-240"><see cref="T:System.Collections.Generic.IEnumerable`1" />，其項目是執行下列動作後所產生的結果：對 <paramref name="immutableArray" /> 的各個項目叫用一對多轉換函式 <paramref name="collectionSelector" />，然後將每個序列項目及其對應的來源項目對應到結果項目。</span><span class="sxs-lookup"><span data-stu-id="5037d-240">An <see cref="T:System.Collections.Generic.IEnumerable`1" /> whose elements are the result             of invoking the one-to-many transform function <paramref name="collectionSelector" /> on each             element of <paramref name="immutableArray" /> and then mapping each of those sequence elements and their             corresponding source element to a result element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Generic.IEnumerable&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, class System.Collections.Generic.IEnumerable`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As IEnumerable(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived"><span data-ttu-id="5037d-241">比較陣列中元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-241">The type of element in the compared array.</span></span></typeparam>
        <typeparam name="TBase"><span data-ttu-id="5037d-242">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-242">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-243">要用於比較的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-243">The array to use for comparison.</span></span></param>
        <param name="items"><span data-ttu-id="5037d-244">要用於比較的項目。</span><span class="sxs-lookup"><span data-stu-id="5037d-244">The items to use for comparison.</span></span></param>
        <param name="comparer"><span data-ttu-id="5037d-245">用來檢查相等的比較子。</span><span class="sxs-lookup"><span data-stu-id="5037d-245">The comparer to use to check for equality.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-246">根據相等比較子，判斷兩個序列是否相等。</span><span class="sxs-lookup"><span data-stu-id="5037d-246">Determines whether two sequences are equal according to an equality comparer.</span></span></summary>
        <returns>
          <span data-ttu-id="5037d-247"><see langword="true" /> 表示序列相等，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5037d-247"><see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, System.Collections.Generic.IEqualityComparer&lt;TBase&gt; comparer = null) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Collections.Generic.IEqualityComparer`1&lt;!!TBase&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Collections.Generic.IEqualityComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), Optional comparer As IEqualityComparer(Of TBase) = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TBase&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived"><span data-ttu-id="5037d-248">比較陣列中元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-248">The type of element in the compared array.</span></span></typeparam>
        <typeparam name="TBase"><span data-ttu-id="5037d-249">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-249">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-250">要用於比較的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-250">The array to use for comparison.</span></span></param>
        <param name="items"><span data-ttu-id="5037d-251">要用於比較的項目。</span><span class="sxs-lookup"><span data-stu-id="5037d-251">The items to use for comparison.</span></span></param>
        <param name="comparer"><span data-ttu-id="5037d-252">用來檢查相等的比較子。</span><span class="sxs-lookup"><span data-stu-id="5037d-252">The comparer to use to check for equality.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-253">根據相等比較子，判斷兩個序列是否相等。</span><span class="sxs-lookup"><span data-stu-id="5037d-253">Determines whether two sequences are equal according to an equality comparer.</span></span></summary>
        <returns>
          <span data-ttu-id="5037d-254"><see langword="true" /> 表示序列相等，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5037d-254"><see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequenceEqual&lt;TDerived,TBase&gt;">
      <MemberSignature Language="C#" Value="public static bool SequenceEqual&lt;TDerived,TBase&gt; (this System.Collections.Immutable.ImmutableArray&lt;TBase&gt; immutableArray, System.Collections.Immutable.ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase,TBase,bool&gt; predicate) where TDerived : TBase;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SequenceEqual&lt;(!!TBase) TDerived, TBase&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TBase&gt; immutableArray, valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!TDerived&gt; items, class System.Func`3&lt;!!TBase, !!TBase, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SequenceEqual``2(System.Collections.Immutable.ImmutableArray{``1},System.Collections.Immutable.ImmutableArray{``0},System.Func{``1,``1,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SequenceEqual(Of TDerived As TBase, TBase As TBase) (immutableArray As ImmutableArray(Of TBase), items As ImmutableArray(Of TDerived), predicate As Func(Of TBase, TBase, Boolean)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TDerived, typename TBase&gt;&#xA; where TDerived : TBase[System::Runtime::CompilerServices::Extension]&#xA; static bool SequenceEqual(System::Collections::Immutable::ImmutableArray&lt;TBase&gt; immutableArray, System::Collections::Immutable::ImmutableArray&lt;TDerived&gt; items, Func&lt;TBase, TBase, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TDerived">
          <Constraints>
            <BaseTypeName>TBase</BaseTypeName>
          </Constraints>
        </TypeParameter>
        <TypeParameter Name="TBase" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;TBase&gt;" RefType="this" />
        <Parameter Name="items" Type="System.Collections.Immutable.ImmutableArray&lt;TDerived&gt;" />
        <Parameter Name="predicate" Type="System.Func&lt;TBase,TBase,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TDerived"><span data-ttu-id="5037d-255">比較陣列中元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-255">The type of element in the compared array.</span></span></typeparam>
        <typeparam name="TBase"><span data-ttu-id="5037d-256">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-256">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-257">要用於比較的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-257">The array to use for comparison.</span></span></param>
        <param name="items"><span data-ttu-id="5037d-258">要用於比較的項目。</span><span class="sxs-lookup"><span data-stu-id="5037d-258">The items to use for comparison.</span></span></param>
        <param name="predicate"><span data-ttu-id="5037d-259">用來檢查相等的比較子。</span><span class="sxs-lookup"><span data-stu-id="5037d-259">The comparer to use to check for equality.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-260">根據相等比較子，判斷兩個序列是否相等。</span><span class="sxs-lookup"><span data-stu-id="5037d-260">Determines whether two sequences are equal according to an equality comparer.</span></span></summary>
        <returns>
          <span data-ttu-id="5037d-261"><see langword="true" /> 表示序列相等，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="5037d-261"><see langword="true" /> to indicate the sequences are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-262">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-262">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-263">要從其中移除元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-263">The array to retrieve the element from.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-264">傳回序列的唯一一個元素，如果序列中不是正好一個元素，則擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="5037d-264">Returns the only element of a sequence, and throws an exception if there is not exactly one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="5037d-265">序列中的元素</span><span class="sxs-lookup"><span data-stu-id="5037d-265">The element in the sequence.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Single&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Single&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Single&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Single``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Single(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Single(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-266">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-266">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray">To be added.</param>
        <param name="predicate">To be added.</param>
        <summary>  
  
 <span data-ttu-id="5037d-267">傳回序列中符合指定之條件的唯一一個元素，如果有一個以上這類元素，則擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="5037d-267">Returns the only element of a sequence that satisfies a specified condition, and throws an exception if more than one such element exists.</span></span></summary>
        <returns><span data-ttu-id="5037d-268">傳回 <see cref="T:System.Boolean" />。</span><span class="sxs-lookup"><span data-stu-id="5037d-268">Returns <see cref="T:System.Boolean" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-269">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-269">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-270">陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-270">The array.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-271">傳回陣列的唯一一個元素，如果序列是空白，則為預設值，如果序列中有一個以上的元素，這個方法就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="5037d-271">Returns the only element of the array, or a default value if the sequence is empty; this method throws an exception if there is more than one element in the sequence.</span></span></summary>
        <returns><span data-ttu-id="5037d-272">陣列中的元素，如果陣列是空的則為預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-272">The element in the array, or the default value if the array is empty.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5037d-273"><paramref name="source" /> 包含多個元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-273"><paramref name="source" /> contains more than one element.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SingleOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T SingleOrDefault&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T SingleOrDefault&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.SingleOrDefault``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SingleOrDefault(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T SingleOrDefault(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-274">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-274">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-275">要從其中取得元素的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-275">The array to get the element from.</span></span></param>
        <param name="predicate"><span data-ttu-id="5037d-276">元素必須滿足的條件。</span><span class="sxs-lookup"><span data-stu-id="5037d-276">The condition the element must satisfy.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-277">傳回序列中符合指定之條件的唯一一個元素，如果沒有這類元素，則為預設值，如果有一個以上的元素符合條件，這個方法就會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="5037d-277">Returns the only element of a sequence that satisfies a specified condition or a default value if no such element exists; this method throws an exception if more than one element satisfies the condition.</span></span></summary>
        <returns><span data-ttu-id="5037d-278">符合指定之條件的元素，否則為預設值。</span><span class="sxs-lookup"><span data-stu-id="5037d-278">The element if it satisfies the specified condition; otherwise the default element.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="5037d-279">超過一個項目符合 <paramref name="predicate" /> 中的條件。</span><span class="sxs-lookup"><span data-stu-id="5037d-279">More than one element satisfies the condition in <paramref name="predicate" />.</span></span> </exception>
      </Docs>
    </Member>
    <Member MemberName="ToArray&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] ToArray&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] ToArray&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToArray``1(System.Collections.Immutable.ImmutableArray{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToArray(Of T) (immutableArray As ImmutableArray(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static cli::array &lt;T&gt; ^ ToArray(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-280">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-280">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray">To be added.</param>
        <summary>  
  
 <span data-ttu-id="5037d-281">將此陣列的內容複製到可變動的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-281">Copies the contents of this array to a mutable array.</span></span></summary>
        <returns><span data-ttu-id="5037d-282">新的已具現化陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-282">The newly instantiated array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="5037d-283">索引鍵的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-283">The type of the key.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="5037d-284">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-284">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-285">要用來建立字典的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-285">The array to create a dictionary from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="5037d-286">索引鍵選取器。</span><span class="sxs-lookup"><span data-stu-id="5037d-286">The key selector.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-287">根據此陣列的內容建立字典。</span><span class="sxs-lookup"><span data-stu-id="5037d-287">Creates a dictionary based on the contents of this array.</span></span></summary>
        <returns><span data-ttu-id="5037d-288">新的已初始化字典。</span><span class="sxs-lookup"><span data-stu-id="5037d-288">The newly initialized dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,T&gt; ToDictionary&lt;TKey,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!T&gt; ToDictionary&lt;TKey, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``2(System.Collections.Immutable.ImmutableArray{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, T&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="5037d-289">索引鍵的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-289">The type of the key.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="5037d-290">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-290">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-291">要用來建立字典的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-291">The array to create a dictionary from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="5037d-292">索引鍵選取器。</span><span class="sxs-lookup"><span data-stu-id="5037d-292">The key selector.</span></span></param>
        <param name="comparer"><span data-ttu-id="5037d-293">要初始化字典的比較子。</span><span class="sxs-lookup"><span data-stu-id="5037d-293">The comparer to initialize the dictionary with.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-294">根據此陣列的內容建立字典。</span><span class="sxs-lookup"><span data-stu-id="5037d-294">Creates a dictionary based on the contents of this array.</span></span></summary>
        <returns><span data-ttu-id="5037d-295">新的已初始化字典。</span><span class="sxs-lookup"><span data-stu-id="5037d-295">The newly initialized dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="5037d-296">索引鍵的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-296">The type of the key.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="5037d-297">項目的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-297">The type of the element.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="5037d-298">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-298">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-299">要用來建立字典的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-299">The array to create a dictionary from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="5037d-300">索引鍵選取器。</span><span class="sxs-lookup"><span data-stu-id="5037d-300">The key selector.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="5037d-301">元素選取器。</span><span class="sxs-lookup"><span data-stu-id="5037d-301">The element selector.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-302">根據此陣列的內容建立字典。</span><span class="sxs-lookup"><span data-stu-id="5037d-302">Creates a dictionary based on the contents of this array.</span></span></summary>
        <returns><span data-ttu-id="5037d-303">新的已初始化字典。</span><span class="sxs-lookup"><span data-stu-id="5037d-303">The newly initialized dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToDictionary&lt;TKey,TElement,T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.Dictionary&lt;TKey,TElement&gt; ToDictionary&lt;TKey,TElement,T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,TKey&gt; keySelector, Func&lt;T,TElement&gt; elementSelector, System.Collections.Generic.IEqualityComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.Dictionary`2&lt;!!TKey, !!TElement&gt; ToDictionary&lt;TKey, TElement, T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, !!TKey&gt; keySelector, class System.Func`2&lt;!!T, !!TElement&gt; elementSelector, class System.Collections.Generic.IEqualityComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.ToDictionary``3(System.Collections.Immutable.ImmutableArray{``2},System.Func{``2,``0},System.Func{``2,``1},System.Collections.Generic.IEqualityComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function ToDictionary(Of TKey, TElement, T) (immutableArray As ImmutableArray(Of T), keySelector As Func(Of T, TKey), elementSelector As Func(Of T, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TElement, typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::Dictionary&lt;TKey, TElement&gt; ^ ToDictionary(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, TKey&gt; ^ keySelector, Func&lt;T, TElement&gt; ^ elementSelector, System::Collections::Generic::IEqualityComparer&lt;TKey&gt; ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="keySelector" Type="System.Func&lt;T,TKey&gt;" />
        <Parameter Name="elementSelector" Type="System.Func&lt;T,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey"><span data-ttu-id="5037d-304">索引鍵的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-304">The type of the key.</span></span></typeparam>
        <typeparam name="TElement"><span data-ttu-id="5037d-305">項目的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-305">The type of the element.</span></span></typeparam>
        <typeparam name="T"><span data-ttu-id="5037d-306">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-306">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-307">要用來建立字典的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-307">The array to create a dictionary from.</span></span></param>
        <param name="keySelector"><span data-ttu-id="5037d-308">索引鍵選取器。</span><span class="sxs-lookup"><span data-stu-id="5037d-308">The key selector.</span></span></param>
        <param name="elementSelector"><span data-ttu-id="5037d-309">元素選取器。</span><span class="sxs-lookup"><span data-stu-id="5037d-309">The element selector.</span></span></param>
        <param name="comparer"><span data-ttu-id="5037d-310">要初始化字典的比較子。</span><span class="sxs-lookup"><span data-stu-id="5037d-310">The comparer to initialize the dictionary with.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-311">根據此陣列的內容建立字典。</span><span class="sxs-lookup"><span data-stu-id="5037d-311">Creates a dictionary based on the contents of this array.</span></span></summary>
        <returns><span data-ttu-id="5037d-312">新的已初始化字典。</span><span class="sxs-lookup"><span data-stu-id="5037d-312">The newly initialized dictionary.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Where&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; Where&lt;T&gt; (this System.Collections.Immutable.ImmutableArray&lt;T&gt; immutableArray, Func&lt;T,bool&gt; predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; Where&lt;T&gt;(valuetype System.Collections.Immutable.ImmutableArray`1&lt;!!T&gt; immutableArray, class System.Func`2&lt;!!T, bool&gt; predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Linq.ImmutableArrayExtensions.Where``1(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Where(Of T) (immutableArray As ImmutableArray(Of T), predicate As Func(Of T, Boolean)) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ Where(System::Collections::Immutable::ImmutableArray&lt;T&gt; immutableArray, Func&lt;T, bool&gt; ^ predicate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Immutable</AssemblyName>
        <AssemblyVersion>1.2.0.0</AssemblyVersion>
        <AssemblyVersion>1.2.1.0</AssemblyVersion>
        <AssemblyVersion>1.2.2.0</AssemblyVersion>
        <AssemblyVersion>1.2.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="immutableArray" Type="System.Collections.Immutable.ImmutableArray&lt;T&gt;" RefType="this" />
        <Parameter Name="predicate" Type="System.Func&lt;T,System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="5037d-313">集合所包含之元素的類型。</span><span class="sxs-lookup"><span data-stu-id="5037d-313">The type of element contained by the collection.</span></span></typeparam>
        <param name="immutableArray"><span data-ttu-id="5037d-314">要篩選的陣列。</span><span class="sxs-lookup"><span data-stu-id="5037d-314">The array to filter.</span></span></param>
        <param name="predicate"><span data-ttu-id="5037d-315">要用來篩選陣列內容的條件。</span><span class="sxs-lookup"><span data-stu-id="5037d-315">The condition to use for filtering the array content.</span></span></param>
        <summary>  
  
 <span data-ttu-id="5037d-316">根據述詞來篩選值序列。</span><span class="sxs-lookup"><span data-stu-id="5037d-316">Filters a sequence of values based on a predicate.</span></span></summary>
        <returns><span data-ttu-id="5037d-317">傳回 <see cref="T:System.Collections.Generic.IEnumerable`1" />，其中包含符合條件的元素。</span><span class="sxs-lookup"><span data-stu-id="5037d-317">Returns <see cref="T:System.Collections.Generic.IEnumerable`1" /> that contains elements that meet the condition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>