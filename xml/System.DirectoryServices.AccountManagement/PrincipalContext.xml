<Type Name="PrincipalContext" FullName="System.DirectoryServices.AccountManagement.PrincipalContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b3af87a468840932a32226f29f1fc8b09dcb4c0c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36741320" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PrincipalContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrincipalContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.PrincipalContext" />
  <TypeSignature Language="VB.NET" Value="Public Class PrincipalContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalContext : IDisposable" />
  <TypeSignature Language="F#" Value="type PrincipalContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>封裝用以執行所有作業的伺服器或網域、這些作業的基底容器，以及作業執行時使用的認證。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 針對搜尋作業主體的內容定義搜尋依據，並插入作業的內容會定義要插入之物件的容器。  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.DirectoryServices.AccountManagement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.AccountManagement.PrincipalContext>建構函式會執行驗證的參數和伺服器，但不是請勿嘗試驗證認證。  
  
 建立主體的內容物件時未指定容器，它可能用來表示多個不同的容器。 可能做為查詢作業的基底使用一個容器，而其他容器可保留新建立的主體物件。 比方說，當使用者或群組插入 domian 內容型別時，帳戶管理 API 會使用預設的已知使用者容器中，"CN = Users，DC = Fabrikam，DC = com"。 當存放區中插入電腦時，API 會使用預設 「 CN = Computers，DC = Fabrikam，DC = com"容器。 請注意，網域系統管理員可以變更預設容器名稱。 主體的物件建構函式只能指定一個主體的內容，因為其他內容會公開為預設行為，應用程式但未指定容器中建立網域內容時。 由於應用程式目錄並沒有已知的容器，應用程式必須在建構函式中指定容器或<xref:System.ArgumentException>就會擲回。 由於 SAM 並沒有容器，<xref:System.ArgumentException>應用程式嘗試建構函式中指定的容器，則會擲回。  
  
 每個版本會採用使用者名稱做為參數的建構函式中`userName`字串可以是各種不同的格式。  三個支援的 NameFormats 為 Nt4Name、 UserPrincipalName 和 SamAccountName。  如需名稱格式的詳細資訊，請參閱 ADS_NAME_TYPE_ENUM 文件[這裡](http://go.microsoft.com/fwlink/?LinkID=99942)。  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext contextType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉型別值，指定主體內容的存放區類型。</param>
        <summary>使用指定的內容型別，初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">使用應用程式目錄內容時必須指定名稱或容器。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 參數不包含有效的 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉值。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉型別值，指定主體內容的存放區類型。</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的網域或伺服器之名稱、<see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的電腦名稱，或是裝載 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 執行個體的伺服器和通訊埠之名稱。  如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的名稱為 null，則這個內容是使用者主體網域的網域控制項，執行緒就是在這個網域之下執行。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的名稱為 null，這就是本機電腦的名稱。 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 內容型別的這個參數不能是 null。</param>
        <summary>使用指定的內容型別和名稱，初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">當 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 指定於 <paramref name="contextType" /> 參數中時，必須指定名稱。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 參數不包含有效的 <see cref="F:System.DirectoryServices.AccountManagement.ContextType" /> 列舉值。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉型別值，指定主體內容的存放區類型。</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的網域或伺服器之名稱、<see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的電腦名稱，或是裝載 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 執行個體的伺服器和通訊埠之名稱。  如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的名稱為 null，則這個內容是使用者主體網域的網域控制項，執行緒就是在這個網域之下執行。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的名稱為 null，這就是本機電腦的名稱。 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 內容型別的這個參數不能是 null。</param>
        <param name="container">存放區上的容器，當做內容的根項目使用。 所有查詢都在此根目錄下執行，而所有插入都在此容器中執行。  對於 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 和 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 內容型別，這個參數是容器物件的辨別名稱。  對於 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別，這個參數必須設定為 null。</param>
        <summary>使用指定的內容型別、名稱和容器，初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException>後續目錄連線到伺服器，如果容器為指定的作業呼叫中可能會擲回<xref:System.DirectoryServices.AccountManagement.ContextType.Domain>主體的內容不是有效的容器。 容器會定義物件，其結構描述類別主體的類別，為使用者、 群組或電腦，其 possibleInferiors 屬性中的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">當 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別指定於 <paramref name="contextType" /> 參數中時，無法指定容器。  當 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 指定於 <paramref name="contextType" /> 參數中時，必須指定名稱或容器。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 參數不包含有效的 <see cref="F:System.DirectoryServices.AccountManagement.ContextType" /> 列舉值。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, System.DirectoryServices.AccountManagement.ContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, valuetype System.DirectoryServices.AccountManagement.ContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::DirectoryServices::AccountManagement::ContextOptions options);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * System.DirectoryServices.AccountManagement.ContextOptions -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉型別值，指定主體內容的存放區類型。</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的網域或伺服器之名稱、<see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的電腦名稱，或是裝載 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 執行個體的伺服器和通訊埠之名稱。  如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的名稱為 null，則這個內容是使用者主體網域的網域控制項，執行緒就是在這個網域之下執行。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的名稱為 null，這就是本機電腦的名稱。 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 內容型別的這個參數不能是 null。</param>
        <param name="container">存放區上的容器，當做內容的根項目使用。 所有查詢都在此根目錄下執行，而所有插入都在此容器中執行。  對於 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 和 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 內容型別，這個參數是容器物件的辨別名稱。  對於 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別，這個參數必須設定為 null。</param>
        <param name="options">一個或多個 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 列舉值的組合，指定用以繫結至伺服器的選項。 如果這個參數為 null，預設選項為 ContextOptions.Negotiate | ContextOptions.Signing | ContextOptions.Sealing。</param>
        <summary>使用指定的內容型別、名稱、容器和內容選項，初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException>後續目錄連線到伺服器，如果容器為指定的作業呼叫中可能會擲回<xref:System.DirectoryServices.AccountManagement.ContextType.Domain>主體的內容不是有效的容器。 容器會定義物件，其結構描述類別主體的類別，為使用者、 群組或電腦，其 possibleInferiors 屬性中的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">當 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別指定於 <paramref name="contextType" /> 參數中時，無法指定容器。  當 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 指定於 <paramref name="contextType" /> 參數中時，必須指定名稱或容器。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 參數不包含有效的 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉值。  <paramref name="options" /> 參數不包含有效 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 列舉值的組合。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉型別值，指定主體內容的存放區類型。</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的網域或伺服器之名稱、<see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的電腦名稱，或是裝載 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 執行個體的伺服器和通訊埠之名稱。  如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的名稱為 null，則這個內容是使用者主體網域的網域控制項，執行緒就是在這個網域之下執行。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的名稱為 null，這就是本機電腦的名稱。 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 內容型別的這個參數不能是 null。</param>
        <param name="userName">用來連接至存放區的使用者名稱。 如果 <c>username</c> 和 <c>password</c> 參數都是 Null，就會使用目前處理序的認證。 否則，<c>username</c> 和 <c>password</c> 一定為非 null，並會使用它們指定的認證以連接存放區。</param>
        <param name="password">用來連接遠端存放區的密碼。 如果 <c>username</c> 和 <c>password</c> 參數都是 Null，就會使用目前處理序的認證。 否則，<c>username</c> 和 <c>password</c> 一定為非 null，並會使用它們指定的認證以連接存放區。</param>
        <summary>使用指定的內容型別、名稱、使用者名稱和密碼，初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 和 <paramref name="password" /> 參數必須是 null 或內含值。  當 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 指定於 <paramref name="contextType" /> 參數中時，必須指定名稱。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 參數不包含有效的 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉值。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉型別值，指定主體內容的存放區類型。</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的網域或伺服器之名稱、<see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的電腦名稱，或是裝載 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 執行個體的伺服器和通訊埠之名稱。  如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的名稱為 null，則這個內容是使用者主體網域的網域控制項，執行緒就是在這個網域之下執行。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的名稱為 null，這就是本機電腦的名稱。 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 內容型別的這個參數不能是 null。</param>
        <param name="container">存放區上的容器，當做內容的根項目使用。 所有查詢都在此根目錄下執行，而所有插入都在此容器中執行。  對於 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 和 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 內容型別，這個參數是容器物件的辨別名稱。  對於 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別，這個參數必須設定為 null。</param>
        <param name="userName">用來連接至存放區的使用者名稱。 如果 <c>username</c> 和 <c>password</c> 參數都是 null，就會使用目前主體的預設認證。  否則，<c>username</c> 和 <c>password</c> 一定為非 null，並會使用它們指定的認證以連接存放區。</param>
        <param name="password">用來連接遠端存放區的密碼。 如果 <c>username</c> 和 <c>password</c> 參數都是 null，就會使用目前主體的預設認證。  否則，<c>username</c> 和 <c>password</c> 一定為非 null，並會使用它們指定的認證以連接存放區。</param>
        <summary>使用指定的內容型別、名稱、容器、使用者名稱和密碼，初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException>後續目錄連線到伺服器，如果容器為指定的作業呼叫中可能會擲回<xref:System.DirectoryServices.AccountManagement.ContextType.Domain>主體的內容不是有效的容器。 容器會定義物件，其結構描述類別主體的類別，為使用者、 群組或電腦，其 possibleInferiors 屬性中的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 和 <paramref name="password" /> 參數必須是 null 或內含值。  當 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別指定於 <paramref name="contextType" /> 參數中時，無法指定容器。  當 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 指定於 <paramref name="name" /> 參數中時，必須指定 <paramref name="container" /> 或 <paramref name="contextType" />。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 參數不包含有效的 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉值。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, System.DirectoryServices.AccountManagement.ContextOptions options, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, valuetype System.DirectoryServices.AccountManagement.ContextOptions options, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::DirectoryServices::AccountManagement::ContextOptions options, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * System.DirectoryServices.AccountManagement.ContextOptions * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container, options, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">
          <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉型別值，指定主體內容的存放區類型。</param>
        <param name="name">
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的網域或伺服器之名稱、<see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的電腦名稱，或是裝載 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 執行個體的伺服器和通訊埠之名稱。  如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別的名稱為 null，則這個內容是使用者主體網域的網域控制項，執行緒就是在這個網域之下執行。 如果 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的名稱為 null，這就是本機電腦的名稱。 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 內容型別的這個參數不能是 null。</param>
        <param name="container">存放區上的容器，當做內容的根項目使用。 所有查詢都在此根目錄下執行，而所有插入都在此容器中執行。  對於 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 和 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 內容型別，這個參數是容器物件的辨別名稱。  對於 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別，這個參數必須設定為 null。</param>
        <param name="options">一個或多個 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 列舉值的組合，供選項用來繫結至伺服器。 如果這個參數為 null，預設選項為 ContextOptions.Negotiate | ContextOptions.Signing | ContextOptions.Sealing。</param>
        <param name="userName">用來連接至存放區的使用者名稱。 如果 <c>username</c> 和 <c>password</c> 參數都是 null，就會使用目前主體的預設認證。 否則，<c>username</c> 和 <c>password</c> 一定為非 null，並會使用它們指定的認證以連接存放區。</param>
        <param name="password">用來連接遠端存放區的密碼。 如果 <c>username</c> 和 <c>password</c> 參數都是 null，就會使用目前主體的預設認證。  否則，<c>username</c> 和 <c>password</c> 一定為非 null，並會使用它們指定的認證以連接存放區。</param>
        <summary>使用指定的內容型別、名稱、容器、內容選項、使用者名稱和密碼，初始化 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.InvalidOperationException>後續目錄連線到伺服器，如果容器為指定的作業呼叫中可能會擲回<xref:System.DirectoryServices.AccountManagement.ContextType.Domain>主體的內容不是有效的容器。 容器會定義物件，其結構描述類別主體的類別，為使用者、 群組或電腦，其 possibleInferiors 屬性中的。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> 和 <paramref name="password" /> 參數必須是 null 或內含值。  當 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別指定於 <paramref name="contextType" /> 參數中時，無法指定容器。  當 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 指定於 <paramref name="contextType" /> 參數中時，必須指定名稱或容器。</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <paramref name="contextType" /> 參數不包含有效的 <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉值。  <paramref name="options" /> 參數不包含有效 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 列舉值的組合。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="ConnectedServer">
      <MemberSignature Language="C#" Value="public string ConnectedServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectedServer" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.ConnectedServer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectedServer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectedServer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectedServer : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.ConnectedServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得主體內容所連接之伺服器的名稱。</summary>
        <value>主體內容所連接之伺服器的名稱，如果主體內容未連接至伺服器則為 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當內容類型是<xref:System.DirectoryServices.AccountManagement.ContextType.Domain>，這個屬性會傳回網域控制站或應用程式目錄執行個體的名稱。 當內容類型是<xref:System.DirectoryServices.AccountManagement.ContextType.Machine>，這個屬性會傳回電腦名稱。  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public string Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Container" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Container { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得建構函式中之容器參數指定的值。</summary>
        <value>存放區中要做為內容根項目的容器，如果未指定容器則為 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所有查詢都在此根目錄下執行，而所有插入都在此容器中執行。 如<xref:System.DirectoryServices.AccountManagement.ContextType.Domain>和<xref:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory>內容型別，這個屬性是容器物件的辨別的名稱。 如<xref:System.DirectoryServices.AccountManagement.ContextType.Machine>內容型別，這個屬性必須是 null。  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.ContextType ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.AccountManagement.ContextType ContextType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextType As ContextType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::ContextType ContextType { System::DirectoryServices::AccountManagement::ContextType get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextType : System.DirectoryServices.AccountManagement.ContextType" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.ContextType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.ContextType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得內容型別，這個內容型別指定主體內容的存放區型別。</summary>
        <value>
          <see cref="T:System.DirectoryServices.AccountManagement.ContextType" /> 列舉值，指定要連接之目標的型別。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性用於應用程式不會直接建立主體的內容，並指定內容類型。 例如，當應用程式列舉群組成員資格，此屬性可用來判斷主體所屬的存放區的類型。  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="principalContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>處置 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> 物件目前的執行個體。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得建構函式中以 <paramref name="name" /> 參數指定的值。</summary>
        <value>
          <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> 內容型別之網域或伺服器的名稱、<see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 內容型別的主機名稱、裝載 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> 執行個體之伺服器的名稱，或 null (如果未設定名稱)。</value>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.ContextOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.AccountManagement.ContextOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ContextOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::ContextOptions Options { System::DirectoryServices::AccountManagement::ContextOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.DirectoryServices.AccountManagement.ContextOptions" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.ContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得建構函式的 <paramref name="contextOptions" /> 參數中指定的選項。</summary>
        <value>
          <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 列舉值，指定要連接之目標的型別。</value>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得建構函式中之使用者名稱參數指定的值。</summary>
        <value>用來連接存放區的使用者名稱，如果沒有使用者名稱則為 null。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性可以傳遞任何一種不同格式的使用者名稱設定。  可接受的類型格式的完整清單，請參閱 ADS_NAME_TYPE_ENUM 文件[這裡](http://go.microsoft.com/fwlink/?LinkID=99942)。  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateCredentials">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>建立與伺服器的連接，並在連接成功時驗證指定的認證。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
`userName`中兩個多載，這個方法的引數必須採用*username* (比方說， *mcampbell*) 而非*網域 \ 使用者名稱*或*username@domain*.   
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateCredentials">
      <MemberSignature Language="C#" Value="public bool ValidateCredentials (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateCredentials(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateCredentials (userName As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateCredentials(System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.ValidateCredentials : string * string -&gt; bool" Usage="principalContext.ValidateCredentials (userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">在伺服器上驗證的使用者名稱。 如需 <paramref name="userName" /> 格式的詳細資訊，請參閱＜備註＞一節。</param>
        <param name="password">在伺服器上驗證的密碼。</param>
        <summary>建立與伺服器的連線，並且傳回指出指定的使用者名稱和密碼是否有效的布林值。</summary>
        <returns>如果認證有效則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials%2A>方法繫結至建構函式中指定的伺服器。 如果`username`和`password`引數是`null`，建構函式中指定的認證會驗證。 如果建構函式中沒有指定任何認證和`username`和`password`參數`null`，這個方法會驗證目前主體的預設認證。  

`userName`引數必須採用格式*userName* (例如， *mcampbell*) 而非*domain\username*或* username@domain*.

 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="ValidateCredentials">
      <MemberSignature Language="C#" Value="public bool ValidateCredentials (string userName, string password, System.DirectoryServices.AccountManagement.ContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateCredentials(string userName, string password, valuetype System.DirectoryServices.AccountManagement.ContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials(System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateCredentials (userName As String, password As String, options As ContextOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateCredentials(System::String ^ userName, System::String ^ password, System::DirectoryServices::AccountManagement::ContextOptions options);" />
      <MemberSignature Language="F#" Value="member this.ValidateCredentials : string * string * System.DirectoryServices.AccountManagement.ContextOptions -&gt; bool" Usage="principalContext.ValidateCredentials (userName, password, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
      </Parameters>
      <Docs>
        <param name="userName">在伺服器上驗證的使用者名稱。 如需 <paramref name="userName" /> 格式的詳細資訊，請參閱＜備註＞一節。</param>
        <param name="password">在伺服器上驗證的密碼。</param>
        <param name="options">一個或多個 <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" /> 列舉值的組合，供選項用來繫結至伺服器。 這個參數只能指定具有或不具有 SSL 的簡單繫結，或者交涉繫結。</param>
        <summary>建立與伺服器的連線，並且傳回指出指定的使用者名稱和密碼是否有效的布林值。 這個方法會執行使用者名稱和密碼的快速認證驗證。</summary>
        <returns>如果認證有效則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials%2A>方法繫結至建構函式中指定的伺服器。 如果`username`和`password`參數都是 null、 建構函式中指定的認證會驗證。 如果建構函式中沒有指定任何認證和`username`和`password`參數都是 null，這個方法會驗證目前主體的預設認證。  

`userName`引數必須採用格式*username* (例如， *mcampbell*) 而非*domain\username*或* username@domain*. 
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">當內容類型為 <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> 時，<paramref name="options" /> 參數必須指定 <see cref="F:System.DirectoryServices.AccountManagement.ContextOptions.Negotiate" />。</exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
  </Members>
</Type>