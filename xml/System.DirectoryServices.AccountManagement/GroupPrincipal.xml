<Type Name="GroupPrincipal" FullName="System.DirectoryServices.AccountManagement.GroupPrincipal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9199792237c4efced39a7ba99dff2e2cc1a18e24" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupPrincipal extends System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupPrincipal&#xA;Inherits Principal" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupPrincipal : System::DirectoryServices::AccountManagement::Principal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.Principal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ae1da-101">封裝群組帳戶。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ae1da-101">Encapsulates group accounts.</span>
      </span>
      <span data-ttu-id="ae1da-102">群組帳戶可以是主體物件的任意集合，或針對管理目的建立的帳戶。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ae1da-102">Group accounts can be arbitrary collections of principal objects or accounts created for administrative purposes.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <altmember cref="N:System.DirectoryServices.AccountManagement" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ae1da-103">初始化 <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-103">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class.</span>
          </span>
        </summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ae1da-104">針對執行的作業指定伺服器或網域的 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-104">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae1da-105">使用指定的內容來初始化 <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-105">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class by using the specified context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1da-106">在建立時，不會保存的群組主體帳戶。</span><span class="sxs-lookup"><span data-stu-id="ae1da-106">The group principal account is not persisted when it is created.</span></span> <span data-ttu-id="ae1da-107">若要保存的帳戶，請呼叫<xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ae1da-107">To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext, samAccountName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ samAccountName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ae1da-108">針對執行的作業指定伺服器或網域的 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-108">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <param name="samAccountName">
          <span data-ttu-id="ae1da-109">這個主體的 SAM 帳戶名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-109">The SAM account name for this principal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae1da-110">初始化 <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> 類別的新執行個體，並將其指派給指定的內容和 SAM 帳戶名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-110">Initializes a new instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> class and assigns it to the specified context and SAM account name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1da-111">在建立時，不會保存的群組主體帳戶。</span><span class="sxs-lookup"><span data-stu-id="ae1da-111">The group principal account is not persisted when it is created.</span></span> <span data-ttu-id="ae1da-112">若要保存的帳戶，請呼叫<xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="ae1da-112">To persist the account, call the <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae1da-113">處置 <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> 物件目前的執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-113">Disposes the current instance of the <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByIdentity">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ae1da-114">傳回符合指定的識別值之群組主體物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-114">Returns a group principal object that matches the specified identity value.</span>
          </span>
        </summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByIdentity (context As PrincipalContext, identityValue As String) As GroupPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ identityValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ae1da-115">針對執行的作業指定伺服器或網域的 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-115">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <param name="identityValue">
          <span data-ttu-id="ae1da-116">群組主體的識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-116">The identity of the group principal.</span>
          </span>
          <span data-ttu-id="ae1da-117">這個參數可以是 <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> 列舉中包含的任何格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-117">This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae1da-118">傳回符合指定的識別值之群組主體物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-118">Returns a group principal object that matches the specified identity value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae1da-119">符合指定的身分識別值和類型的 <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> 物件，如果找不到相符項目則為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-119">A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> object that matches the specified identity value and type, or null if no matches are found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">
          <span data-ttu-id="ae1da-120">找到多個符合目前群組物件的群組主體物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-120">Multiple group principal objects matching the current group object were found.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::DirectoryServices::AccountManagement::IdentityType identityType, System::String ^ identityValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="ae1da-121">針對執行的作業指定伺服器或網域的 <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-121">The <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" /> that specifies the server or domain against which operations are performed.</span>
          </span>
        </param>
        <param name="identityType">
          <span data-ttu-id="ae1da-122">指定 <c>identityValue</c> 參數格式的 <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> 列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-122">A <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value that specifies the format of the <c>identityValue</c> parameter.</span>
          </span>
        </param>
        <param name="identityValue">
          <span data-ttu-id="ae1da-123">群組主體的識別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-123">The identity of the group principal.</span>
          </span>
          <span data-ttu-id="ae1da-124">這個參數可以是 <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> 列舉中包含的任何格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-124">This parameter can be any format that is contained in the <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae1da-125">傳回符合指定之識別型別和值的群組主體物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-125">Returns a group principal object that matches the specified identity type, and value.</span>
          </span>
          <span data-ttu-id="ae1da-126">這一版的 <see cref="Overlaod:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> 方法會判斷身分識別值的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-126">This version of the <see cref="Overlaod:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" /> method determines the format of the identity value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae1da-127">符合指定之識別值和型別的 <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />，如果找不到符合項目則為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-127">A <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" /> that matches the specified identity value and type, or null if no matches are found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MultipleMatchesException">
          <span data-ttu-id="ae1da-128">找到多個符合目前群組物件的群組主體物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-128">Multiple group principal objects matching the current group object were found.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponenetModel.InvalidEnumerationOperatorException">
          <span data-ttu-id="ae1da-129">身分識別值不是有效的 <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> 列舉值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-129">The identity value is not a valid <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" /> enumeration value.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ae1da-130">傳回包含在群組中的主體物件之集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-130">Returns a collection of the principal objects that is contained in the group.</span>
          </span>
        </summary>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ae1da-131">傳回包含在群組中的主體物件之集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-131">Returns a collection of the principal objects that is contained in the group.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae1da-132">
            <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> 物件，包含是群組成員的主體物件，如果群組沒有成員則為空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-132">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1da-133">這個方法不會搜尋目前的群組以遞迴方式。</span><span class="sxs-lookup"><span data-stu-id="ae1da-133">This method does not search the current group recursively.</span></span> <span data-ttu-id="ae1da-134">因此，可能會傳回群組物件主體的物件集合中。</span><span class="sxs-lookup"><span data-stu-id="ae1da-134">Therefore, group objects may be returned in the principal object collection.</span></span>  
  
 <span data-ttu-id="ae1da-135">會傳回成員，而不顧及內容。</span><span class="sxs-lookup"><span data-stu-id="ae1da-135">Members are returned without respect to the context.</span></span> <span data-ttu-id="ae1da-136">比方說，如果 AD DS 以內容為主在"CN = SpecialUsers，DC = Fabrikam，DC = com"，PrincipalFindResult 集將包含位於之下的群組成員"CN = NormalUsers，DC = Fabrikam，DC = com"此外，即使其落在範圍內不屬於要搜尋的內容。</span><span class="sxs-lookup"><span data-stu-id="ae1da-136">For example, if an AD DS context based at "CN=SpecialUsers,DC=Fabrikam,DC=com", the PrincipalFindResult set will include group members that are located under "CN=NormalUsers,DC=Fabrikam,DC=com" also, even though they fall under a scope that is not part of the context that is searched.</span></span> <span data-ttu-id="ae1da-137">傳回的主體集合也可以包含位於不同的存放區，於群組的成員。</span><span class="sxs-lookup"><span data-stu-id="ae1da-137">The returned principal collection may also contain members that are located in a different store than the group.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (recursive As Boolean) As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers(bool recursive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">
          <span data-ttu-id="ae1da-138">指定是否會遞迴地搜尋群組的布林值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-138">A Boolean value that specifies whether the group is searched recursively.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ae1da-139">傳回包含在群組中的主體物件之集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-139">Returns a collection of the principal objects that is contained in the group.</span>
          </span>
          <span data-ttu-id="ae1da-140">當遞迴旗標設為 true 時，這個方法會遞迴地搜尋目前群組，並且傳回所有巢狀群組成員。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-140">When the recursive flag is set to true, this method searches the current group recursively and returns all nested group members.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ae1da-141">
            <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> 物件，包含是群組成員的主體物件，如果群組沒有成員則為空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-141">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult'1" /> object that contains the principal objects that are members of the group, or an empty collection if the group has no members.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1da-142">傳回的主體集合不包含群組物件，遞迴旗標設為時`true`; 只會傳回分葉節點。</span><span class="sxs-lookup"><span data-stu-id="ae1da-142">The returned principal collection does not contain group objects when the recursive flag is set to `true`; only leaf nodes are returned.</span></span> <span data-ttu-id="ae1da-143">例如，遞迴地搜尋所在的電腦物件和群組的物件 （使用只有使用者主體） 的群組時，傳回的集合會包含電腦物件和巢狀群組中的使用者主體物件。</span><span class="sxs-lookup"><span data-stu-id="ae1da-143">For example, when a group that contains a computer object and a group object (with only user principals) is searched recursively, the returned collection contains the computer object and the user principal objects in the nested group.</span></span> <span data-ttu-id="ae1da-144">群組物件不是分葉，因為它是空的即使它不會傳回中遞迴搜尋。</span><span class="sxs-lookup"><span data-stu-id="ae1da-144">Since the group object is not a leaf, even when it is empty, it is not returned in the recursive search.</span></span>  <span data-ttu-id="ae1da-145">當遞迴旗標設為`false`，傳回的集合可能會包含群組物件。</span><span class="sxs-lookup"><span data-stu-id="ae1da-145">When the recursive flag is set to `false`, the returned collection may contain group objects.</span></span>  
  
 <span data-ttu-id="ae1da-146">會傳回成員，而不顧及內容。</span><span class="sxs-lookup"><span data-stu-id="ae1da-146">Members are returned without respect to the context.</span></span> <span data-ttu-id="ae1da-147">比方說，如果 AD DS 以內容為主在"CN = SpecialUsers，DC = Fabrikam，DC = com"，PrincipalFindResult 集將包含位於之下的群組成員"CN = NormalUsers，DC = Fabrikam，DC = com"此外，即使其落在範圍內不屬於要搜尋的內容。</span><span class="sxs-lookup"><span data-stu-id="ae1da-147">For example, if an AD DS context based at "CN=SpecialUsers,DC=Fabrikam,DC=com", the PrincipalFindResult set will include group members that are located under "CN=NormalUsers,DC=Fabrikam,DC=com" also, even though they fall under a scope that is not part of the context that is searched.</span></span> <span data-ttu-id="ae1da-148">傳回的主體集合也可以包含位於不同的存放區，於群組的成員。</span><span class="sxs-lookup"><span data-stu-id="ae1da-148">The returned principal collection may also contain members that are located in a different store than the group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae1da-149">下列程式碼 LDAP 網域"fabrikam.com"username 設定為 「 系統管理員 」 和密碼設定為"SecretPwd123"會以連接至<xref:System.DirectoryServices.AccountManagement.PrincipalContext>建構函式。</span><span class="sxs-lookup"><span data-stu-id="ae1da-149">The following code connects to the LDAP domain "fabrikam.com" with the username set to "administrator" and the password set to "SecretPwd123" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.</span></span>  
  
 <span data-ttu-id="ae1da-150">若要尋找具有名稱"Domain Admins"的群組中指定容器下執行搜尋時<xref:System.DirectoryServices.AccountManagement.PrincipalContext>建構函式"DC = fabrikam，DC = com。 」</span><span class="sxs-lookup"><span data-stu-id="ae1da-150">A search is performed to find the group that has the name "Domain Admins" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor "DC=fabrikam,DC=com."</span></span> <span data-ttu-id="ae1da-151">如果找到該群組，就是包含遞迴成員，此群組的成員的所有原則都會都列舉</span><span class="sxs-lookup"><span data-stu-id="ae1da-151">If the group is found, all the principals that are members of this group, which includes recursive members, are then enumerated</span></span>  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      
                                            "fabrikam.com",   
                                            "DC=fabrikam,DC=com",   
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    foreach (Principal p in grp.GetMembers(true))  
    {  
         Console.WriteLine(p.Name);  
    }  
    grp.Dispose();  
}  
  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="GroupScope">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupScope As Nullable(Of GroupScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; GroupScope { Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; get(); void set(Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae1da-152">取得或設定可為 Null 之 <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> 列舉型別，這個列舉型別指定此群組主體的範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-152">Gets or sets a Nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> enumeration that specifies the scope for this group principal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae1da-153">可為 Null 之 <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> 列舉值，這個列舉值指定此群組的範圍，如果未設定範圍則為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-153">A nullable <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" /> enumeration value that specifies the scope of this group or null if no scope has been set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae1da-154">應用程式可能無法將這個屬性 (Property) 設定為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-154">The application may not set this property to null.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityGroup">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSecurityGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSecurityGroup" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecurityGroup As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsSecurityGroup { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae1da-155">取得或設定可為 Null 的布林值，這個布林值指出群組是否已啟用安全性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-155">Gets or sets a Nullable Boolean value that indicates whether the group is security-enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae1da-156">如果群組已啟用安全性則為 <see langword="true" />，如果群組未受到保存則為 null，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-156">
              <see langword="true" /> if the group is security enabled, or null if the group has not been persisted; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1da-157">當這個屬性會傳回 false 時，群組是暫時不-已啟用安全性。</span><span class="sxs-lookup"><span data-stu-id="ae1da-157">When this property returns false, the group is temporarily not security-enabled.</span></span> <span data-ttu-id="ae1da-158">當<xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup>屬性則為 true，稍後再重設、 群組會有相同的屬性，因為之前將它設定為 false。</span><span class="sxs-lookup"><span data-stu-id="ae1da-158">When the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup> property is reset to true later, the group will have the same properties as before it was set to false.</span></span>  
  
 <span data-ttu-id="ae1da-159">如果主體未保存存放區中，這個屬性會傳回 null。</span><span class="sxs-lookup"><span data-stu-id="ae1da-159">If the principal has not been persisted in the store, this property returns null.</span></span> <span data-ttu-id="ae1da-160">保存主體之後，預設已啟用安全性的設定取決於存放區。</span><span class="sxs-lookup"><span data-stu-id="ae1da-160">After the principal is persisted, the default security-enabled setting depends on the store.</span></span> <span data-ttu-id="ae1da-161">AD DS 和 AD LDS 存放區時停用新的主體會將它們保存，而 SAM 時將它們保存可讓新的主體。</span><span class="sxs-lookup"><span data-stu-id="ae1da-161">The AD DS and AD LDS stores disable new principals when they are persisted, whereas SAM enables new principals when they are persisted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ae1da-162">應用程式可能無法將這個屬性 (Property) 設定為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-162">The application may not set this property to null.</span>
          </span>
        </exception>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.PrincipalCollection Members" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As PrincipalCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::PrincipalCollection ^ Members { System::DirectoryServices::AccountManagement::PrincipalCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ae1da-163">取得代表群組成員之主體物件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-163">Gets a collection of principal objects that represent the members of the group.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ae1da-164">
            <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> 物件，包含代表群組成員的主體物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ae1da-164">A <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" /> object that contains the principal objects that represent the members of the group.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae1da-165">AD DS 群組<xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A>屬性包含使用者主體，因為其 primaryId 屬性群組的成員。</span><span class="sxs-lookup"><span data-stu-id="ae1da-165">For AD DS groups, the <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A> property includes user principals that are members of the group because of their primaryId Attribute.</span></span> <span data-ttu-id="ae1da-166">當群組包含這些型別的成員時，便會套用下列限制：</span><span class="sxs-lookup"><span data-stu-id="ae1da-166">When the group contains these types of members, the following restrictions apply:</span></span>  
  
-   <span data-ttu-id="ae1da-167"><xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*>方法無法用來移除成員，因為其 primaryId 屬性群組的一部分。</span><span class="sxs-lookup"><span data-stu-id="ae1da-167">The <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*> method cannot be used to remove members that are part of the group because of their primaryId Attribute.</span></span>  
  
-   <span data-ttu-id="ae1da-168"><xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*>方法無法用來清除各項，因為其 primaryId 屬性屬於群組的成員。</span><span class="sxs-lookup"><span data-stu-id="ae1da-168">The <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*> method cannot be used to clear members that are part of the group because of their primaryId Attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae1da-169">下列程式碼 LDAP 網域"fabrikam.com"username 設定為 「 系統管理員 」 和密碼設定為"SecretPwd123"會以連接至<xref:System.DirectoryServices.AccountManagement.PrincipalContext>建構函式。</span><span class="sxs-lookup"><span data-stu-id="ae1da-169">The following code connects to the LDAP domain "fabrikam.com" with the username set to "administrator" and the password set to "SecretPwd123" in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor.</span></span>  
  
 <span data-ttu-id="ae1da-170">若要尋找具有名稱"Domain Admins"的群組中指定容器下執行搜尋時<xref:System.DirectoryServices.AccountManagement.PrincipalContext>建構函式，"DC = fabrikam，DC = com。 」</span><span class="sxs-lookup"><span data-stu-id="ae1da-170">A search is performed to find the group that has name "Domain Admins" under the container specified in the <xref:System.DirectoryServices.AccountManagement.PrincipalContext> constructor, "DC=fabrikam,DC=com."</span></span> <span data-ttu-id="ae1da-171">如果找到的群組，具有名稱"John Smith"的使用者會從群組移除，並具有名稱"Jim Daly"的使用者加入群組</span><span class="sxs-lookup"><span data-stu-id="ae1da-171">If the group is found, the user who has name "John Smith" is removed from the group and the user who has name "Jim Daly" is added to the group</span></span>  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       
                                            "fabrikam.com",                                                                               
                                            "DC=fabrikam,DC=com",                                                                 
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    grp.Members.Remove(ctx, IdentityType.Name, "John Smith");            
    grp.Members.Add(ctx, IdentityType.Name, "Jim Daly");  
    grp.Save();  
    grp.Dispose();  
}  
ctx.Dispose();  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.DirectoryServices.AccountManagement" />
      </Docs>
    </Member>
  </Members>
</Type>