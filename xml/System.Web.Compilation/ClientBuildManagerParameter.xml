<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="df67407c6097ad233c005e63868b8e8810f3a9aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30529112" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="6b7a7-101">包含先行編譯期間傳遞給 ASP.NET 編譯器的值。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6b7a7-101">Contains values passed to the ASP.NET compiler during precompilation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7a7-102">ASP.NET Web pages 和程式碼檔案可以先行編譯協助使用者更快的回應，並允許部署的站台，而不需部署的原始碼。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-102">ASP.NET Web pages and code files can be precompiled to facilitate a faster response for users and allow for the deployment of the site without deploying the source code.</span></span> <span data-ttu-id="6b7a7-103">如需先行編譯的 ASP.NET 網站上的詳細資訊，請參閱[ASP.NET 網站專案先行編譯概觀](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a)。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-103">For more information on precompiling an ASP.NET Web site, see [ASP.NET Web Site Project Precompilation Overview](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a).</span></span>  
  
 <span data-ttu-id="6b7a7-104"><xref:System.Web.Compilation.ClientBuildManagerParameter>類別會儲存在先行編譯期間所使用的值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-104">The <xref:System.Web.Compilation.ClientBuildManagerParameter> class stores values that are used during precompilation.</span></span> <span data-ttu-id="6b7a7-105"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>屬性會決定如何將建置組件。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-105">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built.</span></span> <span data-ttu-id="6b7a7-106">例如，您可以設定<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>至<xref:System.Web.Compilation.PrecompilationFlags.Clean>重新編譯任何先前已編譯的元件，或將它設定為<xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget>設為允許覆寫目標目錄中的任何元件產生的組件。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-106">For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory.</span></span> <span data-ttu-id="6b7a7-107"><xref:System.Web.Compilation.PrecompilationFlags>列舉程式<xref:System.FlagsAttribute>屬性允許成員值的位元組合。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-107">The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.</span></span> <span data-ttu-id="6b7a7-108"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>屬性可以包含一個以上的值從<xref:System.Web.Compilation.PrecompilationFlags>列舉來指定先行編譯的行為的組合。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-108">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.</span></span>  
  
 <span data-ttu-id="6b7a7-109">任一<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>屬性或<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>屬性會被指派的值來建立強式名稱組件。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-109">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="6b7a7-110">若要設定來建立強式名稱組件不需要這兩個值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-110">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
 <span data-ttu-id="6b7a7-111">A<xref:System.Web.Compilation.ClientBuildManagerParameter>物件傳遞至<xref:System.Web.Compilation.ClientBuildManager>物件透過<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>建構函式。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-111">A <xref:System.Web.Compilation.ClientBuildManagerParameter> object is passed to the <xref:System.Web.Compilation.ClientBuildManager> object through the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b7a7-112">下列程式碼範例是在中找到之程式碼範例的一部分<xref:System.Web.Compilation.ClientBuildManager>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-112">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="6b7a7-113">在範例中，<xref:System.Web.Compilation.ClientBuildManagerParameter>物件會建立並設定其值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-113">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="6b7a7-114">產生的組件並會根據提供的金鑰檔案的強式名稱，且會根據提供先行編譯<xref:System.Web.Compilation.PrecompilationFlags>值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-114">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6b7a7-115">初始化 <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7a7-115">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7a7-116">這個建構函式不會初始化任何屬性值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-116">This constructor does not initialize any property values.</span></span> <span data-ttu-id="6b7a7-117">這些值必須透過設定<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>， <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>，和<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>屬性在建立物件之後。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-117">Those values must be set through the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>, <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>, and <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> properties after the object has been created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b7a7-118">下列程式碼範例是在中找到之程式碼範例的一部分<xref:System.Web.Compilation.ClientBuildManager>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-118">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="6b7a7-119">在範例中，<xref:System.Web.Compilation.ClientBuildManagerParameter>物件會建立並設定其值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-119">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="6b7a7-120">產生的組件並會根據提供的金鑰檔案的強式名稱，且會根據提供先行編譯<xref:System.Web.Compilation.PrecompilationFlags>值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-120">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b7a7-121">取得或設定排除的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7a7-121">Gets or sets excluded virtual paths.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b7a7-122">排除的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7a7-122">Excluded virtual paths.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b7a7-123">取得或設定判斷先行編譯行為的旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7a7-123">Gets or sets the flags that determine precompilation behavior.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b7a7-124">用戶端版本的 <see cref="T:System.Web.Compilation.PrecompilationFlags" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7a7-124">The <see cref="T:System.Web.Compilation.PrecompilationFlags" /> for a client build.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7a7-125"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>屬性會決定如何將建置組件。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-125">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property determines how the assembly will be built.</span></span> <span data-ttu-id="6b7a7-126">例如，您可以設定<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>至<xref:System.Web.Compilation.PrecompilationFlags.Clean>重新編譯任何先前已編譯的元件，或將它設定為<xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget>設為允許覆寫目標目錄中的任何元件產生的組件。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-126">For example, you can set <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> to <xref:System.Web.Compilation.PrecompilationFlags.Clean> to recompile any previously compiled components, or set it to <xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget> to permit the resulting assembly to overwrite any components in the target directory.</span></span> <span data-ttu-id="6b7a7-127"><xref:System.Web.Compilation.PrecompilationFlags>列舉程式<xref:System.FlagsAttribute>屬性允許成員值的位元組合。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-127">The <xref:System.Web.Compilation.PrecompilationFlags> enumerator has a <xref:System.FlagsAttribute> attribute that allows a bitwise combination of its member values.</span></span> <span data-ttu-id="6b7a7-128"><xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>屬性可以包含一個以上的值從<xref:System.Web.Compilation.PrecompilationFlags>列舉來指定先行編譯的行為的組合。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-128">The <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A> property can contain more than one value from the <xref:System.Web.Compilation.PrecompilationFlags> enumeration to specify a combination of precompilation behaviors.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b7a7-129">下列程式碼範例是在中找到之程式碼範例的一部分<xref:System.Web.Compilation.ClientBuildManager>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-129">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="6b7a7-130">在範例中，<xref:System.Web.Compilation.ClientBuildManagerParameter>物件會建立並設定其值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-130">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="6b7a7-131">產生的組件並會根據提供的金鑰檔案的強式名稱，且會根據提供先行編譯<xref:System.Web.Compilation.PrecompilationFlags>值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-131">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b7a7-132">取得或設定編譯期間使用的金鑰容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7a7-132">Gets or sets the key container used during compilation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b7a7-133">金鑰容器值的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7a7-133">A <see cref="T:System.String" /> of the value for the key container.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7a7-134">任一<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>屬性或<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>屬性會被指派的值來建立強式名稱組件。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-134">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="6b7a7-135">若要設定來建立強式名稱組件不需要這兩個值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-135">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b7a7-136">下列程式碼範例是類似的程式碼範例中找到<xref:System.Web.Compilation.ClientBuildManager>不同之處在於產生的組件都有強式名稱，根據提供的金鑰容器類別概觀。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-136">The following code example is similar to the code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview except that the resulting assembly will have a strong name based on the provided key container.</span></span> <span data-ttu-id="6b7a7-137">它會根據所提供的先行編譯<xref:System.Web.Compilation.PrecompilationFlags>值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-137">It will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6b7a7-138">取得或設定編譯期間使用的金鑰檔。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7a7-138">Gets or sets the key file used during compilation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6b7a7-139">金鑰檔值的 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6b7a7-139">A <see cref="T:System.String" /> of the value for the key file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6b7a7-140">任一<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>屬性或<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>屬性會被指派的值來建立強式名稱組件。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-140">Either the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A> property or the <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A> property is assigned a value to create a strong-named assembly.</span></span> <span data-ttu-id="6b7a7-141">若要設定來建立強式名稱組件不需要這兩個值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-141">Both values do not need to be set to create a strong-named assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6b7a7-142">下列程式碼範例是在中找到之程式碼範例的一部分<xref:System.Web.Compilation.ClientBuildManager>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-142">The following code example is part of a code example found in the <xref:System.Web.Compilation.ClientBuildManager> class overview.</span></span> <span data-ttu-id="6b7a7-143">在範例中，<xref:System.Web.Compilation.ClientBuildManagerParameter>物件會建立並設定其值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-143">In the example, a <xref:System.Web.Compilation.ClientBuildManagerParameter> object is created and its values set.</span></span> <span data-ttu-id="6b7a7-144">產生的組件並會根據提供的金鑰檔案的強式名稱，且會根據提供先行編譯<xref:System.Web.Compilation.PrecompilationFlags>值。</span><span class="sxs-lookup"><span data-stu-id="6b7a7-144">The resulting assembly will have a strong name based on the provided key file and will precompile according to the provided <xref:System.Web.Compilation.PrecompilationFlags> values.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
  </Members>
</Type>