<Type Name="ClientBuildManager" FullName="System.Web.Compilation.ClientBuildManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1aa91df37890b4be6a6dfb2418c7839e6aa062c2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36405543" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientBuildManager : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientBuildManager extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientBuildManager&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManager sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type ClientBuildManager = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f25f3-101">提供 ASP.NET 應用程式的編譯 (Compilation) 服務。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f25f3-101">Provides compilation services for ASP.NET applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-102"><xref:System.Web.Compilation.ClientBuildManager>類別提供方法和屬性的編譯 ASP.NET Web 應用程式，並擷取產生的組件，或產生的原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="f25f3-102">The <xref:System.Web.Compilation.ClientBuildManager> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code.</span></span> <span data-ttu-id="f25f3-103">類別的執行個體的用戶端應用程式定義域中建立，並提供存取 ASP.NET 建置系統之外 Microsoft 網際網路資訊服務 (IIS)。</span><span class="sxs-lookup"><span data-stu-id="f25f3-103">Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="f25f3-104">類別可以用來開發自訂的工具編譯 Web 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-104">The class can be used to develop customized tools for compiling Web applications.</span></span>  
  
 <span data-ttu-id="f25f3-105">命令列工具`aspnet_compiler`使用<xref:System.Web.Compilation.ClientBuildManager>類別。</span><span class="sxs-lookup"><span data-stu-id="f25f3-105">The command-line tool `aspnet_compiler` uses the <xref:System.Web.Compilation.ClientBuildManager> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-106">初始化 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-106">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="f25f3-107">應用程式根目錄的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-107">The virtual path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="f25f3-108">應用程式根目錄的實體路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-108">The physical path to the application root.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-109">初始化 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 類別的新執行個體，而不使用指定的目標目錄或先行編譯旗標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-109">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class without a specified target directory or precompilation flags.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="f25f3-110">應用程式根目錄的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-110">The virtual path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="f25f3-111">應用程式根目錄的實體路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-111">The physical path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalTargetDir">
          <span data-ttu-id="f25f3-112">先行編譯的目標目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-112">The target directory for precompilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-113">使用指定的目標目錄，初始化 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-113">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class with the specified target directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-114">這種形式的建構函式通常會使用先行編譯，因為它會指定先行編譯目標目錄。</span><span class="sxs-lookup"><span data-stu-id="f25f3-114">This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String, parameter As ClientBuildManagerParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string * System.Web.Compilation.ClientBuildManagerParameter -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir, parameter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="f25f3-115">應用程式根目錄的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-115">The virtual path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="f25f3-116">應用程式根目錄的實體路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-116">The physical path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalTargetDir">
          <span data-ttu-id="f25f3-117">先行編譯的目標目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-117">The target directory for precompilation.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="f25f3-118">判斷先行編譯行為的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-118">Values that determine the precompilation behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-119">使用指定的目標目錄和編譯參數，初始化 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-119">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class with the specified target directory and compilation parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-120">這種形式的建構函式通常會使用先行編譯，因為它會指定先行編譯目標目錄和先行編譯的旗標。</span><span class="sxs-lookup"><span data-stu-id="f25f3-120">This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter, class System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter, System::ComponentModel::TypeDescriptionProvider ^ typeDescriptionProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string * System.Web.Compilation.ClientBuildManagerParameter * System.ComponentModel.TypeDescriptionProvider -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir, parameter, typeDescriptionProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
        <Parameter Name="typeDescriptionProvider" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="f25f3-121">應用程式根目錄的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-121">The virtual path of the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="f25f3-122">應用程式根目錄的實體路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-122">The physical path of the application root.</span>
          </span>
        </param>
        <param name="appPhysicalTargetDir">
          <span data-ttu-id="f25f3-123">先行編譯的目標目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-123">The target directory for precompilation.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="f25f3-124">判斷先行編譯行為的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-124">Values that determine the precompilation behavior.</span>
          </span>
        </param>
        <param name="typeDescriptionProvider">
          <span data-ttu-id="f25f3-125">要使用的型別描述提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-125">The type-description provider to use.</span>
          </span>
          <span data-ttu-id="f25f3-126">這個參數主要用來在 Visual Studio 中支援多目標基礎結構，</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-126">This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio.</span>
          </span>
          <span data-ttu-id="f25f3-127">也可用來擷取針對特定 .NET Framework 版本所篩選之型別的中繼資料。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-127">It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-128">使用指定的虛擬目錄、來源目錄、目標目錄、編譯參數和型別描述提供者，初始化 <see cref="T:System.Web.Compilation.ClientBuildManager" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-128">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainShutdown">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainShutdown As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainShutdown;" />
      <MemberSignature Language="F#" Value="member this.AppDomainShutdown : System.Web.Compilation.BuildManagerHostUnloadEventHandler " Usage="member this.AppDomainShutdown : System.Web.Compilation.BuildManagerHostUnloadEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-129">在應用程式定義域關閉時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-129">Occurs when an application domain is shut down.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainStarted">
      <MemberSignature Language="C#" Value="public event EventHandler AppDomainStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppDomainStarted" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppDomainStarted;" />
      <MemberSignature Language="F#" Value="member this.AppDomainStarted : EventHandler " Usage="member this.AppDomainStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-130">在應用程式定義域啟動時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-130">Occurs when an application domain is started.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainUnloaded">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainUnloaded As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainUnloaded;" />
      <MemberSignature Language="F#" Value="member this.AppDomainUnloaded : System.Web.Compilation.BuildManagerHostUnloadEventHandler " Usage="member this.AppDomainUnloaded : System.Web.Compilation.BuildManagerHostUnloadEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-131">在應用程式定義域卸載時發生。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-131">Occurs when an application domain is unloaded.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CodeGenDir">
      <MemberSignature Language="C#" Value="public string CodeGenDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeGenDir" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeGenDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeGenDir { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeGenDir : string" Usage="System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-132">取得用於產生程式碼的目錄之實體路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-132">Gets the physical path to the directory used for code generation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f25f3-133">
            <see cref="T:System.String" />，包含用於產生程式碼的目錄路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-133">A <see cref="T:System.String" /> containing the directory path used for code generation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-134">用於產生程式碼目錄通常是暫存 ASP.NET files 目錄中。</span><span class="sxs-lookup"><span data-stu-id="f25f3-134">The directory for code generation is typically in the temporary ASP.NET files directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileApplicationDependencies">
      <MemberSignature Language="C#" Value="public void CompileApplicationDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileApplicationDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileApplicationDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileApplicationDependencies();" />
      <MemberSignature Language="F#" Value="member this.CompileApplicationDependencies : unit -&gt; unit" Usage="clientBuildManager.CompileApplicationDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-135">編譯與應用程式相關的檔案，例如 App_Code 目錄中的檔案、Global.asax 檔案、資源檔案，以及 Web 參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-135">Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-136"><xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A>方法可確保編譯資源、 Web 參考、 App_Code 目錄中的檔案、.browser App_Browsers 目錄中的檔案和 Global.asax 檔案。</span><span class="sxs-lookup"><span data-stu-id="f25f3-136">The <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-137">編譯由虛擬路徑表示的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-137">Compiles the file represented by the virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.CompileFile : string -&gt; unit" Usage="clientBuildManager.CompileFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f25f3-138">要編譯的檔案之路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-138">The path to the file to be compiled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-139">編譯由虛擬路徑表示的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-139">Compiles the file represented by the virtual path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath, class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String, callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath, System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CompileFile : string * System.Web.Compilation.ClientBuildManagerCallback -&gt; unit" Usage="clientBuildManager.CompileFile (virtualPath, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f25f3-140">要編譯的檔案之路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-140">The path to the file to be compiled.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="f25f3-141">接收編譯的狀態資訊之物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-141">The object to receive status information from compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-142">編譯由虛擬路徑表示的檔案，並提供回呼 (Callback) 類別以接收關於組建 (Build) 的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-142">Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-143">
            <paramref name="virtualPath" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-143">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Type type, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(Type ^ type, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Type * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="clientBuildManager.CreateObject (type, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f25f3-144">要建立的物件類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-144">The type of object to be created.</span>
          </span>
        </param>
        <param name="failIfExists">
          <span data-ttu-id="f25f3-145">如果物件已在 ASP.NET 執行階段的應用程式定義域中建立時，要擲回例外狀況 (Exception) 則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-145">
              <see langword="true" /> to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-146">在 ASP.NET 執行階段的應用程式定義域中建立物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-146">Creates an object in the application domain of the ASP.NET runtime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-147">在 ASP.NET 執行階段的應用程式定義域中的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-147">An object in the application domain of the ASP.NET runtime.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-148">
            <paramref name="type" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-148">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f25f3-149">物件已經存在於應用程式定義域中，且 <paramref name="failIfExists" /> 為 <see langword="true" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-149">The object already exists in the application domain and <paramref name="failIfExists" /> is <see langword="true" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateCode(string virtualPath, string virtualFileString, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (virtualPath As String, virtualFileString As String, ByRef linePragmasTable As IDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateCode(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : string * string *  -&gt; string" Usage="clientBuildManager.GenerateCode (virtualPath, virtualFileString, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f25f3-150">檔案的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-150">The virtual path to the file.</span>
          </span>
        </param>
        <param name="virtualFileString">
          <span data-ttu-id="f25f3-151">檔案的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-151">The contents of the file.</span>
          </span>
        </param>
        <param name="linePragmasTable">
          <span data-ttu-id="f25f3-152">這個方法傳回時，包含行 Pragma 的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-152">When this method returns, contains a dictionary of line pragmas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-153">從檔案的內容產生程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-153">Generates code from the contents of a file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-154">
            <see cref="T:System.String" />，包含產生的程式碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-154">A <see cref="T:System.String" /> containing the generated code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-155">
            <paramref name="virtualPath" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-155">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateCodeCompileUnit">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-156">傳回由虛擬路徑表示的檔案之 codeDOM 樹狀、編譯器型別和編譯器參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-156">Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCodeCompileUnit : string *  *  *  -&gt; System.CodeDom.CodeCompileUnit" Usage="clientBuildManager.GenerateCodeCompileUnit (virtualPath, codeDomProviderType, compilerParameters, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f25f3-157">檔案的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-157">The virtual path to the file.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="f25f3-158">這個方法傳回時，包含用於程式碼產生和編譯的 codeDOM 提供者類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-158">When this method returns, contains the codeDOM provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="f25f3-159">這個方法傳回時，包含定義如何編譯檔案的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-159">When this method returns, contains the properties that define how the file will be compiled.</span>
          </span>
        </param>
        <param name="linePragmasTable">
          <span data-ttu-id="f25f3-160">這個方法傳回時，包含行 Pragma 的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-160">When this method returns, contains a dictionary of line pragmas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-161">傳回由虛擬路徑表示的檔案之 codeDOM 樹狀、編譯器型別和編譯器參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-161">Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-162">指定檔案的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-162">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for the given file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-163"><xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A>方法會擷取編譯檔案所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="f25f3-163">The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file.</span></span> <span data-ttu-id="f25f3-164">除了<xref:System.CodeDom.CodeCompileUnit>物件做為傳回值，它會傳回三個`out`參數。</span><span class="sxs-lookup"><span data-stu-id="f25f3-164">In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters.</span></span> <span data-ttu-id="f25f3-165">`codeDomProviderType`參數會傳回提供者型別產生和編譯檔案。</span><span class="sxs-lookup"><span data-stu-id="f25f3-165">The `codeDomProviderType` parameter returns the provider type for generating and compiling the file.</span></span> <span data-ttu-id="f25f3-166">`compilerParameters`參數包含決定編譯行為的屬性。</span><span class="sxs-lookup"><span data-stu-id="f25f3-166">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="f25f3-167">`linePragmasTable`參數包含行程式的字典。</span><span class="sxs-lookup"><span data-stu-id="f25f3-167">The `linePragmasTable` parameter contains a dictionary of line pragmas.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, string virtualFileString, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, virtualFileString As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCodeCompileUnit : string * string *  *  *  -&gt; System.CodeDom.CodeCompileUnit" Usage="clientBuildManager.GenerateCodeCompileUnit (virtualPath, virtualFileString, codeDomProviderType, compilerParameters, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f25f3-168">檔案的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-168">The virtual path to the file.</span>
          </span>
        </param>
        <param name="virtualFileString">
          <span data-ttu-id="f25f3-169">由 <c>virtualPath</c> 參數表示的檔案內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-169">The contents of the file represented by the <c>virtualPath</c> parameter.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="f25f3-170">這個方法傳回時，包含用於程式碼產生和編譯的 codeDOM 提供者類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-170">When this method returns, contains the codeDOM provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="f25f3-171">這個方法傳回時，包含定義將如何編譯由 <c>virtualPath</c> 參數表示之檔案的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-171">When this method returns, contains the properties that define how the file represented by the <c>virtualPath</c> parameter will be compiled.</span>
          </span>
        </param>
        <param name="linePragmasTable">
          <span data-ttu-id="f25f3-172">這個方法傳回時，包含行 Pragma 的字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-172">When this method returns, contains a dictionary of line pragmas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-173">傳回由虛擬路徑表示的檔案之內容、codeDOM 樹狀、編譯器型別和編譯器參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-173">Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-174">指定檔案的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-174">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for the given file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-175"><xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A>方法會擷取編譯檔案所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="f25f3-175">The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file.</span></span> <span data-ttu-id="f25f3-176">除了<xref:System.CodeDom.CodeCompileUnit>物件做為傳回值，它會傳回三個`out`參數。</span><span class="sxs-lookup"><span data-stu-id="f25f3-176">In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters.</span></span> <span data-ttu-id="f25f3-177">`codeDomProviderType`參數會傳回提供者型別產生和編譯檔案。</span><span class="sxs-lookup"><span data-stu-id="f25f3-177">The `codeDomProviderType` parameter returns the provider type for generating and compiling the file.</span></span> <span data-ttu-id="f25f3-178">`compilerParameters`參數包含決定編譯行為的屬性。</span><span class="sxs-lookup"><span data-stu-id="f25f3-178">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="f25f3-179">`linePragmasTable`參數包含行程式的字典。</span><span class="sxs-lookup"><span data-stu-id="f25f3-179">The `linePragmasTable` parameter contains a dictionary of line pragmas.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-180">
            <paramref name="virtualPath" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-180">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetAppDomainShutdownDirectories">
      <MemberSignature Language="C#" Value="public string[] GetAppDomainShutdownDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAppDomainShutdownDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomainShutdownDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAppDomainShutdownDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetAppDomainShutdownDirectories : unit -&gt; string[]" Usage="clientBuildManager.GetAppDomainShutdownDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-181">取得目錄，其中含有當變更時會導致應用程式定義域關閉的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-181">Gets the directories with files that, when changed, cause the application domain to shut down.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-182">
            <see cref="T:System.String" /> 陣列，包含最上層目錄名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-182">A <see cref="T:System.String" /> array containing the top-level directory names.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-183">特定的最上層目錄中檔案的變更會導致應用程式定義域關閉。</span><span class="sxs-lookup"><span data-stu-id="f25f3-183">Changes to files in specific top-level directories cause the application domain to shut down.</span></span> <span data-ttu-id="f25f3-184">分類收納、 App_Code、 Global_Resources、 Web 參考和 App_Browsers 目錄中的檔案會監視偵測到任何變更。</span><span class="sxs-lookup"><span data-stu-id="f25f3-184">Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes.</span></span> <span data-ttu-id="f25f3-185">偵測到變更時，應用程式定義域已關閉。</span><span class="sxs-lookup"><span data-stu-id="f25f3-185">When changes are detected, the application domain is shut down.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetBrowserDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetBrowserDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetBrowserDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBrowserDefinitions () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetBrowserDefinitions();" />
      <MemberSignature Language="F#" Value="member this.GetBrowserDefinitions : unit -&gt; System.Collections.IDictionary" Usage="clientBuildManager.GetBrowserDefinitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-186">取得瀏覽器項目的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-186">Gets a collection of browser elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-187">
            <see cref="T:System.Collections.IDictionary" />，包含瀏覽器項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-187">An <see cref="T:System.Collections.IDictionary" /> containing browser elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-188"><xref:System.Collections.IDictionary>物件包含索引鍵的瀏覽器名稱和<xref:System.Web.UI.Triplet>物件的值。</span><span class="sxs-lookup"><span data-stu-id="f25f3-188">The <xref:System.Collections.IDictionary> object contains browser names for the keys and <xref:System.Web.UI.Triplet> objects for the values.</span></span> <span data-ttu-id="f25f3-189"><xref:System.Web.UI.Triplet>物件每一個都包含父瀏覽器項目、 描述以及瀏覽器中的項目樹狀結構的深度的名稱。</span><span class="sxs-lookup"><span data-stu-id="f25f3-189">The <xref:System.Web.UI.Triplet> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.BrowserCapabilitiesFactory" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeDirectoryInformation">
      <MemberSignature Language="C#" Value="public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCodeDirectoryInformation(string virtualCodeDir, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] string&amp; generatedFilesDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCodeDirectoryInformation (virtualCodeDir As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef generatedFilesDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCodeDirectoryInformation(System::String ^ virtualCodeDir, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::String ^ % generatedFilesDir);" />
      <MemberSignature Language="F#" Value="member this.GetCodeDirectoryInformation : string *  *  *  -&gt; unit" Usage="clientBuildManager.GetCodeDirectoryInformation (virtualCodeDir, codeDomProviderType, compilerParameters, generatedFilesDir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualCodeDir" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="generatedFilesDir" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualCodeDir">
          <span data-ttu-id="f25f3-190">要擷取其資訊的目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-190">The directory about which to retrieve information.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="f25f3-191">這個方法傳回時，包含用於程式碼產生和編譯的提供者類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-191">When this method returns, contains the provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="f25f3-192">這個方法傳回時，包含定義如何編譯檔案的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-192">When this method returns, contains the properties that define how the file will be compiled.</span>
          </span>
        </param>
        <param name="generatedFilesDir">
          <span data-ttu-id="f25f3-193">這個方法傳回時，包含從非程式碼檔案產生的檔案之目錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-193">When this method returns, contains the directory for files generated from non-code files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-194">取得編譯器型別、編譯器參數，以及儲存從非程式碼檔案 (例如 .wsdl 檔案) 產生的程式碼檔案之目錄等相關資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-194">Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-195"><xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A>方法會擷取建置程式碼目錄所需的資訊。</span><span class="sxs-lookup"><span data-stu-id="f25f3-195">The <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> method retrieves information needed to build a code directory.</span></span> <span data-ttu-id="f25f3-196">它會傳回這項資訊到第三`out`參數。</span><span class="sxs-lookup"><span data-stu-id="f25f3-196">It returns this information through three `out` parameters.</span></span> <span data-ttu-id="f25f3-197">`codeDomProviderType`參數會傳回提供者型別產生和編譯程式碼目錄中的檔案。</span><span class="sxs-lookup"><span data-stu-id="f25f3-197">The `codeDomProviderType` parameter returns the provider type for generating and compiling the files in the code directory.</span></span> <span data-ttu-id="f25f3-198">`compilerParameters`參數包含決定編譯行為的屬性。</span><span class="sxs-lookup"><span data-stu-id="f25f3-198">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="f25f3-199">`generatedFilesDir`參數將儲存包含產生的程式碼目錄，例如.wsdl 檔案中的非程式碼檔案中的程式碼檔的目錄路徑。</span><span class="sxs-lookup"><span data-stu-id="f25f3-199">The `generatedFilesDir` parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-200">
            <paramref name="virtualCodeDir" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-200">
              <paramref name="virtualCodeDir" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledType">
      <MemberSignature Language="C#" Value="public Type GetCompiledType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetCompiledType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompiledType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetCompiledType(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetCompiledType : string -&gt; Type" Usage="clientBuildManager.GetCompiledType virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f25f3-201">要編譯的檔案之虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-201">The virtual path of the file to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-202">編譯由虛擬路徑表示的檔案，並傳回其編譯型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-202">Compiles the file represented by the virtual path and returns its compiled type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-203">編譯檔案的 <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-203">The <see cref="T:System.Type" /> of the compiled file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-204">
            <paramref name="virtualPath" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-204">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerParameters">
      <MemberSignature Language="C#" Value="public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCompilerParameters(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCompilerParameters (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCompilerParameters(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters);" />
      <MemberSignature Language="F#" Value="member this.GetCompilerParameters : string *  *  -&gt; unit" Usage="clientBuildManager.GetCompilerParameters (virtualPath, codeDomProviderType, compilerParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f25f3-205">檔案的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-205">The virtual path to the file.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="f25f3-206">這個方法傳回時，包含用於程式碼產生和編譯的提供者類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-206">When this method returns, contains the provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="f25f3-207">這個方法傳回時，包含定義如何編譯檔案的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-207">When this method returns, contains the properties that define how the file will be compiled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-208">傳回編譯器型別和參數，用來建置由虛擬路徑表示的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-208">Returns the compiler type and parameters that are used to build a file represented by a virtual path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-209">
            <paramref name="virtualPath" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-209">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedFileVirtualPath">
      <MemberSignature Language="C#" Value="public string GetGeneratedFileVirtualPath (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedFileVirtualPath(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedFileVirtualPath (filePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedFileVirtualPath(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="member this.GetGeneratedFileVirtualPath : string -&gt; string" Usage="clientBuildManager.GetGeneratedFileVirtualPath filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="f25f3-210">產生的檔案之完整實際路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-210">The full physical path to a generated file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-211">傳回產生的檔案之虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-211">Returns the virtual path of a generated file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-212">
            <see cref="T:System.String" />，包含 <paramref name="filePath" /> 的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-212">A <see cref="T:System.String" /> containing the virtual path for <paramref name="filePath" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-213">
            <paramref name="filePath" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-213">
              <paramref name="filePath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedSourceFile">
      <MemberSignature Language="C#" Value="public string GetGeneratedSourceFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedSourceFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedSourceFile (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedSourceFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetGeneratedSourceFile : string -&gt; string" Usage="clientBuildManager.GetGeneratedSourceFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f25f3-214">要擷取的檔案之虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-214">The virtual path of the file to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-215">取得虛擬路徑的產生檔案之實體路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-215">Gets the physical path to the generated file for a virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-216">
            <see cref="T:System.String" />，包含產生的檔案之實體路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-216">A <see cref="T:System.String" /> that contains the physical path to the generated file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-217">
            <paramref name="virtualPath" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-217">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetTopLevelAssemblyReferences">
      <MemberSignature Language="C#" Value="public string[] GetTopLevelAssemblyReferences (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetTopLevelAssemblyReferences(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTopLevelAssemblyReferences (virtualPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetTopLevelAssemblyReferences(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetTopLevelAssemblyReferences : string -&gt; string[]" Usage="clientBuildManager.GetTopLevelAssemblyReferences virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f25f3-218">組態名稱和路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-218">The configuration name and path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-219">傳回在 Bin 目錄和 Web 組態檔之 <see langword="&lt;assembly&gt;" /> 區段中所定義的組件陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-219">Returns an array of the assemblies defined in the Bin directory and the <see langword="&lt;assembly&gt;" /> section of the Web configuration file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-220">
            <see cref="T:System.String" /> 陣列，包含 Bin 目錄和 Web 組態檔之 <see langword="&lt;assembly&gt;" /> 區段中的程式碼基底 (Code Base) 路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-220">A <see cref="T:System.String" /> array containing paths to code bases in the Bin directory and the <see langword="&lt;assembly&gt;" /> section of the Web configuration file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-221">
            <paramref name="virtualPath" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-221">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetVirtualCodeDirectories">
      <MemberSignature Language="C#" Value="public string[] GetVirtualCodeDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetVirtualCodeDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualCodeDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetVirtualCodeDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetVirtualCodeDirectories : unit -&gt; string[]" Usage="clientBuildManager.GetVirtualCodeDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-222">傳回 ASP.NET 應用程式中 App_Code 目錄及其子目錄的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-222">Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-223">
            <see cref="T:System.String" /> 陣列，包含應用程式中所有程式碼目錄的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-223">A <see cref="T:System.String" /> array containing all the virtual paths to code directories in an application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="clientBuildManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-224">藉由防止建立使用期 (Lease)，為應用程式定義域提供無限的存留期 (Lifetime)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-224">Gives the application domain an infinite lifetime by preventing a lease from being created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-225">一定是 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-225">Always <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-226">這個方法會覆寫<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>其基底類別中的方法。</span><span class="sxs-lookup"><span data-stu-id="f25f3-226">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="f25f3-227">它會一律傳回`null`，因而會防止建立會限制應用程式定義域的存留期的使用期。</span><span class="sxs-lookup"><span data-stu-id="f25f3-227">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsCodeAssembly">
      <MemberSignature Language="C#" Value="public bool IsCodeAssembly (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCodeAssembly(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCodeAssembly (assemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCodeAssembly(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.IsCodeAssembly : string -&gt; bool" Usage="clientBuildManager.IsCodeAssembly assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="f25f3-228">識別為程式碼組件的組件名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-228">The name of the assembly to be identified as a code assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-229">指出組件是否為程式碼組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-229">Indicates whether an assembly is a code assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-230">如果 <paramref name="assemblyName" /> 參數符合其中一個產生的程式碼組件則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-230">
              <see langword="true" /> if the <paramref name="assemblyName" /> parameter matches one of the generated code assemblies; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f25f3-231">
            <paramref name="assemblyName" /> 為 null。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-231">
              <paramref name="assemblyName" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsHostCreated">
      <MemberSignature Language="C#" Value="public bool IsHostCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHostCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHostCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHostCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHostCreated : bool" Usage="System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-232">取得值，指出是否已建立編譯 ASP.NET Web 應用程式的應用程式定義域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-232">Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f25f3-233">如果編譯 ASP.NET Web 應用程式的應用程式定義域已建立則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-233">
              <see langword="true" /> if the application domain for compiling ASP.NET Web applications has been created; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PrecompileApplication">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-234">先行編譯 ASP.NET 應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-234">Precompiles an ASP.NET application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-235">ASP.NET 支援三種形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-235">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="f25f3-236">一種格式可讓您就地先行編譯的 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-236">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="f25f3-237">在這種形式，站台是部署到生產環境，然後預先編譯，這就不需要將站台時，使用者第一次造訪動態編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-237">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="f25f3-238">第一個站台的使用者不會發生動態編譯的站台上正常情況下遇到延遲。</span><span class="sxs-lookup"><span data-stu-id="f25f3-238">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span>  
  
 <span data-ttu-id="f25f3-239">部署會使用兩個其他形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-239">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="f25f3-240">在任一形式中，產生的站台配置，可以部署至實際執行電腦。</span><span class="sxs-lookup"><span data-stu-id="f25f3-240">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="f25f3-241">其中一個表單包含標記頁，所以無法編譯站台上執行某些數量的更新。</span><span class="sxs-lookup"><span data-stu-id="f25f3-241">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="f25f3-242">另一個表單不包含標記頁，因此無法更新不需要重新編譯原始站台。</span><span class="sxs-lookup"><span data-stu-id="f25f3-242">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="f25f3-243">沒有來源的程式碼會部署到目標環境，其中一種形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-243">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="f25f3-244">先行編譯應用程式透過定義<xref:System.Web.Compilation.ClientBuildManager>建構函式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-244">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="f25f3-245"><xref:System.Web.Compilation.ClientBuildManagerParameter>物件<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>建構函式會定義哪些執行先行編譯的三種形式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-245">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="f25f3-246">開發人員可以先行編譯網站`aspnet_compiler`命令列工具，或呼叫<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f25f3-246">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication();" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : unit -&gt; unit" Usage="clientBuildManager.PrecompileApplication " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-247">先行編譯 ASP.NET 應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-247">Precompiles an ASP.NET application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-248">ASP.NET 支援三種形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-248">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="f25f3-249">一種格式可讓您就地先行編譯的 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-249">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="f25f3-250">在這種形式，站台是部署到生產環境，然後預先編譯，這就不需要將站台時，使用者第一次造訪動態編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-250">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="f25f3-251">第一個站台的使用者不會發生動態編譯的站台上正常情況下遇到延遲。</span><span class="sxs-lookup"><span data-stu-id="f25f3-251">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span>  
  
 <span data-ttu-id="f25f3-252">部署會使用兩個其他形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-252">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="f25f3-253">在任一形式中，產生的站台配置，可以部署至實際執行電腦。</span><span class="sxs-lookup"><span data-stu-id="f25f3-253">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="f25f3-254">其中一個表單包含標記頁，所以無法編譯站台上執行某些數量的更新。</span><span class="sxs-lookup"><span data-stu-id="f25f3-254">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="f25f3-255">另一個表單不包含標記頁，因此無法更新不需要重新編譯原始站台。</span><span class="sxs-lookup"><span data-stu-id="f25f3-255">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="f25f3-256">沒有來源的程式碼會部署到目標環境，其中一種形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-256">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="f25f3-257">先行編譯應用程式透過定義<xref:System.Web.Compilation.ClientBuildManager>建構函式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-257">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="f25f3-258"><xref:System.Web.Compilation.ClientBuildManagerParameter>物件<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>建構函式會定義哪些執行先行編譯的三種形式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-258">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="f25f3-259">開發人員可以先行編譯網站`aspnet_compiler`命令列工具，或呼叫<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f25f3-259">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : System.Web.Compilation.ClientBuildManagerCallback -&gt; unit" Usage="clientBuildManager.PrecompileApplication callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="f25f3-260">
            <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />，包含報告編譯結果時要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-260">A <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> containing the method to call when reporting the result of compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-261">先行編譯 ASP.NET 應用程式，並提供回呼方法以接收關於組建的狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-261">Precompiles an ASP.NET application and provides a callback method to receive status information about the build.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-262">ASP.NET 支援三種形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-262">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="f25f3-263">一種格式可讓您就地先行編譯的 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-263">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="f25f3-264">在這種形式，站台是部署到生產環境，然後預先編譯，這就不需要將站台時，使用者第一次造訪動態編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-264">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="f25f3-265">第一個站台的使用者不會發生動態編譯的站台上正常情況下遇到延遲。</span><span class="sxs-lookup"><span data-stu-id="f25f3-265">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span> <span data-ttu-id="f25f3-266">`callback`參數包含要報告的編譯結果時所呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="f25f3-266">The `callback` parameter contains the method to call when reporting the result of compilation.</span></span>  
  
 <span data-ttu-id="f25f3-267">部署會使用兩個其他形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-267">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="f25f3-268">在任一形式中，產生的站台配置，可以部署至實際執行電腦。</span><span class="sxs-lookup"><span data-stu-id="f25f3-268">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="f25f3-269">其中一個表單包含標記頁，所以無法編譯站台上執行某些數量的更新。</span><span class="sxs-lookup"><span data-stu-id="f25f3-269">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="f25f3-270">另一個表單不包含標記頁，因此無法更新不需要重新編譯原始站台。</span><span class="sxs-lookup"><span data-stu-id="f25f3-270">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="f25f3-271">沒有來源的程式碼會部署到目標環境，其中一種形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-271">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="f25f3-272">先行編譯應用程式透過定義<xref:System.Web.Compilation.ClientBuildManager>建構函式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-272">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="f25f3-273"><xref:System.Web.Compilation.ClientBuildManagerParameter>物件<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>建構函式會定義哪些執行先行編譯的三種形式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-273">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="f25f3-274">開發人員可以先行編譯網站`aspnet_compiler`命令列工具，或呼叫<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f25f3-274">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback, forceCleanBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback, bool forceCleanBuild);" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : System.Web.Compilation.ClientBuildManagerCallback * bool -&gt; unit" Usage="clientBuildManager.PrecompileApplication (callback, forceCleanBuild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
        <Parameter Name="forceCleanBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="f25f3-275">
            <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />，包含報告編譯結果時要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-275">A <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> containing the method to call when reporting the result of compilation.</span>
          </span>
        </param>
        <param name="forceCleanBuild">
          <span data-ttu-id="f25f3-276">
            <see langword="true" /> 表示執行清除建置，這會首先刪除所有物件和中繼檔案，<see langword="false" /> 則表示僅重建已變更的檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-276">
              <see langword="true" /> to perform a clean build, which will first delete all object and intermediate files; <see langword="false" /> to rebuild only those files that have changed.</span>
          </span>
          <span data-ttu-id="f25f3-277">如果建置環境可能不取得相依性，則設為 true。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-277">Set to true if there is a chance that a dependency might not be picked up by the build environment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f25f3-278">先行編譯 ASP.NET 應用程式，提供回呼方法以接收組建相關的狀態資訊，並指出是否建立全新的組建。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-278">Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f25f3-279">ASP.NET 支援三種形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-279">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="f25f3-280">一種格式可讓您就地先行編譯的 ASP.NET 應用程式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-280">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="f25f3-281">在這種形式，站台是部署到生產環境，然後預先編譯，這就不需要將站台時，使用者第一次造訪動態編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-281">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="f25f3-282">第一個站台的使用者不會發生動態編譯的站台上正常情況下遇到延遲。</span><span class="sxs-lookup"><span data-stu-id="f25f3-282">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span> <span data-ttu-id="f25f3-283">`callback`參數包含要報告的編譯結果時所呼叫的方法。</span><span class="sxs-lookup"><span data-stu-id="f25f3-283">The `callback` parameter contains the method to call when reporting the result of compilation.</span></span>  
  
 <span data-ttu-id="f25f3-284">部署會使用兩個其他形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-284">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="f25f3-285">在任一形式中，產生的站台配置，可以部署至實際執行電腦。</span><span class="sxs-lookup"><span data-stu-id="f25f3-285">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="f25f3-286">其中一個表單包含標記頁，所以無法編譯站台上執行某些數量的更新。</span><span class="sxs-lookup"><span data-stu-id="f25f3-286">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="f25f3-287">另一個表單不包含標記頁，因此無法更新不需要重新編譯原始站台。</span><span class="sxs-lookup"><span data-stu-id="f25f3-287">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="f25f3-288">沒有來源的程式碼會部署到目標環境，其中一種形式的先行編譯。</span><span class="sxs-lookup"><span data-stu-id="f25f3-288">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="f25f3-289">先行編譯應用程式透過定義<xref:System.Web.Compilation.ClientBuildManager>建構函式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-289">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="f25f3-290"><xref:System.Web.Compilation.ClientBuildManagerParameter>物件<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>建構函式會定義哪些執行先行編譯的三種形式。</span><span class="sxs-lookup"><span data-stu-id="f25f3-290">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="f25f3-291">開發人員可以先行編譯網站`aspnet_compiler`命令列工具，或呼叫<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="f25f3-291">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-292">終止目前的 ASP.NET 應用程式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-292">Terminates the current ASP.NET application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public bool Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Function Unload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; bool" Usage="clientBuildManager.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f25f3-293">卸載編譯 ASP.NET Web 應用程式的應用程式定義域。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-293">Unloads the application domain for compiling ASP.NET Web applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f25f3-294">如果應用程式定義域已卸載則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f25f3-294">
              <see langword="true" /> if the application domain is unloaded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>