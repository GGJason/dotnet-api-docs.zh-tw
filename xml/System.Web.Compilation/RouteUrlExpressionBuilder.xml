<Type Name="RouteUrlExpressionBuilder" FullName="System.Web.Compilation.RouteUrlExpressionBuilder">
  <TypeSignature Language="C#" Value="public class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteUrlExpressionBuilder extends System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.RouteUrlExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteUrlExpressionBuilder&#xA;Inherits ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteUrlExpressionBuilder : System::Web::Compilation::ExpressionBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Compilation.ExpressionBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.Compilation.ExpressionPrefix("Routes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="01352-101">建立對應至所指定 URL 參數值的 URL。</span><span class="sxs-lookup"><span data-stu-id="01352-101">Creates a URL that corresponds to specified URL parameter values.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01352-102"><xref:System.Web.Compilation.RouteUrlExpressionBuilder>類別讓您能夠設定為路由的 URL 的伺服器控制項的屬性，藉由提供的 URL 參數值的清單。</span><span class="sxs-lookup"><span data-stu-id="01352-102">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder> class makes it possible to set the property of a server control to the URL of a route by providing a list of URL parameter values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="01352-103">下列範例會示範如何建立會產生格式化路由 URL 的超連結的標記。</span><span class="sxs-lookup"><span data-stu-id="01352-103">The following example shows how to create markup that generates a hyperlink with a URL that is formatted for a route.</span></span> <span data-ttu-id="01352-104">使用定義路由`http://www.contoso.com/search/{searchterm}`與 URL 模式。</span><span class="sxs-lookup"><span data-stu-id="01352-104">The route is defined by using `http://www.contoso.com/search/{searchterm}` as the URL pattern.</span></span>  
  
```  
<asp:HyperLink ID="HyperLink1" runat="server"  
               NavigateUrl="<%$ RouteUrl:searchterm=Bicycles %>">  
  Search for Bicycles  
</asp:HyperLink>  
```  
  
 <span data-ttu-id="01352-105">將此超連結產生 URL `http://www.contoso.com/search/Bicycles`。</span><span class="sxs-lookup"><span data-stu-id="01352-105">The URL generated for this hyperlink would be `http://www.contoso.com/search/Bicycles`.</span></span>  
  
 <span data-ttu-id="01352-106">如果 URL 參數提供給`RouteUrl`運算式不是不足以唯一識別路由時，您必須包含的路由名稱。</span><span class="sxs-lookup"><span data-stu-id="01352-106">If the URL parameters provided to the `RouteUrl` expression are not sufficient to uniquely identify a route, you must include the route name.</span></span> <span data-ttu-id="01352-107">例如，如果 Web 應用程式具有兩個路由與`searchterm`做為唯一的 URL 參數，路由會使用路由名稱，定義與超連結標記就會類似下列範例：</span><span class="sxs-lookup"><span data-stu-id="01352-107">For example, if a Web application has two routes with `searchterm` as the sole URL parameter, the routes would have to be defined by using route names, and the hyperlink markup would resemble the following example:</span></span>  
  
```  
<asp:HyperLink ID="HyperLink1" runat="server"  
               NavigateUrl="<%$ RouteUrl:searchterm=Bicycles,  
               routename=BasicSearchRoute %>">  
  Search for Bicycles  
</asp:HyperLink>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteUrlExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteUrlExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="01352-108">初始化 <see cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="01352-108">Initializes a new instance of the <see cref="T:System.Web.Compilation.RouteUrlExpressionBuilder" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="01352-109">未在這個實作中使用。</span><span class="sxs-lookup"><span data-stu-id="01352-109">Not used in this implementation.</span></span></param>
        <param name="entry"><span data-ttu-id="01352-110">運算式要繫結到的屬性。</span><span class="sxs-lookup"><span data-stu-id="01352-110">The property that the expression is bound to.</span></span></param>
        <param name="parsedData"><span data-ttu-id="01352-111">未在這個實作中使用。</span><span class="sxs-lookup"><span data-stu-id="01352-111">Not used in this implementation.</span></span></param>
        <param name="context"><span data-ttu-id="01352-112">控制項或頁面的屬性。</span><span class="sxs-lookup"><span data-stu-id="01352-112">Properties for the control or page.</span></span></param>
        <summary><span data-ttu-id="01352-113">建立對應至所指定 URL 參數值以及路由 URL 格式的 URL。</span><span class="sxs-lookup"><span data-stu-id="01352-113">Creates a URL that corresponds to specified URL parameter values and to a route URL format.</span></span></summary>
        <returns><span data-ttu-id="01352-114">對應至所指定 URL 參數值以及所選取路由的 URL。</span><span class="sxs-lookup"><span data-stu-id="01352-114">The URL that corresponds to the specified URL parameter values and to the selected route.</span></span> <span data-ttu-id="01352-115">此路由是透過比對路由 URL 模式與指定的參數清單所選取。</span><span class="sxs-lookup"><span data-stu-id="01352-115">The route is selected by matching route URL patterns to the specified list of parameters.</span></span> <span data-ttu-id="01352-116">如果有多個路由與指定的參數清單相符，也可以指定路由名稱表示要選取的路由。</span><span class="sxs-lookup"><span data-stu-id="01352-116">In case more than one route matches a specified list of parameters, a route name can also be specified to indicate which route to select.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01352-117">在標記中遇到下列形式的運算式時，ASP.NET 會呼叫這個方法：</span><span class="sxs-lookup"><span data-stu-id="01352-117">ASP.NET calls this method when an expression of the following form is encountered in markup:</span></span>  
  
 `<%$ RouteUrl: urlparameter=value %>`  
  
 <span data-ttu-id="01352-118">這個方法會產生適當的 URL，針對目前的指定路由索引鍵值<xref:System.Web.Routing.Route>物件。</span><span class="sxs-lookup"><span data-stu-id="01352-118">This method generates the appropriate URL for the specified route-key values for the current <xref:System.Web.Routing.Route> object.</span></span> <span data-ttu-id="01352-119">這個方法會覆寫<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="01352-119">This method overrides the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span> <span data-ttu-id="01352-120">它會從取得`entry`參數運算式繫結控制項的參考，它會取得從`context`參數要評估的運算式，它呼叫<xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A>方法來產生 URL。</span><span class="sxs-lookup"><span data-stu-id="01352-120">It gets from the `entry` parameter a reference to the control to which the expression is bound, it gets from the `context` parameter the expression to be evaluated, and it calls the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A> method to generate the URL.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CompilationMode" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry"><span data-ttu-id="01352-121">運算式要繫結到的屬性。</span><span class="sxs-lookup"><span data-stu-id="01352-121">The property that the expression is bound to.</span></span></param>
        <param name="parsedData"><span data-ttu-id="01352-122">表示由 <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" /> 傳回之剖析資料的物件。</span><span class="sxs-lookup"><span data-stu-id="01352-122">The object that represents parsed data as returned by <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />.</span></span></param>
        <param name="context"><span data-ttu-id="01352-123">控制項或頁面的屬性。</span><span class="sxs-lookup"><span data-stu-id="01352-123">Properties for the control or page.</span></span></param>
        <summary><span data-ttu-id="01352-124">傳回程式碼運算式，用來在產生的頁面類別中執行屬性指派。</span><span class="sxs-lookup"><span data-stu-id="01352-124">Returns a code expression that is used to perform the property assignment in the generated page class.</span></span></summary>
        <returns><span data-ttu-id="01352-125">用於屬性指派的 <see cref="T:System.CodeDom.CodeExpression" /> 執行個體。</span><span class="sxs-lookup"><span data-stu-id="01352-125">A <see cref="T:System.CodeDom.CodeExpression" /> instance that is used in the property assignment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01352-126">CodeDOM 建立網頁或控制項時，會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="01352-126">This method is called when the CodeDOM is created for a page or control.</span></span> <span data-ttu-id="01352-127"><xref:System.CodeDom.CodeExpression>傳回的物件都代表要加入產生的頁面類別的屬性指派的程式碼運算式。</span><span class="sxs-lookup"><span data-stu-id="01352-127">The <xref:System.CodeDom.CodeExpression> object that is returned represents the code expression to add to the property assignment in the generated page class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteUrl">
      <MemberSignature Language="C#" Value="public static string GetRouteUrl (System.Web.UI.Control control, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRouteUrl(class System.Web.UI.Control control, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRouteUrl(System::Web::UI::Control ^ control, System::String ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control"><span data-ttu-id="01352-128">與運算式繫結的控制項。</span><span class="sxs-lookup"><span data-stu-id="01352-128">The control that the expression is bound to.</span></span></param>
        <param name="expression"><span data-ttu-id="01352-129">標記中指定的運算式。</span><span class="sxs-lookup"><span data-stu-id="01352-129">The expression as specified in markup.</span></span></param>
        <summary><span data-ttu-id="01352-130">建立 URL，該 URL 對應至路由 URL 格式的指定路由索引鍵。</span><span class="sxs-lookup"><span data-stu-id="01352-130">Creates a URL that corresponds to specified route keys for a route URL format.</span></span></summary>
        <returns><span data-ttu-id="01352-131">對應至目前 <see cref="T:System.Web.Routing.Route" /> 物件之路由 URL 格式的 URL。</span><span class="sxs-lookup"><span data-stu-id="01352-131">The URL that corresponds to the route URL format of the current <see cref="T:System.Web.Routing.Route" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01352-132">這個方法的 URL 產生適當的值，藉由呼叫<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>方法<xref:System.Web.Routing.RouteCollection>物件。</span><span class="sxs-lookup"><span data-stu-id="01352-132">This method generates the appropriate value for the URL by calling the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method of the <xref:System.Web.Routing.RouteCollection> object.</span></span> <span data-ttu-id="01352-133">它會取得<xref:System.Web.Routing.RequestContext>物件從`control`參數，並且會剖析來自的路由名稱和路由參數`expression`參數。</span><span class="sxs-lookup"><span data-stu-id="01352-133">It gets the <xref:System.Web.Routing.RequestContext> object from the `control` parameter, and it parses the route name and route parameters from the `expression` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="01352-134"><paramref name="control" /> 參數為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="01352-134">The <paramref name="control" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="01352-135">此方法無法剖析標記中指定的運算式。</span><span class="sxs-lookup"><span data-stu-id="01352-135">The method was unable to parse the expression that was specified in markup.</span></span> <span data-ttu-id="01352-136">如需詳細資訊，請參閱<see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />。</span><span class="sxs-lookup"><span data-stu-id="01352-136">For more information, see <see cref="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public override bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="01352-137">取得值，這個值表示是否可在未編譯的頁面中評估運算式。</span><span class="sxs-lookup"><span data-stu-id="01352-137">Gets a value that indicates whether an expression can be evaluated in a page that is not compiled.</span></span></summary>
        <value><span data-ttu-id="01352-138">一定是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="01352-138">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01352-139"><xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A>屬性會指出是否<xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A>方法已在類別中實作，而且可在單一頁面就不會編譯以傳回運算式的值。</span><span class="sxs-lookup"><span data-stu-id="01352-139">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> property indicates whether the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> method has been implemented in the class and can return a value for the expression in a page that is not compiled.</span></span> <span data-ttu-id="01352-140"><xref:System.Web.Compilation.RouteUrlExpressionBuilder>類別可以評估的運算式未編譯的頁面中。</span><span class="sxs-lookup"><span data-stu-id="01352-140">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder> class can evaluate an expression in a page that is not compiled.</span></span> <span data-ttu-id="01352-141">因此，<xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A>屬性一律會傳回`true`。</span><span class="sxs-lookup"><span data-stu-id="01352-141">Therefore, the <xref:System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate%2A> property always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseRouteExpression">
      <MemberSignature Language="C#" Value="public static bool TryParseRouteExpression (string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseRouteExpression(string expression, class System.Web.Routing.RouteValueDictionary routeValues, [out] string&amp; routeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseRouteExpression (expression As String, routeValues As RouteValueDictionary, ByRef routeName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseRouteExpression(System::String ^ expression, System::Web::Routing::RouteValueDictionary ^ routeValues, [Runtime::InteropServices::Out] System::String ^ % routeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="routeValues" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="01352-142">標記中指定的運算式。</span><span class="sxs-lookup"><span data-stu-id="01352-142">The expression as specified in markup.</span></span></param>
        <param name="routeValues"><span data-ttu-id="01352-143">路由索引鍵及其相關值的集合。</span><span class="sxs-lookup"><span data-stu-id="01352-143">The collection of route keys and their associated values.</span></span></param>
        <param name="routeName"><span data-ttu-id="01352-144">如果 <c>expression</c> 包含名為 <c>RouteName</c> 的路由索引鍵，則這個方法傳回時，會包含表示路由名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="01352-144">When this method returns, contains a string that represents the name of the route, if <c>expression</c> contains a route key named <c>RouteName</c>.</span></span> <span data-ttu-id="01352-145">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="01352-145">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="01352-146">將運算式剖析為路由索引鍵和值的集合，並且選擇性地剖析為路由名稱。</span><span class="sxs-lookup"><span data-stu-id="01352-146">Parses an expression into a collection of route keys and values, and optionally into a route name.</span></span></summary>
        <returns>
          <span data-ttu-id="01352-147">如果剖析成功則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="01352-147"><see langword="true" /> if parsing was successful; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="01352-148"><xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A>方法會刪除前置和尾端空格，從運算式，並且再分割為索引鍵/值組做為分隔符號使用逗號。</span><span class="sxs-lookup"><span data-stu-id="01352-148">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> method strips leading and trailing spaces from the expression, and then splits it into key/value pairs by using commas as delimiters.</span></span> <span data-ttu-id="01352-149">如果路由索引鍵名稱為`RouteName`找到，值會傳遞回`routeName`參數而不在`routeValues`。</span><span class="sxs-lookup"><span data-stu-id="01352-149">If the route key named `RouteName` is found, that value is passed back in the `routeName` parameter and not in `routeValues`.</span></span> <span data-ttu-id="01352-150">否則，`null`就會傳回`routeName`。</span><span class="sxs-lookup"><span data-stu-id="01352-150">Otherwise, `null` is returned for `routeName`.</span></span> <span data-ttu-id="01352-151">開頭和尾端空白也都會從個別的索引鍵和值。</span><span class="sxs-lookup"><span data-stu-id="01352-151">Leading and trailing spaces are also stripped from individual keys and values.</span></span>  
  
 <span data-ttu-id="01352-152"><xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A>方法會傳回`false`如果運算式不由至少一個索引鍵/值組格式*金鑰*`=`*值*，並使用逗號分隔多個組。</span><span class="sxs-lookup"><span data-stu-id="01352-152">The <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression%2A> method returns `false` if the expression is not composed of at least one key/value pair that is in the format *key*`=`*value*, and that uses commas to separate multiple pairs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>