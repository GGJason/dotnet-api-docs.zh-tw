<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da596f0a9f800dca2121847318a4b186a0b1d0a9" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39873235" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <TypeSignature Language="F#" Value="type BuildProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4a7be-101">定義一組在 ASP.NET 建置環境中用以產生原始程式碼的屬性和方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a7be-101">Defines a set of properties and methods for generating source code within the ASP.NET build environment.</span>
      </span>
      <span data-ttu-id="4a7be-102">這個類別是抽象的。</span>
      <span class="sxs-lookup">
        <span data-stu-id="4a7be-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-103">ASP.NET 建置環境使用<xref:System.Web.Compilation.BuildProvider>產生原始碼應用程式內的不同檔案類型的物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-103">The ASP.NET build environment uses <xref:System.Web.Compilation.BuildProvider> objects to generate source code for different file types within an application.</span></span> <span data-ttu-id="4a7be-104">類別衍生自<xref:System.Web.Compilation.BuildProvider>主要提供原始程式碼檔案、 網頁、 資源和其他自訂項目。</span><span class="sxs-lookup"><span data-stu-id="4a7be-104">Classes derived from <xref:System.Web.Compilation.BuildProvider> predominantly provide source code for files, Web pages, resources, and other custom items.</span></span>  
  
 <span data-ttu-id="4a7be-105">一般而言，您未建立的執行個體<xref:System.Web.Compilation.BuildProvider>直接類別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-105">Typically, you do not create an instance of the <xref:System.Web.Compilation.BuildProvider> class directly.</span></span> <span data-ttu-id="4a7be-106">相反地，您可以實作衍生自的類別<xref:System.Web.Compilation.BuildProvider>，並設定<xref:System.Web.Compilation.BuildProvider>實作，以便使用於 ASP.NET 建置環境。</span><span class="sxs-lookup"><span data-stu-id="4a7be-106">Instead, you implement a class that derives from <xref:System.Web.Compilation.BuildProvider>, and configure the <xref:System.Web.Compilation.BuildProvider> implementation for use within the ASP.NET build environment.</span></span>  
  
 <span data-ttu-id="4a7be-107">執行個體<xref:System.Web.Compilation.BuildProvider>類別會搭配<xref:System.Web.Compilation.AssemblyBuilder>編譯的組件內建一個或多個檔案的物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-107">Instances of the <xref:System.Web.Compilation.BuildProvider> class are used with <xref:System.Web.Compilation.AssemblyBuilder> objects to build one or more files into a compiled assembly.</span></span> <span data-ttu-id="4a7be-108">A<xref:System.Web.Compilation.BuildProvider>執行個體的個別檔案，而適當的語言產生原始程式碼和<xref:System.Web.Compilation.AssemblyBuilder>物件會結合每個所提供的來源<xref:System.Web.Compilation.BuildProvider>成單一組件的執行個體。</span><span class="sxs-lookup"><span data-stu-id="4a7be-108">A <xref:System.Web.Compilation.BuildProvider> instance generates source code in the appropriate language for individual files, and the <xref:System.Web.Compilation.AssemblyBuilder> object combines the source contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly.</span></span>  
  
 <span data-ttu-id="4a7be-109">在 ASP.NET 建置環境使用的執行個體<xref:System.Web.Compilation.BuildProvider>類別來建立應用程式內的檔案。</span><span class="sxs-lookup"><span data-stu-id="4a7be-109">The ASP.NET build environment uses instances of the <xref:System.Web.Compilation.BuildProvider> class to build files within an application.</span></span> <span data-ttu-id="4a7be-110"><xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>屬性<xref:System.Web.Compilation.BuildProvider>類別指示要建置的檔案路徑。</span><span class="sxs-lookup"><span data-stu-id="4a7be-110">The <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property of the <xref:System.Web.Compilation.BuildProvider> class indicates the path of the file to be built.</span></span> <span data-ttu-id="4a7be-111">在應用程式內的每個檔案的副檔名被對應到相對應的組建提供者。</span><span class="sxs-lookup"><span data-stu-id="4a7be-111">The file extension of each file within an application is mapped to a corresponding build provider.</span></span> <span data-ttu-id="4a7be-112">ASP.NET 建置環境初始化<xref:System.Web.Compilation.BuildProvider>執行個體根據副檔名，每個檔案，並使用<xref:System.Web.Compilation.BuildProvider>来產生來源檔案的程式碼的方法。</span><span class="sxs-lookup"><span data-stu-id="4a7be-112">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> instance for each file based on the file extension, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source code for the file.</span></span> <span data-ttu-id="4a7be-113">ASP.NET 建置環境傳遞<xref:System.Web.Compilation.AssemblyBuilder>物件會根據慣用的編譯器語言和檔案的內容<xref:System.Web.Compilation.BuildProvider>方法建立一或多個檔案的組件時，讓<xref:System.Web.Compilation.BuildProvider>執行個體可以參與其整體的組件檔案的原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="4a7be-113">The ASP.NET build environment passes an <xref:System.Web.Compilation.AssemblyBuilder> object based on the preferred compiler language and the context of the file to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that the <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.</span></span>  
  
 <span data-ttu-id="4a7be-114">若要定義自訂的建置動作，在 ASP.NET 應用程式的檔案類型，您必須衍生的類別<xref:System.Web.Compilation.BuildProvider>、 實作來建置的檔案類型，在衍生類別中的成員，以及設定相對應的副檔名的組建提供者在應用程式設定檔中。</span><span class="sxs-lookup"><span data-stu-id="4a7be-114">To define custom build actions for a file type within an ASP.NET application, you must derive a class from <xref:System.Web.Compilation.BuildProvider>, implement members within the derived class for building the file type, and configure the build provider for the corresponding file extension within the application configuration file.</span></span>  
  
 <span data-ttu-id="4a7be-115">指定支援的檔案的副檔名，以及組建提供者是否支援程式碼檔案、 Web 檔案、 資源檔或所有檔案。</span><span class="sxs-lookup"><span data-stu-id="4a7be-115">The  specifies the file extension for supported files, and whether the build provider supports code files, Web files, resource files or all files.</span></span> <span data-ttu-id="4a7be-116">使用`type`屬性來指定組建提供者實作的完整型別名稱。</span><span class="sxs-lookup"><span data-stu-id="4a7be-116">Use the `type` attribute to specify the fully qualified type name of the build provider implementation.</span></span> <span data-ttu-id="4a7be-117">使用<xref:System.Web.Compilation.BuildProviderAppliesToAttribute>類別，以指定組建提供者是否套用至 App_Code 目錄中的檔案、 Web 內容目錄，為全域或本機資源中的檔案或所有檔案。</span><span class="sxs-lookup"><span data-stu-id="4a7be-117">Use the <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> class to specify whether the build provider applies to files in the App_Code directory, to files in a Web content directory, to global or local resources, or to all files.</span></span> <span data-ttu-id="4a7be-118">使用`extension`屬性來指定用來識別的檔案副檔名的檔案<xref:System.Web.Compilation.BuildProvider>類別支援。</span><span class="sxs-lookup"><span data-stu-id="4a7be-118">Use the `extension` attribute to specify the file extension used to identify files that the <xref:System.Web.Compilation.BuildProvider> class supports.</span></span> <span data-ttu-id="4a7be-119">使用<xref:System.Web.Configuration.BuildProviderCollection>類別來檢查組建組態檔中的提供者。</span><span class="sxs-lookup"><span data-stu-id="4a7be-119">Use the <xref:System.Web.Configuration.BuildProviderCollection> class to examine build providers in a configuration file.</span></span> <span data-ttu-id="4a7be-120">如需有關如何設定組建提供者的詳細資訊，請參閱 < [buildProviders 項目 （ASP.NET 設定結構描述） 的](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)。</span><span class="sxs-lookup"><span data-stu-id="4a7be-120">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 <span data-ttu-id="4a7be-121">若要實作組建提供者所產生的自訂檔案類型的原始程式碼，衍生的類別<xref:System.Web.Compilation.BuildProvider>，並覆寫<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>方法來產生支援的檔案類型的原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="4a7be-121">To implement a build provider that generates source code for a custom file type, derive a class from <xref:System.Web.Compilation.BuildProvider>, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span> <span data-ttu-id="4a7be-122">產生的來源會加入至<xref:System.Web.Compilation.AssemblyBuilder>表單的 CodeDOM 圖表，或做為代表實體的原始程式碼檔案的內容中的物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-122">The generated source is added to the <xref:System.Web.Compilation.AssemblyBuilder> object in the form of a CodeDOM graph, or as content that represents a physical source code file.</span></span> <span data-ttu-id="4a7be-123">如果組建提供者需要特定的程式設計語言，請覆寫<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>屬性，以傳回<xref:System.Web.Compilation.CompilerType>針對支援的程式設計語言的物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-123">If the build provider requires a specific programming language, override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span> <span data-ttu-id="4a7be-124">如果組建提供者不需要特定的程式設計語言，不會覆寫<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>屬性; 請改用基底類別實作，這表示組建提供者可以使用任何.NET Framework 語言，例如 Visual Basic 或 C#。</span><span class="sxs-lookup"><span data-stu-id="4a7be-124">If the build provider does not require a specific programming language, do not override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property; use the base class implementation, which indicates that the build provider can use any .NET Framework language, such as Visual Basic or C#.</span></span>  
  
 <span data-ttu-id="4a7be-125">若要實作組建提供者所產生的網頁內容的原始程式碼，衍生的類別<xref:System.Web.Compilation.BuildProvider>並覆寫<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>方法，以傳回<xref:System.Type>所產生的類別如<xref:System.Web.Compilation.BuildProvider>。</span><span class="sxs-lookup"><span data-stu-id="4a7be-125">To implement a build provider that generates source code for Web content, derive a class from <xref:System.Web.Compilation.BuildProvider> and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the <xref:System.Type> for the class generated by <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="4a7be-126">覆寫<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>方法來產生類型所支援的檔案提供的原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="4a7be-126">Override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the type provided by the supported file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4a7be-127">新增自訂<xref:System.Web.Compilation.BuildProvider>類別對 Web.config 檔案在 ASP.NET 網站上的運作方式，但不適用於 ASP.NET Web 應用程式專案。</span><span class="sxs-lookup"><span data-stu-id="4a7be-127">Adding a customized <xref:System.Web.Compilation.BuildProvider> class to the Web.config file works in an ASP.NET Web site but does not work in an ASP.NET Web application project.</span></span> <span data-ttu-id="4a7be-128">在 Web 應用程式專案中，所產生的程式碼<xref:System.Web.Compilation.BuildProvider>類別不能包含在應用程式。</span><span class="sxs-lookup"><span data-stu-id="4a7be-128">In a Web application project, the code that is generated by the <xref:System.Web.Compilation.BuildProvider> class cannot be included in the application.</span></span> <span data-ttu-id="4a7be-129">如需詳細資訊，請參閱 < [ASP.NET Web 應用程式專案先行編譯概觀](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887)。</span><span class="sxs-lookup"><span data-stu-id="4a7be-129">For more information, see [ASP.NET Web Application Project Precompilation Overview](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a7be-130">下列程式碼範例說明簡單的組建提供者實作，繼承了抽象<xref:System.Web.Compilation.BuildProvider>基底類別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-130">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="4a7be-131">組建提供者會覆寫<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>， <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>，和<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>基底類別成員。</span><span class="sxs-lookup"><span data-stu-id="4a7be-131">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span> <span data-ttu-id="4a7be-132">此範例不包含實作`SampleClassGenerator`類別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-132">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="4a7be-133">如需詳細資訊，請參閱<xref:System.CodeDom.CodeCompileUnit>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="4a7be-133">For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a7be-134">初始化 <see cref="T:System.Web.Compilation.BuildProvider" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-134">Initializes a new instance of the <see cref="T:System.Web.Compilation.BuildProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-135">因為<xref:System.Web.Compilation.BuildProvider>類別是抽象的您無法建立的執行個體<xref:System.Web.Compilation.BuildProvider>直接使用建構函式。</span><span class="sxs-lookup"><span data-stu-id="4a7be-135">Because the <xref:System.Web.Compilation.BuildProvider> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.BuildProvider> directly using the constructor.</span></span>  
  
 <span data-ttu-id="4a7be-136">當衍生自<xref:System.Web.Compilation.BuildProvider>類別中覆寫建構函式來實作您的組建提供者實作的自訂初始化動作。</span><span class="sxs-lookup"><span data-stu-id="4a7be-136">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, override the constructor to implement custom initialization actions for your build provider implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeCompilerType : System.Web.Compilation.CompilerType" Usage="System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a7be-137">表示組建提供者用來產生自訂檔案類型之原始程式碼的編譯器型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-137">Represents the compiler type used by a build provider to generate source code for a custom file type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a7be-138">唯讀 <see cref="T:System.Web.Compilation.CompilerType" /> 表示用來建立虛擬路徑之原始程式碼的程式碼產生器、程式碼編譯器和編譯器設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-138">A read-only <see cref="T:System.Web.Compilation.CompilerType" /> representing the code generator, code compiler, and compiler settings used to build source code for the virtual path.</span>
          </span>
          <span data-ttu-id="4a7be-139">基底類別會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-139">The base class returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-140">使用<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>屬性來編譯原始程式碼的實作，提供設定<xref:System.Web.Compilation.BuildProvider>。</span><span class="sxs-lookup"><span data-stu-id="4a7be-140">Use the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to provide the settings for compiling source code for an implementation of <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="4a7be-141"><xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>屬性是`null`如果組建提供者不需要特定的程式碼語言來產生和編譯原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="4a7be-141">The <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property is `null` if the build provider does not require a specific code language for generating and compiling source code.</span></span>  
  
 <span data-ttu-id="4a7be-142">若要設定的值<xref:System.Web.Compilation.CompilerType>內的組建提供者實作，使用物件<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>或<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7be-142">To set the value for a <xref:System.Web.Compilation.CompilerType> object within a build provider implementation, use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> or <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method.</span></span>  
  
 <span data-ttu-id="4a7be-143"><xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>屬性會指定<xref:System.CodeDom.Compiler.CodeDomProvider>實作，用來產生和編譯原始程式碼的組建提供者。</span><span class="sxs-lookup"><span data-stu-id="4a7be-143">The <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> property specifies the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that is used to generate and compile source code for a build provider.</span></span> <span data-ttu-id="4a7be-144"><xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>屬性會定義用來將原始程式碼編譯成組件的設定。</span><span class="sxs-lookup"><span data-stu-id="4a7be-144">The <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> property defines the settings that are used to compile the source code into an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a7be-145">下列程式碼範例說明簡單的組建提供者實作，繼承了抽象<xref:System.Web.Compilation.BuildProvider>基底類別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-145">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="4a7be-146">組建提供者會覆寫<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>， <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>，和<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>基底類別成員。</span><span class="sxs-lookup"><span data-stu-id="4a7be-146">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit&#xA;override this.GenerateCode : System.Web.Compilation.AssemblyBuilder -&gt; unit" Usage="buildProvider.GenerateCode assemblyBuilder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">
          <span data-ttu-id="4a7be-147">參考組建提供者所產生之原始程式碼的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-147">The assembly builder that references the source code generated by the build provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7be-148">產生組建提供者虛擬路徑的原始程式碼，並將原始程式碼加入到指定的組件產生器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-148">Generates source code for the virtual path of the build provider, and adds the source code to a specified assembly builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-149">若要實作組建提供者所產生的自訂檔案類型的原始程式碼，衍生的類別<xref:System.Web.Compilation.BuildProvider>類別，並覆寫<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>方法來產生支援的檔案類型的原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="4a7be-149">To implement a build provider that generates source code for a custom file type, derive a class from the <xref:System.Web.Compilation.BuildProvider> class, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span>  
  
 <span data-ttu-id="4a7be-150">一般而言，組建提供者<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>實作讀取<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>屬性，會剖析內容，並將產生的原始程式碼新增至指定<xref:System.Web.Compilation.AssemblyBuilder>物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-150">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="4a7be-151">您可以參與的表單中的組件原始程式碼<xref:System.IO.TextWriter>物件或 CodeDOM 圖表。</span><span class="sxs-lookup"><span data-stu-id="4a7be-151">You can contribute source code to the assembly in the form of a <xref:System.IO.TextWriter> object or a CodeDOM graph.</span></span> <span data-ttu-id="4a7be-152">若要將透過組件的原始程式碼<xref:System.IO.TextWriter>物件，請使用<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7be-152">To add source code to the assembly through a <xref:System.IO.TextWriter> object, use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="4a7be-153">若要在 CodeDOM 圖形中加入組件原始程式碼，請使用<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7be-153">To add source code in a CodeDOM graph to the assembly, use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method.</span></span>  
  
 <span data-ttu-id="4a7be-154">如果組建提供者特定的程式設計語言產生原始程式碼，您必須覆寫<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>屬性，以傳回<xref:System.Web.Compilation.CompilerType>針對支援的程式設計語言的物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-154">If the build provider generates source code in a specific programming language, you must override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4a7be-155">下列程式碼範例說明簡單的組建提供者實作，繼承了抽象<xref:System.Web.Compilation.BuildProvider>基底類別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-155">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="4a7be-156">組建提供者會覆寫<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>， <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>，和<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>基底類別成員。</span><span class="sxs-lookup"><span data-stu-id="4a7be-156">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit&#xA;override this.GetCodeCompileUnit :  -&gt; System.CodeDom.CodeCompileUnit" Usage="buildProvider.GetCodeCompileUnit linePragmasTable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">
          <span data-ttu-id="4a7be-157">這個方法傳回時，會包含字典，其中包含原始程式碼所有關聯的行號和程式行 Pragmas。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-157">When this method returns, contains a dictionary that contains all associated line numbers and line pragmas of the source code.</span>
          </span>
          <span data-ttu-id="4a7be-158">這個參數會以未初始化的狀態傳遞。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-158">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7be-159">表示所產生 CodeDOM 圖形的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-159">Represents the container for the generated CodeDOM graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7be-160">
            <see cref="T:System.Web.Compilation.BuildProvider" /> 執行個體所產生之 CodeDOM 圖形的容器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-160">The container for the CodeDOM graph that is generated by the <see cref="T:System.Web.Compilation.BuildProvider" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-161">這個方法可透過<xref:System.Web.Compilation.ClientBuildManager>Visual Studio 中支援的語法反白顯示和設計工具類別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-161">This method can be used through the <xref:System.Web.Compilation.ClientBuildManager> class for syntax highlighting and designer support in Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string&#xA;override this.GetCustomString : System.CodeDom.Compiler.CompilerResults -&gt; string" Usage="buildProvider.GetCustomString results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="4a7be-162">組建提供者之虛擬路徑的編譯結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-162">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7be-163">產生要在已編譯之組件中保留的字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-163">Generates a string to be persisted in the compiled assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7be-164">要在組建環境中保留的字串，如果 <see cref="T:System.Web.Compilation.BuildProvider" /> 執行個體不實作 <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-164">A string to be persisted in the build environment, or <see langword="null" /> if the <see cref="T:System.Web.Compilation.BuildProvider" /> instance does not implement <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-165"><xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>方法<xref:System.Web.Compilation.BuildManager>物件建立輸入虛擬路徑，並呼叫的組建提供者的執行個體<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>方法<xref:System.Web.Compilation.BuildProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-165">The <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> method of a <xref:System.Web.Compilation.BuildManager> object creates an instance of a build provider for an input virtual path, and calls the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method on the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="4a7be-166">基底<xref:System.Web.Compilation.BuildProvider>類別會傳回`null`for<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>方法，指出<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>未實作。</span><span class="sxs-lookup"><span data-stu-id="4a7be-166">The base <xref:System.Web.Compilation.BuildProvider> class returns `null` for the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method, indicating that <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> is not implemented.</span></span>  
  
 <span data-ttu-id="4a7be-167">特定的組建提供者實作可實作<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>代替<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7be-167">Certain build provider implementations can implement <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> in place of the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="4a7be-168">A<xref:System.Web.Compilation.BuildProvider>物件通常會使用<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>返回<xref:System.Type>虛擬路徑的物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-168">A <xref:System.Web.Compilation.BuildProvider> object typically uses <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> to return a <xref:System.Type> object for a virtual path.</span></span> <span data-ttu-id="4a7be-169">不過，<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>方法可以用來表示<xref:System.Web.Compilation.BuildProvider>物件可以產生多個型別，從虛擬路徑。</span><span class="sxs-lookup"><span data-stu-id="4a7be-169">However, the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method can be used to indicate that a <xref:System.Web.Compilation.BuildProvider> object can generate multiple types from a virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerType : unit -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a7be-170">傳回應用程式中預設語言的編譯器設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-170">Returns the compiler settings for the default language in the application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7be-171">表示應用程式中預設語言之編譯器設定的 <see cref="T:System.Web.Compilation.CompilerType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-171">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the default language in the application.</span>
          </span>
          <span data-ttu-id="4a7be-172">基底類別會根據應用程式組態檔傳回預設的編譯器。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-172">The base class returns the default compiler based on the application configuration file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-173">使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>方法來檢查組建提供者的預設編譯器型別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-173">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span> <span data-ttu-id="4a7be-174">使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>方法來檢查設定中的特定語言名稱的組建提供者的編譯器型別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-174">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in a build provider for a specific language name.</span></span>  
  
 <span data-ttu-id="4a7be-175">基底<xref:System.Web.Compilation.BuildProvider>類別會決定預設編譯器型別使用`defaultLanguage`屬性應用程式組態檔的區段中的值。</span><span class="sxs-lookup"><span data-stu-id="4a7be-175">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the `defaultLanguage` attribute value in the  section of the application configuration file.</span></span> <span data-ttu-id="4a7be-176">如果沒有任何預設語言設定編譯區段中的，預設編譯器型別會設定使用<xref:Microsoft.VisualBasic.VBCodeProvider>語言提供者。</span><span class="sxs-lookup"><span data-stu-id="4a7be-176">If there is no default language setting in the compilation section, the default compiler type is set using the <xref:Microsoft.VisualBasic.VBCodeProvider> language provider.</span></span>  
  
 <span data-ttu-id="4a7be-177">當衍生自<xref:System.Web.Compilation.BuildProvider>類別，您可以使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>若要設定<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>內實作的屬性。</span><span class="sxs-lookup"><span data-stu-id="4a7be-177">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property within your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberSignature Language="F#" Value="member this.GetDefaultCompilerTypeForLanguage : string -&gt; System.Web.Compilation.CompilerType" Usage="buildProvider.GetDefaultCompilerTypeForLanguage language" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="4a7be-178">程式碼語言名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-178">A code language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7be-179">傳回根據指定語言之組建提供者的編譯器設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-179">Returns the compiler settings for the build provider based on the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7be-180">表示根據指定語言之組建提供者編譯器設定的 <see cref="T:System.Web.Compilation.CompilerType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-180">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the build provider based on the specified language.</span>
          </span>
          <span data-ttu-id="4a7be-181">基底類別會根據應用程式組態檔傳回預設的編譯器語言設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-181">The base class returns the default compiler settings for the language based on the application configuration file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-182">使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>方法來檢查設定中的特定語言名稱的組建提供者的編譯器型別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-182">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in the build provider for a specific language name.</span></span> <span data-ttu-id="4a7be-183">使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>方法來檢查組建提供者的預設編譯器型別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-183">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span>  
  
 <span data-ttu-id="4a7be-184">基底<xref:System.Web.Compilation.BuildProvider>類別會決定預設編譯器型別會使用<xref:System.Web.Configuration.Compiler>中的項目<xref:System.Web.Configuration.CompilationSection.Compilers%2A>屬性<xref:System.Web.Configuration.CompilationSection>組態檔的物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-184">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the <xref:System.Web.Configuration.Compiler> elements in the <xref:System.Web.Configuration.CompilationSection.Compilers%2A> property of the <xref:System.Web.Configuration.CompilationSection> object for the configuration file.</span></span> <span data-ttu-id="4a7be-185">這就相當於檢查和設定檔的區段中的項目中的項目。</span><span class="sxs-lookup"><span data-stu-id="4a7be-185">This is equivalent to examining the  elements in the  and the  elements in the  sections of the configuration file.</span></span> <span data-ttu-id="4a7be-186">例如，對於`language`值 VB，基底類別方法會傳回<xref:System.Web.Compilation.CompilerType>物件，對應至所設定的設定執行個體<xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="4a7be-186">For example, for the `language` value VB, the base class method returns a <xref:System.Web.Compilation.CompilerType> object that corresponds to the configured settings for an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="4a7be-187">當您衍生自<xref:System.Web.Compilation.BuildProvider>類別，您可以使用<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>若要設定<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>實作所支援之語言的屬性值。</span><span class="sxs-lookup"><span data-stu-id="4a7be-187">When you derive from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property value for the language supported by your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4a7be-188">
            <paramref name="language" /> 為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-188">
              <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="4a7be-189">
            <paramref name="language" /> 與組建提供者的組態編譯器不相符。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-189">
              <paramref name="language" /> does not match a configured compiler for the build provider.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type&#xA;override this.GetGeneratedType : System.CodeDom.Compiler.CompilerResults -&gt; Type" Usage="buildProvider.GetGeneratedType results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="4a7be-190">組建提供者之虛擬路徑的編譯結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-190">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7be-191">傳回組建提供者從虛擬路徑產生的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-191">Returns a type generated by the build provider from the virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7be-192">組建提供者為虛擬路徑產生的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-192">The type that is generated by the build provider for the virtual path.</span>
          </span>
          <span data-ttu-id="4a7be-193">基底類別會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-193">The base class returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-194">若要實作組建提供者所產生的 Web 內容，例如.aspx 檔案的原始程式碼，衍生的類別<xref:System.Web.Compilation.BuildProvider>類別並覆寫<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>方法來傳回組建提供者所產生的型別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-194">To implement a build provider that generates source code for Web content such as .aspx files, derive a class from the <xref:System.Web.Compilation.BuildProvider> class and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the type generated by the build provider.</span></span>  
  
 <span data-ttu-id="4a7be-195">ASP.NET 建置系統會將檔案編譯每個組建提供者，並產生<xref:System.CodeDom.Compiler.CompilerResults>物件，傳遞至<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7be-195">The ASP.NET build system compiles files for each build provider, and generates a <xref:System.CodeDom.Compiler.CompilerResults> object, which is passed to the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="4a7be-196">一般而言，組建提供者<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>實作會使用<xref:System.Reflection.Assembly.GetType%2A>方法<xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>屬性輸入`results`来傳回提供的型別物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-196">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementation uses the <xref:System.Reflection.Assembly.GetType%2A> method on the <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> property of the input `results` object to return the provided type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags&#xA;override this.GetResultFlags : System.CodeDom.Compiler.CompilerResults -&gt; System.Web.Compilation.BuildProviderResultFlags" Usage="buildProvider.GetResultFlags results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="4a7be-197">組建提供者之虛擬路徑的編譯結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-197">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7be-198">傳回指示建立虛擬路徑需要之動作的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-198">Returns a value indicating actions required when a virtual path is built.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7be-199">
            <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> 值指出在 ASP.NET 建置環境中建立虛擬路徑後需要的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-199">A <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> value indicating actions required after the virtual path is built within the ASP.NET build environment.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-200"><xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>時使用的執行個體方法會使用 ASP.NET 建置環境<xref:System.Web.Compilation.BuildProvider>類別來建置的檔案，並載入已編譯的組件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-200">The <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method is used by the ASP.NET build environment when using instances of the <xref:System.Web.Compilation.BuildProvider> class to build files and load the compiled assemblies.</span></span>  
  
 <span data-ttu-id="4a7be-201">基底<xref:System.Web.Compilation.BuildProvider>類別方法會傳回<xref:System.Web.Compilation.BuildProviderResultFlags.Default>欄位值，指出建立虛擬路徑時，不需要任何特殊動作。</span><span class="sxs-lookup"><span data-stu-id="4a7be-201">The base <xref:System.Web.Compilation.BuildProvider> class method returns the <xref:System.Web.Compilation.BuildProviderResultFlags.Default> field value, indicating that no special action is required when the virtual path is built.</span></span>  
  
 <span data-ttu-id="4a7be-202">當衍生自<xref:System.Web.Compilation.BuildProvider>類別，您可以實作<xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>方法，以傳回不同<xref:System.Web.Compilation.BuildProviderResultFlags>為您的自訂檔案類型或虛擬路徑的值。</span><span class="sxs-lookup"><span data-stu-id="4a7be-202">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can implement the <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method to return a different <xref:System.Web.Compilation.BuildProviderResultFlags> value for your custom file type or virtual path.</span></span> <span data-ttu-id="4a7be-203">例如，如果重建您的虛擬路徑，必須將所屬<xref:System.AppDomain>重新載入，您可以傳回的物件<xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange>列舉值，從您<xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7be-203">For example, if a rebuild of your virtual path requires the containing <xref:System.AppDomain> object to be reloaded, you can return the <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> enumeration value from your <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a7be-204">開啟文字閱讀器以從虛擬路徑讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-204">Opens a text reader for reading from a virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberSignature Language="F#" Value="member this.OpenReader : unit -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a7be-205">開啟文字閱讀器，以從目前的組建提供者物件的虛擬路徑讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-205">Opens a text reader for reading from the virtual path of the current build provider object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7be-206">開啟的 <see cref="T:System.IO.TextReader" />，可以用來讀取 <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-206">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-207">使用<xref:System.IO.TextReader.Read%2A>方法傳回<xref:System.IO.TextReader>物件來讀取的內容<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>屬性<xref:System.Web.Compilation.BuildProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-207">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property for a <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="4a7be-208">之後呼叫<xref:System.Web.Compilation.BuildProvider.OpenReader%2A>方法，則必須使用<xref:System.IO.TextReader.Close%2A>方法以關閉<xref:System.IO.TextReader>物件，並釋放相關聯的系統資源。</span><span class="sxs-lookup"><span data-stu-id="4a7be-208">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenReader : string -&gt; System.IO.TextReader" Usage="buildProvider.OpenReader virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="4a7be-209">要讀取的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-209">The virtual path to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7be-210">開啟文字閱讀器以從指定的虛擬路徑讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-210">Opens a text reader for reading from a specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7be-211">開啟的 <see cref="T:System.IO.TextReader" />，可以用來讀取指定虛擬路徑的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-211">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the specified virtual path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-212">使用<xref:System.IO.TextReader.Read%2A>方法在傳回<xref:System.IO.TextReader>物件讀取的虛擬路徑的內容。</span><span class="sxs-lookup"><span data-stu-id="4a7be-212">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="4a7be-213">之後呼叫<xref:System.Web.Compilation.BuildProvider.OpenReader%2A>方法，則必須使用<xref:System.IO.TextReader.Close%2A>方法以關閉<xref:System.IO.TextReader>物件，並釋放相關聯的系統資源。</span><span class="sxs-lookup"><span data-stu-id="4a7be-213">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4a7be-214">開啟資料流以從虛擬路徑讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-214">Opens a stream for reading from a virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberSignature Language="F#" Value="member this.OpenStream : unit -&gt; System.IO.Stream" Usage="buildProvider.OpenStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4a7be-215">開啟資料流，以讀取目前的組建提供者物件的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-215">Opens a stream for reading the virtual path of the current build provider object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7be-216">開啟的 <see cref="T:System.IO.Stream" />，可以用來讀取 <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" /> 的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-216">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-217">使用<xref:System.IO.Stream.Read%2A>方法傳回<xref:System.IO.Stream>物件來讀取的虛擬路徑的內容<xref:System.Web.Compilation.BuildProvider>物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-217">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path for the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="4a7be-218">之後呼叫<xref:System.Web.Compilation.BuildProvider.OpenStream%2A>方法，則必須使用<xref:System.IO.Stream.Close%2A>方法以關閉<xref:System.IO.Stream>物件，並釋放相關聯的系統資源。</span><span class="sxs-lookup"><span data-stu-id="4a7be-218">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.OpenStream : string -&gt; System.IO.Stream" Usage="buildProvider.OpenStream virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="4a7be-219">要讀取的虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-219">The virtual path to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7be-220">開啟資料流以從指定虛擬路徑讀取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-220">Opens a stream for reading from a specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4a7be-221">開啟的 <see cref="T:System.IO.Stream" />，可以用來讀取指定虛擬路徑的內容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-221">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the specified virtual path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-222">使用<xref:System.IO.Stream.Read%2A>方法在傳回<xref:System.IO.Stream>物件讀取的虛擬路徑的內容。</span><span class="sxs-lookup"><span data-stu-id="4a7be-222">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="4a7be-223">之後呼叫<xref:System.Web.Compilation.BuildProvider.OpenStream%2A>方法，則必須使用<xref:System.IO.Stream.Close%2A>方法以關閉<xref:System.IO.Stream>物件，並釋放相關聯的系統資源。</span><span class="sxs-lookup"><span data-stu-id="4a7be-223">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberSignature Language="F#" Value="abstract member ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit&#xA;override this.ProcessCompileErrors : System.CodeDom.Compiler.CompilerResults -&gt; unit" Usage="buildProvider.ProcessCompileErrors results" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="4a7be-224">編譯器結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-224">Compiler results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7be-225">在衍生類別中覆寫時，可讓您檢閱編譯器錯誤訊息，以便於修改它們提供更多資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-225">When overridden in a derived class, enables you to review compiler error messages so that you can modify them to provide more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-226">因此，為了讓使用者更有幫助的錯誤文字顯示之前，您可以修改編譯器錯誤，您通常覆寫這個方法。</span><span class="sxs-lookup"><span data-stu-id="4a7be-226">You typically override this method so that you can modify compiler errors before they are displayed in order to make the error text more helpful to the user.</span></span> <span data-ttu-id="4a7be-227">這種的案例，其中您知道特定錯誤的內容，可提供資訊給使用者有關如何加以修正。</span><span class="sxs-lookup"><span data-stu-id="4a7be-227">This is useful in scenarios where you know the context of certain errors and can provide information to the user about how to fix them.</span></span> <span data-ttu-id="4a7be-228">原始的編譯器錯誤訊息是通常特有的特定語言建構，而且可能不會對解決方案的真正原因很明顯的使用者。</span><span class="sxs-lookup"><span data-stu-id="4a7be-228">The original compiler error message is usually specific to a particular language construct and might not make the real cause or solution obvious to the user.</span></span>  
  
 <span data-ttu-id="4a7be-229">您可以使用來存取錯誤<xref:System.CodeDom.Compiler.CompilerResults>傳遞給方法的物件。</span><span class="sxs-lookup"><span data-stu-id="4a7be-229">You can access the errors by using the <xref:System.CodeDom.Compiler.CompilerResults> object that is passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedAssemblies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a7be-230">表示使用組建提供者產生之原始碼編譯的組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-230">Represents the assemblies to compile with the source generated by the build provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a7be-231">可由組建提供者產生之原始程式碼參考的唯讀組件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-231">A read-only collection of assemblies that can be referenced by the source code generated by the build provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-232">ASP.NET 建置環境初始化組件可供參考，組建提供者的集合。</span><span class="sxs-lookup"><span data-stu-id="4a7be-232">The ASP.NET build environment initializes the collection of assemblies that are available for reference by the build provider.</span></span> <span data-ttu-id="4a7be-233">組建提供者所產生的原始程式碼可以參考的組件中使用的公用型別。</span><span class="sxs-lookup"><span data-stu-id="4a7be-233">The source code generated by a build provider can use public types in the referenced assemblies.</span></span> <span data-ttu-id="4a7be-234">參考的組件集合是由其他內建的 ASP.NET 應用程式的組件和組態檔中的項目中列出的組件所組成。</span><span class="sxs-lookup"><span data-stu-id="4a7be-234">The referenced assembly collection consists of other assemblies built in the ASP.NET application, and assemblies listed in the  element in the configuration file.</span></span>  
  
 <span data-ttu-id="4a7be-235">如果組建提供者會產生參考其他組件的原始程式碼，組建提供者會將新增使用其他組件<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7be-235">If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="4a7be-236">在 ASP.NET 建置環境會解析外部型別期間使用這兩個參考的組件所加入的組件編譯組建提供者和預設集合中的組件可供參考。</span><span class="sxs-lookup"><span data-stu-id="4a7be-236">The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</span></span>  
  
 <span data-ttu-id="4a7be-237"><xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A>集合不包含透過其他組建提供者所加入的參考的組件<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="4a7be-237">The <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> collection does not include assemblies that are added for reference by other build providers through the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberSignature Language="F#" Value="static member RegisterBuildProvider : string * Type -&gt; unit" Usage="System.Web.Compilation.BuildProvider.RegisterBuildProvider (extension, providerType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="4a7be-238">組建提供者適用的副檔名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-238">The file-name extension that the build provider is for.</span>
          </span>
        </param>
        <param name="providerType">
          <span data-ttu-id="4a7be-239">組建提供者類別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-239">The build provider class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4a7be-240">註冊組建提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-240">Registers a build provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-241">您可以使用這個方法來註冊組建提供者，而不是在 Web.config 檔案中定義它們。</span><span class="sxs-lookup"><span data-stu-id="4a7be-241">You can use this method to register build providers instead of defining them in the Web.config file.</span></span> <span data-ttu-id="4a7be-242">如需組建提供者的詳細資訊，請參閱<xref:System.Web.Compilation.BuildProvider>類別以及[buildProviders 項目 （ASP.NET 設定結構描述） 的](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)。</span><span class="sxs-lookup"><span data-stu-id="4a7be-242">For more information about build providers, see the <xref:System.Web.Compilation.BuildProvider> class and [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a7be-243">表示此組建提供者實作要建立之檔案。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-243">Represents the file to be built by this build provider implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a7be-244">指定此組建提供者要編譯之檔案的虛擬路徑的唯讀字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-244">A read-only string that specifies the virtual path of a file to be compiled by this build provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-245">虛擬路徑<xref:System.Web.Compilation.BuildProvider>物件是在編譯組建提供者檔案的路徑。</span><span class="sxs-lookup"><span data-stu-id="4a7be-245">The virtual path of a <xref:System.Web.Compilation.BuildProvider> object is the path to the file that is being compiled by the build provider.</span></span> <span data-ttu-id="4a7be-246">例如，如果您已設定自訂<xref:System.Web.Compilation.BuildProvider>類別來建立具有自訂延伸模組的.abc，網站中的所有檔案，WebSite1，名為您的網站，而且網站包含名為 Example.abc，<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>屬性包含值`/WebSite1/Example.abc`.</span><span class="sxs-lookup"><span data-stu-id="4a7be-246">For example, if you have configured a custom <xref:System.Web.Compilation.BuildProvider> class to build all files in the Web site with the custom extension of .abc, if your Web site is named WebSite1, and the Web site contains a file named Example.abc, the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property contains the value `/WebSite1/Example.abc`.</span></span>  
  
 <span data-ttu-id="4a7be-247">在應用程式中的每個檔案的副檔名決定檔案類型，而對應的檔案類型的組建提供者。</span><span class="sxs-lookup"><span data-stu-id="4a7be-247">The file extension of each file within the application determines the file type, and the corresponding build provider for the file type.</span></span> <span data-ttu-id="4a7be-248">ASP.NET 建置環境初始化<xref:System.Web.Compilation.BuildProvider>物件中每個檔案為基礎的檔案類型，並使用<xref:System.Web.Compilation.BuildProvider>方法，以產生每個檔案的來源。</span><span class="sxs-lookup"><span data-stu-id="4a7be-248">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> object for each file based on the file type, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source for each file.</span></span>  
  
 <span data-ttu-id="4a7be-249">如需有關如何設定組建提供者的詳細資訊，請參閱 < [buildProviders 項目 （ASP.NET 設定結構描述） 的](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)。</span><span class="sxs-lookup"><span data-stu-id="4a7be-249">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPathDependencies : System.Collections.ICollection" Usage="System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4a7be-250">表示必須在組建提供者產生程式碼之前先建立的虛擬路徑集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-250">Represents a collection of virtual paths that must be built before the build provider generates code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4a7be-251">字串的唯讀集合，表示組建提供者的這個執行個體所依賴之虛擬路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="4a7be-251">A read-only collection of strings, representing the virtual paths that this instance of the build provider is dependent on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4a7be-252"><xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A>屬性是集合，必須先編譯虛擬路徑的<xref:System.Web.Compilation.BuildProvider>執行個體會產生原始程式碼。</span><span class="sxs-lookup"><span data-stu-id="4a7be-252">The <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> property is a collection of virtual paths that must be compiled before the <xref:System.Web.Compilation.BuildProvider> instance generates source code.</span></span> <span data-ttu-id="4a7be-253">來自中的虛擬路徑的組件<xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A>會新增編譯參考為<xref:System.Web.Compilation.BuildProvider>執行個體。</span><span class="sxs-lookup"><span data-stu-id="4a7be-253">The assemblies from the virtual paths in <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> are added as references to the compilation for the <xref:System.Web.Compilation.BuildProvider> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>