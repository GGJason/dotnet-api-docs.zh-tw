<Type Name="IAssemblyPostProcessor" FullName="System.Web.Compilation.IAssemblyPostProcessor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ffd3a317707e04d0b4ea7c0827b8fd6ce46fff3f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30532132" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAssemblyPostProcessor implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IAssemblyPostProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAssemblyPostProcessor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAssemblyPostProcessor : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e4dff-101">定義類別實作的方法，用來在已建置組件後處理組件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e4dff-101">Defines the method a class implements to process an assembly after the assembly has been built.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4dff-102">已編譯之後，實作這個介面的類別可以存取組件。</span><span class="sxs-lookup"><span data-stu-id="e4dff-102">A class implementing this interface can access an assembly after it has been compiled.</span></span> <span data-ttu-id="e4dff-103"><xref:System.Web.Compilation.AssemblyBuilder>類別編譯組件，並接著會檢查以查看是否<xref:System.Web.Compilation.IAssemblyPostProcessor>介面已註冊的 Web 組態檔中。</span><span class="sxs-lookup"><span data-stu-id="e4dff-103">The <xref:System.Web.Compilation.AssemblyBuilder> class compiles assemblies and then checks to see whether an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface has been registered in the Web configuration file.</span></span> <span data-ttu-id="e4dff-104">如果是這樣，<xref:System.Web.Compilation.AssemblyBuilder>執行個體呼叫<xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A>方法<xref:System.Web.Compilation.IAssemblyPostProcessor>介面，以執行任何動作，在編譯之後，以及之前載入組件。</span><span class="sxs-lookup"><span data-stu-id="e4dff-104">If so, the <xref:System.Web.Compilation.AssemblyBuilder> instance calls the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method for the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface to perform any action after the compilation and before loading the assembly.</span></span> <span data-ttu-id="e4dff-105">例如，分析工具無法實作這個介面可建立探查組件中。</span><span class="sxs-lookup"><span data-stu-id="e4dff-105">For example, a profiler tool could implement this interface to establish probes in the assembly.</span></span>  
  
 <span data-ttu-id="e4dff-106">當<xref:System.Web.Compilation.IAssemblyPostProcessor>介面註冊、 ASP.NET 應用程式和其組件將一律會編譯偵錯模式中。</span><span class="sxs-lookup"><span data-stu-id="e4dff-106">When an <xref:System.Web.Compilation.IAssemblyPostProcessor> interface is registered, the ASP.NET application and its assemblies will always be compiled in debug mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4dff-107">下列程式碼範例示範如何建立實作<xref:System.Web.Compilation.IAssemblyPostProcessor>介面，並將其註冊 Web 應用程式的 Web.config 檔案中。</span><span class="sxs-lookup"><span data-stu-id="e4dff-107">The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.</span></span>  
  
 <span data-ttu-id="e4dff-108">程式碼範例的第一個部分會建立名為類別`Samples.Process.postProcessTest`實作<xref:System.Web.Compilation.IAssemblyPostProcessor>介面。</span><span class="sxs-lookup"><span data-stu-id="e4dff-108">The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface.</span></span> <span data-ttu-id="e4dff-109">這個類別會執行寫入檔案的簡單動作時<xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="e4dff-109">This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.</span></span>  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 <span data-ttu-id="e4dff-110">將類別編譯為.dll 檔案與命令`csc /target:library postProcessTest.cs`。</span><span class="sxs-lookup"><span data-stu-id="e4dff-110">Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`.</span></span> <span data-ttu-id="e4dff-111">將產生的.dll 檔加入至 ASP.NET 應用程式的 Bin 資料夾，並在 Web.config 檔案中，登錄此.dll 檔，如下列程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="e4dff-111">Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.</span></span>  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 <span data-ttu-id="e4dff-112">當使用者造訪的網站時，動態編譯的 Web 應用程式和檔案會以 C:\compile 寫入 MyTest.txt。</span><span class="sxs-lookup"><span data-stu-id="e4dff-112">When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\compile.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="PostProcessAssembly">
      <MemberSignature Language="C#" Value="public void PostProcessAssembly (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostProcessAssembly(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostProcessAssembly (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostProcessAssembly(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="e4dff-113">組件的路徑。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4dff-113">The path to the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e4dff-114">在載入組件之前呼叫，以允許實作的類別修改組件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e4dff-114">Called before the assembly is loaded to allow the implementing class to modify the assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e4dff-115"><xref:System.Web.Compilation.AssemblyBuilder>編譯組件之後，類別會呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="e4dff-115">The <xref:System.Web.Compilation.AssemblyBuilder> class calls this method after the assembly has been compiled.</span></span> <span data-ttu-id="e4dff-116">在此方法應該包含要載入之組件之前先採取任何動作。</span><span class="sxs-lookup"><span data-stu-id="e4dff-116">Any actions to be taken before loading the assembly should be included in this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e4dff-117">下列程式碼範例示範如何建立實作<xref:System.Web.Compilation.IAssemblyPostProcessor>介面，並將其註冊 Web 應用程式的 Web.config 檔案中。</span><span class="sxs-lookup"><span data-stu-id="e4dff-117">The following code example demonstrates how to create an implementation of the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface, and register it in the Web.config file of a Web application.</span></span>  
  
 <span data-ttu-id="e4dff-118">程式碼範例的第一個部分會建立名為類別`Samples.Process.postProcessTest`實作<xref:System.Web.Compilation.IAssemblyPostProcessor>介面。</span><span class="sxs-lookup"><span data-stu-id="e4dff-118">The first part of the code example creates a class named `Samples.Process.postProcessTest` that implements the <xref:System.Web.Compilation.IAssemblyPostProcessor> interface.</span></span> <span data-ttu-id="e4dff-119">這個類別會執行寫入檔案的簡單動作時<xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A>方法呼叫。</span><span class="sxs-lookup"><span data-stu-id="e4dff-119">This class performs the simple action of writing a file when the <xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A> method is called.</span></span>  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 <span data-ttu-id="e4dff-120">將類別編譯為.dll 檔案與命令`csc /target:library postProcessTest.cs`。</span><span class="sxs-lookup"><span data-stu-id="e4dff-120">Compile the class into a .dll file with the command `csc /target:library postProcessTest.cs`.</span></span> <span data-ttu-id="e4dff-121">將產生的.dll 檔加入至 ASP.NET 應用程式的 Bin 資料夾，並在 Web.config 檔案中，登錄此.dll 檔，如下列程式碼所示。</span><span class="sxs-lookup"><span data-stu-id="e4dff-121">Add the resulting .dll file to the Bin folder of an ASP.NET application and register the .dll in the Web.config file, as shown in the following code.</span></span>  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 <span data-ttu-id="e4dff-122">當使用者造訪的網站時，動態編譯的 Web 應用程式和檔案會以 C:\compile 寫入 MyTest.txt。</span><span class="sxs-lookup"><span data-stu-id="e4dff-122">When a user visits the Web site, the Web application is dynamically compiled and the file MyTest.txt will be written to C:\compile.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>