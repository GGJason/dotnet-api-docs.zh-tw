<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ns-System.AddIn.Contract.Automation.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5a83ea4b-dd12-480b-bfc8-267272ef18645f80cdf9dfec8da7507dfb3139c0514563bef75e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5f80cdf9dfec8da7507dfb3139c0514563bef75e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df6cf590aa3087f6c7c202712eee781c6a3c8f96</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/10/2018</xliffext:ms.lasthandoff>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;see cref="N:System.AddIn.Contract.Automation" /&gt;</ph> namespace contains interfaces that components use to access type information and invoke type members.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="N:System.AddIn.Contract.Automation" /&gt;</ph> 命名空間包含介面，元件可使用此介面來存取型別資訊及叫用型別成員。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the interfaces in the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation?displayProperty=nameWithType&gt;</ph> namespace to enable components to access type information for a remote object without having direct access to the <ph id="ph2">&lt;xref:System.Type&gt;</ph> of the remote object.</source>
          <target state="translated">使用中的介面<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation?displayProperty=nameWithType&gt;</ph>命名空間，以啟用存取遠端物件的類型資訊的元件，而不需要直接存取<ph id="ph2">&lt;xref:System.Type&gt;</ph>遠端物件。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation?displayProperty=nameWithType&gt;</ph> namespace defines reflection functionality for components that use the interfaces and structures in the <ph id="ph2">&lt;xref:System.AddIn.Contract?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.AddIn.Contract.Automation?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.AddIn.Contract.Collections?displayProperty=nameWithType&gt;</ph> namespaces to communicate.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Automation?displayProperty=nameWithType&gt;</ph>命名空間會定義元件所使用的介面和結構中的反映功能<ph id="ph2">&lt;xref:System.AddIn.Contract?displayProperty=nameWithType&gt;</ph>， <ph id="ph3">&lt;xref:System.AddIn.Contract.Automation?displayProperty=nameWithType&gt;</ph>，和<ph id="ph4">&lt;xref:System.AddIn.Contract.Collections?displayProperty=nameWithType&gt;</ph>通訊的命名空間。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The interfaces in these namespaces are also called contracts.</source>
          <target state="translated">這些命名空間中的介面亦稱為合約。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>All contracts derive from the <ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> interface.</source>
          <target state="translated">所有合約都衍生自<ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using contracts to manage the communication between components, you must implement the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph> interface in a type to expose the type information to other components.</source>
          <target state="translated">當使用合約管理元件之間的通訊，您必須實作<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph>介面公開給其他元件的類型資訊的型別中。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Components can then access the members of the type by calling the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph> method of the interface to get an <ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>.</source>
          <target state="translated">元件可以藉由呼叫然後存取該型別的成員<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph>方法的介面，以取得<ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other interfaces and structures in the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation?displayProperty=nameWithType&gt;</ph> namespace provide access to type information for delegates, properties, methods, events, and fields.</source>
          <target state="translated">另一個介面和結構中<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation?displayProperty=nameWithType&gt;</ph>命名空間提供的存取權委派、 屬性、 方法、 事件和欄位的型別資訊。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Components can use the contracts in the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation?displayProperty=nameWithType&gt;</ph> namespace to access type information for an object that is in a different process or application domain, or in the same process or application domain.</source>
          <target state="translated">元件可以使用中的合約<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation?displayProperty=nameWithType&gt;</ph>命名空間的物件是在不同處理序或應用程式定義域，或是在相同的程序或應用程式定義域的存取類型資訊。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>