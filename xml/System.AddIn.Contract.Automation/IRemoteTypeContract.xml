<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRemoteTypeContract.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e828623e05f0027402df3db956a017bc005a571e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e828623e05f0027402df3db956a017bc005a571e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>Defines a contract that components can use to access type information and invoke members across application domain and process boundaries.</source>
          <target state="translated">定義合約，元件可使用它來存取型別資訊，並且跨應用程式定義域和處理序界限叫用成員。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To get an <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>, components can call the <ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph> method of an object that implements the <ph id="ph3">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph> interface.</source>
          <target state="translated">若要取得<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>，元件可以呼叫<ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph>物件實作的方法<ph id="ph3">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To get information about the type of an object, components call the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A&gt;</ph> method.</source>
          <target state="translated">若要取得的物件類型的相關資訊，請呼叫元件<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To get information about the members of an object, components call one of the methods that returns information about a particular kind of member.</source>
          <target state="translated">若要取得的成員物件的相關資訊，元件會呼叫其中一個方法會傳回特定成員類型的相關資訊。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>For example, to get information about the events of an object, components can use the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A&gt;</ph> method.</source>
          <target state="translated">例如，若要取得事件的相關資訊的物件，元件可以使用<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To invoke a member of an object, components use the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A&gt;</ph> method.</source>
          <target state="translated">要叫用物件的成員，元件會使用<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Returns the canonical name of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的正式名稱。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>The canonical name of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的正式名稱。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>The canonical name is a globally unique name, such as a fully qualified type name.</source>
          <target state="translated">正式名稱是全域唯一的名稱，例如完整限定的類型名稱。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>assembly name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>fully qualified type name<ept id="p2">*</ept>&gt; are recommended for managed types.</source>
          <target state="translated">字串格式<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>組件名稱<ept id="p1">*</ept>&gt;， <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>完整限定的類型名稱<ept id="p2">*</ept>&gt; 建議使用的 managed 型別。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>type library name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>type name<ept id="p2">*</ept>&gt; are recommended for COM types.</source>
          <target state="translated">字串格式<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>類型程式庫名稱<ept id="p1">*</ept>&gt;， <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>型別名稱<ept id="p2">*</ept>&gt; COM 類型的建議。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Do not change the canonical name for a type after the type is published.</source>
          <target state="translated">發行類型之後，請勿變更類型的正式名稱。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</source>
          <target state="translated">變更標準元件中斷相容性層級的元件和用戶端，已使用的類型之間的未來版本中的型別名稱。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>The name of an event of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的事件名稱。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋事件的方式。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> that provides access to a specified event of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph>，提供存取目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定事件。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> that provides access to the specified event, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">可提供存取指定之事件 (如果找到的話) 的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the events.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋事件的方式。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> objects that provides access to the specified events of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> 物件的集合，這個集合可提供存取目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定事件。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> objects that provides access to the events that match the specified binding constraints; otherwise, an empty <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph>，可提供存取符合指定之繫結條件約束的事件，否則為空白 <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The name of a field of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的欄位名稱。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the field.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋欄位的方式。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> that provides access to a specified field of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph>，提供存取目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定欄位。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> that provides access to the specified field, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">可提供存取指定之欄位 (如果找到的話) 的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the fields.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋欄位的方式。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> objects that provides access to the specified fields of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> 物件的集合，這個集合可提供存取目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定欄位。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> objects that provides access to the fields that match the specified binding constraints; otherwise, an empty <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph>，可提供存取符合指定之繫結條件約束的欄位，否則為空白 <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>The canonical name of an interface that is implemented by the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">由目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 所實作介面的正式名稱。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Returns an interface that is implemented by the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 所實作的介面。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that represents the interface with the specified canonical name that this <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> implements.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>，表示這個 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 所實作且具有指定之正式名稱的介面。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> does not implement an interface with the specified canonical name.</source>
          <target state="translated">如果這個 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 未實作具有指定之正式名稱的介面，則為 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>A canonical name is a globally unique name, such as a GUID.</source>
          <target state="translated">正式名稱是全域唯一的名稱，例如 GUID。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>assembly name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>fully qualified type name<ept id="p2">*</ept>&gt; are recommended for managed types.</source>
          <target state="translated">字串格式<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>組件名稱<ept id="p1">*</ept>&gt;， <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>完整限定的類型名稱<ept id="p2">*</ept>&gt; 建議使用的 managed 型別。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>type library name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>type name<ept id="p2">*</ept>&gt; are recommended for COM types.</source>
          <target state="translated">字串格式<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>類型程式庫名稱<ept id="p1">*</ept>&gt;， <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>型別名稱<ept id="p2">*</ept>&gt; COM 類型的建議。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Do not change the canonical name for a type after the type is published.</source>
          <target state="translated">發行類型之後，請勿變更類型的正式名稱。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</source>
          <target state="translated">變更標準元件中斷相容性層級的元件和用戶端，已使用的類型之間的未來版本中的型別名稱。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces">
          <source>Returns the interfaces that are implemented by the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 所實作的介面。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> objects that represent all the interfaces that are implemented by the current <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>，表示由目前 <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 所實作的所有介面。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The name of a member of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的成員名稱。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The name can represent multiple members that have the same name.</source>
          <target state="translated">這個名稱可以表示多個同名成員。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> values that specifies the members to search for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> 值的位元組合，指定要搜尋的成員。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the members.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋成員的方式。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that provides access to all the specified members of the specified member type in the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> 物件的集合，藉由指定的繫結條件約束，這個集合可提供存取目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 中指定之成員型別的所有指定成員。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that represent the members of the current <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that have the specified name and that meet the criteria specified by the <ph id="ph4">&lt;paramref name="memberTypes" /&gt;</ph> and <ph id="ph5">&lt;paramref name="bindingFlags" /&gt;</ph> parameters.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>，這些物件表示目前 <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 中具有指定名稱且符合 <ph id="ph4">&lt;paramref name="memberTypes" /&gt;</ph> 和 <ph id="ph5">&lt;paramref name="bindingFlags" /&gt;</ph> 參數所指定之準則的成員。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>This method can be used to get a single member, or to get multiple members that have the same name, such as constructor or method overloads.</source>
          <target state="translated">這個方法可用來取得單一成員，或取得多個具有相同的名稱，例如建構函式或方法的多載的成員。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the members.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋成員的方式。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that provides access to all the members in the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> 物件的集合，這個集合可提供存取目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 中符合指定之繫結條件約束的所有成員。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that provides access to the members of the current <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that meet the specified binding constraints.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph>，可提供存取目前 <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 中符合指定之繫結條件約束的成員。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>The name of a method of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的方法名稱。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋方法的方式。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> objects that represent the number, order, and type of the parameters for the method to get.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>，表示所要取得之方法的參數數目、順序和型別。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> that provides access to a specified method of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph>，提供存取目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定方法。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> that provides access to the specified method, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">可提供存取指定之方法 (如果找到的話) 的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋方法的方式。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> objects that provides access to the specified methods of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> 物件的集合，這個集合可提供存取目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定方法。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> objects that provides access to the methods that match the specified binding constraints.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph>，可提供存取符合指定之繫結條件約束的方法。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the properties.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋屬性的方式。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> objects that provides access to the specified properties of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> 物件的集合，這個集合可提供存取目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定屬性。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> objects that provides access to the properties that match the specified binding constraints.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph>，可提供存取符合指定之繫結條件約束的屬性。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>The name of a property of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的屬性名稱。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋方法的方式。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that specifies the return type of the property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>，指定屬性的傳回型別。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> objects that represent the parameters for the specified property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> 物件的 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>，表示指定之屬性的參數。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> that provides access to a specified property of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">傳回 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph>，提供存取目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定屬性。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> that provides access to the specified property, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">可提供存取指定之屬性 (如果找到的話) 的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData">
          <source>Returns type information about the object that the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> identifies.</source>
          <target state="translated">傳回目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 所識別物件的型別資訊。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData">
          <source>A <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /&gt;</ph> that contains information about the object that the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> identifies.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /&gt;</ph>，包含目前 <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 所識別物件的相關資訊。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The name of the member to invoke.</source>
          <target state="translated">要叫用之成員的名稱。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 值的位元組合，指定搜尋成員的方式。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph> on which to invoke the specified member.</source>
          <target state="translated">要叫用指定成員的 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /&gt;</ph> that contains the arguments to pass to the member to invoke.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /&gt;</ph>，包含要傳遞給要叫用之成員的引數。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>An array of Boolean values that indicate whether each of the <bpt id="p1">&lt;c&gt;</bpt>remoteArgs<ept id="p1">&lt;/c&gt;</ept> values is passed by reference.</source>
          <target state="translated">布林值陣列，指出每個 <bpt id="p1">&lt;c&gt;</bpt>remoteArgs<ept id="p1">&lt;/c&gt;</ept> 值是否以傳址方式傳遞。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>A locale ID to use for locale-specific conversions that might be performed by the member being invoked.</source>
          <target state="translated">地區設定 ID，可用於所叫用之成員可能執行的地區設定特性轉換。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>Invokes the specified member of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">叫用目前 <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> 的指定成員。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> that represents the return value of the invoked member.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph>，表示叫用之成員的傳回值。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The <ph id="ph1">`remoteArgModifiers`</ph> parameter is used only for components that are written using COM.</source>
          <target state="translated"><ph id="ph1">`remoteArgModifiers`</ph>參數只適用於使用 COM 撰寫的元件</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>Each value in the <ph id="ph1">`remoteArgModifiers`</ph> parameter indicates whether the corresponding value in the <ph id="ph2">`remoteArgs`</ph> parameter is passed by reference.</source>
          <target state="translated">在每個值<ph id="ph1">`remoteArgModifiers`</ph>參數表示對應中是否有值<ph id="ph2">`remoteArgs`</ph>用參考方式傳遞參數。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The length of <ph id="ph1">`remoteArgModifiers`</ph> should be the same as the length of <ph id="ph2">`remoteArgs`</ph>.</source>
          <target state="translated">長度<ph id="ph1">`remoteArgModifiers`</ph>應該是相同的長度<ph id="ph2">`remoteArgs`</ph>。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`remoteArgModifiers`</ph>, this method uses default logic to determine whether an argument is passed by reference.</source>
          <target state="translated">如果您要傳入<ph id="ph1">`null`</ph>如<ph id="ph2">`remoteArgModifiers`</ph>，這個方法會使用預設的邏輯來判斷是否傳址方式傳遞引數。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>