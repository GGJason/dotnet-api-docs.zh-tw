<Type Name="IRemoteObjectContract" FullName="System.AddIn.Contract.Automation.IRemoteObjectContract">
  <Metadata><Meta Name="ms.openlocfilehash" Value="96ad5deed36463a85848211bc369ec4cff718020" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37706238" /></Metadata><TypeSignature Language="C#" Value="public interface IRemoteObjectContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteObjectContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteObjectContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteObjectContract : System::AddIn::Contract::IContract" />
  <TypeSignature Language="F#" Value="type IRemoteObjectContract = interface&#xA;    interface IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b32b2-101">定義合約，元件可使用它跨應用程式定義域和處理序界限來存取物件。</span><span class="sxs-lookup"><span data-stu-id="b32b2-101">Defines a contract that components can use to access an object across application domain and process boundaries.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32b2-102">當您實作<xref:System.AddIn.Contract.Automation.IRemoteObjectContract>類型，元件可以使用合約來存取型別之物件的型別資訊。</span><span class="sxs-lookup"><span data-stu-id="b32b2-102">When you implement <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> on a type, components can use the contract to access type information for objects of the type.</span></span> <span data-ttu-id="b32b2-103">元件存取類型資訊，請呼叫<xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>方法，以取得<xref:System.AddIn.Contract.Automation.IRemoteTypeContract>。</span><span class="sxs-lookup"><span data-stu-id="b32b2-103">Components access type information by calling the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to obtain an <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>.</span></span> <span data-ttu-id="b32b2-104"><xref:System.AddIn.Contract.Automation.IRemoteTypeContract>介面定義合約，元件可使用它來存取特定的類型和成員資訊，並叫用成員。</span><span class="sxs-lookup"><span data-stu-id="b32b2-104">The <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interface defines a contract that components can use to access specific type and member information, and to invoke members.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRemoteType">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteType () As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetRemoteType();" />
      <MemberSignature Language="F#" Value="abstract member GetRemoteType : unit -&gt; System.AddIn.Contract.Automation.IRemoteTypeContract" Usage="iRemoteObjectContract.GetRemoteType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b32b2-105">傳回 <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />，指定目前 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 的型別。</span><span class="sxs-lookup"><span data-stu-id="b32b2-105">Returns an <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that specifies the type of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />.</span></span></summary>
        <returns><span data-ttu-id="b32b2-106"><see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" />，指定目前 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 的型別。</span><span class="sxs-lookup"><span data-stu-id="b32b2-106">An <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> that specifies the type of the current <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32b2-107">使用<xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A>方法來存取遠端成員物件的目前<xref:System.AddIn.Contract.Automation.IRemoteObjectContract>識別。</span><span class="sxs-lookup"><span data-stu-id="b32b2-107">Use the <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> method to access the members of the remote object that the current <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCast">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument RemoteCast(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteCast (canonicalName As String) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument RemoteCast(System::String ^ canonicalName);" />
      <MemberSignature Language="F#" Value="abstract member RemoteCast : string -&gt; System.AddIn.Contract.RemoteArgument" Usage="iRemoteObjectContract.RemoteCast canonicalName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName"><span data-ttu-id="b32b2-108">物件所要轉換之目標型別的正式名稱。</span><span class="sxs-lookup"><span data-stu-id="b32b2-108">The canonical name of the type to cast the object to.</span></span></param>
        <summary><span data-ttu-id="b32b2-109">將目前 <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> 識別的物件轉換為指定的型別。</span><span class="sxs-lookup"><span data-stu-id="b32b2-109">Casts the object identified by the current <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> to a specified type.</span></span></summary>
        <returns><span data-ttu-id="b32b2-110"><see cref="T:System.AddIn.Contract.RemoteArgument" />，表示轉換作業的結果。</span><span class="sxs-lookup"><span data-stu-id="b32b2-110">A <see cref="T:System.AddIn.Contract.RemoteArgument" /> that represents the result of the cast operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b32b2-111">標準的名稱是全域唯一的名稱，例如 GUID。</span><span class="sxs-lookup"><span data-stu-id="b32b2-111">A canonical name is a globally unique name, such as a GUID.</span></span> <span data-ttu-id="b32b2-112">格式字串\<*組件名稱*>， \<*完整限定的類型名稱*> 建議使用。</span><span class="sxs-lookup"><span data-stu-id="b32b2-112">Strings in the format \<*assembly name*>, \<*fully qualified type name*> are recommended.</span></span> <span data-ttu-id="b32b2-113">建議的正式名稱的範例是格式的"ShapeApp Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application"。</span><span class="sxs-lookup"><span data-stu-id="b32b2-113">An example of the recommended format of a canonical name is "ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application".</span></span>  
  
 <span data-ttu-id="b32b2-114">在元件中發行的型別之後，無法變更類型的正式名稱。</span><span class="sxs-lookup"><span data-stu-id="b32b2-114">The canonical name for a type cannot change after a type is published in a component.</span></span> <span data-ttu-id="b32b2-115">變更元件中斷相容性層級的元件和用戶端已經在使用型別之間的未來版本中的類型的正式名稱。</span><span class="sxs-lookup"><span data-stu-id="b32b2-115">Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</span></span>  
  
 <span data-ttu-id="b32b2-116">建議<xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A>實作會擲回<xref:System.InvalidCastException>如果轉型作業失敗。</span><span class="sxs-lookup"><span data-stu-id="b32b2-116">It is recommended that <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> implementations throw an <xref:System.InvalidCastException> if the cast operation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>