<Type Name="SymMethod" FullName="System.Diagnostics.SymbolStore.SymMethod">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6dd0d90bf30f19560a6a2b8cedb2a526bfbbbe97" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53490228" /></Metadata><TypeSignature Language="C#" Value="public class SymMethod : System.Diagnostics.SymbolStore.SymMethodBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolMethod" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymMethod extends System.Diagnostics.SymbolStore.SymMethodBase implements class System.Diagnostics.SymbolStore.ISymbolMethod, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymMethod" />
  <TypeSignature Language="VB.NET" Value="Public Class SymMethod&#xA;Inherits SymMethodBase&#xA;Implements IDisposable, ISymbolMethod" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymMethod : System::Diagnostics::SymbolStore::SymMethodBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolMethod" />
  <TypeSignature Language="F#" Value="type SymMethod = class&#xA;    inherit SymMethodBase&#xA;    interface ISymbolMethod&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymMethodBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolMethod</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="dfeba-101">代表符號存放區內的方法。</span><span class="sxs-lookup"><span data-stu-id="dfeba-101">Represents a method within a symbol store.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfeba-102"><xref:System.Diagnostics.SymbolStore.SymMethod>類別提供方法，例如序列點、 語彙範圍和參數資訊之與符號相關屬性存取。</span><span class="sxs-lookup"><span data-stu-id="dfeba-102">The <xref:System.Diagnostics.SymbolStore.SymMethod> class provides access only to the symbol-related attributes of a method, such as sequence points, lexical scopes, and parameter information.</span></span> <span data-ttu-id="dfeba-103">使用<xref:System.Reflection>類別來讀取方法的型別相關的屬性。</span><span class="sxs-lookup"><span data-stu-id="dfeba-103">Use the <xref:System.Reflection> classes to read the type-related attributes of a method.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymMethod (ISymUnmanagedMethod* pMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(ISymUnmanagedMethod* pMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.#ctor(ISymUnmanagedMethod*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymMethod(ISymUnmanagedMethod* pMethod);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymMethod : nativeptr&lt;ISymUnmanagedMethod&gt; -&gt; System.Diagnostics.SymbolStore.SymMethod" Usage="new System.Diagnostics.SymbolStore.SymMethod pMethod" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pMethod" Type="ISymUnmanagedMethod*" />
      </Parameters>
      <Docs>
        <param name="pMethod"><span data-ttu-id="dfeba-104">非受控 COM <see href="~/docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md">ISymUnmanagedMethod</see> 物件的原始指標。</span><span class="sxs-lookup"><span data-stu-id="dfeba-104">A raw pointer to the unmanaged COM <see href="~/docs/framework/unmanaged-api/diagnostics/isymunmanagedmethod-interface.md">ISymUnmanagedMethod</see> object.</span></span></param>
        <summary><span data-ttu-id="dfeba-105">從原始指標初始化 <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> 類別的新執行個體至非受控介面。</span><span class="sxs-lookup"><span data-stu-id="dfeba-105">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class from a raw pointer to an unmanaged interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="dfeba-106">一般而言，這種類型的執行個體所取得呼叫<xref:System.Diagnostics.SymbolStore.SymReader.GetMethod%2A>而不是直接使用這個建構函式所建立的方法。</span><span class="sxs-lookup"><span data-stu-id="dfeba-106">Typically, instances of this type are obtained by calling the <xref:System.Diagnostics.SymbolStore.SymReader.GetMethod%2A> method instead of being created directly with this constructor.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymMethod (System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod* pMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod* pMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymMethod(System::Diagnostics::SymbolStore::Private::ISymUnmanagedMethod* pMethod);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymMethod : nativeptr&lt;System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod&gt; -&gt; System.Diagnostics.SymbolStore.SymMethod" Usage="new System.Diagnostics.SymbolStore.SymMethod pMethod" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pMethod" Type="System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*" />
      </Parameters>
      <Docs>
        <param name="pMethod">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="__dtor">
      <MemberSignature Language="C#" Value="public void __dtor ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void __dtor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.__dtor" />
      <MemberSignature Language="VB.NET" Value="Public Sub __dtor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void __dtor();" />
      <MemberSignature Language="F#" Value="member this.__dtor : unit -&gt; unit" Usage="symMethod.__dtor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfeba-107">將 <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> 物件目前執行個體所持有的資源釋出。</span><span class="sxs-lookup"><span data-stu-id="dfeba-107">Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="dfeba-108">使用<xref:System.Diagnostics.SymbolStore.SymMethod.Finalize>方法來釋放資源。</span><span class="sxs-lookup"><span data-stu-id="dfeba-108">Use the <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize> method to release resources.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="{dtor}">
      <MemberSignature Language="C#" Value="public void {dtor} ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void {dtor}() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.{dtor}" />
      <MemberSignature Language="VB.NET" Value="Public Sub {dtor} ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void {dtor}();" />
      <MemberSignature Language="F#" Value="member this.{dtor} : unit -&gt; unit" Usage="symMethod.{dtor} " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfeba-109">將 <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> 物件目前執行個體所持有的資源釋出。</span><span class="sxs-lookup"><span data-stu-id="dfeba-109">Releases the resources held by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="dfeba-110">使用<xref:System.Diagnostics.SymbolStore.SymMethod.Finalize>方法來釋放資源。</span><span class="sxs-lookup"><span data-stu-id="dfeba-110">Use the <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize> method to release resources.</span></span>
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfeba-111">將 <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> 類別的目前執行個體所使用的資源釋出。</span><span class="sxs-lookup"><span data-stu-id="dfeba-111">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symMethod.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfeba-112">將 <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> 類別的目前執行個體所使用的資源釋出。</span><span class="sxs-lookup"><span data-stu-id="dfeba-112">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symMethod.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="dfeba-113"><see langword="true" /> 表示釋出 Managed 和 Unmanaged 資源，<see langword="false" /> 表示只釋出 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="dfeba-113"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="dfeba-114">由 <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Dispose" /> 和 <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Finalize" /> 方法呼叫，以釋出 <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> 類別之目前執行個體所使用的 Managed 和 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="dfeba-114">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymMethod.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfeba-115">會呼叫這個方法僅供大眾<xref:System.Diagnostics.SymbolStore.SymMethod.Dispose%2A>和<xref:System.Diagnostics.SymbolStore.SymMethod.Finalize%2A>方法; 請勿直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="dfeba-115">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymMethod.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymMethod.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymMethod ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symMethod.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfeba-116">釋出 Unmanaged 資源並執行其他清除作業後，記憶體回收才能重新回收 <see cref="T:System.Diagnostics.SymbolStore.SymMethod" />。</span><span class="sxs-lookup"><span data-stu-id="dfeba-116">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymMethod" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfeba-117">這個方法會覆寫<xref:System.Object.Finalize%2A>。</span><span class="sxs-lookup"><span data-stu-id="dfeba-117">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="dfeba-118">應用程式程式碼不應該呼叫這個方法。物件的`Finalize`方法會自動叫用記憶體回收期間，除非呼叫已停用記憶體回收行程的最終處理<xref:System.GC.SuppressFinalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="dfeba-118">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespace () As ISymbolNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolNamespace ^ GetNamespace();" />
      <MemberSignature Language="F#" Value="abstract member GetNamespace : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace&#xA;override this.GetNamespace : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace" Usage="symMethod.GetNamespace " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolNamespace</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfeba-119">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="dfeba-119">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="dfeba-120">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="dfeba-120">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfeba-121">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="dfeba-121">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetOffset">
      <MemberSignature Language="C#" Value="public virtual int GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOffset(class System.Diagnostics.SymbolStore.ISymbolDocument document, int32 line, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOffset (document As ISymbolDocument, line As Integer, column As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetOffset(System::Diagnostics::SymbolStore::ISymbolDocument ^ document, int line, int column);" />
      <MemberSignature Language="F#" Value="abstract member GetOffset : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; int&#xA;override this.GetOffset : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; int" Usage="symMethod.GetOffset (document, line, column)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocument" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="dfeba-122">要求位移的文件。</span><span class="sxs-lookup"><span data-stu-id="dfeba-122">The document for which the offset is requested.</span></span></param>
        <param name="line"><span data-ttu-id="dfeba-123">要求位移的文件行。</span><span class="sxs-lookup"><span data-stu-id="dfeba-123">The document line for which the offset is requested.</span></span></param>
        <param name="column"><span data-ttu-id="dfeba-124">要求位移的文件資料行。</span><span class="sxs-lookup"><span data-stu-id="dfeba-124">The document column for which the offset is requested.</span></span></param>
        <summary><span data-ttu-id="dfeba-125">取得方法內對應到指定位置的 Microsoft 中繼語言 (MSIL) 位移。</span><span class="sxs-lookup"><span data-stu-id="dfeba-125">Gets the Microsoft intermediate language (MSIL) offset within the method that corresponds to the specified position.</span></span></summary>
        <returns><span data-ttu-id="dfeba-126">文件中指定位置之目前方法內的 IL 位移。</span><span class="sxs-lookup"><span data-stu-id="dfeba-126">The IL offset within the current method of the specified location in the document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetParameters () As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetParameters : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]&#xA;override this.GetParameters : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]" Usage="symMethod.GetParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfeba-127">取得目前方法的參數。</span><span class="sxs-lookup"><span data-stu-id="dfeba-127">Gets the parameters for the current method.</span></span></summary>
        <returns><span data-ttu-id="dfeba-128">目前方法的參數陣列。</span><span class="sxs-lookup"><span data-stu-id="dfeba-128">The array of parameters for the current method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfeba-129">在這些方法的簽章中定義的順序，會傳回參數。</span><span class="sxs-lookup"><span data-stu-id="dfeba-129">The parameters are returned in the order that they are defined within the signature of the method.</span></span> <span data-ttu-id="dfeba-130">傳回的陣列是空如果方法沒有參數。</span><span class="sxs-lookup"><span data-stu-id="dfeba-130">The returned array is empty if the method does not have parameters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRanges">
      <MemberSignature Language="C#" Value="public virtual int[] GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetRanges(class System.Diagnostics.SymbolStore.ISymbolDocument document, int32 line, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRanges (document As ISymbolDocument, line As Integer, column As Integer) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;int&gt; ^ GetRanges(System::Diagnostics::SymbolStore::ISymbolDocument ^ document, int line, int column);" />
      <MemberSignature Language="F#" Value="abstract member GetRanges : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; int[]&#xA;override this.GetRanges : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; int[]" Usage="symMethod.GetRanges (document, line, column)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocument" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="dfeba-131">要求 IL 位移範圍的文件。</span><span class="sxs-lookup"><span data-stu-id="dfeba-131">The document for which the IL offset ranges are requested.</span></span></param>
        <param name="line"><span data-ttu-id="dfeba-132">要求 IL 位移範圍的文件行。</span><span class="sxs-lookup"><span data-stu-id="dfeba-132">The document line for which the IL offset ranges are requested.</span></span></param>
        <param name="column"><span data-ttu-id="dfeba-133">要求 IL 位移範圍的文件資料行。</span><span class="sxs-lookup"><span data-stu-id="dfeba-133">The document column for which the IL offset ranges are requested.</span></span></param>
        <summary><span data-ttu-id="dfeba-134">取得起始和結束位移組的陣列，其對應至這個方法內指定位置所涵蓋的 Microsoft 中繼語言 (MSIL) 位移範圍。</span><span class="sxs-lookup"><span data-stu-id="dfeba-134">Gets an array of start and end offset pairs that correspond to the ranges of Microsoft intermediate language (MSIL) offsets that a given position covers within this method.</span></span></summary>
        <returns><span data-ttu-id="dfeba-135">起始和結束 IL 位移組的陣列。</span><span class="sxs-lookup"><span data-stu-id="dfeba-135">An array of start and end IL offset pairs.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfeba-136">陣列是以格式整數的陣列，{{開始 1，end1}，{開始時間 2，end2}...}，其中每一組代表之方法內的 IL 位移的範圍。</span><span class="sxs-lookup"><span data-stu-id="dfeba-136">The array is an array of integers in the format {{start1, end1}, {start2, end2}...}, where each pair represents an IL offset range within the method.</span></span> <span data-ttu-id="dfeba-137">範圍的數目會除以 2 陣列的長度。</span><span class="sxs-lookup"><span data-stu-id="dfeba-137">The number of ranges is the length of the array divided by 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScope">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope GetScope (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolScope GetScope(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScope (offset As Integer) As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolScope ^ GetScope(int offset);" />
      <MemberSignature Language="F#" Value="abstract member GetScope : int -&gt; System.Diagnostics.SymbolStore.ISymbolScope&#xA;override this.GetScope : int -&gt; System.Diagnostics.SymbolStore.ISymbolScope" Usage="symMethod.GetScope offset" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="dfeba-138">要查閱之方法內的 IL 位移。</span><span class="sxs-lookup"><span data-stu-id="dfeba-138">The IL offset within the method to look up.</span></span></param>
        <summary><span data-ttu-id="dfeba-139">傳回對應至方法內位移之最封入的語彙範圍。</span><span class="sxs-lookup"><span data-stu-id="dfeba-139">Returns the most enclosing lexical scope corresponding to an offset within a method.</span></span></summary>
        <returns><span data-ttu-id="dfeba-140">方法內指定之 IL 位移的最封入語彙範圍。</span><span class="sxs-lookup"><span data-stu-id="dfeba-140">The most enclosing lexical scope for the given IL offset within the method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfeba-141">您可以使用<xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A>方法來啟動本機變數的搜尋。</span><span class="sxs-lookup"><span data-stu-id="dfeba-141">You can use the <xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetScope%2A> method to start local variable searches.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSequencePoints">
      <MemberSignature Language="C#" Value="public virtual void GetSequencePoints (int[] offsets, System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int[] lines, int[] columns, int[] endLines, int[] endColumns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetSequencePoints(int32[] offsets, class System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int32[] lines, int32[] columns, int32[] endLines, int32[] endColumns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetSequencePoints (offsets As Integer(), documents As ISymbolDocument(), lines As Integer(), columns As Integer(), endLines As Integer(), endColumns As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetSequencePoints(cli::array &lt;int&gt; ^ offsets, cli::array &lt;System::Diagnostics::SymbolStore::ISymbolDocument ^&gt; ^ documents, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns, cli::array &lt;int&gt; ^ endLines, cli::array &lt;int&gt; ^ endColumns);" />
      <MemberSignature Language="F#" Value="abstract member GetSequencePoints : int[] * System.Diagnostics.SymbolStore.ISymbolDocument[] * int[] * int[] * int[] * int[] -&gt; unit&#xA;override this.GetSequencePoints : int[] * System.Diagnostics.SymbolStore.ISymbolDocument[] * int[] * int[] * int[] * int[] -&gt; unit" Usage="symMethod.GetSequencePoints (offsets, documents, lines, columns, endLines, endColumns)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offsets" Type="System.Int32[]" />
        <Parameter Name="documents" Type="System.Diagnostics.SymbolStore.ISymbolDocument[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
        <Parameter Name="endLines" Type="System.Int32[]" />
        <Parameter Name="endColumns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="offsets"><span data-ttu-id="dfeba-142">用來儲存從方法開頭之序列點 IL 位移的陣列。</span><span class="sxs-lookup"><span data-stu-id="dfeba-142">An array in which to store the IL offsets from the beginning of the method for the sequence points.</span></span></param>
        <param name="documents"><span data-ttu-id="dfeba-143">用來儲存文件的陣列，序列點位在這些文件中。</span><span class="sxs-lookup"><span data-stu-id="dfeba-143">An array in which to store the  documents in which the sequence points are located.</span></span></param>
        <param name="lines"><span data-ttu-id="dfeba-144">用來儲存文件行的陣列，序列點位在這些文件中。</span><span class="sxs-lookup"><span data-stu-id="dfeba-144">An array in which to store the lines in the documents at which the sequence points are located.</span></span></param>
        <param name="columns"><span data-ttu-id="dfeba-145">用來儲存文件資料行的陣列，序列點位在這些文件中。</span><span class="sxs-lookup"><span data-stu-id="dfeba-145">An array in which to store the columns in the documents at which the sequence points are located.</span></span></param>
        <param name="endLines"><span data-ttu-id="dfeba-146">序列點結束處的文件行陣列。</span><span class="sxs-lookup"><span data-stu-id="dfeba-146">The array of lines in the documents at which the sequence points end.</span></span></param>
        <param name="endColumns"><span data-ttu-id="dfeba-147">序列點結束處的文件欄陣列。</span><span class="sxs-lookup"><span data-stu-id="dfeba-147">The array of columns in the documents at which the sequence points end.</span></span></param>
        <summary><span data-ttu-id="dfeba-148">取得目前方法的序列點，並將資訊儲存在指定的陣列中。</span><span class="sxs-lookup"><span data-stu-id="dfeba-148">Gets the sequence points for the current method and stores the information in the specified arrays.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfeba-149">序列點用來對應來源檔案位置和 IL 位移。</span><span class="sxs-lookup"><span data-stu-id="dfeba-149">Sequence points are used to map between source file locations and IL offsets.</span></span>  <span data-ttu-id="dfeba-150">每個序列點組成的 IL 位移，以及開始和結束行/資料行所指定的來源檔案區域數字相對於<xref:System.Diagnostics.SymbolStore.ISymbolDocument>物件。</span><span class="sxs-lookup"><span data-stu-id="dfeba-150">Each sequence point consists of an IL offset, and source file region specified by start and end line/column numbers relative to an <xref:System.Diagnostics.SymbolStore.ISymbolDocument> object.</span></span>  <span data-ttu-id="dfeba-151">位於指定索引的每個陣列的每個項目會對應至特定的序列點。</span><span class="sxs-lookup"><span data-stu-id="dfeba-151">Each element at a specific index of every array corresponds to a specific sequence point.</span></span> <span data-ttu-id="dfeba-152">呼叫端必須提供預先配置的陣列來儲存要傳回的資訊。</span><span class="sxs-lookup"><span data-stu-id="dfeba-152">The caller must supply pre-allocated arrays to hold the information to be returned.</span></span> <span data-ttu-id="dfeba-153">陣列中的任何值會覆寫。</span><span class="sxs-lookup"><span data-stu-id="dfeba-153">Any values in the arrays are overwritten.</span></span> <span data-ttu-id="dfeba-154">使用<xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A>擷取所有的序列點的計數，並建立適當大小的陣列。</span><span class="sxs-lookup"><span data-stu-id="dfeba-154">Use <xref:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount%2A> to retrieve the count of all sequence points and create arrays of the proper size.</span></span> <span data-ttu-id="dfeba-155">序列點位移排序，並且可在方法中的所有文件。</span><span class="sxs-lookup"><span data-stu-id="dfeba-155">The sequence points are sorted by offset and are for all documents in the method.</span></span> <span data-ttu-id="dfeba-156"><xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A> 驗證每個陣列的大小，並將放入每個序列點資訊。</span><span class="sxs-lookup"><span data-stu-id="dfeba-156"><xref:System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints%2A> verifies the size of each array and places the sequence point information into each.</span></span> <span data-ttu-id="dfeba-157">如果任何陣列`null`，不會傳回該陣列的資料。</span><span class="sxs-lookup"><span data-stu-id="dfeba-157">If any array is `null`, the data for that array is not returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSourceStartEnd">
      <MemberSignature Language="C#" Value="public virtual bool GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int[] lines, int[] columns);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetSourceStartEnd(class System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int32[] lines, int32[] columns) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSourceStartEnd (docs As ISymbolDocument(), lines As Integer(), columns As Integer()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetSourceStartEnd(cli::array &lt;System::Diagnostics::SymbolStore::ISymbolDocument ^&gt; ^ docs, cli::array &lt;int&gt; ^ lines, cli::array &lt;int&gt; ^ columns);" />
      <MemberSignature Language="F#" Value="abstract member GetSourceStartEnd : System.Diagnostics.SymbolStore.ISymbolDocument[] * int[] * int[] -&gt; bool&#xA;override this.GetSourceStartEnd : System.Diagnostics.SymbolStore.ISymbolDocument[] * int[] * int[] -&gt; bool" Usage="symMethod.GetSourceStartEnd (docs, lines, columns)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="docs" Type="System.Diagnostics.SymbolStore.ISymbolDocument[]" />
        <Parameter Name="lines" Type="System.Int32[]" />
        <Parameter Name="columns" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="docs"><span data-ttu-id="dfeba-158">不使用這個參數。</span><span class="sxs-lookup"><span data-stu-id="dfeba-158">This parameter is not used.</span></span></param>
        <param name="lines"><span data-ttu-id="dfeba-159">不使用這個參數。</span><span class="sxs-lookup"><span data-stu-id="dfeba-159">This parameter is not used.</span></span></param>
        <param name="columns"><span data-ttu-id="dfeba-160">不使用這個參數。</span><span class="sxs-lookup"><span data-stu-id="dfeba-160">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="dfeba-161">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="dfeba-161">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="dfeba-162">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="dfeba-162">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="dfeba-163">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="dfeba-163">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RootScope">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope RootScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Diagnostics.SymbolStore.ISymbolScope RootScope" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymMethod.RootScope" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RootScope As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::ISymbolScope ^ RootScope { System::Diagnostics::SymbolStore::ISymbolScope ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootScope : System.Diagnostics.SymbolStore.ISymbolScope" Usage="System.Diagnostics.SymbolStore.SymMethod.RootScope" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Diagnostics.SymbolStore.ISymbolMethod.RootScope</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfeba-164">取得目前方法的根語彙範圍。</span><span class="sxs-lookup"><span data-stu-id="dfeba-164">Gets the root lexical scope for the current method.</span></span> <span data-ttu-id="dfeba-165">這個範圍會封入整個方法。</span><span class="sxs-lookup"><span data-stu-id="dfeba-165">This scope encloses the entire method.</span></span></summary>
        <value><span data-ttu-id="dfeba-166">封入整個方法的根語彙範圍。</span><span class="sxs-lookup"><span data-stu-id="dfeba-166">The root lexical scope that encloses the entire method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootScopeInternal">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolScope RootScopeInternal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolScope RootScopeInternal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RootScopeInternal () As ISymbolScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolScope ^ RootScopeInternal();" />
      <MemberSignature Language="F#" Value="abstract member RootScopeInternal : unit -&gt; System.Diagnostics.SymbolStore.ISymbolScope&#xA;override this.RootScopeInternal : unit -&gt; System.Diagnostics.SymbolStore.ISymbolScope" Usage="symMethod.RootScopeInternal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfeba-167">取得目前方法的根語彙範圍。</span><span class="sxs-lookup"><span data-stu-id="dfeba-167">Gets the root lexical scope for the current method.</span></span> <span data-ttu-id="dfeba-168">這個範圍會封入整個方法。</span><span class="sxs-lookup"><span data-stu-id="dfeba-168">This scope encloses the entire method.</span></span></summary>
        <returns><span data-ttu-id="dfeba-169">封入整個方法的根語彙範圍。</span><span class="sxs-lookup"><span data-stu-id="dfeba-169">The root lexical scope that encloses the entire method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SequencePointCount">
      <MemberSignature Language="C#" Value="public virtual int SequencePointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SequencePointCount" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymMethod.SequencePointCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SequencePointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SequencePointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SequencePointCount : int" Usage="System.Diagnostics.SymbolStore.SymMethod.SequencePointCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfeba-170">取得方法中序列點的計數。</span><span class="sxs-lookup"><span data-stu-id="dfeba-170">Gets a count of the sequence points in the method.</span></span></summary>
        <value><span data-ttu-id="dfeba-171">方法中序列點的計數。</span><span class="sxs-lookup"><span data-stu-id="dfeba-171">The count of the sequence points in the method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.SymbolToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SymbolStore.SymbolToken Token" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymMethod.Token" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Token As SymbolToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::SymbolToken Token { System::Diagnostics::SymbolStore::SymbolToken get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.Diagnostics.SymbolStore.SymbolToken" Usage="System.Diagnostics.SymbolStore.SymMethod.Token" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Diagnostics.SymbolStore.ISymbolMethod.Token</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.SymbolToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfeba-172">取得 <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" />，其中包含目前方法的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="dfeba-172">Gets the <see cref="T:System.Diagnostics.SymbolStore.SymbolToken" /> containing the metadata for the current method.</span></span></summary>
        <value><span data-ttu-id="dfeba-173">目前方法的中繼資料語彙基元。</span><span class="sxs-lookup"><span data-stu-id="dfeba-173">The metadata token for the current method.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>