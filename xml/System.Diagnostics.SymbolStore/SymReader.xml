<Type Name="SymReader" FullName="System.Diagnostics.SymbolStore.SymReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9e50f4cf235042595a72140868f213e76367bbd9" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53463812" /></Metadata><TypeSignature Language="C#" Value="public class SymReader : System.Diagnostics.SymbolStore.SymReaderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SymReader extends System.Diagnostics.SymbolStore.SymReaderBase implements class System.Diagnostics.SymbolStore.ISymbolReader, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.SymReader" />
  <TypeSignature Language="VB.NET" Value="Public Class SymReader&#xA;Inherits SymReaderBase&#xA;Implements IDisposable, ISymbolReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymReader : System::Diagnostics::SymbolStore::SymReaderBase, IDisposable, System::Diagnostics::SymbolStore::ISymbolReader" />
  <TypeSignature Language="F#" Value="type SymReader = class&#xA;    inherit SymReaderBase&#xA;    interface ISymbolReader&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>ISymWrapper</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.SymbolStore.SymReaderBase</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Diagnostics.SymbolStore.ISymbolReader</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="37a26-101">提供對符號存放區內之文件、方法和變數的存取。</span><span class="sxs-lookup"><span data-stu-id="37a26-101">Provides access to documents, methods, and variables within a symbol store.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymReader (ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(ISymUnmanagedReader* pReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.#ctor(ISymUnmanagedReader*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymReader(ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymReader : nativeptr&lt;ISymUnmanagedReader&gt; -&gt; System.Diagnostics.SymbolStore.SymReader" Usage="new System.Diagnostics.SymbolStore.SymReader pReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pReader" Type="ISymUnmanagedReader*" />
      </Parameters>
      <Docs>
        <param name="pReader"><span data-ttu-id="37a26-102">非受控 ISymUnmanagedReader 物件的指標。</span><span class="sxs-lookup"><span data-stu-id="37a26-102">A pointer to an unmanaged ISymUnmanagedReader object.</span></span></param>
        <summary><span data-ttu-id="37a26-103">使用非受控 **ISymUnmanagedReader** 物件的指定指標，初始化 <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="37a26-103">Initializes a new instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class by using the specified pointer to an unmanaged **ISymUnmanagedReader** object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="37a26-104">一般而言，這種類型的執行個體取得方式是使用<xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A>而不是直接使用這個建構函式所建立的方法。</span><span class="sxs-lookup"><span data-stu-id="37a26-104">Typically, instances of this type are obtained by using the <xref:System.Diagnostics.SymbolStore.SymBinder.GetReader%2A> method instead of being created directly with this constructor.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SymReader (System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader* pReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SymReader(System::Diagnostics::SymbolStore::Private::ISymUnmanagedReader* pReader);" />
      <MemberSignature Language="F#" Value="new System.Diagnostics.SymbolStore.SymReader : nativeptr&lt;System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader&gt; -&gt; System.Diagnostics.SymbolStore.SymReader" Usage="new System.Diagnostics.SymbolStore.SymReader pReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pReader" Type="System.Diagnostics.SymbolStore.Private.ISymUnmanagedReader*" />
      </Parameters>
      <Docs>
        <param name="pReader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="__dtor">
      <MemberSignature Language="C#" Value="public void __dtor ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void __dtor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.__dtor" />
      <MemberSignature Language="VB.NET" Value="Public Sub __dtor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void __dtor();" />
      <MemberSignature Language="F#" Value="member this.__dtor : unit -&gt; unit" Usage="symReader.__dtor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a26-105">將目前執行個體所持有的資源釋出。</span><span class="sxs-lookup"><span data-stu-id="37a26-105">Releases the resources held by the current instance.</span></span> <span data-ttu-id="37a26-106">此方法僅供內部使用。</span><span class="sxs-lookup"><span data-stu-id="37a26-106">This method is for internal use only.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="37a26-107">使用<xref:System.Diagnostics.SymbolStore.SymReader.Finalize>方法來釋放資源。</span><span class="sxs-lookup"><span data-stu-id="37a26-107">Use the <xref:System.Diagnostics.SymbolStore.SymReader.Finalize> method to release resources.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="{dtor}">
      <MemberSignature Language="C#" Value="public void {dtor} ();" />
      <MemberSignature Language="ILAsm" Value=".method public instance void {dtor}() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.{dtor}" />
      <MemberSignature Language="VB.NET" Value="Public Sub {dtor} ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void {dtor}();" />
      <MemberSignature Language="F#" Value="member this.{dtor} : unit -&gt; unit" Usage="symReader.{dtor} " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a26-108">將目前執行個體所持有的資源釋出。</span><span class="sxs-lookup"><span data-stu-id="37a26-108">Releases the resources held by the current instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

<span data-ttu-id="37a26-109">使用<xref:System.Diagnostics.SymbolStore.SymReader.Finalize>方法來釋放資源。</span><span class="sxs-lookup"><span data-stu-id="37a26-109">Use the <xref:System.Diagnostics.SymbolStore.SymReader.Finalize> method to release resources.</span></span>
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37a26-110">將 <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> 類別的目前執行個體所使用的資源釋出。</span><span class="sxs-lookup"><span data-stu-id="37a26-110">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override sealed void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="symReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a26-111">將 <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> 類別的目前執行個體所使用的資源釋出。</span><span class="sxs-lookup"><span data-stu-id="37a26-111">Releases the resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool A_0);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool A_0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (A_0 As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool A_0);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="symReader.Dispose A_0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptions</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="A_0" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="A_0"><span data-ttu-id="37a26-112"><see langword="true" /> 表示釋出 Managed 和 Unmanaged 資源，<see langword="false" /> 表示只釋出 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="37a26-112"><see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="37a26-113">由 <see cref="M:System.Diagnostics.SymbolStore.SymReader.Dispose" /> 和 <see cref="M:System.Diagnostics.SymbolStore.SymReader.Finalize" /> 方法呼叫，以釋出 <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> 類別之目前執行個體所使用的 Managed 和 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="37a26-113">Called by the <see cref="M:System.Diagnostics.SymbolStore.SymReader.Dispose" /> and <see cref="M:System.Diagnostics.SymbolStore.SymReader.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a26-114">會呼叫這個方法僅供大眾<xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A>和<xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A>方法; 請勿直接呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="37a26-114">This method is called only by the public <xref:System.Diagnostics.SymbolStore.SymReader.Dispose%2A> and <xref:System.Diagnostics.SymbolStore.SymReader.Finalize%2A> methods; do not call this method directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~SymReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!SymReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="symReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a26-115">釋出 Unmanaged 資源並執行其他清除作業後，記憶體回收才能重新回收 <see cref="T:System.Diagnostics.SymbolStore.SymReader" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-115">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.Diagnostics.SymbolStore.SymReader" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a26-116">這個方法會覆寫<xref:System.Object.Finalize%2A>。</span><span class="sxs-lookup"><span data-stu-id="37a26-116">This method overrides  <xref:System.Object.Finalize%2A>.</span></span> <span data-ttu-id="37a26-117">應用程式程式碼不應該呼叫這個方法。物件的`Finalize`方法會自動叫用記憶體回收期間，除非呼叫已停用記憶體回收行程的最終處理<xref:System.GC.SuppressFinalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="37a26-117">Application code should not call this method; an object's `Finalize` method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocument">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocument GetDocument (string url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocument GetDocument(string url, valuetype System.Guid language, valuetype System.Guid languageVendor, valuetype System.Guid documentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocument (url As String, language As Guid, languageVendor As Guid, documentType As Guid) As ISymbolDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolDocument ^ GetDocument(System::String ^ url, Guid language, Guid languageVendor, Guid documentType);" />
      <MemberSignature Language="F#" Value="abstract member GetDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocument&#xA;override this.GetDocument : string * Guid * Guid * Guid -&gt; System.Diagnostics.SymbolStore.ISymbolDocument" Usage="symReader.GetDocument (url, language, languageVendor, documentType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocument(System.String,System.Guid,System.Guid,System.Guid)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="language" Type="System.Guid" />
        <Parameter Name="languageVendor" Type="System.Guid" />
        <Parameter Name="documentType" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="37a26-118">識別文件的 URL。</span><span class="sxs-lookup"><span data-stu-id="37a26-118">The URL that identifies the document.</span></span></param>
        <param name="language"><span data-ttu-id="37a26-119">文件語言。</span><span class="sxs-lookup"><span data-stu-id="37a26-119">The document language.</span></span> <span data-ttu-id="37a26-120">您可以指定這個參數為 <see cref="F:System.Guid.Empty" /></span><span class="sxs-lookup"><span data-stu-id="37a26-120">You can specify this parameter as <see cref="F:System.Guid.Empty" />.</span></span> <span data-ttu-id="37a26-121">以表示任何語言。</span><span class="sxs-lookup"><span data-stu-id="37a26-121">to indicate any language.</span></span></param>
        <param name="languageVendor"><span data-ttu-id="37a26-122">文件語言的廠商識別。</span><span class="sxs-lookup"><span data-stu-id="37a26-122">The identity of the vendor for the document language.</span></span> <span data-ttu-id="37a26-123">您可以將這個參數指定為 <see cref="F:System.Guid.Empty" /> 以表示任何語言廠商。</span><span class="sxs-lookup"><span data-stu-id="37a26-123">You can specify this parameter as <see cref="F:System.Guid.Empty" /> to indicate any language vendor.</span></span></param>
        <param name="documentType"><span data-ttu-id="37a26-124">文件的類型。</span><span class="sxs-lookup"><span data-stu-id="37a26-124">The type of the document.</span></span> <span data-ttu-id="37a26-125">您可以將這個參數指定為 <see cref="F:System.Guid.Empty" /> 以表示任何文件類型。</span><span class="sxs-lookup"><span data-stu-id="37a26-125">You can specify this parameter as <see cref="F:System.Guid.Empty" /> to indicate any document type.</span></span></param>
        <summary><span data-ttu-id="37a26-126">取得以文件之 URL 以及選擇性的語言、語言廠商和類型所指定的文件。</span><span class="sxs-lookup"><span data-stu-id="37a26-126">Gets a document specified by the URL for the document and optionally the language, language vendor, and type.</span></span></summary>
        <returns><span data-ttu-id="37a26-127">如果在符號存放區中找到則為具有指定之 URL 的文件，如果文件不存在則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-127">The document with the specified URL if found in the symbol store, or <see langword="null" /> if the document does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a26-128">`language`， `languageVendor`，和`documentType`目前會忽略參數。</span><span class="sxs-lookup"><span data-stu-id="37a26-128">The `language`, `languageVendor`, and `documentType` parameters are currently ignored.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocuments">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolDocument[] GetDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDocuments () As ISymbolDocument()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolDocument ^&gt; ^ GetDocuments();" />
      <MemberSignature Language="F#" Value="abstract member GetDocuments : unit -&gt; System.Diagnostics.SymbolStore.ISymbolDocument[]&#xA;override this.GetDocuments : unit -&gt; System.Diagnostics.SymbolStore.ISymbolDocument[]" Usage="symReader.GetDocuments " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolReader.GetDocuments</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolDocument[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a26-129">取得定義在符號存放區中所有文件的陣列。</span><span class="sxs-lookup"><span data-stu-id="37a26-129">Gets an array of all documents defined in the symbol store.</span></span></summary>
        <returns><span data-ttu-id="37a26-130">定義在符號存放區中所有文件的陣列。</span><span class="sxs-lookup"><span data-stu-id="37a26-130">An array of all documents defined in the symbol store.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="37a26-131">記憶體不足，無法滿足要求。</span><span class="sxs-lookup"><span data-stu-id="37a26-131">There is insufficient memory to satisfy the request.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalVariables">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetGlobalVariables() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetGlobalVariables" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalVariables () As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetGlobalVariables();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalVariables : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]&#xA;override this.GetGlobalVariables : unit -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]" Usage="symReader.GetGlobalVariables " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolReader.GetGlobalVariables</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a26-132">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-132">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="37a26-133">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-133">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="37a26-134">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="37a26-134">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethod">
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="37a26-135">取得符號讀取器方法物件。</span><span class="sxs-lookup"><span data-stu-id="37a26-135">Gets a symbol reader method object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethod (method As SymbolToken) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethod(System::Diagnostics::SymbolStore::SymbolToken method);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolMethod&#xA;override this.GetMethod : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolMethod" Usage="symReader.GetMethod method" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="37a26-136">方法的中繼資料語彙基元。</span><span class="sxs-lookup"><span data-stu-id="37a26-136">The metadata token of the method.</span></span></param>
        <summary><span data-ttu-id="37a26-137">取得當指定方法的識別項時的符號讀取器方法物件。</span><span class="sxs-lookup"><span data-stu-id="37a26-137">Gets a symbol reader method object when given the identifier of a method.</span></span></summary>
        <returns><span data-ttu-id="37a26-138">指定的方法識別項之符號讀取器方法物件。</span><span class="sxs-lookup"><span data-stu-id="37a26-138">The symbol reader method object for the specified method identifier.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethod (System.Diagnostics.SymbolStore.SymbolToken method, int version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethod(valuetype System.Diagnostics.SymbolStore.SymbolToken method, int32 version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethod (method As SymbolToken, version As Integer) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethod(System::Diagnostics::SymbolStore::SymbolToken method, int version);" />
      <MemberSignature Language="F#" Value="abstract member GetMethod : System.Diagnostics.SymbolStore.SymbolToken * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod&#xA;override this.GetMethod : System.Diagnostics.SymbolStore.SymbolToken * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod" Usage="symReader.GetMethod (method, version)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethod(System.Diagnostics.SymbolStore.SymbolToken,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="version" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="method"><span data-ttu-id="37a26-139">方法的中繼資料語彙基元。</span><span class="sxs-lookup"><span data-stu-id="37a26-139">The metadata token of the method.</span></span></param>
        <param name="version"><span data-ttu-id="37a26-140">方法的編輯後繼續版本。</span><span class="sxs-lookup"><span data-stu-id="37a26-140">The edit and continue version of the method.</span></span></param>
        <summary><span data-ttu-id="37a26-141">取得當指定方法的識別項和其編輯後繼續版本時的符號讀取器方法物件。</span><span class="sxs-lookup"><span data-stu-id="37a26-141">Gets a symbol reader method object when given the identifier of a method and its edit and continue version.</span></span></summary>
        <returns><span data-ttu-id="37a26-142">指定之方法識別項和版本的符號讀取器方法物件。</span><span class="sxs-lookup"><span data-stu-id="37a26-142">The symbol reader method object for the specified method identifier and version.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodFromDocumentPosition">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolMethod GetMethodFromDocumentPosition(class System.Diagnostics.SymbolStore.ISymbolDocument document, int32 line, int32 column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMethodFromDocumentPosition (document As ISymbolDocument, line As Integer, column As Integer) As ISymbolMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Diagnostics::SymbolStore::ISymbolMethod ^ GetMethodFromDocumentPosition(System::Diagnostics::SymbolStore::ISymbolDocument ^ document, int line, int column);" />
      <MemberSignature Language="F#" Value="abstract member GetMethodFromDocumentPosition : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod&#xA;override this.GetMethodFromDocumentPosition : System.Diagnostics.SymbolStore.ISymbolDocument * int * int -&gt; System.Diagnostics.SymbolStore.ISymbolMethod" Usage="symReader.GetMethodFromDocumentPosition (document, line, column)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolReader.GetMethodFromDocumentPosition(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolMethod</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocument" />
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="column" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="document"><span data-ttu-id="37a26-143">方法所在的文件。</span><span class="sxs-lookup"><span data-stu-id="37a26-143">The document in which the method is located.</span></span></param>
        <param name="line"><span data-ttu-id="37a26-144">文件內的行位置。</span><span class="sxs-lookup"><span data-stu-id="37a26-144">The position of the line within the document.</span></span> <span data-ttu-id="37a26-145">行是有編號的，以 1 為開頭。</span><span class="sxs-lookup"><span data-stu-id="37a26-145">The lines are numbered, beginning with 1.</span></span></param>
        <param name="column"><span data-ttu-id="37a26-146">文件內的欄位置。</span><span class="sxs-lookup"><span data-stu-id="37a26-146">The position of column within the document.</span></span> <span data-ttu-id="37a26-147">欄是有編號的，以 1 為開頭。</span><span class="sxs-lookup"><span data-stu-id="37a26-147">The columns are numbered, beginning with 1.</span></span></param>
        <summary><span data-ttu-id="37a26-148">取得符號讀取器方法物件，包含文件中指定的位置。</span><span class="sxs-lookup"><span data-stu-id="37a26-148">Gets a symbol reader method object that contains a specified position in a document.</span></span></summary>
        <returns><span data-ttu-id="37a26-149">文件中指定之位置的符號讀取器方法物件。</span><span class="sxs-lookup"><span data-stu-id="37a26-149">The symbol reader method object for the specified position in the document.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolNamespace[] GetNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNamespaces () As ISymbolNamespace()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolNamespace ^&gt; ^ GetNamespaces();" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaces : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace[]&#xA;override this.GetNamespaces : unit -&gt; System.Diagnostics.SymbolStore.ISymbolNamespace[]" Usage="symReader.GetNamespaces " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolReader.GetNamespaces</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolNamespace[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="37a26-150">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-150">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="37a26-151">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-151">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="37a26-152">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="37a26-152">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSymAttribute">
      <MemberSignature Language="C#" Value="public virtual byte[] GetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] GetSymAttribute(valuetype System.Diagnostics.SymbolStore.SymbolToken parent, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSymAttribute (parent As SymbolToken, name As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ GetSymAttribute(System::Diagnostics::SymbolStore::SymbolToken parent, System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string -&gt; byte[]&#xA;override this.GetSymAttribute : System.Diagnostics.SymbolStore.SymbolToken * string -&gt; byte[]" Usage="symReader.GetSymAttribute (parent, name)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolReader.GetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="37a26-153">不使用這個參數。</span><span class="sxs-lookup"><span data-stu-id="37a26-153">This parameter is not used.</span></span></param>
        <param name="name"><span data-ttu-id="37a26-154">不使用這個參數。</span><span class="sxs-lookup"><span data-stu-id="37a26-154">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="37a26-155">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-155">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="37a26-156">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-156">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="37a26-157">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="37a26-157">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetVariables">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables (System.Diagnostics.SymbolStore.SymbolToken parent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolVariable[] GetVariables(valuetype System.Diagnostics.SymbolStore.SymbolToken parent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVariables (parent As SymbolToken) As ISymbolVariable()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Diagnostics::SymbolStore::ISymbolVariable ^&gt; ^ GetVariables(System::Diagnostics::SymbolStore::SymbolToken parent);" />
      <MemberSignature Language="F#" Value="abstract member GetVariables : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]&#xA;override this.GetVariables : System.Diagnostics.SymbolStore.SymbolToken -&gt; System.Diagnostics.SymbolStore.ISymbolVariable[]" Usage="symReader.GetVariables parent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Diagnostics.SymbolStore.ISymbolReader.GetVariables(System.Diagnostics.SymbolStore.SymbolToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolVariable[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parent" Type="System.Diagnostics.SymbolStore.SymbolToken" />
      </Parameters>
      <Docs>
        <param name="parent"><span data-ttu-id="37a26-158">不使用這個參數。</span><span class="sxs-lookup"><span data-stu-id="37a26-158">This parameter is not used.</span></span></param>
        <summary><span data-ttu-id="37a26-159">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-159">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></summary>
        <returns><span data-ttu-id="37a26-160">在所有情況下都擲回 <see cref="T:System.NotSupportedException" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-160">Throws a <see cref="T:System.NotSupportedException" /> in all cases.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="37a26-161">在所有情況下。</span><span class="sxs-lookup"><span data-stu-id="37a26-161">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReplaceSymbolStore">
      <MemberSignature Language="C#" Value="public virtual void ReplaceSymbolStore (string fileName, IntPtr stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReplaceSymbolStore(string fileName, native int stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore(System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReplaceSymbolStore (fileName As String, stream As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReplaceSymbolStore(System::String ^ fileName, IntPtr stream);" />
      <MemberSignature Language="F#" Value="abstract member ReplaceSymbolStore : string * nativeint -&gt; unit&#xA;override this.ReplaceSymbolStore : string * nativeint -&gt; unit" Usage="symReader.ReplaceSymbolStore (fileName, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="stream" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="37a26-162">包含符號存放區的檔案名稱，如果使用記憶體中存放區則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-162">The name of the file containing the symbol store, or <see langword="null" /> if using an in-memory store.</span></span></param>
        <param name="stream"><span data-ttu-id="37a26-163">符號存放區之輸入資料流的指標，如果使用磁碟上存放區則為 <see cref="F:System.IntPtr.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-163">The pointer to the input stream for the symbol store, or <see cref="F:System.IntPtr.Zero" /> if using an on-disk store.</span></span></param>
        <summary><span data-ttu-id="37a26-164">以差異符號存放區來取代現有的符號存放區。</span><span class="sxs-lookup"><span data-stu-id="37a26-164">Replaces the existing symbol store with a delta symbol store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a26-165"><xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> ，就像<xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A>可做為完全取代，而不是更新方法，但指定的差異。</span><span class="sxs-lookup"><span data-stu-id="37a26-165">The <xref:System.Diagnostics.SymbolStore.SymReader.ReplaceSymbolStore%2A> is much like the <xref:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore%2A> method, but the given delta acts as a complete replacement rather than an update.</span></span>  
  
 <span data-ttu-id="37a26-166">只是其中一個參數，`fileName`或`stream`，必須指定。</span><span class="sxs-lookup"><span data-stu-id="37a26-166">Only one of the parameters, `fileName` or `stream`, needs to be specified.</span></span> <span data-ttu-id="37a26-167">如果`fileName`指定符號存放區已包含該檔案中的符號。</span><span class="sxs-lookup"><span data-stu-id="37a26-167">If `fileName` is specified, the symbol store is updated with the symbols in that file.</span></span> <span data-ttu-id="37a26-168">如果`stream`指定符號存放區會更新包含來自<xref:System.Runtime.InteropServices.ComTypes.IStream>。</span><span class="sxs-lookup"><span data-stu-id="37a26-168">If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSymbolStore">
      <MemberSignature Language="C#" Value="public virtual void UpdateSymbolStore (string fileName, IntPtr stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateSymbolStore(string fileName, native int stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.SymReader.UpdateSymbolStore(System.String,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateSymbolStore (fileName As String, stream As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateSymbolStore(System::String ^ fileName, IntPtr stream);" />
      <MemberSignature Language="F#" Value="abstract member UpdateSymbolStore : string * nativeint -&gt; unit&#xA;override this.UpdateSymbolStore : string * nativeint -&gt; unit" Usage="symReader.UpdateSymbolStore (fileName, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="stream" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="37a26-169">包含符號存放區的檔案名稱，如果使用記憶體中存放區則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-169">The name of the file containing the symbol store, or <see langword="null" /> if using an in-memory store.</span></span></param>
        <param name="stream"><span data-ttu-id="37a26-170">符號存放區之輸入資料流的指標，如果使用磁碟上存放區則為 <see cref="F:System.IntPtr.Zero" />。</span><span class="sxs-lookup"><span data-stu-id="37a26-170">The pointer to the input stream for the symbol store, or <see cref="F:System.IntPtr.Zero" /> if using an on-disk store.</span></span></param>
        <summary><span data-ttu-id="37a26-171">以差異符號存放區來更新現有的符號存放區。</span><span class="sxs-lookup"><span data-stu-id="37a26-171">Updates the existing symbol store with a delta symbol store.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a26-172">這個方法會在編輯後繼續的情況下做為更新符號存放區的方式以符合原始的 PE 檔案的差異。</span><span class="sxs-lookup"><span data-stu-id="37a26-172">This method is used in Edit and Continue scenarios as a way to update the symbol store to match deltas to the original PE file.</span></span>  
  
 <span data-ttu-id="37a26-173">只是其中一個參數，`fileName`或`stream`，必須指定。</span><span class="sxs-lookup"><span data-stu-id="37a26-173">Only one of the parameters, `fileName` or `stream`, needs to be specified.</span></span> <span data-ttu-id="37a26-174">如果`fileName`指定符號存放區已包含該檔案中的符號。</span><span class="sxs-lookup"><span data-stu-id="37a26-174">If `fileName` is specified, the symbol store is updated with the symbols in that file.</span></span> <span data-ttu-id="37a26-175">如果`stream`指定符號存放區會更新包含來自<xref:System.Runtime.InteropServices.ComTypes.IStream>。</span><span class="sxs-lookup"><span data-stu-id="37a26-175">If `stream` is specified, the symbol store is updated with the data from the <xref:System.Runtime.InteropServices.ComTypes.IStream> .</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserEntryPoint">
      <MemberSignature Language="C#" Value="public virtual System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Diagnostics.SymbolStore.SymbolToken UserEntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Diagnostics.SymbolStore.SymReader.UserEntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserEntryPoint As SymbolToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Diagnostics::SymbolStore::SymbolToken UserEntryPoint { System::Diagnostics::SymbolStore::SymbolToken get(); };" />
      <MemberSignature Language="F#" Value="member this.UserEntryPoint : System.Diagnostics.SymbolStore.SymbolToken" Usage="System.Diagnostics.SymbolStore.SymReader.UserEntryPoint" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Diagnostics.SymbolStore.ISymbolReader.UserEntryPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>ISymWrapper</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.SymbolToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="37a26-176">取得方法的中繼資料語彙基元 (如果有的話)，這個語彙基元會被指定為模組的使用者進入點。</span><span class="sxs-lookup"><span data-stu-id="37a26-176">Gets the metadata token for the method that was specified as the user entry point for the module, if any.</span></span></summary>
        <value><span data-ttu-id="37a26-177">方法的中繼資料語彙基元，這是模組的使用者進入點。</span><span class="sxs-lookup"><span data-stu-id="37a26-177">The metadata token for the method that is the user entry point for the module.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="37a26-178">傳回的值通常是主要的方法。</span><span class="sxs-lookup"><span data-stu-id="37a26-178">The return value is normally the main method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.InteropServices.COMException"><span data-ttu-id="37a26-179">找不到進入點。</span><span class="sxs-lookup"><span data-stu-id="37a26-179">An entry point was not found.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>