<Type Name="ISymbolBinder" FullName="System.Diagnostics.SymbolStore.ISymbolBinder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed40b743b2eac38910d7079c392666f16af1e03a" /><Meta Name="ms.sourcegitcommit" Value="a3e01ec36374fac54a55add0dcc1e754e394abeb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="03/30/2019" /><Meta Name="ms.locfileid" Value="58692712" /></Metadata><TypeSignature Language="C#" Value="public interface ISymbolBinder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISymbolBinder" />
  <TypeSignature Language="DocId" Value="T:System.Diagnostics.SymbolStore.ISymbolBinder" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISymbolBinder" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISymbolBinder" />
  <TypeSignature Language="F#" Value="type ISymbolBinder = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7e3d5-101">表示 Managed 程式碼的符號繫結器 (Binder)。</span><span class="sxs-lookup"><span data-stu-id="7e3d5-101">Represents a symbol binder for managed code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7e3d5-102">這是介面的 managed 對應項目`ISymUnmanagedBinder`介面，也就是其中一個非受控的符號存放區介面可提供讀取和寫入偵錯符號資訊的替代方式。</span><span class="sxs-lookup"><span data-stu-id="7e3d5-102">This interface is the managed counterpart of the `ISymUnmanagedBinder` interface, which is one of the unmanaged symbol store interfaces that provide an alternate way to read and write debug symbol information.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetReader">
      <MemberSignature Language="C#" Value="public System.Diagnostics.SymbolStore.ISymbolReader GetReader (int importer, string filename, string searchPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Diagnostics.SymbolStore.ISymbolReader GetReader(int32 importer, string filename, string searchPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Diagnostics.SymbolStore.ISymbolBinder.GetReader(System.Int32,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReader (importer As Integer, filename As String, searchPath As String) As ISymbolReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Diagnostics::SymbolStore::ISymbolReader ^ GetReader(int importer, System::String ^ filename, System::String ^ searchPath);" />
      <MemberSignature Language="F#" Value="abstract member GetReader : int * string * string -&gt; System.Diagnostics.SymbolStore.ISymbolReader" Usage="iSymbolBinder.GetReader (importer, filename, searchPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Diagnostics.StackTrace</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This interface is not 64-bit clean.  Use ISymbolBinder1 instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;netframework-4.8;netcore-2.2">
          <AttributeName>System.Obsolete("The recommended alternative is ISymbolBinder1.GetReader. ISymbolBinder1.GetReader takes the importer interface pointer as an IntPtr instead of an Int32, and thus works on both 32-bit and 64-bit architectures. http://go.microsoft.com/fwlink/?linkid=14202=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("The recommended alternative is ISymbolBinder1.GetReader. ISymbolBinder1.GetReader takes the importer interface pointer as an IntPtr instead of an Int32, and thus works on both 32-bit and 64-bit architectures. https://go.microsoft.com/fwlink/?linkid=14202=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Diagnostics.SymbolStore.ISymbolReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.Int32" />
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="searchPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="importer"><span data-ttu-id="7e3d5-103">中繼資料匯入介面。</span><span class="sxs-lookup"><span data-stu-id="7e3d5-103">The metadata import interface.</span></span></param>
        <param name="filename"><span data-ttu-id="7e3d5-104">讀取器介面所需要的檔案名稱。</span><span class="sxs-lookup"><span data-stu-id="7e3d5-104">The name of the file for which the reader interface is required.</span></span></param>
        <param name="searchPath"><span data-ttu-id="7e3d5-105">用來搜尋符號檔的搜尋路徑。</span><span class="sxs-lookup"><span data-stu-id="7e3d5-105">The search path used to locate the symbol file.</span></span></param>
        <summary><span data-ttu-id="7e3d5-106">為目前的檔案取得符號讀取器的介面。</span><span class="sxs-lookup"><span data-stu-id="7e3d5-106">Gets the interface of the symbol reader for the current file.</span></span></summary>
        <returns><span data-ttu-id="7e3d5-107">讀取偵錯符號的 <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> 介面。</span><span class="sxs-lookup"><span data-stu-id="7e3d5-107">The <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader" /> interface that reads the debugging symbols.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e3d5-108">已知的中繼資料介面、 檔案名稱和搜尋路徑中，當<xref:System.Diagnostics.SymbolStore.ISymbolBinder.GetReader%2A>方法會傳回<xref:System.Diagnostics.SymbolStore.ISymbolReader>讀取偵錯符號的模組相關聯的介面。</span><span class="sxs-lookup"><span data-stu-id="7e3d5-108">When given a metadata interface, a file name, and a search path, the <xref:System.Diagnostics.SymbolStore.ISymbolBinder.GetReader%2A> method returns the <xref:System.Diagnostics.SymbolStore.ISymbolReader> interface that reads the debugging symbols associated with the module.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>