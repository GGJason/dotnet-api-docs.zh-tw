<Type Name="SecurityContextSecurityTokenResolver" FullName="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4b07774c53703c6b8e3c4db5dbaa896b4551fa4e" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39811079" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SecurityContextSecurityTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver, System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SecurityContextSecurityTokenResolver extends System.IdentityModel.Selectors.SecurityTokenResolver implements class System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class SecurityContextSecurityTokenResolver&#xA;Inherits SecurityTokenResolver&#xA;Implements ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityContextSecurityTokenResolver : System::IdentityModel::Selectors::SecurityTokenResolver, System::ServiceModel::Security::Tokens::ISecurityContextSecurityTokenCache" />
  <TypeSignature Language="F#" Value="type SecurityContextSecurityTokenResolver = class&#xA;    inherit SecurityTokenResolver&#xA;    interface ISecurityContextSecurityTokenCache" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenResolver</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>解析安全性內容權杖。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityContextSecurityTokenResolver (int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 securityContextCacheCapacity, bool removeOldestTokensOnCacheFull) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityContextCacheCapacity As Integer, removeOldestTokensOnCacheFull As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityContextSecurityTokenResolver(int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver : int * bool -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" Usage="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver (securityContextCacheCapacity, removeOldestTokensOnCacheFull)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityContextCacheCapacity" Type="System.Int32" />
        <Parameter Name="removeOldestTokensOnCacheFull" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="securityContextCacheCapacity">安全性內容快取的大小。</param>
        <param name="removeOldestTokensOnCacheFull">如果要在快取已滿時移除最舊的權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>初始化 <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果`removeOldestTokensOnCacheFull`已`false`，`AddContext`就會擲回<xref:System.ServiceModel.QuotaExceededException>如果已達到快取容量。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SecurityContextSecurityTokenResolver (int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull, TimeSpan clockSkew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 securityContextCacheCapacity, bool removeOldestTokensOnCacheFull, valuetype System.TimeSpan clockSkew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.#ctor(System.Int32,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityContextCacheCapacity As Integer, removeOldestTokensOnCacheFull As Boolean, clockSkew As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SecurityContextSecurityTokenResolver(int securityContextCacheCapacity, bool removeOldestTokensOnCacheFull, TimeSpan clockSkew);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver : int * bool * TimeSpan -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" Usage="new System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver (securityContextCacheCapacity, removeOldestTokensOnCacheFull, clockSkew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityContextCacheCapacity" Type="System.Int32" />
        <Parameter Name="removeOldestTokensOnCacheFull" Type="System.Boolean" />
        <Parameter Name="clockSkew" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="securityContextCacheCapacity">安全性內容快取的大小。</param>
        <param name="removeOldestTokensOnCacheFull">如果要在快取已滿時移除最舊的權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="clockSkew">用戶端和伺服器時鐘設定之間允許的最大時差。</param>
        <summary>使用指定的安全性內容快取容量和時鐘誤差最大值，初始化 <see cref="T:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContext">
      <MemberSignature Language="C#" Value="public void AddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddContext(class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddContext (token As SecurityContextSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddContext(System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member AddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; unit&#xA;override this.AddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; unit" Usage="securityContextSecurityTokenResolver.AddContext token" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.AddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">安全性內容權杖。</param>
        <summary>將安全性內容的安全性權杖加入權杖快取。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.QuotaExceededException">
          <see cref="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" /> 屬性為 <see langword="false" /> 且已達或超過快取容量。</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearContexts">
      <MemberSignature Language="C#" Value="public void ClearContexts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearContexts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClearContexts" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearContexts ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearContexts();" />
      <MemberSignature Language="F#" Value="abstract member ClearContexts : unit -&gt; unit&#xA;override this.ClearContexts : unit -&gt; unit" Usage="securityContextSecurityTokenResolver.ClearContexts " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.ClearContexts</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>清除內容的權杖快取。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClockSkew">
      <MemberSignature Language="C#" Value="public TimeSpan ClockSkew { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ClockSkew" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClockSkew As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ClockSkew { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.ClockSkew : TimeSpan" Usage="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.ClockSkew" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回用戶端和伺服器時鐘設定之間允許的最大時差。</summary>
        <value>用戶端和伺服器時鐘設定之間允許的最大時差。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllContexts">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt; GetAllContexts (System.Xml.UniqueId contextId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt; GetAllContexts(class System.Xml.UniqueId contextId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetAllContexts(System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllContexts (contextId As UniqueId) As Collection(Of SecurityContextSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^&gt; ^ GetAllContexts(System::Xml::UniqueId ^ contextId);" />
      <MemberSignature Language="F#" Value="abstract member GetAllContexts : System.Xml.UniqueId -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt;&#xA;override this.GetAllContexts : System.Xml.UniqueId -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt;" Usage="securityContextSecurityTokenResolver.GetAllContexts contextId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetAllContexts(System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId">指定的安全性內容識別碼。</param>
        <summary>取得與指定內容識別碼相符之安全性內容之安全性權杖識別碼的集合。</summary>
        <returns>安全性內容權杖的泛型集合。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContext">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.Tokens.SecurityContextSecurityToken GetContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken GetContext(class System.Xml.UniqueId contextId, class System.Xml.UniqueId generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetContext (contextId As UniqueId, generation As UniqueId) As SecurityContextSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ GetContext(System::Xml::UniqueId ^ contextId, System::Xml::UniqueId ^ generation);" />
      <MemberSignature Language="F#" Value="abstract member GetContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityToken&#xA;override this.GetContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" Usage="securityContextSecurityTokenResolver.GetContext (contextId, generation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.GetContext(System.Xml.UniqueId,System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.Tokens.SecurityContextSecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="generation" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId">指定的安全性內容識別碼。</param>
        <param name="generation">產生作業。</param>
        <summary>取得與指定之內容識別碼及產生相符的安全性內容之安全性權杖識別碼。</summary>
        <returns>比對的安全性內容權杖。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllContexts">
      <MemberSignature Language="C#" Value="public void RemoveAllContexts (System.Xml.UniqueId contextId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAllContexts(class System.Xml.UniqueId contextId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveAllContexts(System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllContexts (contextId As UniqueId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAllContexts(System::Xml::UniqueId ^ contextId);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAllContexts : System.Xml.UniqueId -&gt; unit&#xA;override this.RemoveAllContexts : System.Xml.UniqueId -&gt; unit" Usage="securityContextSecurityTokenResolver.RemoveAllContexts contextId" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveAllContexts(System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId">指定的安全性內容識別碼。</param>
        <summary>從快取中移除所有符合指定之內容識別碼的權杖。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveContext">
      <MemberSignature Language="C#" Value="public void RemoveContext (System.Xml.UniqueId contextId, System.Xml.UniqueId generation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveContext(class System.Xml.UniqueId contextId, class System.Xml.UniqueId generation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveContext (contextId As UniqueId, generation As UniqueId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveContext(System::Xml::UniqueId ^ contextId, System::Xml::UniqueId ^ generation);" />
      <MemberSignature Language="F#" Value="abstract member RemoveContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; unit&#xA;override this.RemoveContext : System.Xml.UniqueId * System.Xml.UniqueId -&gt; unit" Usage="securityContextSecurityTokenResolver.RemoveContext (contextId, generation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.RemoveContext(System.Xml.UniqueId,System.Xml.UniqueId)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextId" Type="System.Xml.UniqueId" />
        <Parameter Name="generation" Type="System.Xml.UniqueId" />
      </Parameters>
      <Docs>
        <param name="contextId">指定的安全性內容識別碼。</param>
        <param name="generation">產生作業。</param>
        <summary>從快取中移除所有符合指定之內容識別碼及產生的權杖。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOldestTokensOnCacheFull">
      <MemberSignature Language="C#" Value="public bool RemoveOldestTokensOnCacheFull { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RemoveOldestTokensOnCacheFull" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoveOldestTokensOnCacheFull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RemoveOldestTokensOnCacheFull { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoveOldestTokensOnCacheFull : bool" Usage="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.RemoveOldestTokensOnCacheFull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，這個值表示是否要在快取已滿時移除最舊的權杖。</summary>
        <value>如果要在快取已滿時移除最舊的權杖，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityContextTokenCacheCapacity">
      <MemberSignature Language="C#" Value="public int SecurityContextTokenCacheCapacity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SecurityContextTokenCacheCapacity" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityContextTokenCacheCapacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SecurityContextTokenCacheCapacity { int get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityContextTokenCacheCapacity : int" Usage="System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.SecurityContextTokenCacheCapacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得安全性內容權杖快取大小。</summary>
        <value>安全性內容權杖快取大小。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryAddContext">
      <MemberSignature Language="C#" Value="public bool TryAddContext (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryAddContext(class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryAddContext (token As SecurityContextSecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryAddContext(System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member TryAddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; bool&#xA;override this.TryAddContext : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken -&gt; bool" Usage="securityContextSecurityTokenResolver.TryAddContext token" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.TryAddContext(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">安全性內容權杖。</param>
        <summary>嘗試將權杖加入至快取。</summary>
        <returns>如果權杖已成功加入至快取，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="token" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="token" /> 日期或時間超出限制。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryResolveSecurityKeyCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveSecurityKeyCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityKey&amp; key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveSecurityKeyCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef key As SecurityKey) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveSecurityKeyCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityKey ^ % key);" />
      <MemberSignature Language="F#" Value="override this.TryResolveSecurityKeyCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityContextSecurityTokenResolver.TryResolveSecurityKeyCore (keyIdentifierClause, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="key" Type="System.IdentityModel.Tokens.SecurityKey" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">安全性金鑰識別碼子句。</param>
        <param name="key">當這個方法傳回時，會包含解析的金鑰核心。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>嘗試在提供指定的金鑰識別碼子句之下解析安全性金鑰核心。</summary>
        <returns>如果金鑰核心已成功解析，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryResolveTokenCore">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>嘗試在提供指定的金鑰識別項之下解析權杖。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifier As SecurityKeyIdentifier, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifier *  -&gt; bool" Usage="securityContextSecurityTokenResolver.TryResolveTokenCore (keyIdentifier, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier">安全性金鑰識別碼。</param>
        <param name="token">當這個方法傳回時，會包含解析的金鑰核心。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>嘗試在提供指定的金鑰識別項之下解析權杖。</summary>
        <returns>如果金鑰權杖已成功解析，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryResolveTokenCore">
      <MemberSignature Language="C#" Value="protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryResolveTokenCore(class System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, [out] class System.IdentityModel.Tokens.SecurityToken&amp; token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryResolveTokenCore (keyIdentifierClause As SecurityKeyIdentifierClause, ByRef token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryResolveTokenCore(System::IdentityModel::Tokens::SecurityKeyIdentifierClause ^ keyIdentifierClause, [Runtime::InteropServices::Out] System::IdentityModel::Tokens::SecurityToken ^ % token);" />
      <MemberSignature Language="F#" Value="override this.TryResolveTokenCore : System.IdentityModel.Tokens.SecurityKeyIdentifierClause *  -&gt; bool" Usage="securityContextSecurityTokenResolver.TryResolveTokenCore (keyIdentifierClause, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifierClause" Type="System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyIdentifierClause">安全性金鑰識別碼子句。</param>
        <param name="token">當這個方法傳回時，會包含解析的金鑰核心。 這個參數會以未初始化的狀態傳遞。</param>
        <summary>嘗試在提供指定的金鑰識別碼子句之下解析權杖。</summary>
        <returns>如果金鑰權杖已成功解析，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateContextCachingTime">
      <MemberSignature Language="C#" Value="public void UpdateContextCachingTime (System.ServiceModel.Security.Tokens.SecurityContextSecurityToken context, DateTime expirationTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateContextCachingTime(class System.ServiceModel.Security.Tokens.SecurityContextSecurityToken context, valuetype System.DateTime expirationTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SecurityContextSecurityTokenResolver.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateContextCachingTime (context As SecurityContextSecurityToken, expirationTime As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateContextCachingTime(System::ServiceModel::Security::Tokens::SecurityContextSecurityToken ^ context, DateTime expirationTime);" />
      <MemberSignature Language="F#" Value="abstract member UpdateContextCachingTime : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken * DateTime -&gt; unit&#xA;override this.UpdateContextCachingTime : System.ServiceModel.Security.Tokens.SecurityContextSecurityToken * DateTime -&gt; unit" Usage="securityContextSecurityTokenResolver.UpdateContextCachingTime (context, expirationTime)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Security.Tokens.ISecurityContextSecurityTokenCache.UpdateContextCachingTime(System.ServiceModel.Security.Tokens.SecurityContextSecurityToken,System.DateTime)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Security.Tokens.SecurityContextSecurityToken" />
        <Parameter Name="expirationTime" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="context">安全性內容。</param>
        <param name="expirationTime">新的到期時間和日期。</param>
        <summary>更新快取中權杖的到期日。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>