<Type Name="ILogonTokenCacheManager" FullName="System.ServiceModel.Security.Tokens.ILogonTokenCacheManager">
  <TypeSignature Language="C#" Value="public interface ILogonTokenCacheManager" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILogonTokenCacheManager" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.Tokens.ILogonTokenCacheManager" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILogonTokenCacheManager" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILogonTokenCacheManager" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b36d6-101">這個介面可讓應用程式視需要清除 Windows 權杖快取。</span><span class="sxs-lookup"><span data-stu-id="b36d6-101">This interface enables an application to clear the Windows token cache on demand.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36d6-102">如果不使用這個介面，就沒有別的方式可以從 Windows 登入權杖快取中，移除使用隨訊息一起提供之使用者名稱和密碼進行登入所取得的 Windows 權杖。</span><span class="sxs-lookup"><span data-stu-id="b36d6-102">Without this interface, there is no way to remove Windows tokens obtained by logging on with the user name and password supplied with the message from the Windows logon tokens cache.</span></span> <span data-ttu-id="b36d6-103">當應用程式必須在其合約上提供登出作業以便讓使用者登出時，沒有任何方式可以從系統移除使用者的所有追蹤資料：代表使用者的快取 Windows 權杖會保存在記憶體上，直到其存留期到期且權杖已從快取中移除為止。</span><span class="sxs-lookup"><span data-stu-id="b36d6-103">When an application needs to log off a user by providing a logoff operation on its contract, there is no way to remove all traces of the user from the system: the cached Windows token that represents the user is held in the memory until its time-to-live expires and the token is removed from the cache.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FlushLogonTokenCache">
      <MemberSignature Language="C#" Value="public void FlushLogonTokenCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FlushLogonTokenCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.FlushLogonTokenCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub FlushLogonTokenCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void FlushLogonTokenCache();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b36d6-104">移除登入快取中的所有權杖。</span><span class="sxs-lookup"><span data-stu-id="b36d6-104">Removes all tokens from the logon cache.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36d6-105">實作之後，這個方法會將快取清空。</span><span class="sxs-lookup"><span data-stu-id="b36d6-105">When implemented, this method will empty the cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveCachedLogonToken">
      <MemberSignature Language="C#" Value="public bool RemoveCachedLogonToken (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveCachedLogonToken(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.ILogonTokenCacheManager.RemoveCachedLogonToken(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveCachedLogonToken (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveCachedLogonToken(System::String ^ username);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username"><span data-ttu-id="b36d6-106">所要移除之權杖上的使用者名稱。</span><span class="sxs-lookup"><span data-stu-id="b36d6-106">The user name on the token to remove.</span></span></param>
        <summary><span data-ttu-id="b36d6-107">將指定的權杖從登入快取中移除。</span><span class="sxs-lookup"><span data-stu-id="b36d6-107">Removes the specified token from the logon cache.</span></span></summary>
        <returns>
          <span data-ttu-id="b36d6-108">如果使用者的權杖已成功移除，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b36d6-108"><see langword="true" /> if the user's token was successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b36d6-109">實作之後，這個方法會從快取中移除由 `username` 所識別的權杖。</span><span class="sxs-lookup"><span data-stu-id="b36d6-109">This method, when implemented, removes the token identified by `username` from the cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>