<Type Name="IInvokeProvider" FullName="System.Windows.Automation.Provider.IInvokeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f37d131e7512d996c8577a12b1a484fd58bb78b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36571608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IInvokeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInvokeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IInvokeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInvokeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInvokeProvider" />
  <TypeSignature Language="F#" Value="type IInvokeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("54fcb24b-e18e-47a2-b4d3-eccbe77599a2")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1fefc-101">公開方法與屬性，以支援使用者介面自動化用戶端存取起始或執行單一明確動作的控制項，且啟動時不會維護狀態。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1fefc-101">Exposes methods and properties to support UI Automation client access to controls that initiate or perform a single, unambiguous action and do not maintain state when activated.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fefc-102">在必須支援的 UI 自動化提供者上實作<xref:System.Windows.Automation.InvokePattern>控制項模式。</span><span class="sxs-lookup"><span data-stu-id="1fefc-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.InvokePattern> control pattern.</span></span>  
  
 <span data-ttu-id="1fefc-103">如果未透過另一個控制項模式提供者來公開相同的行為，則控制項會實作 <xref:System.Windows.Automation.Provider.IInvokeProvider> 。</span><span class="sxs-lookup"><span data-stu-id="1fefc-103">Controls implement <xref:System.Windows.Automation.Provider.IInvokeProvider> if the same behavior is not exposed through another control pattern provider.</span></span> <span data-ttu-id="1fefc-104">例如，如果控制項的 <xref:System.Windows.Automation.InvokePattern.Invoke%2A> 方法所執行的動作與 <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> 或 <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> 方法相同，該控制項就不應實作 <xref:System.Windows.Automation.Provider.IInvokeProvider>。</span><span class="sxs-lookup"><span data-stu-id="1fefc-104">For example, if the <xref:System.Windows.Automation.InvokePattern.Invoke%2A> method on a control performs the same action as the <xref:System.Windows.Automation.ExpandCollapsePattern.Expand%2A> or <xref:System.Windows.Automation.ExpandCollapsePattern.Collapse%2A> method, the control should not implement <xref:System.Windows.Automation.Provider.IInvokeProvider>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.InvokePattern" />
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IInvokeProvider.Invoke" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invoke();" />
      <MemberSignature Language="F#" Value="abstract member Invoke : unit -&gt; unit" Usage="iInvokeProvider.Invoke " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1fefc-105">傳送要求以啟動控制項，並啟始其單一明確的動作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fefc-105">Sends a request to activate a control and initiate its single, unambiguous action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1fefc-106"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> 為非同步呼叫，且必須立即返回，不可封鎖。</span><span class="sxs-lookup"><span data-stu-id="1fefc-106"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> is an asynchronous call and must return immediately without blocking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1fefc-107">對於叫用時直接或間接啟動強制回應對話方塊的控制項，此行為尤其重要。</span><span class="sxs-lookup"><span data-stu-id="1fefc-107">This behavior is particularly critical for controls that, directly or indirectly, launch a modal dialog when invoked.</span></span> <span data-ttu-id="1fefc-108">任何引發事件的使用者介面自動化用戶端都會維持封鎖的狀態，直到強制回應對話方塊關閉為止。</span><span class="sxs-lookup"><span data-stu-id="1fefc-108">Any UI Automation client that instigated the event will remain blocked until the modal dialog is closed.</span></span>  
  
 <span data-ttu-id="1fefc-109"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> 會引發 <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> 事件。</span><span class="sxs-lookup"><span data-stu-id="1fefc-109"><xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> raises the <xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> event.</span></span> <span data-ttu-id="1fefc-110">可能的話，控制其相關聯的動作完成之後，應該引發事件。</span><span class="sxs-lookup"><span data-stu-id="1fefc-110">If possible, the event should be raised after the control has completed its associated action.</span></span>  
  
 <span data-ttu-id="1fefc-111"><xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> 服務之前，應引發<xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A>要求依下列情況：</span><span class="sxs-lookup"><span data-stu-id="1fefc-111"><xref:System.Windows.Automation.InvokePatternIdentifiers.InvokedEvent> should be raised before servicing the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> request in the following scenarios:</span></span>  
  
-   <span data-ttu-id="1fefc-112">無法或不適合等待至動作完成。</span><span class="sxs-lookup"><span data-stu-id="1fefc-112">It is not possible or practical to wait until the action is complete.</span></span>  
  
-   <span data-ttu-id="1fefc-113">動作需要使用者互動。</span><span class="sxs-lookup"><span data-stu-id="1fefc-113">The action requires user interaction.</span></span>  
  
-   <span data-ttu-id="1fefc-114">此動作會相當耗時，而且會導致長時間封鎖呼叫的用戶端。</span><span class="sxs-lookup"><span data-stu-id="1fefc-114">The action is time-consuming and will cause the calling client to block for a significant length of time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1fefc-115">下列範例會實作<xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A>MouseDown 事件處理常式的控制項上的方法。</span><span class="sxs-lookup"><span data-stu-id="1fefc-115">The following example implements the <xref:System.Windows.Automation.Provider.IInvokeProvider.Invoke%2A> method on the MouseDown event handler of a control.</span></span> <span data-ttu-id="1fefc-116">假設`providerControl`已建構類別時已經初始化的成員變數。</span><span class="sxs-lookup"><span data-stu-id="1fefc-116">Assume that `providerControl` is a member variable that was initialized when the class was constructed.</span></span>  
  
 [!code-csharp[UIAProvider_snip#106](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAProvider_snip/CSharp/Invoker.cs#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
          <span data-ttu-id="1fefc-117">如果未啟用此控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1fefc-117">If the control is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>