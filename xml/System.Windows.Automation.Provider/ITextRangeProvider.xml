<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ITextRangeProvider.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c1bb24a3af3df2a2b923b36a2f7d70e5b19004804.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bb24a3af3df2a2b923b36a2f7d70e5b19004804</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Provider.ITextRangeProvider">
          <source>Exposes methods and properties to support UI Automation client access to a span of continuous text in a text container that implements <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.ITextProvider" /&gt;</ph>.</source>
          <target state="translated">公開方法與屬性，以支援使用者介面自動化用戶端在實作 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.ITextProvider" /&gt;</ph> 的文字容器中存取一段連續的文字。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.ITextRangeProvider">
          <source>Implemented on a UI Automation provider that must support the <ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph> control pattern.</source>
          <target state="translated">在必須支援的 UI 自動化提供者上實作<ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph>控制項模式。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.ITextRangeProvider">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange&gt;</ph> can represent an insertion point, a subset, or all of the text in a <ph id="ph2">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph> container.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange&gt;</ph>的插入點、 的子集或所有中的文字可以代表<ph id="ph2">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph>容器。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
          <source>Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">加入至文字容器中反白的文字集合，此容器支援多次斷續選取。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
          <source>The text insertion point moves to the area of the new selection.</source>
          <target state="translated">文字插入點移動至新的選取範圍的區域。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
          <source>Providing a degenerate text range moves the insertion point.</source>
          <target state="translated">提供變質文字範圍移動插入點。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
          <source>If text provider does not support multiple, disjoint selections (that is, <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /&gt;</ph> must have a value of <ph id="ph2">&lt;see langword="Multiple" /&gt;</ph>).</source>
          <target state="translated">如果文字提供者不支援多次斷續選取 (也就是說，<ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /&gt;</ph> 的值必須為 <ph id="ph2">&lt;see langword="Multiple" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /&gt;</ph> identical to the original <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /&gt;</ph> and inheriting all properties of the original.</source>
          <target state="translated">傳回新的 <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /&gt;</ph>，與原始 <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /&gt;</ph> 相同且繼承其所有屬性。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
          <source>The new text range.</source>
          <target state="translated">新的文字範圍。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) is never returned.</source>
          <target state="translated">從未傳回 Null 參考 (在 Visual Basic 中為 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
          <source>The new range can be manipulated independently from the original.</source>
          <target state="translated">新的範圍可以從原始獨立操作。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
          <source>A text range to compare</source>
          <target state="translated">要比較的文字範圍</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
          <source>Returns a value that indicates whether the span (the <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> endpoint to the <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> endpoint) of a text range is the same as another text range.</source>
          <target state="translated">傳回的值表示文字範圍的擴展 (<ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> 端點至 <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> 端點) 與另一個文字範圍是否相同。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the span of both text ranges is identical; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果兩個文字範圍的跨幅相同，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
          <source>If the range being compared does not come from the same text provider.</source>
          <target state="translated">如果要比較的範圍不是來自相同的文字提供者。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> endpoint of the caller.</source>
          <target state="translated">呼叫端的 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> 端點。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>The target range for comparison.</source>
          <target state="translated">比較的目標範圍。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> endpoint of the target.</source>
          <target state="translated">目標的 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> 或 <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> 端點。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Returns a value that specifies whether two text ranges have identical endpoints.</source>
          <target state="translated">傳回的值指定兩個文字範圍是否有相同的端點。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</source>
          <target state="translated">如果呼叫端的端點在文字中比目標端點更早出現，則傳回負值。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Returns zero if the caller's endpoint is at the same location as the target endpoint.</source>
          <target state="translated">如果呼叫端的端點與目標端點在相同位置，則傳回零。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</source>
          <target state="translated">如果呼叫端的端點在文字中比目標端點更晚出現，則傳回正值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>If <ph id="ph1">&lt;paramref name="targetRange" /&gt;</ph> is from a different text provider.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="targetRange" /&gt;</ph> 來自不同的文字提供者。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The textual unit.</source>
          <target state="translated">文字單元。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>Expands the text range to the specified text unit.</source>
          <target state="translated">將文字範圍擴展至指定的文字單元。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>If the range is already an exact quantity of the specified units then it remains unchanged.</source>
          <target state="translated">如果範圍中的指定單位的精確數量則保持不變。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>There is a series of steps are involved behind the scenes in order for the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> method to execute successfully.</source>
          <target state="translated">沒有一系列的步驟會在幕後順序<ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph>方法才能成功執行。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> endpoint, which makes the <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint superfluous.</source>
          <target state="translated">文字範圍已正規化；也就是，文字範圍已在 <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> 端點摺疊為變質範圍，以致 <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> 端點變成多餘的。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt><ph id="ph2">http://www.microsoft.com</ph><ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">這個步驟是必要情況下，文字範圍跨越<ph id="ph1">`unit`</ph>界限; 例如，"{The U} RL <bpt id="p1">[</bpt> <ph id="ph2">http://www.microsoft.com</ph> <ept id="p1">](http://www.microsoft.com)</ept>內嵌在文字"其中"{"和"}"是文字範圍端點。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The resulting range is moved backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> to the beginning of the requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">結果產生的範圍會在 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> 中向後移至所要求 <ph id="ph2">`unit`</ph> 界限的開頭。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The range is moved forward or backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> by the requested number of <ph id="ph2">`unit`</ph> boundaries.</source>
          <target state="translated">範圍會在 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> 中依所要求的 <ph id="ph2">`unit`</ph> 界限數目向前或向後移動。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The range is then expanded from a degenerate range state by moving the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint by one requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">範圍會接著依一個要求的 <ph id="ph2">`unit`</ph> 界限移動 <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> 端點，從變質範圍狀態展開。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>由 Move 和 expandtoenclosingunit 進行的範圍調整<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>由 Move 和 expandtoenclosingunit 進行的範圍調整<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</source>
          <target state="translated">如何針對 Move() 和 ExpandToEnclosingUnit() 調整文字範圍的範例</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</source>
          <target state="translated">這些步驟是必要的因為它是很常見的螢幕助讀員讀取完整單字、 句子或整個段落插入點或任何虛擬的游標位置。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A&gt;</ph> respects both hidden and visible text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A&gt;</ph> 尊重隱藏和顯示文字。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A&gt;</ph> defers to the next largest <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> supported if the given <ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> is not supported by the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A&gt;</ph> 延後到下一個最大<ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph>如果給定<ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph>控制項不支援。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">如下所示的順序，從最大、 最小單位。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>The attribute to search for.</source>
          <target state="translated">要搜尋的屬性。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>The attribute value to search for.</source>
          <target state="translated">要搜尋的屬性值。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>This value must match the type specified for the attribute.</source>
          <target state="translated">這個值必須符合屬性的型別。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the last occurring text range should be returned instead of the first; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果傳回的是最後產生的文字範圍，而不是第一個文字範圍，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>Returns a text range subset that has the specified attribute value.</source>
          <target state="translated">傳回具有指定之屬性值的文字範圍子集。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>A text range having a matching attribute and attribute value; otherwise null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">具有相符屬性和屬性值的文字範圍；否則為 Null (在 Visual Basic 中為 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">在隱藏與顯示的文字之間沒有差異。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source>The text string to search for.</source>
          <target state="translated">要搜尋的文字字串。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the last occurring text range should be returned instead of the first; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果傳回的是最後產生的文字範圍，而不是第一個文字範圍，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if case should be ignored; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果要忽略大小寫，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source>Returns a text range subset that contains the specified text.</source>
          <target state="translated">傳回包含指定文字的文字範圍子集。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source>A text range matching the specified text; otherwise null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">符合指定之文字的文字範圍；否則為 Null (在 Visual Basic 中為 <ph id="ph1">&lt;see langword="Nothing" /&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">在隱藏與顯示的文字之間沒有差異。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>The text attribute.</source>
          <target state="translated">文字屬性。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>Retrieves the value of the specified attribute across the text range.</source>
          <target state="translated">從整個文字範圍中擷取指定屬性的值。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>Retrieves an object representing the value of the specified attribute.</source>
          <target state="translated">擷取物件，代表指定之屬性的值。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>For example, <bpt id="p1">&lt;c&gt;</bpt>GetAttributeValue(TextPattern.FontNameAttribute)<ept id="p1">&lt;/c&gt;</ept> would return a string that represents the font name of the text range while <bpt id="p2">&lt;c&gt;</bpt>GetAttributeValue(TextPattern.IsItalicAttribute)<ept id="p2">&lt;/c&gt;</ept> would return a value of type <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">例如，<bpt id="p1">&lt;c&gt;</bpt>GetAttributeValue(TextPattern.FontNameAttribute)<ept id="p1">&lt;/c&gt;</ept> 會傳回代表文字範圍之字型名稱的字串，而 <bpt id="p2">&lt;c&gt;</bpt>GetAttributeValue(TextPattern.IsItalicAttribute)<ept id="p2">&lt;/c&gt;</ept> 會傳回 <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> 類型的值。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /&gt;</ph> if the value of the specified attribute varies over the text range.</source>
          <target state="translated">如果指定之屬性的值在文字範圍內會變動，則傳回 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /&gt;</ph> if the specified attribute is not supported by the provider or the control.</source>
          <target state="translated">如果提供者或控制項不支援指定的屬性，則傳回 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">在隱藏與顯示的文字之間沒有差異。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>If the specified attribute is not valid.</source>
          <target state="translated">如果指定的屬性無效。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
          <source>Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</source>
          <target state="translated">對文字範圍中每一個完整或部分可見的文字行，擷取週框的集合。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
          <source>An array of bounding rectangles for each full or partial line of text in a text range.</source>
          <target state="translated">由文字範圍中每一個完整或部分可見的文字行所構成的週框陣列。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
          <source>An empty array for a degenerate range.</source>
          <target state="translated">變質範圍的空陣列。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
          <source>An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</source>
          <target state="translated">具有螢幕座標之文字範圍的空陣列，這些座標讓文字範圍完全放在螢幕之外、捲動到檢視之外，或被重疊的視窗遮蔽。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
          <source>Retrieves a collection of all embedded objects that fall within the text range.</source>
          <target state="translated">擷取文字範圍內所有內嵌物件的集合。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
          <source>A collection of child objects that fall within the range.</source>
          <target state="translated">範圍內子物件的集合。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
          <source>Children that overlap with the text range but are not entirely enclosed by it will also be included in the collection.</source>
          <target state="translated">如果子系與文字範圍重疊，但未被範圍完全圍住，則也會包含在集合中。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
          <source>Returns an empty collection if there are no child objects.</source>
          <target state="translated">如果沒有子物件，則傳回空集合。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
          <source>Returns the innermost control that encloses the text range.</source>
          <target state="translated">傳回圍住文字範圍的最內層控制項。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
          <source>The enclosing control, typically the text provider that supplies the text range.</source>
          <target state="translated">封入控制項，通常是提供文字範圍的文字提供者。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
          <source>However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</source>
          <target state="translated">但是，如果文字提供者支援子項目，例如表格或超連結，則封入項目可以為文字提供者的子代。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>The maximum length of the string to return.</source>
          <target state="translated">傳回之字串的最大長度。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>Use <bpt id="p1">&lt;c&gt;</bpt>-1<ept id="p1">&lt;/c&gt;</ept> if no limit is required.</source>
          <target state="translated">如果不需要限制，請使用 <bpt id="p1">&lt;c&gt;</bpt>-1<ept id="p1">&lt;/c&gt;</ept>。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>Retrieves the plain text of the range.</source>
          <target state="translated">擷取範圍的純文字。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>The plain text of the text range, possibly truncated at the specified <ph id="ph1">&lt;paramref name="maxLength" /&gt;</ph>.</source>
          <target state="translated">文字範圍的純文字，可能會依指定的 <ph id="ph1">&lt;paramref name="maxLength" /&gt;</ph> 截斷。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A&gt;</ph> respects both hidden and visible text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A&gt;</ph> 尊重隱藏和顯示文字。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>If <ph id="ph1">`maxLength`</ph> is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</source>
          <target state="translated">如果<ph id="ph1">`maxLength`</ph>大於的長度是呼叫端的文字範圍內，傳回的字串會是個文字範圍的純文字。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A&gt;</ph> will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A&gt;</ph> 不會影響順序文字流向; 中的端點它一定會傳回邏輯文字流程順序中的文字範圍的開始和結束端點之間的文字。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="maxLength" /&gt;</ph> is less than -1.</source>
          <target state="translated">如果 <ph id="ph1">&lt;paramref name="maxLength" /&gt;</ph> 小於 -1。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The text unit boundary.</source>
          <target state="translated">文字單元界限。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The number of text units to move.</source>
          <target state="translated">要移動的文字單元數。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</source>
          <target state="translated">正值會將文字範圍向前移動，負值會將文字範圍向後移動，0 沒有作用。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>Moves the text range the specified number of text units.</source>
          <target state="translated">將文字範圍移動指定的文字單元數。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The number of units actually moved.</source>
          <target state="translated">實際移動的單元數。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>This can be less than the number requested if either of the new text range endpoints is greater than or less than the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /&gt;</ph> endpoints.</source>
          <target state="translated">如果新的文字範圍端點大於或小於 <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /&gt;</ph> 端點，則此值會小於要求的數目。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> method to execute successfully.</source>
          <target state="translated">如需周遊文字範圍的內容，則應在幕後執行一連串的步驟，才能成功執行 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> endpoint, which makes the <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint superfluous.</source>
          <target state="translated">文字範圍已正規化；也就是，文字範圍已在 <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> 端點摺疊為變質範圍，以致 <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> 端點變成多餘的。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt><ph id="ph2">http://www.microsoft.com</ph><ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">這個步驟是必要情況下，文字範圍跨越<ph id="ph1">`unit`</ph>界限; 例如，"{The U} RL <bpt id="p1">[</bpt> <ph id="ph2">http://www.microsoft.com</ph> <ept id="p1">](http://www.microsoft.com)</ept>內嵌在文字"其中"{"和"}"是文字範圍端點。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The resulting range is moved backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> to the beginning of the requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">結果產生的範圍會在 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> 中向後移至所要求 <ph id="ph2">`unit`</ph> 界限的開頭。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The range is moved forward or backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> by the requested number of <ph id="ph2">`unit`</ph> boundaries.</source>
          <target state="translated">範圍會在 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> 中依所要求的 <ph id="ph2">`unit`</ph> 界限數目向前或向後移動。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The range is then expanded from a degenerate range state by moving the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint by one requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">範圍會接著依一個要求的 <ph id="ph2">`unit`</ph> 界限移動 <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> 端點，從變質範圍狀態展開。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>由 Move 和 expandtoenclosingunit 進行的範圍調整<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>由 Move 和 expandtoenclosingunit 進行的範圍調整<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</source>
          <target state="translated">如何針對 Move() 和 ExpandToEnclosingUnit() 調整文字範圍的範例</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> tree; object boundaries are ignored.</source>
          <target state="translated">在 <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> 樹狀目錄的控制項檢視和內容檢視 (例如超連結或表格儲存格) 中，文字容器和內嵌物件的文字內容 (或內部文字) 會公開為單一連續的文字資料流； 物件界限會被忽略。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><bpt id="p1">![</bpt>Text ranges spanned by embedded objects.<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Text ranges spanned by embedded objects.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>合併的內嵌物件的文字範圍。<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>合併內嵌物件的文字範圍。<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>Example of a text stream with embedded objects and their range spans</source>
          <target state="translated">具有內嵌物件及其範圍的文字資料流範例</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> respects both hidden and visible text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> 尊重隱藏和顯示文字。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> defers to the next largest <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> supported if the given <ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> is not supported by the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> 延後到下一個最大<ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph>如果給定<ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph>控制項不支援。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">如下所示的順序，從最大、 最小單位。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The text is not altered in any way, the text range just spans a different part of the text.</source>
          <target state="translated">文字不會改變以任何方式，只是文字範圍擴展的不同部分文字。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>The endpoint to move.</source>
          <target state="translated">要移動的端點。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Another range from the same text provider.</source>
          <target state="translated">來自相同文字提供者的另一個範圍。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>An endpoint on the other range.</source>
          <target state="translated">另一個範圍上的端點。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Moves one endpoint of a text range to the specified endpoint of a second text range.</source>
          <target state="translated">將文字範圍的一個端點移至第二個文字範圍上指定的端點。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> is always less than or equal to <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph>).</source>
          <target state="translated">如果移動端點置於相同的文字範圍的另一個端點則導致變質範圍，以及確保端點的正確順序也，移動其他端點 (也就是<ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph>一定會小於或等於<ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The endpoint to move.</source>
          <target state="translated">要移動的端點。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The textual unit for moving.</source>
          <target state="translated">要移動的文字單元。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The number of units to move.</source>
          <target state="translated">要移動的單位數。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>A positive value moves the endpoint forward.</source>
          <target state="translated">正值會將端點向前移動。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>A negative value moves backward.</source>
          <target state="translated">負值會向後移動。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>A value of 0 has no effect.</source>
          <target state="translated">值為 0 沒有作用。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>Moves one endpoint of the text range the specified number of text units within the document range.</source>
          <target state="translated">在文件範圍內，將文字範圍的一個端點移動指定的文字單元數。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</source>
          <target state="translated">實際移動的單元數，如果移動端點會碰到文件的開頭或結尾，則會小於要求的數目。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> method to execute successfully.</source>
          <target state="translated">如需周遊文字範圍的內容，則應在幕後執行一連串的步驟，才能成功執行 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> 方法。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> endpoint, which makes the <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint superfluous.</source>
          <target state="translated">文字範圍已正規化；也就是，文字範圍已在 <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> 端點摺疊為變質範圍，以致 <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> 端點變成多餘的。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt><ph id="ph2">http://www.microsoft.com</ph><ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">這個步驟是必要情況下，文字範圍跨越<ph id="ph1">`unit`</ph>界限; 例如，"{The U} RL <bpt id="p1">[</bpt> <ph id="ph2">http://www.microsoft.com</ph> <ept id="p1">](http://www.microsoft.com)</ept>內嵌在文字"其中"{"和"}"是文字範圍端點。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The resulting range is moved backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> to the beginning of the requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">結果產生的範圍會在 <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> 中向後移至所要求 <ph id="ph2">`unit`</ph> 界限的開頭。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The range is then expanded from a degenerate range state by moving the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint by one requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">範圍會接著依一個要求的 <ph id="ph2">`unit`</ph> 界限移動 <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> 端點，從變質範圍狀態展開。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>由 Move 和 expandtoenclosingunit 進行的範圍調整<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>由 Move 和 expandtoenclosingunit 進行的範圍調整<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</source>
          <target state="translated">如何針對 Move() 和 ExpandToEnclosingUnit() 調整文字範圍的範例</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A&gt;</ph> defers to the next largest <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> supported if the given <ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> is not supported by the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A&gt;</ph> 延後到下一個最大<ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph>如果給定<ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph>控制項不支援。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">如下所示的順序，從最大、 最小單位。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
          <source>Removes a highlighted section of text, corresponding to the caller's <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> endpoints, from the collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">從支援多次斷續選取的文字容器中反白的文字集合，移除反白的文字區段，此區段對應至呼叫端的 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> 端點。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
          <source>The text insertion point will move to the area of the removed highlight.</source>
          <target state="translated">移除反白顯示的區域，將文字插入點。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
          <source>Providing a degenerate text range will move the insertion point.</source>
          <target state="translated">提供變質文字範圍，將會移動插入點。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
          <source>If text provider does not support multiple, disjoint selections (for example, <ph id="ph1">&lt;see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /&gt;</ph> must have a value of <ph id="ph2">&lt;see langword="Multiple" /&gt;</ph>).</source>
          <target state="translated">如果文字提供者不支援 Multiple，則為斷續的選取範圍 (例如，<ph id="ph1">&lt;see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /&gt;</ph> 必須擁有 <ph id="ph2">&lt;see langword="Multiple" /&gt;</ph> 這個值)。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the text control should be scrolled so the text range is flush with the top of the viewport; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it should be flush with the bottom of the viewport.</source>
          <target state="translated">如果應該捲動文字控制項，讓文字範圍與檢視區的頂端齊平，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果應該與檢視區的底端齊平，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
          <source>Causes the text control to scroll vertically until the text range is visible in the viewport.</source>
          <target state="translated">導致文字控制項垂直捲動，直到在檢視區看到文字範圍為止。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A&gt;</ph> respects both hidden and visible text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A&gt;</ph> 尊重隱藏和顯示文字。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
          <source>If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</source>
          <target state="translated">如果隱藏的文字範圍，文字控制項將捲動隱藏的文字檢視區中有一個錨點。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
          <source>Highlights text in the text control corresponding to the text range <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> endpoints.</source>
          <target state="translated">反白文字控制項的文字，此文字對應至文字範圍的 <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> 和 <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> 端點。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
          <source>If a degenerate text range is provided, the text insertion point will move to the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> endpoint of the text range.</source>
          <target state="translated">如果提供變質文字範圍，文字插入點會移至<ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph>文字範圍的結束點。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
          <source>Occurs when text selection is not supported by the text control.</source>
          <target state="translated">發生於文字控制項不支援文字選取範圍時。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>