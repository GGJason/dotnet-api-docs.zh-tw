<Type Name="ITextRangeProvider" FullName="System.Windows.Automation.Provider.ITextRangeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="67ed0d50e905d13f155ad6d9af79aaeb9b73490b" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39805970" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITextRangeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITextRangeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITextRangeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITextRangeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextRangeProvider" />
  <TypeSignature Language="F#" Value="type ITextRangeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("5347ad7b-c355-46f8-aff5-909033582f63")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8d6b2-101">公開方法與屬性，以支援使用者介面自動化用戶端在實作 <see cref="T:System.Windows.Automation.Provider.ITextProvider" /> 的文字容器中存取一段連續的文字。</span>
      <span class="sxs-lookup">
        <span data-stu-id="8d6b2-101">Exposes methods and properties to support UI Automation client access to a span of continuous text in a text container that implements <see cref="T:System.Windows.Automation.Provider.ITextProvider" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-102">實作 UI 自動化提供者必須支援<xref:System.Windows.Automation.TextPattern>控制項模式。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TextPattern> control pattern.</span></span>  
  
 <span data-ttu-id="8d6b2-103">A<xref:System.Windows.Automation.Text.TextPatternRange>插入點、 子集或所有的文字中可代表<xref:System.Windows.Automation.TextPattern>容器。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-103">A <xref:System.Windows.Automation.Text.TextPatternRange> can represent an insertion point, a subset, or all of the text in a <xref:System.Windows.Automation.TextPattern> container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.Text.TextPatternRange" />
  </Docs>
  <Members>
    <Member MemberName="AddToSelection">
      <MemberSignature Language="C#" Value="public void AddToSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToSelection();" />
      <MemberSignature Language="F#" Value="abstract member AddToSelection : unit -&gt; unit" Usage="iTextRangeProvider.AddToSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d6b2-104">加入至文字容器中反白的文字集合，此容器支援多次斷續選取。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-104">Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-105">文字插入點是移至新的選取範圍的區域。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-105">The text insertion point moves to the area of the new selection.</span></span>  
  
 <span data-ttu-id="8d6b2-106">提供的變質文字範圍移動插入點。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-106">Providing a degenerate text range moves the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8d6b2-107">如果文字提供者不支援多次斷續選取 (也就是說，<see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> 的值必須為 <see langword="Multiple" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-107">If text provider does not support multiple, disjoint selections (that is, <see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d6b2-108">傳回新的 <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" />，與原始 <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> 相同且繼承其所有屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-108">Returns a new <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> identical to the original <see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /> and inheriting all properties of the original.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-109">新的文字範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-109">The new text range.</span>
          </span>
          <span data-ttu-id="8d6b2-110">從未傳回 Null 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-110">A null reference (<see langword="Nothing" /> in Visual Basic) is never returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-111">新的範圍可以從原始獨立進行操作。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-111">The new range can be manipulated independently from the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public bool Compare (System.Windows.Automation.Provider.ITextRangeProvider range);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Compare(class System.Windows.Automation.Provider.ITextRangeProvider range) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function Compare (range As ITextRangeProvider) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Compare(System::Windows::Automation::Provider::ITextRangeProvider ^ range);" />
      <MemberSignature Language="F#" Value="abstract member Compare : System.Windows.Automation.Provider.ITextRangeProvider -&gt; bool" Usage="iTextRangeProvider.Compare range" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="range" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
      </Parameters>
      <Docs>
        <param name="range">
          <span data-ttu-id="8d6b2-112">要比較的文字範圍</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-112">A text range to compare</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-113">傳回的值表示文字範圍的擴展 (<see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 端點至 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 端點) 與另一個文字範圍是否相同。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-113">Returns a value that indicates whether the span (the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> endpoint to the <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint) of a text range is the same as another text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-114">如果兩個文字範圍的跨幅相同，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-114">
              <see langword="true" /> if the span of both text ranges is identical; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8d6b2-115">如果要比較的範圍不是來自相同的文字提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-115">If the range being compared does not come from the same text provider.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CompareEndpoints">
      <MemberSignature Language="C#" Value="public int CompareEndpoints (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareEndpoints(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareEndpoints (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareEndpoints(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member CompareEndpoints : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; int" Usage="iTextRangeProvider.CompareEndpoints (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="8d6b2-116">呼叫端的 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 或 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-116">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the caller.</span>
          </span>
        </param>
        <param name="targetRange">
          <span data-ttu-id="8d6b2-117">比較的目標範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-117">The target range for comparison.</span>
          </span>
        </param>
        <param name="targetEndpoint">
          <span data-ttu-id="8d6b2-118">目標的 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 或 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-118">The <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> or <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoint of the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-119">傳回的值指定兩個文字範圍是否有相同的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-119">Returns a value that specifies whether two text ranges have identical endpoints.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-120">如果呼叫端的端點在文字中比目標端點更早出現，則傳回負值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-120">Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</span>
          </span>
          <span data-ttu-id="8d6b2-121">如果呼叫端的端點與目標端點在相同位置，則傳回零。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-121">Returns zero if the caller's endpoint is at the same location as the target endpoint.</span>
          </span>
          <span data-ttu-id="8d6b2-122">如果呼叫端的端點在文字中比目標端點更晚出現，則傳回正值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-122">Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8d6b2-123">如果 <paramref name="targetRange" /> 來自不同的文字提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-123">If <paramref name="targetRange" /> is from a different text provider.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExpandToEnclosingUnit">
      <MemberSignature Language="C#" Value="public void ExpandToEnclosingUnit (System.Windows.Automation.Text.TextUnit unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExpandToEnclosingUnit(valuetype System.Windows.Automation.Text.TextUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandToEnclosingUnit (unit As TextUnit)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandToEnclosingUnit(System::Windows::Automation::Text::TextUnit unit);" />
      <MemberSignature Language="F#" Value="abstract member ExpandToEnclosingUnit : System.Windows.Automation.Text.TextUnit -&gt; unit" Usage="iTextRangeProvider.ExpandToEnclosingUnit unit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="8d6b2-124">文字單元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-124">The textual unit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-125">將文字範圍擴展至指定的文字單元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-125">Expands the text range to the specified text unit.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-126">如果範圍是已指定的單位中確切的數量，則會維持不變。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-126">If the range is already an exact quantity of the specified units then it remains unchanged.</span></span>  
  
 <span data-ttu-id="8d6b2-127">沒有涉及一系列的步驟順序中的幕後<xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A>方法才能成功執行。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-127">There is a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="8d6b2-128">文字範圍已正規化；也就是，文字範圍已在 <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> 端點摺疊為變質範圍，以致 <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> 端點變成多餘的。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-128">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="8d6b2-129">需要此步驟，才能移除模稜兩可情況下，文字範圍跨越`unit`界限; 例如，"{The U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/)內嵌於文字"其中"{"和"}"是文字範圍端點。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-129">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="8d6b2-130">結果產生的範圍會在 <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> 中向後移至所要求 `unit` 界限的開頭。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-130">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="8d6b2-131">範圍會在 <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> 中依所要求的 `unit` 界限數目向前或向後移動。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-131">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="8d6b2-132">範圍會接著依一個要求的 `unit` 界限移動 <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> 端點，從變質範圍狀態展開。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-132">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="8d6b2-133">![範圍由 Move 和 expandtoenclosingunit 進行調整](~/add/media/uia-textpattern-moveandexpand-examples.png "範圍由 Move 和 expandtoenclosingunit 進行調整")</span><span class="sxs-lookup"><span data-stu-id="8d6b2-133">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="8d6b2-134">如何針對 Move() 和 ExpandToEnclosingUnit() 調整文字範圍的範例</span><span class="sxs-lookup"><span data-stu-id="8d6b2-134">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d6b2-135">這些步驟是必要的因為它是很常見的螢幕助讀程式讀取出完整的單字、 句子或在插入點或任何虛擬的游標位置的整個段落。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-135">These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</span></span>  
  
 <span data-ttu-id="8d6b2-136"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> 尊重隱藏與顯示的文字。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-136"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="8d6b2-137"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> 會延後到下一個最大<xref:System.Windows.Automation.Text.TextUnit>如果給定<xref:System.Windows.Automation.Text.TextUnit>控制項不支援。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-137"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="8d6b2-138">如下所示的順序，從最大、 最小單位。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-138">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAttribute">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindAttribute (int attribute, object value, bool backward);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindAttribute(int32 attribute, object value, bool backward) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAttribute (attribute As Integer, value As Object, backward As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindAttribute(int attribute, System::Object ^ value, bool backward);" />
      <MemberSignature Language="F#" Value="abstract member FindAttribute : int * obj * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindAttribute (attribute, value, backward)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="backward" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="8d6b2-139">要搜尋的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-139">The attribute to search for.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="8d6b2-140">要搜尋的屬性值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-140">The attribute value to search for.</span>
          </span>
          <span data-ttu-id="8d6b2-141">這個值必須符合屬性的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-141">This value must match the type specified for the attribute.</span>
          </span>
        </param>
        <param name="backward">
          <span data-ttu-id="8d6b2-142">如果傳回的是最後產生的文字範圍，而不是第一個文字範圍，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-142">
              <see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-143">傳回具有指定之屬性值的文字範圍子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-143">Returns a text range subset that has the specified attribute value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-144">具有相符屬性和屬性值的文字範圍；否則為 Null (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-144">A text range having a matching attribute and attribute value; otherwise null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-145">隱藏與顯示的文字之間沒有差異。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-145">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindText">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.ITextRangeProvider FindText (string text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.ITextRangeProvider FindText(string text, bool backward, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindText (text As String, backward As Boolean, ignoreCase As Boolean) As ITextRangeProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::ITextRangeProvider ^ FindText(System::String ^ text, bool backward, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="abstract member FindText : string * bool * bool -&gt; System.Windows.Automation.Provider.ITextRangeProvider" Usage="iTextRangeProvider.FindText (text, backward, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.ITextRangeProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="backward" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="8d6b2-146">要搜尋的文字字串。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-146">The text string to search for.</span>
          </span>
        </param>
        <param name="backward">
          <span data-ttu-id="8d6b2-147">如果傳回的是最後產生的文字範圍，而不是第一個文字範圍，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-147">
              <see langword="true" /> if the last occurring text range should be returned instead of the first; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="8d6b2-148">如果要忽略大小寫，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-148">
              <see langword="true" /> if case should be ignored; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-149">傳回包含指定文字的文字範圍子集。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-149">Returns a text range subset that contains the specified text.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-150">符合指定之文字的文字範圍；否則為 Null (在 Visual Basic 中為 <see langword="Nothing" />)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-150">A text range matching the specified text; otherwise null (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-151">隱藏與顯示的文字之間沒有差異。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-151">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="C#" Value="public object GetAttributeValue (int attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAttributeValue(int32 attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeValue (attribute As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetAttributeValue(int attribute);" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeValue : int -&gt; obj" Usage="iTextRangeProvider.GetAttributeValue attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="8d6b2-152">文字屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-152">The text attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-153">從整個文字範圍中擷取指定屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-153">Retrieves the value of the specified attribute across the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-154">擷取物件，代表指定之屬性的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-154">Retrieves an object representing the value of the specified attribute.</span>
          </span>
          <span data-ttu-id="8d6b2-155">例如，<c>GetAttributeValue(TextPattern.FontNameAttribute)</c> 會傳回代表文字範圍之字型名稱的字串，而 <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> 會傳回 <see cref="T:System.Boolean" /> 類型的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-155">For example, <c>GetAttributeValue(TextPattern.FontNameAttribute)</c> would return a string that represents the font name of the text range while <c>GetAttributeValue(TextPattern.IsItalicAttribute)</c> would return a value of type <see cref="T:System.Boolean" />.</span>
          </span>
          <span data-ttu-id="8d6b2-156">如果指定之屬性的值在文字範圍內會變動，則傳回 <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-156">Returns <see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /> if the value of the specified attribute varies over the text range.</span>
          </span>
          <span data-ttu-id="8d6b2-157">如果提供者或控制項不支援指定的屬性，則傳回 <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-157">Returns <see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /> if the specified attribute is not supported by the provider or the control.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-158">隱藏與顯示的文字之間沒有差異。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-158">There is no differentiation between hidden and visible text.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8d6b2-159">如果指定的屬性無效。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-159">If the specified attribute is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetBoundingRectangles">
      <MemberSignature Language="C#" Value="public double[] GetBoundingRectangles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] GetBoundingRectangles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBoundingRectangles () As Double()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;double&gt; ^ GetBoundingRectangles();" />
      <MemberSignature Language="F#" Value="abstract member GetBoundingRectangles : unit -&gt; double[]" Usage="iTextRangeProvider.GetBoundingRectangles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d6b2-160">對文字範圍中每一個完整或部分可見的文字行，擷取週框的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-160">Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-161">由文字範圍中每一個完整或部分可見的文字行所構成的週框陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-161">An array of bounding rectangles for each full or partial line of text in a text range.</span>
          </span>
          <span data-ttu-id="8d6b2-162">變質範圍的空陣列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-162">An empty array for a degenerate range.</span>
          </span>
          <span data-ttu-id="8d6b2-163">具有螢幕座標之文字範圍的空陣列，這些座標讓文字範圍完全放在螢幕之外、捲動到檢視之外，或被重疊的視窗遮蔽。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-163">An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple[] GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IRawElementProviderSimple()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::Provider::IRawElementProviderSimple ^&gt; ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple[]" Usage="iTextRangeProvider.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d6b2-164">擷取文字範圍內所有內嵌物件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-164">Retrieves a collection of all embedded objects that fall within the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-165">範圍內子物件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-165">A collection of child objects that fall within the range.</span>
          </span>
          <span data-ttu-id="8d6b2-166">如果子系與文字範圍重疊，但未被範圍完全圍住，則也會包含在集合中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-166">Children that overlap with the text range but are not entirely enclosed by it will also be included in the collection.</span>
          </span>
          <span data-ttu-id="8d6b2-167">如果沒有子物件，則傳回空集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-167">Returns an empty collection if there are no child objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnclosingElement">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple GetEnclosingElement() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnclosingElement () As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ GetEnclosingElement();" />
      <MemberSignature Language="F#" Value="abstract member GetEnclosingElement : unit -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="iTextRangeProvider.GetEnclosingElement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d6b2-168">傳回圍住文字範圍的最內層控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-168">Returns the innermost control that encloses the text range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-169">封入控制項，通常是提供文字範圍的文字提供者。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-169">The enclosing control, typically the text provider that supplies the text range.</span>
          </span>
          <span data-ttu-id="8d6b2-170">但是，如果文字提供者支援子項目，例如表格或超連結，則封入項目可以為文字提供者的子代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-170">However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string GetText (int maxLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetText(int32 maxLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetText (maxLength As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetText(int maxLength);" />
      <MemberSignature Language="F#" Value="abstract member GetText : int -&gt; string" Usage="iTextRangeProvider.GetText maxLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxLength" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxLength">
          <span data-ttu-id="8d6b2-171">傳回之字串的最大長度。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-171">The maximum length of the string to return.</span>
          </span>
          <span data-ttu-id="8d6b2-172">如果不需要限制，請使用 <c>-1</c>。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-172">Use <c>-1</c> if no limit is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-173">擷取範圍的純文字。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-173">Retrieves the plain text of the range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-174">文字範圍的純文字，可能會依指定的 <paramref name="maxLength" /> 截斷。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-174">The plain text of the text range, possibly truncated at the specified <paramref name="maxLength" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-175"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> 尊重隱藏與顯示的文字。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-175"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="8d6b2-176">如果`maxLength`大於的長度的呼叫端的文字範圍內，傳回的字串將會是純文字的文字範圍。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-176">If `maxLength` is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</span></span>  
  
 <span data-ttu-id="8d6b2-177"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> 將不會影響文字流向; 中的端點的順序它一律會傳回文字之間的邏輯文字流程順序中的文字範圍的開始和結束端點。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-177"><xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A> will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="8d6b2-178">如果 <paramref name="maxLength" /> 小於 -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-178">If <paramref name="maxLength" /> is less than -1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public int Move (System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Move(valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Move (unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Move(System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member Move : System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.Move (unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="unit">
          <span data-ttu-id="8d6b2-179">文字單元界限。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-179">The text unit boundary.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8d6b2-180">要移動的文字單元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-180">The number of text units to move.</span>
          </span>
          <span data-ttu-id="8d6b2-181">正值會將文字範圍向前移動，負值會將文字範圍向後移動，0 沒有作用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-181">A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-182">將文字範圍移動指定的文字單元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-182">Moves the text range the specified number of text units.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-183">實際移動的單元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-183">The number of units actually moved.</span>
          </span>
          <span data-ttu-id="8d6b2-184">如果新的文字範圍端點大於或小於 <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> 端點，則此值會小於要求的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-184">This can be less than the number requested if either of the new text range endpoints is greater than or less than the <see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /> endpoints.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-185">如需周遊文字範圍的內容，則應在幕後執行一連串的步驟，才能成功執行 <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-185">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="8d6b2-186">文字範圍已正規化；也就是，文字範圍已在 <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> 端點摺疊為變質範圍，以致 <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> 端點變成多餘的。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-186">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="8d6b2-187">需要此步驟，才能移除模稜兩可情況下，文字範圍跨越`unit`界限; 例如，"{The U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/)內嵌於文字"其中"{"和"}"是文字範圍端點。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-187">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="8d6b2-188">結果產生的範圍會在 <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> 中向後移至所要求 `unit` 界限的開頭。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-188">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="8d6b2-189">範圍會在 <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> 中依所要求的 `unit` 界限數目向前或向後移動。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-189">The range is moved forward or backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> by the requested number of `unit` boundaries.</span></span>  
  
4.  <span data-ttu-id="8d6b2-190">範圍會接著依一個要求的 `unit` 界限移動 <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> 端點，從變質範圍狀態展開。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-190">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="8d6b2-191">![範圍由 Move 和 expandtoenclosingunit 進行調整](~/add/media/uia-textpattern-moveandexpand-examples.png "範圍由 Move 和 expandtoenclosingunit 進行調整")</span><span class="sxs-lookup"><span data-stu-id="8d6b2-191">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="8d6b2-192">如何針對 Move() 和 ExpandToEnclosingUnit() 調整文字範圍的範例</span><span class="sxs-lookup"><span data-stu-id="8d6b2-192">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="8d6b2-193">在 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] 樹狀目錄的控制項檢視和內容檢視 (例如超連結或表格儲存格) 中，文字容器和內嵌物件的文字內容 (或內部文字) 會公開為單一連續的文字資料流； 物件界限會被忽略。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-193">The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] tree; object boundaries are ignored.</span></span>  
  
 <span data-ttu-id="8d6b2-194">![合併的內嵌物件的文字範圍。](~/add/media/uia-textpattern-embeddedobjecttextranges.png "合併內嵌物件的文字範圍。")</span><span class="sxs-lookup"><span data-stu-id="8d6b2-194">![Text ranges spanned by embedded objects.](~/add/media/uia-textpattern-embeddedobjecttextranges.png "Text ranges spanned by embedded objects.")</span></span>  
<span data-ttu-id="8d6b2-195">具有內嵌物件及其範圍的文字資料流範例</span><span class="sxs-lookup"><span data-stu-id="8d6b2-195">Example of a text stream with embedded objects and their range spans</span></span>  
  
 <span data-ttu-id="8d6b2-196"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> 尊重隱藏與顯示的文字。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-196"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="8d6b2-197"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> 會延後到下一個最大<xref:System.Windows.Automation.Text.TextUnit>如果給定<xref:System.Windows.Automation.Text.TextUnit>控制項不支援。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-197"><xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="8d6b2-198">如下所示的順序，從最大、 最小單位。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-198">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 <span data-ttu-id="8d6b2-199">文字不會改變以任何方式，只是文字範圍跨越的不同部分文字。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-199">The text is not altered in any way, the text range just spans a different part of the text.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByRange">
      <MemberSignature Language="C#" Value="public void MoveEndpointByRange (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Provider.ITextRangeProvider targetRange, System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveEndpointByRange(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, class System.Windows.Automation.Provider.ITextRangeProvider targetRange, valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint targetEndpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveEndpointByRange (endpoint As TextPatternRangeEndpoint, targetRange As ITextRangeProvider, targetEndpoint As TextPatternRangeEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveEndpointByRange(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Provider::ITextRangeProvider ^ targetRange, System::Windows::Automation::Text::TextPatternRangeEndpoint targetEndpoint);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByRange : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Provider.ITextRangeProvider * System.Windows.Automation.Text.TextPatternRangeEndpoint -&gt; unit" Usage="iTextRangeProvider.MoveEndpointByRange (endpoint, targetRange, targetEndpoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="targetRange" Type="System.Windows.Automation.Provider.ITextRangeProvider" />
        <Parameter Name="targetEndpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="8d6b2-200">要移動的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-200">The endpoint to move.</span>
          </span>
        </param>
        <param name="targetRange">
          <span data-ttu-id="8d6b2-201">來自相同文字提供者的另一個範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-201">Another range from the same text provider.</span>
          </span>
        </param>
        <param name="targetEndpoint">
          <span data-ttu-id="8d6b2-202">另一個範圍上的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-202">An endpoint on the other range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-203">將文字範圍的一個端點移至第二個文字範圍上指定的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-203">Moves one endpoint of a text range to the specified endpoint of a second text range.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-204">如果要移動的端點跨越相同的文字範圍的另一個端點，則導致變質範圍，並確保正確的順序，端點的同時，移動該另一個端點 (也就是<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start>一定會小於或等於<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span><span class="sxs-lookup"><span data-stu-id="8d6b2-204">If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> is always less than or equal to <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveEndpointByUnit">
      <MemberSignature Language="C#" Value="public int MoveEndpointByUnit (System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, System.Windows.Automation.Text.TextUnit unit, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 MoveEndpointByUnit(valuetype System.Windows.Automation.Text.TextPatternRangeEndpoint endpoint, valuetype System.Windows.Automation.Text.TextUnit unit, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveEndpointByUnit (endpoint As TextPatternRangeEndpoint, unit As TextUnit, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int MoveEndpointByUnit(System::Windows::Automation::Text::TextPatternRangeEndpoint endpoint, System::Windows::Automation::Text::TextUnit unit, int count);" />
      <MemberSignature Language="F#" Value="abstract member MoveEndpointByUnit : System.Windows.Automation.Text.TextPatternRangeEndpoint * System.Windows.Automation.Text.TextUnit * int -&gt; int" Usage="iTextRangeProvider.MoveEndpointByUnit (endpoint, unit, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Windows.Automation.Text.TextPatternRangeEndpoint" />
        <Parameter Name="unit" Type="System.Windows.Automation.Text.TextUnit" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="endpoint">
          <span data-ttu-id="8d6b2-205">要移動的端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-205">The endpoint to move.</span>
          </span>
        </param>
        <param name="unit">
          <span data-ttu-id="8d6b2-206">要移動的文字單元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-206">The textual unit for moving.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="8d6b2-207">要移動的單位數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-207">The number of units to move.</span>
          </span>
          <span data-ttu-id="8d6b2-208">正值會將端點向前移動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-208">A positive value moves the endpoint forward.</span>
          </span>
          <span data-ttu-id="8d6b2-209">負值會向後移動。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-209">A negative value moves backward.</span>
          </span>
          <span data-ttu-id="8d6b2-210">值為 0 沒有作用。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-210">A value of 0 has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-211">在文件範圍內，將文字範圍的一個端點移動指定的文字單元數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-211">Moves one endpoint of the text range the specified number of text units within the document range.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8d6b2-212">實際移動的單元數，如果移動端點會碰到文件的開頭或結尾，則會小於要求的數目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-212">The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-213">如需周遊文字範圍的內容，則應在幕後執行一連串的步驟，才能成功執行 <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-213">When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A> method to execute successfully.</span></span>  
  
1.  <span data-ttu-id="8d6b2-214">文字範圍已正規化；也就是，文字範圍已在 <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> 端點摺疊為變質範圍，以致 <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> 端點變成多餘的。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-214">The text range is normalized; that is, the text range is collapsed to a degenerate range at the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint, which makes the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint superfluous.</span></span> <span data-ttu-id="8d6b2-215">需要此步驟，才能移除模稜兩可情況下，文字範圍跨越`unit`界限; 例如，"{The U} RL [ https://www.microsoft.com/ ](https://www.microsoft.com/)內嵌於文字"其中"{"和"}"是文字範圍端點。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-215">This step is necessary to remove ambiguity in situations where a text range spans `unit` boundaries; for example, "{The U}RL [https://www.microsoft.com/](https://www.microsoft.com/) is embedded in text" where "{" and "}" are the text range endpoints.</span></span>  
  
2.  <span data-ttu-id="8d6b2-216">結果產生的範圍會在 <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> 中向後移至所要求 `unit` 界限的開頭。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-216">The resulting range is moved backward in the <xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A> to the beginning of the requested `unit` boundary.</span></span>  
  
3.  <span data-ttu-id="8d6b2-217">範圍會接著依一個要求的 `unit` 界限移動 <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> 端點，從變質範圍狀態展開。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-217">The range is then expanded from a degenerate range state by moving the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End> endpoint by one requested `unit` boundary.</span></span>  
  
 <span data-ttu-id="8d6b2-218">![範圍由 Move 和 expandtoenclosingunit 進行調整](~/add/media/uia-textpattern-moveandexpand-examples.png "範圍由 Move 和 expandtoenclosingunit 進行調整")</span><span class="sxs-lookup"><span data-stu-id="8d6b2-218">![Range adjustments by Move & ExpandToEnclosingUnit](~/add/media/uia-textpattern-moveandexpand-examples.png "Range adjustments by Move & ExpandToEnclosingUnit")</span></span>  
<span data-ttu-id="8d6b2-219">如何針對 Move() 和 ExpandToEnclosingUnit() 調整文字範圍的範例</span><span class="sxs-lookup"><span data-stu-id="8d6b2-219">Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</span></span>  
  
 <span data-ttu-id="8d6b2-220"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> 會延後到下一個最大<xref:System.Windows.Automation.Text.TextUnit>如果給定<xref:System.Windows.Automation.Text.TextUnit>控制項不支援。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-220"><xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A> defers to the next largest <xref:System.Windows.Automation.Text.TextUnit> supported if the given <xref:System.Windows.Automation.Text.TextUnit> is not supported by the control.</span></span>  
  
 <span data-ttu-id="8d6b2-221">如下所示的順序，從最大、 最小單位。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-221">The order, from smallest unit to largest, is listed below.</span></span>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Character>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Format>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Word>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Line>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Paragraph>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Page>  
  
-   <xref:System.Windows.Automation.Text.TextUnit.Document>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveFromSelection">
      <MemberSignature Language="C#" Value="public void RemoveFromSelection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveFromSelection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveFromSelection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveFromSelection();" />
      <MemberSignature Language="F#" Value="abstract member RemoveFromSelection : unit -&gt; unit" Usage="iTextRangeProvider.RemoveFromSelection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d6b2-222">從支援多次斷續選取的文字容器中反白的文字集合，移除反白的文字區段，此區段對應至呼叫端的 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 和 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-222">Removes a highlighted section of text, corresponding to the caller's <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints, from the collection of highlighted text in a text container that supports multiple, disjoint selections.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-223">文字插入點會移至反白顯示的已移除的區域。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-223">The text insertion point will move to the area of the removed highlight.</span></span>  
  
 <span data-ttu-id="8d6b2-224">提供的變質文字範圍，將會移動插入點。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-224">Providing a degenerate text range will move the insertion point.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8d6b2-225">如果文字提供者不支援 Multiple，則為斷續的選取範圍 (例如，<see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> 必須擁有 <see langword="Multiple" /> 這個值)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-225">If text provider does not support multiple, disjoint selections (for example, <see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /> must have a value of <see langword="Multiple" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ScrollIntoView">
      <MemberSignature Language="C#" Value="public void ScrollIntoView (bool alignToTop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScrollIntoView(bool alignToTop) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollIntoView (alignToTop As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollIntoView(bool alignToTop);" />
      <MemberSignature Language="F#" Value="abstract member ScrollIntoView : bool -&gt; unit" Usage="iTextRangeProvider.ScrollIntoView alignToTop" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alignToTop" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="alignToTop">
          <span data-ttu-id="8d6b2-226">如果應該捲動文字控制項，讓文字範圍與檢視區的頂端齊平，則為 <see langword="true" />；如果應該與檢視區的底端齊平，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-226">
              <see langword="true" /> if the text control should be scrolled so the text range is flush with the top of the viewport; <see langword="false" /> if it should be flush with the bottom of the viewport.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8d6b2-227">導致文字控制項垂直捲動，直到在檢視區看到文字範圍為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-227">Causes the text control to scroll vertically until the text range is visible in the viewport.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-228"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> 尊重隱藏與顯示的文字。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-228"><xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A> respects both hidden and visible text.</span></span>  
  
 <span data-ttu-id="8d6b2-229">如果文字範圍已隱藏，只能在隱藏的文字中的檢視區有錨點，會捲動文字控制項。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-229">If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITextRangeProvider.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; unit" Usage="iTextRangeProvider.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8d6b2-230">反白文字控制項的文字，此文字對應至文字範圍的 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> 和 <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> 端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-230">Highlights text in the text control corresponding to the text range <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /> and <see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /> endpoints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d6b2-231">如果提供的變質文字範圍，則文字插入點會移到<xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start>文字範圍的結束點。</span><span class="sxs-lookup"><span data-stu-id="8d6b2-231">If a degenerate text range is provided, the text insertion point will move to the <xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start> endpoint of the text range.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8d6b2-232">發生於文字控制項不支援文字選取範圍時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="8d6b2-232">Occurs when text selection is not supported by the text control.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>