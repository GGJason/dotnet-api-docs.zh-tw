<Type Name="ITransformProvider" FullName="System.Windows.Automation.Provider.ITransformProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2bd4b6361734ec6e668b8e3599a1bfee3fb58b55" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55389552" /></Metadata><TypeSignature Language="C#" Value="public interface ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransformProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransformProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITransformProvider" />
  <TypeSignature Language="F#" Value="type ITransformProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("6829ddc4-4f91-4ffa-b86f-bd3e2987cb4c")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ae798-101">公開方法與屬性，以支援控制項的使用者介面自動化用戶端存取，這些控制項可以在二維空間內移動、調整大小或旋轉。</span><span class="sxs-lookup"><span data-stu-id="ae798-101">Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae798-102">實作 UI 自動化提供者必須支援<xref:System.Windows.Automation.TransformPattern>控制項模式。</span><span class="sxs-lookup"><span data-stu-id="ae798-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TransformPattern> control pattern.</span></span>  
  
 <span data-ttu-id="ae798-103">此控制項模式的支援不限於桌面上的物件。</span><span class="sxs-lookup"><span data-stu-id="ae798-103">Support for this control pattern is not limited to objects on the desktop.</span></span> <span data-ttu-id="ae798-104">也必須將此控制項模式實作容器物件的子系，只要子系可以移動、 調整大小或旋轉自由地在容器的界限內。</span><span class="sxs-lookup"><span data-stu-id="ae798-104">This control pattern must also be implemented by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.TransformPattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md"><span data-ttu-id="ae798-105">UI 自動化控制項模式概觀</span><span class="sxs-lookup"><span data-stu-id="ae798-105">UI Automation Control Patterns Overview</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe"><span data-ttu-id="ae798-106">伺服器端 UI 自動化提供者實作</span><span class="sxs-lookup"><span data-stu-id="ae798-106">Server-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6"><span data-ttu-id="ae798-107">用戶端 UI 自動化提供者實作</span><span class="sxs-lookup"><span data-stu-id="ae798-107">Client-side UI Automation Provider Implementation</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776"><span data-ttu-id="ae798-108">支援 UI 自動化提供者的控制項模式</span><span class="sxs-lookup"><span data-stu-id="ae798-108">Support Control Patterns in a UI Automation Provider</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="ae798-109">實作 UI 自動化 Transform 控制項模式</span><span class="sxs-lookup"><span data-stu-id="ae798-109">Implementing the UI Automation Transform Control Pattern</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="CanMove">
      <MemberSignature Language="C#" Value="public bool CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMove : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae798-110">取得的值指定是否可移動控制項。</span><span class="sxs-lookup"><span data-stu-id="ae798-110">Gets a value that specifies whether the control can be moved.</span></span></summary>
        <value><span data-ttu-id="ae798-111">如果項目可以移動，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ae798-111"><see langword="true" /> if the element can be moved; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae798-112">下列範例顯示的控制項可以移動，此方法的實作。</span><span class="sxs-lookup"><span data-stu-id="ae798-112">The following example shows an implementation of this method for a control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanMove](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canmove)]
 [!code-vb[UIAITransformProvider_snip#CanMove](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canmove)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="ae798-113">實作 UI 自動化 Transform 控制項模式</span><span class="sxs-lookup"><span data-stu-id="ae798-113">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanResize">
      <MemberSignature Language="C#" Value="public bool CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanResize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResize : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae798-114">取得的值指定 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目是否可調整大小。</span><span class="sxs-lookup"><span data-stu-id="ae798-114">Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element can be resized.</span></span></summary>
        <value><span data-ttu-id="ae798-115">如果項目可以調整大小，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ae798-115"><see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae798-116">下列範例顯示的控制項可以調整大小，此方法的實作。</span><span class="sxs-lookup"><span data-stu-id="ae798-116">The following example shows an implementation of this method for a control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanResize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canresize)]
 [!code-vb[UIAITransformProvider_snip#CanResize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canresize)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="ae798-117">實作 UI 自動化 Transform 控制項模式</span><span class="sxs-lookup"><span data-stu-id="ae798-117">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CanRotate">
      <MemberSignature Language="C#" Value="public bool CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRotate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRotate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRotate : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ae798-118">取得的值指定是否可旋轉控制項。</span><span class="sxs-lookup"><span data-stu-id="ae798-118">Gets a value that specifies whether the control can be rotated.</span></span></summary>
        <value><span data-ttu-id="ae798-119">如果項目可以旋轉，則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ae798-119"><see langword="true" /> if the element can be rotated; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ae798-120">下列範例顯示的控制項，不能旋轉，此方法的實作。</span><span class="sxs-lookup"><span data-stu-id="ae798-120">The following example shows an implementation of this method for a control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanRotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canrotate)]
 [!code-vb[UIAITransformProvider_snip#CanRotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canrotate)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="ae798-121">實作 UI 自動化 Transform 控制項模式</span><span class="sxs-lookup"><span data-stu-id="ae798-121">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Move(double x, double y);" />
      <MemberSignature Language="F#" Value="abstract member Move : double * double -&gt; unit" Usage="iTransformProvider.Move (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x"><span data-ttu-id="ae798-122">控制項左側的絕對螢幕座標。</span><span class="sxs-lookup"><span data-stu-id="ae798-122">Absolute screen coordinates of the left side of the control.</span></span></param>
        <param name="y"><span data-ttu-id="ae798-123">控制項上方的絕對螢幕座標。</span><span class="sxs-lookup"><span data-stu-id="ae798-123">Absolute screen coordinates of the top of the control.</span></span></param>
        <summary><span data-ttu-id="ae798-124">移動控制項。</span><span class="sxs-lookup"><span data-stu-id="ae798-124">Moves the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae798-125">物件無法移動、 調整大小或旋轉，使其產生的畫面位置會完全超出座標，其容器，而無法存取以鍵盤或滑鼠。</span><span class="sxs-lookup"><span data-stu-id="ae798-125">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="ae798-126">比方說，當最上層的視窗完全出螢幕外移，或子物件是容器的檢視區界限之外移動。</span><span class="sxs-lookup"><span data-stu-id="ae798-126">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="ae798-127">在這些情況下，物件會放置在接近所要求的螢幕座標被覆寫成容器範圍內的上方或左方座標。</span><span class="sxs-lookup"><span data-stu-id="ae798-127">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae798-128">下列範例會示範一個可能的實作，這個方法可以移動自訂控制項。</span><span class="sxs-lookup"><span data-stu-id="ae798-128">The following example shows one possible implementation of this method for a custom control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Move](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#move)]
 [!code-vb[UIAITransformProvider_snip#Move](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#move)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ae798-129">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> 屬性為 false。</span><span class="sxs-lookup"><span data-stu-id="ae798-129">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> property is false.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="ae798-130">實作 UI 自動化 Transform 控制項模式</span><span class="sxs-lookup"><span data-stu-id="ae798-130">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resize (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resize(double width, double height);" />
      <MemberSignature Language="F#" Value="abstract member Resize : double * double -&gt; unit" Usage="iTransformProvider.Resize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width"><span data-ttu-id="ae798-131">視窗的新寬度 (以像素為單位)。</span><span class="sxs-lookup"><span data-stu-id="ae798-131">The new width of the window, in pixels.</span></span></param>
        <param name="height"><span data-ttu-id="ae798-132">視窗的新高度 (以像素為單位)。</span><span class="sxs-lookup"><span data-stu-id="ae798-132">The new height of the window, in pixels.</span></span></param>
        <summary><span data-ttu-id="ae798-133">重新調整控制項大小。</span><span class="sxs-lookup"><span data-stu-id="ae798-133">Resizes the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae798-134">當控制項上呼叫支援分割窗格時，這個方法可以有副作用的調整大小的其他連續的窗格。</span><span class="sxs-lookup"><span data-stu-id="ae798-134">When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.</span></span>  
  
 <span data-ttu-id="ae798-135">物件無法移動、 調整大小或旋轉，使其產生的畫面位置會完全超出座標，其容器，而無法存取以鍵盤或滑鼠。</span><span class="sxs-lookup"><span data-stu-id="ae798-135">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="ae798-136">比方說，當最上層的視窗完全出螢幕外移，或子物件是容器的檢視區界限之外移動。</span><span class="sxs-lookup"><span data-stu-id="ae798-136">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="ae798-137">在這些情況下，物件會放置在接近所要求的螢幕座標被覆寫成容器範圍內的上方或左方座標。</span><span class="sxs-lookup"><span data-stu-id="ae798-137">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae798-138">下列範例示範一個可能的實作，這個自訂的控制項可以調整大小的方法。</span><span class="sxs-lookup"><span data-stu-id="ae798-138">The following example shows one possible implementation of this method for a custom control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Resize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#resize)]
 [!code-vb[UIAITransformProvider_snip#Resize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#resize)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ae798-139">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> 屬性為 false。</span><span class="sxs-lookup"><span data-stu-id="ae798-139">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> property is false.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="ae798-140">實作 UI 自動化 Transform 控制項模式</span><span class="sxs-lookup"><span data-stu-id="ae798-140">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rotate(float64 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (degrees As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double degrees);" />
      <MemberSignature Language="F#" Value="abstract member Rotate : double -&gt; unit" Usage="iTransformProvider.Rotate degrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees"><span data-ttu-id="ae798-141">控制項的旋轉度數。</span><span class="sxs-lookup"><span data-stu-id="ae798-141">The number of degrees to rotate the control.</span></span> <span data-ttu-id="ae798-142">正數會順時針旋轉，負數會逆時針旋轉。</span><span class="sxs-lookup"><span data-stu-id="ae798-142">A positive number rotates clockwise; a negative number rotates counterclockwise.</span></span></param>
        <summary><span data-ttu-id="ae798-143">旋轉控制項。</span><span class="sxs-lookup"><span data-stu-id="ae798-143">Rotates the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ae798-144">物件無法移動、 調整大小或旋轉，使其產生的畫面位置會完全超出其容器且無法存取以鍵盤或滑鼠座標。</span><span class="sxs-lookup"><span data-stu-id="ae798-144">An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="ae798-145">比方說，當最上層的視窗完全出螢幕外移，或子物件是容器的檢視區界限之外移動。</span><span class="sxs-lookup"><span data-stu-id="ae798-145">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="ae798-146">在這些情況下，物件會放置在接近所要求的螢幕座標被覆寫成容器範圍內的上方或左方座標。</span><span class="sxs-lookup"><span data-stu-id="ae798-146">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ae798-147">下列範例示範一個可能的實作，這個方法不能旋轉，自訂控制項。</span><span class="sxs-lookup"><span data-stu-id="ae798-147">The following example shows one possible implementation of this method for a custom control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Rotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#rotate)]
 [!code-vb[UIAITransformProvider_snip#Rotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#rotate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="ae798-148">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> 屬性為 false。</span><span class="sxs-lookup"><span data-stu-id="ae798-148">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> property is false.</span></span></exception>
        <related type="Article" href="https://msdn.microsoft.com/library/5f49d843-5845-4800-9d9c-56ce0d146844"><span data-ttu-id="ae798-149">實作 UI 自動化 Transform 控制項模式</span><span class="sxs-lookup"><span data-stu-id="ae798-149">Implementing the UI Automation Transform Control Pattern</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>