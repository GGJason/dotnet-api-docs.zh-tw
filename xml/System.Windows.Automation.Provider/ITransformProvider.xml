<Type Name="ITransformProvider" FullName="System.Windows.Automation.Provider.ITransformProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5b21cba0c524449ce98319e948fae297e25d289" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39947706" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ITransformProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ITransformProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ITransformProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ITransformProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITransformProvider" />
  <TypeSignature Language="F#" Value="type ITransformProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("6829ddc4-4f91-4ffa-b86f-bd3e2987cb4c")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="07a2a-101">公開方法與屬性，以支援控制項的使用者介面自動化用戶端存取，這些控制項可以在二維空間內移動、調整大小或旋轉。</span>
      <span class="sxs-lookup">
        <span data-stu-id="07a2a-101">Exposes methods and properties to support UI Automation client access to controls that can be moved, resized, or rotated within a two-dimensional space.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a2a-102">實作 UI 自動化提供者必須支援<xref:System.Windows.Automation.TransformPattern>控制項模式。</span><span class="sxs-lookup"><span data-stu-id="07a2a-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.TransformPattern> control pattern.</span></span>  
  
 <span data-ttu-id="07a2a-103">此控制項模式的支援不限於桌面上的物件。</span><span class="sxs-lookup"><span data-stu-id="07a2a-103">Support for this control pattern is not limited to objects on the desktop.</span></span> <span data-ttu-id="07a2a-104">也必須將此控制項模式實作容器物件的子系，只要子系可以移動、 調整大小或旋轉自由地在容器的界限內。</span><span class="sxs-lookup"><span data-stu-id="07a2a-104">This control pattern must also be implemented by the children of a container object as long as the children can be moved, resized, or rotated freely within the boundaries of the container.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.TransformPattern" />
  </Docs>
  <Members>
    <Member MemberName="CanMove">
      <MemberSignature Language="C#" Value="public bool CanMove { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanMove" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanMove As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanMove { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanMove : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanMove" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07a2a-105">取得的值指定是否可移動控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-105">Gets a value that specifies whether the control can be moved.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07a2a-106">如果項目可以移動，則為 <see langword="true" />；否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-106">
              <see langword="true" /> if the element can be moved; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07a2a-107">下列範例顯示的控制項可以移動，此方法的實作。</span><span class="sxs-lookup"><span data-stu-id="07a2a-107">The following example shows an implementation of this method for a control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanMove](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canmove)]
 [!code-vb[UIAITransformProvider_snip#CanMove](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canmove)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanResize">
      <MemberSignature Language="C#" Value="public bool CanResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanResize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanResize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanResize : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanResize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07a2a-108">取得的值指定 [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]項目是否可調整大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-108">Gets a value that specifies whether the [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] element can be resized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07a2a-109">如果項目可調整大小，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-109">
              <see langword="true" /> if the element can be resized; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07a2a-110">下列範例顯示的控制項可以調整大小，此方法的實作。</span><span class="sxs-lookup"><span data-stu-id="07a2a-110">The following example shows an implementation of this method for a control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanResize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canresize)]
 [!code-vb[UIAITransformProvider_snip#CanResize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canresize)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRotate">
      <MemberSignature Language="C#" Value="public bool CanRotate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRotate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRotate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRotate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRotate : bool" Usage="System.Windows.Automation.Provider.ITransformProvider.CanRotate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="07a2a-111">取得的值指定是否可旋轉控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-111">Gets a value that specifies whether the control can be rotated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="07a2a-112">如果可旋轉項目，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-112">
              <see langword="true" /> if the element can be rotated; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="07a2a-113">下列範例顯示的控制項，不能旋轉，此方法的實作。</span><span class="sxs-lookup"><span data-stu-id="07a2a-113">The following example shows an implementation of this method for a control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#CanRotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#canrotate)]
 [!code-vb[UIAITransformProvider_snip#CanRotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#canrotate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Move">
      <MemberSignature Language="C#" Value="public void Move (double x, double y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Move(float64 x, float64 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Move(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Move (x As Double, y As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Move(double x, double y);" />
      <MemberSignature Language="F#" Value="abstract member Move : double * double -&gt; unit" Usage="iTransformProvider.Move (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Double" />
        <Parameter Name="y" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="07a2a-114">控制項左側的絕對螢幕座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-114">Absolute screen coordinates of the left side of the control.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="07a2a-115">控制項上方的絕對螢幕座標。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-115">Absolute screen coordinates of the top of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07a2a-116">移動控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-116">Moves the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a2a-117">物件無法移動、 調整大小或旋轉，使其產生的畫面位置會完全超出座標，其容器，而無法存取以鍵盤或滑鼠。</span><span class="sxs-lookup"><span data-stu-id="07a2a-117">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="07a2a-118">比方說，當最上層的視窗完全出螢幕外移，或子物件是容器的檢視區界限之外移動。</span><span class="sxs-lookup"><span data-stu-id="07a2a-118">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="07a2a-119">在這些情況下，物件會放置在接近所要求的螢幕座標被覆寫成容器範圍內的上方或左方座標。</span><span class="sxs-lookup"><span data-stu-id="07a2a-119">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07a2a-120">下列範例會示範一個可能的實作，這個方法可以移動自訂控制項。</span><span class="sxs-lookup"><span data-stu-id="07a2a-120">The following example shows one possible implementation of this method for a custom control that can be moved.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Move](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#move)]
 [!code-vb[UIAITransformProvider_snip#Move](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#move)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="07a2a-121">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> 屬性為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-121">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanMove" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public void Resize (double width, double height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(float64 width, float64 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Resize(System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resize (width As Double, height As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resize(double width, double height);" />
      <MemberSignature Language="F#" Value="abstract member Resize : double * double -&gt; unit" Usage="iTransformProvider.Resize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Double" />
        <Parameter Name="height" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="width">
          <span data-ttu-id="07a2a-122">視窗的新寬度 (以像素為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-122">The new width of the window, in pixels.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="07a2a-123">視窗的新高度 (以像素為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-123">The new height of the window, in pixels.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07a2a-124">重新調整控制項大小。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-124">Resizes the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a2a-125">當控制項上呼叫支援分割窗格時，這個方法可以有副作用的調整大小的其他連續的窗格。</span><span class="sxs-lookup"><span data-stu-id="07a2a-125">When called on a control that supports split panes, this method can have the side effect of resizing other contiguous panes.</span></span>  
  
 <span data-ttu-id="07a2a-126">物件無法移動、 調整大小或旋轉，使其產生的畫面位置會完全超出座標，其容器，而無法存取以鍵盤或滑鼠。</span><span class="sxs-lookup"><span data-stu-id="07a2a-126">An object cannot be moved, resized, or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="07a2a-127">比方說，當最上層的視窗完全出螢幕外移，或子物件是容器的檢視區界限之外移動。</span><span class="sxs-lookup"><span data-stu-id="07a2a-127">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="07a2a-128">在這些情況下，物件會放置在接近所要求的螢幕座標被覆寫成容器範圍內的上方或左方座標。</span><span class="sxs-lookup"><span data-stu-id="07a2a-128">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07a2a-129">下列範例示範一個可能的實作，這個自訂的控制項可以調整大小的方法。</span><span class="sxs-lookup"><span data-stu-id="07a2a-129">The following example shows one possible implementation of this method for a custom control that can be resized.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Resize](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#resize)]
 [!code-vb[UIAITransformProvider_snip#Resize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#resize)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="07a2a-130">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> 屬性為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-130">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanResize" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Rotate">
      <MemberSignature Language="C#" Value="public void Rotate (double degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Rotate(float64 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ITransformProvider.Rotate(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rotate (degrees As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rotate(double degrees);" />
      <MemberSignature Language="F#" Value="abstract member Rotate : double -&gt; unit" Usage="iTransformProvider.Rotate degrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="degrees">
          <span data-ttu-id="07a2a-131">控制項的旋轉度數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-131">The number of degrees to rotate the control.</span>
          </span>
          <span data-ttu-id="07a2a-132">正數會順時針旋轉，負數會逆時針旋轉。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-132">A positive number rotates clockwise; a negative number rotates counterclockwise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="07a2a-133">旋轉控制項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-133">Rotates the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07a2a-134">物件無法移動、 調整大小或旋轉，使其產生的畫面位置會完全超出其容器且無法存取以鍵盤或滑鼠座標。</span><span class="sxs-lookup"><span data-stu-id="07a2a-134">An object cannot be moved, resized or rotated such that its resulting screen location would be completely outside the coordinates of its container and inaccessible to keyboard or mouse.</span></span> <span data-ttu-id="07a2a-135">比方說，當最上層的視窗完全出螢幕外移，或子物件是容器的檢視區界限之外移動。</span><span class="sxs-lookup"><span data-stu-id="07a2a-135">For example, when a top-level window is moved completely off-screen or a child object is moved outside the boundaries of the container's viewport.</span></span> <span data-ttu-id="07a2a-136">在這些情況下，物件會放置在接近所要求的螢幕座標被覆寫成容器範圍內的上方或左方座標。</span><span class="sxs-lookup"><span data-stu-id="07a2a-136">In these cases the object is placed as close to the requested screen coordinates as possible with the top or left coordinates overridden to be within the container boundaries.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07a2a-137">下列範例示範一個可能的實作，這個方法不能旋轉，自訂控制項。</span><span class="sxs-lookup"><span data-stu-id="07a2a-137">The following example shows one possible implementation of this method for a custom control that cannot be rotated.</span></span>  
  
 [!code-csharp[UIAITransformProvider_snip#Rotate](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAITransformProvider_snip/CSharp/TransformFragment.cs#rotate)]
 [!code-vb[UIAITransformProvider_snip#Rotate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAITransformProvider_snip/visualbasic/transformfragment.vb#rotate)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="07a2a-138">如果 <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> 屬性為 false。</span>
          <span class="sxs-lookup">
            <span data-stu-id="07a2a-138">If the <see cref="P:System.Windows.Automation.Provider.ITransformProvider.CanRotate" /> property is false.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>