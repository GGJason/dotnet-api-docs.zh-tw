<Type Name="IWindowProvider" FullName="System.Windows.Automation.Provider.IWindowProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b8943eb03a4ec8f2821d96d1668454a6bf7f6c49" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48658561" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWindowProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWindowProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IWindowProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWindowProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWindowProvider" />
  <TypeSignature Language="F#" Value="type IWindowProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("987df77b-db06-4d77-8f8a-86a9c3bb90b9")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6a0c8-101">公開方法與屬性，以支援使用者介面自動化用戶端存取控制項，這些控制項在傳統圖形化使用者介面 (GUI) 中提供基本的視窗功能。</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0c8-101">Exposes methods and properties to support UI Automation client access to controls that provide fundamental window-based functionality within a traditional graphical user interface (GUI).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a0c8-102">實作 UI 自動化提供者必須支援<xref:System.Windows.Automation.WindowPattern>控制項模式。</span><span class="sxs-lookup"><span data-stu-id="6a0c8-102">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.WindowPattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.WindowPattern" />
    <related type="Article" href="~/docs/framework/ui-automation/ui-automation-control-patterns-overview.md">
      <span data-ttu-id="6a0c8-103">UI 自動化控制項模式概觀</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0c8-103">UI Automation Control Patterns Overview</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/6acc6d08-bd67-4e2e-915c-9c1d34eb86fe">
      <span data-ttu-id="6a0c8-104">伺服器端 UI 自動化提供者實作</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0c8-104">Server-side UI Automation Provider Implementation</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/3584c0a1-9cd0-4968-8b63-b06390890ef6">
      <span data-ttu-id="6a0c8-105">用戶端 UI 自動化提供者實作</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0c8-105">Client-side UI Automation Provider Implementation</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/0d635c35-ffa8-4dc8-bbc9-12fcd5445776">
      <span data-ttu-id="6a0c8-106">支援 UI 自動化提供者的控制項模式</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0c8-106">Support Control Patterns in a UI Automation Provider</span>
      </span>
    </related>
    <related type="Article" href="http://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">
      <span data-ttu-id="6a0c8-107">實作 UI 自動化 Window 控制項模式</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a0c8-107">Implementing the UI Automation Window Control Pattern</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iWindowProvider.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a0c8-108">嘗試關閉視窗。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-108">Attempts to close the window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a0c8-109"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> 必須立即傳回而不會封鎖。</span><span class="sxs-lookup"><span data-stu-id="6a0c8-109"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> must return immediately without blocking.</span></span>  
  
 <span data-ttu-id="6a0c8-110"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> 會引發 <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent> 事件。</span><span class="sxs-lookup"><span data-stu-id="6a0c8-110"><xref:System.Windows.Automation.Provider.IWindowProvider.Close%2A> raises the <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowClosedEvent> event.</span></span> <span data-ttu-id="6a0c8-111">可能的話，控制其相關聯的動作完成之後，應該引發事件。</span><span class="sxs-lookup"><span data-stu-id="6a0c8-111">If possible, the event should be raised after the control has completed its associated action.</span></span>  
  
 <span data-ttu-id="6a0c8-112">分割窗格控制項上呼叫時，此方法會關閉窗格，並移除相關聯的分割。</span><span class="sxs-lookup"><span data-stu-id="6a0c8-112">When called on a split pane control, this method will close the pane and remove the associated split.</span></span> <span data-ttu-id="6a0c8-113">這個方法可能也會關閉所有其他窗格，視實作而定。</span><span class="sxs-lookup"><span data-stu-id="6a0c8-113">This method might also close all other panes, depending on implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a0c8-114">控制項無法執行要求的動作時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-114">When the control is unable to perform the requested action.</span>
          </span>
        </exception>
        <exception cref="T:System.Windows.Automation.ElementNotAvailableException">
          <span data-ttu-id="6a0c8-115">目標項目無法再使用時 (例如視窗已關閉)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-115">When the target element is no longer available (for example, the window has closed).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">
          <span data-ttu-id="6a0c8-116">實作 UI 自動化 Window 控制項模式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-116">Implementing the UI Automation Window Control Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="InteractionState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowInteractionState InteractionState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowInteractionState InteractionState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.InteractionState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InteractionState As WindowInteractionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowInteractionState InteractionState { System::Windows::Automation::WindowInteractionState get(); };" />
      <MemberSignature Language="F#" Value="member this.InteractionState : System.Windows.Automation.WindowInteractionState" Usage="System.Windows.Automation.Provider.IWindowProvider.InteractionState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowInteractionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a0c8-117">取得視窗的互動狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-117">Gets the interaction state of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a0c8-118">控制項的 <see cref="T:System.Windows.Automation.WindowInteractionState" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-118">The <see cref="T:System.Windows.Automation.WindowInteractionState" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">
          <span data-ttu-id="6a0c8-119">實作 UI 自動化 Window 控制項模式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-119">Implementing the UI Automation Window Control Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsModal">
      <MemberSignature Language="C#" Value="public bool IsModal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsModal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.IsModal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsModal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsModal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsModal : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.IsModal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a0c8-120">取得的值指定視窗是否為強制回應。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-120">Gets a value that specifies whether the window is modal.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a0c8-121">如果為強制回應的視窗，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-121">
              <see langword="true" /> if the window is modal; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">
          <span data-ttu-id="6a0c8-122">實作 UI 自動化 Window 控制項模式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-122">Implementing the UI Automation Window Control Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsTopmost">
      <MemberSignature Language="C#" Value="public bool IsTopmost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTopmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.IsTopmost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTopmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTopmost { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTopmost : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.IsTopmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a0c8-123">取得值，這個值指定視窗是否是圖層順序的最上層項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-123">Gets a value that specifies whether the window is the topmost element in the z-order.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a0c8-124">如果為最上層視窗，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-124">
              <see langword="true" /> if the window is topmost; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">
          <span data-ttu-id="6a0c8-125">實作 UI 自動化 Window 控制項模式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-125">Implementing the UI Automation Window Control Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Maximizable">
      <MemberSignature Language="C#" Value="public bool Maximizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Maximizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.Maximizable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Maximizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Maximizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Maximizable : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.Maximizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a0c8-126">取得的值指定視窗是否可最大化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-126">Gets a value that specifies whether the window can be maximized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a0c8-127">如果視窗可最大化，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-127">
              <see langword="true" /> if the window can be maximized; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">
          <span data-ttu-id="6a0c8-128">實作 UI 自動化 Window 控制項模式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-128">Implementing the UI Automation Window Control Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Minimizable">
      <MemberSignature Language="C#" Value="public bool Minimizable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Minimizable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.Minimizable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Minimizable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Minimizable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Minimizable : bool" Usage="System.Windows.Automation.Provider.IWindowProvider.Minimizable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a0c8-129">取得的值指定視窗是否可最小化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-129">Gets a value that specifies whether the window can be minimized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a0c8-130">如果視窗可最小化，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-130">
              <see langword="true" /> if the window can be minimized; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">
          <span data-ttu-id="6a0c8-131">實作 UI 自動化 Window 控制項模式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-131">Implementing the UI Automation Window Control Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="SetVisualState">
      <MemberSignature Language="C#" Value="public void SetVisualState (System.Windows.Automation.WindowVisualState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVisualState(valuetype System.Windows.Automation.WindowVisualState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.SetVisualState(System.Windows.Automation.WindowVisualState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVisualState (state As WindowVisualState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVisualState(System::Windows::Automation::WindowVisualState state);" />
      <MemberSignature Language="F#" Value="abstract member SetVisualState : System.Windows.Automation.WindowVisualState -&gt; unit" Usage="iWindowProvider.SetVisualState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Automation.WindowVisualState" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="6a0c8-132">要求的視窗可見狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-132">The requested visual state of the window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a0c8-133">變更視窗的可見狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-133">Changes the visual state of the window.</span>
          </span>
          <span data-ttu-id="6a0c8-134">例如，最小化或最大化。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-134">For example, minimizes or maximizes it.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a0c8-135">當控制項不支援要求的行為。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-135">When the control does not support the requested behavior.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">
          <span data-ttu-id="6a0c8-136">實作 UI 自動化 Window 控制項模式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-136">Implementing the UI Automation Window Control Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="VisualState">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.WindowVisualState VisualState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Automation.WindowVisualState VisualState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IWindowProvider.VisualState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VisualState As WindowVisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Automation::WindowVisualState VisualState { System::Windows::Automation::WindowVisualState get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualState : System.Windows.Automation.WindowVisualState" Usage="System.Windows.Automation.Provider.IWindowProvider.VisualState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.WindowVisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a0c8-137">取得視窗的可見狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-137">Gets the visual state of the window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a0c8-138">視窗的可見狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-138">The visual state of the window.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">
          <span data-ttu-id="6a0c8-139">實作 UI 自動化 Window 控制項模式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-139">Implementing the UI Automation Window Control Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="WaitForInputIdle">
      <MemberSignature Language="C#" Value="public bool WaitForInputIdle (int milliseconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool WaitForInputIdle(int32 milliseconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IWindowProvider.WaitForInputIdle(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForInputIdle (milliseconds As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool WaitForInputIdle(int milliseconds);" />
      <MemberSignature Language="F#" Value="abstract member WaitForInputIdle : int -&gt; bool" Usage="iWindowProvider.WaitForInputIdle milliseconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="milliseconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="milliseconds">
          <span data-ttu-id="6a0c8-140">等候相關聯處理序變成閒置的時間量 (以毫秒為單位)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-140">The amount of time, in milliseconds, to wait for the associated process to become idle.</span>
          </span>
          <span data-ttu-id="6a0c8-141">最大值是 <see cref="F:System.Int32.MaxValue" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-141">The maximum is <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a0c8-142">導致將呼叫程式碼封鎖指定的時間，或直到相關聯的處理序進入閒置狀態 (就看何者先完成)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-142">Causes the calling code to block for the specified time or until the associated process enters an idle state, whichever completes first.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a0c8-143">如果視窗已進入閒置狀態，則為 <see langword="true" />，如果發生逾時，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-143">
              <see langword="true" /> if the window has entered the idle state; <see langword="false" /> if the timeout occurred.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a0c8-144">這個方法通常用於處理搭配<xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>。</span><span class="sxs-lookup"><span data-stu-id="6a0c8-144">This method is typically used in conjunction with the handling of a <xref:System.Windows.Automation.WindowPatternIdentifiers.WindowOpenedEvent>.</span></span>  
  
 <span data-ttu-id="6a0c8-145">實作會依賴基礎的應用程式架構;因此這個方法可能會傳回一些視窗可供使用者輸入之後的時間。</span><span class="sxs-lookup"><span data-stu-id="6a0c8-145">The implementation is dependent on the underlying application framework; therefore this method might return some time after the window is ready for user input.</span></span> <span data-ttu-id="6a0c8-146">呼叫端程式碼不應依賴此方法來確定視窗已成為閒置狀態的確切時間。</span><span class="sxs-lookup"><span data-stu-id="6a0c8-146">The calling code should not rely on this method to ascertain exactly when the window has become idle.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a0c8-147">當傳入的參數不是有效數字時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-147">When the parameter passed in is not a valid number.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a28cb286-296e-4a62-b4cb-55ad636ebccc">
          <span data-ttu-id="6a0c8-148">實作 UI 自動化 Window 控制項模式</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a0c8-148">Implementing the UI Automation Window Control Pattern</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>