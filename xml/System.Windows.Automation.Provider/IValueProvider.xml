<Type Name="IValueProvider" FullName="System.Windows.Automation.Provider.IValueProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d891c1f038e6eee95b8b85ed17d6a77c0253d83" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39881536" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IValueProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueProvider" />
  <TypeSignature Language="F#" Value="type IValueProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.Guid("c7935180-6fb3-4201-b174-7df73adbf64a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="99cb8-101">公開方法與屬性，以支援控制項的使用者介面自動化用戶端存取，這些控制項具有未擴展範圍且可表示為字串的內建值。</span>
      <span class="sxs-lookup">
        <span data-stu-id="99cb8-101">Exposes methods and properties to support UI Automation client access to controls having an intrinsic value that does not span a range and that can be represented as a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99cb8-102">控制項的值可能會或可能無法編輯視控制項及其設定而定。</span><span class="sxs-lookup"><span data-stu-id="99cb8-102">The value of the control may or may not be editable depending on the control and its settings.</span></span>  
  
 <span data-ttu-id="99cb8-103">實作 UI 自動化提供者必須支援<xref:System.Windows.Automation.ValuePattern>控制項模式。</span><span class="sxs-lookup"><span data-stu-id="99cb8-103">Implemented on a UI Automation provider that must support the <xref:System.Windows.Automation.ValuePattern> control pattern.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Automation.ValuePattern" />
  </Docs>
  <Members>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Windows.Automation.Provider.IValueProvider.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99cb8-104">取得值，指定控制項的值是否為唯讀。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99cb8-104">Gets a value that specifies whether the value of a control is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99cb8-105">如果該值是唯讀的則為 <see langword="true" />，如果該值可修改則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99cb8-105">
              <see langword="true" /> if the value is read-only; <see langword="false" /> if it can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99cb8-106">控制項的 <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> 應該設為 `true` ， <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> 應該設為 `false` ，才能允許呼叫 <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>。</span><span class="sxs-lookup"><span data-stu-id="99cb8-106">A control should have its <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty> set to `true` and its <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> set to `false` before allowing a call to <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99cb8-107">下列範例顯示的控制項可讓要變更其值，這個方法的實作。</span><span class="sxs-lookup"><span data-stu-id="99cb8-107">The following example shows an implementation of this method for a control that allows its value to be changed.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#isreadonly)]
 [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#isreadonly)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : string -&gt; unit" Usage="iValueProvider.SetValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="99cb8-108">要設定的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99cb8-108">The value to set.</span>
          </span>
          <span data-ttu-id="99cb8-109">提供者會負責將值轉換成適當的資料類型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99cb8-109">The provider is responsible for converting the value to the appropriate data type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99cb8-110">設定控制項的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99cb8-110">Sets the value of a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99cb8-111">單行編輯控制項支援藉由實作 <xref:System.Windows.Automation.Provider.IValueProvider>，以程式設計方式存取其內容。</span><span class="sxs-lookup"><span data-stu-id="99cb8-111">Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider>.</span></span> <span data-ttu-id="99cb8-112">不過，多行編輯控制項不會實作 <xref:System.Windows.Automation.Provider.IValueProvider>；它們是改為藉由實作 <xref:System.Windows.Automation.Provider.ITextProvider>來提供其內容的存取。</span><span class="sxs-lookup"><span data-stu-id="99cb8-112">However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>; instead they provide access to their content by implementing <xref:System.Windows.Automation.Provider.ITextProvider>.</span></span>  
  
 <span data-ttu-id="99cb8-113">控制這類<xref:System.Windows.Automation.ControlType.ListItem>並<xref:System.Windows.Automation.ControlType.TreeItem>必須實作<xref:System.Windows.Automation.Provider.IValueProvider>是否可編輯的任何項目值，不論目前的編輯控制項的模式。</span><span class="sxs-lookup"><span data-stu-id="99cb8-113">Controls such as <xref:System.Windows.Automation.ControlType.ListItem> and <xref:System.Windows.Automation.ControlType.TreeItem> must implement <xref:System.Windows.Automation.Provider.IValueProvider> if the value of any of the items is editable, regardless of the current edit mode of the control.</span></span> <span data-ttu-id="99cb8-114">父控制項也必須實作<xref:System.Windows.Automation.Provider.IValueProvider>是否可編輯的子系項目。</span><span class="sxs-lookup"><span data-stu-id="99cb8-114">The parent control must also implement <xref:System.Windows.Automation.Provider.IValueProvider> if the child items are editable.</span></span>  
  
 <span data-ttu-id="99cb8-115">![可編輯的清單項目。](~/add/media/uia-valuepattern-editable-listitem.PNG "可編輯的清單項目。")</span><span class="sxs-lookup"><span data-stu-id="99cb8-115">![Editable list item.](~/add/media/uia-valuepattern-editable-listitem.PNG "Editable list item.")</span></span>  
<span data-ttu-id="99cb8-116">可編輯的清單項目範例</span><span class="sxs-lookup"><span data-stu-id="99cb8-116">Example of an Editable List Item</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99cb8-117">下列程式碼範例示範自訂控制項，可讓其值設為限制長度的字串。</span><span class="sxs-lookup"><span data-stu-id="99cb8-117">The following example code demonstrates a custom control that allows its value to be set to a string of limited length.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#SetValue](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#setvalue)]
 [!code-vb[UIAIValueProvider_snip#SetValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#setvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="99cb8-118">如果地區設定特有的資訊以不正確的格式傳遞至控制項，例如日期格式不正確。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99cb8-118">If locale-specific information is passed to a control in an incorrect format such as an incorrectly formatted date.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="99cb8-119">如果新的值不能從字串轉換成控制項可辨識的格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99cb8-119">If a new value cannot be converted from a string to a format the control recognizes.</span>
          </span>
        </exception>
        <exception cref="T:System.Windows.Automation.ElementNotEnabledException">
          <span data-ttu-id="99cb8-120">嘗試對未啟用的控制項進行操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99cb8-120">When an attempt is made to manipulate a control that is not enabled.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.Provider.IValueProvider.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="System.Windows.Automation.Provider.IValueProvider.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99cb8-121">取得控制項的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99cb8-121">Gets the value of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99cb8-122">控制項的值，以字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="99cb8-122">The value of the control as a string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99cb8-123">單行編輯控制項支援以程式設計方式存取其內容，藉由實作<xref:System.Windows.Automation.Provider.IValueProvider>(除了<xref:System.Windows.Automation.Provider.ITextProvider>)。</span><span class="sxs-lookup"><span data-stu-id="99cb8-123">Single-line edit controls support programmatic access to their contents by implementing <xref:System.Windows.Automation.Provider.IValueProvider> (in addition to <xref:System.Windows.Automation.Provider.ITextProvider>).</span></span> <span data-ttu-id="99cb8-124">不過，多行編輯控制項不會實作<xref:System.Windows.Automation.Provider.IValueProvider>。</span><span class="sxs-lookup"><span data-stu-id="99cb8-124">However, multi-line edit controls do not implement <xref:System.Windows.Automation.Provider.IValueProvider>.</span></span>  
  
 <span data-ttu-id="99cb8-125">若要擷取多行編輯控制項的文字內容，控制項必須實作<xref:System.Windows.Automation.Provider.ITextProvider>。</span><span class="sxs-lookup"><span data-stu-id="99cb8-125">To retrieve the textual contents of multi-line edit controls, the controls must implement <xref:System.Windows.Automation.Provider.ITextProvider>.</span></span> <span data-ttu-id="99cb8-126">不過， <xref:System.Windows.Automation.Provider.ITextProvider> 不支援設定控制項的值。</span><span class="sxs-lookup"><span data-stu-id="99cb8-126">However, <xref:System.Windows.Automation.Provider.ITextProvider> does not support setting the value of a control.</span></span>  
  
 <span data-ttu-id="99cb8-127"><xref:System.Windows.Automation.Provider.IValueProvider> 不支援擷取格式設定資訊或子字串值。</span><span class="sxs-lookup"><span data-stu-id="99cb8-127"><xref:System.Windows.Automation.Provider.IValueProvider> does not support the retrieval of formatting information or substring values.</span></span> <span data-ttu-id="99cb8-128">在這些案例中請實作 <xref:System.Windows.Automation.Provider.ITextProvider> 。</span><span class="sxs-lookup"><span data-stu-id="99cb8-128">Implement <xref:System.Windows.Automation.Provider.ITextProvider> in these scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="99cb8-129">下列範例顯示的控制項可讓要擷取其值，這個方法的實作。</span><span class="sxs-lookup"><span data-stu-id="99cb8-129">The following example shows an implementation of this method for a control that allows its value to be retrieved.</span></span>  
  
 [!code-csharp[UIAIValueProvider_snip#Value](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAIValueProvider_snip/CSharp/ValueFragment.cs#value)]
 [!code-vb[UIAIValueProvider_snip#Value](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAIValueProvider_snip/visualbasic/valuefragment.vb#value)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>