<Type Name="ModelItem" FullName="System.Activities.Presentation.Model.ModelItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c1c69e040b34e1e71977002e6b9ae0f7498bb066" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36721599" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ModelItem : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ModelItem extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.Model.ModelItem" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ModelItem&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class ModelItem abstract : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type ModelItem = class&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2c848-101">代表編輯模式中的單一項目。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c848-101">Represents a single item in the editing model.</span>
      </span>
      <span data-ttu-id="2c848-102">項目可以是從複雜資料結構到色彩或整數等範圍中的任何項目。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c848-102">An item can be anything from a complex data structure down to a color or integer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c848-103">您可以透過項目的 <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> 集合存取其屬性，並變更屬性的值。</span><span class="sxs-lookup"><span data-stu-id="2c848-103">You can access the item’s properties through its <xref:System.Activities.Presentation.Model.ModelItem.Properties%2A> collection and make changes to the values of the properties.</span></span>  
  
 <span data-ttu-id="2c848-104"><xref:System.Activities.Presentation.Model.ModelItem> 是設計工具基礎資料模型周圍的包裝函式。</span><span class="sxs-lookup"><span data-stu-id="2c848-104">A <xref:System.Activities.Presentation.Model.ModelItem> is a wrapper around the underlying data model of the designer.</span></span> <span data-ttu-id="2c848-105">您可以透過 <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> 方法存取基礎模型。</span><span class="sxs-lookup"><span data-stu-id="2c848-105">You can access the underlying model through the <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c848-106">設計工具的序列化和復原系統不會反映您對 <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> 方法傳回之物件所進行的任何變更。</span><span class="sxs-lookup"><span data-stu-id="2c848-106">Any changes you make to an object returned from the <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method will not be reflected by the serialization and undo systems of the designer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c848-107">您可以將 <xref:System.Activities.Presentation.Model.ModelItem> 視為物件指向的精簡型 Proxy。</span><span class="sxs-lookup"><span data-stu-id="2c848-107">The <xref:System.Activities.Presentation.Model.ModelItem> can be thought of as a thin proxy for an object at which it points.</span></span> <span data-ttu-id="2c848-108">請先定義簡單 `Animal` 物件。</span><span class="sxs-lookup"><span data-stu-id="2c848-108">First define a simple `Animal` object.</span></span>  
  
```  
  
public class Animal  
{  
    // simple property  
    public string Name { get; set; }  
    // complex property   
    public Location Residence { get; set; }   
    // list   
    public List<Animal> CloseRelatives { get; set; }  
    // dictionary  
    public Dictionary<string, object> Features { get; set; }   
}  
  
public class Location  
{  
    public string StreetAddress { get; set; }  
    public string City { get; set; }  
    public string State { get; set; }   
}  
  
```  
  
 <span data-ttu-id="2c848-109">接著，請建立屬於該 `Animal` 的執行個體，以及其 Proxy <xref:System.Activities.Presentation.Model.ModelItem>。</span><span class="sxs-lookup"><span data-stu-id="2c848-109">Secondly, create an instance of that `Animal` and a <xref:System.Activities.Presentation.Model.ModelItem> that is a proxy for it.</span></span> <span data-ttu-id="2c848-110">之後，即可呼叫 <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> 以擷取該物件。</span><span class="sxs-lookup"><span data-stu-id="2c848-110">The object can then be retrieved by calling <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A>.</span></span> <span data-ttu-id="2c848-111">下列程式碼也會示範如何使用 <xref:System.Activities.Presentation.Model.ModelItem> 所定義的其他屬性。</span><span class="sxs-lookup"><span data-stu-id="2c848-111">The following code also shows how to use other properties defined by <xref:System.Activities.Presentation.Model.ModelItem>.</span></span>  
  
```  
  
EditingContext ec = new EditingContext();  
var companion1 = new Animal { Name = "Houdini the parakeet" };  
var companion2 = new Animal { Name = "Groucho the fish" };  
var animal = new Animal   
   {  
      Name = "Sasha the pug",  
      Residence = new Location   
      {  
         StreetAddress = "123 Main Street",  
         City = "AnyTown",  
         State = "Washington"  
      },  
      Features = new Dictionary<string, object> {   
         {"noise", "snort" },  
         {"MeanTimeUntilNaps", TimeSpan.FromMinutes(15) }  
      },  
      CloseRelatives = new List<Animal> { companion1, companion2 }   
   };  
ModelTreeManager mtm = new ModelTreeManager(ec);  mtm.Load(animal);  
ModelItem mi = mtm.Root;  
  
//Testing other properties of the class  
ModelItem root = mtm.Root;  
Assert.IsTrue(root.GetCurrentValue() == animal, "GetCurrentValue() returns same object");  
Assert.IsTrue(root.ItemType == typeof(Animal),"ItemType describes the item");  
Assert.IsTrue(root.Parent == null,"root parent is null");  
Assert.IsTrue(root.Source == null, "root source is null");  
Assert.IsTrue(((List<Animal>)root.Properties["CloseRelatives"].ComputedValue)[0] == companion1,   
   "ComputedValue of prop == actual object");  
Assert.IsFalse(((List<Animal>)root.Properties["CloseRelatives"].ComputedValue)[0] == companion2,   
   "ComputedValue of prop == actual object");  
Assert.AreEqual(root.Properties["Residence"].  
   Value.  
   Properties["StreetAddress"].  
   Value.GetCurrentValue(), "123 Main Street", "get actual value back out");  
Assert.AreEqual(root, root.Properties["Residence"].Parent, "property points to owner");  
ModelItem location = root.Properties["Residence"].Value;  
Assert.AreEqual(root.Properties["Residence"], location.Source, "sources point to the right place");  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ModelItem ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ModelItem();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c848-112">建立 <see cref="T:System.Activities.Presentation.Model.ModelItem" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-112">Creates a new instance of the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.ComponentModel.AttributeCollection" Usage="System.Activities.Presentation.Model.ModelItem.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-113">取得在這個項目上宣告的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-113">Gets the attributes declared on this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-114">包含項目屬性的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-114">A collection that contains the attributes of the item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginEdit">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-115">開啟設計工具的編輯範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-115">Opens an editing scope for the designer.</span>
          </span>
        </summary>
        <altmember cref="T:System.Activities.Presentation.Model.ModelEditingScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginEdit () As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit();" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : unit -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c848-116">開啟設計工具的編輯範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-116">Opens an editing scope for the designer.</span>
          </span>
          <span data-ttu-id="2c848-117">開啟編輯範圍後，會將所有物件的變更儲存在範圍中，直到交易完成或還原為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-117">After an editing scope is open, all changes across all objects will be saved into the scope until the transaction is completed or reverted.</span>
          </span>
          <span data-ttu-id="2c848-118">編輯範圍可以是巢狀的，但必須按照順序進行認可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-118">Editing scopes can be nested, but must be committed in order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c848-119">一定是已完成或還原的 <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-119">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c848-120">編輯範圍允許對要套用為單一交易的模型進行多次變更。</span><span class="sxs-lookup"><span data-stu-id="2c848-120">An editing scope allows multiple changes to the model to be applied as a single transaction.</span></span> <span data-ttu-id="2c848-121">完成交易前，隨時可以還原在編輯範圍中進行的所有變更。</span><span class="sxs-lookup"><span data-stu-id="2c848-121">All of the changes made within the editing scope can be reverted at any time before the transaction is completed.</span></span>  
  
 <span data-ttu-id="2c848-122">對設計工具而言，編輯範圍是全域的。</span><span class="sxs-lookup"><span data-stu-id="2c848-122">Editing scopes are global to the designer.</span></span> <span data-ttu-id="2c848-123">您可以為設計工具中的任何項目建立編輯範圍，不需為要變更的特定項目建立編輯範圍。</span><span class="sxs-lookup"><span data-stu-id="2c848-123">An editing scope can be created for any item in the designer; you do not need to create an editing scope for the specific item you are changing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(bool shouldApplyChangesImmediately) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (shouldApplyChangesImmediately As Boolean) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : bool -&gt; System.Activities.Presentation.Model.ModelEditingScope&#xA;override this.BeginEdit : bool -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit shouldApplyChangesImmediately" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shouldApplyChangesImmediately" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="shouldApplyChangesImmediately">
          <span data-ttu-id="2c848-124">
            <see langword="true" /> 表示應立即套用變更，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-124">
              <see langword="true" /> to indicate that the changes should be applied immediately; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c848-125">開啟設計工具的編輯範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-125">Opens an editing scope for the designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c848-126">一定是已完成或還原的 <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-126">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginEdit (description As String) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(System::String ^ description);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : string -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="2c848-127">變更的選擇性描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-127">An optional description of the change.</span>
          </span>
          <span data-ttu-id="2c848-128">這會設定至編輯範圍的 <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> 屬性中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-128">This will be set into the <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> property of the editing scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c848-129">開啟設計工具的編輯範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-129">Opens an editing scope for the designer.</span>
          </span>
          <span data-ttu-id="2c848-130">開啟編輯範圍後，會將所有物件的變更儲存在範圍中，直到交易完成或還原為止。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-130">After an editing scope is open, all changes across all objects will be saved into the scope until the transaction is completed or reverted.</span>
          </span>
          <span data-ttu-id="2c848-131">編輯範圍可以是巢狀的，但必須按照順序進行認可。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-131">Editing scopes can be nested, but must be committed in order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c848-132">一定是已完成或還原的 <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-132">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c848-133">編輯範圍允許對要套用為單一交易的模型進行多次變更。</span><span class="sxs-lookup"><span data-stu-id="2c848-133">An editing scope allows multiple changes to the model to be applied as a single transaction.</span></span> <span data-ttu-id="2c848-134">完成交易前，隨時可以還原在編輯範圍中進行的所有變更。</span><span class="sxs-lookup"><span data-stu-id="2c848-134">All of the changes made within the editing scope can be reverted at any time before the transaction is completed.</span></span>  
  
 <span data-ttu-id="2c848-135">對設計工具而言，編輯範圍是全域的。</span><span class="sxs-lookup"><span data-stu-id="2c848-135">Editing scopes are global to the designer.</span></span> <span data-ttu-id="2c848-136">您可以為設計工具中的任何項目建立編輯範圍，不需為要變更的特定項目建立編輯範圍。</span><span class="sxs-lookup"><span data-stu-id="2c848-136">An editing scope can be created for any item in the designer; you do not need to create an editing scope for the specific item you are changing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public virtual System.Activities.Presentation.Model.ModelEditingScope BeginEdit (string description, bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Activities.Presentation.Model.ModelEditingScope BeginEdit(string description, bool shouldApplyChangesImmediately) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.BeginEdit(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginEdit (description As String, shouldApplyChangesImmediately As Boolean) As ModelEditingScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Activities::Presentation::Model::ModelEditingScope ^ BeginEdit(System::String ^ description, bool shouldApplyChangesImmediately);" />
      <MemberSignature Language="F#" Value="abstract member BeginEdit : string * bool -&gt; System.Activities.Presentation.Model.ModelEditingScope&#xA;override this.BeginEdit : string * bool -&gt; System.Activities.Presentation.Model.ModelEditingScope" Usage="modelItem.BeginEdit (description, shouldApplyChangesImmediately)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelEditingScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="shouldApplyChangesImmediately" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="description">
          <span data-ttu-id="2c848-137">變更的選擇性描述。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-137">An optional description of the change.</span>
          </span>
          <span data-ttu-id="2c848-138">這會設定至編輯範圍的 <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> 屬性中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-138">This will be set into the <see cref="P:System.Activities.Presentation.Model.ModelEditingScope.Description" /> property of the editing scope.</span>
          </span>
        </param>
        <param name="shouldApplyChangesImmediately">
          <span data-ttu-id="2c848-139">
            <see langword="true" /> 表示應立即套用變更，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-139">
              <see langword="true" /> to indicate that the changes should be applied immediately; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c848-140">開啟設計工具的編輯範圍。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-140">Opens an editing scope for the designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c848-141">一定是已完成或還原的 <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-141">A <see cref="T:System.Activities.Presentation.Model.ModelEditingScope" />, which must be either completed or reverted.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelProperty Content { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelProperty Content" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Content" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Content As ModelProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelProperty ^ Content { System::Activities::Presentation::Model::ModelProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Content : System.Activities.Presentation.Model.ModelProperty" Usage="System.Activities.Presentation.Model.ModelItem.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-142">取得項目的 <see langword="ContentPropertyAttribute" />，或 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-142">Gets the <see langword="ContentPropertyAttribute" /> of the item, or <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-143">做為 <see cref="T:System.Activities.Presentation.Model.ModelProperty" /> 之項目的<see langword="ContentPropertyAttribute" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-143">The <see langword="ContentPropertyAttribute" /> of the item as a <see cref="T:System.Activities.Presentation.Model.ModelProperty" />.</span>
          </span>
          <span data-ttu-id="2c848-144">如果此項目的 <see cref="P:System.Activities.Presentation.Model.ModelItem.ItemType" /> 未宣告 <see langword="ContentPropertyAttribute" />，<see cref="P:System.Activities.Presentation.Model.ModelItem.Content" /> 會傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-144">If the <see langword="ContentPropertyAttribute" /> is not declared by the <see cref="P:System.Activities.Presentation.Model.ModelItem.ItemType" /> of this item, <see cref="P:System.Activities.Presentation.Model.ModelItem.Content" /> returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValue">
      <MemberSignature Language="C#" Value="public abstract object GetCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.GetCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCurrentValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetCurrentValue();" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValue : unit -&gt; obj" Usage="modelItem.GetCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c848-145">傳回 <see cref="T:System.Activities.Presentation.Model.ModelItem" /> 所包裝之基礎模型物件的目前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-145">Returns the current value of the underlying model object that the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> is wrapping.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c848-146">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" /> 所包裝做為 <see cref="T:System.Object" />之基礎模型物件的目前值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-146">The current value of the underlying model object that the <see cref="T:System.Activities.Presentation.Model.ModelItem" /> is wrapping as an <see cref="T:System.Object" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c848-147">您可以檢查這個物件，但不應進行任何變更。</span><span class="sxs-lookup"><span data-stu-id="2c848-147">You can inspect this object, but you should not make any changes to it.</span></span> <span data-ttu-id="2c848-148">對所傳回之物件進行的任何變更均不會併入設計工具中。</span><span class="sxs-lookup"><span data-stu-id="2c848-148">Changes made to the object returned will not be incorporated into the designer.</span></span> <span data-ttu-id="2c848-149"><xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> 方法可以傳回物件現有的或新複製的執行個體。</span><span class="sxs-lookup"><span data-stu-id="2c848-149">The <xref:System.Activities.Presentation.Model.ModelItem.GetCurrentValue%2A> method can return either an existing or new cloned instance of the object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public abstract Type ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ItemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ItemType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemType : Type" Usage="System.Activities.Presentation.Model.ModelItem.ItemType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-150">取得項目表示的物件型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-150">Gets the type of object that the item represents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-151">項目表示的物件的型別。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-151">The type of object that the item represents.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Activities.Presentation.Model.ModelItem.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-152">取得或設定項目的名稱或 ID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-152">Gets or sets the name or ID of the item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-153">項目的名稱或 ID，做為 <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-153">The name or ID of the item as a <see cref="T:System.String" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c848-154">並非所有項目需要有名稱，所以這可能會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="2c848-154">Not all items need to have names, so this might return `null`.</span></span> <span data-ttu-id="2c848-155">視項目的型別及它在階層中的位置而定，在項目中設定 <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> 不一定合法。</span><span class="sxs-lookup"><span data-stu-id="2c848-155">Depending on the type of item and where it sits in the hierarchy, it might not always be legal to set the <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> on an item.</span></span> <span data-ttu-id="2c848-156">如果<xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A>此項目的宣告`RuntimeNamePropertyAttribute`、<xref:System.Activities.Presentation.Model.ModelItem.Name%2A>屬性是直接對應到該屬性所指定的屬性。</span><span class="sxs-lookup"><span data-stu-id="2c848-156">If the <xref:System.Activities.Presentation.Model.ModelItem.ItemType%2A> of this item declares a `RuntimeNamePropertyAttribute`, the  <xref:System.Activities.Presentation.Model.ModelItem.Name%2A> property is a direct mapping to the property dictated by that attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Parent" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Parent" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parent As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Parent { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelItem.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-157">取得項目，該項目是這個項目的父項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-157">Gets the item that is the parent of this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-158">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" />，其為這個項目的父代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-158">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is the parent of this item.</span>
          </span>
          <span data-ttu-id="2c848-159">如果項目包含在集合或字典中，則會傳回擁有該集合或字典的物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-159">If an item is contained in a collection or dictionary, the object that owns the collection or dictionary is returned instead.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parents">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt; Parents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelItem&gt; Parents" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Parents" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parents As IEnumerable(Of ModelItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ Parents { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parents : seq&lt;System.Activities.Presentation.Model.ModelItem&gt;" Usage="System.Activities.Presentation.Model.ModelItem.Parents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-160">取得這個項目的所有父項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-160">Gets all parents of this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-161">這個項目的父代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-161">The parents of this item.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Properties As ModelPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelPropertyCollection ^ Properties { System::Activities::Presentation::Model::ModelPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Activities.Presentation.Model.ModelPropertyCollection" Usage="System.Activities.Presentation.Model.ModelItem.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-162">取得這個項目的公用屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-162">Gets the public properties on this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-163">
            <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" />，其中包含這個項目的公用屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-163">A <see cref="T:System.Activities.Presentation.Model.ModelItemCollection" /> that contains the public properties of this item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c848-164">傳回的屬性集可能會隨著附加屬性或編輯範圍的變更而變更。</span><span class="sxs-lookup"><span data-stu-id="2c848-164">The set of properties returned might change based on attached properties or changes to the editing scope.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public abstract event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.Model.ModelItem.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-165">實作 <see langword="INotifyPropertyChanged" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-165">Implements <see langword="INotifyPropertyChanged" />.</span>
          </span>
          <span data-ttu-id="2c848-166">使用這個事件接聽模型的變更。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-166">Use this event to listen for changes to the model.</span>
          </span>
          <span data-ttu-id="2c848-167">WPF 的資料繫結功能也會使用這個方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-167">This is also used by the data binding features of WPF.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c848-168">請在完成時中斷事件與項目的連結。</span><span class="sxs-lookup"><span data-stu-id="2c848-168">Disconnect events from items when you are finished with them.</span></span> <span data-ttu-id="2c848-169">否則，可能會使記憶體回收行程無法處置不再使用的項目。</span><span class="sxs-lookup"><span data-stu-id="2c848-169">Otherwise, you might prevent the garbage collector from disposing of an item that is no longer in use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Root">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelItem Root { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelItem Root" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Root" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Root As ModelItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelItem ^ Root { System::Activities::Presentation::Model::ModelItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Root : System.Activities.Presentation.Model.ModelItem" Usage="System.Activities.Presentation.Model.ModelItem.Root" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-170">取得項目，該項目是這個樹狀架構的根。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-170">Gets the item that is the root of this tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-171">
            <see cref="T:System.Activities.Presentation.Model.ModelItem" />，其為這個樹狀結構的根，如果這個項目不是樹狀結構的一部分，則為 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-171">A <see cref="T:System.Activities.Presentation.Model.ModelItem" /> that is the root of this tree, or <see langword="null" /> if this item is not part of a tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.Model.ModelProperty Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.Model.ModelProperty Source" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Source" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Source As ModelProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::Model::ModelProperty ^ Source { System::Activities::Presentation::Model::ModelProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Activities.Presentation.Model.ModelProperty" Usage="System.Activities.Presentation.Model.ModelItem.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.Model.ModelProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-172">取得提供這個值的屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-172">Gets the property that provided this value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-173">
            <see cref="T:System.Activities.Presentation.Model.ModelProperty" />，指出這個值的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-173">A <see cref="T:System.Activities.Presentation.Model.ModelProperty" /> that indicates the source of this value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c848-174">如果項目所表示的物件圖形的根目錄，這會傳回`null`。</span><span class="sxs-lookup"><span data-stu-id="2c848-174">If the item represents the root of the object graph, this will return `null`.</span></span> <span data-ttu-id="2c848-175">如果項目是集合或字典的成員，則從 Source 傳回的屬性會是集合或字典提供的虛擬屬性。</span><span class="sxs-lookup"><span data-stu-id="2c848-175">If an item is a member of a collection or dictionary, the property returned from Source will be a pseudo-property provided by the collection or dictionary.</span></span> <span data-ttu-id="2c848-176">若為其他值，Source 屬性會傳回實際設定值的屬性。</span><span class="sxs-lookup"><span data-stu-id="2c848-176">For other values, the Source property returns the property where the value was actually set.</span></span> <span data-ttu-id="2c848-177">因此，如果是經由繼承得到值，Source 可讓您找出此值的原始提供者。</span><span class="sxs-lookup"><span data-stu-id="2c848-177">Therefore, if a value is being inherited, Source allows you to find out who originally provided the value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Sources">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt; Sources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.Model.ModelProperty&gt; Sources" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.Sources" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Sources As IEnumerable(Of ModelProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelProperty ^&gt; ^ Sources { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::Model::ModelProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Sources : seq&lt;System.Activities.Presentation.Model.ModelProperty&gt;" Usage="System.Activities.Presentation.Model.ModelItem.Sources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.Model.ModelProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-178">取得保存這個值的所有屬性。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-178">Gets all the properties that hold this value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-179">這個值的來源。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-179">The sources of this value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.Model.ModelItem.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="modelItem.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c848-180">傳回包含在這個模型項目中之基礎模型物件的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-180">Returns a string representation of the underlying model object contained in this model item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c848-181">包含在這個模型項目中之基礎模型物件的字串表示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-181">A string representation of the underlying model object contained in this model item.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="View">
      <MemberSignature Language="C#" Value="public abstract System.Windows.DependencyObject View { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject View" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.Model.ModelItem.View" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property View As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::DependencyObject ^ View { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.View : System.Windows.DependencyObject" Usage="System.Activities.Presentation.Model.ModelItem.View" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c848-182">取得以圖形表示這個項目的 <see cref="T:System.Windows.DependencyObject" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-182">Gets a <see cref="T:System.Windows.DependencyObject" /> that graphically represents this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c848-183">以圖形表示這個項目的 <see cref="T:System.Windows.DependencyObject" />，如果沒有這種表示，則傳回 <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c848-183">A <see cref="T:System.Windows.DependencyObject" /> that graphically represents this item, or <see langword="null" /> if there is no such representation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>