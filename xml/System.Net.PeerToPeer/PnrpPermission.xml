<Type Name="PnrpPermission" FullName="System.Net.PeerToPeer.PnrpPermission">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7eb19c1a4766825699a4a0659d4cb7fec6503ba2" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56762907" /></Metadata><TypeSignature Language="C#" Value="public sealed class PnrpPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit PnrpPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PnrpPermission" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPermission&#xA;Inherits CodeAccessPermission&#xA;Implements IUnrestrictedPermission" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPermission sealed : System::Security::CodeAccessPermission, System::Security::Permissions::IUnrestrictedPermission" />
  <TypeSignature Language="F#" Value="type PnrpPermission = class&#xA;    inherit CodeAccessPermission&#xA;    interface IUnrestrictedPermission" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Permissions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8a24e-101">指定使用於 <see cref="N:System.Net.PeerToPeer" /> 物件權限的值。</span><span class="sxs-lookup"><span data-stu-id="8a24e-101">Specifies the values that are used in <see cref="N:System.Net.PeerToPeer" /> object permissions.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a24e-102">預設權限會允許所有的本機和內部網路區域的應用程式存取 PNRP 服務。</span><span class="sxs-lookup"><span data-stu-id="8a24e-102">The default permissions allow all local and Intranet zone applications to access PNRP services.</span></span> <span data-ttu-id="8a24e-103">如果預設的權限都沒有變更，所有連結本機以及網站本機應用程式都能夠存取對等服務，但全域 （網際網路） 應用程式沒有存取權。</span><span class="sxs-lookup"><span data-stu-id="8a24e-103">If the default permissions are not changed, all link-local and site-local applications have access to Peer-to-Peer services, but global (internet) applications have no access.</span></span>  
  
 <span data-ttu-id="8a24e-104">此類型的執行個體有兩種權限狀態： 他們沒有存取權的權限所保護的資源，或是它們不受限制的完整存取這些資源。</span><span class="sxs-lookup"><span data-stu-id="8a24e-104">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
    <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
    <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
    <altmember cref="N:System.Security.Permissions" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="8a24e-105">PNRP 命名空間提供者 API</span><span class="sxs-lookup"><span data-stu-id="8a24e-105">PNRP Namespace Provider API</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (state As PermissionState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPermission(System::Security::Permissions::PermissionState state);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PnrpPermission : System.Security.Permissions.PermissionState -&gt; System.Net.PeerToPeer.PnrpPermission" Usage="new System.Net.PeerToPeer.PnrpPermission state" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="8a24e-106"><see cref="T:System.Security.Permissions.PermissionState" /> 列舉中的其中一個值。</span><span class="sxs-lookup"><span data-stu-id="8a24e-106">One of the values in the <see cref="T:System.Security.Permissions.PermissionState" /> enumeration.</span></span></param>
        <summary><span data-ttu-id="8a24e-107">使用提供的初始權限狀態初始化 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8a24e-107">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> class with the supplied initial permission state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a24e-108">此類型的執行個體有兩種權限狀態： 他們沒有存取權的權限所保護的資源，或是它們不受限制的完整存取這些資源。</span><span class="sxs-lookup"><span data-stu-id="8a24e-108">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 <span data-ttu-id="8a24e-109">如果`state`是不受限制、 PnrpPermission 執行個體將傳遞所有的需求。</span><span class="sxs-lookup"><span data-stu-id="8a24e-109">If `state` is Unrestricted, the PnrpPermission instance passes all demands.</span></span> <span data-ttu-id="8a24e-110">如果`state`包含任何其他值，PnrpPermission 執行個體失敗的所有要求。</span><span class="sxs-lookup"><span data-stu-id="8a24e-110">If `state` contains any other value, the PnrpPermission instance fails all demands.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Copy () As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Copy();" />
      <MemberSignature Language="F#" Value="override this.Copy : unit -&gt; System.Security.IPermission" Usage="pnrpPermission.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a24e-111">建立並傳回目前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的相同複本。</span><span class="sxs-lookup"><span data-stu-id="8a24e-111">Creates and returns an identical copy of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></summary>
        <returns><span data-ttu-id="8a24e-112">具有 IPermission 介面的物件，其執行個體內含 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 的目前執行個體複本。</span><span class="sxs-lookup"><span data-stu-id="8a24e-112">An object with an IPermission interface, whose instance contains a copy of the current instance of <see cref="T:System.Net.PeerToPeer.PnrpPermission" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a24e-113">一份權限表示與原始的權限資源相同的存取權。</span><span class="sxs-lookup"><span data-stu-id="8a24e-113">A copy of a permission represents the same access to resources as the original permission.</span></span>  
  
 <span data-ttu-id="8a24e-114">此類型的執行個體有兩種權限狀態： 他們沒有存取權的權限所保護的資源，或是它們不受限制的完整存取這些資源。</span><span class="sxs-lookup"><span data-stu-id="8a24e-114">Instances of this type have two permission states: they either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a24e-115">-   參數不是有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="8a24e-115">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="8a24e-116">-   不支援參數的版本號碼。</span><span class="sxs-lookup"><span data-stu-id="8a24e-116">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a24e-117">參數為 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="8a24e-117">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink?LinkID=92731"><span data-ttu-id="8a24e-118">PNRP 命名空間提供者 API</span><span class="sxs-lookup"><span data-stu-id="8a24e-118">PNRP Namespace Provider API</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub FromXml (e As SecurityElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void FromXml(System::Security::SecurityElement ^ e);" />
      <MemberSignature Language="F#" Value="override this.FromXml : System.Security.SecurityElement -&gt; unit" Usage="pnrpPermission.FromXml e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="8a24e-119">用來重新建構權限的 XML 編碼。</span><span class="sxs-lookup"><span data-stu-id="8a24e-119">The XML encoding to use to reconstruct the permission.</span></span></param>
        <summary><span data-ttu-id="8a24e-120">透過 XML 編碼，重新建構具有指定狀態的安全性物件。</span><span class="sxs-lookup"><span data-stu-id="8a24e-120">Reconstructs a security object with a specified state from an XML encoding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a24e-121">代表用於編碼安全性物件的 XML 物件模型。</span><span class="sxs-lookup"><span data-stu-id="8a24e-121">Represents the XML object model for encoding security objects.</span></span> <span data-ttu-id="8a24e-122">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="8a24e-122">This class cannot be inherited.</span></span>  
  
 <span data-ttu-id="8a24e-123">這個類別被要為簡單 XML 物件模型以便使用於安全性系統，而不做為一般的 XML 物件模型的輕量型實作。</span><span class="sxs-lookup"><span data-stu-id="8a24e-123">This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a24e-124">-   參數不是有效的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 元素。</span><span class="sxs-lookup"><span data-stu-id="8a24e-124">-   The parameter is not a valid <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> element.</span></span>  
  
<span data-ttu-id="8a24e-125">-   不支援參數的版本號碼。</span><span class="sxs-lookup"><span data-stu-id="8a24e-125">-   The parameter's version number is not supported.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="8a24e-126">參數為 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="8a24e-126">The parameter is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="T:System.Security.SecurityElement" />
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Intersect (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Intersect(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Intersect : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Intersect target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8a24e-127">要與目前使用權限 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> 的使用權限。</span><span class="sxs-lookup"><span data-stu-id="8a24e-127">A permission to <see cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" /> with the current permission.</span></span> <span data-ttu-id="8a24e-128">必須與目前權限屬於相同的類型。</span><span class="sxs-lookup"><span data-stu-id="8a24e-128">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="8a24e-129">建立並傳回目前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和指定之使用權限交集而成的使用權限。</span><span class="sxs-lookup"><span data-stu-id="8a24e-129">Creates and returns a permission that is the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="8a24e-130">新的使用權限，表示目前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和指定之使用權限的交集。</span><span class="sxs-lookup"><span data-stu-id="8a24e-130">A new permission that represents the intersection of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span> <span data-ttu-id="8a24e-131">如果交集是空的，則這個新的使用權限是 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)。</span><span class="sxs-lookup"><span data-stu-id="8a24e-131">This new permission is a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) if the intersection is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a24e-132">兩個權限的交集會說明兩者所共同描述的作業集合的權限。</span><span class="sxs-lookup"><span data-stu-id="8a24e-132">The intersection of two permissions is a permission that describes the set of operations they both describe in common.</span></span> <span data-ttu-id="8a24e-133">只有通過這兩個原始的使用權限的需求將會通過交集。</span><span class="sxs-lookup"><span data-stu-id="8a24e-133">Only a demand that passes both original permissions will pass the intersection.</span></span>  
  
 <span data-ttu-id="8a24e-134">下列陳述式必須是`true`Intersect 方法的所有實作的。</span><span class="sxs-lookup"><span data-stu-id="8a24e-134">The following statements are required to be `true` for all implementations of the Intersect method.</span></span> <span data-ttu-id="8a24e-135">X 和 Y 代表<xref:System.Security.IPermission>不是物件參考`null`參考 (在 Visual Basic 中 Nothing)。</span><span class="sxs-lookup"><span data-stu-id="8a24e-135">X and Y represent <xref:System.Security.IPermission> object references that are not a `null` reference (Nothing in Visual Basic).</span></span>  
  
-   <span data-ttu-id="8a24e-136">X.Intersect(X) 傳回值等於 X。</span><span class="sxs-lookup"><span data-stu-id="8a24e-136">X.Intersect(X) returns a value equal to X.</span></span>  
  
-   <span data-ttu-id="8a24e-137">X.Intersect(Y) 傳回 Y.Intersect(X) 相同的值。</span><span class="sxs-lookup"><span data-stu-id="8a24e-137">X.Intersect(Y) returns the same value as Y.Intersect(X).</span></span>  
  
-   <span data-ttu-id="8a24e-138">X.Intersect (`null`參考 (`Nothing` Visual Basic 中)) 會傳回`null`參考 (`Nothing` Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="8a24e-138">X.Intersect(a `null` reference (`Nothing` in Visual Basic)) returns a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a24e-139">目標參數不是 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，而且不是和目前使用權限物件相同類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="8a24e-139">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsSubsetOf (target As IPermission) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsSubsetOf(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.IsSubsetOf : System.Security.IPermission -&gt; bool" Usage="pnrpPermission.IsSubsetOf target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8a24e-140">使用權限，要測試與子集關聯性。</span><span class="sxs-lookup"><span data-stu-id="8a24e-140">A permission that is to be tested for the subset relationship.</span></span> <span data-ttu-id="8a24e-141">這個使用權限必須與目前的使用權限為相同的型別。</span><span class="sxs-lookup"><span data-stu-id="8a24e-141">This permission must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="8a24e-142">判斷目前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是否為指定之使用權限的子集。</span><span class="sxs-lookup"><span data-stu-id="8a24e-142">Determines whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission.</span></span></summary>
        <returns><span data-ttu-id="8a24e-143">如果目前的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是指定之使用權限的子集，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8a24e-143"><see langword="true" /> if the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is a subset of the specified permission; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a24e-144">目前<xref:System.Net.PeerToPeer.PnrpPermission>是所指定權限的子集，如果目前的使用權限會指定一組完全包含在指定的權限的作業。</span><span class="sxs-lookup"><span data-stu-id="8a24e-144">The current <xref:System.Net.PeerToPeer.PnrpPermission> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</span></span> <span data-ttu-id="8a24e-145">例如，代表權限的權限 」*C:\example.txt*「 」 表示存取權限的子集*c:\\*"。</span><span class="sxs-lookup"><span data-stu-id="8a24e-145">For example, a permission that represents access to "*C:\example.txt*" is a subset of a permission that represents access to "*C:\\*".</span></span> <span data-ttu-id="8a24e-146">如果此方法傳回`true`，目前的權限，表示沒有存取受保護的資源比指定的權限。</span><span class="sxs-lookup"><span data-stu-id="8a24e-146">If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.</span></span>  
  
 <span data-ttu-id="8a24e-147">下列陳述式必須是`true`IsSubsetOf 方法的所有實作的。</span><span class="sxs-lookup"><span data-stu-id="8a24e-147">The following statements are required to be `true` for all implementations of the IsSubsetOf method.</span></span> <span data-ttu-id="8a24e-148">X、 Y 和 Z 代表<xref:System.Security.IPermission>不是物件`null`參考 (`Nothing` Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="8a24e-148">X, Y, and Z represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="8a24e-149">傳回 X.IsSubsetOf(X) `true`。</span><span class="sxs-lookup"><span data-stu-id="8a24e-149">X.IsSubsetOf(X) returns `true`.</span></span>  
  
-   <span data-ttu-id="8a24e-150">X.IsSubsetOf(Y) 傳回 Y.IsSubsetOf(X) 相同的值，如果且只有 X 和 Y 代表相同的權限集。</span><span class="sxs-lookup"><span data-stu-id="8a24e-150">X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</span></span>  
  
-   <span data-ttu-id="8a24e-151">如果兩者都傳回 X.IsSubsetOf(Y) 和 Y.IsSubsetOf(Z) `true`，傳回 X.IsSubsetOf(Z) `true`。</span><span class="sxs-lookup"><span data-stu-id="8a24e-151">If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return `true`, X.IsSubsetOf(Z) returns `true`.</span></span>  
  
-  
  
 <span data-ttu-id="8a24e-152">如果 X 表示空白 IPermission 物件權限狀態為*無*和 Y 代表 IPermission 物件`null`參考 (`Nothing` Visual Basic 中)，傳回 X.IsSubsetOf(Y) `true`。</span><span class="sxs-lookup"><span data-stu-id="8a24e-152">If X represents an empty IPermission object with a permission state of *None* and Y represents an IPermission object that is a `null` reference (`Nothing` in Visual Basic), X.IsSubsetOf(Y) returns `true`.</span></span> <span data-ttu-id="8a24e-153">如果 Z 也是空的權限，複合設定作業 X.Union(Z)。也會傳回 IsSubsetOf(Y)`true`因為<xref:System.Net.PeerToPeer.PnrpPermission.Union%2A>的兩個空的權限是空的權限。</span><span class="sxs-lookup"><span data-stu-id="8a24e-153">If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns `true` because the <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> of two empty permissions is an empty permission.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a24e-154">目標參數不是 <see langword="null" /> 參考 (在 Visual Basic 中為 <see langword="Nothing" />)，而且不是和目前使用權限物件相同類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="8a24e-154">The target parameter is not a <see langword="null" /> reference (<see langword="Nothing" /> in Visual Basic) and is not an instance of the same class as the current permission.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      </Docs>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUnrestricted () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUnrestricted();" />
      <MemberSignature Language="F#" Value="abstract member IsUnrestricted : unit -&gt; bool&#xA;override this.IsUnrestricted : unit -&gt; bool" Usage="pnrpPermission.IsUnrestricted " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a24e-155">傳回值，指定目前的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 是否不受限制。</span><span class="sxs-lookup"><span data-stu-id="8a24e-155">Returns a value specifying whether the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> is unrestricted.</span></span></summary>
        <returns><span data-ttu-id="8a24e-156">如果目前的使用權限為不受限制，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8a24e-156"><see langword="true" /> if the current permission is unrestricted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a24e-157">不受限制的權限，表示存取權限所保護的所有資源。</span><span class="sxs-lookup"><span data-stu-id="8a24e-157">An unrestricted permission represents access to any and all resources protected by the permission.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToXml () As SecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::SecurityElement ^ ToXml();" />
      <MemberSignature Language="F#" Value="override this.ToXml : unit -&gt; System.Security.SecurityElement" Usage="pnrpPermission.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8a24e-158">建立 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和其目前狀態的 XML 編碼方式。</span><span class="sxs-lookup"><span data-stu-id="8a24e-158">Creates an XML encoding of the <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and its current state.</span></span></summary>
        <returns><span data-ttu-id="8a24e-159"><see cref="T:System.Security.SecurityElement" /> 物件，包含使用權限的 XML 編碼，包括所有狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="8a24e-159">A <see cref="T:System.Security.SecurityElement" /> object that contains an XML encoding of the permission, including any state information.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Union (target As IPermission) As IPermission" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::IPermission ^ Union(System::Security::IPermission ^ target);" />
      <MemberSignature Language="F#" Value="override this.Union : System.Security.IPermission -&gt; System.Security.IPermission" Usage="pnrpPermission.Union target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Permissions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="8a24e-160">要與目前權限結合的權限，</span><span class="sxs-lookup"><span data-stu-id="8a24e-160">A permission to combine with the current permission.</span></span> <span data-ttu-id="8a24e-161">必須與目前權限屬於相同的類型。</span><span class="sxs-lookup"><span data-stu-id="8a24e-161">It must be of the same type as the current permission.</span></span></param>
        <summary><span data-ttu-id="8a24e-162">建立目前 <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> 和指定之使用權限聯集而成的使用權限。</span><span class="sxs-lookup"><span data-stu-id="8a24e-162">Creates a permission that is the union of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></summary>
        <returns><span data-ttu-id="8a24e-163">新的使用權限，表示目前 <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> 和指定之使用權限的 <see cref="T:System.Net.PeerToPeer.PnrpPermission" />。</span><span class="sxs-lookup"><span data-stu-id="8a24e-163">A new permission that represents the <see cref="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" /> of the current <see cref="T:System.Net.PeerToPeer.PnrpPermission" /> and the specified permission.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8a24e-164">若要呼叫的結果<xref:System.Net.PeerToPeer.PnrpPermission.Union%2A>是代表由目前的所有作業的權限<xref:System.Net.PeerToPeer.PnrpPermission>及指定的權限。</span><span class="sxs-lookup"><span data-stu-id="8a24e-164">The result of a call to <xref:System.Net.PeerToPeer.PnrpPermission.Union%2A> is a permission that represents all the operations represented by both the current <xref:System.Net.PeerToPeer.PnrpPermission> and the specified permission.</span></span> <span data-ttu-id="8a24e-165">任何通過其中之一權限的需求會傳遞它們的聯集。</span><span class="sxs-lookup"><span data-stu-id="8a24e-165">Any demand that passes either permission passes their union.</span></span>  
  
 <span data-ttu-id="8a24e-166">下列陳述式必須是`true`為所有實作的聯集的方法。</span><span class="sxs-lookup"><span data-stu-id="8a24e-166">The following statements are required to be `true` for all implementations of the Union method.</span></span> <span data-ttu-id="8a24e-167">X 和 Y 代表<xref:System.Security.IPermission>不是物件`null`參考 (`Nothing` Visual Basic 中)。</span><span class="sxs-lookup"><span data-stu-id="8a24e-167">X and Y represent <xref:System.Security.IPermission> objects that are not a `null` reference (`Nothing` in Visual Basic).</span></span>  
  
-   <span data-ttu-id="8a24e-168">X.Union(X) 傳回的物件具有相同的 X 值。</span><span class="sxs-lookup"><span data-stu-id="8a24e-168">X.Union(X) returns an object that has the same value as X.</span></span>  
  
-   <span data-ttu-id="8a24e-169">X.Union(Y) 傳回的物件具有 Y.Union(X) 所傳回的物件相同的值。</span><span class="sxs-lookup"><span data-stu-id="8a24e-169">X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</span></span>  
  
-   <span data-ttu-id="8a24e-170">X.Union (`null`參考 (`Nothing` Visual Basic 中)) 會傳回具有相同的 X 值的物件。</span><span class="sxs-lookup"><span data-stu-id="8a24e-170">X.Union(a `null` reference (`Nothing` in Visual Basic)) returns an object that has the same value as X.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8a24e-171"><paramref name="target" /> 參數無效。</span><span class="sxs-lookup"><span data-stu-id="8a24e-171"><paramref name="target" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
      </Docs>
    </Member>
  </Members>
</Type>