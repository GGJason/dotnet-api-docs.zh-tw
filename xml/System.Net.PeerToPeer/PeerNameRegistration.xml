<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de2528f53d8a2a9b2da8235cc44e694343deba61" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52363772" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7565e-101">在一個 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 或一組 Cloud 中註冊 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-101">Registers a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> in a <see cref="T:System.Net.PeerToPeer.Cloud" /> or set of clouds.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-102">註冊建立 （或更新） 與相關聯的所有資訊<xref:System.Net.PeerToPeer.PeerName>對等 cloud 或雲端中。</span><span class="sxs-lookup"><span data-stu-id="7565e-102">Registration creates (or updates) all the information that is associated with a <xref:System.Net.PeerToPeer.PeerName> in a peer cloud or clouds.</span></span>  
  
 <span data-ttu-id="7565e-103">很可能有多個<xref:System.Net.PeerToPeer.PeerNameRegistration>針對相同的對等名稱的物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-103">It is possible to have multiple <xref:System.Net.PeerToPeer.PeerNameRegistration> objects for the same peer name.</span></span> <span data-ttu-id="7565e-104">在此情況下，如果受保護的對等名稱，每個執行個體代表<xref:System.Net.PeerToPeer.PeerNameRegistration>在不同的雲端。</span><span class="sxs-lookup"><span data-stu-id="7565e-104">In such a case, if the peer name is secured, each instance represents <xref:System.Net.PeerToPeer.PeerNameRegistration> in a different cloud.</span></span> <span data-ttu-id="7565e-105">不過，如果不安全的對等名稱，則可以註冊在相同的雲端中許多次，提供每個註冊從不同的處理程序。</span><span class="sxs-lookup"><span data-stu-id="7565e-105">However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7565e-106">初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7565e-106">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7565e-107">初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 類別預設的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7565e-107">Initializes a new default instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-108">傳回類型的新預設執行個體<xref:System.Net.PeerToPeer.PeerNameRegistration>。</span><span class="sxs-lookup"><span data-stu-id="7565e-108">Returns a new default instance of type <xref:System.Net.PeerToPeer.PeerNameRegistration>.</span></span> <span data-ttu-id="7565e-109">它不會在建構期間執行對等名稱註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-109">It does not perform peer name registration during construction.</span></span>  
  
 <span data-ttu-id="7565e-110">建立與這個建構函式物件之後, 呼叫端應該填入前呼叫的執行個體中的適當欄位<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>或<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>。</span><span class="sxs-lookup"><span data-stu-id="7565e-110">After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> or <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7565e-111">要註冊的  <see cref="T:System.Net.PeerToPeer.PeerName" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-111">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="7565e-112">指定要註冊之連接埠號碼的整數值。</span><span class="sxs-lookup"><span data-stu-id="7565e-112">Integer value that specifies the port number to register.</span></span></param>
        <summary><span data-ttu-id="7565e-113">使用指定的名稱和連接埠號碼初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7565e-113">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified name and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-114">呼叫這個建構函式會建立將用來註冊所有的來源位址 (這兩個 IPv6and IPv4) 執行個體和對等目前參與的所有雲端提供的連接埠。</span><span class="sxs-lookup"><span data-stu-id="7565e-114">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</span></span>  <span data-ttu-id="7565e-115">如果成功，建構物件指定<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>和<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>會填入。</span><span class="sxs-lookup"><span data-stu-id="7565e-115">If the object is constructed successfully, the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> are populated.</span></span>  
  
 <span data-ttu-id="7565e-116">如果對等名稱並安全，而且先前已在中註冊<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>對等目前參與，<xref:System.Net.PeerToPeer.PeerToPeerException>就會擲回。</span><span class="sxs-lookup"><span data-stu-id="7565e-116">If the peer name is secured and was previously registered in a <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> the peer is currently participating in, an <xref:System.Net.PeerToPeer.PeerToPeerException> is thrown.</span></span>  
  
 <span data-ttu-id="7565e-117">這個建構函式只會建立<xref:System.Net.PeerToPeer.PeerNameRegistration>執行個體，它不會執行註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-117">This constructor only creates a <xref:System.Net.PeerToPeer.PeerNameRegistration> instance; it does not perform the registration.</span></span> <span data-ttu-id="7565e-118">應用程式必須呼叫這個建構函式的註冊物件具現化，並填入其欄位之後,<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>以執行實際的註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-118">After instantiating the registration object with this constructor and populating its fields, the application must call <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> to perform the actual registration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7565e-119"><paramref name="name" /> 參數不可為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-119">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7565e-120">指定的連接埠號碼小於零。</span><span class="sxs-lookup"><span data-stu-id="7565e-120">The specified port number is less than zero.</span></span>  <span data-ttu-id="7565e-121">連接埠號碼必須大於或等於零，並且小於 65,535 (0xFFFF)。</span><span class="sxs-lookup"><span data-stu-id="7565e-121">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="7565e-122">-   指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 已從此主機註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-122">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="7565e-123">-   遠端對等個體並未擁有提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 物件的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-123">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="7565e-124">參考保有還原序列化此執行個體所需資料的物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-124">Reference to the object that holds the data needed to deserialize this instance.</span></span></param>
        <param name="context"><span data-ttu-id="7565e-125">提供還原序列化資料方法的內容。</span><span class="sxs-lookup"><span data-stu-id="7565e-125">Context that provides the means for deserializing the data.</span></span> <span data-ttu-id="7565e-126">也稱為序列化資料的來源。</span><span class="sxs-lookup"><span data-stu-id="7565e-126">Also referred to as the source of the serialized data.</span></span></param>
        <summary><span data-ttu-id="7565e-127">初始化一個新可序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-127">Initializes a new serializable <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7565e-128">要註冊的  <see cref="T:System.Net.PeerToPeer.PeerName" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-128">The <see cref="T:System.Net.PeerToPeer.PeerName" /> object to register.</span></span></param>
        <param name="port"><span data-ttu-id="7565e-129">指定要註冊之連接埠號碼的整數值。</span><span class="sxs-lookup"><span data-stu-id="7565e-129">Integer value that specifies the port number to register.</span></span></param>
        <param name="cloud"><span data-ttu-id="7565e-130">註冊對等名稱所用的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-130"><see cref="T:System.Net.PeerToPeer.Cloud" /> in which to register the peer name.</span></span></param>
        <summary><span data-ttu-id="7565e-131">使用指定的對等名稱、連接埠號碼和 <see cref="T:System.Net.PeerToPeer.Cloud" />，初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="7565e-131">Initializes a new instance of the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> class with the specified peer name, port number, and <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-132">呼叫這個建構函式會建立將用來註冊所有的來源位址 （IPv6 和 IPv4）、 提供的連接埠，及指定執行個體<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>。</span><span class="sxs-lookup"><span data-stu-id="7565e-132">Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  <span data-ttu-id="7565e-133">如果成功建構物件，屬性會填入具有指定之<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>，<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>和<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>。</span><span class="sxs-lookup"><span data-stu-id="7565e-133">If the object is constructed successfully, the properties are populated with the specified <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>, <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> and <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>.</span></span>  
  
 <span data-ttu-id="7565e-134">如果雲端參數是`null`，使用註冊名稱<xref:System.Net.PeerToPeer.Cloud.Available>捷徑，用來初始化的預設值<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>。</span><span class="sxs-lookup"><span data-stu-id="7565e-134">If the cloud parameter is `null`, the name is registered using the <xref:System.Net.PeerToPeer.Cloud.Available> shortcut, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="7565e-135">在具現化之後,<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>必須呼叫方法，以註冊<xref:System.Net.PeerToPeer.PeerName>。</span><span class="sxs-lookup"><span data-stu-id="7565e-135">After instantiation, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method must be called to register the <xref:System.Net.PeerToPeer.PeerName>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7565e-136"><paramref name="name" /> 參數不可為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-136">The <paramref name="name" /> parameter cannot be <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7565e-137">指定的連接埠號碼小於零。</span><span class="sxs-lookup"><span data-stu-id="7565e-137">The specified port number is less than zero.</span></span>  <span data-ttu-id="7565e-138">連接埠號碼必須大於或等於零，並且小於 65,535 (0xFFFF)。</span><span class="sxs-lookup"><span data-stu-id="7565e-138">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="7565e-139">-   指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 已從此主機註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-139">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered from this host.</span></span>  
  
<span data-ttu-id="7565e-140">-   遠端對等個體並未擁有提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 物件的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-140">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the supplied <see cref="T:System.Net.PeerToPeer.PeerName" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7565e-141">取得或設定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 中的資訊，這個 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 物件會於其中加以註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-141">Gets or sets information in a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> into which this <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> object will be registered.</span></span></summary>
        <value><span data-ttu-id="7565e-142">型別為 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的物件，指定這個註冊所定義的對等 Cloud。</span><span class="sxs-lookup"><span data-stu-id="7565e-142">An object of type <see cref="T:System.Net.PeerToPeer.Cloud" /> that specifies the peer cloud for which this registration is defined.</span></span> <span data-ttu-id="7565e-143">這個屬性預設會設定為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-143">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7565e-144">取得或設定將向 <see cref="T:System.Net.PeerToPeer.PeerName" /> 註冊的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 物件的其他資訊。</span><span class="sxs-lookup"><span data-stu-id="7565e-144">Gets or sets additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> object that will be registered with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="7565e-145">註解，內含要與 <see cref="T:System.Net.PeerToPeer.PeerName" /> 相關聯之 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的其他資訊。</span><span class="sxs-lookup"><span data-stu-id="7565e-145">The comment that contains additional information about the <see cref="T:System.Net.PeerToPeer.PeerName" /> to associate with the <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="7565e-146">這個屬性預設會設定為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-146">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="7565e-147">指定的字串值大於 39 個 Unicode 字元。</span><span class="sxs-lookup"><span data-stu-id="7565e-147">The specified string value is greater than 39 Unicode characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7565e-148">取得或設定 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件的應用程式定義之二進位資料。</span><span class="sxs-lookup"><span data-stu-id="7565e-148">Gets or sets application-defined binary data for the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="7565e-149">保存與項目相關的二進位資料的位元組陣列。</span><span class="sxs-lookup"><span data-stu-id="7565e-149">An array of bytes that holds the binary data associated with the entry.</span></span> <span data-ttu-id="7565e-150">這個屬性預設會設定為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-150">This property is set to <see langword="null" /> by default.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-151">最大數量<xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A>可以提供是 4,096 個位元組。</span><span class="sxs-lookup"><span data-stu-id="7565e-151">The maximum amount of <xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A> that can be supplied is 4,096 bytes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7565e-152">指定的 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> 大於 4096 個位元組。</span><span class="sxs-lookup"><span data-stu-id="7565e-152">The specified <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> is greater than 4096 bytes.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7565e-153">釋放 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件所使用的資源。</span><span class="sxs-lookup"><span data-stu-id="7565e-153">Releases the resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-154">當對等電腦離開<xref:System.Net.PeerToPeer.Cloud>，就不再需要雲端<xref:System.Net.PeerToPeer.PeerNameRegistration>與對等個體相關聯的物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-154">When a peer leaves a <xref:System.Net.PeerToPeer.Cloud>, the cloud no longer requires the <xref:System.Net.PeerToPeer.PeerNameRegistration> object associated with the peer.</span></span>  <span data-ttu-id="7565e-155">註冊物件是否已停止或處置是取決於雲端將會重複使用要註冊此對等個體或另一個對等的物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-155">Whether the registration object is stopped or disposed is dependent upon whether the cloud will reuse the object to register this peer or another peer.</span></span> <span data-ttu-id="7565e-156">如果有任何其他端點與對等主應用程式進行通訊的預期在註冊物件內，雲端中註冊這些端點必須先停止或處置這個物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-156">If there are any other endpoint(s) within the registration object with which the peer host expected to communicate, registering those endpoints within the cloud must occur before stopping or disposing of this object.</span></span>  
  
 <span data-ttu-id="7565e-157">如果雲端預計會註冊更多的對等<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>建議的方法，當雲端不再需要記憶體時，應該傳回至作業系統透過<xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="7565e-157">If the cloud expects to register more peers, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is recommended; when the cloud no longer needs the memory, it should be returned to the operating system via the <xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7565e-158">釋放由 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="7565e-158">Releases all resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="7565e-159">總是會呼叫 Dispose 方法，再終結<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-159">lways call the Dispose method before destroying the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="7565e-160"><see langword="True" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="7565e-160"><see langword="True" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="7565e-161">釋放 Unmanaged 資源，並選擇性釋放 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件所使用的 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="7565e-161">Releases the unmanaged resources and optionally releases the managed resources used by the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="7565e-162">一定要釋放的最後一個參考之前，先呼叫 Dispose 方法<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-162">Always call the Dispose method before releasing the last reference to the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7565e-163">取得相關聯的對等名稱要註冊之網路端點的集合。</span><span class="sxs-lookup"><span data-stu-id="7565e-163">Gets the collection of network endpoints for which the associated peer name is registered.</span></span></summary>
        <value><span data-ttu-id="7565e-164"><see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> 物件，其中包含相關聯的對等名稱要註冊的網路端點。</span><span class="sxs-lookup"><span data-stu-id="7565e-164">An <see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> object that contains the network endpoints for which the associated peer name is registered.</span></span> <span data-ttu-id="7565e-165">除非明確指定，否則參考型別 (Reference Type) 的所有屬性預設值都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-165">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-166">在 <xref:System.Net>命名空間，<xref:System.Net.IPEndPoint>網路端點表示成 IP 位址和連接埠號碼。</span><span class="sxs-lookup"><span data-stu-id="7565e-166">In the <xref:System.Net> namespace, an <xref:System.Net.IPEndPoint> represents a network endpoint as an IP address and a port number.</span></span>  <span data-ttu-id="7565e-167">如需 PNRP，IP 位址和連接埠值必須提供每個端點。</span><span class="sxs-lookup"><span data-stu-id="7565e-167">For PNRP, an IP address and port value must be provided for each endpoint.</span></span>  <span data-ttu-id="7565e-168">端點可提供最大數目為十。</span><span class="sxs-lookup"><span data-stu-id="7565e-168">The maximum number of endpoints that can be provided is ten.</span></span> <span data-ttu-id="7565e-169">當此參數時，會使用自動位址選取`null`。</span><span class="sxs-lookup"><span data-stu-id="7565e-169">Automatic address selection is used when this parameter is `null`.</span></span>  
  
 <span data-ttu-id="7565e-170">如果使用註冊方法，會自動選取要註冊的位址，沒有任何方法可以判斷的 theaddresses 的已註冊的對等名稱。</span><span class="sxs-lookup"><span data-stu-id="7565e-170">If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.</span></span>  <span data-ttu-id="7565e-171">也就是<xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>屬性將不會更新以反映選取的位址。</span><span class="sxs-lookup"><span data-stu-id="7565e-171">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="7565e-172">當對等名稱會註冊為一個以上的節點，每個<xref:System.Net.PeerToPeer.PeerNameRegistration>不同，<xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>每個註冊執行個體上定義的屬性將會不同。</span><span class="sxs-lookup"><span data-stu-id="7565e-172">When a peer name is registered for more than one node, each <xref:System.Net.PeerToPeer.PeerNameRegistration> is distinct and the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property defined on each registration instance will be different.</span></span> <span data-ttu-id="7565e-173">也，當<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>註冊多個<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>，每個註冊是不同的端點集合通常會每個執行個體不同。</span><span class="sxs-lookup"><span data-stu-id="7565e-173">Also, when a <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> is registered into more than one <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>, each registration is distinct and the collection of endpoints will usually be different for each instance.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="7565e-174">與這個對等會進行通訊的端點清單不是相同的端點的已知這個對等名稱，清單會以不同方式儲存。</span><span class="sxs-lookup"><span data-stu-id="7565e-174">The list of endpoints with which this peer will communicate is not the same as the list of endpoints by which this peer name is known, which is stored differently.</span></span></para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="7565e-175">保留與 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件相關聯的序列化資料。</span><span class="sxs-lookup"><span data-stu-id="7565e-175">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <param name="context"><span data-ttu-id="7565e-176">包含與 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件相關聯之序列化資料流的目的地。</span><span class="sxs-lookup"><span data-stu-id="7565e-176">Contains destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></param>
        <summary><span data-ttu-id="7565e-177">以序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 執行個體所需的資料，填入序列化資訊物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-177">Populates a serialization information object with the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7565e-178">取得或設定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性中指定的對等名稱，是否向主應用程式上的特定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-178">Gets or sets whether the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" /> on a host.</span></span></summary>
        <returns><span data-ttu-id="7565e-179">如果為 <see langword="true" />，則對等名稱是向對等主應用程式的 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-179">If <see langword="true" />, the peer name is registered with a <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> for the peer host.</span></span> <span data-ttu-id="7565e-180">如果為 <see langword="false" />，則註冊程序可以從 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> 開始。</span><span class="sxs-lookup"><span data-stu-id="7565e-180">If <see langword="false" />, then the registration process can be started with <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="7565e-181">無法註冊已經處置的物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-181">An object that has been disposed already cannot be registered.</span></span></exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7565e-182">取得或設定要向對等 Cloud 註冊的對等名稱。</span><span class="sxs-lookup"><span data-stu-id="7565e-182">Gets or sets the peer name to register with a peer cloud.</span></span></summary>
        <value><span data-ttu-id="7565e-183">型別為 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的物件，其中包含與這個 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件相關聯的值。</span><span class="sxs-lookup"><span data-stu-id="7565e-183">An object of type <see cref="T:System.Net.PeerToPeer.PeerName" /> that contains values associated with this <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span> <span data-ttu-id="7565e-184">除非明確指定，否則參考型別 (Reference Type) 的所有屬性預設值都是 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-184">Unless explicitly specified, the default value for all properties is <see langword="null" /> for reference types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-185">對等名稱可以註冊多個節點;每個<xref:System.Net.PeerToPeer.PeerNameRegistration>是不同的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7565e-185">A peer name can be registered for more than one node; each <xref:System.Net.PeerToPeer.PeerNameRegistration> instance is distinct.</span></span> <span data-ttu-id="7565e-186"><xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>各有一個對應相關聯的屬性<xref:System.Net.PeerToPeer.PeerName>是不同的執行個體。</span><span class="sxs-lookup"><span data-stu-id="7565e-186">The <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property associated with each corresponding <xref:System.Net.PeerToPeer.PeerName> instance is different.</span></span> <span data-ttu-id="7565e-187">此外，就可以註冊多個節點都會連接到; 的雲端的對等名稱這些註冊都不同。</span><span class="sxs-lookup"><span data-stu-id="7565e-187">Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</span></span> <span data-ttu-id="7565e-188">對等名稱的<xref:System.Net.IPEndPointCollection>將會在每一個執行個體不同。</span><span class="sxs-lookup"><span data-stu-id="7565e-188">The peer name's <xref:System.Net.IPEndPointCollection> will be different in each of these instances.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7565e-189">取得或設定 [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) 通訊埠編號，這是由註冊至 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件的對等節點所使用的通訊埠。</span><span class="sxs-lookup"><span data-stu-id="7565e-189">Gets or sets the [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) port number used by the peer being registered into the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object.</span></span></summary>
        <value><span data-ttu-id="7565e-190">整數值，表示 <see cref="T:System.Net.IPEndPoint" /> 的 TCP 通訊埠編號。</span><span class="sxs-lookup"><span data-stu-id="7565e-190">An integer value indicating the TCP port number of the <see cref="T:System.Net.IPEndPoint" />.</span></span> <span data-ttu-id="7565e-191">除非有明確指定，否則這個屬性的預設值為零 (0)。</span><span class="sxs-lookup"><span data-stu-id="7565e-191">Unless explicitly specified, the default value for this property is zero (0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-192">使用預設連接埠<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>只時沒有指定端點的方法。</span><span class="sxs-lookup"><span data-stu-id="7565e-192">The default port is used by the <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method only when no endpoints are specified.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7565e-193">指定的通訊埠值小於零。</span><span class="sxs-lookup"><span data-stu-id="7565e-193">The specified port value is less than zero.</span></span>  <span data-ttu-id="7565e-194">連接埠號碼必須大於或等於零，並且小於 65,535 (0xFFFF)。</span><span class="sxs-lookup"><span data-stu-id="7565e-194">Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7565e-195">將 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 註冊到 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-195">Registers the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> into the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span> <span data-ttu-id="7565e-196">如果未指定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />，則會使用自動位址選取搭配 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> 屬性指定的連接埠值。</span><span class="sxs-lookup"><span data-stu-id="7565e-196">If no <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" /> is specified, automatic address selection is used with the port value specified by the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-197">方法會登錄中指定的對等名稱<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>所有的來源位址的屬性和<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>建構函式中指定。</span><span class="sxs-lookup"><span data-stu-id="7565e-197">The method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A> property with all source addresses and the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A> specified in the constructor.</span></span> <span data-ttu-id="7565e-198">預設連接埠是沒有指定端點時，才使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="7565e-198">The default port is used by this method only when no endpoints are specified.</span></span>  
  
 <span data-ttu-id="7565e-199">如果<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>屬性是`null`，這個方法會註冊中指定的對等名稱<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>屬性使用<xref:System.Net.PeerToPeer.Cloud.Available>欄位中，用來初始化的預設值<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，以及<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span><span class="sxs-lookup"><span data-stu-id="7565e-199">If the <xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A> property is `null`, this method registers the peer name specified in the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property using the <xref:System.Net.PeerToPeer.Cloud.Available> field, which initializes default values for the <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, and <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</span></span>  
  
 <span data-ttu-id="7565e-200">在後<xref:System.Net.PeerToPeer.PeerNameRegistration>啟動的物件，<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>方法用來停止它。</span><span class="sxs-lookup"><span data-stu-id="7565e-200">After a <xref:System.Net.PeerToPeer.PeerNameRegistration> object has been started, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A> method is used to stop it.</span></span>  
  
 <span data-ttu-id="7565e-201">若要更新註冊，<xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>必須使用的方法。</span><span class="sxs-lookup"><span data-stu-id="7565e-201">To update a registration, the <xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A> method must be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7565e-202">下列程式碼範例會建立<xref:System.Net.PeerToPeer.PeerName>並註冊以及指定的中繼資料。</span><span class="sxs-lookup"><span data-stu-id="7565e-202">The following code example creates a <xref:System.Net.PeerToPeer.PeerName> and registers it along with the metadata specified.</span></span>  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7565e-203"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性設定為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-203">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="7565e-204">此物件已被呼叫過 Dispose()。</span><span class="sxs-lookup"><span data-stu-id="7565e-204">This object had Dispose() called on it previously.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="7565e-205">-   指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 已註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-205">-   The <see cref="T:System.Net.PeerToPeer.PeerName" /> specified has already been registered.</span></span> <span data-ttu-id="7565e-206">必須使用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 方法更新註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-206">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method must be used to update a registration.</span></span>  
  
<span data-ttu-id="7565e-207">-   遠端對等個體並未擁有指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-207">-   The remote peer does not own the <see cref="P:System.Net.PeerToPeer.PeerName.Authority" /> for the <see cref="T:System.Net.PeerToPeer.PeerName" /> specified.</span></span>  
  
<span data-ttu-id="7565e-208">-   可能未指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 或 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" />，至少必須提供一個。</span><span class="sxs-lookup"><span data-stu-id="7565e-208">-   Either the <see cref="T:System.Net.PeerToPeer.PeerName" /> or the <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" /> is not specified; at least one needs to be provided.</span></span>  
  
<span data-ttu-id="7565e-209">-   訊息或資料元素無效。</span><span class="sxs-lookup"><span data-stu-id="7565e-209">-   The message or data elements are invalid.</span></span> <span data-ttu-id="7565e-210">或者是未設定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />，且未指定資料 blob 或 <see cref="T:System.Net.IPEndPoint" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-210">Or, <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" /> is not set and no data blob or <see cref="T:System.Net.IPEndPoint" /> is specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7565e-211">從已註冊的所有雲端中取消註冊 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性中指定的對等名稱。</span><span class="sxs-lookup"><span data-stu-id="7565e-211">Unregisters the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property from all the clouds in which it was registered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-212">註冊程序停止之後，註冊物件的狀態等於狀態之後由預設的建構函式所建構。</span><span class="sxs-lookup"><span data-stu-id="7565e-212">After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.</span></span> <span data-ttu-id="7565e-213">處於此狀態，其所有屬性都假設沒有值。</span><span class="sxs-lookup"><span data-stu-id="7565e-213">In this state, all of its properties are assumed to have no value.</span></span> <span data-ttu-id="7565e-214"><xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>方法可用來重新啟動它。</span><span class="sxs-lookup"><span data-stu-id="7565e-214">The <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A> method may be used to restart it.</span></span>  
  
 <span data-ttu-id="7565e-215">可以有相同的對等名稱的多個註冊物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-215">It is possible to have multiple registration objects for the same peer name.</span></span>  <span data-ttu-id="7565e-216">在此情況下，如果受保護的對等名稱，則每個執行個體將代表不同的 PNRP 雲端中的註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-216">In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</span></span>  <span data-ttu-id="7565e-217">不過，如果不安全的對等名稱，則可以註冊在相同的雲端中多次。</span><span class="sxs-lookup"><span data-stu-id="7565e-217">However, if the peer name is not secured, it can be registered in the same cloud multiple times.</span></span>  
  
 <span data-ttu-id="7565e-218">如果已停止這個執行個體，呼叫這個方法沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="7565e-218">If this instance is already stopped, calling this method has no effect.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7565e-219">尚未註冊 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="7565e-219">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="7565e-220">使用空的建構函式建構 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件時，就會發生這種情況。</span><span class="sxs-lookup"><span data-stu-id="7565e-220">This occurs when a <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> object is constructed using the empty constructor.</span></span> <span data-ttu-id="7565e-221">呼叫 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 之前，必須在這個執行個體中填入 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="7565e-221">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property must be populated in this instance prior to calling <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="7565e-222">此物件已被呼叫過 Dispose()。</span><span class="sxs-lookup"><span data-stu-id="7565e-222">This object had Dispose() called on it previously.</span></span></exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="7565e-223">保留與 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 執行個體關聯的序列化資料。</span><span class="sxs-lookup"><span data-stu-id="7565e-223">Holds the serialized data associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <param name="context"><span data-ttu-id="7565e-224">包含與 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 執行個體相關聯之序列化資料流的目的地。</span><span class="sxs-lookup"><span data-stu-id="7565e-224">Contains the destination for the serialized stream associated with the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></param>
        <summary><span data-ttu-id="7565e-225">實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面，並傳回序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 執行個體所需的資料。</span><span class="sxs-lookup"><span data-stu-id="7565e-225">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and returns the data needed to serialize the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7565e-226">針對已使用特定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 註冊的節點，更新 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-226">Updates the <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> for a node registered with a specific <see cref="T:System.Net.PeerToPeer.Cloud" />.</span></span> <span data-ttu-id="7565e-227">更新是使用屬性中指定的資訊來執行。</span><span class="sxs-lookup"><span data-stu-id="7565e-227">Update is performed using the information specified in the properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-228">這個註冊 cloud 中的所有資訊<xref:System.Net.PeerToPeer.PeerName>完全捨棄在呼叫之前。</span><span class="sxs-lookup"><span data-stu-id="7565e-228">All information registered in cloud(s) for this <xref:System.Net.PeerToPeer.PeerName> prior to the call is completely discarded.</span></span>  <span data-ttu-id="7565e-229">新的資料不會結合現有的註冊。</span><span class="sxs-lookup"><span data-stu-id="7565e-229">The new data is not combined with the existing registration.</span></span>  <span data-ttu-id="7565e-230">若要更新<xref:System.Net.PeerToPeer.PeerNameRegistration>先更新此執行個體上的屬性，然後呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="7565e-230">To update a <xref:System.Net.PeerToPeer.PeerNameRegistration>, first update the properties on this instance and then call this method.</span></span>  
  
 <span data-ttu-id="7565e-231">在後<xref:System.Net.PeerToPeer.PeerNameRecord>註冊，<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>無法更新屬性。</span><span class="sxs-lookup"><span data-stu-id="7565e-231">After a <xref:System.Net.PeerToPeer.PeerNameRecord> is registered, the <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> property cannot be updated.</span></span>  <span data-ttu-id="7565e-232">記錄中的所有其他欄位可能會更新。</span><span class="sxs-lookup"><span data-stu-id="7565e-232">All other fields in the record may be updated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7565e-233"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性設定為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-233">The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is set to <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="7565e-234">-   尚未註冊 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="7565e-234">-   The <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has not yet been registered.</span></span> <span data-ttu-id="7565e-235">在 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性中的對等名稱已於一或多個雲端註冊之前，無法呼叫 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 方法。</span><span class="sxs-lookup"><span data-stu-id="7565e-235">The <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> method cannot be called until the peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property is registered in one or more clouds.</span></span>  
  
<span data-ttu-id="7565e-236">-   <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性中指定的對等名稱，自從對應的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 註冊後已變更。</span><span class="sxs-lookup"><span data-stu-id="7565e-236">-   The peer name specified in the <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> property has changed since the corresponding <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> was registered.</span></span></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException"><span data-ttu-id="7565e-237">無法註冊已處置的物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-237">An object that has been disposed cannot be registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="7565e-238"><see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 屬性設定為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-238">A <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> property is set to <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7565e-239">取得或設定值，指定周遊對等網狀結構或 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 時，是否要使用自動端點選取。</span><span class="sxs-lookup"><span data-stu-id="7565e-239">Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />.</span></span></summary>
        <value><span data-ttu-id="7565e-240">如果要使用自動端點選取，則為 <see langword="True" />，如果要使用其他方法決定端點，則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-240"><see langword="True" /> if automatic endpoint selection is to be used; <see langword="false" /> if some other method will be used to determine an endpoint.</span></span> <span data-ttu-id="7565e-241">預設值是 <see langword="true" />。</span><span class="sxs-lookup"><span data-stu-id="7565e-241">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7565e-242">使用自動端點選取時 (這個屬性設定為`true`) 指定在開始之前沒有端點資訊<xref:System.Net.PeerToPeer.PeerNameRegistration>，系統會選擇個別的端點，並將其相關聯的對等名稱發行到所有可用雲端。</span><span class="sxs-lookup"><span data-stu-id="7565e-242">When auto endpoint selection is used (this property is set to `true`) with no endpoint information specified prior to the start of a <xref:System.Net.PeerToPeer.PeerNameRegistration>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</span></span>  <span data-ttu-id="7565e-243">如果未指定連接埠，自動選取項目選擇零，因為<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>。</span><span class="sxs-lookup"><span data-stu-id="7565e-243">If the port is not specified, auto selection chooses zero as the <xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>.</span></span>  
  
 <span data-ttu-id="7565e-244">當設定為`false`，不會執行自動選取上面所述。</span><span class="sxs-lookup"><span data-stu-id="7565e-244">When set to `false`, auto selection as described above is not performed.</span></span>  <span data-ttu-id="7565e-245">這可讓註冊程序來發佈 「 對等名稱，以及資料 blob (依指定<xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A>屬性)。</span><span class="sxs-lookup"><span data-stu-id="7565e-245">This enables the registration process to publish a peer name along with a data blob (as specified by the <xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A> property).</span></span> <span data-ttu-id="7565e-246">沒有端點是與名稱相關聯。</span><span class="sxs-lookup"><span data-stu-id="7565e-246">No endpoints are associated with the name.</span></span>  
  
 <span data-ttu-id="7565e-247">如果使用註冊方法，會自動選取要註冊的位址，沒有任何方法可以判斷哪些位址的<xref:System.Net.PeerToPeer.PeerName>已註冊的物件。</span><span class="sxs-lookup"><span data-stu-id="7565e-247">If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <xref:System.Net.PeerToPeer.PeerName> object was registered.</span></span>  <span data-ttu-id="7565e-248">也就是<xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>屬性將不會更新以反映選取的位址。</span><span class="sxs-lookup"><span data-stu-id="7565e-248">That is, the <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A> property will not be updated to reflect the addresses selected.</span></span>  
  
 <span data-ttu-id="7565e-249">啟動對等名稱註冊之後，請更新此屬性沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="7565e-249">Updating this property after peer name registration has started has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>