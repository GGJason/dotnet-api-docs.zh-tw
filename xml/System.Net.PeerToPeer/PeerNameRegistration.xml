<Type Name="PeerNameRegistration" FullName="System.Net.PeerToPeer.PeerNameRegistration">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9970347a507e1a50dbece7b9f46a71933a14be17" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53294755" /></Metadata><TypeSignature Language="C#" Value="public class PeerNameRegistration : IDisposable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerNameRegistration extends System.Object implements class System.IDisposable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.PeerNameRegistration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerNameRegistration&#xA;Implements IDisposable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerNameRegistration : IDisposable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerNameRegistration = class&#xA;    interface IDisposable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>在一個 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 或一組 Cloud 中註冊 <see cref="T:System.Net.PeerToPeer.Cloud" />。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 註冊建立 （或更新） 與相關聯的所有資訊<xref:System.Net.PeerToPeer.PeerName>對等 cloud 或雲端中。  
  
 很可能有多個<xref:System.Net.PeerToPeer.PeerNameRegistration>針對相同的對等名稱的物件。 在此情況下，如果受保護的對等名稱，每個執行個體代表<xref:System.Net.PeerToPeer.PeerNameRegistration>在不同的雲端。 不過，如果不安全的對等名稱，則可以註冊在相同的雲端中許多次，提供每個註冊從不同的處理程序。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 類別預設的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 傳回類型的新預設執行個體<xref:System.Net.PeerToPeer.PeerNameRegistration>。 它不會在建構期間執行對等名稱註冊。  
  
 建立與這個建構函式物件之後, 呼叫端應該填入前呼叫的執行個體中的適當欄位<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>或<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As PeerName, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">要註冊的  <see cref="T:System.Net.PeerToPeer.PeerName" /> 物件。</param>
        <param name="port">指定要註冊之連接埠號碼的整數值。</param>
        <summary>使用指定的名稱和連接埠號碼初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個建構函式會建立將用來註冊所有的來源位址 (這兩個 IPv6and IPv4) 執行個體和對等目前參與的所有雲端提供的連接埠。  如果成功，建構物件指定<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>和<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>會填入。  
  
 如果對等名稱並安全，而且先前已在中註冊<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>對等目前參與，<xref:System.Net.PeerToPeer.PeerToPeerException>就會擲回。  
  
 這個建構函式只會建立<xref:System.Net.PeerToPeer.PeerNameRegistration>執行個體，它不會執行註冊。 應用程式必須呼叫這個建構函式的註冊物件具現化，並填入其欄位之後,<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>以執行實際的註冊。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 參數不可為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的連接埠號碼小於零。  連接埠號碼必須大於或等於零，並且小於 65,535 (0xFFFF)。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 已從此主機註冊。  
  
-   遠端對等個體並未擁有提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 物件的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerNameRegistration (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerNameRegistration(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">參考保有還原序列化此執行個體所需資料的物件。</param>
        <param name="context">提供還原序列化資料方法的內容。 也稱為序列化資料的來源。</param>
        <summary>初始化一個新可序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="N:System.Runtime.Serialization" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PeerNameRegistration (System.Net.PeerToPeer.PeerName name, int port, System.Net.PeerToPeer.Cloud cloud);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.PeerToPeer.PeerName name, int32 port, class System.Net.PeerToPeer.Cloud cloud) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PeerNameRegistration(System::Net::PeerToPeer::PeerName ^ name, int port, System::Net::PeerToPeer::Cloud ^ cloud);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.PeerNameRegistration : System.Net.PeerToPeer.PeerName * int * System.Net.PeerToPeer.Cloud -&gt; System.Net.PeerToPeer.PeerNameRegistration" Usage="new System.Net.PeerToPeer.PeerNameRegistration (name, port, cloud)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.Net.PeerToPeer.PeerName" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="cloud" Type="System.Net.PeerToPeer.Cloud" />
      </Parameters>
      <Docs>
        <param name="name">要註冊的  <see cref="T:System.Net.PeerToPeer.PeerName" /> 物件。</param>
        <param name="port">指定要註冊之連接埠號碼的整數值。</param>
        <param name="cloud">註冊對等名稱所用的 <see cref="T:System.Net.PeerToPeer.Cloud" />。</param>
        <summary>使用指定的對等名稱、連接埠號碼和 <see cref="T:System.Net.PeerToPeer.Cloud" />，初始化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼叫這個建構函式會建立將用來註冊所有的來源位址 （IPv6 和 IPv4）、 提供的連接埠，及指定執行個體<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>。  如果成功建構物件，屬性會填入具有指定之<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>，<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>和<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>。  
  
 如果雲端參數是`null`，使用註冊名稱<xref:System.Net.PeerToPeer.Cloud.Available>捷徑，用來初始化的預設值<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，和<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>。  
  
 在具現化之後,<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>必須呼叫方法，以註冊<xref:System.Net.PeerToPeer.PeerName>。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="name" /> 參數不可為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的連接埠號碼小於零。  連接埠號碼必須大於或等於零，並且小於 65,535 (0xFFFF)。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 已從此主機註冊。  
  
-   遠端對等個體並未擁有提供的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 物件的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Cloud">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Cloud Cloud { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Cloud Cloud" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberSignature Language="VB.NET" Value="Public Property Cloud As Cloud" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Cloud ^ Cloud { System::Net::PeerToPeer::Cloud ^ get(); void set(System::Net::PeerToPeer::Cloud ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cloud : System.Net.PeerToPeer.Cloud with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Cloud</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 中的資訊，這個 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" /> 物件會於其中加以註冊。</summary>
        <value>型別為 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的物件，指定這個註冊所定義的對等 Cloud。 這個屬性預設會設定為 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Comment">
      <MemberSignature Language="C#" Value="public string Comment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Comment" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberSignature Language="VB.NET" Value="Public Property Comment As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Comment { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Comment : string with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Comment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定將向 <see cref="T:System.Net.PeerToPeer.PeerName" /> 註冊的 <see cref="T:System.Net.PeerToPeer.Cloud" /> 物件的其他資訊。</summary>
        <value>註解，內含要與 <see cref="T:System.Net.PeerToPeer.PeerName" /> 相關聯之 <see cref="T:System.Net.PeerToPeer.Cloud" /> 的其他資訊。 這個屬性預設會設定為 <see langword="null" />。</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">指定的字串值大於 39 個 Unicode 字元。</exception>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public byte[] Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Data" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberSignature Language="VB.NET" Value="Public Property Data As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Data { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Data : byte[] with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Data" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件的應用程式定義之二進位資料。</summary>
        <value>保存與項目相關的二進位資料的位元組陣列。 這個屬性預設會設定為 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最大數量<xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A>可以提供是 4,096 個位元組。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Data" /> 大於 4096 個位元組。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>釋放 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件所使用的資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當對等電腦離開<xref:System.Net.PeerToPeer.Cloud>，就不再需要雲端<xref:System.Net.PeerToPeer.PeerNameRegistration>與對等個體相關聯的物件。  註冊物件是否已停止或處置是取決於雲端將會重複使用要註冊此對等個體或另一個對等的物件。 如果有任何其他端點與對等主應用程式進行通訊的預期在註冊物件內，雲端中註冊這些端點必須先停止或處置這個物件。  
  
 如果雲端預計會註冊更多的對等<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>建議的方法，當雲端不再需要記憶體時，應該傳回至作業系統透過<xref:System.Net.PeerToPeer.PeerNameRegistration.Dispose%2A>方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="peerNameRegistration.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>釋放由 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件使用的所有資源。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>總是會呼叫 Dispose 方法，再終結<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />物件。</para></block>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="peerNameRegistration.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
        <summary>釋放 Unmanaged 資源，並選擇性釋放 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件所使用的 Managed 資源。</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="usage"><para>一定要釋放的最後一個參考之前，先呼叫 Dispose 方法<see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />物件。</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndPointCollection">
      <MemberSignature Language="C#" Value="public System.Net.IPEndPointCollection EndPointCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPEndPointCollection EndPointCollection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndPointCollection As IPEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IPEndPointCollection ^ EndPointCollection { System::Net::IPEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndPointCollection : System.Net.IPEndPointCollection" Usage="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得相關聯的對等名稱要註冊之網路端點的集合。</summary>
        <value><see cref="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" /> 物件，其中包含相關聯的對等名稱要註冊的網路端點。 除非明確指定，否則參考型別 (Reference Type) 的所有屬性預設值都是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 <xref:System.Net>命名空間，<xref:System.Net.IPEndPoint>網路端點表示成 IP 位址和連接埠號碼。  如需 PNRP，IP 位址和連接埠值必須提供每個端點。  端點可提供最大數目為十。 當此參數時，會使用自動位址選取`null`。  
  
 如果使用註冊方法，會自動選取要註冊的位址，沒有任何方法可以判斷的 theaddresses 的已註冊的對等名稱。  也就是<xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>屬性將不會更新以反映選取的位址。  
  
 當對等名稱會註冊為一個以上的節點，每個<xref:System.Net.PeerToPeer.PeerNameRegistration>不同，<xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>每個註冊執行個體上定義的屬性將會不同。 也，當<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>註冊多個<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>，每個註冊是不同的端點集合通常會每個執行個體不同。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para>與這個對等會進行通訊的端點清單不是相同的端點的已知這個對等名稱，清單會以不同方式儲存。</para></block>
        <altmember cref="T:System.Net.IPEndPointCollection" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerNameRegistration.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">保留與 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件相關聯的序列化資料。</param>
        <param name="context">包含與 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件相關聯之序列化資料流的目的地。</param>
        <summary>以序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 執行個體所需的資料，填入序列化資訊物件。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="C#" Value="public bool IsRegistered ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRegistered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public Function IsRegistered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRegistered();" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : unit -&gt; bool" Usage="peerNameRegistration.IsRegistered " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>取得或設定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性中指定的對等名稱，是否向主應用程式上的特定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 註冊。</summary>
        <returns>如果為 <see langword="true" />，則對等名稱是向對等主應用程式的 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 註冊。 如果為 <see langword="false" />，則註冊程序可以從 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> 開始。</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">無法註冊已經處置的物件。</exception>
        <altmember cref="T:System.Net.PeerToPeer.PeerNameResolver" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); void set(System::Net::PeerToPeer::PeerName ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要向對等 Cloud 註冊的對等名稱。</summary>
        <value>型別為 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的物件，其中包含與這個 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件相關聯的值。 除非明確指定，否則參考型別 (Reference Type) 的所有屬性預設值都是 <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 對等名稱可以註冊多個節點;每個<xref:System.Net.PeerToPeer.PeerNameRegistration>是不同的執行個體。 <xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>各有一個對應相關聯的屬性<xref:System.Net.PeerToPeer.PeerName>是不同的執行個體。 此外，就可以註冊多個節點都會連接到; 的雲端的對等名稱這些註冊都不同。 對等名稱的<xref:System.Net.IPEndPointCollection>將會在每一個執行個體不同。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Port">
      <MemberSignature Language="C#" Value="public int Port { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Port" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberSignature Language="VB.NET" Value="Public Property Port As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Port { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Port : int with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.Port" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定 [TCP/IP](https://go.microsoft.com/fwlink?LinkID=98458) 通訊埠編號，這是由註冊至 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件的對等節點所使用的通訊埠。</summary>
        <value>整數值，表示 <see cref="T:System.Net.IPEndPoint" /> 的 TCP 通訊埠編號。 除非有明確指定，否則這個屬性的預設值為零 (0)。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用預設連接埠<xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>只時沒有指定端點的方法。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定的通訊埠值小於零。  連接埠號碼必須大於或等於零，並且小於 65,535 (0xFFFF)。</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <altmember cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="peerNameRegistration.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>將 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 註冊到 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />。 如果未指定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />，則會使用自動位址選取搭配 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Port" /> 屬性指定的連接埠值。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 方法會登錄中指定的對等名稱<xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A>所有的來源位址的屬性和<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>建構函式中指定。 預設連接埠是沒有指定端點時，才使用這個方法。  
  
 如果<xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A>屬性是`null`，這個方法會註冊中指定的對等名稱<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>屬性使用<xref:System.Net.PeerToPeer.Cloud.Available>欄位中，用來初始化的預設值<xref:System.Net.PeerToPeer.Cloud.Name%2A>， <xref:System.Net.PeerToPeer.Cloud.Scope%2A>，以及<xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.  
  
 在後<xref:System.Net.PeerToPeer.PeerNameRegistration>啟動的物件，<xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A>方法用來停止它。  
  
 若要更新註冊，<xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A>必須使用的方法。  
  
   
  
## Examples  
 下列程式碼範例會建立<xref:System.Net.PeerToPeer.PeerName>並註冊以及指定的中繼資料。  
  
 [!code-csharp[NCLPNRPRegisterPeerName#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPRegisterPeerName/CS/RegisterPeerName.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性設定為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">此物件已被呼叫過 Dispose()。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 已註冊。 必須使用 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 方法更新註冊。  
  
-   遠端對等個體並未擁有指定的 <see cref="T:System.Net.PeerToPeer.PeerName" /> 的 <see cref="P:System.Net.PeerToPeer.PeerName.Authority" />。  
  
-   可能未指定 <see cref="T:System.Net.PeerToPeer.PeerName" /> 或 <see cref="P:System.Net.PeerToPeer.PeerNameRecord.Data" />，至少必須提供一個。  
  
-   訊息或資料元素無效。 或者是未設定 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />，且未指定資料 blob 或 <see cref="T:System.Net.IPEndPoint" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="peerNameRegistration.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>從已註冊的所有雲端中取消註冊 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性中指定的對等名稱。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 註冊程序停止之後，註冊物件的狀態等於狀態之後由預設的建構函式所建構。 處於此狀態，其所有屬性都假設沒有值。 <xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A>方法可用來重新啟動它。  
  
 可以有相同的對等名稱的多個註冊物件。  在此情況下，如果受保護的對等名稱，則每個執行個體將代表不同的 PNRP 雲端中的註冊。  不過，如果不安全的對等名稱，則可以註冊在相同的雲端中多次。  
  
 如果已停止這個執行個體，呼叫這個方法沒有任何作用。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">尚未註冊 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性。 使用空的建構函式建構 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 物件時，就會發生這種情況。 呼叫 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 之前，必須在這個執行個體中填入 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Start" /> 屬性。</exception>
        <exception cref="T:System.ObjectDisposedException">此物件已被呼叫過 Dispose()。</exception>
        <altmember cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">保留與 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 執行個體關聯的序列化資料。</param>
        <param name="context">包含與 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 執行個體相關聯之序列化資料流的目的地。</param>
        <summary>實作 <see cref="T:System.Runtime.Serialization.ISerializable" /> 介面，並傳回序列化 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" /> 執行個體所需的資料。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; unit" Usage="peerNameRegistration.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>針對已使用特定 <see cref="T:System.Net.PeerToPeer.Cloud" /> 註冊的節點，更新 <see cref="T:System.Net.PeerToPeer.PeerNameRegistration" />。 更新是使用屬性中指定的資訊來執行。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個註冊 cloud 中的所有資訊<xref:System.Net.PeerToPeer.PeerName>完全捨棄在呼叫之前。  新的資料不會結合現有的註冊。  若要更新<xref:System.Net.PeerToPeer.PeerNameRegistration>先更新此執行個體上的屬性，然後呼叫這個方法。  
  
 在後<xref:System.Net.PeerToPeer.PeerNameRecord>註冊，<xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>無法更新屬性。  記錄中的所有其他欄位可能會更新。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性設定為 <see langword="null" />。</exception>
        <exception cref="T:System.ObjectDisposedException">-   尚未註冊 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性。 在 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性中的對等名稱已於一或多個雲端註冊之前，無法呼叫 <see cref="M:System.Net.PeerToPeer.PeerNameRegistration.Update" /> 方法。  
  
-   <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" /> 屬性中指定的對等名稱，自從對應的 <see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 註冊後已變更。</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">無法註冊已處置的物件。</exception>
        <exception cref="T:System.ArgumentNullException"><see cref="T:System.Net.PeerToPeer.PeerNameRecord" /> 屬性設定為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="UseAutoEndPointSelection">
      <MemberSignature Language="C#" Value="public bool UseAutoEndPointSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseAutoEndPointSelection" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property UseAutoEndPointSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseAutoEndPointSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseAutoEndPointSelection : bool with get, set" Usage="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，指定周遊對等網狀結構或 <see cref="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" /> 時，是否要使用自動端點選取。</summary>
        <value>如果要使用自動端點選取，則為 <see langword="true" />，如果要使用其他方法決定端點，則為 <see langword="false" />。 預設值為 <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用自動端點選取時 (這個屬性設定為`true`) 指定在開始之前沒有端點資訊<xref:System.Net.PeerToPeer.PeerNameRegistration>，系統會選擇個別的端點，並將其相關聯的對等名稱發行到所有可用雲端。  如果未指定連接埠，自動選取項目選擇零，因為<xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A>。  
  
 當設定為`false`，不會執行自動選取上面所述。  這可讓註冊程序來發佈 「 對等名稱，以及資料 blob (依指定<xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A>屬性)。 沒有端點是與名稱相關聯。  
  
 如果使用註冊方法，會自動選取要註冊的位址，沒有任何方法可以判斷哪些位址的<xref:System.Net.PeerToPeer.PeerName>已註冊的物件。  也就是<xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A>屬性將不會更新以反映選取的位址。  
  
 啟動對等名稱註冊之後，請更新此屬性沒有任何作用。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>