<Type Name="PropertyValueUIItemInvokeHandler" FullName="System.Drawing.Design.PropertyValueUIItemInvokeHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12f595510e76bb480bb8b148c05e586e5c215403" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36339306" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyValueUIItemInvokeHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyValueUIItemInvokeHandler(context As ITypeDescriptorContext, descriptor As PropertyDescriptor, invokedItem As PropertyValueUIItem)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext ^ context, PropertyDescriptor ^ descriptor, PropertyValueUIItem ^ invokedItem);" />
  <TypeSignature Language="F#" Value="type PropertyValueUIItemInvokeHandler = delegate of ITypeDescriptorContext * PropertyDescriptor * PropertyValueUIItem -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
    <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
    <Parameter Name="invokedItem" Type="System.Drawing.Design.PropertyValueUIItem" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context">
      <span data-ttu-id="97ab8-101">屬性的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，與按兩下的圖示相關。</span>
      <span class="sxs-lookup">
        <span data-stu-id="97ab8-101">The <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> for the property associated with the icon that was double-clicked.</span>
      </span>
    </param>
    <param name="descriptor">
      <span data-ttu-id="97ab8-102">與按兩下的圖示相關的屬性。</span>
      <span class="sxs-lookup">
        <span data-stu-id="97ab8-102">The property associated with the icon that was double-clicked.</span>
      </span>
    </param>
    <param name="invokedItem">
      <span data-ttu-id="97ab8-103">
        <see cref="T:System.Drawing.Design.PropertyValueUIItem" />，與按兩下的圖示相關。</span>
      <span class="sxs-lookup">
        <span data-stu-id="97ab8-103">The <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> associated with the icon that was double-clicked.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="97ab8-104">代表將處理 <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> 之 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 事件的方法。</span>
      <span class="sxs-lookup">
        <span data-stu-id="97ab8-104">Represents the method that will handle the <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> event of a <see cref="T:System.Drawing.Design.PropertyValueUIItem" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="97ab8-105">按兩下 [屬性] 視窗中的圖示將會引發<xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A>事件<xref:System.Drawing.Design.PropertyValueUIItem>圖示相關聯。</span><span class="sxs-lookup"><span data-stu-id="97ab8-105">Double-clicking an icon in the Properties window will raise the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event of the <xref:System.Drawing.Design.PropertyValueUIItem> that the icon is associated with.</span></span> <span data-ttu-id="97ab8-106"><xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A>事件通常會啟動使用者介面 (UI)，若要編輯屬性的值。</span><span class="sxs-lookup"><span data-stu-id="97ab8-106">The <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> event typically launches a user interface (UI) to edit the property's value.</span></span> <span data-ttu-id="97ab8-107">新增<xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler>至<xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A>屬性<xref:System.Drawing.Design.PropertyValueUIItem>指派按兩下顯示屬性名稱旁邊的圖示時，執行適當的行為的事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="97ab8-107">Add a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> to the <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> property of a <xref:System.Drawing.Design.PropertyValueUIItem> to assign an event handler to perform the appropriate behavior when the icon displayed next to the property name is double-clicked.</span></span>  
  
 <span data-ttu-id="97ab8-108">建立 <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> 委派時，必須識別處理事件的方法。</span><span class="sxs-lookup"><span data-stu-id="97ab8-108">When you create a <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> delegate, you identify the method that will handle the event.</span></span> <span data-ttu-id="97ab8-109">若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。</span><span class="sxs-lookup"><span data-stu-id="97ab8-109">To associate the event with your event handler, add an instance of the delegate to the event.</span></span> <span data-ttu-id="97ab8-110">除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。</span><span class="sxs-lookup"><span data-stu-id="97ab8-110">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span> <span data-ttu-id="97ab8-111">如需事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。</span><span class="sxs-lookup"><span data-stu-id="97ab8-111">For more information about event-handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="97ab8-112">下列程式碼範例提供<xref:System.Drawing.Design.PropertyValueUIItem>名為任何的元件屬性的物件`HorizontalMargin`或`VerticalMargin`。</span><span class="sxs-lookup"><span data-stu-id="97ab8-112">The following code example provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`.</span></span> <span data-ttu-id="97ab8-113"><xref:System.Drawing.Design.PropertyValueUIItem>這些屬性提供的映像、 工具提示中和事件處理常式，按一下屬性影像時顯示訊息方塊。</span><span class="sxs-lookup"><span data-stu-id="97ab8-113">The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked.</span></span> <span data-ttu-id="97ab8-114">這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Drawing.Design.IPropertyValueUIService>介面。</span><span class="sxs-lookup"><span data-stu-id="97ab8-114">This code example is part of a larger example provided for the <xref:System.Drawing.Design.IPropertyValueUIService> interface.</span></span>  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
</Type>