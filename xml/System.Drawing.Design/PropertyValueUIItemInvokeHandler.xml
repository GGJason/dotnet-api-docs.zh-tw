<Type Name="PropertyValueUIItemInvokeHandler" FullName="System.Drawing.Design.PropertyValueUIItemInvokeHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="278e34e1ce07c81f9bcf7455f811bf2a01ec4538" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30406262" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PropertyValueUIItemInvokeHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Design.PropertyValueUIItemInvokeHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub PropertyValueUIItemInvokeHandler(context As ITypeDescriptorContext, descriptor As PropertyDescriptor, invokedItem As PropertyValueUIItem)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext ^ context, PropertyDescriptor ^ descriptor, PropertyValueUIItem ^ invokedItem);" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
    <Parameter Name="descriptor" Type="System.ComponentModel.PropertyDescriptor" />
    <Parameter Name="invokedItem" Type="System.Drawing.Design.PropertyValueUIItem" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="context">屬性的 <see cref="T:System.ComponentModel.ITypeDescriptorContext" />，與按兩下的圖示相關。</param>
    <param name="descriptor">與按兩下的圖示相關的屬性。</param>
    <param name="invokedItem">
      <see cref="T:System.Drawing.Design.PropertyValueUIItem" />，與按兩下的圖示相關。</param>
    <summary>代表將處理 <see cref="P:System.Drawing.Design.PropertyValueUIItem.InvokeHandler" /> 之 <see cref="T:System.Drawing.Design.PropertyValueUIItem" /> 事件的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 按兩下 [屬性] 視窗中的圖示將會引發<xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A>事件<xref:System.Drawing.Design.PropertyValueUIItem>圖示相關聯。 <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A>事件通常會啟動使用者介面 (UI)，若要編輯屬性的值。 新增<xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler>至<xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A>屬性<xref:System.Drawing.Design.PropertyValueUIItem>指派按兩下顯示屬性名稱旁邊的圖示時，執行適當的行為的事件處理常式。  
  
 建立 <xref:System.Drawing.Design.PropertyValueUIItemInvokeHandler> 委派時，必須識別處理事件的方法。 若要使事件與您的事件處理常式產生關聯，請將委派的執行個體 (Instance) 加入至事件。 除非您移除委派，否則每當事件發生時就會呼叫事件處理常式。 如需事件處理常式委派的詳細資訊，請參閱[處理和引發事件](~/docs/standard/events/index.md)。  
  
   
  
## Examples  
 下列程式碼範例提供<xref:System.Drawing.Design.PropertyValueUIItem>名為任何的元件屬性的物件`HorizontalMargin`或`VerticalMargin`。 <xref:System.Drawing.Design.PropertyValueUIItem>這些屬性提供的映像、 工具提示中和事件處理常式，按一下屬性影像時顯示訊息方塊。 這個程式碼範例是針對所提供之較大範例的一部分<xref:System.Drawing.Design.IPropertyValueUIService>介面。  
  
 [!code-cpp[IPropertyValueUIServiceExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CPP/propertyuicomponent.cpp#2)]
 [!code-csharp[IPropertyValueUIServiceExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/IPropertyValueUIServiceExample/CS/propertyuicomponent.cs#2)]
 [!code-vb[IPropertyValueUIServiceExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IPropertyValueUIServiceExample/VB/propertyuicomponent.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
    <altmember cref="T:System.Drawing.Design.PropertyValueUIItem" />
    <altmember cref="T:System.Drawing.Design.IPropertyValueUIService" />
  </Docs>
</Type>