<Type Name="OdbcCommandBuilder" FullName="System.Data.Odbc.OdbcCommandBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="754ba74c3af6b88ffda378f845dd52a3dc15dff0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcCommandBuilder : System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcCommandBuilder extends System.Data.Common.DbCommandBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcCommandBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcCommandBuilder&#xA;Inherits DbCommandBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcCommandBuilder sealed : System::Data::Common::DbCommandBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbCommandBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c228e-101">自動產生單一資料表命令，可用來調解對 <see cref="T:System.Data.DataSet" /> 的變更和相關的資料來源。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c228e-101">Automatically generates single-table commands that are used to reconcile changes made to a <see cref="T:System.Data.DataSet" /> with the associated data source.</span>
      </span>
      <span data-ttu-id="c228e-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c228e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-103"><xref:System.Data.Odbc.OdbcDataAdapter>協調所做的變更所需的 SQL 陳述式不會自動產生<xref:System.Data.DataSet>與資料來源相關聯。</span><span class="sxs-lookup"><span data-stu-id="c228e-103">The <xref:System.Data.Odbc.OdbcDataAdapter> does not automatically generate the SQL statements required to reconcile changes made to a <xref:System.Data.DataSet> associated with the data source.</span></span> <span data-ttu-id="c228e-104">不過，您可以建立<xref:System.Data.Odbc.OdbcCommandBuilder>物件，可產生單一資料表更新 SQL 陳述式，藉由設定<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>屬性<xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c228e-104">However, you can create an <xref:System.Data.Odbc.OdbcCommandBuilder> object that generates SQL statements for single-table updates by setting the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property of the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span> <span data-ttu-id="c228e-105"><xref:System.Data.Odbc.OdbcCommandBuilder>接著會產生您未設定任何其他 SQL 陳述式。</span><span class="sxs-lookup"><span data-stu-id="c228e-105">The <xref:System.Data.Odbc.OdbcCommandBuilder> then generates any additional SQL statements that you do not set.</span></span>  
  
 <span data-ttu-id="c228e-106">之間的關聯性<xref:System.Data.Odbc.OdbcDataAdapter>和其相對應<xref:System.Data.Odbc.OdbcCommandBuilder>一定是一對一。</span><span class="sxs-lookup"><span data-stu-id="c228e-106">The relationship between an <xref:System.Data.Odbc.OdbcDataAdapter> and its corresponding <xref:System.Data.Odbc.OdbcCommandBuilder> is always one-to-one.</span></span> <span data-ttu-id="c228e-107">若要建立這種對應關係，您將設定<xref:System.Data.Odbc.OdbcDataAdapter>屬性<xref:System.Data.Odbc.OdbcCommandBuilder>物件。</span><span class="sxs-lookup"><span data-stu-id="c228e-107">To create this correspondence, you set the <xref:System.Data.Odbc.OdbcDataAdapter> property of the <xref:System.Data.Odbc.OdbcCommandBuilder> object.</span></span> <span data-ttu-id="c228e-108">這會導致<xref:System.Data.Odbc.OdbcCommandBuilder>登錄它自己做為接聽程式產生的輸出<xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>影響事件的<xref:System.Data.DataSet>。</span><span class="sxs-lookup"><span data-stu-id="c228e-108">This causes the <xref:System.Data.Odbc.OdbcCommandBuilder> to register itself as a listener, which produces the output of <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> events that affect the <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="c228e-109">若要產生 INSERT、 UPDATE 或 DELETE 陳述式<xref:System.Data.Odbc.OdbcCommandBuilder>使用<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>屬性，以擷取所需的一組中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c228e-109">To generate INSERT, UPDATE, or DELETE statements, the <xref:System.Data.Odbc.OdbcCommandBuilder> uses the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property to retrieve a required set of metadata.</span></span> <span data-ttu-id="c228e-110">如果您變更的值<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>中繼資料擷取，例如第一次更新之後，您應該都會接著呼叫之後<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>方法，以更新中繼資料。</span><span class="sxs-lookup"><span data-stu-id="c228e-110">If you change the value of <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> after the metadata has been retrieved, such as after the first update, you should then call the <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> method to update the metadata.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c228e-111">如果 SELECT 陳述式指派給<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>屬性使用別名資料行名稱，產生的 INSERT、 UPDATE 和 DELETE 陳述式可能不正確或失敗。</span><span class="sxs-lookup"><span data-stu-id="c228e-111">If the SELECT statement assigned to the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property uses aliased column names, the resulting INSERT, UPDATE, and DELETE statements may be inaccurate or fail.</span></span> <span data-ttu-id="c228e-112">如果基礎的 ODBC 驅動程式無法提供適當的基底資料行名稱別名資料行名稱 (使用 SQL_DESC_BASE_COLUMN_NAME 值`SQLColAttribute`)，無法產生 INSERT、 UPDATE 和 DELETE 陳述式中使用的別名名稱。</span><span class="sxs-lookup"><span data-stu-id="c228e-112">If the underlying ODBC driver cannot provide the appropriate base column name for the alias column name (using the SQL_DESC_BASE_COLUMN_NAME value of `SQLColAttribute`), the alias name could be used in the generated INSERT, UPDATE, and DELETE statements.</span></span> <span data-ttu-id="c228e-113">例如，Microsoft ODBC Driver for Oracle 傳回的別名名稱的基底的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="c228e-113">For example, the Microsoft ODBC Driver for Oracle returns the alias name as the base column name.</span></span> <span data-ttu-id="c228e-114">因此，產生的 INSERT、 UPDATE 和 DELETE 陳述式會導致錯誤。</span><span class="sxs-lookup"><span data-stu-id="c228e-114">Therefore, the generated INSERT, UPDATE, and DELETE statements would cause errors.</span></span>  
  
 <span data-ttu-id="c228e-115"><xref:System.Data.Odbc.OdbcCommandBuilder>也會使用<xref:System.Data.Odbc.OdbcCommand.Connection%2A>， <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>，和<xref:System.Data.Odbc.OdbcCommand.Transaction%2A>屬性所參考<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="c228e-115">The <xref:System.Data.Odbc.OdbcCommandBuilder> also uses the <xref:System.Data.Odbc.OdbcCommand.Connection%2A>, <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>, and <xref:System.Data.Odbc.OdbcCommand.Transaction%2A> properties referenced by the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>.</span></span> <span data-ttu-id="c228e-116">使用者應該呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>如果修改了一個或多個這些屬性，或如果的值<xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A>本身的屬性變更。</span><span class="sxs-lookup"><span data-stu-id="c228e-116">The user should call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if one or more of these properties are modified, or if the value of the <xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A> property itself is changed.</span></span> <span data-ttu-id="c228e-117">否則<xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>， <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>，和<xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A>屬性會保留其先前的值。</span><span class="sxs-lookup"><span data-stu-id="c228e-117">Otherwise the <xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A>, <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>, and <xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A> properties retain their previous values.</span></span>  
  
 <span data-ttu-id="c228e-118">如果您呼叫<xref:System.ComponentModel.Component.Dispose%2A>、<xref:System.Data.Odbc.OdbcCommandBuilder>會解除關聯<xref:System.Data.Odbc.OdbcDataAdapter>，以及所產生的命令不會再使用。</span><span class="sxs-lookup"><span data-stu-id="c228e-118">If you call <xref:System.ComponentModel.Component.Dispose%2A>, the <xref:System.Data.Odbc.OdbcCommandBuilder> is disassociated from the <xref:System.Data.Odbc.OdbcDataAdapter>, and the generated commands are no longer used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c228e-119">下列範例會使用<xref:System.Data.Odbc.OdbcCommand>搭配<xref:System.Data.Odbc.OdbcDataAdapter>和<xref:System.Data.Odbc.OdbcConnection>、 從資料來源選取資料列。</span><span class="sxs-lookup"><span data-stu-id="c228e-119">The following example uses <xref:System.Data.Odbc.OdbcCommand>, together with <xref:System.Data.Odbc.OdbcDataAdapter> and <xref:System.Data.Odbc.OdbcConnection>, to select rows from a data source.</span></span> <span data-ttu-id="c228e-120">此範例會傳遞初始化<xref:System.Data.DataSet>，連接字串、 SQL SELECT 陳述式的查詢字串和資料來源資料表名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="c228e-120">The example is passed an initialized <xref:System.Data.DataSet>, a connection string, a query string that is an SQL SELECT statement, and a string that is the name of the data source table.</span></span> <span data-ttu-id="c228e-121">這個範例會建立<xref:System.Data.Odbc.OdbcCommandBuilder>。</span><span class="sxs-lookup"><span data-stu-id="c228e-121">The example then creates an <xref:System.Data.Odbc.OdbcCommandBuilder>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/CS/mysample.cs#1)]
 [!code-vb[Classic WebData OdbcCommandBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcCommandBuilder/VB/mysample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c228e-122">初始化 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-122">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c228e-123">初始化 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-123">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-124">基底建構函式所有的欄位初始化成為其預設值。</span><span class="sxs-lookup"><span data-stu-id="c228e-124">The base constructor initializes all fields to their default values.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcCommandBuilder (System.Data.Odbc.OdbcDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Odbc.OdbcDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.#ctor(System.Data.Odbc.OdbcDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (adapter As OdbcDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcCommandBuilder(System::Data::Odbc::OdbcDataAdapter ^ adapter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Odbc.OdbcDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">
          <span data-ttu-id="c228e-125">要與這個 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 產生關聯的 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-125">An <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object to associate with this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c228e-126">使用關聯的 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 物件來初始化 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-126">Initializes a new instance of the <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> class with the associated <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-127"><xref:System.Data.Odbc.OdbcCommandBuilder>自己註冊為接聽程式<xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>產生的事件<xref:System.Data.Odbc.OdbcDataAdapter>這個屬性中指定。</span><span class="sxs-lookup"><span data-stu-id="c228e-127">The <xref:System.Data.Odbc.OdbcCommandBuilder> registers itself as a listener for <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.Odbc.OdbcDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="c228e-128">當您建立的新執行個體<xref:System.Data.Odbc.OdbcCommandBuilder>，任何現有<xref:System.Data.Odbc.OdbcCommandBuilder>與此相關聯<xref:System.Data.Odbc.OdbcDataAdapter>釋放。</span><span class="sxs-lookup"><span data-stu-id="c228e-128">When you create a new instance of <xref:System.Data.Odbc.OdbcCommandBuilder>, any existing <xref:System.Data.Odbc.OdbcCommandBuilder> associated with this <xref:System.Data.Odbc.OdbcDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyParameterInfo">
      <MemberSignature Language="C#" Value="protected override void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow datarow, System.Data.StatementType statementType, bool whereClause);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ApplyParameterInfo(class System.Data.Common.DbParameter parameter, class System.Data.DataRow datarow, valuetype System.Data.StatementType statementType, bool whereClause) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ApplyParameterInfo(System::Data::Common::DbParameter ^ parameter, System::Data::DataRow ^ datarow, System::Data::StatementType statementType, bool whereClause);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Data.Common.DbParameter" />
        <Parameter Name="datarow" Type="System.Data.DataRow" />
        <Parameter Name="statementType" Type="System.Data.StatementType" />
        <Parameter Name="whereClause" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="parameter">To be added.</param>
        <param name="datarow">To be added.</param>
        <param name="statementType">To be added.</param>
        <param name="whereClause">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataAdapter">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcDataAdapter DataAdapter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Odbc.OdbcDataAdapter DataAdapter" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcCommandBuilder.DataAdapter" />
      <MemberSignature Language="VB.NET" Value="Public Property DataAdapter As OdbcDataAdapter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Odbc::OdbcDataAdapter ^ DataAdapter { System::Data::Odbc::OdbcDataAdapter ^ get(); void set(System::Data::Odbc::OdbcDataAdapter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcDataAdapter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c228e-129">設定或取得 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 物件，這個 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 物件將會為它產生 SQL 陳述式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-129">Gets or sets an <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object for which this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> object will generate SQL statements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c228e-130">與這個 <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> 相關聯的 <see cref="T:System.Data.Odbc.OdbcCommandBuilder" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-130">An <see cref="T:System.Data.Odbc.OdbcDataAdapter" /> object that is associated with this <see cref="T:System.Data.Odbc.OdbcCommandBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-131"><xref:System.Data.Odbc.OdbcCommandBuilder>自己註冊為接聽程式<xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating>產生的事件<xref:System.Data.Odbc.OdbcDataAdapter>這個屬性中指定。</span><span class="sxs-lookup"><span data-stu-id="c228e-131">The <xref:System.Data.Odbc.OdbcCommandBuilder> registers itself as a listener for <xref:System.Data.Odbc.OdbcDataAdapter.RowUpdating> events that are generated by the <xref:System.Data.Odbc.OdbcDataAdapter> specified in this property.</span></span>  
  
 <span data-ttu-id="c228e-132">當您建立的新執行個體<xref:System.Data.Odbc.OdbcCommandBuilder>，任何現有<xref:System.Data.Odbc.OdbcCommandBuilder>與此相關聯<xref:System.Data.Odbc.OdbcDataAdapter>釋放。</span><span class="sxs-lookup"><span data-stu-id="c228e-132">When you create a new instance of <xref:System.Data.Odbc.OdbcCommandBuilder>, any existing <xref:System.Data.Odbc.OdbcCommandBuilder> associated with this <xref:System.Data.Odbc.OdbcDataAdapter> is released.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeriveParameters">
      <MemberSignature Language="C#" Value="public static void DeriveParameters (System.Data.Odbc.OdbcCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeriveParameters(class System.Data.Odbc.OdbcCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters(System.Data.Odbc.OdbcCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub DeriveParameters (command As OdbcCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeriveParameters(System::Data::Odbc::OdbcCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Odbc.OdbcCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="c228e-133">
            <see cref="T:System.Data.Odbc.OdbcCommand" />，參考參數資訊衍生來源的預存程序。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-133">The <see cref="T:System.Data.Odbc.OdbcCommand" /> referencing the stored procedure from which the parameter information is to be derived.</span>
          </span>
          <span data-ttu-id="c228e-134">衍生的參數已加入到 <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> 的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-134">The derived parameters are added to the <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> collection of the <see cref="T:System.Data.Odbc.OdbcCommand" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c228e-135">從 <see cref="T:System.Data.Odbc.OdbcCommand" /> 中指定的預存程序 (Stored Procedure) 擷取參數資訊，並填入 (Populate) 指定 <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> 物件的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-135">Retrieves parameter information from the stored procedure specified in the <see cref="T:System.Data.Odbc.OdbcCommand" /> and populates the <see cref="P:System.Data.Odbc.OdbcCommand.Parameters" /> collection of the specified <see cref="T:System.Data.Odbc.OdbcCommand" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-136"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> 覆寫任何現有參數資訊<xref:System.Data.Odbc.OdbcCommand>。</span><span class="sxs-lookup"><span data-stu-id="c228e-136"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> overwrites any existing parameter information for the <xref:System.Data.Odbc.OdbcCommand>.</span></span>  
  
 <span data-ttu-id="c228e-137"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> 需要額外的呼叫到資料來源取得的資訊。</span><span class="sxs-lookup"><span data-stu-id="c228e-137"><xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> requires an additional call to the data source to obtain the information.</span></span> <span data-ttu-id="c228e-138">如果事先已知道參數資訊，則更有效率的明確設定資訊填入參數集合。</span><span class="sxs-lookup"><span data-stu-id="c228e-138">If the parameter information is known in advance, it is more efficient to populate the parameters collection by setting the information explicitly.</span></span>  
  
 <span data-ttu-id="c228e-139">您只能使用<xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A>預存程序。</span><span class="sxs-lookup"><span data-stu-id="c228e-139">You can only use <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> with stored procedures.</span></span> <span data-ttu-id="c228e-140">您無法使用<xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A>填入<xref:System.Data.Odbc.OdbcParameterCollection>與任意的 TRANSACT-SQL 陳述式，例如參數化的 SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="c228e-140">You cannot use <xref:System.Data.Odbc.OdbcCommandBuilder.DeriveParameters%2A> to populate the <xref:System.Data.Odbc.OdbcParameterCollection> with arbitrary Transact-SQL statements, such as a parameterized SELECT statement.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c228e-141">基礎 ODBC 驅動程式不支援傳回預存程序參數資訊，或是命令文字不是有效的預存程序名稱，或者指定的 <see cref="T:System.Data.CommandType" /> 不是 <see langword="CommandType.StoredProcedure" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-141">The underlying ODBC driver does not support returning stored procedure parameter information, or the command text is not a valid stored procedure name, or the <see cref="T:System.Data.CommandType" /> specified was not <see langword="CommandType.StoredProcedure" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDeleteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c228e-142">取得在資料來源上執行刪除時所需之自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-142">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-143">您可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Odbc.OdbcCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="c228e-143">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c228e-144">您也可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="c228e-144">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c228e-145">例如，您可能會呼叫<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c228e-145">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="c228e-146">第一次產生 SQL 陳述式之後，您必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="c228e-146">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c228e-147">否則，<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="c228e-147">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c228e-148">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="c228e-148">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c228e-149">取得在資料來源上執行刪除時所需之自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-149">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c228e-150">自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件，執行刪除時所需要的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-150">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-151">您可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Odbc.OdbcCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="c228e-151">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c228e-152">您也可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="c228e-152">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c228e-153">例如，您可能會呼叫<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c228e-153">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="c228e-154">第一次產生 SQL 陳述式之後，您必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="c228e-154">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c228e-155">否則，<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="c228e-155">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c228e-156">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="c228e-156">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetDeleteCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetDeleteCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeleteCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetDeleteCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="c228e-157">如果為 <see langword="true" />，則盡可能產生符合資料行名稱的參數名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-157">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="c228e-158">如為 <see langword="false" />，則產生 @p1、@p2 等等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-158">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c228e-159">取得在資料來源上執行刪除時所需之自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-159">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c228e-160">自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件，執行刪除時所需要的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-160">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform deletions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-161">您可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Odbc.OdbcCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="c228e-161">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c228e-162">您也可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="c228e-162">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c228e-163">例如，您可能會呼叫<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c228e-163">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="c228e-164">第一次產生 SQL 陳述式之後，您必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="c228e-164">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c228e-165">否則，<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="c228e-165">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c228e-166">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="c228e-166">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetDeleteCommand%2A>.</span></span>  
  
 <span data-ttu-id="c228e-167">產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。</span><span class="sxs-lookup"><span data-stu-id="c228e-167">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="c228e-168">傳遞`true`如`useColumnsForParameterNames`參數可讓您強制執行<xref:System.Data.Odbc.OdbcCommandBuilder>來產生改為根據的資料行名稱的參數。</span><span class="sxs-lookup"><span data-stu-id="c228e-168">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.Odbc.OdbcCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="c228e-169">才會成功，則符合下列條件：</span><span class="sxs-lookup"><span data-stu-id="c228e-169">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="c228e-170"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度為等於或大於產生的參數名稱。</span><span class="sxs-lookup"><span data-stu-id="c228e-170">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified, and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="c228e-171">產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。</span><span class="sxs-lookup"><span data-stu-id="c228e-171">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="c228e-172">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</span><span class="sxs-lookup"><span data-stu-id="c228e-172">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInsertCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c228e-173">取得在資料來源上執行插入時所需之自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-173">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-174">您可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Odbc.OdbcCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="c228e-174">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c228e-175">您也可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="c228e-175">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c228e-176">例如，您可能會呼叫<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c228e-176">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="c228e-177">第一次產生 SQL 陳述式之後，您必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="c228e-177">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c228e-178">否則，<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="c228e-178">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c228e-179">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="c228e-179">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c228e-180">取得在資料來源上執行插入時所需之自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-180">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c228e-181">執行插入所需而自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-181">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-182">您可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Odbc.OdbcCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="c228e-182">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c228e-183">您也可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="c228e-183">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c228e-184">例如，您可能會呼叫<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c228e-184">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="c228e-185">第一次產生 SQL 陳述式之後，您必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="c228e-185">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c228e-186">否則，<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="c228e-186">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c228e-187">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="c228e-187">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetInsertCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetInsertCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetInsertCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="c228e-188">如果為 <see langword="true" />，則盡可能產生符合資料行名稱的參數名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-188">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="c228e-189">如為 <see langword="false" />，則產生 @p1、@p2 等等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-189">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c228e-190">取得在資料來源上執行插入時所需之自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-190">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c228e-191">執行插入所需而自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-191">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform insertions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-192">您可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Odbc.OdbcCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="c228e-192">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c228e-193">您也可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="c228e-193">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c228e-194">例如，您可能會呼叫<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c228e-194">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="c228e-195">第一次產生 SQL 陳述式之後，您必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="c228e-195">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c228e-196">否則，<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="c228e-196">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c228e-197">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="c228e-197">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetInsertCommand%2A>.</span></span>  
  
 <span data-ttu-id="c228e-198">產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。</span><span class="sxs-lookup"><span data-stu-id="c228e-198">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="c228e-199">傳遞`true`如`useColumnsForParameterNames`參數可讓您強制執行<xref:System.Data.Common.DbCommandBuilder>來產生改為根據的資料行名稱的參數。</span><span class="sxs-lookup"><span data-stu-id="c228e-199">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="c228e-200">才會成功，則符合下列條件：</span><span class="sxs-lookup"><span data-stu-id="c228e-200">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="c228e-201"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度為等於或大於產生的參數名稱。</span><span class="sxs-lookup"><span data-stu-id="c228e-201">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified, and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="c228e-202">產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。</span><span class="sxs-lookup"><span data-stu-id="c228e-202">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="c228e-203">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</span><span class="sxs-lookup"><span data-stu-id="c228e-203">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterName">
      <MemberSignature Language="C#" Value="protected override string GetParameterName (string parameterName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterName(string parameterName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterName (parameterName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterName(System::String ^ parameterName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameterName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameterPlaceholder">
      <MemberSignature Language="C#" Value="protected override string GetParameterPlaceholder (int parameterOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetParameterPlaceholder(int32 parameterOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetParameterPlaceholder(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetParameterPlaceholder (parameterOrdinal As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetParameterPlaceholder(int parameterOrdinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterOrdinal">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUpdateCommand">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c228e-204">取得在資料來源上執行更新時所需之自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-204">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-205">您可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Odbc.OdbcCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="c228e-205">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c228e-206">您也可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="c228e-206">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c228e-207">例如，您可能會呼叫<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c228e-207">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="c228e-208">第一次產生 SQL 陳述式之後，您必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="c228e-208">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c228e-209">否則，<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="c228e-209">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c228e-210">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="c228e-210">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c228e-211">取得在資料來源上執行更新時所需之自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-211">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c228e-212">自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件，執行更新時所需要的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-212">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-213">您可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Odbc.OdbcCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="c228e-213">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c228e-214">您也可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="c228e-214">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c228e-215">例如，您可能會呼叫<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c228e-215">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="c228e-216">第一次產生 SQL 陳述式之後，您必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="c228e-216">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c228e-217">否則，<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="c228e-217">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c228e-218">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="c228e-218">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand GetUpdateCommand (bool useColumnsForParameterNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand GetUpdateCommand(bool useColumnsForParameterNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpdateCommand (useColumnsForParameterNames As Boolean) As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ GetUpdateCommand(bool useColumnsForParameterNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useColumnsForParameterNames" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useColumnsForParameterNames">
          <span data-ttu-id="c228e-219">如果為 <see langword="true" />，則盡可能產生符合資料行名稱的參數名稱。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-219">If <see langword="true" />, generate parameter names matching column names, if it is possible.</span>
          </span>
          <span data-ttu-id="c228e-220">如為 <see langword="false" />，則產生 @p1、@p2 等等。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-220">If <see langword="false" />, generate @p1, @p2, and so on.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c228e-221">取得在資料來源上執行更新時所需之自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-221">Gets the automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates at the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c228e-222">自動產生的 <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件，執行更新時所需要的。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-222">The automatically generated <see cref="T:System.Data.Odbc.OdbcCommand" /> object required to perform updates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c228e-223">您可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>方法資訊或疑難排解的考量，因為它會傳回<xref:System.Data.Odbc.OdbcCommand>来執行的物件。</span><span class="sxs-lookup"><span data-stu-id="c228e-223">You can use the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> method for informational or troubleshooting purposes because it returns the <xref:System.Data.Odbc.OdbcCommand> object to be executed.</span></span>  
  
 <span data-ttu-id="c228e-224">您也可以使用<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>做為基礎的已修改的命令。</span><span class="sxs-lookup"><span data-stu-id="c228e-224">You can also use <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> as the basis of a modified command.</span></span> <span data-ttu-id="c228e-225">例如，您可能會呼叫<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>和修改<xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A>值，並接著上明確設定， <xref:System.Data.Odbc.OdbcDataAdapter>。</span><span class="sxs-lookup"><span data-stu-id="c228e-225">For example, you might call <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> and modify the <xref:System.Data.Odbc.OdbcCommand.CommandTimeout%2A> value, and then explicitly set that on the <xref:System.Data.Odbc.OdbcDataAdapter>.</span></span>  
  
 <span data-ttu-id="c228e-226">第一次產生 SQL 陳述式之後，您必須明確呼叫<xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>陳述式以任何方式變更時。</span><span class="sxs-lookup"><span data-stu-id="c228e-226">After the SQL statement is first generated, you must explicitly call <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> if it changes the statement in any way.</span></span> <span data-ttu-id="c228e-227">否則，<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>仍會使用從先前的陳述式，這可能不正確的資訊。</span><span class="sxs-lookup"><span data-stu-id="c228e-227">Otherwise, the <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A> still will be using information from the previous statement, which might not be correct.</span></span> <span data-ttu-id="c228e-228">第一次產生 SQL 陳述式，當應用程式呼叫 <xref:System.Data.Common.DbDataAdapter.Update%2A>或<xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>。</span><span class="sxs-lookup"><span data-stu-id="c228e-228">The SQL statements are first generated when the application calls either <xref:System.Data.Common.DbDataAdapter.Update%2A> or <xref:System.Data.Odbc.OdbcCommandBuilder.GetUpdateCommand%2A>.</span></span>  
  
 <span data-ttu-id="c228e-229">產生的參數名稱時的預設行為是使用@p1， @p2，依此類推的各種不同的參數。</span><span class="sxs-lookup"><span data-stu-id="c228e-229">The default behavior, when generating parameter names, is to use @p1, @p2, and so on for the various parameters.</span></span> <span data-ttu-id="c228e-230">傳遞`true`如`useColumnsForParameterNames`參數可讓您強制執行<xref:System.Data.Common.DbCommandBuilder>來產生改為根據的資料行名稱的參數。</span><span class="sxs-lookup"><span data-stu-id="c228e-230">Passing `true` for the `useColumnsForParameterNames` parameter lets you force the <xref:System.Data.Common.DbCommandBuilder> to generate parameters based on the column names instead.</span></span> <span data-ttu-id="c228e-231">才會成功，則符合下列條件：</span><span class="sxs-lookup"><span data-stu-id="c228e-231">This succeeds only if the following conditions are met:</span></span>  
  
-   <span data-ttu-id="c228e-232"><xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>已指定，且其長度為等於或大於產生的參數名稱。</span><span class="sxs-lookup"><span data-stu-id="c228e-232">The <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength> has been specified, and its length is equal to or greater than the generated parameter name.</span></span>  
  
-   <span data-ttu-id="c228e-233">產生的參數名稱符合指定準則<xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>規則運算式。</span><span class="sxs-lookup"><span data-stu-id="c228e-233">The generated parameter name meets the criteria specified in the <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern> regular expression.</span></span>  
  
-   <span data-ttu-id="c228e-234">A<xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>指定。</span><span class="sxs-lookup"><span data-stu-id="c228e-234">A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat> is specified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="QuoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c228e-235">在正確資料庫目錄情況下提供不具引號的識別項時，會傳回該識別項具引號的正確格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-235">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="c228e-236">這包括正確地逸出識別項中的任何內嵌引號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-236">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public override string QuoteIdentifier (string unquotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string QuoteIdentifier(string unquotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function QuoteIdentifier (unquotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="c228e-237">原始的不具引號之識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-237">The original unquoted identifier.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c228e-238">在正確資料庫目錄情況下提供不具引號的識別項時，會傳回該識別項具引號的正確格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-238">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="c228e-239">這包括正確地逸出識別項中的任何內嵌引號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-239">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c228e-240">具引號版本的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-240">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="c228e-241">識別項內的內嵌引號已正確逸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-241">Embedded quotes within the identifier are correctly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuoteIdentifier">
      <MemberSignature Language="C#" Value="public string QuoteIdentifier (string unquotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string QuoteIdentifier(string unquotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.QuoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function QuoteIdentifier (unquotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ QuoteIdentifier(System::String ^ unquotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unquotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="unquotedIdentifier">
          <span data-ttu-id="c228e-242">原始的不具引號之識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-242">The original unquoted identifier.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="c228e-243">傳遞連接時，會導致 Managed 包裝函式呼叫 SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR)，從 ODBC 驅動程式取得引號字元。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-243">When a connection is passed, causes the managed wrapper to get the quote character from the ODBC driver, calling SQLGetInfo(SQL_IDENTIFIER_QUOTE_CHAR).</span>
          </span>
          <span data-ttu-id="c228e-244">沒有傳遞連接時，會使用 <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> 和 <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" /> 中的值為字串加上引號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-244">When no connection is passed, the string is quoted using values from <see cref="P:System.Data.Common.DbCommandBuilder.QuotePrefix" /> and <see cref="P:System.Data.Common.DbCommandBuilder.QuoteSuffix" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c228e-245">在正確資料庫目錄情況下提供不具引號的識別項時，會傳回該識別項具引號的正確格式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-245">Given an unquoted identifier in the correct catalog case, returns the correct quoted form of that identifier.</span>
          </span>
          <span data-ttu-id="c228e-246">這包括正確地逸出識別項中的任何內嵌引號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-246">This includes correctly escaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c228e-247">具引號版本的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-247">The quoted version of the identifier.</span>
          </span>
          <span data-ttu-id="c228e-248">識別項內的內嵌引號已正確逸出。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-248">Embedded quotes within the identifier are correctly escaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRowUpdatingHandler">
      <MemberSignature Language="C#" Value="protected override void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetRowUpdatingHandler(class System.Data.Common.DbDataAdapter adapter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetRowUpdatingHandler (adapter As DbDataAdapter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetRowUpdatingHandler(System::Data::Common::DbDataAdapter ^ adapter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="adapter" Type="System.Data.Common.DbDataAdapter" />
      </Parameters>
      <Docs>
        <param name="adapter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="UnquoteIdentifier">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c228e-249">提供引號識別項 (Quoted Identifier) 時，會傳回該識別項不具引號的正確格式，包括正確將任何內嵌引號包含在此識別項中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-249">Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public override string UnquoteIdentifier (string quotedIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string UnquoteIdentifier(string quotedIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnquoteIdentifier (quotedIdentifier As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="c228e-250">將移除其內嵌引號的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-250">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c228e-251">提供引號識別項 (Quoted Identifier) 時，會傳回該識別項不具引號的正確格式，包括正確將任何內嵌引號包含在此識別項中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-251">Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c228e-252">不具引號的識別項，會正確包含內嵌的引號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-252">The unquoted identifier, with embedded quotes correctly unescaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnquoteIdentifier">
      <MemberSignature Language="C#" Value="public string UnquoteIdentifier (string quotedIdentifier, System.Data.Odbc.OdbcConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnquoteIdentifier(string quotedIdentifier, class System.Data.Odbc.OdbcConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcCommandBuilder.UnquoteIdentifier(System.String,System.Data.Odbc.OdbcConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnquoteIdentifier (quotedIdentifier As String, connection As OdbcConnection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnquoteIdentifier(System::String ^ quotedIdentifier, System::Data::Odbc::OdbcConnection ^ connection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quotedIdentifier" Type="System.String" />
        <Parameter Name="connection" Type="System.Data.Odbc.OdbcConnection" />
      </Parameters>
      <Docs>
        <param name="quotedIdentifier">
          <span data-ttu-id="c228e-253">將移除其內嵌引號的識別項。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-253">The identifier that will have its embedded quotes removed.</span>
          </span>
        </param>
        <param name="connection">
          <span data-ttu-id="c228e-254">
            <see cref="T:System.Data.Odbc.OdbcConnection" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-254">The <see cref="T:System.Data.Odbc.OdbcConnection" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c228e-255">提供引號識別項 (Quoted Identifier) 時，會傳回該識別項不具引號的正確格式，包括正確將任何內嵌引號包含在此識別項中。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-255">Given a quoted identifier, returns the correct unquoted form of that identifier, including correctly unescaping any embedded quotes in the identifier.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c228e-256">不具引號的識別項，會正確包含內嵌的引號。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c228e-256">The unquoted identifier, with embedded quotes correctly unescaped.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>