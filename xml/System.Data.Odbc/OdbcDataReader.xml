<Type Name="OdbcDataReader" FullName="System.Data.Odbc.OdbcDataReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a94c59f16aba859222ad25fc59edd45e97d5338" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55365059" /></Metadata><TypeSignature Language="C#" Value="public sealed class OdbcDataReader : System.Data.Common.DbDataReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcDataReader extends System.Data.Common.DbDataReader" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcDataReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcDataReader&#xA;Inherits DbDataReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcDataReader sealed : System::Data::Common::DbDataReader" />
  <TypeSignature Language="F#" Value="type OdbcDataReader = class&#xA;    inherit DbDataReader" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbDataReader</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-1.1">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces></Interfaces>
  <Docs>
    <summary><span data-ttu-id="65ac8-101">提供自資料來源讀取順向資料流的資料列的方法。</span><span class="sxs-lookup"><span data-stu-id="65ac8-101">Provides a way of reading a forward-only stream of data rows from a data source.</span></span> <span data-ttu-id="65ac8-102">這個類別無法被繼承。</span><span class="sxs-lookup"><span data-stu-id="65ac8-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-103">若要建立<xref:System.Data.Odbc.OdbcDataReader>，您必須呼叫<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>方法<xref:System.Data.Odbc.OdbcCommand>物件，而不是直接使用建構函式。</span><span class="sxs-lookup"><span data-stu-id="65ac8-103">To create an <xref:System.Data.Odbc.OdbcDataReader>, you must call the <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> method of the <xref:System.Data.Odbc.OdbcCommand> object, instead of directly using a constructor.</span></span>  
  
 <span data-ttu-id="65ac8-104">雖然<xref:System.Data.Odbc.OdbcDataReader>正在使用中，相關聯<xref:System.Data.Odbc.OdbcConnection>忙於處理<xref:System.Data.Odbc.OdbcDataReader>，並可對任何其他作業<xref:System.Data.Odbc.OdbcConnection>以外關閉它。</span><span class="sxs-lookup"><span data-stu-id="65ac8-104">While the <xref:System.Data.Odbc.OdbcDataReader> is being used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving the <xref:System.Data.Odbc.OdbcDataReader>, and no other operations can be performed on the <xref:System.Data.Odbc.OdbcConnection> other than closing it.</span></span> <span data-ttu-id="65ac8-105">此情況下，直到<xref:System.Data.Odbc.OdbcDataReader.Close%2A>方法的<xref:System.Data.Odbc.OdbcDataReader>呼叫。</span><span class="sxs-lookup"><span data-stu-id="65ac8-105">This is the case until the <xref:System.Data.Odbc.OdbcDataReader.Close%2A> method of the <xref:System.Data.Odbc.OdbcDataReader> is called.</span></span> <span data-ttu-id="65ac8-106">比方說，您無法擷取輸出參數，直到您呼叫之後<xref:System.Data.Odbc.OdbcDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-106">For example, you cannot retrieve output parameters until after you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</span></span>  
  
 <span data-ttu-id="65ac8-107">結果集，另一個處理序或執行緒正在讀取資料時所做的變更可能會顯示給使用者，是<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-107">Changes made to a result set by another process or thread while data is being read may be visible to the user of the <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="65ac8-108">不過，精確的行為是驅動程式和相依的時機。</span><span class="sxs-lookup"><span data-stu-id="65ac8-108">However, the precise behavior is both driver and timing dependent.</span></span>  
  
 <span data-ttu-id="65ac8-109"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> 並<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>是您可以呼叫之後的唯一屬性<xref:System.Data.Odbc.OdbcDataReader>已關閉。</span><span class="sxs-lookup"><span data-stu-id="65ac8-109"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span> <span data-ttu-id="65ac8-110">有時候，您必須呼叫<xref:System.Data.Odbc.OdbcDataReader.Close%2A>才能呼叫<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-110">Sometimes, you must call <xref:System.Data.Odbc.OdbcDataReader.Close%2A> before you can call <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65ac8-111">下列範例會建立<xref:System.Data.Odbc.OdbcConnection>，則<xref:System.Data.Odbc.OdbcCommand>，和<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-111">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="65ac8-112">此範例會讀取資料，並將它寫出到主控台。</span><span class="sxs-lookup"><span data-stu-id="65ac8-112">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="65ac8-113">最後，範例會關閉<xref:System.Data.Odbc.OdbcDataReader>，然後<xref:System.Data.Odbc.OdbcConnection>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-113">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataReader#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-114">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-114">DataAdapters and DataReaders</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="odbcDataReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65ac8-115">關閉 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="65ac8-115">Closes the <see cref="T:System.Data.Odbc.OdbcDataReader" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-116">您必須明確呼叫<xref:System.Data.Odbc.OdbcDataReader.Close%2A>方法，當您完成使用<xref:System.Data.Odbc.OdbcDataReader>相關聯<xref:System.Data.Odbc.OdbcConnection>用於其他用途。</span><span class="sxs-lookup"><span data-stu-id="65ac8-116">You must explicitly call the <xref:System.Data.Odbc.OdbcDataReader.Close%2A> method when you are finished using the <xref:System.Data.Odbc.OdbcDataReader> to use the associated <xref:System.Data.Odbc.OdbcConnection> for any other purpose.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="65ac8-117">請勿呼叫`Close`或是`Dispose`連線、 DataReader 或在任何其他 managed 的物件上`Finalize`您類別的方法。</span><span class="sxs-lookup"><span data-stu-id="65ac8-117">Do not call `Close` or `Dispose` on a Connection, a DataReader, or any other managed object in the `Finalize` method of your class.</span></span> <span data-ttu-id="65ac8-118">在完成項中，您應該僅釋放類別直接擁有的 unmanaged 的資源。</span><span class="sxs-lookup"><span data-stu-id="65ac8-118">In a finalizer, you should only release unmanaged resources that your class owns directly.</span></span> <span data-ttu-id="65ac8-119">如果類別未擁有任何 Unmanaged 資源，請不要在類別定義中包含 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="65ac8-119">If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition.</span></span> <span data-ttu-id="65ac8-120">如需詳細資訊，請參閱 <<c0> [ 回收](~/docs/standard/garbage-collection/index.md)。</span><span class="sxs-lookup"><span data-stu-id="65ac8-120">For more information, see [Garbage Collection](~/docs/standard/garbage-collection/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65ac8-121">下列範例會建立<xref:System.Data.Odbc.OdbcConnection>，則<xref:System.Data.Odbc.OdbcCommand>，和<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-121">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="65ac8-122">此範例會讀取資料，並將它寫出到主控台。</span><span class="sxs-lookup"><span data-stu-id="65ac8-122">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="65ac8-123">最後，範例會關閉<xref:System.Data.Odbc.OdbcDataReader>，然後<xref:System.Data.Odbc.OdbcConnection>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-123">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-124">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-124">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public override int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Depth" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Data.Odbc.OdbcDataReader.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65ac8-125">取得值，表示目前資料列的巢狀深度。</span><span class="sxs-lookup"><span data-stu-id="65ac8-125">Gets a value that indicates the depth of nesting for the current row.</span></span></summary>
        <value><span data-ttu-id="65ac8-126">目前資料列的巢狀深度。</span><span class="sxs-lookup"><span data-stu-id="65ac8-126">The depth of nesting for the current row.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-127">最外層的資料表深度為零。</span><span class="sxs-lookup"><span data-stu-id="65ac8-127">The outermost table has a depth of zero.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-128">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-128">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="odbcDataReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldCount">
      <MemberSignature Language="C#" Value="public override int FieldCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FieldCount" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.FieldCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FieldCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FieldCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldCount : int" Usage="System.Data.Odbc.OdbcDataReader.FieldCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65ac8-129">取得目前資料列中的資料行數目。</span><span class="sxs-lookup"><span data-stu-id="65ac8-129">Gets the number of columns in the current row.</span></span></summary>
        <value><span data-ttu-id="65ac8-130">當未置於有效的資料錄集中時，則為 0，否則為目前資料錄中的資料行數目。</span><span class="sxs-lookup"><span data-stu-id="65ac8-130">When not positioned in a valid record set, 0; otherwise the number of columns in the current record.</span></span> <span data-ttu-id="65ac8-131">預設值為 -1。</span><span class="sxs-lookup"><span data-stu-id="65ac8-131">The default is -1.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-132">包含隱藏欄位。</span><span class="sxs-lookup"><span data-stu-id="65ac8-132">Includes hidden fields.</span></span> <span data-ttu-id="65ac8-133">使用 <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> 以排除隱藏欄位。</span><span class="sxs-lookup"><span data-stu-id="65ac8-133">Use <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A> to exclude hidden fields.</span></span>  
  
 <span data-ttu-id="65ac8-134">在您執行的查詢，不會傳回資料列之後<xref:System.Data.Odbc.OdbcDataReader.FieldCount%2A>會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="65ac8-134">After you execute a query that does not return rows, <xref:System.Data.Odbc.OdbcDataReader.FieldCount%2A> returns 0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="65ac8-135">沒有對資料來源的目前連接。</span><span class="sxs-lookup"><span data-stu-id="65ac8-135">There is no current connection to a data source.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-136">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-136">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~OdbcDataReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!OdbcDataReader ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="odbcDataReader.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoolean">
      <MemberSignature Language="C#" Value="public override bool GetBoolean (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetBoolean(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBoolean (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetBoolean(int i);" />
      <MemberSignature Language="F#" Value="override this.GetBoolean : int -&gt; bool" Usage="odbcDataReader.GetBoolean i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-137">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-137">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-138">取得指定之資料行的值做為布林值 (Boolean)。</span><span class="sxs-lookup"><span data-stu-id="65ac8-138">Gets the value of the specified column as a Boolean.</span></span></summary>
        <returns><span data-ttu-id="65ac8-139">布林值，為資料行的值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-139">A Boolean that is the value of the column.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-140">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-140">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-141">如果不支援的轉換方法呼叫將會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-141">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="65ac8-142">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-142">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-143">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-143">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-144">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-144">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetByte">
      <MemberSignature Language="C#" Value="public override byte GetByte (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8 GetByte(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetByte (i As Integer) As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Byte GetByte(int i);" />
      <MemberSignature Language="F#" Value="override this.GetByte : int -&gt; byte" Usage="odbcDataReader.GetByte i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-145">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-145">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-146">取得指定資料行的值做為位元組。</span><span class="sxs-lookup"><span data-stu-id="65ac8-146">Gets the value of the specified column as a byte.</span></span></summary>
        <returns><span data-ttu-id="65ac8-147">指定資料行的值做為位元組。</span><span class="sxs-lookup"><span data-stu-id="65ac8-147">The value of the specified column as a byte.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-148">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-148">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-149">如果不支援的轉換，則方法呼叫會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-149">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="65ac8-150">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-150">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-151">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-151">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-152">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-152">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetBytes(int32 i, int64 dataIndex, unsigned int8[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (i As Integer, dataIndex As Long, buffer As Byte(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetBytes(int i, long dataIndex, cli::array &lt;System::Byte&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int * int64 * byte[] * int * int -&gt; int64" Usage="odbcDataReader.GetBytes (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-153">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-153">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="65ac8-154">欄位內讀取作業開始之處的索引。</span><span class="sxs-lookup"><span data-stu-id="65ac8-154">The index within the field where the read operation is to start.</span></span></param>
        <param name="buffer"><span data-ttu-id="65ac8-155">要將位元組資料流讀取到其中的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="65ac8-155">The buffer into which to read the stream of bytes.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="65ac8-156"><paramref name="buffer" /> 內寫入作業開始之處的索引。</span><span class="sxs-lookup"><span data-stu-id="65ac8-156">The index within the <paramref name="buffer" /> where the write operation is to start.</span></span></param>
        <param name="length"><span data-ttu-id="65ac8-157">要讀取的位元組數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-157">The number of bytes to read.</span></span></param>
        <summary><span data-ttu-id="65ac8-158">從指定的資料行位移將位元組資料流做為陣列讀入緩衝區，開始於特定的緩衝區位移。</span><span class="sxs-lookup"><span data-stu-id="65ac8-158">Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the particular buffer offset.</span></span></summary>
        <returns><span data-ttu-id="65ac8-159">讀取的實際位元組數目。</span><span class="sxs-lookup"><span data-stu-id="65ac8-159">The actual number of bytes read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-160"><xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> 在欄位中傳回可用位元組的數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-160"><xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> returns the number of available bytes in the field.</span></span> <span data-ttu-id="65ac8-161">大多數情況下這是欄位的實際長度。</span><span class="sxs-lookup"><span data-stu-id="65ac8-161">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="65ac8-162">不過，傳回的數字可能小於欄位的長度，則為 true 如果<xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A>已經使用來取得位元組的欄位。</span><span class="sxs-lookup"><span data-stu-id="65ac8-162">However, the number returned may be less than the true length of the field if <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> has already been used to obtain bytes from the field.</span></span> <span data-ttu-id="65ac8-163">這種情況下，比方說，如果可能<xref:System.Data.Odbc.OdbcDataReader>讀入緩衝區的大型資料結構。</span><span class="sxs-lookup"><span data-stu-id="65ac8-163">This may be the case, for example, if the <xref:System.Data.Odbc.OdbcDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="65ac8-164">如需詳細資訊，請參閱 <<c0> `SequentialAccess` 設定<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-164">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="65ac8-165">如果您傳遞的 null 值的緩衝區<xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A>傳回欄位的長度，以位元組為單位。</span><span class="sxs-lookup"><span data-stu-id="65ac8-165">If you pass a buffer that is a null value, <xref:System.Data.Odbc.OdbcDataReader.GetBytes%2A> returns the length of the field in bytes.</span></span>  
  
 <span data-ttu-id="65ac8-166">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-166">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-167">如果不支援的轉換方法呼叫將會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-167">If the conversion is not supported then the method call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65ac8-168">如果，則擲回任何例外狀況的值`bufferIndex`超出陣列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-168">No exception will be thrown if the value of `bufferIndex` is outside the array.</span></span> <span data-ttu-id="65ac8-169">會讀取任何資料，則方法會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="65ac8-169">No data will be read and the method will return 0.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-170">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-170">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChar">
      <MemberSignature Language="C#" Value="public override char GetChar (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance char GetChar(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChar (i As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override char GetChar(int i);" />
      <MemberSignature Language="F#" Value="override this.GetChar : int -&gt; char" Usage="odbcDataReader.GetChar i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-171">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-171">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-172">取得指定資料行的值做為字元。</span><span class="sxs-lookup"><span data-stu-id="65ac8-172">Gets the value of the specified column as a character.</span></span></summary>
        <returns><span data-ttu-id="65ac8-173">做為字元的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-173">The value of the specified column as a character.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-174">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-174">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-175">如果不支援的轉換，則方法呼叫會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-175">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="65ac8-176">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-176">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-177">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-177">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-178">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-178">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetChars(int32 i, int64 dataIndex, char[] buffer, int32 bufferIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetChars (i As Integer, dataIndex As Long, buffer As Char(), bufferIndex As Integer, length As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetChars(int i, long dataIndex, cli::array &lt;char&gt; ^ buffer, int bufferIndex, int length);" />
      <MemberSignature Language="F#" Value="override this.GetChars : int * int64 * char[] * int * int -&gt; int64" Usage="odbcDataReader.GetChars (i, dataIndex, buffer, bufferIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
        <Parameter Name="dataIndex" Type="System.Int64" />
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="bufferIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-179">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-179">The zero-based column ordinal.</span></span></param>
        <param name="dataIndex"><span data-ttu-id="65ac8-180">資料列內讀取作業開始之處的索引。</span><span class="sxs-lookup"><span data-stu-id="65ac8-180">The index within the row where the read operation is to start.</span></span></param>
        <param name="buffer"><span data-ttu-id="65ac8-181">要複製資料的目的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="65ac8-181">The buffer into which to copy data.</span></span></param>
        <param name="bufferIndex"><span data-ttu-id="65ac8-182"><paramref name="buffer" /> 內寫入作業開始之處的索引。</span><span class="sxs-lookup"><span data-stu-id="65ac8-182">The index within the <paramref name="buffer" /> where the write operation is to start.</span></span></param>
        <param name="length"><span data-ttu-id="65ac8-183">要讀取的字元數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-183">The number of characters to read.</span></span></param>
        <summary><span data-ttu-id="65ac8-184">從指定的資料行位移將字元資料流做為陣列讀入緩衝區，開始於特定的緩衝區位移。</span><span class="sxs-lookup"><span data-stu-id="65ac8-184">Reads a stream of characters from the specified column offset into the buffer as an array, starting at the particular buffer offset.</span></span></summary>
        <returns><span data-ttu-id="65ac8-185">讀取的實際字元數目。</span><span class="sxs-lookup"><span data-stu-id="65ac8-185">The actual number of characters read.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-186"><xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> 在欄位中傳回可用字元的數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-186"><xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> returns the number of available characters in the field.</span></span> <span data-ttu-id="65ac8-187">大多數情況下這是欄位的實際長度。</span><span class="sxs-lookup"><span data-stu-id="65ac8-187">Most of the time this is the exact length of the field.</span></span> <span data-ttu-id="65ac8-188">不過，傳回的數字可能小於欄位的長度，則為 true 如果<xref:System.Data.Odbc.OdbcDataReader.GetChars%2A>已經使用從欄位取得字元。</span><span class="sxs-lookup"><span data-stu-id="65ac8-188">However, the number returned may be less than the true length of the field if <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> has already been used to obtain characters from the field.</span></span> <span data-ttu-id="65ac8-189">這種情況下，比方說，如果可能<xref:System.Data.Odbc.OdbcDataReader>讀入緩衝區的大型資料結構。</span><span class="sxs-lookup"><span data-stu-id="65ac8-189">This may be the case, for example, if the <xref:System.Data.Odbc.OdbcDataReader> is reading a large data structure into a buffer.</span></span> <span data-ttu-id="65ac8-190">如需詳細資訊，請參閱 <<c0> `SequentialAccess` 設定<xref:System.Data.CommandBehavior>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-190">For more information, see the `SequentialAccess` setting for <xref:System.Data.CommandBehavior>.</span></span>  
  
 <span data-ttu-id="65ac8-191">如果您傳遞的 null 值的緩衝區<xref:System.Data.Odbc.OdbcDataReader.GetChars%2A>傳回欄位的長度，以字元為單位。</span><span class="sxs-lookup"><span data-stu-id="65ac8-191">If you pass a buffer that is a null value, <xref:System.Data.Odbc.OdbcDataReader.GetChars%2A> returns the length of the field in characters.</span></span>  
  
 <span data-ttu-id="65ac8-192">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-192">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-193">如果不支援的轉換方法呼叫將會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-193">If the conversion is not supported then the method call will fail.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65ac8-194">如果，則擲回任何例外狀況的值`bufferIndex`超出陣列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-194">No exception will be thrown if the value of `bufferIndex` is outside the array.</span></span> <span data-ttu-id="65ac8-195">會讀取任何資料，則方法會傳回 0。</span><span class="sxs-lookup"><span data-stu-id="65ac8-195">No data will be read and the method will return 0.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-196">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-196">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader GetData (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader GetData(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetData(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (i As Integer) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Data::IDataReader ^ GetData(int i);" />
      <MemberSignature Language="F#" Value="abstract member GetData : int -&gt; System.Data.IDataReader&#xA;override this.GetData : int -&gt; System.Data.IDataReader" Usage="odbcDataReader.GetData i" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Data.IDataRecord.GetData(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDataTypeName">
      <MemberSignature Language="C#" Value="public override string GetDataTypeName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetDataTypeName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDataTypeName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetDataTypeName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDataTypeName : int -&gt; string" Usage="odbcDataReader.GetDataTypeName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-197">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-197">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-198">取得來源資料型別的名稱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-198">Gets the name of the source data type.</span></span></summary>
        <returns><span data-ttu-id="65ac8-199">來源資料型別的名稱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-199">The name of the source data type.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-200">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-200">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDate">
      <MemberSignature Language="C#" Value="public DateTime GetDate (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetDate(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDate (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetDate(int i);" />
      <MemberSignature Language="F#" Value="member this.GetDate : int -&gt; DateTime" Usage="odbcDataReader.GetDate i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-201">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-201">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-202">取得指定之資料行的值做為 <see cref="T:System.DateTime" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="65ac8-202">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="65ac8-203">做為 <see cref="T:System.DateTime" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-203">The value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-204">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-204">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDateTime">
      <MemberSignature Language="C#" Value="public override DateTime GetDateTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.DateTime GetDateTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDateTime (i As Integer) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override DateTime GetDateTime(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDateTime : int -&gt; DateTime" Usage="odbcDataReader.GetDateTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-205">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-205">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-206">取得指定之資料行的值做為 <see cref="T:System.DateTime" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="65ac8-206">Gets the value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></summary>
        <returns><span data-ttu-id="65ac8-207">做為 <see cref="T:System.DateTime" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-207">The value of the specified column as a <see cref="T:System.DateTime" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-208">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-208">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-209">如果不支援的轉換方法呼叫將會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-209">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="65ac8-210">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-210">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-211">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-211">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-212">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-212">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDecimal">
      <MemberSignature Language="C#" Value="public override decimal GetDecimal (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Decimal GetDecimal(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDecimal (i As Integer) As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Decimal GetDecimal(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDecimal : int -&gt; decimal" Usage="odbcDataReader.GetDecimal i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-213">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-213">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-214">取得指定之資料行的值做為 <see cref="T:System.Decimal" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="65ac8-214">Gets the value of the specified column as a <see cref="T:System.Decimal" /> object.</span></span></summary>
        <returns><span data-ttu-id="65ac8-215">做為 <see cref="T:System.Decimal" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-215">The value of the specified column as a <see cref="T:System.Decimal" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-216">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-216">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-217">如果不支援的轉換方法呼叫將會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-217">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="65ac8-218">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-218">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 <span data-ttu-id="65ac8-219"><xref:System.Data.Odbc.OdbcDataReader.GetDecimal%2A> 具有最大有效位數為 28。</span><span class="sxs-lookup"><span data-stu-id="65ac8-219"><xref:System.Data.Odbc.OdbcDataReader.GetDecimal%2A> has a maximum precision of 28.</span></span> <span data-ttu-id="65ac8-220">嘗試擷取具有較大的有效位數的十進位資料將會導致例外狀況。</span><span class="sxs-lookup"><span data-stu-id="65ac8-220">Attempting to retrieve decimal data with a larger precision will cause an exception.</span></span> <span data-ttu-id="65ac8-221">其中一個解決方案是將查詢變更為十進位類型轉換成其中一個較小的資料類型，或將轉換成字串或二進位檔。</span><span class="sxs-lookup"><span data-stu-id="65ac8-221">One solution would be to change the query to cast the decimal type to either a smaller datatype or convert to string or binary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-222">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-222">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-223">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-223">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetDouble">
      <MemberSignature Language="C#" Value="public override double GetDouble (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float64 GetDouble(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDouble (i As Integer) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override double GetDouble(int i);" />
      <MemberSignature Language="F#" Value="override this.GetDouble : int -&gt; double" Usage="odbcDataReader.GetDouble i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-224">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-224">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-225">取得指定之資料行的值做為雙精度浮點數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-225">Gets the value of the specified column as a double-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="65ac8-226">傳回指定之資料行的值做為雙精度浮點數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-226">The value of the specified column as a double-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-227">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-227">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-228">如果不支援的轉換，則方法呼叫會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-228">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="65ac8-229">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-229">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-230">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-230">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-231">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-231">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public override System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="odbcDataReader.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65ac8-232">傳回 <see cref="T:System.Collections.IEnumerator" />，可用來逐一查看資料讀取器中的資料列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-232">Returns an <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></summary>
        <returns><span data-ttu-id="65ac8-233"><see cref="T:System.Collections.IEnumerator" />，可用來逐一查看資料讀取器中的資料列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-233">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the rows in the data reader.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-234">雖然您可以使用這個方法來擷取明確的列舉值，以語言支援`foreach`建構，它是直接以逐一查看資料讀取器中的資料列中使用迴圈建構的工作變得更容易。</span><span class="sxs-lookup"><span data-stu-id="65ac8-234">Although you can use this method to retrieve an explicit enumerator, in languages that support a `foreach` construct, it is simpler to use the looping construct directly in order to iterate through the rows in the data reader.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-235">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-235">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFieldType">
      <MemberSignature Language="C#" Value="public override Type GetFieldType (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetFieldType(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFieldType (i As Integer) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetFieldType(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFieldType : int -&gt; Type" Usage="odbcDataReader.GetFieldType i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-236">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-236">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-237">取得 <see cref="T:System.Type" />，即是物件的資料型別。</span><span class="sxs-lookup"><span data-stu-id="65ac8-237">Gets the <see cref="T:System.Type" /> that is the data type of the object.</span></span></summary>
        <returns><span data-ttu-id="65ac8-238"><see cref="T:System.Type" />，此為物件的資料類型。</span><span class="sxs-lookup"><span data-stu-id="65ac8-238">The <see cref="T:System.Type" /> that is the data type of the object.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-239">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-239">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetFloat">
      <MemberSignature Language="C#" Value="public override float GetFloat (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance float32 GetFloat(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFloat (i As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override float GetFloat(int i);" />
      <MemberSignature Language="F#" Value="override this.GetFloat : int -&gt; single" Usage="odbcDataReader.GetFloat i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-240">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-240">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-241">取得指定資料行的值做為單精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-241">Gets the value of the specified column as a single-precision floating-point number.</span></span></summary>
        <returns><span data-ttu-id="65ac8-242">傳回指定資料行的值做為單精確度浮點數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-242">The value of the specified column as a single-precision floating-point number.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-243">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-243">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-244">如果不支援的轉換方法呼叫將會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-244">If the conversion is not supported then the method call will fail.</span></span>  
  
 <span data-ttu-id="65ac8-245">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-245">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-246">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-246">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-247">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-247">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetGuid">
      <MemberSignature Language="C#" Value="public override Guid GetGuid (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Guid GetGuid(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetGuid (i As Integer) As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Guid GetGuid(int i);" />
      <MemberSignature Language="F#" Value="override this.GetGuid : int -&gt; Guid" Usage="odbcDataReader.GetGuid i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-248">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-248">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-249">取得指定資料行的值做為全域唯一識別項 (GUID)。</span><span class="sxs-lookup"><span data-stu-id="65ac8-249">Gets the value of the specified column as a globally unique identifier (GUID).</span></span></summary>
        <returns><span data-ttu-id="65ac8-250">做為 GUID 的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-250">The value of the specified column as a GUID.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-251">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-251">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-252">如果不支援的轉換，則方法呼叫會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-252">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="65ac8-253">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-253">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-254">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-254">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-255">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-255">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt16">
      <MemberSignature Language="C#" Value="public override short GetInt16 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int16 GetInt16(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt16 (i As Integer) As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override short GetInt16(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt16 : int -&gt; int16" Usage="odbcDataReader.GetInt16 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-256">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-256">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-257">取得指定資料行的值做為 16 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-257">Gets the value of the specified column as a 16-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="65ac8-258">做為 16 位元帶正負號整數的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-258">The value of the specified column as a 16-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-259">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-259">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-260">如果不支援的轉換，則方法呼叫會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-260">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="65ac8-261">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-261">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-262">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-262">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-263">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-263">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt32">
      <MemberSignature Language="C#" Value="public override int GetInt32 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetInt32(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt32 (i As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetInt32(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt32 : int -&gt; int" Usage="odbcDataReader.GetInt32 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-264">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-264">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-265">取得指定資料行的值作為 32 位元帶正負號的整數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-265">Gets the value of the specified column as a 32-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="65ac8-266">作為 32 位元帶正負號整數的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-266">The value of the specified column as a 32-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-267">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-267">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-268">如果不支援的轉換，則方法呼叫會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-268">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="65ac8-269">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-269">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-270">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-270">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-271">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-271">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetInt64">
      <MemberSignature Language="C#" Value="public override long GetInt64 (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int64 GetInt64(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetInt64 (i As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override long GetInt64(int i);" />
      <MemberSignature Language="F#" Value="override this.GetInt64 : int -&gt; int64" Usage="odbcDataReader.GetInt64 i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-272">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-272">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-273">取得指定資料行的值做為 64 位元帶正負號的整數 (Signed Integer)。</span><span class="sxs-lookup"><span data-stu-id="65ac8-273">Gets the value of the specified column as a 64-bit signed integer.</span></span></summary>
        <returns><span data-ttu-id="65ac8-274">作為 64 位元帶正負號整數的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-274">The value of the specified column as a 64-bit signed integer.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-275">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-275">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-276">如果不支援的轉換，則方法呼叫會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-276">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="65ac8-277">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-277">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-278">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-278">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-279">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-279">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override string GetName (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetName(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetName(int i);" />
      <MemberSignature Language="F#" Value="override this.GetName : int -&gt; string" Usage="odbcDataReader.GetName i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-280">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-280">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-281">取得指定資料行的名稱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-281">Gets the name of the specified column.</span></span></summary>
        <returns><span data-ttu-id="65ac8-282">指定資料行名稱的字串。</span><span class="sxs-lookup"><span data-stu-id="65ac8-282">A string that is the name of the specified column.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)" />
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-283">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-283">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetOrdinal">
      <MemberSignature Language="C#" Value="public override int GetOrdinal (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetOrdinal(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetOrdinal (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetOrdinal(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.GetOrdinal : string -&gt; int" Usage="odbcDataReader.GetOrdinal value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="65ac8-284">資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-284">The name of the column.</span></span></param>
        <summary><span data-ttu-id="65ac8-285">提供資料行的名稱，取得資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-285">Gets the column ordinal, given the name of the column.</span></span></summary>
        <returns><span data-ttu-id="65ac8-286">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-286">The zero-based column ordinal.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-287"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 第一次執行區分大小寫的查閱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-287"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> performs a case-sensitive lookup first.</span></span> <span data-ttu-id="65ac8-288">如果失敗，會使用第二個的不區分大小寫搜尋。</span><span class="sxs-lookup"><span data-stu-id="65ac8-288">If it fails, a second case-insensitive search is made.</span></span> <span data-ttu-id="65ac8-289">方法會擲回`IndexOutOfRange`例外狀況，如果找不到的以零為起始的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-289">The method throws an `IndexOutOfRange` exception if the zero-based column ordinal is not found.</span></span>  
  
 <span data-ttu-id="65ac8-290"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 假名寬度是不區分大小寫的。</span><span class="sxs-lookup"><span data-stu-id="65ac8-290"><xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> is kana-width insensitive.</span></span>  
  
 <span data-ttu-id="65ac8-291">因為根據序數進行查閱比具名查閱更有效率，很效率不佳，呼叫<xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A>迴圈內。</span><span class="sxs-lookup"><span data-stu-id="65ac8-291">Because ordinal-based lookups are more efficient than named lookups, it is inefficient to call <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> within a loop.</span></span> <span data-ttu-id="65ac8-292">請改為呼叫<xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A>一次，然後將指派給整數變數的結果，請使用在迴圈內。</span><span class="sxs-lookup"><span data-stu-id="65ac8-292">Instead, call <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> one time and then assign the results to an integer variable for use within the loop.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65ac8-293">下列範例示範如何使用 <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="65ac8-293">The following example demonstrates how to use the <xref:System.Data.Odbc.OdbcDataReader.GetOrdinal%2A> method.</span></span>  
  
 [!code-csharp[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcDataReader.GetOrdinal/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.Odbc.OdbcDataReader.GetName(System.Int32)" />
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-294">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-294">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSchemaTable">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchemaTable ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchemaTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetSchemaTable" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchemaTable () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchemaTable();" />
      <MemberSignature Language="F#" Value="override this.GetSchemaTable : unit -&gt; System.Data.DataTable" Usage="odbcDataReader.GetSchemaTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65ac8-295">傳回 <see cref="T:System.Data.DataTable" />，以描述 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 的資料行中繼資料。</span><span class="sxs-lookup"><span data-stu-id="65ac8-295">Returns a <see cref="T:System.Data.DataTable" /> that describes the column metadata of the <see cref="T:System.Data.Odbc.OdbcDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="65ac8-296">描述資料行中繼資料的 <see cref="T:System.Data.DataTable" />。</span><span class="sxs-lookup"><span data-stu-id="65ac8-296">A <see cref="T:System.Data.DataTable" /> that describes the column metadata.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-297"><xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A>方法會傳回有關每個資料行的中繼資料，以下列順序：</span><span class="sxs-lookup"><span data-stu-id="65ac8-297">The <xref:System.Data.Odbc.OdbcDataReader.GetSchemaTable%2A> method returns metadata about each column in the following order:</span></span>  
  
|<span data-ttu-id="65ac8-298">DataReader 資料行</span><span class="sxs-lookup"><span data-stu-id="65ac8-298">DataReader column</span></span>|<span data-ttu-id="65ac8-299">描述</span><span class="sxs-lookup"><span data-stu-id="65ac8-299">Description</span></span>|  
|-----------------------|-----------------|  
|<span data-ttu-id="65ac8-300">ColumnName</span><span class="sxs-lookup"><span data-stu-id="65ac8-300">ColumnName</span></span>|<span data-ttu-id="65ac8-301">資料行的名稱這可能不是唯一的。</span><span class="sxs-lookup"><span data-stu-id="65ac8-301">The name of the column; this might not be unique.</span></span> <span data-ttu-id="65ac8-302">如果無法判別資料行名稱，則會傳回 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-302">If the column name cannot be determined, a null value is returned.</span></span> <span data-ttu-id="65ac8-303">這個名稱永遠會反映最新的目前檢視] 或 [命令文字中的資料行命名。</span><span class="sxs-lookup"><span data-stu-id="65ac8-303">This name always reflects the most recent naming of the column in the current view or command text.</span></span>|  
|<span data-ttu-id="65ac8-304">ColumnOrdinal</span><span class="sxs-lookup"><span data-stu-id="65ac8-304">ColumnOrdinal</span></span>|<span data-ttu-id="65ac8-305">資料行以零為起始的序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-305">The zero-based ordinal of the column.</span></span> <span data-ttu-id="65ac8-306">此資料行不能包含 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-306">This column cannot contain a null value.</span></span>|  
|<span data-ttu-id="65ac8-307">ColumnSize</span><span class="sxs-lookup"><span data-stu-id="65ac8-307">ColumnSize</span></span>|<span data-ttu-id="65ac8-308">資料行中值的最大可能長度。</span><span class="sxs-lookup"><span data-stu-id="65ac8-308">The maximum possible length of a value in the column.</span></span> <span data-ttu-id="65ac8-309">使用固定長度資料類型的資料行，這是資料類型的大小。</span><span class="sxs-lookup"><span data-stu-id="65ac8-309">For columns that use a fixed-length data type, this is the size of the data type.</span></span>|  
|<span data-ttu-id="65ac8-310">NumericPrecision</span><span class="sxs-lookup"><span data-stu-id="65ac8-310">NumericPrecision</span></span>|<span data-ttu-id="65ac8-311">如果<xref:System.Data.DbType>是數值資料類型，這是資料行的最大有效位數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-311">If <xref:System.Data.DbType> is a numeric data type, this is the maximum precision of the column.</span></span> <span data-ttu-id="65ac8-312">精確度取決於資料行定義。</span><span class="sxs-lookup"><span data-stu-id="65ac8-312">The precision depends on the definition of the column.</span></span> <span data-ttu-id="65ac8-313">如果<xref:System.Data.DbType>不是數值資料類型，請勿使用此資料行中的資料。</span><span class="sxs-lookup"><span data-stu-id="65ac8-313">If <xref:System.Data.DbType> is not a numeric data type, do not use the data in this column.</span></span> <span data-ttu-id="65ac8-314">如果基礎 ODBC 驅動程式會傳回非數值資料類型的精確度值，這個值會在結構描述資料表。</span><span class="sxs-lookup"><span data-stu-id="65ac8-314">If the underlying ODBC driver returns a precision value for a non-numeric data type, this value is used in the schema table.</span></span>|  
|<span data-ttu-id="65ac8-315">NumericScale</span><span class="sxs-lookup"><span data-stu-id="65ac8-315">NumericScale</span></span>|<span data-ttu-id="65ac8-316">如果<xref:System.Data.DbType>是<xref:System.Data.DbType.Decimal>，小數點右邊的位數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-316">If <xref:System.Data.DbType> is <xref:System.Data.DbType.Decimal>, the number of digits to the right of the decimal point.</span></span> <span data-ttu-id="65ac8-317">否則，這會是 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-317">Otherwise, this is a null value.</span></span> <span data-ttu-id="65ac8-318">如果基礎 ODBC 驅動程式會傳回非數值資料類型的精確度值，這個值會在結構描述資料表。</span><span class="sxs-lookup"><span data-stu-id="65ac8-318">If the underlying ODBC driver returns a precision value for a non-numeric data type, this value is used in the schema table.</span></span>|  
|<span data-ttu-id="65ac8-319">DataType</span><span class="sxs-lookup"><span data-stu-id="65ac8-319">DataType</span></span>|<span data-ttu-id="65ac8-320">對應至 common language runtime 型別<xref:System.Data.DbType>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-320">Maps to the common language runtime type of <xref:System.Data.DbType>.</span></span>|  
|<span data-ttu-id="65ac8-321">ProviderType</span><span class="sxs-lookup"><span data-stu-id="65ac8-321">ProviderType</span></span>|<span data-ttu-id="65ac8-322">基礎的驅動程式類型。</span><span class="sxs-lookup"><span data-stu-id="65ac8-322">The underlying driver type.</span></span>|  
|<span data-ttu-id="65ac8-323">IsLong</span><span class="sxs-lookup"><span data-stu-id="65ac8-323">IsLong</span></span>|<span data-ttu-id="65ac8-324">`true` 如果資料行包含二進位長物件 (BLOB)，就會包含很長的資料。</span><span class="sxs-lookup"><span data-stu-id="65ac8-324">`true` if the column contains a Binary Long Object (BLOB) that contains very long data.</span></span> <span data-ttu-id="65ac8-325">非常長資料的定義是特定驅動程式。</span><span class="sxs-lookup"><span data-stu-id="65ac8-325">The definition of very long data is driver-specific.</span></span>|  
|<span data-ttu-id="65ac8-326">AllowDBNull</span><span class="sxs-lookup"><span data-stu-id="65ac8-326">AllowDBNull</span></span>|<span data-ttu-id="65ac8-327">`true` 如果取用者可以設定為 null 值的資料行，或驅動程式無法判斷取用者是否可以設定為 null 值的資料行。</span><span class="sxs-lookup"><span data-stu-id="65ac8-327">`true` if the consumer can set the column to a null value or if the driver cannot determine whether the consumer can set the column to a null value.</span></span> <span data-ttu-id="65ac8-328">否則為 `false`。</span><span class="sxs-lookup"><span data-stu-id="65ac8-328">Otherwise, `false`.</span></span> <span data-ttu-id="65ac8-329">資料行可能包含 null 值，即使它不能設為 null 的值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-329">A column may contain null values, even if it cannot be set to a null value.</span></span>|  
|<span data-ttu-id="65ac8-330">IsReadOnly</span><span class="sxs-lookup"><span data-stu-id="65ac8-330">IsReadOnly</span></span>|<span data-ttu-id="65ac8-331">`true` 如果無法修改資料行;否則`false`。</span><span class="sxs-lookup"><span data-stu-id="65ac8-331">`true` if the column cannot be modified; otherwise `false`.</span></span>|  
|<span data-ttu-id="65ac8-332">IsRowVersion</span><span class="sxs-lookup"><span data-stu-id="65ac8-332">IsRowVersion</span></span>|<span data-ttu-id="65ac8-333">如果資料行包含永續性資料列識別碼不能寫入，且除了識別資料列沒有有意義值，設定。</span><span class="sxs-lookup"><span data-stu-id="65ac8-333">Set if the column contains a persistent row identifier that cannot be written to, and has no meaningful value except to identity the row.</span></span>|  
|<span data-ttu-id="65ac8-334">IsUnique</span><span class="sxs-lookup"><span data-stu-id="65ac8-334">IsUnique</span></span>|<span data-ttu-id="65ac8-335">`true`：基底資料表中的任何兩個資料列 （BaseTableName 中傳回的資料表） 可以在本專欄中不有相同的值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-335">`true`: No two rows in the base table (the table returned in BaseTableName) can have the same value in this column.</span></span> <span data-ttu-id="65ac8-336">IsUnique 保證`true`如果資料行代表金鑰本身或類型只適用於此資料行的 UNIQUE 條件約束。</span><span class="sxs-lookup"><span data-stu-id="65ac8-336">IsUnique is guaranteed to be `true` if the column represents a key by itself or if there is a constraint of type UNIQUE that applies only to this column.</span></span><br /><br /> <span data-ttu-id="65ac8-337">`false`：資料行可以包含基底資料表中重複的值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-337">`false`: The column can contain duplicate values in the base table.</span></span> <span data-ttu-id="65ac8-338">此資料行的預設值是`false`。</span><span class="sxs-lookup"><span data-stu-id="65ac8-338">The default for this column is `false`.</span></span>|  
|<span data-ttu-id="65ac8-339">IsKey</span><span class="sxs-lookup"><span data-stu-id="65ac8-339">IsKey</span></span>|<span data-ttu-id="65ac8-340">`true`：資料行是一組資料列集中的資料行的其中一個，結合起來，可唯一識別資料列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-340">`true`: The column is one of a set of columns in the rowset that, taken together, uniquely identify the row.</span></span> <span data-ttu-id="65ac8-341">IsKey 具有的資料行集設為`true`必須唯一識別資料列集中的資料列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-341">The set of columns with IsKey set to `true` must uniquely identify a row in the rowset.</span></span> <span data-ttu-id="65ac8-342">沒有這個資料行集是資料行的最少的需求。</span><span class="sxs-lookup"><span data-stu-id="65ac8-342">There is no requirement that this set of columns is a minimal set of columns.</span></span> <span data-ttu-id="65ac8-343">這組資料行可能會產生來自基底資料表主索引鍵、 唯一條件約束或唯一索引。</span><span class="sxs-lookup"><span data-stu-id="65ac8-343">This set of columns may be generated from a base table primary key, a unique constraint, or a unique index.</span></span><br /><br /> <span data-ttu-id="65ac8-344">`false`：資料行不是需要唯一識別資料列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-344">`false`: The column is not required to uniquely identify the row.</span></span>|  
|<span data-ttu-id="65ac8-345">IsAutoIncrement</span><span class="sxs-lookup"><span data-stu-id="65ac8-345">IsAutoIncrement</span></span>|<span data-ttu-id="65ac8-346">`true` 如果資料行將值指派給新的資料列，以固定遞增方式;否則`false`。</span><span class="sxs-lookup"><span data-stu-id="65ac8-346">`true` if the column assigns values to new rows in fixed increments; otherwise `false`.</span></span> <span data-ttu-id="65ac8-347">此資料行的預設值是`false`。</span><span class="sxs-lookup"><span data-stu-id="65ac8-347">The default for this column is `false`.</span></span>|  
|<span data-ttu-id="65ac8-348">BaseSchemaName</span><span class="sxs-lookup"><span data-stu-id="65ac8-348">BaseSchemaName</span></span>|<span data-ttu-id="65ac8-349">包含資料行的資料來源中的結構描述名稱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-349">The name of the schema in the data source that contains the column.</span></span> <span data-ttu-id="65ac8-350">如果無法判斷基底目錄名稱，則為 NULL。</span><span class="sxs-lookup"><span data-stu-id="65ac8-350">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="65ac8-351">此資料行的預設值為 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-351">The default for this column is a null value.</span></span>|  
|<span data-ttu-id="65ac8-352">BaseCatalogName</span><span class="sxs-lookup"><span data-stu-id="65ac8-352">BaseCatalogName</span></span>|<span data-ttu-id="65ac8-353">包含資料行的資料存放區中的類別目錄名稱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-353">The name of the catalog in the data store that contains the column.</span></span> <span data-ttu-id="65ac8-354">如果無法判斷基底目錄名稱，則為 NULL。</span><span class="sxs-lookup"><span data-stu-id="65ac8-354">NULL if the base catalog name cannot be determined.</span></span> <span data-ttu-id="65ac8-355">此資料行的預設值為 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-355">The default for this column is a null value.</span></span>|  
|<span data-ttu-id="65ac8-356">BaseTableName</span><span class="sxs-lookup"><span data-stu-id="65ac8-356">BaseTableName</span></span>|<span data-ttu-id="65ac8-357">資料表或檢視中包含之資料行的資料存放區的名稱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-357">The name of the table or view in the data store that contains the column.</span></span> <span data-ttu-id="65ac8-358">如果無法判斷基底資料表名稱，則為 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-358">A null value if the base table name cannot be determined.</span></span> <span data-ttu-id="65ac8-359">此資料行的預設值為 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-359">The default of this column is a null value.</span></span>|  
|<span data-ttu-id="65ac8-360">BaseColumnName</span><span class="sxs-lookup"><span data-stu-id="65ac8-360">BaseColumnName</span></span>|<span data-ttu-id="65ac8-361">在資料存放區中的資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-361">The name of the column in the data store.</span></span> <span data-ttu-id="65ac8-362">這可能是傳回 [ColumnName] 欄中，如果原先使用別名的資料行名稱不同。</span><span class="sxs-lookup"><span data-stu-id="65ac8-362">This might be different from the column name returned in the ColumnName column if an alias was used.</span></span> <span data-ttu-id="65ac8-363">如果無法判斷基底資料行名稱，或如果資料列集資料行衍生而來但不是完全相同，資料中的資料行存放區，則為 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-363">A null value if the base column name cannot be determined or if the rowset column is derived, but not identical to, a column in the data store.</span></span> <span data-ttu-id="65ac8-364">此資料行的預設值為 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-364">The default for this column is a null value.</span></span>|  
  
 <span data-ttu-id="65ac8-365">在結果集中的每個資料行都會傳回一個資料列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-365">A row is returned for every column in the results set.</span></span>  
  
 <span data-ttu-id="65ac8-366">.NET Framework Data Provider for ODBC 會假設該中繼資料資訊可從 ODBC 驅動程式之後的其中一個**SQLPrepare**， **SQLExecute**，或**SQLExecuteDirect**呼叫的函式。</span><span class="sxs-lookup"><span data-stu-id="65ac8-366">The .NET Framework Data Provider for ODBC assumes that metadata information is available from an ODBC driver after one of **SQLPrepare**, **SQLExecute**, or **SQLExecuteDirect** functions are called.</span></span> <span data-ttu-id="65ac8-367">針對 「 SchemaOnly"命令才能正常運作，行為**SQLPrepare**必須傳回必要的中繼資料資訊。</span><span class="sxs-lookup"><span data-stu-id="65ac8-367">For "SchemaOnly" command behavior to work correctly, **SQLPrepare** must return the required metadata information.</span></span> <span data-ttu-id="65ac8-368">並非所有的 ODBC 驅動程式支援此函式，或傳回中繼資料資訊。</span><span class="sxs-lookup"><span data-stu-id="65ac8-368">Not all ODBC drivers support this function or return metadata information.</span></span> <span data-ttu-id="65ac8-369">在這些情況下，部分或全部 SchemaTable 中的資訊將會遺失。</span><span class="sxs-lookup"><span data-stu-id="65ac8-369">In these cases, part or all of the information in the SchemaTable will be missing.</span></span> <span data-ttu-id="65ac8-370">之後呼叫**SQLPrepare**，此資料提供者會呼叫 ODBC **SQLColAttribute**函式來尋找查詢結果 （例如，Datatypes、 IsUnique，每個資料行的相關中繼資料資訊AllowDBNull，BaseTableName，BaseColumnName)。</span><span class="sxs-lookup"><span data-stu-id="65ac8-370">After calling **SQLPrepare**, The data provider calls the ODBC **SQLColAttribute** function to find the metadata information related to each column in the query results (for example, IsLong, IsUnique, AllowDBNull, BaseTableName, BaseColumnName).</span></span> <span data-ttu-id="65ac8-371">如果基礎驅動程式不會傳回某幾項資訊，不會正確設定 SchemaTable 中的對應值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-371">If the underlying driver does not return some of this information, the corresponding values in the SchemaTable will not be set correctly.</span></span>  
  
 <span data-ttu-id="65ac8-372">也會呼叫.NET Framework Data Provider for ODBC **SQLPrimaryKeys**擷取每個資料表的索引鍵資訊。</span><span class="sxs-lookup"><span data-stu-id="65ac8-372">The .NET Framework Data Provider for ODBC also calls **SQLPrimaryKeys** to retrieve the key information for every table.</span></span> <span data-ttu-id="65ac8-373">如果基礎 ODBC 驅動程式不支援此函式，此資料提供者會呼叫**SQLStatistics**並選擇其中一個唯一的索引為資料表主索引鍵。</span><span class="sxs-lookup"><span data-stu-id="65ac8-373">If the underlying ODBC driver does not support this function, the data provider calls **SQLStatistics** and chooses one of the unique indexes as the primary key for the table.</span></span> <span data-ttu-id="65ac8-374">這可能不會永遠提供您想要的結果。</span><span class="sxs-lookup"><span data-stu-id="65ac8-374">This may not always give the results that you want.</span></span>  
  
 <span data-ttu-id="65ac8-375"><xref:System.Data.Odbc.OdbcCommandBuilder> 必須正確識別資料表的主索引鍵，才能順利運作。</span><span class="sxs-lookup"><span data-stu-id="65ac8-375"><xref:System.Data.Odbc.OdbcCommandBuilder> needs the correct identification of the primary keys of the table in order to work correctly.</span></span> <span data-ttu-id="65ac8-376">如果 BaseTableName 不會傳回查詢結果中的每個資料行，.NET Framework Data Provider for ODBC 會嘗試剖析 SQL 陳述式來尋找查詢所涉及的資料表名稱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-376">If the BaseTableName is not returned for every column in the query results, the .NET Framework Data Provider for ODBC tries to parse the SQL statement to find the table names involved in the query.</span></span> <span data-ttu-id="65ac8-377">這適用於更新、 插入、 刪除和簡單的 SELECT 陳述式，但不是與預存程序或根據聯結的 SELECT 陳述式。</span><span class="sxs-lookup"><span data-stu-id="65ac8-377">This works with UPDATE, INSERT, DELETE and simple SELECT statements, but not with stored procedures or SELECT statements based on joins.</span></span> <span data-ttu-id="65ac8-378">如果從這個表格中的部分或所有的結構描述資訊遺漏<xref:System.Data.Odbc.OdbcCommandBuilder>將無法正常運作，因為它有足夠的結構描述資訊，以自動產生正確的 INSERT、 UPDATE 或 DELETE 陳述式。</span><span class="sxs-lookup"><span data-stu-id="65ac8-378">If some or all the schema information is missing from this table, the <xref:System.Data.Odbc.OdbcCommandBuilder> will not work correctly, because it has insufficient schema information to automatically generate the correct INSERT, UPDATE, or DELETE statements.</span></span>  
  
 <span data-ttu-id="65ac8-379">若要確定中繼資料資料行傳回正確的資訊，您必須呼叫<xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>設 KeyInfo 行為參數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-379">To make sure that metadata columns return the correct information, you must call <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> with the behavior parameter set to KeyInfo.</span></span> <span data-ttu-id="65ac8-380">否則，一些結構描述資料表中的資料行可能會傳回預設值，null，或不正確的資料。</span><span class="sxs-lookup"><span data-stu-id="65ac8-380">Otherwise, some of the columns in the schema table may return default, null, or incorrect data.</span></span>  
  
 <span data-ttu-id="65ac8-381">當您透過 ODBC 驅動程式使用 Oracle 的 ODBC.NET 時，做為索引鍵無法辨識別名索引鍵資料行。</span><span class="sxs-lookup"><span data-stu-id="65ac8-381">When you use ODBC.NET to Oracle via the ODBC driver, aliased key columns are not recognized as keys.</span></span> <span data-ttu-id="65ac8-382">這會影響 OdbcDataReader 的結構描述資料表中的 IsKey 和 IsUnique 資料行。</span><span class="sxs-lookup"><span data-stu-id="65ac8-382">This affects the IsKey and IsUnique columns in the schema table of the OdbcDataReader.</span></span> <span data-ttu-id="65ac8-383">它也會影響 OdbcCommandBuilder 能夠產生更新的邏輯。</span><span class="sxs-lookup"><span data-stu-id="65ac8-383">It also affects the OdbcCommandBuilder's ability to generate updating logic.</span></span> <span data-ttu-id="65ac8-384">請考慮不使用主索引鍵資料行的別名。</span><span class="sxs-lookup"><span data-stu-id="65ac8-384">Consider not using an alias for a primary key column.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="65ac8-385">唯一索引和主索引鍵資料行，可為 null，不論它們是否可為 null 或不，一律會傳回 Microsoft Jet ODBC 驅動程式。</span><span class="sxs-lookup"><span data-stu-id="65ac8-385">The Microsoft Jet ODBC driver always returns unique index and primary key columns as nullable regardless of whether they are nullable or not.</span></span> <span data-ttu-id="65ac8-386">驅動程式也不會傳回主索引鍵資訊;此外，它只會傳回唯一索引和資料行，包括主索引鍵資料行，而不管它們之間的清單。</span><span class="sxs-lookup"><span data-stu-id="65ac8-386">The driver also does not return primary key information; it only returns a list of unique indexes and their columns, including primary key columns, without differentiating among them.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="65ac8-387"><see cref="T:System.Data.Odbc.OdbcDataReader" /> 已關閉。</span><span class="sxs-lookup"><span data-stu-id="65ac8-387">The <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-388">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-388">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetString">
      <MemberSignature Language="C#" Value="public override string GetString (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetString(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetString(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetString (i As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetString(int i);" />
      <MemberSignature Language="F#" Value="override this.GetString : int -&gt; string" Usage="odbcDataReader.GetString i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-389">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-389">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-390">取得指定的資料行值做為 <see cref="T:System.String" />。</span><span class="sxs-lookup"><span data-stu-id="65ac8-390">Gets the value of the specified column as a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="65ac8-391">做為 <see cref="T:System.String" /> 的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-391">The value of the specified column as a <see cref="T:System.String" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-392">根據基礎 ODBC 驅動程式的功能執行轉換。</span><span class="sxs-lookup"><span data-stu-id="65ac8-392">Conversions are performed based on the underlying capabilities of the ODBC driver.</span></span> <span data-ttu-id="65ac8-393">如果不支援的轉換，則方法呼叫會失敗。</span><span class="sxs-lookup"><span data-stu-id="65ac8-393">If the conversion is not supported, the method call fails.</span></span>  
  
 <span data-ttu-id="65ac8-394">呼叫<xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>之前呼叫這個方法尋找 null 值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-394">Call <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A> to look for null values before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="65ac8-395">指定的轉型無效。</span><span class="sxs-lookup"><span data-stu-id="65ac8-395">The specified cast is not valid.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-396">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-396">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetTime (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetTime(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTime (i As Integer) As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetTime(int i);" />
      <MemberSignature Language="F#" Value="member this.GetTime : int -&gt; TimeSpan" Usage="odbcDataReader.GetTime i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-397">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-397">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-398">取得指定之資料行的值做為 <see cref="T:System.TimeSpan" /> 物件。</span><span class="sxs-lookup"><span data-stu-id="65ac8-398">Gets the value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span></span></summary>
        <returns><span data-ttu-id="65ac8-399">做為 <see cref="T:System.TimeSpan" /> 物件的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-399">The value of the specified column as a <see cref="T:System.TimeSpan" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-400">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-400">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public override object GetValue (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object GetValue(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValue (i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ GetValue(int i);" />
      <MemberSignature Language="F#" Value="override this.GetValue : int -&gt; obj" Usage="odbcDataReader.GetValue i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-401">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-401">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-402">取得使用原生格式的指定序數的資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-402">Gets the value of the column at the specified ordinal in its native format.</span></span></summary>
        <returns><span data-ttu-id="65ac8-403">要傳回的值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-403">The value to return.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-404">對於 null 資料庫資料行來說，這個方法會傳回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-404">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-405">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-405">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public override int GetValues (object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetValues(object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetValues (values As Object()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetValues(cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="override this.GetValues : obj[] -&gt; int" Usage="odbcDataReader.GetValues values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="65ac8-406">型別 <see cref="T:System.Object" /> 陣列，要複製屬性資料行。</span><span class="sxs-lookup"><span data-stu-id="65ac8-406">An array of type <see cref="T:System.Object" /> into which to copy the attribute columns.</span></span></param>
        <summary><span data-ttu-id="65ac8-407">使用目前資料列的資料行值填入物件陣列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-407">Populates an array of objects with the column values of the current row.</span></span></summary>
        <returns><span data-ttu-id="65ac8-408">陣列中 <see cref="T:System.Object" /> 的執行個體數目。</span><span class="sxs-lookup"><span data-stu-id="65ac8-408">The number of instances of <see cref="T:System.Object" /> in the array.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-409">對於大部分的應用程式，<xref:System.Data.Odbc.OdbcDataReader.GetValues%2A>方法提供有效率的方法用來擷取所有的資料行，而不是個別擷取每個資料行。</span><span class="sxs-lookup"><span data-stu-id="65ac8-409">For most applications, the <xref:System.Data.Odbc.OdbcDataReader.GetValues%2A> method provides an efficient means for retrieving all columns, instead of retrieving each column individually.</span></span>  
  
 <span data-ttu-id="65ac8-410">您可以傳遞<xref:System.Object>陣列包含少於一個產生的資料列中包含的資料行數目。</span><span class="sxs-lookup"><span data-stu-id="65ac8-410">You can pass an <xref:System.Object> array that contains fewer than the number of columns that are contained in the resulting row.</span></span> <span data-ttu-id="65ac8-411">資料量<xref:System.Object>陣列會保存已複製到陣列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-411">Only the amount of data the <xref:System.Object> array holds is copied to the array.</span></span> <span data-ttu-id="65ac8-412">您也可以傳遞<xref:System.Object>其長度大於包含在產生的資料列中的資料行數目的陣列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-412">You can also pass an <xref:System.Object> array whose length is more than the number of columns that are contained in the resulting row.</span></span>  
  
 <span data-ttu-id="65ac8-413">對於 null 資料庫資料行來說，這個方法會傳回 <xref:System.DBNull>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-413">This method returns <xref:System.DBNull> for null database columns.</span></span>  
  
   
  
## Examples  
 [!code-csharp[OdbcDataReader_GetValues#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/odbcdatareader_getvalues/cs/source.cs#1)]
 [!code-vb[OdbcDataReader_GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/odbcdatareader_getvalues/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-414">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-414">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="HasRows">
      <MemberSignature Language="C#" Value="public override bool HasRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasRows" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.HasRows" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HasRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HasRows { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasRows : bool" Usage="System.Data.Odbc.OdbcDataReader.HasRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65ac8-415">取得值，指出 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 是否包含一個或多個資料列。</span><span class="sxs-lookup"><span data-stu-id="65ac8-415">Gets a value that indicates whether the <see cref="T:System.Data.Odbc.OdbcDataReader" /> contains one or more rows.</span></span></summary>
        <value><span data-ttu-id="65ac8-416">如果 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 包含一個或更多資料列，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="65ac8-416"><see langword="true" /> if the <see cref="T:System.Data.Odbc.OdbcDataReader" /> contains one or more rows; otherwise <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-417">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-417">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsClosed">
      <MemberSignature Language="C#" Value="public override bool IsClosed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsClosed" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.IsClosed" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsClosed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsClosed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsClosed : bool" Usage="System.Data.Odbc.OdbcDataReader.IsClosed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65ac8-418">指出 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 是否關閉。</span><span class="sxs-lookup"><span data-stu-id="65ac8-418">Indicates whether the <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed.</span></span></summary>
        <value><span data-ttu-id="65ac8-419">如果 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 關閉，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="65ac8-419"><see langword="true" /> if the <see cref="T:System.Data.Odbc.OdbcDataReader" /> is closed; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-420"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> 並<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>是您可以呼叫之後的唯一屬性<xref:System.Data.Odbc.OdbcDataReader>已關閉。</span><span class="sxs-lookup"><span data-stu-id="65ac8-420"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-421">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-421">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="IsDBNull">
      <MemberSignature Language="C#" Value="public override bool IsDBNull (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDBNull(int32 i) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDBNull (i As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDBNull(int i);" />
      <MemberSignature Language="F#" Value="override this.IsDBNull : int -&gt; bool" Usage="odbcDataReader.IsDBNull i" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-422">以零為基底的資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-422">The zero-based column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-423">取得值，這個值表示資料行是否包含不存在或遺漏的值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-423">Gets a value that indicates whether the column contains nonexistent or missing values.</span></span></summary>
        <returns><span data-ttu-id="65ac8-424">如果指定的資料行值等於 <see cref="T:System.DBNull" />，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="65ac8-424"><see langword="true" /> if the specified column value is equivalent to <see cref="T:System.DBNull" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-425">若要避免引發錯誤，呼叫這個方法，以尋找 Get 方法，然後再呼叫具型別 null 資料行值 (例如<xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>， <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>，依此類推)。</span><span class="sxs-lookup"><span data-stu-id="65ac8-425">To avoid raising an error, call this method to look for null column values before calling the typed Get methods (for example, <xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>, <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>, and so on).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-426">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-426">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="65ac8-427">取得使用原生格式的資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-427">Gets the value of a column in its native format.</span></span></summary>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-428">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-428">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int i] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(i As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int i); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj" Usage="System.Data.Odbc.OdbcDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i"><span data-ttu-id="65ac8-429">資料行序數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-429">The column ordinal.</span></span></param>
        <summary><span data-ttu-id="65ac8-430">提供資料行序數，取得使用原生格式的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-430">Gets the value of the specified column in its native format given the column ordinal.</span></span></summary>
        <value><span data-ttu-id="65ac8-431">使用原生格式的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-431">The value of the specified column in its native format.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="65ac8-432">傳遞的索引超出 0 到 <see cref="P:System.Data.IDataRecord.FieldCount" /> 的範圍。</span><span class="sxs-lookup"><span data-stu-id="65ac8-432">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount" />.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-433">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-433">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string value] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides ReadOnly Property Item(value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj" Usage="System.Data.Odbc.OdbcDataReader.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="65ac8-434">資料行名稱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-434">The column name.</span></span></param>
        <summary><span data-ttu-id="65ac8-435">提供資料行名稱，取得使用原生格式的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-435">Gets the value of the specified column in its native format given the column name.</span></span></summary>
        <value><span data-ttu-id="65ac8-436">使用原生格式的指定資料行值。</span><span class="sxs-lookup"><span data-stu-id="65ac8-436">The value of the specified column in its native format.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-437">第一次執行區分大小寫的查閱。</span><span class="sxs-lookup"><span data-stu-id="65ac8-437">A case-sensitive lookup is performed first.</span></span> <span data-ttu-id="65ac8-438">如果失敗，會使用第二個的不區分大小寫搜尋。</span><span class="sxs-lookup"><span data-stu-id="65ac8-438">If it fails, a second case-insensitive search is made.</span></span>  
  
 <span data-ttu-id="65ac8-439">這個方法會區分假名寬度。</span><span class="sxs-lookup"><span data-stu-id="65ac8-439">This method is kana-width insensitive.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException"><span data-ttu-id="65ac8-440">找不到具有指定名稱的資料行。</span><span class="sxs-lookup"><span data-stu-id="65ac8-440">No column with the specified name was found.</span></span></exception>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-441">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-441">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="NextResult">
      <MemberSignature Language="C#" Value="public override bool NextResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool NextResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.NextResult" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function NextResult () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool NextResult();" />
      <MemberSignature Language="F#" Value="override this.NextResult : unit -&gt; bool" Usage="odbcDataReader.NextResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65ac8-442">讀取批次 SQL 陳述式的結果時，將 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 前進到下一個結果。</span><span class="sxs-lookup"><span data-stu-id="65ac8-442">Advances the <see cref="T:System.Data.Odbc.OdbcDataReader" /> to the next result when reading the results of batch SQL statements.</span></span></summary>
        <returns><span data-ttu-id="65ac8-443">如果有其他的結果集 (Result Set)，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="65ac8-443"><see langword="true" /> if there are more result sets; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-444">用來處理多個可以執行批次 SQL 陳述式所產生的結果。</span><span class="sxs-lookup"><span data-stu-id="65ac8-444">Used to process multiple results that can be generated by executing batch SQL statements.</span></span>  
  
 <span data-ttu-id="65ac8-445">根據預設，<xref:System.Data.Odbc.OdbcDataReader>位於第一個結果。</span><span class="sxs-lookup"><span data-stu-id="65ac8-445">By default, the <xref:System.Data.Odbc.OdbcDataReader> is positioned on the first result.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-446">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-446">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="odbcDataReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="65ac8-447">將 <see cref="T:System.Data.Odbc.OdbcDataReader" /> 推進到下一筆記錄。</span><span class="sxs-lookup"><span data-stu-id="65ac8-447">Advances the <see cref="T:System.Data.Odbc.OdbcDataReader" /> to the next record.</span></span></summary>
        <returns><span data-ttu-id="65ac8-448">如果有多個資料列則為 <see langword="true" />；否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="65ac8-448"><see langword="true" /> if there are more rows; otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-449">預設位置<xref:System.Data.Odbc.OdbcDataReader>之前第一筆記錄。</span><span class="sxs-lookup"><span data-stu-id="65ac8-449">The default position of the <xref:System.Data.Odbc.OdbcDataReader> is before the first record.</span></span> <span data-ttu-id="65ac8-450">因此，您必須呼叫<xref:System.Data.Odbc.OdbcDataReader.Read%2A>開始存取任何資料。</span><span class="sxs-lookup"><span data-stu-id="65ac8-450">Therefore, you must call <xref:System.Data.Odbc.OdbcDataReader.Read%2A> to start accessing any data.</span></span>  
  
 <span data-ttu-id="65ac8-451">雖然<xref:System.Data.Odbc.OdbcDataReader>正在使用中，相關聯<xref:System.Data.Odbc.OdbcConnection>忙碌處理直到您呼叫<xref:System.Data.Odbc.OdbcDataReader.Close%2A>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-451">While the <xref:System.Data.Odbc.OdbcDataReader> is being used, the associated <xref:System.Data.Odbc.OdbcConnection> is busy serving it until you call <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="65ac8-452">下列範例會建立<xref:System.Data.Odbc.OdbcConnection>，則<xref:System.Data.Odbc.OdbcCommand>，和<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-452">The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>.</span></span> <span data-ttu-id="65ac8-453">此範例會讀取資料，並將它寫出到主控台。</span><span class="sxs-lookup"><span data-stu-id="65ac8-453">The example reads through the data, writing it out to the console.</span></span> <span data-ttu-id="65ac8-454">最後，範例會關閉<xref:System.Data.Odbc.OdbcDataReader>，然後<xref:System.Data.Odbc.OdbcConnection>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-454">Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.</span></span>  
  
 [!code-csharp[Classic WebData IDataReader.Read Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDataReader.Read Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDataReader.Read Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-455">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-455">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="RecordsAffected">
      <MemberSignature Language="C#" Value="public override int RecordsAffected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RecordsAffected" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcDataReader.RecordsAffected" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RecordsAffected As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RecordsAffected { int get(); };" />
      <MemberSignature Language="F#" Value="member this.RecordsAffected : int" Usage="System.Data.Odbc.OdbcDataReader.RecordsAffected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="65ac8-456">取得因執行 SQL 陳述式所變更、插入或刪除的資料列數目。</span><span class="sxs-lookup"><span data-stu-id="65ac8-456">Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</span></span></summary>
        <value><span data-ttu-id="65ac8-457">已變更、插入或刪除的資料列數。</span><span class="sxs-lookup"><span data-stu-id="65ac8-457">The number of rows changed, inserted, or deleted.</span></span> <span data-ttu-id="65ac8-458">SELECT 陳述式的值為 -1，如果沒有任何資料列受到影響，或是陳述式失敗，則為 0。</span><span class="sxs-lookup"><span data-stu-id="65ac8-458">-1 for SELECT statements; 0 if no rows were affected, or the statement failed.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="65ac8-459"><xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>屬性才會設定讀取所有資料列，而且您關閉<xref:System.Data.Odbc.OdbcDataReader>。</span><span class="sxs-lookup"><span data-stu-id="65ac8-459">The <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> property is not set until all rows are read and you close the <xref:System.Data.Odbc.OdbcDataReader>.</span></span>  
  
 <span data-ttu-id="65ac8-460">這個屬性的值是累計的。</span><span class="sxs-lookup"><span data-stu-id="65ac8-460">The value of this property is cumulative.</span></span> <span data-ttu-id="65ac8-461">例如，如果在批次模式中，值插入兩筆記錄<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>會是 2。</span><span class="sxs-lookup"><span data-stu-id="65ac8-461">For example, if two records are inserted in batch mode, the value of <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> will be 2.</span></span>  
  
 <span data-ttu-id="65ac8-462"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> 並<xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>是您可以呼叫之後的唯一屬性<xref:System.Data.Odbc.OdbcDataReader>已關閉。</span><span class="sxs-lookup"><span data-stu-id="65ac8-462"><xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> and <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> are the only properties that you can call after the <xref:System.Data.Odbc.OdbcDataReader> is closed.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/data/adonet/dataadapters-and-datareaders.md"><span data-ttu-id="65ac8-463">DataAdapter 和 DataReader</span><span class="sxs-lookup"><span data-stu-id="65ac8-463">DataAdapters and DataReaders</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcDataReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>