<Type Name="OdbcConnection" FullName="System.Data.Odbc.OdbcConnection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7f98f9e96e5aa591bc85cb637ff4b2b8de63a462" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34452108" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OdbcConnection : System.Data.Common.DbConnection, ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OdbcConnection extends System.Data.Common.DbConnection implements class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Data.Odbc.OdbcConnection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OdbcConnection&#xA;Inherits DbConnection&#xA;Implements ICloneable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OdbcConnection sealed : System::Data::Common::DbConnection, ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Odbc</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnection</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("InfoMessage")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示資料來源的開啟連接。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcConnection>物件都代表資料來源所使用的連接字串或 ODBC 資料來源名稱 (DSN) 建立一個唯一的連接。 具有用戶端/伺服器資料庫系統，它相當於伺服器的網路連線。 根據原生 ODBC 驅動程式，某些方法或屬性所支援的功能<xref:System.Data.Odbc.OdbcConnection>物件可能無法使用。  
  
 <xref:System.Data.Odbc.OdbcConnection>物件會使用原生資源，例如 ODBC 環境和連接控制代碼。 您應該一律明確地關閉任何開啟<xref:System.Data.Odbc.OdbcConnection>藉由呼叫物件<xref:System.Data.Odbc.OdbcConnection.Close%2A>或**處置**之前<xref:System.Data.Odbc.OdbcConnection>物件會超出範圍，或是藉由將連線`Using`陳述式。 不這麼做會使釋放回收這些原生資源。 它可能無法立即釋放它們。 這樣一來，依次最終可能造成資源用盡或達到最大限制基礎驅動程式。 這會導致斷斷續續地發生失敗。 例如，您可能會遇到`Maximum Connections`-雖然許多連接正在等候記憶體回收行程所要刪除相關錯誤。 明確地關閉連接可讓您更有效率地使用增強延展性，並改善整體應用程式效能的原生資源。  
  
> [!NOTE]
>  若要部署高效能應用程式，您通常必須使用連接共用。 不過，當您使用.NET Framework Data Provider for ODBC，您不必啟用連接共用，因為提供者會自動管理。  
  
 如果一個的`Execute`方法<xref:System.Data.Odbc.OdbcCommand>類別會造成嚴重<xref:System.Data.Odbc.OdbcException>（例如，SQL Server 安全性層級 20 或更高），<xref:System.Data.Odbc.OdbcConnection>可能會關閉。 但是，使用者可以再次開啟連線，然後繼續進行。  
  
 建立的執行個體的應用程式<xref:System.Data.Odbc.OdbcConnection>物件可能會要求所有直接和間接呼叫端擁有足夠的權限的程式碼所設定的宣告式或必要的安全性要求。 <xref:System.Data.Odbc.OdbcConnection> 使用建立的安全性要求<xref:System.Data.Odbc.OdbcPermission>物件。 使用者可以確認他們的程式碼使用具有足夠的權限<xref:System.Data.Odbc.OdbcPermissionAttribute>物件。 使用者和系統管理員也可以使用程式碼存取安全性原則工具 (Caspol.exe) 來修改電腦、 使用者和企業層級的安全性原則。 如需詳細資訊，請參閱 [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md)。  
  
 如需處理警告和告知性訊息，從資料來源的詳細資訊，請參閱[連接事件](~/docs/framework/data/adonet/connection-events.md)。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.Odbc.OdbcCommand>和<xref:System.Data.Odbc.OdbcConnection>。 <xref:System.Data.Odbc.OdbcConnection>已開啟，並設定為<xref:System.Data.Odbc.OdbcCommand.Connection%2A>屬性。 此範例會接著呼叫<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>，並關閉連接。 若要達成此目的，<xref:System.Data.Odbc.OdbcCommand.ExecuteNonQuery%2A>傳遞連接字串和是 SQL INSERT 陳述式的查詢字串。  
  
 [!code-csharp[Classic WebData OdbcConnection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Data.Odbc.OdbcConnection" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcConnection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.Data.Odbc.OdbcConnection" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新執行個體時<xref:System.Data.Odbc.OdbcConnection>建立、 唯寫和唯讀屬性都設定為下列的起始值，除非它們特別設定使用中其相關聯的關鍵字<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>屬性。  
  
|屬性|Initial value|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|空字串 ("")|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.Odbc.OdbcConnection.Database%2A>|空字串 ("")|  
  
 您可以變更這些屬性的值只能透過<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>屬性。  
  
   
  
## Examples  
 下列範例會建立並開啟<xref:System.Data.Odbc.OdbcConnection>。  
  
 [!code-csharp[Classic WebData OdbcConnection.OdbcConnection#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.OdbcConnection#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OdbcConnection (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OdbcConnection(System::String ^ connectionString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">用來開啟資料來源的連接。</param>
        <summary>使用指定的連接字串，初始化 <see cref="T:System.Data.Odbc.OdbcConnection" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新執行個體時<xref:System.Data.Odbc.OdbcConnection>建立、 唯寫和唯讀屬性都設定為下列的起始值，除非它們特別設定使用中其相關聯的關鍵字<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>屬性。  
  
|屬性|Initial value|  
|----------------|-------------------|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>|`connectionString`|  
|<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>|15|  
|<xref:System.Data.Odbc.OdbcConnection.Database%2A>|空字串 ("")|  
  
 您可以變更這些屬性的值只能透過<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>屬性。  
  
   
  
## Examples  
 下列範例會建立並開啟<xref:System.Data.Odbc.OdbcConnection>。  
  
 [!code-csharp[Classic WebData OdbcConnection.OdbcConnection1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.OdbcConnection1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.OdbcConnection1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDbTransaction">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbTransaction BeginDbTransaction(valuetype System.Data.IsolationLevel isolationLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.BeginDbTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbTransaction ^ BeginDbTransaction(System::Data::IsolationLevel isolationLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolationLevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolationLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginTransaction">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>開始進行資料來源上的交易。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction BeginTransaction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcTransaction BeginTransaction() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.BeginTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction () As OdbcTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcTransaction ^ BeginTransaction();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>開始進行資料來源上的交易。</summary>
        <returns>代表新異動的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要認可或回復交易，您必須明確地使用<xref:System.Data.Odbc.OdbcTransaction.Commit%2A>或<xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>方法。  
  
 若要確定.NET Framework 資料提供者，如 ODBC 交易管理模型會正確執行，請避免使用其他的交易管理模式，例如資料來源所提供。  
  
> [!NOTE]
>  如果您未指定隔離等級，隔離層級取決於所使用的驅動程式。 若要指定隔離等級<xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>方法，使用的多載，`isolevel`參數。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.Odbc.OdbcConnection>和<xref:System.Data.Odbc.OdbcTransaction>。 它也會示範如何使用<xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>， <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>，和<xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>方法。  
  
 [!code-csharp[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">交易正在作用。 不支援平行交易。</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginTransaction">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcTransaction BeginTransaction (System.Data.IsolationLevel isolevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcTransaction BeginTransaction(valuetype System.Data.IsolationLevel isolevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.BeginTransaction(System.Data.IsolationLevel)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginTransaction (isolevel As IsolationLevel) As OdbcTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcTransaction ^ BeginTransaction(System::Data::IsolationLevel isolevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcTransaction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isolevel" Type="System.Data.IsolationLevel" />
      </Parameters>
      <Docs>
        <param name="isolevel">這個連接的交易隔離等級 (Isolation Level)。 如果您未指定隔離等級，便會使用驅動程式的預設隔離等級。</param>
        <summary>使用指定的 <see cref="T:System.Data.IsolationLevel" /> 值，開始進行資料來源上的交易。</summary>
        <returns>代表新異動的物件。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要認可或回復交易，您必須明確地使用<xref:System.Data.Odbc.OdbcTransaction.Commit%2A>或<xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>方法。  
  
 若要確定.NET Framework 資料提供者，如 ODBC 交易管理模型會正確執行，請避免使用其他的交易管理模式，例如資料來源所提供。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.Odbc.OdbcConnection>和<xref:System.Data.Odbc.OdbcTransaction>。 它也會示範如何使用<xref:System.Data.Odbc.OdbcConnection.BeginTransaction%2A>， <xref:System.Data.Odbc.OdbcTransaction.Commit%2A>，和<xref:System.Data.Odbc.OdbcTransaction.Rollback%2A>方法。  
  
 [!code-csharp[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.BeginTransaction1#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.BeginTransaction1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">交易正在作用。 不支援平行交易。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeDatabase">
      <MemberSignature Language="C#" Value="public override void ChangeDatabase (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ChangeDatabase(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.ChangeDatabase(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ChangeDatabase (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ChangeDatabase(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">資料庫名稱。</param>
        <summary>變更與開啟之 <see cref="T:System.Data.Odbc.OdbcConnection" /> 相關聯的目前資料庫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `value`參數必須包含有效的資料庫名稱，並不能包含 null 值、 空字串 ("")，或只有空白字元的字串。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.Odbc.OdbcConnection>和變更目前的資料庫。  
  
 [!code-csharp[Classic WebData OdbcConnection.Database#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.Database#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">資料庫名稱無效。</exception>
        <exception cref="T:System.InvalidOperationException">連接未開啟。</exception>
        <exception cref="T:System.Data.Odbc.OdbcException">無法變更資料庫。</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>關閉資料來源的連接。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcConnection.Close%2A>方法會回復任何暫止交易。 然後，它會釋放連接集區中，連接或關閉連接，如果連接共用已停用。 如果<xref:System.Data.Odbc.OdbcConnection.Close%2A>呼叫時處理<xref:System.Data.Common.DbConnection.StateChange>事件時，沒有其他<xref:System.Data.Common.DbConnection.StateChange>不會引發事件。  
  
 應用程式可以呼叫<xref:System.Data.Odbc.OdbcConnection.Close%2A>超過一次，而不會產生例外狀況。  
  
> [!NOTE]
>  當您使用.NET Framework Data Provider for ODBC 時，您不必啟用連接共用，因為 ODBC 驅動程式管理員會自動管理。 如需有關如何啟用和停用連接共用的詳細資訊，請參閱 Microsoft 開放式資料庫連接 (ODBC) 文件。  
  
> [!CAUTION]
>  請勿呼叫<xref:System.Data.Odbc.OdbcConnection.Close%2A>或`Dispose`連線、 DataReader 或在任何其他 managed 的物件上`Finalize`類別的方法。 在完成項中，您應該只需釋放類別直接擁有的 unmanaged 的資源。 如果類別未擁有任何 Unmanaged 資源，請不要在類別定義中包含 `Finalize` 方法。 如需詳細資訊，請參閱[回收](~/docs/standard/garbage-collection/index.md)。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.Odbc.OdbcConnection>、 開啟、 顯示的某些屬性，並接著關閉連接。  
  
 [!code-csharp[Classic WebData OdbcConnection.Close#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Close/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.Close#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Close/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public override string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Odbc.Design.OdbcConnectionStringEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來開啟資料來源的字串。</summary>
        <value>包含資料來源名稱之類設定的 ODBC 驅動程式連接字串需要建立初始連接。 預設值為空字串 ("")。 最大長度為 1024 個字元。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>屬性設計為儘可能密集地比對 ODBC 連接字串格式。 <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>時，可以設定只會關閉連接，並將它設定為會將它傳遞，保持不變，驅動程式管理員與基礎驅動程式。 因此，如語法<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>必須完全符合的驅動程式管理員和基礎驅動程式支援。  
  
 您可以使用<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>內容，連接至各種資料來源。 這包括 ODBC 資料來源名稱 (DSN)。 下列範例說明幾個可能的連接字串。  
  
```  
"Driver={SQL Server};Server=(local);Trusted_Connection=Yes;Database=AdventureWorks;"  
  
"Driver={Microsoft ODBC for Oracle};Server=ORACLE8i7;Persist Security Info=False;Trusted_Connection=Yes"  
  
"Driver={Microsoft Access Driver (*.mdb)};DBQ=c:\bin\Northwind.mdb"  
  
"Driver={Microsoft Excel Driver (*.xls)};DBQ=c:\bin\book1.xls"  
  
"Driver={Microsoft Text Driver (*.txt; *.csv)};DBQ=c:\bin"  
  
"DSN=dsnname"  
```  
  
> [!NOTE]
>  不支援.NET Framework Data Provider for ODBC`Persist Security Info`其他.NET Framework 資料提供者支援的關鍵字。 不過，<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>屬性的行為如同`Persist Security Info`會設定為`false`。 這表示您無法擷取密碼的<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>屬性如果在開啟連接。 當<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>屬性讀取<xref:System.Data.Odbc.OdbcConnection>已開啟的物件，減去密碼，會傳回連接字串。 您無法變更這個行為。因此，如果應用程式需要密碼，將其儲存個別之前先呼叫<xref:System.Data.Odbc.OdbcConnection.Open%2A>。  
  
 許多字串中指定的設定都有對應的唯讀屬性 (例如， `Server=(local)`，它會對應至<xref:System.Data.Odbc.OdbcConnection.DataSource%2A>屬性)。 連接開啟之後，除非偵測到錯誤時，會更新這些屬性。 在此情況下，會更新任何屬性。 <xref:System.Data.Odbc.OdbcConnection> 屬性 (例如<xref:System.Data.Odbc.OdbcConnection.Database%2A>) 傳回只有預設設定或指定這些設定<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>。  
  
 在 Microsoft.NET Framework 1.0 版中，連接字串的驗證，才會進行應用程式呼叫<xref:System.Data.Odbc.OdbcConnection.Open%2A>方法。 它負責基礎的 ODBC 驅動程式，來驗證連接字串。 如果連接字串包含無效或不支援的屬性，驅動程式可能會引發<xref:System.Data.Odbc.OdbcException>在執行階段。  
  
 不過，在.NET Framework 1.1 版和更新版本中，連接字串的一些基本驗證，就會發生您設定如<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>屬性。 在這段時間，此資料提供者會確認連接字串是否符合"關鍵字 = value;..."格式，但不是會驗證是否為有效的關鍵字或值。 當應用程式呼叫時，剩餘的驗證由基礎的 ODBC 驅動程式執行<xref:System.Data.Odbc.OdbcConnection.Open%2A>方法。  
  
 ODBC 連接字串的語法如下：  
  
```  
connection-string ::= empty-string[;] | attribute[;] | attribute; connection-string  
empty-string ::=  
attribute ::= attribute-keyword=attribute-value | DRIVER=[{]attribute-value[}]  
attribute-keyword ::= DSN | UID | PWD  
 | driver-defined-attribute-keyword  
attribute-value ::= character-string  
driver-defined-attribute-keyword ::= identifier  
```  
  
 其中`character-string`有零個或多個字元。`identifier`有一或多個字元。`attribute-keyword`不區分大小寫。`attribute-value`可區分大小寫; 和 DSN 關鍵字的值不會不只包含空白。  
  
 因為連接字串和初始設定檔案文法關鍵字和屬性值應避免包含字元集 []{}（)，;？* = ！ @ 不括在大括號。 DSN 關鍵字的值不能只包含空格，且不能包含前置的空白。 系統資訊的文法，因為關鍵字和資料來源名稱不能包含反斜線 (\\) 字元。  
  
 應用程式不必 Driver 關鍵字後面加入括號括住屬性值，除非屬性包含分號 （;），在這種情況下大括號是必要。 如果驅動程式收到的屬性值包含大括號，驅動程式不應該移除它們，但它們應該傳回的連接字串的一部分。  
  
 括在大括號 DSN 或連接字串值 ({})，包含任何字元集 []{}（)，;？* = ！ @ 便會傳遞至驅動程式。 不過，當您使用這些字元關鍵字中，驅動程式管理員當您使用 檔案 Dsn，會傳回錯誤，但將連接字串傳遞至規則的連接字串的驅動程式。 請避免使用內嵌的大括號中關鍵字值。  
  
 連接字串可能包含任意數目的驅動程式定義的關鍵字。 驅動程式關鍵字不會使用系統資訊，因為驅動程式必須定義足夠的關鍵字，讓驅動程式可以連接到資料來源連接字串中使用的資訊。 驅動程式會定義哪些關鍵字，才能連接到資料來源。  
  
 如果連接字串中重複任何關鍵字，就不保證將選取的值。  
  
> [!NOTE]
>  如果 ODBC 驅動程式支援連接字串超過 1024年個字元，您可以使用資料來源名稱 (DSN) 超過最大長度限制。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionTimeout">
      <MemberSignature Language="C#" Value="public int ConnectionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ConnectionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.ConnectionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ConnectionTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(15)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定在終止嘗試並產生錯誤前嘗試建立連接的等待時間。</summary>
        <value>等待連接開啟的時間 (以秒為單位)。 預設值為 15 秒。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 與.NET Framework data provider for SQL Server 和 OLE DB，不同的是.NET Framework Data Provider for ODBC 不支援此屬性設定為連接字串值，因為它不是有效的 ODBC 連接關鍵字。 若要指定連線逾時，設定<xref:System.Data.Odbc.OdbcConnection.ConnectionTimeout%2A>屬性，然後再呼叫<xref:System.Data.Odbc.OdbcConnection.Open%2A>。 這是相當於 ODBC `SQLSetConnectAttr` SQL_ATTR_LOGIN_TIMOUT 屬性。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">設定的值小於 0。</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateCommand">
      <MemberSignature Language="C#" Value="public System.Data.Odbc.OdbcCommand CreateCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Odbc.OdbcCommand CreateCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.CreateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCommand () As OdbcCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Odbc::OdbcCommand ^ CreateCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>建立並傳回與 <see cref="T:System.Data.Odbc.OdbcCommand" /> 相關聯的 <see cref="T:System.Data.Odbc.OdbcConnection" /> 物件。</summary>
        <returns>
          <see cref="T:System.Data.Odbc.OdbcCommand" /> 物件。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDbCommand">
      <MemberSignature Language="C#" Value="protected override System.Data.Common.DbCommand CreateDbCommand ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Data.Common.DbCommand CreateDbCommand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.CreateDbCommand" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDbCommand () As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Data::Common::DbCommand ^ CreateDbCommand();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Database">
      <MemberSignature Language="C#" Value="public override string Database { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Database" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.Database" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Database As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Database { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得目前資料庫或要在連接開啟之後使用的資料庫名稱。</summary>
        <value>目前資料庫的名稱。 直到連接開啟之前，預設值都是空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 首先，<xref:System.Data.Odbc.OdbcConnection.Database%2A>屬性在連接字串中設定。 <xref:System.Data.Odbc.OdbcConnection.Database%2A>才能更新屬性，請使用<xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>方法。 如果您變更目前的資料庫使用 SQL 陳述式或<xref:System.Data.Odbc.OdbcConnection.ChangeDatabase%2A>方法，會傳送參考用訊息，並會更新屬性。  
  
 擷取<xref:System.Data.Odbc.OdbcConnection.Database%2A>屬性就相當於呼叫 ODBC 函數`SQLGetInfo`與`Attribute`參數設定為 SQL_ATTR_CURRENT_CATALOG。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.Odbc.OdbcConnection>和變更目前的資料庫。  
  
 [!code-csharp[Classic WebData OdbcConnection.Database#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.Database#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.Database/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public override string DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DataSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSource { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得資料來源的伺服器名稱或檔案名稱。</summary>
        <value>資料來源的伺服器名稱或檔案名稱。 直到連接開啟之前，預設值都是空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 擷取<xref:System.Data.Odbc.OdbcConnection.DataSource%2A>屬性就相當於呼叫 ODBC 函數`SQLGetInfo`與`InfoType`參數設定為 <。  
  
   
  
## Examples  
 下列範例會建立<xref:System.Data.Odbc.OdbcConnection>並顯示後端資料來源名稱。  
  
 [!code-csharp[Classic WebData OdbcConnection.DataSource#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.DataSource/CS/source.cs#1)]
 [!code-vb[Classic WebData OdbcConnection.DataSource#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OdbcConnection.DataSource/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Driver">
      <MemberSignature Language="C#" Value="public string Driver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Driver" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.Driver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Driver As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Driver { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得為目前連接指定的 ODBC 驅動程式名稱。</summary>
        <value>ODBC 驅動程式的名稱。 這通常是 DLL 名稱 (例如，Sqlsrv32.dll)。 直到連接開啟之前，預設值都是空字串 ("")。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 擷取<xref:System.Data.Odbc.OdbcConnection.Driver%2A>屬性就相當於呼叫 ODBC 函數`SQLGetInfo`與`InfoType`參數設定為 SQL_DRIVER_NAME。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistDistributedTransaction">
      <MemberSignature Language="C#" Value="public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EnlistDistributedTransaction(class System.EnterpriseServices.ITransaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnlistDistributedTransaction (transaction As ITransaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnlistDistributedTransaction(System::EnterpriseServices::ITransaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.EnterpriseServices.ITransaction" />
      </Parameters>
      <Docs>
        <param name="transaction">要登記之現有 <see cref="T:System.EnterpriseServices.ITransaction" /> 的參考。</param>
        <summary>將指定的異動登記為分散式異動。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新的 ADO.NET 2.0 是支援的使用<xref:System.Data.Common.DbConnection.EnlistTransaction%2A>編列到分散式交易中的方法。 因為它在登錄中的連接<xref:System.Transactions.Transaction>執行個體， **EnlistTransaction**利用中的可用功能<xref:System.Transactions>命名空間來管理分散式交易，因此最好**EnlistDistributedTransaction**針對此目的。 如需詳細資訊，請參閱[分散式交易](~/docs/framework/data/adonet/distributed-transactions.md)。  
  
 您可以繼續登記在現有的分散式的交易使用<xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction*>方法如果停用了自動登記。 在現有的分散式交易中登記可確保，如果認可或回復交易，在資料來源的程式碼所做的修改也認可或回復的。 如需有關分散式交易的詳細資訊，請參閱[分散式交易](~/docs/framework/data/adonet/distributed-transactions.md)。  
  
 <xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction%2A> 如果傳回的例外狀況<xref:System.Data.Odbc.OdbcConnection>已經開始交易使用<xref:System.Data.Odbc.OdbcConnection.BeginTransaction*>。 不過，交易是否在資料來源上啟動本機交易 (例如，藉由明確執行 BEGIN TRANSACTION 陳述式使用<xref:System.Data.Odbc.OdbcCommand>物件)，<xref:System.Data.Odbc.OdbcConnection.EnlistDistributedTransaction%2A>復原本機交易並登記在現有做為要求的分散式的交易。 您不會收到通知，本機交易已回復，而且負責管理任何本機交易不使用啟動<xref:System.Data.Odbc.OdbcConnection.BeginTransaction*>。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnlistTransaction">
      <MemberSignature Language="C#" Value="public override void EnlistTransaction (System.Transactions.Transaction transaction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void EnlistTransaction(class System.Transactions.Transaction transaction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.EnlistTransaction(System.Transactions.Transaction)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void EnlistTransaction(System::Transactions::Transaction ^ transaction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
      </Parameters>
      <Docs>
        <param name="transaction">要登記之現有 <see cref="T:System.Transactions.Transaction" /> 的參考。</param>
        <summary>將指定的異動登記為分散式異動。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新的 ADO.NET 2.0 是支援的使用<xref:System.Data.Common.DbConnection.EnlistTransaction%2A>編列到分散式交易中的方法。 因為它在登錄中的連接<xref:System.Transactions.Transaction>執行個體， **EnlistTransaction**利用中的可用功能<xref:System.Transactions>命名空間來管理分散式交易，因此最好**EnlistDistributedTransaction**，它會使用**System.EnterpriseServices.ITransaction**物件。 它也會有稍微不同的語意： 在交易上明確地登記連接之後, 無法取消登錄或另一個交易中登記，直到第一筆交易完成為止。 如需有關分散式交易的詳細資訊，請參閱[分散式交易](~/docs/framework/data/adonet/distributed-transactions.md)。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSchema">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>傳回這個 <see cref="T:System.Data.Odbc.OdbcConnection" /> 之資料來源的結構描述資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.GetSchema" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema () As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>傳回這個 <see cref="T:System.Data.Odbc.OdbcConnection" /> 之資料來源的結構描述資訊。</summary>
        <returns>
          <see cref="T:System.Data.DataTable" />，包含結構描述資訊。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.GetSchema(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="collectionName">指定要傳回之結構描述的名稱。</param>
        <summary>使用結構描述名稱的特定名稱，傳回這個 <see cref="T:System.Data.Odbc.OdbcConnection" /> 之資料來源的結構描述資訊。</summary>
        <returns>
          <see cref="T:System.Data.DataTable" />，包含結構描述資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當`collectionName`為 null，<xref:System.Data.DataTable>包含所有可用的中繼資料與所有限制的相關資訊。  
  
> [!NOTE]
>  適用於所有限制`SQLStatistics`方法也適用於`ODBCConnection.GetSchema("indexes")`集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSchema">
      <MemberSignature Language="C#" Value="public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Data.DataTable GetSchema(string collectionName, string[] restrictionValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.GetSchema(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSchema (collectionName As String, restrictionValues As String()) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Data::DataTable ^ GetSchema(System::String ^ collectionName, cli::array &lt;System::String ^&gt; ^ restrictionValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="collectionName" Type="System.String" />
        <Parameter Name="restrictionValues" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="collectionName">指定要傳回之結構描述的名稱。</param>
        <param name="restrictionValues">指定所要求之結構描述的限制值集合。</param>
        <summary>使用結構描述名稱的特定字串和限制值的特定字串陣列，傳回這個 <see cref="T:System.Data.Odbc.OdbcConnection" /> 之資料來源的結構描述資訊。</summary>
        <returns>
          <see cref="T:System.Data.DataTable" />，包含結構描述資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當`collectionName`指定為 null，<xref:System.Data.DataTable>包含所有中繼資料可用，以及其限制的相關資訊。  
  
 `restrictionValues`參數可以提供*n*深度的值所指定的特定集合的限制集合。 若要設定特定的限制，值及設定的其他限制的值，您必須設定前述限制設為 null，然後放入您想要指定的值限制中的適當值。  
  
 這個範例是"Tables"集合。 如果"Tables"集合有三個的限制 （資料庫、 擁有者和資料表名稱），而且您想要取回只有擁有者 「 Carl 」 相關聯的資料表則您必須至少傳入下列值： null、"Carl"。 如果未傳入限制值，預設值會使用該限制。 這是相同的對應與傳入 null，不同於傳遞的參數值為空字串。 在此情況下，則為空字串 ("") 會被視為指定參數的值。  
  
> [!NOTE]
>  所有套用至 SQLStatistics 方法的限制會套用至 ODBCConnection.GetSchema("indexes") 集合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoMessage">
      <MemberSignature Language="C#" Value="public event System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Data.Odbc.OdbcInfoMessageEventHandler InfoMessage" />
      <MemberSignature Language="DocId" Value="E:System.Data.Odbc.OdbcConnection.InfoMessage" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event InfoMessage As OdbcInfoMessageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Data::Odbc::OdbcInfoMessageEventHandler ^ InfoMessage;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Odbc.OdbcInfoMessageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>發生於 ODBC 驅動程式傳送警告或資訊訊息時。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 要處理警告或資訊訊息伺服器所傳送的用戶端應該建立<xref:System.Data.Odbc.OdbcInfoMessageEventHandler>委託以接聽此事件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public override void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.Open" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用 <see cref="P:System.Data.Odbc.OdbcConnection.ConnectionString" /> 所指定的屬性設定，開啟與資料來源的連接。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Odbc.OdbcConnection>繪製從連接集區的開啟連接，如果有的話。 否則，它會建立新的連接到資料來源。  
  
> [!NOTE]
>  如果<xref:System.Data.Odbc.OdbcConnection>超出範圍，它代表的連接不會關閉自動。 因此，您必須明確地關閉此連接呼叫<xref:System.Data.Odbc.OdbcConnection.Close%2A>，**處置**，或是藉由將連線`Using`陳述式。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">這個方法的功能不受基底類別的支援，因此必須改為在衍生類別中實作。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseObjectPool">
      <MemberSignature Language="C#" Value="public static void ReleaseObjectPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReleaseObjectPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.ReleaseObjectPool" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReleaseObjectPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReleaseObjectPool();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指示 ODBC 驅動程式管理員環境控制代碼可在釋放最後一個基礎連接時釋放。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `ReleaseObjectPool` 可以被呼叫釋放 ODBC 環境控制代碼。 您可以呼叫這個方法，如果，例如連接物件不會使用一次。 在環境中的所有連線已都關閉時，可以處置環境。 請注意，單獨呼叫此方法不會實際釋放存在於環境中的使用中連接。  
  
 下列之前必須達到最後處置環境：  
  
1.  呼叫<xref:System.Data.Odbc.OdbcConnection.Close%2A>釋放<xref:System.Data.Odbc.OdbcConnection>從環境的物件。  
  
2.  允許的逾時時間的每個連接物件。  
  
3.  呼叫 <xref:System.Data.Odbc.OdbcConnection.ReleaseObjectPool%2A>。  
  
4.  叫用記憶體回收。  
  
 相反地，如果您呼叫<xref:System.Data.Odbc.OdbcConnection.Close%2A>上所有使用中連接，並叫用記憶體回收，但沒有呼叫<xref:System.Data.Odbc.OdbcConnection.ReleaseObjectPool%2A>，環境所保留的資源仍可。  
  
 已釋放環境控制代碼之後，新的要求<xref:System.Data.Odbc.OdbcConnection>建立新環境。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServerVersion">
      <MemberSignature Language="C#" Value="public override string ServerVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServerVersion" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.ServerVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ServerVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ServerVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得字串，其包含用戶端連接之伺服器的版本。</summary>
        <value>連接伺服器的版本。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果<xref:System.Data.Odbc.OdbcConnection.ServerVersion%2A>不支援基礎的 ODBC 驅動程式，空字串 ("") 會傳回。  
  
 <xref:System.Data.Odbc.OdbcConnection.ServerVersion%2A>屬性會採用 '*# #。 # #。 # # #*，' 其中前兩個數字的主要版本、 下面兩個的數字是否為次要版本，而且最後四位數的版本。 驅動程式必須呈現在這種形式的產品版本，但也可以附加為字串的特定產品的版本 (例如，"04.01.0000 Rdb 4.1")。 此字串會採用 '*major.minor.build*' 其中*主要*和*次要*是剛好兩位數和*建置*完全為四個數字。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">連接關閉。</exception>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public override System.Data.ConnectionState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ConnectionState State" />
      <MemberSignature Language="DocId" Value="P:System.Data.Odbc.OdbcConnection.State" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property State As ConnectionState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::ConnectionState State { System::Data::ConnectionState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ConnectionState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得連線目前的狀態。</summary>
        <value>
          <see cref="T:System.Data.ConnectionState" /> 值的位元組合。 預設值為 <see langword="Closed" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下列被允許狀態變更：  
  
-   從`Closed`至`Open`，並使用<xref:System.Data.Odbc.OdbcConnection.Open%2A>方法。  
  
-   從`Open`至`Closed`，使用<xref:System.Data.Odbc.OdbcConnection.Close%2A>或**處置**方法。  
  
> [!NOTE]
>  呼叫<xref:System.Data.Odbc.OdbcConnection.State%2A>屬性上的開啟連接會增加應用程式的額外負荷，因為每個這類呼叫會造成基礎的 ODBC 驅動程式 SQL_ATTR_CONNECTION_DEAD 呼叫以判斷連接是否仍然有效。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Odbc.OdbcConnection.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Odbc</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>如需這個成員的說明，請參閱 <see cref="M:System.ICloneable.Clone" />。</summary>
        <returns>新的 <see cref="T:System.Object" />，此物件是這個執行個體的複本。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個成員是明確介面成員實作， 只有在 <xref:System.Data.Odbc.OdbcConnection> 執行個體轉換成 <xref:System.ICloneable> 介面時，才能使用這個成員。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>