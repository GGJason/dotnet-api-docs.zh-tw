<Type Name="LockingPersistenceProvider" FullName="System.ServiceModel.Persistence.LockingPersistenceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f247b1033bbcd6013576f6a0b93353c70f425be2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30520112" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class LockingPersistenceProvider : System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LockingPersistenceProvider extends System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LockingPersistenceProvider&#xA;Inherits PersistenceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class LockingPersistenceProvider abstract : System::ServiceModel::Persistence::PersistenceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Persistence.PersistenceProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>所有實作鎖定的長期服務持續性提供者，均衍生自此抽象基底類別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 除了持續性之外，<xref:System.ServiceModel.Persistence.LockingPersistenceProvider> 類別也會實作服務狀態資料記錄的鎖定。 方法與互動的持續性資料 (例如`Load`方法) 有選擇性參數 (`lockInstance`)，定義上述資料的鎖定為解除或維持。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LockingPersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LockingPersistenceProvider(Guid id);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">與此持續性提供者執行個體關聯的唯一身分識別。</param>
        <summary>在衍生類別中實作時，建立 <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> 類別的新執行個體，並以指定的身分識別值設定。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginCreate">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>開始非同步作業，以便在持續性存放區中建立執行個體狀態資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">其狀態資訊要儲存至持續性存放區的執行個體。</param>
        <param name="timeout">作業必須在這段時間內完成而不逾時的間隔。</param>
        <param name="callback">在作業完成時接收通知的委派。</param>
        <param name="state">與非同步作業相關聯的狀態資訊。</param>
        <summary>開始非同步作業，以便使用參數在持續性存放區中建立執行個體狀態資訊。 此方法不會在儲存狀態資訊之後解除鎖定執行個體。</summary>
        <returns>非同步作業的狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate%2A> 方法，後者會採用一個額外的參數判斷執行個體是否已解除鎖定。 這個方法會傳遞`false`做為這個參數來呼叫方法的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, bool unlockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, unlockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, bool unlockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">其狀態資訊要儲存至持續性存放區的執行個體。</param>
        <param name="timeout">作業必須在這段時間內完成而不逾時的間隔。</param>
        <param name="unlockInstance">
          如果執行個體在持續性存放區中必須解除鎖定，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="callback">在作業完成時接收通知的委派。</param>
        <param name="state">與非同步作業相關聯的狀態資訊。</param>
        <summary>開始非同步作業，以便使用參數在持續性存放區中建立執行個體狀態資訊。 如果 <paramref name="unlockInstance" /> 參數值為 <see langword="true" />，則此方法會在儲存執行個體狀態之後解除其鎖定。</summary>
        <returns>非同步作業的狀態。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoad">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>開始非同步作業，以便根據狀態資訊在持續性存放區中載入執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">作業必須在這段時間內完成而不逾時的間隔。</param>
        <param name="callback">在作業完成時接收通知的委派。</param>
        <param name="state">與非同步作業相關聯的狀態資訊。</param>
        <summary>開始非同步作業，以便根據狀態資訊，使用參數在持續性存放區中載入執行個體。 這個方法不會鎖定執行個體。</summary>
        <returns>非同步作業的狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad%2A>，後者會採用額外的參數，指定執行個體必須在持續性存放區中鎖定。 這個方法會傳遞`false`做為這個參數來呼叫方法的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, bool lockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, bool lockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoad(System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, lockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, bool lockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">作業必須在這段時間內完成而不逾時的間隔。</param>
        <param name="lockInstance">
          如果執行個體必須鎖定，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="callback">在作業完成時接收通知的委派。</param>
        <param name="state">與非同步作業相關聯的狀態資訊。</param>
        <summary>開始非同步作業，以便根據狀態資訊，使用參數在持續性存放區中載入執行個體。 如果 <paramref name="lockInstance" /> 參數為 <see langword="true" />，則此方法會在載入執行個體狀態之後將其鎖定。</summary>
        <returns>非同步作業的狀態。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginLoadIfChanged">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>如果狀態資訊自上一次呼叫端載入資訊之後已變更，則開始非同步作業，以便從持續性存放區載入執行個體狀態資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">一段時間，持續性提供者會在經過這段時間之後中止此作業。</param>
        <param name="instanceToken">前一個 <see langword="Create" /> 或 <see langword="Update" /> 方法所傳回的權杖，代表呼叫者所持有的目前狀態。</param>
        <param name="callback">作業完成時要呼叫的方法。</param>
        <param name="state">使用者提供的物件，可區別這個特定非同步作業與其他作業。</param>
        <summary>在衍生的類別中實作時，代表 LoadIfChanged 階段的開始。 狀態資料從持續性存放區載入至持續性提供者，且持續性存放區的狀態資料變更時，LoadIfChanged 階段便會發生。 這個方法呼叫不會在持續性存放區中鎖定執行個體。</summary>
        <returns>非同步作業的狀態。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, bool lockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, lockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, bool lockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">一段時間，持續性提供者會在經過這段時間之後中止此作業。</param>
        <param name="instanceToken">前一個 <see langword="Create" /> 或 <see langword="Update" /> 方法所傳回的權杖，代表呼叫者所持有的目前狀態。</param>
        <param name="lockInstance">
          如果執行個體在持續性存放區中為鎖定狀態，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="callback">作業完成時要呼叫的方法。</param>
        <param name="state">使用者提供的物件，可區別這個特定非同步作業與其他作業。</param>
        <summary>在衍生的類別中實作時，代表 LoadIfChanged 階段的開始。 狀態資料從持續性存放區載入至持續性提供者，且持續性存放區的狀態資料變更時，LoadIfChanged 階段便會發生。 這個方法呼叫可讓您指定是否要在持續性存放區中鎖定執行個體。</summary>
        <returns>非同步作業的狀態。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUnlock">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUnlock (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUnlock(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUnlock(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUnlock (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUnlock(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">作業必須在這段時間內完成而不逾時的間隔。</param>
        <param name="callback">在作業完成時接收通知的委派。</param>
        <param name="state">與非同步作業相關聯的狀態資訊。</param>
        <summary>開始非同步作業，以便在持續性存放區中解除鎖定執行個體。</summary>
        <returns>非同步作業的狀態。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginUpdate">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>開始非同步作業，以便在持續性存放區中更新執行個體狀態資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public override IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">要在持續性存放區中更新其狀態資訊的執行個體。</param>
        <param name="timeout">作業必須在這段時間內完成而不逾時的間隔。</param>
        <param name="callback">在作業完成時接收通知的委派。</param>
        <param name="state">非同步作業的相關狀態資訊。</param>
        <summary>開始非同步作業，以便使用傳遞的參數在持續性存放區中更新執行個體狀態資訊。 這個作業不會在執行個體存放區中解除鎖定執行個體。</summary>
        <returns>非同步作業的狀態。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫<xref:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate%2A>方法，並傳遞`false`值`unlockInstance`參數。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, bool unlockInstance, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, bool unlockInstance, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.Boolean,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, unlockInstance As Boolean, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, bool unlockInstance, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">要在持續性存放區中更新其狀態資訊的執行個體。</param>
        <param name="timeout">作業必須在這段時間內完成而不逾時的間隔。</param>
        <param name="unlockInstance">
          如果必須在持續性存放區中的執行個體狀態更新之後鎖定執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="callback">在作業完成時接收通知的委派。</param>
        <param name="state">非同步作業的相關狀態資訊。</param>
        <summary>開始非同步作業，以便使用傳遞的參數在持續性存放區中更新執行個體狀態資訊。 如果 <paramref name="unlockInstance" /> 參數的值為 <see langword="true" />，則此作業會在持續性存放區中鎖定執行個體。</summary>
        <returns>非同步作業的狀態。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在持續性存放區中建立執行個體狀態資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public override object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">其狀態資訊必須儲存至持續性存放區的執行個體物件。</param>
        <param name="timeout">作業必須在這段時間內完成而不逾時的間隔。</param>
        <summary>在持續性存放區中使用傳遞至方法的參數建立執行個體狀態資訊。 這個方法不會在儲存執行個體狀態之後，於持續性存放區中解除鎖定執行個體。</summary>
        <returns>狀態資訊。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout, bool unlockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Create(System.Object,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan, unlockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">其狀態資訊要儲存至持續性存放區的執行個體物件。</param>
        <param name="timeout">作業必須在這段時間內完成而不逾時的間隔。</param>
        <param name="unlockInstance">
          如果執行個體在持續性存放區中必須解除鎖定，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>這個方法會在持續性存放區中使用傳遞至方法的參數建立執行個體狀態資訊。 如果 <paramref name="unlockInstance" /> 參數的值為 <see langword="true" />，則此方法會在執行個體存放區中解除鎖定執行個體。</summary>
        <returns>狀態資訊。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUnlock">
      <MemberSignature Language="C#" Value="public abstract void EndUnlock (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndUnlock(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.EndUnlock(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndUnlock (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndUnlock(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">解除鎖定作業傳回的結果。</param>
        <summary>結束非同步作業，以便在持續性存放區中解除鎖定執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>從執行個體存放區載入執行個體狀態資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Load(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">一段時間，持續性提供者會在經過以後中止這次嘗試。</param>
        <summary>從持續性存放區載入服務狀態資訊，而不鎖定執行個體。</summary>
        <returns>服務狀態資訊。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會叫用<xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Load%2A>方法`lockInstance`參數設定為`false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout, bool lockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout, bool lockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Load(System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan, lockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout, bool lockInstance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="timeout">一段期間，持續性提供者會在經過這段期間之後中止此作業。</param>
        <param name="lockInstance">
          如果執行個體必須鎖定，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>在鎖定執行個體之後，從持續性存放區載入狀態資訊。</summary>
        <returns>狀態資訊。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadIfChanged">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>如果狀態資訊自上一次呼叫端載入資訊之後已變更，則從持續性存放區載入執行個體狀態資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public override bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">一段時間，持續性提供者會在經過這段時間之後中止此作業。</param>
        <param name="instanceToken">前一個 <see langword="Create" /> 或 <see langword="Update" /> 方法呼叫傳回的權杖，代表呼叫端所持有的目前狀態。</param>
        <param name="instance">實際執行個體狀態資訊。</param>
        <summary>如果狀態資訊自上一次呼叫端載入資訊之後已變更，則從持續性存放區載入執行個體狀態資訊。 這個方法不會在持續性存放區中鎖定執行個體。</summary>
        <returns>
          如果應在此作業結束時於持續性存放區中鎖定執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, bool lockInstance, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, bool lockInstance, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, lockInstance As Boolean, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, bool lockInstance, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="lockInstance" Type="System.Boolean" />
        <Parameter Name="instance" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">一段時間，持續性提供者會在經過這段時間之後中止此作業。</param>
        <param name="instanceToken">前一個 Create 或 Update 方法呼叫傳回的權杖，代表呼叫端所持有的目前狀態。</param>
        <param name="lockInstance">
          如果應在此作業結束時於持續性存放區中鎖定執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="instance">執行個體狀態資訊。</param>
        <summary>如果狀態資訊自上一次呼叫端載入資訊之後已變更，則從持續性存放區載入執行個體狀態資訊。 這個方法還可讓呼叫端指定是否在持續性存放區中鎖定執行個體。</summary>
        <returns>
          如果應在此作業結束時於持續性存放區中鎖定執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Unlock">
      <MemberSignature Language="C#" Value="public abstract void Unlock (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unlock(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Unlock(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Unlock (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Unlock(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">一段時間，持續性提供者會在經過這段時間之後中止作業。</param>
        <summary>解除鎖定執行個體，該執行個體的識別碼是在持續性存放區中建構 <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> 物件時指定。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Update">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>在持續性存放區中更新執行個體狀態資訊。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public override object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">執行個體狀態資訊。</param>
        <param name="timeout">一段時間，持續性提供者會在經過這段時間之後中止作業。</param>
        <summary>在衍生類別中實作時，會更新持續性存放區中的執行個體狀態資訊。 這個方法不會在持續性存放區中的執行個體狀態資訊更新之後，解除鎖定執行個體。</summary>
        <returns>執行個體狀態資訊。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout, bool unlockInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.LockingPersistenceProvider.Update(System.Object,System.TimeSpan,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan, unlockInstance As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout, bool unlockInstance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="unlockInstance" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="instance">執行個體狀態資訊。</param>
        <param name="timeout">一段時間，持續性提供者會在經過這段時間之後中止作業。</param>
        <param name="unlockInstance">
          如果在執行個體狀態資訊更新之後解除鎖定執行個體，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <summary>在衍生類別中實作時，會更新持續性存放區中的執行個體狀態資訊。 這個方法不會在持續性存放區中的執行個體狀態資訊更新之後，解除鎖定執行個體。</summary>
        <returns>執行個體狀態資訊。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>