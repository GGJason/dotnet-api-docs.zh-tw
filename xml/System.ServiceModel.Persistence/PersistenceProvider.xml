<Type Name="PersistenceProvider" FullName="System.ServiceModel.Persistence.PersistenceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f540f541c0b55c4d41adf24ce588c09261f2acc6" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39865861" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PersistenceProvider : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PersistenceProvider extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.PersistenceProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PersistenceProvider&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PersistenceProvider abstract : System::ServiceModel::Channels::CommunicationObject" />
  <TypeSignature Language="F#" Value="type PersistenceProvider = class&#xA;    inherit CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="c5021-101">所有長期服務持續性提供者，均衍生自此抽象基底類別。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c5021-101">The abstract base class from which all durable service persistence providers are derived.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5021-102">使用者可建立衍生自此型別的類別，來建立使用自訂持續型儲存 (如協力廠商資料庫、檔案系統，或遠端存取的儲存系統) 的長期服務持續性提供者。</span><span class="sxs-lookup"><span data-stu-id="c5021-102">Users can create classes derived from this type to create durable service persistence providers that use custom persistence stores, such as third-party databases, the file system, or storage systems accessed remotely.</span></span> <span data-ttu-id="c5021-103">若要建立此型別的系統提供實作，並使用 Microsoft SQL Server 做為持續性存放區，請參閱 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>。</span><span class="sxs-lookup"><span data-stu-id="c5021-103">To create a system-provided implementation of this type that uses Microsoft SQL Server as a persistence store, see <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="c5021-104">建立持續性提供者實作時，務必要在新提供者的方法中 (如 <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>) 維護執行緒的原始身分識別。</span><span class="sxs-lookup"><span data-stu-id="c5021-104">When creating persistence provider implementations, it is important to maintain the thread's original identity in the new provider's methods (such as <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A>.</span></span> <span data-ttu-id="c5021-105">否則可能會產生安全性漏洞，因為作業可能會在錯誤的身分識別下執行。</span><span class="sxs-lookup"><span data-stu-id="c5021-105">Otherwise, security loopholes could be created, because operations would then run under the wrong identity.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5021-106">若此型別的實作使用檔案系統做為持續性存放區，請參閱 DurableServiceFactory SDK 範例中的 FilePersistenceProviderFactory.cs 檔。</span><span class="sxs-lookup"><span data-stu-id="c5021-106">For an implementation of this type that uses the file system as a persistence store, see the FilePersistenceProviderFactory.cs file in the DurableServiceFactory SDK sample.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PersistenceProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.#ctor(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (id As Guid)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PersistenceProvider(Guid id);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.PersistenceProvider : Guid -&gt; System.ServiceModel.Persistence.PersistenceProvider" Usage="new System.ServiceModel.Persistence.PersistenceProvider id" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="c5021-107">要儲存的服務狀態資料之唯一識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-107">The unique identifier of the service state data being saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-108">在衍生類別中實作時，初始化 <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-108">When implemented in a derived class, initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-109">下列程式碼範例會示範如何使用 <xref:System.ServiceModel.Persistence.PersistenceProvider> 建構函式。</span><span class="sxs-lookup"><span data-stu-id="c5021-109">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider> constructor.</span></span> <span data-ttu-id="c5021-110">這個程式碼範例是 FilePersistenceProviderFactory.cs 檔案中 DurableServiceFactory SDK 範例的一部分。</span><span class="sxs-lookup"><span data-stu-id="c5021-110">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="c5021-111">如需詳細資訊，請參閱 DurableServiceFactory SDK 範例。</span><span class="sxs-lookup"><span data-stu-id="c5021-111">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCreate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginCreate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCreate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginCreate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginCreate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCreate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginCreate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c5021-112">實際執行個體狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-112">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c5021-113">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-113">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c5021-114">作業完成時要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-114">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c5021-115">使用者提供的物件，可區別這個特定非同步作業與其他作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-115">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-116">在衍生的類別中實作時，代表「建立」階段的開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-116">When implemented in a derived class, represents the beginning of the Create phase.</span>
          </span>
          <span data-ttu-id="c5021-117">「建立」階段發生在服務執行個體記錄首次在持續性存放區中建立時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-117">The Create phase occurs when service instance records are first created in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-118">
            <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> 非同步方法呼叫的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-118">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-119">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-119">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#14](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginDelete">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginDelete (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginDelete(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginDelete (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginDelete(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginDelete : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginDelete (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c5021-120">實際執行個體狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-120">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c5021-121">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-121">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c5021-122">作業完成時要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-122">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c5021-123">使用者提供的物件，可區別這個特定非同步作業與其他作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-123">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-124">在衍生的類別中實作時，代表「刪除」階段的開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-124">When implemented in a derived class, represents the beginning of the Delete phase.</span>
          </span>
          <span data-ttu-id="c5021-125">「刪除」階段發生在服務狀態資料從持續性存放區永久刪除時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-125">The Delete phase occurs when service state data is permanently deleted from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-126">
            <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> 非同步方法呼叫的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-126">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginDelete(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-127">下列程式碼會示範如何實作 `BeginDelete` 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-127">The following code demonstrates how to implement the `BeginDelete` method.</span></span> <span data-ttu-id="c5021-128">這個程式碼範例是 FilePersistenceProviderFactory.cs 檔案中 DurableServiceFactory SDK 範例的一部分。</span><span class="sxs-lookup"><span data-stu-id="c5021-128">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="c5021-129">如需詳細資訊，請參閱 DurableServiceFactory SDK 範例。</span><span class="sxs-lookup"><span data-stu-id="c5021-129">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#6](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoad">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginLoad (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoad(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginLoad (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginLoad(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoad : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginLoad (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="c5021-130">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-130">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c5021-131">作業完成時要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-131">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c5021-132">使用者提供的物件，可區別這個特定非同步作業與其他作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-132">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-133">在衍生的類別中實作時，代表「載入」階段的開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-133">When implemented in a derived class, represents the beginning of the Load phase.</span>
          </span>
          <span data-ttu-id="c5021-134">「載入」階段發生在狀態資料從持續性存放區載入至持續性提供者時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-134">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-135">
            <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" /> 非同步方法呼叫的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-135">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoad(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-136">下列程式碼會示範如何實作 `BeginLoad` 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-136">The following code demonstrates how to implement the `BeginLoad` method.</span></span> <span data-ttu-id="c5021-137">這個程式碼範例是 FilePersistenceProviderFactory.cs 檔案中 DurableServiceFactory SDK 範例的一部分。</span><span class="sxs-lookup"><span data-stu-id="c5021-137">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="c5021-138">如需詳細資訊，請參閱 DurableServiceFactory SDK 範例。</span><span class="sxs-lookup"><span data-stu-id="c5021-138">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#7](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginLoadIfChanged (TimeSpan timeout, object instanceToken, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginLoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BeginLoadIfChanged (timeout As TimeSpan, instanceToken As Object, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginLoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginLoadIfChanged : TimeSpan * obj * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginLoadIfChanged (timeout, instanceToken, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="c5021-139">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-139">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="instanceToken">
          <span data-ttu-id="c5021-140">前一個 <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> 或 <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> 所傳回的權杖，代表呼叫者所持有的目前狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-140">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> that represents the current state held by the caller.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c5021-141">作業完成時要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-141">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c5021-142">使用者提供的物件，可區別這個特定非同步作業與其他作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-142">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-143">在衍生的類別中實作時，代表 LoadIfChanged 階段的開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-143">When implemented in a derived class, represents the beginning of the LoadIfChanged phase.</span>
          </span>
          <span data-ttu-id="c5021-144">LoadIfChanged 階段發生在狀態資料從持續性存放區載入至持續性提供者，且持續性存放區的狀態資料變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-144">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-145">
            <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" /> 非同步方法呼叫的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-145">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged(System.TimeSpan,System.Object,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-146">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-146">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#11](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginUpdate">
      <MemberSignature Language="C#" Value="public abstract IAsyncResult BeginUpdate (object instance, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginUpdate(object instance, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BeginUpdate (instance As Object, timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract IAsyncResult ^ BeginUpdate(System::Object ^ instance, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginUpdate : obj * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="persistenceProvider.BeginUpdate (instance, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c5021-147">實際執行個體狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-147">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c5021-148">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-148">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="c5021-149">作業完成時要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-149">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="c5021-150">使用者提供的物件，可區別這個特定非同步作業與其他作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-150">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-151">在衍生的類別中實作時，代表「更新」階段的開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-151">When implemented in a derived class, represents the beginning of the Update phase.</span>
          </span>
          <span data-ttu-id="c5021-152">「更新」階段發生在更新持續性存放區中的服務狀態資料時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-152">The Update phase occurs when service state data is updated in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-153">
            <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> 非同步方法呼叫的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-153">The state of the <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate(System.Object,System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-154">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-154">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.BeginUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#17](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public abstract object Create (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Create(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Create (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Create(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Create : obj * TimeSpan -&gt; obj" Usage="persistenceProvider.Create (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c5021-155">實際執行個體狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-155">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c5021-156">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-156">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-157">在衍生類別中實作時，會在持續性存放區中建立服務狀態記錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-157">When implemented in a derived class, creates a service state record in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-158">對應到剛儲存之狀態的執行個體權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-158">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="c5021-159">這可以傳遞至 <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />，以判斷持續性存放區中的狀態是否不同於「建立」呼叫時的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-159">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-160">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-160">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Create%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#15](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public abstract void Delete (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Delete(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Delete (instance As Object, timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Delete(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Delete : obj * TimeSpan -&gt; unit" Usage="persistenceProvider.Delete (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c5021-161">實際執行個體狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-161">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c5021-162">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-162">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-163">在衍生類別中實作時，會從持續性存放區中永久刪除服務狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-163">When implemented in a derived class, permanently deletes service state information from the persistence store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-164">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-164">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Delete%2A> method.</span></span> <span data-ttu-id="c5021-165">這個程式碼範例是 FilePersistenceProviderFactory.cs 檔案中 DurableServiceFactory SDK 範例的一部分。</span><span class="sxs-lookup"><span data-stu-id="c5021-165">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="c5021-166">如需詳細資訊，請參閱 DurableServiceFactory SDK 範例。</span><span class="sxs-lookup"><span data-stu-id="c5021-166">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#9](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCreate">
      <MemberSignature Language="C#" Value="public abstract object EndCreate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndCreate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndCreate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndCreate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndCreate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCreate : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndCreate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c5021-167">作業結果的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-167">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-168">在衍生的類別中實作時，代表「建立」階段的結束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-168">When implemented in a derived class, represents the end of the Create phase.</span>
          </span>
          <span data-ttu-id="c5021-169">「建立」階段發生在服務狀態記錄首次在持續性儲存中建立時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-169">The Create phase occurs when service state records are first created in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-170">對應到剛儲存之狀態的執行個體權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-170">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="c5021-171">這可以傳遞至 <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />，以判斷持續性存放區中的狀態是否不同於「建立」呼叫時的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-171">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-172">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-172">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndCreate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#16](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndDelete">
      <MemberSignature Language="C#" Value="public abstract void EndDelete (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndDelete(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndDelete(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub EndDelete (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void EndDelete(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndDelete : IAsyncResult -&gt; unit" Usage="persistenceProvider.EndDelete result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c5021-173">作業結果的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-173">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-174">在衍生的類別中實作時，代表「刪除」階段的結束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-174">When implemented in a derived class, represents the end of the Delete phase.</span>
          </span>
          <span data-ttu-id="c5021-175">「刪除」階段發生在狀態資料從持續性存放區永久刪除時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-175">The Delete phase occurs when state data is permanently deleted from the persistence store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-176">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-176">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndDelete%2A> method.</span></span> <span data-ttu-id="c5021-177">這個程式碼範例是 FilePersistenceProviderFactory.cs 檔案中 DurableServiceFactory SDK 範例的一部分。</span><span class="sxs-lookup"><span data-stu-id="c5021-177">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="c5021-178">如需詳細資訊，請參閱 DurableServiceFactory SDK 範例。</span><span class="sxs-lookup"><span data-stu-id="c5021-178">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#5](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoad">
      <MemberSignature Language="C#" Value="public abstract object EndLoad (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndLoad(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoad(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndLoad (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndLoad(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndLoad : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndLoad result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c5021-179">作業結果的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-179">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-180">在衍生的類別中實作時，代表「載入」階段的結束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-180">When implemented in a derived class, represents the end of the Load phase.</span>
          </span>
          <span data-ttu-id="c5021-181">「載入」階段發生在狀態資料從持續性存放區載入至持續性提供者時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-181">The Load phase occurs when state data is loaded into the persistence provider from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-182">服務狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-182">The service state information.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-183">下列程式碼示範如何使用 `EndLoad` 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-183">The following code demonstrates how to use the `EndLoad` method.</span></span> <span data-ttu-id="c5021-184">這個程式碼範例是 FilePersistenceProviderFactory.cs 檔案中 DurableServiceFactory SDK 範例的一部分。</span><span class="sxs-lookup"><span data-stu-id="c5021-184">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="c5021-185">如需詳細資訊，請參閱 DurableServiceFactory SDK 範例。</span><span class="sxs-lookup"><span data-stu-id="c5021-185">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool EndLoadIfChanged (IAsyncResult result, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool EndLoadIfChanged(class System.IAsyncResult result, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged(System.IAsyncResult,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EndLoadIfChanged (result As IAsyncResult, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool EndLoadIfChanged(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="abstract member EndLoadIfChanged : IAsyncResult *  -&gt; bool&#xA;override this.EndLoadIfChanged : IAsyncResult *  -&gt; bool" Usage="persistenceProvider.EndLoadIfChanged (result, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c5021-186">作業結果的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-186">A reference to the result of the operation.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="c5021-187">實際執行個體狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-187">The actual instance state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-188">在衍生的類別中實作時，代表 LoadIfChanged 階段的結束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-188">When implemented in a derived class, represents the end of the LoadIfChanged phase.</span>
          </span>
          <span data-ttu-id="c5021-189">LoadIfChanged 階段發生在狀態資料從持續性存放區載入至持續性提供者，且持續性存放區的狀態資料變更時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-189">The LoadIfChanged phase occurs when state data is loaded into the persistence provider from the persistence store, and the state data in the persistence store has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-190">若執行個體的 <see langword="true" /> 參數已設定成持續性存放區中的最新複本，則為 <see langword="out" />，若本機快取的狀態已是最新的，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-190">
              <see langword="true" /> if the instance <see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up-to-date.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-191">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-191">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndLoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#12](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndUpdate">
      <MemberSignature Language="C#" Value="public abstract object EndUpdate (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EndUpdate(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function EndUpdate (result As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ EndUpdate(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndUpdate : IAsyncResult -&gt; obj" Usage="persistenceProvider.EndUpdate result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="c5021-192">作業結果的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-192">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-193">代表「更新」階段的結束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-193">Represents the end of the Update phase.</span>
          </span>
          <span data-ttu-id="c5021-194">「更新」階段發生在更新持續性存放區中的服務狀態記錄時。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-194">The Update phase occurs when service state records are updated in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-195">對應到剛儲存之狀態的執行個體權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-195">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="c5021-196">這可以傳遞至 <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />，以判斷持續性存放區中的狀態是否不同於「建立」呼叫時的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-196">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-197">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-197">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.EndUpdate%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#19](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Guid Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid Id { Guid get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : Guid" Usage="System.ServiceModel.Persistence.PersistenceProvider.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c5021-198">代表與這個執行個體相關的 <see cref="T:System.Guid" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-198">Represents the <see cref="T:System.Guid" /> associated with this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c5021-199">與這個執行個體相關聯的 GUID。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-199">The GUID associated with this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-200">下列程式碼示範如何使用 <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="c5021-200">The following code demonstrates how to use the <xref:System.ServiceModel.Persistence.PersistenceProvider.Id%2A> property.</span></span>  
  
 [!code-csharp[PersistenceProvider#10](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public abstract object Load (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Load(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Load(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Load (timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Load(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Load : TimeSpan -&gt; obj" Usage="persistenceProvider.Load timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="c5021-201">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-201">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-202">在衍生類別中實作時，會從持續性存放區中載入服務狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-202">When implemented in a derived class, loads service state information from the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-203">載入的執行個體狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-203">The loaded instance state.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c5021-204">在 <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> 方法中對安全性權杖所完成的變更；若沒有還原，則對往後的訊息處理持續有效。</span><span class="sxs-lookup"><span data-stu-id="c5021-204">Changes made to the security token in the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method, if not reverted, stay in effect for the remainder of that message's processing.</span></span> <span data-ttu-id="c5021-205">這表示服務作業的使用者程式碼、透過發送器的回應訊息路徑，以及任何錯誤路徑，都會在變更的安全性內容中執行。</span><span class="sxs-lookup"><span data-stu-id="c5021-205">This means that the service operation's user code, the response message path through the dispatcher, as well as any error paths, run in the changed security context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c5021-206">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-206">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Load%2A> method.</span></span> <span data-ttu-id="c5021-207">這個程式碼範例是 FilePersistenceProviderFactory.cs 檔案中 DurableServiceFactory SDK 範例的一部分。</span><span class="sxs-lookup"><span data-stu-id="c5021-207">This code example is part of the DurableServiceFactory SDK sample from the FilePersistenceProviderFactory.cs file.</span></span> <span data-ttu-id="c5021-208">如需詳細資訊，請參閱 DurableServiceFactory SDK 範例。</span><span class="sxs-lookup"><span data-stu-id="c5021-208">For more information, see the DurableServiceFactory SDK sample.</span></span>  
  
 [!code-csharp[PersistenceProvider#3](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIfChanged">
      <MemberSignature Language="C#" Value="public virtual bool LoadIfChanged (TimeSpan timeout, object instanceToken, out object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadIfChanged(valuetype System.TimeSpan timeout, object instanceToken, [out] object&amp; instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadIfChanged (timeout As TimeSpan, instanceToken As Object, ByRef instance As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool LoadIfChanged(TimeSpan timeout, System::Object ^ instanceToken, [Runtime::InteropServices::Out] System::Object ^ % instance);" />
      <MemberSignature Language="F#" Value="abstract member LoadIfChanged : TimeSpan * obj *  -&gt; bool&#xA;override this.LoadIfChanged : TimeSpan * obj *  -&gt; bool" Usage="persistenceProvider.LoadIfChanged (timeout, instanceToken, instance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="instanceToken" Type="System.Object" />
        <Parameter Name="instance" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="c5021-209">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-209">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="instanceToken">
          <span data-ttu-id="c5021-210">前一個 <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> 或 <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" /> 所傳回的權杖，代表呼叫者所持有的目前狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-210">The token returned by a previous <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Create(System.Object,System.TimeSpan)" /> or <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />, which represents the current state held by the caller.</span>
          </span>
        </param>
        <param name="instance">
          <span data-ttu-id="c5021-211">實際執行個體狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-211">The actual instance state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-212">在衍生的類別中實作時，如果該資料已變更，就會從持續性存放區中載入服務狀態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-212">When implemented in a derived class, loads service state information from the persistence store if that data has been changed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-213">如果 <paramref name="instance" /><see langword="out" /> 參數已設定成持續性儲存區中的最新複本，則為 <see langword="true" />；若本機快取的狀態已是最新的，則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-213">
              <see langword="true" /> if the <paramref name="instance" /><see langword="out" /> parameter has been set with the latest copy from the persistence store; <see langword="false" /> if the locally cached state is already up to date.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-214">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-214">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#13](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public abstract object Update (object instance, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Update(object instance, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.PersistenceProvider.Update(System.Object,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Update (instance As Object, timeout As TimeSpan) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ Update(System::Object ^ instance, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Update : obj * TimeSpan -&gt; obj" Usage="persistenceProvider.Update (instance, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="c5021-215">實際執行個體狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-215">The actual instance state.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="c5021-216">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-216">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c5021-217">在衍生類別中實作時，會更新持續性存放區中的服務狀態記錄。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-217">When implemented in a derived class, updates service state records in the persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c5021-218">對應到剛儲存之狀態的執行個體權杖。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-218">The instance token corresponding to the state just saved.</span>
          </span>
          <span data-ttu-id="c5021-219">這可以傳遞至 <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" />，以判斷持續性存放區中的狀態是否不同於「建立」呼叫時的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c5021-219">This can be passed to <see cref="M:System.ServiceModel.Persistence.PersistenceProvider.LoadIfChanged(System.TimeSpan,System.Object,System.Object@)" /> to determine whether the state in the persistence store differs from the state when Create was called.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c5021-220">下列程式碼會示範如何實作 <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A> 方法。</span><span class="sxs-lookup"><span data-stu-id="c5021-220">The following code demonstrates how to implement the <xref:System.ServiceModel.Persistence.PersistenceProvider.Update%2A> method.</span></span>  
  
 [!code-csharp[PersistenceProvider#18](~/samples/snippets/csharp/VS_Snippets_CFX/persistenceprovider/cs/filepersistenceprovider.cs#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>