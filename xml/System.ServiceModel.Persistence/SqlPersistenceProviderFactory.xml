<Type Name="SqlPersistenceProviderFactory" FullName="System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4cb6bfc605f30f34fff72e1d63be0acbf5446094" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39988646" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlPersistenceProviderFactory extends System.ServiceModel.Persistence.PersistenceProviderFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlPersistenceProviderFactory&#xA;Inherits PersistenceProviderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPersistenceProviderFactory : System::ServiceModel::Persistence::PersistenceProviderFactory" />
  <TypeSignature Language="F#" Value="type SqlPersistenceProviderFactory = class&#xA;    inherit PersistenceProviderFactory" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Persistence.PersistenceProviderFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="2c6c8-101">系統提供的 <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /> 實作，用來建立 <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> 執行個體，該執行個體會使用 SQL 資料庫儲存持續性的服務狀態資料。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2c6c8-101">A system-provided <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /> implementation used to create a <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> instance that uses a SQL database to store persisted service state data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-102"><xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 類別代表全功能的長期服務持續性提供者的處理站類別。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-102">The <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class represents a factory class for a fully-functional, durable service persistence provider.</span></span> <span data-ttu-id="2c6c8-103">您可以使用此系統提供的提供者來持續儲存並擷取長期 WCF 服務的狀態資訊。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-103">You can use this system-provided provider to persist and retrieve state information about a durable WCF service.</span></span>  
  
 <span data-ttu-id="2c6c8-104">除了持續性之外，<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 類別建立的提供者也繼承了抽象 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> 類別，以實作服務狀態資料記錄的鎖定。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-104">In addition to persistence, the provider created by the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class implements locking of service state data records by inheriting from the abstract <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> class.</span></span>  <span data-ttu-id="2c6c8-105">持續性資料互動的方法 (例如<xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A>或是<xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) 擁有選擇性的參數 (`lockInstance`)，定義資料的鎖定為解除或維持。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-105">Methods that interact with persisted data (such as <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> or <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) have an optional parameter (`lockInstance`) that defines whether locks on the data in question are released or maintained.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c6c8-106">根據預設，<xref:System.ServiceModel.Persistence.PersistenceException> 擲回的 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 例外狀況不會隱藏其例外狀況詳細資料。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-106"><xref:System.ServiceModel.Persistence.PersistenceException> exceptions thrown by <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> do not have their exception details hidden by default.</span></span> <span data-ttu-id="2c6c8-107">若要防止安全性弱點，可以隱藏這些詳細資料設定<xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A>至`false`。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-107">To protect against security vulnerabilities, these details can be hidden by setting <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2c6c8-108">SQL 持續性提供者會在 SQL Server 資料庫儲存與擷取資料。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-108">The SQL Persistence Provider stores and retrieves data from a SQL Server database.</span></span> <span data-ttu-id="2c6c8-109">主機必須建立安全的 SQL Server 環境，避免攻擊者讀/寫資料庫內 (或應用程式與資料庫間通訊) 的執行個體狀態。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-109">The host must create a secure SQL Server environment to protect against attackers gaining read/write access to the instance state either in the database or on the wire between the application and the database.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2c6c8-110">初始化 <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-111"><xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 類別的各個多載建構函式提供了多種參數，以進行下列設定︰</span><span class="sxs-lookup"><span data-stu-id="2c6c8-111">Overloads of the constructor for the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class provide parameters for setting the following:</span></span>  
  
-   <span data-ttu-id="2c6c8-112">用來存取 SQL 資料庫的連接字串。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-112">The connection string used for accessing the SQL database.</span></span>  
  
-   <span data-ttu-id="2c6c8-113">鎖定逾時，用來定義鎖定擁有權的有效期間。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-113">The lock time-out used for defining lock ownership duration.</span></span>  
  
-   <span data-ttu-id="2c6c8-114">持續性資料會序列化為 XML 或二進位資料。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-114">Whether the persistence data is serialized as XML or binary data.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : System.Collections.Specialized.NameValueCollection -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="2c6c8-115">新的持續性提供者處理站所使用的參數集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-115">The collection of parameters used by the new persistence provider factory.</span>
          </span>
          <span data-ttu-id="2c6c8-116">有效參數包括 <see langword="lockTimeout" />、<see langword="connectionStringName" /> 與 <see langword="serializeAsText" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-116">Valid parameters include <see langword="lockTimeout" />, <see langword="connectionStringName" />, and <see langword="serializeAsText" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-117">初始化 <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> 類別的新執行個體，以指定的參數集合加以設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified parameter collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-118">此建構函式可用來任意指定 `lockTimeout`、`connectionString` 與 `serializeAsText`，而不用指定其他建構函式所需的其他參數 (例如，直接指定 `connectionString` 與 `lockTimeout` 參數，而不用指定 `serializeAsText` 參數)。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-118">This constructor can be used to arbitrarily specify `lockTimeout`, `connectionString`, and `serializeAsText` without specifying the other parameters as required by the other constructors (for example, to specify the `connectionString` and `lockTimeout` parameters without specifying the `serializeAsText` parameter.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c6c8-119">下列程式碼範例示範如何使用參數集合，來建立 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-119">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a parameters collection.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#3](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="2c6c8-120">新的持續性提供者執行個體的連接參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-120">The connection parameters for the new persistence provider instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-121">初始化 <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> 類別的新執行個體，以指定的連線字串設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2c6c8-122">下列程式碼範例示範如何使用連線字串，來建立 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-122">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class using a connection string.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#2](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool serializeAsText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, serializeAsText As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString, bool serializeAsText);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string * bool -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory (connectionString, serializeAsText)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="serializeAsText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="2c6c8-123">新的持續性提供者執行個體的連接參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-123">The connection parameters for the new persistence provider instance.</span>
          </span>
        </param>
        <param name="serializeAsText">
          <span data-ttu-id="2c6c8-124">指定資料是否要序列化成文字，而非二進位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-124">Specifies whether data is serialized as text rather than binary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-125">初始化 <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> 類別的新執行個體，以指定的連線字串與 <see langword="serializeAsText" /> 參數加以設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-125">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string and <see langword="serializeAsText" /> parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-126">預設值`serializeAsText`是`false`，表示持續性資訊會序列化為二進位資料。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-126">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c6c8-127">下列程式碼範例示範如何建立 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-127">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#1](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool serializeAsText, valuetype System.TimeSpan lockTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, serializeAsText As Boolean, lockTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString, bool serializeAsText, TimeSpan lockTimeout);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string * bool * TimeSpan -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory (connectionString, serializeAsText, lockTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="serializeAsText" Type="System.Boolean" />
        <Parameter Name="lockTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="2c6c8-128">新的持續性提供者處理站執行個體的連接參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-128">The connection parameters for the new persistence provider factory instance.</span>
          </span>
        </param>
        <param name="serializeAsText">
          <span data-ttu-id="2c6c8-129">指定資料是否要序列化成文字，而非二進位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-129">Specifies whether data is serialized as text rather than binary.</span>
          </span>
        </param>
        <param name="lockTimeout">
          <span data-ttu-id="2c6c8-130">鎖定擁有權的逾時值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-130">The time-out for lock ownership.</span>
          </span>
          <span data-ttu-id="2c6c8-131">經過此時間後，鎖定的執行個體會自動解除鎖定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-131">Locked instances are automatically unlocked after this time period.</span>
          </span>
          <span data-ttu-id="2c6c8-132">若逾時值為 <see langword="TimeSpan.Zero" />，表示不會使用鎖定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-132">A time-out of <see langword="TimeSpan.Zero" /> specifies that no locking is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-133">初始化 <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> 類別的新執行個體，以指定的連線字串、 <see langword="serializeAsText" /> 與 <see langword="lockTimeout" />參數加以設定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-133">Initializes a new instance of the <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" /> class, configured with the specified connection string, <see langword="serializeAsText" />, and <see langword="lockTimeout" /> parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-134">預設值`serializeAsText`是`false`，表示持續性資訊會序列化為二進位資料。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-134">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
 <span data-ttu-id="2c6c8-135">預設值`lockTimeout`是`TimeSpan.Zero`，這表示鎖定未使用。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-135">The default value for `lockTimeout` is `TimeSpan.Zero`, which indicates that locking is not used.</span></span> <span data-ttu-id="2c6c8-136">如果`TimeSpan.MaxValue`使用時，則會無限期地維持鎖定。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-136">If `TimeSpan.MaxValue` is used, then locks are maintained indefinitely.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c6c8-137">下列程式碼範例示範如何建立 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-137">The following code example shows how to create a new instance of the <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> class.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#0](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c6c8-138">取得使用這個處理站建立的持續性提供者執行個體的連接參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-138">Gets the connection parameters for persistence provider instances created with this factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c6c8-139">使用這個處理站建立的持續性提供者執行個體的連接參數。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-139">The connection parameters for persistence provider instances created with this factory.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="2c6c8-140">下列程式碼範例說明如何設定並存取 `ConnectionString` 屬性。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-140">The following code example shows how to set and access the `ConnectionString` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#4](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Persistence.PersistenceProvider CreateProvider(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateProvider (id As Guid) As PersistenceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Persistence::PersistenceProvider ^ CreateProvider(Guid id);" />
      <MemberSignature Language="F#" Value="override this.CreateProvider : Guid -&gt; System.ServiceModel.Persistence.PersistenceProvider" Usage="sqlPersistenceProviderFactory.CreateProvider id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Persistence.PersistenceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">
          <span data-ttu-id="2c6c8-141">要建立的持續性提供者之唯一識別碼。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-141">The unique identifier of the persistence provider being created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-142">初始化 <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> 類別的新執行個體，此個體使用 SQL 資料庫作為其持續性存放區。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-142">Initializes a new <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> instance that uses a SQL database as its persistence store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c6c8-143">新建立的 <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-143">A newly-created <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-144">初始化的持續性提供者會使用建立處理站的目前參數 (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>、<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A> 與 <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>)，即使持續性提供者建立後，Factory 的參數有變更。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-144">The initialized persistence provider uses the current parameters of the creating factory (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A>, and <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), even if the factory's parameters are changed after the persistence provider is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c6c8-145">以下程式碼範例將說明如何執行 `CreateProvider` 方法。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-145">The following code example shows how to execute the `CreateProvider` method.</span></span> <span data-ttu-id="2c6c8-146">注意，產生的提供者會當作 <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> 執行個體來存取。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-146">Note that the resulting provider is accessed as a <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> instance.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#7](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c6c8-147">取得當此處理站建立的持續性提供者關閉時所用的預設逾時值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-147">Gets the default time-out value used when persistence providers created with this factory are closed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c6c8-148">預設逾時值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-148">The default time-out value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-149">關閉逾時的預設值為 15 秒。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-149">The default value for close time-out is 15 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c6c8-150">取得當持續性提供者開啟時所用的預設逾時值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-150">Gets the default time-out value used when persistence provider is opened.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c6c8-151">預設逾時值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-151">The default time-out value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-152">開啟逾時的預設值為 15 秒。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-152">The default value for open time-out is 15 seconds.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan LockTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LockTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LockTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan LockTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LockTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c6c8-153">鎖定擁有權的逾時，此執行個體建立的持續性提供者執行個體會使用它。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-153">The time-out for lock ownership used by persistence provider instances created by this instance.</span>
          </span>
          <span data-ttu-id="2c6c8-154">經過此時間後，鎖定的執行個體會自動解除鎖定。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-154">Locked instances are automatically unlocked after this time period.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c6c8-155">鎖定擁有權的逾時值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-155">The time-out value for lock ownership.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-156">若逾時值為 `TimeSpan.Zero`，表示不會使用鎖定。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-156">A time-out of `TimeSpan.Zero` specifies that no locking is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c6c8-157">下列程式碼範例示範如何存取 `LockTimeout` 屬性。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-157">The following code example shows how to access the `LockTimeout` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#5](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberSignature Language="F#" Value="override this.OnAbort : unit -&gt; unit" Usage="sqlPersistenceProviderFactory.OnAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2c6c8-158">表示中止階段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-158">Represents the Abort phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-159">`OnAbort` 已關閉服務主機意外關閉時引發與目前正在處理的作用中命令。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-159">`OnAbort` fires when the service host shuts down abruptly and active commands currently being processed are closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlPersistenceProviderFactory.OnBeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2c6c8-160">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-160">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="2c6c8-161">作業完成時要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-161">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2c6c8-162">使用者提供的物件，可區別這個特定非同步作業與其他作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-162">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-163">代表「關閉」階段的開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-163">Represents the beginning of the Close phase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c6c8-164">
            <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> 非同步方法呼叫的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-164">The state of the <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-165">「關閉」階段發生在服務關閉時。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-165">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlPersistenceProviderFactory.OnBeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2c6c8-166">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-166">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="2c6c8-167">作業完成時要呼叫的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-167">The method to be called when the operation is completed.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2c6c8-168">使用者提供的物件，可區別這個特定非同步作業與其他作業。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-168">A user-provided object that distinguishes this particular asynchronous operation from other operations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-169">代表「開啟」階段的開始。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-169">Represents the beginning of the Open phase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2c6c8-170">
            <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> 非同步方法呼叫的狀態。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-170">The state of the <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> asynchronous method call.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-171">「開啟」階段發生在服務開啟時。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-171">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnClose : TimeSpan -&gt; unit" Usage="sqlPersistenceProviderFactory.OnClose timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2c6c8-172">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-172">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-173">表示關閉階段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-173">Represents the Close phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-174">「關閉」階段發生在服務關閉時。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-174">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndClose : IAsyncResult -&gt; unit" Usage="sqlPersistenceProviderFactory.OnEndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="2c6c8-175">作業結果的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-175">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-176">代表「關閉」階段的結束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-176">Represents the end of the Close phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-177">「關閉」階段發生在服務關閉時。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-177">The Close phase occurs when the service is closed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndOpen : IAsyncResult -&gt; unit" Usage="sqlPersistenceProviderFactory.OnEndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="2c6c8-178">作業結果的參考。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-178">A reference to the result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-179">代表「開啟」階段的結束。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-179">Represents the end of the Open phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-180">「開啟」階段發生在服務開啟時。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-180">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnOpen : TimeSpan -&gt; unit" Usage="sqlPersistenceProviderFactory.OnOpen timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2c6c8-181">一段時間，持續性提供者會在經過以後中止這次嘗試。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-181">The time period after which the persistence provider aborts this attempt.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2c6c8-182">表示開啟階段。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-182">Represents the Open phase.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-183">「開啟」階段發生在服務開啟時。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-183">The Open phase occurs when the service is opened.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsText">
      <MemberSignature Language="C#" Value="public bool SerializeAsText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SerializeAsText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializeAsText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SerializeAsText { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SerializeAsText : bool with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2c6c8-184">指定此處理站建立的持續性提供者中，資料要序列化成文字，而非二進位。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-184">Specifies whether data is serialized as text rather than binary in persistence providers created with this factory.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2c6c8-185">如果服務資訊序列化為文字，則為 <see langword="true" />，否則為 <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2c6c8-185">
              <see langword="true" /> if the service information is serialized as text; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2c6c8-186">預設值`serializeAsText`是`false`，表示持續性資訊會序列化為二進位資料。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-186">The default value for `serializeAsText` is `false`, which indicates that persistence information is serialized as binary data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2c6c8-187">下列程式碼範例示範如何存取 `SerializeAsText` 屬性。</span><span class="sxs-lookup"><span data-stu-id="2c6c8-187">The following code example shows how to access the `SerializeAsText` property.</span></span>  
  
 [!code-csharp[SqlPersistenceProviderFactory#6](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>