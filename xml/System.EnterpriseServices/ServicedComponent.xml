<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ServicedComponent.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5825295aba3162ad64d7c1325b0c7adc2b191a980.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">825295aba3162ad64d7c1325b0c7adc2b191a980</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>Represents the base class of all classes using COM+ services.</source>
          <target state="translated">表示所有使用 COM+ 服務之類別的基底類別。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>Under certain conditions, a class that is derived from <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> that runs in a COM+ application may stop responding.</source>
          <target state="translated">在某些情況下，衍生自的類別下<ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>執行 COM + 應用程式中的可能會停止回應。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>This problem is caused by an Activity deadlock.</source>
          <target state="translated">這個問題被因活動死結。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>Activities can deadlock on multithreaded applications because of an asynchronous cleanup of component references.</source>
          <target state="translated">活動可以在多執行緒應用程式上發生死結，因為非同步清除的元件參考。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>To work around this problem, call the <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt;</ph> method when you complete work with objects derived from <ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>.</source>
          <target state="translated">若要解決這個問題，請呼叫<ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt;</ph>方法，當您完成使用物件衍生自<ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>For more information, see <bpt id="p1">[</bpt><ph id="ph1">http://support.microsoft.com/default.aspx?scid=kb</ph>;en-us;327443<ept id="p1">](http://support.microsoft.com/default.aspx?scid=kb;en-us;327443)</ept>.</source>
          <target state="translated">如需詳細資訊，請參閱<bpt id="p1">[</bpt> <ph id="ph1">http://support.microsoft.com/default.aspx?scid=kb</ph>; en-us-我們; 327443<ept id="p1">](http://support.microsoft.com/default.aspx?scid=kb;en-us;327443)</ept>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>Client code must call <ph id="ph1">`Dispose`</ph> on serviced components to ensure proper operation.</source>
          <target state="translated">用戶端程式碼必須呼叫<ph id="ph1">`Dispose`</ph>上 serviced 元件，以確保正常運作。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>The following code example demonstrates how to expose a class as a configured COM component.</source>
          <target state="translated">下列程式碼範例示範如何公開為設定的 COM 元件的類別。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>To deploy this class as a configured COM component, you must generate a strong key, compile the class as a library, and register the library.</source>
          <target state="translated">若要部署此類別做設定的 COM 元件，您必須產生強式金鑰、 編譯為程式庫、 類別和登錄程式庫。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>These three steps are accomplished by the following three commands.</source>
          <target state="translated">這三個步驟被透過下列三個命令。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> class.</source>
          <target state="translated">初始化 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> 類別的新執行個體。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.#ctor">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">在衍生的類別建構函式來初始化此類型中的狀態會呼叫這個建構函式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.Activate">
          <source>Called by the infrastructure when the object is created or allocated from a pool.</source>
          <target state="translated">從集區建立或配置物件時由基礎結構所呼叫。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.Activate">
          <source>Override this method to add custom initialization code to objects.</source>
          <target state="translated">覆寫這個方法來加入自訂初始化程式碼至物件。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Activate">
          <source>The following code example demonstrates the use of this method.</source>
          <target state="translated">下列程式碼範例示範如何使用這個方法。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.CanBePooled">
          <source>This method is called by the infrastructure before the object is put back into the pool.</source>
          <target state="translated">這個方法在物件放回集區內之前為基礎結構所呼叫。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.CanBePooled">
          <source>Override this method to vote on whether the object is put back into the pool.</source>
          <target state="translated">覆寫這個方法來表決物件是否要放回到集區內。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.CanBePooled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the serviced component can be pooled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果 Serviced 元件可以共用，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.CanBePooled">
          <source>The following code example demonstrates the use of this method.</source>
          <target state="translated">下列程式碼範例示範如何使用這個方法。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.Construct(System.String)">
          <source>The construction string.</source>
          <target state="translated">建構字串。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.Construct(System.String)">
          <source>Called by the infrastructure just after the constructor is called, passing in the constructor string.</source>
          <target state="translated">剛好在傳入建構函式字串並呼叫建構函式之後由基礎結構所呼叫。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.Construct(System.String)">
          <source>Override this method to make use of the construction string value.</source>
          <target state="translated">覆寫這個方法來利用建構字串值。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.Deactivate">
          <source>Called by the infrastructure when the object is about to be deactivated.</source>
          <target state="translated">物件即將停用時由基礎結構所呼叫。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.Deactivate">
          <source>Override this method to add custom finalization code to objects when just-in-time (JIT) compiled code or object pooling is used.</source>
          <target state="translated">在使用 Just-In-Time (JIT) 編譯的程式碼或物件共用時，可覆寫這個方法來加入自訂最終處理程式碼至物件。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Deactivate">
          <source>The following code example demonstrates the use of this method.</source>
          <target state="translated">下列程式碼範例示範如何使用這個方法。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.ServicedComponent">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> 使用的資源。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph>.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> 所使用的所有資源。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose">
          <source>Finalizes the object and removes the associated COM+ context.</source>
          <target state="translated">終結物件，並移除相關聯的 COM + 內容。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose">
          <source>It is recommended to explicitly release COM+ objects and external resources before the garbage collector frees the object.</source>
          <target state="translated">建議您在記憶體回收行程釋放物件之前，明確釋放 COM + 物件和外部資源。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose">
          <source>If the external resource is scarce or expensive, better performance can be achieved by explicitly releasing COM+ resources when they are no longer needed.</source>
          <target state="translated">如果外部資源不足或高成本，更好的效能可藉由在不再需要時，明確釋放 COM + 資源。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose">
          <source>Explicit control is provided by the <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">明確控制由提供<ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt;</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">呼叫<ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt;</ph>允許所使用的資源<ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>都重新配置用於其他用途。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose">
          <source>For more information about <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent.Dispose%2A&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose">
          <source>Override the <ph id="ph1">&lt;see cref="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" /&gt;</ph> method to customize the dispose logic for this class.</source>
          <target state="translated">覆寫<ph id="ph1">&lt;see cref="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)" /&gt;</ph>方法，以自訂這個類別的處置邏輯。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">若要釋放 Managed 和 Unmanaged 兩種資源，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；只釋放 Unmanaged 資源，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">釋放 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">這個方法會呼叫公用<ph id="ph1">`Dispose`</ph>方法和<ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>方法。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose`</ph> 叫用受保護<ph id="ph2">`Dispose(Boolean)`</ph>方法<ph id="ph3">`disposing`</ph>參數設定為<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> 叫用<ph id="ph2">`Dispose`</ph>與<ph id="ph3">`disposing`</ph>設<ph id="ph4">`false`</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> references.</source>
          <target state="translated"><ph id="ph1">`disposing`</ph> 參數為 <ph id="ph2">`true`</ph> 時，這個方法會釋放 <ph id="ph3">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> 參考的任何 Managed 物件所掌握的資源。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
          <target state="translated">這個方法會叫用每個參考物件的 <ph id="ph1">`Dispose`</ph> 方法。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> 可以被其他物件呼叫多次。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">覆寫 <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> 時，請小心不要參考到先前已在對 <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph> 的早期呼叫中被處置 (Dispose) 的物件。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">如需有關如何實作<ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>實作 Dispose 方法<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">如需有關<ph id="ph1">&lt;see langword="Dispose" /&gt;</ph>和<ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>，請參閱<bpt id="p1">[</bpt>清除 Unmanaged 資源上<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>和<bpt id="p2">[</bpt>覆寫 Finalize 方法<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)">
          <source>The object to dispose.</source>
          <target state="translated">要處置的物件。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)">
          <source>Finalizes the object and removes the associated COM+ reference.</source>
          <target state="translated">結束物件並移除相關 COM+ 參考。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.DisposeObject(System.EnterpriseServices.ServicedComponent)">
          <source>It is preferable to use the <ph id="ph1">`Dispose`</ph> design pattern rather than <ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent.DisposeObject%2A&gt;</ph>.</source>
          <target state="translated">最好是使用<ph id="ph1">`Dispose`</ph>設計模式，而非<ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent.DisposeObject%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)">
          <source>Ensures that, in the COM+ context, the <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> class object's <ph id="ph2">&lt;see langword="done" /&gt;</ph> bit is set to <ph id="ph3">&lt;see langword="true" /&gt;</ph> after a remote method invocation.</source>
          <target state="translated">確保在 COM+ 內容中，<ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> 類別物件的 <ph id="ph2">&lt;see langword="done" /&gt;</ph> 位元會在 Remote Method Invocation 之後設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)">
          <source>A string converted from a response object that implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /&gt;</ph> interface.</source>
          <target state="translated">從實作 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /&gt;</ph> 介面之回應物件轉換而來的字串。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A&gt;</ph> method does not belong to the published interface of the <ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> class and does not need to be implemented elsewhere.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone%2A&gt;</ph>方法未隸屬於已發行介面<ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>類別，並不需要其他地方實作。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)">
          <source>A string to be converted into a request object that implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMessage" /&gt;</ph> interface.</source>
          <target state="translated">要轉換成實作 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMessage" /&gt;</ph> 介面之要求物件的字串。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)">
          <source>Does not ensure that, in the COM+ context, the <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> class object's <ph id="ph2">&lt;see langword="done" /&gt;</ph> bit is set to <ph id="ph3">&lt;see langword="true" /&gt;</ph> after a remote method invocation.</source>
          <target state="translated">不能確保在 COM+ 內容中，<ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> 類別物件的 <ph id="ph2">&lt;see langword="done" /&gt;</ph> 位元會在 Remote Method Invocation 之後設為 <ph id="ph3">&lt;see langword="true" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)">
          <source>A string converted from a response object that implements the <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /&gt;</ph> interface.</source>
          <target state="translated">從實作 <ph id="ph1">&lt;see cref="T:System.Runtime.Remoting.Messaging.IMethodReturnMessage" /&gt;</ph> 介面之回應物件轉換而來的字串。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A&gt;</ph> method does not belong to the published interface of the <ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> class and does not need to be implemented elsewhere.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone%2A&gt;</ph>方法未隸屬於已發行介面<ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>類別，並不需要其他地方實作。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)">
          <source>A bitmask where 0x00000001 is a key for the serviced component's process ID, 0x00000002 is a key for the application domain ID, and 0x00000004 is a key for the serviced component's remote URI.</source>
          <target state="translated">位元遮罩，其中 0x00000001 為 Serviced 元件處理序 ID 的索引鍵，0x00000002 為應用程式定義域 ID 的索引鍵，而 0x00000004 為 Serviced 元件遠端 URI 的索引鍵。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)">
          <source>A string array that may contain any or all of the following, in order: the serviced component's process ID, the application domain ID, and the serviced component's remote URI.</source>
          <target state="translated">字串陣列，可能包含下列任一項或所有項目，依次為：Serviced 元件處理序 ID、應用程式定義域 ID 和 Serviced 元件遠端 URI。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)">
          <source>Obtains certain information about the <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> class instance.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.EnterpriseServices.ServicedComponent" /&gt;</ph> 類別執行個體的某些資訊。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.ServicedComponent.System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)">
          <source>The <ph id="ph1">&lt;xref:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo%2A&gt;</ph> method does not belong to the published interface of the <ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph> class and does not need to be implemented elsewhere.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IServicedComponentInfo.GetComponentInfo%2A&gt;</ph>方法未隸屬於已發行介面<ph id="ph2">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>類別，並不需要其他地方實作。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>