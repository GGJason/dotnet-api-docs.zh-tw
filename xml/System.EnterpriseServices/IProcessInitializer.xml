<Type Name="IProcessInitializer" FullName="System.EnterpriseServices.IProcessInitializer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="71de6c95b5ac06ee9ff4c5ad83a05ad3542abd35" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408232" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProcessInitializer" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProcessInitializer" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.IProcessInitializer" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProcessInitializer" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProcessInitializer" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>支援可在 COM 元件啟動或關閉時呼叫的方法。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作<xref:System.EnterpriseServices.IProcessInitializer>介面方法上的 serviced 元件，如果您想要執行初始化或關機的程式碼時的伺服器處理序 (Dllhost.exe) 啟動或關機，分別。  
  
 COM + 提供`Startup`和`Shutdown`Dllhost.exe 開始和結束時的事件。 這項功能可讓任何 COM + 元件安裝在 COM + 伺服器應用程式 （稱為伺服器元件之後） 執行的自訂初始化，並清除程式碼中。 實作每個元件的執行個體<xref:System.EnterpriseServices.IProcessInitializer>介面將建立和儲存程序，持續時間和啟動及關機期間呼叫介面方法上。 在實作時<xref:System.EnterpriseServices.ServicedComponent>，元件的登錄期間`InitializesServerApplication`中的參數`COMAdminCatalogObject`集合設定為元件內`true`。  
  
 使用`Startup`和`Shutdown`事件，您可以初始化資源、 建立連接，初始化共用資料，並執行清除程式碼。 不過，您必須存取特有的 COM + 伺服器元件的執行個體尚未建立，因為狀態。 此外中的程式碼`Startup`和`Shutdown`事件應儘速傳回，因為系統會等候 90 秒只接受啟用，系統會啟動處理程序之後準備 Dllhost.exe。 如果 Dllhost.exe 不表示已準備 90 秒的時間內，系統即會結束處理序;因此，所有的初始化處理此時段內完成的需求。 參與初始化每一個伺服器元件必須支援<xref:System.EnterpriseServices.IProcessInitializer>介面。 在 DllHost.exe 啟動 COM + 會建立要求這項服務呼叫的所有伺服器元件`QueryInterface`如<xref:System.EnterpriseServices.IProcessInitializer>介面，並呼叫<xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>函式。 同樣地，當在 DllHost.exe 處理序關閉時，它會呼叫<xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>那些函式的預存的介面指標。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Shutdown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>執行關閉動作。 在關閉 Dllhost.exe 時呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A> 不會在 failfast 或其他重大關機事件期間呼叫。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Startup">
      <MemberSignature Language="C#" Value="public void Startup (object punkProcessControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Startup([in]object punkProcessControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Startup (punkProcessControl As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Startup(System::Object ^ punkProcessControl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punkProcessControl" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punkProcessControl">在 Microsoft Windows XP 中，是啟動之 COM 元件的 <see langword="IUnknown" /> 介面指標。 在 Microsoft Windows 2000 中，這個引數一定是 <see langword="null" />。</param>
        <summary>在啟動時執行初始化。 在啟動 Dllhost.exe 時呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 所參考的物件`punkProcessControl`實作<xref:System.EnterpriseServices.IProcessInitControl>介面。 <xref:System.EnterpriseServices.IProcessInitControl> 支援單一方法<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>。  
  
 中的初始化程式碼<xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>可以呼叫<xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>，並設定等於剩餘的元件逾時啟動之前的秒數的逾時。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>