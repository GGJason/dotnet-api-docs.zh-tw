<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IProcessInitializer.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac571de6c95b5ac06ee9ff4c5ad83a05ad3542abd35.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71de6c95b5ac06ee9ff4c5ad83a05ad3542abd35</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Supports methods that can be called when a COM component starts up or shuts down.</source>
          <target state="translated">支援可在 COM 元件啟動或關閉時呼叫的方法。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Implement the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface methods on serviced components if you want to run initialization or shutdown code when a server process (Dllhost.exe) starts up or shuts down, respectively.</source>
          <target state="translated">實作<ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph>介面方法上的 serviced 元件，如果您想要執行初始化或關機的程式碼時的伺服器處理序 (Dllhost.exe) 啟動或關機，分別。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>COM+ provides <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events when Dllhost.exe starts and ends.</source>
          <target state="translated">COM + 提供<ph id="ph1">`Startup`</ph>和<ph id="ph2">`Shutdown`</ph>Dllhost.exe 開始和結束時的事件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>This feature enables any COM+ components that are installed in a COM+ server application (referred to as server components hereafter) to run custom initialization and clean up code.</source>
          <target state="translated">這項功能可讓任何 COM + 元件安裝在 COM + 伺服器應用程式 （稱為伺服器元件之後） 執行的自訂初始化，並清除程式碼中。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>An instance of each component that implements the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface will be created and stored for the duration of the process, and called on the interface methods during startup and shutdown.</source>
          <target state="translated">實作每個元件的執行個體<ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph>介面將建立和儲存程序，持續時間和啟動及關機期間呼叫介面方法上。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>When implemented on a <ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>, during registration of the component, the <ph id="ph2">`InitializesServerApplication`</ph> parameter in the <ph id="ph3">`COMAdminCatalogObject`</ph> within the Components collection is set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">在實作時<ph id="ph1">&lt;xref:System.EnterpriseServices.ServicedComponent&gt;</ph>，元件的登錄期間<ph id="ph2">`InitializesServerApplication`</ph>中的參數<ph id="ph3">`COMAdminCatalogObject`</ph>集合設定為元件內<ph id="ph4">`true`</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Using the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events, you can initialize resources, create connections, initialize shared data, and run cleanup code.</source>
          <target state="translated">使用<ph id="ph1">`Startup`</ph>和<ph id="ph2">`Shutdown`</ph>事件，您可以初始化資源、 建立連接，初始化共用資料，並執行清除程式碼。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>However, you must not access states that are specific to COM+ because instances of server components have not yet been created.</source>
          <target state="translated">不過，您必須存取特有的 COM + 伺服器元件的執行個體尚未建立，因為狀態。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>In addition, the code in the <ph id="ph1">`Startup`</ph> and <ph id="ph2">`Shutdown`</ph> events should return as quickly as possible, because the system waits only 90 seconds for Dllhost.exe to prepare to accept activations after the system starts the process.</source>
          <target state="translated">此外中的程式碼<ph id="ph1">`Startup`</ph>和<ph id="ph2">`Shutdown`</ph>事件應儘速傳回，因為系統會等候 90 秒只接受啟用，系統會啟動處理程序之後準備 Dllhost.exe。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>If Dllhost.exe does not signal that it is ready within 90 seconds, the system ends the process; thus, all initialization processing needs to be completed within this time frame.</source>
          <target state="translated">如果 Dllhost.exe 不表示已準備 90 秒的時間內，系統即會結束處理序;因此，所有的初始化處理此時段內完成的需求。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Each server component that participates in initialization must support the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface.</source>
          <target state="translated">參與初始化每一個伺服器元件必須支援<ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>On DllHost.exe startup, COM+ creates all server components that requested this service, calls <ph id="ph1">`QueryInterface`</ph> for the <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph> interface, and calls the <ph id="ph3">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> function.</source>
          <target state="translated">在 DllHost.exe 啟動 COM + 會建立要求這項服務呼叫的所有伺服器元件<ph id="ph1">`QueryInterface`</ph>如<ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitializer&gt;</ph>介面，並呼叫<ph id="ph3">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph>函式。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.EnterpriseServices.IProcessInitializer">
          <source>Similarly, when the DllHost.exe process is shut down, it calls the <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> function on those previously stored interface pointers.</source>
          <target state="translated">同樣地，當在 DllHost.exe 處理序關閉時，它會呼叫<ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph>那些函式的預存的介面指標。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source>Performs shutdown actions.</source>
          <target state="translated">執行關閉動作。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source>Called when Dllhost.exe is shut down.</source>
          <target state="translated">在關閉 Dllhost.exe 時呼叫。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Shutdown">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> is not called during a failfast or other catastrophic shutdown events.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A&gt;</ph> 不會在 failfast 或其他重大關機事件期間呼叫。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>In Microsoft Windows XP, a pointer to the <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> interface of the COM component starting up.</source>
          <target state="translated">在 Microsoft Windows XP 中，是啟動之 COM 元件的 <ph id="ph1">&lt;see langword="IUnknown" /&gt;</ph> 介面指標。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>In Microsoft Windows 2000, this argument is always <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">在 Microsoft Windows 2000 中，這個引數一定是 <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>Performs initialization at startup.</source>
          <target state="translated">在啟動時執行初始化。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>Called when Dllhost.exe is started.</source>
          <target state="translated">在啟動 Dllhost.exe 時呼叫。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>The object referenced by <ph id="ph1">`punkProcessControl`</ph> implements an <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> interface.</source>
          <target state="translated">所參考的物件<ph id="ph1">`punkProcessControl`</ph>實作<ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph>介面。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> supports the single method <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitControl&gt;</ph> 支援單一方法<ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.EnterpriseServices.IProcessInitializer.Startup(System.Object)">
          <source>The initialization code in <ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph> can call the <ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>, with the time-out set equal to the number of seconds remaining before the startup of the component times out.</source>
          <target state="translated">中的初始化程式碼<ph id="ph1">&lt;xref:System.EnterpriseServices.IProcessInitializer.Startup%2A&gt;</ph>可以呼叫<ph id="ph2">&lt;xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A&gt;</ph>，並設定等於剩餘的元件逾時啟動之前的秒數的逾時。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>