<Type Name="Activity" FullName="System.EnterpriseServices.Activity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d68a73c7507151eb4a7c0db39a53444cb7eed868" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408442" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Activity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Activity extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.EnterpriseServices.Activity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Activity" />
  <TypeSignature Language="C++ CLI" Value="public ref class Activity sealed" />
  <AssemblyInfo>
    <AssemblyName>System.EnterpriseServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="900a5-101">建立活動來執行可以使用 COM+ 服務的同步或非同步 (Asynchronous) 批次工作，而不需建立 COM+ 元件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="900a5-101">Creates an activity to do synchronous or asynchronous batch work that can use COM+ services without needing to create a COM+ component.</span>
      </span>
      <span data-ttu-id="900a5-102">這個類別無法被繼承。</span>
      <span class="sxs-lookup">
        <span data-stu-id="900a5-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="900a5-103">與活動相關聯的內容完全由<xref:System.EnterpriseServices.ServiceConfig>物件。</span><span class="sxs-lookup"><span data-stu-id="900a5-103">The context associated with the activity is completely determined by a <xref:System.EnterpriseServices.ServiceConfig> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="900a5-104">下列程式碼範例示範如何使用<xref:System.EnterpriseServices.Activity>類別，並且使用同步處理服務。</span><span class="sxs-lookup"><span data-stu-id="900a5-104">The following code example demonstrates how to use the <xref:System.EnterpriseServices.Activity> class and use the synchronization service.</span></span>  
  
 [!code-csharp[EnterpriseServices_Activity#0](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Activity/CS/EnterpriseServices_Activity.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Activity (System.EnterpriseServices.ServiceConfig cfg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.EnterpriseServices.ServiceConfig cfg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.#ctor(System.EnterpriseServices.ServiceConfig)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cfg As ServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Activity(System::EnterpriseServices::ServiceConfig ^ cfg);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cfg" Type="System.EnterpriseServices.ServiceConfig" />
      </Parameters>
      <Docs>
        <param name="cfg">
          <span data-ttu-id="900a5-105">
            <see cref="T:System.EnterpriseServices.ServiceConfig" />，包含所要使用的服務的組態資訊。</span>
          <span class="sxs-lookup">
            <span data-stu-id="900a5-105">A <see cref="T:System.EnterpriseServices.ServiceConfig" /> that contains the configuration information for the services to be used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="900a5-106">初始化 <see cref="T:System.EnterpriseServices.Activity" /> 類別的新執行個體。</span>
          <span class="sxs-lookup">
            <span data-stu-id="900a5-106">Initializes a new instance of the <see cref="T:System.EnterpriseServices.Activity" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="900a5-107">建立<xref:System.EnterpriseServices.Activity>，用來提交批次工作 COM + 服務。</span><span class="sxs-lookup"><span data-stu-id="900a5-107">Creates an <xref:System.EnterpriseServices.Activity> that is used to submit batch work to COM+ services.</span></span> <span data-ttu-id="900a5-108">與活動相關聯的內容完全由<xref:System.EnterpriseServices.ServiceConfig>物件透過傳遞`cfg`參數。</span><span class="sxs-lookup"><span data-stu-id="900a5-108">The context associated with the activity is completely determined by the <xref:System.EnterpriseServices.ServiceConfig> object that is passed through the `cfg` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="900a5-109">下列程式碼範例會示範如何初始化 <xref:System.EnterpriseServices.Activity> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="900a5-109">The following code example demonstrates how to initialize a new instance of the <xref:System.EnterpriseServices.Activity> class.</span></span>  
  
 [!code-csharp[EnterpriseServices_Activity#1](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Activity/CS/EnterpriseServices_Activity.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="900a5-110">目前的平台上不支援 <see cref="T:System.EnterpriseServices.Activity" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="900a5-110">
              <see cref="T:System.EnterpriseServices.Activity" /> is not supported on the current platform.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsynchronousCall">
      <MemberSignature Language="C#" Value="public void AsynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AsynchronousCall(class System.EnterpriseServices.IServiceCall serviceCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AsynchronousCall (serviceCall As IServiceCall)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AsynchronousCall(System::EnterpriseServices::IServiceCall ^ serviceCall);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCall" Type="System.EnterpriseServices.IServiceCall" />
      </Parameters>
      <Docs>
        <param name="serviceCall">
          <span data-ttu-id="900a5-111">
            <see cref="T:System.EnterpriseServices.IServiceCall" /> 物件，用來實作批次工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="900a5-111">A <see cref="T:System.EnterpriseServices.IServiceCall" /> object that is used to implement the batch work.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="900a5-112">非同步執行指定的使用者定義的批次工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="900a5-112">Runs the specified user-defined batch work asynchronously.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="900a5-113">下列程式碼範例示範如何使用這個方法。</span><span class="sxs-lookup"><span data-stu-id="900a5-113">The following code example demonstrates how to use this method.</span></span>  
  
 [!code-csharp[EnterpriseServices_Activity#2](~/samples/snippets/csharp/VS_Snippets_Remoting/EnterpriseServices_Activity/CS/EnterpriseServices_Activity.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToCurrentThread">
      <MemberSignature Language="C#" Value="public void BindToCurrentThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BindToCurrentThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.BindToCurrentThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToCurrentThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToCurrentThread();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="900a5-114">繫結使用者定義的工作至目前執行緒。</span>
          <span class="sxs-lookup">
            <span data-stu-id="900a5-114">Binds the user-defined work to the current thread.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="900a5-115"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> 將繫結所提交的批次工作<xref:System.EnterpriseServices.Activity.SynchronousCall%2A>或<xref:System.EnterpriseServices.Activity.AsynchronousCall%2A>目前單一執行緒 apartment (STA) 的方法。</span><span class="sxs-lookup"><span data-stu-id="900a5-115"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> binds the batch work that is submitted by the <xref:System.EnterpriseServices.Activity.SynchronousCall%2A> or <xref:System.EnterpriseServices.Activity.AsynchronousCall%2A> methods to the current single-threaded apartment (STA).</span></span> <span data-ttu-id="900a5-116"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> 如果目前執行緒正在執行多執行緒 apartment (MTA) 中，沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="900a5-116"><xref:System.EnterpriseServices.Activity.BindToCurrentThread%2A> has no effect if the current thread is being run in the multithreaded apartment (MTA).</span></span> <span data-ttu-id="900a5-117">目前的執行緒模型由設定<xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A>屬性<xref:System.EnterpriseServices.ServiceConfig>物件。</span><span class="sxs-lookup"><span data-stu-id="900a5-117">The current thread model is determined by the configuration of the <xref:System.EnterpriseServices.ServiceConfig.ThreadPool%2A> property of the <xref:System.EnterpriseServices.ServiceConfig> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronousCall">
      <MemberSignature Language="C#" Value="public void SynchronousCall (System.EnterpriseServices.IServiceCall serviceCall);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SynchronousCall(class System.EnterpriseServices.IServiceCall serviceCall) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SynchronousCall (serviceCall As IServiceCall)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SynchronousCall(System::EnterpriseServices::IServiceCall ^ serviceCall);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceCall" Type="System.EnterpriseServices.IServiceCall" />
      </Parameters>
      <Docs>
        <param name="serviceCall">
          <span data-ttu-id="900a5-118">
            <see cref="T:System.EnterpriseServices.IServiceCall" /> 物件，用來實作批次工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="900a5-118">A <see cref="T:System.EnterpriseServices.IServiceCall" /> object that is used to implement the batch work.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="900a5-119">同步執行指定的使用者定義的批次工作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="900a5-119">Runs the specified user-defined batch work synchronously.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnbindFromThread">
      <MemberSignature Language="C#" Value="public void UnbindFromThread ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnbindFromThread() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.EnterpriseServices.Activity.UnbindFromThread" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnbindFromThread ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnbindFromThread();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.EnterpriseServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="900a5-120">從批次工作執行所在的執行緒解除 <see cref="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" /> 或 <see cref="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" /> 方法所送出之批次工作的繫結。</span>
          <span class="sxs-lookup">
            <span data-stu-id="900a5-120">Unbinds the batch work that is submitted by the <see cref="M:System.EnterpriseServices.Activity.SynchronousCall(System.EnterpriseServices.IServiceCall)" /> or <see cref="M:System.EnterpriseServices.Activity.AsynchronousCall(System.EnterpriseServices.IServiceCall)" /> methods from the thread on which the batch work is running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="900a5-121"><xref:System.EnterpriseServices.Activity.UnbindFromThread%2A> 如果批次工作不先前已經繫結至執行緒，沒有任何作用。</span><span class="sxs-lookup"><span data-stu-id="900a5-121"><xref:System.EnterpriseServices.Activity.UnbindFromThread%2A> has no effect if the batch work was not previously bound to a thread.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>