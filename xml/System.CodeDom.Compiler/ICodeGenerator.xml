<Type Name="ICodeGenerator" FullName="System.CodeDom.Compiler.ICodeGenerator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7ee1c9efbbf2aeadbfde53f69f685da294a03fc7" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49151371" /></Metadata><TypeSignature Language="C#" Value="public interface ICodeGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICodeGenerator" />
  <TypeSignature Language="DocId" Value="T:System.CodeDom.Compiler.ICodeGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICodeGenerator" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICodeGenerator" />
  <TypeSignature Language="F#" Value="type ICodeGenerator = interface" />
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.CodeDom</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1adda-101">定義產生程式碼的介面。</span><span class="sxs-lookup"><span data-stu-id="1adda-101">Defines an interface for generating code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="1adda-102">在.NET framework 1.0 和 1.1 版中，程式碼提供者包括實作<xref:System.CodeDom.Compiler.CodeDomProvider>， <xref:System.CodeDom.Compiler.ICodeGenerator>， <xref:System.CodeDom.Compiler.ICodeParser>，和<xref:System.CodeDom.Compiler.ICodeCompiler>。</span><span class="sxs-lookup"><span data-stu-id="1adda-102">In the .NET Framework versions 1.0 and 1.1, code providers consist of implementations of <xref:System.CodeDom.Compiler.CodeDomProvider>, <xref:System.CodeDom.Compiler.ICodeGenerator>, <xref:System.CodeDom.Compiler.ICodeParser>, and <xref:System.CodeDom.Compiler.ICodeCompiler>.</span></span> <span data-ttu-id="1adda-103">中[!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)]，則<xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>， <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A>，和<xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A>方法已經過時，和方法<xref:System.CodeDom.Compiler.ICodeGenerator>並<xref:System.CodeDom.Compiler.ICodeCompiler>直接用於<xref:System.CodeDom.Compiler.CodeDomProvider>類別。</span><span class="sxs-lookup"><span data-stu-id="1adda-103">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)], the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A>, and <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> methods are obsolete, and the methods of <xref:System.CodeDom.Compiler.ICodeGenerator> and <xref:System.CodeDom.Compiler.ICodeCompiler> are directly available in the <xref:System.CodeDom.Compiler.CodeDomProvider> class.</span></span> <span data-ttu-id="1adda-104">您應該在您的程式碼提供者實作中覆寫這些方法，並呼叫基底方法。</span><span class="sxs-lookup"><span data-stu-id="1adda-104">You should override those methods in your code provider implementation and not call the base methods.</span></span>  
  
 <span data-ttu-id="1adda-105">編譯器的開發人員可以實作這個介面可讓人以動態方式產生特定語言的程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-105">Developers of compilers can implement this interface to allow people to dynamically generate code in a particular language.</span></span> <span data-ttu-id="1adda-106">這可用於各種用途，例如建立程式碼產生精靈，建立動態組件內容可以進行偵錯，和使用內嵌程式碼，例如 ASP.NET 的樣板化文件。</span><span class="sxs-lookup"><span data-stu-id="1adda-106">This can be used for a variety of purposes, such as creating code-generating wizards, creating dynamic assemblies with content that can be debugged, and for templated documents with embedded code, such as ASP.NET.</span></span>  
  
 <span data-ttu-id="1adda-107"><xref:System.CodeDom.Compiler.ICodeGenerator>實作通常透過呼叫取得<xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>方法<xref:System.CodeDom.Compiler.CodeDomProvider>。</span><span class="sxs-lookup"><span data-stu-id="1adda-107">An <xref:System.CodeDom.Compiler.ICodeGenerator> implementation is typically obtained through a call to the <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> method of <xref:System.CodeDom.Compiler.CodeDomProvider>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateEscapedIdentifier">
      <MemberSignature Language="C#" Value="public string CreateEscapedIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateEscapedIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateEscapedIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateEscapedIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateEscapedIdentifier : string -&gt; string" Usage="iCodeGenerator.CreateEscapedIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1adda-108">要建立逸出識別項的字串。</span><span class="sxs-lookup"><span data-stu-id="1adda-108">The string to create an escaped identifier for.</span></span></param>
        <summary><span data-ttu-id="1adda-109">為指定值建立逸出識別項。</span><span class="sxs-lookup"><span data-stu-id="1adda-109">Creates an escaped identifier for the specified value.</span></span></summary>
        <returns><span data-ttu-id="1adda-110">值的逸出識別項。</span><span class="sxs-lookup"><span data-stu-id="1adda-110">The escaped identifier for the value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1adda-111"><xref:System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier%2A> 測試是否與保留衝突的識別碼或語言關鍵字，如果是的話，會傳回具有特定語言逸出程式碼格式設定的對等名稱。</span><span class="sxs-lookup"><span data-stu-id="1adda-111"><xref:System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and if so, returns an equivalent name with language-specific escape code formatting.</span></span> <span data-ttu-id="1adda-112">這被指逸出識別項。</span><span class="sxs-lookup"><span data-stu-id="1adda-112">This is referred to an escaped identifier.</span></span> <span data-ttu-id="1adda-113">逸出識別項將會包含相同`value`但必須逸出程式碼格式設定新增至區分識別項的關鍵字。</span><span class="sxs-lookup"><span data-stu-id="1adda-113">The escaped identifier will contain the same `value` but will have escape code formatting added to differentiate the identifier from the keyword.</span></span> <span data-ttu-id="1adda-114">兩個實作範例是上述`value`與"@"或方括號`value`與"["和"]"。</span><span class="sxs-lookup"><span data-stu-id="1adda-114">Two implementation examples are preceding the `value` with "@" or bracketing the `value` with "[" and "]".</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-115">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-115">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-116">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-116">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-117">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-117">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-118">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-118">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="M:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CreateValidIdentifier">
      <MemberSignature Language="C#" Value="public string CreateValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string CreateValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateValidIdentifier (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ CreateValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CreateValidIdentifier : string -&gt; string" Usage="iCodeGenerator.CreateValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1adda-119">要產生有效識別項的字串。</span><span class="sxs-lookup"><span data-stu-id="1adda-119">The string to generate a valid identifier for.</span></span></param>
        <summary><span data-ttu-id="1adda-120">為指定值建立有效的識別項。</span><span class="sxs-lookup"><span data-stu-id="1adda-120">Creates a valid identifier for the specified value.</span></span></summary>
        <returns><span data-ttu-id="1adda-121">指定值的有效識別項。</span><span class="sxs-lookup"><span data-stu-id="1adda-121">A valid identifier for the specified value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1adda-122"><xref:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier%2A> 測試是否與保留的識別項衝突或語言關鍵字，並傳回有效的識別項名稱不會衝突。</span><span class="sxs-lookup"><span data-stu-id="1adda-122"><xref:System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier%2A> tests whether the identifier conflicts with reserved or language keywords, and returns a valid identifier name that does not conflict.</span></span> <span data-ttu-id="1adda-123">傳回的識別項將會包含相同`value`但如果它與衝突保留或語言關鍵字，而必須逸出程式碼格式設定新增至區分識別項的關鍵字。</span><span class="sxs-lookup"><span data-stu-id="1adda-123">The returned identifier will contain the same `value` but, if it conflicts with reserved or language keywords, will have escape code formatting added to differentiate the identifier from the keyword.</span></span> <span data-ttu-id="1adda-124">一般而言，如果需要修改這個值，會傳回值前面會加底線"_"上。</span><span class="sxs-lookup"><span data-stu-id="1adda-124">Typically, if the value needs modification, value is returned preceded by an underscore "_".</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-125">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-125">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-126">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-126">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-127">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-127">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-128">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-128">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="M:System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromCompileUnit">
      <MemberSignature Language="C#" Value="public void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromCompileUnit(class System.CodeDom.CodeCompileUnit e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateCodeFromCompileUnit (e As CodeCompileUnit, w As TextWriter, o As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateCodeFromCompileUnit(System::CodeDom::CodeCompileUnit ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromCompileUnit : System.CodeDom.CodeCompileUnit * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="iCodeGenerator.GenerateCodeFromCompileUnit (e, w, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeCompileUnit" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1adda-129">要為其產生程式碼的 <see cref="T:System.CodeDom.CodeCompileUnit" />。</span><span class="sxs-lookup"><span data-stu-id="1adda-129">A <see cref="T:System.CodeDom.CodeCompileUnit" /> to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="1adda-130">為程式碼輸出目的的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1adda-130">The <see cref="T:System.IO.TextWriter" /> to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="1adda-131"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />，表示要用來產生程式碼的選項。</span><span class="sxs-lookup"><span data-stu-id="1adda-131">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="1adda-132">為指定的程式碼文件物件模型 (CodeDOM) 編譯單位產生程式碼，並使用指定的選項將它輸出到指定的文字寫入器。</span><span class="sxs-lookup"><span data-stu-id="1adda-132">Generates code for the specified Code Document Object Model (CodeDOM) compilation unit and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-133">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-133">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-134">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-134">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-135">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-135">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-136">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-136">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromExpression">
      <MemberSignature Language="C#" Value="public void GenerateCodeFromExpression (System.CodeDom.CodeExpression e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromExpression(class System.CodeDom.CodeExpression e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateCodeFromExpression (e As CodeExpression, w As TextWriter, o As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateCodeFromExpression(System::CodeDom::CodeExpression ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromExpression : System.CodeDom.CodeExpression * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="iCodeGenerator.GenerateCodeFromExpression (e, w, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeExpression" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1adda-137"><see cref="T:System.CodeDom.CodeExpression" />，指出要為其產生程式碼的運算式。</span><span class="sxs-lookup"><span data-stu-id="1adda-137">A <see cref="T:System.CodeDom.CodeExpression" /> that indicates the expression to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="1adda-138">為程式碼輸出目的的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1adda-138">The <see cref="T:System.IO.TextWriter" /> to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="1adda-139"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />，表示要用來產生程式碼的選項。</span><span class="sxs-lookup"><span data-stu-id="1adda-139">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="1adda-140">為指定的程式碼文件物件模型 (CodeDOM) 運算式產生程式碼，並將它輸出到指定的文字寫入器。</span><span class="sxs-lookup"><span data-stu-id="1adda-140">Generates code for the specified Code Document Object Model (CodeDOM) expression and outputs it to the specified text writer.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-141">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-141">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-142">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-142">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-143">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-143">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-144">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-144">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromNamespace">
      <MemberSignature Language="C#" Value="public void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromNamespace(class System.CodeDom.CodeNamespace e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateCodeFromNamespace (e As CodeNamespace, w As TextWriter, o As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateCodeFromNamespace(System::CodeDom::CodeNamespace ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromNamespace : System.CodeDom.CodeNamespace * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="iCodeGenerator.GenerateCodeFromNamespace (e, w, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeNamespace" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1adda-145"><see cref="T:System.CodeDom.CodeNamespace" />，指出要為其產生程式碼的命名空間。</span><span class="sxs-lookup"><span data-stu-id="1adda-145">A <see cref="T:System.CodeDom.CodeNamespace" /> that indicates the namespace to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="1adda-146">為程式碼輸出目的的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1adda-146">The <see cref="T:System.IO.TextWriter" /> to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="1adda-147"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />，表示要用來產生程式碼的選項。</span><span class="sxs-lookup"><span data-stu-id="1adda-147">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="1adda-148">為指定的程式碼文件物件模型 (CodeDOM) 命名空間產生程式碼，並使用指定的選項將它輸出到指定的文字寫入器。</span><span class="sxs-lookup"><span data-stu-id="1adda-148">Generates code for the specified Code Document Object Model (CodeDOM) namespace and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-149">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-149">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-150">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-150">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-151">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-151">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-152">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-152">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromStatement">
      <MemberSignature Language="C#" Value="public void GenerateCodeFromStatement (System.CodeDom.CodeStatement e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromStatement(class System.CodeDom.CodeStatement e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateCodeFromStatement (e As CodeStatement, w As TextWriter, o As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateCodeFromStatement(System::CodeDom::CodeStatement ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromStatement : System.CodeDom.CodeStatement * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="iCodeGenerator.GenerateCodeFromStatement (e, w, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeStatement" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1adda-153"><see cref="T:System.CodeDom.CodeStatement" />，包含要轉譯的 CodeDOM 項目。</span><span class="sxs-lookup"><span data-stu-id="1adda-153">A <see cref="T:System.CodeDom.CodeStatement" /> containing the CodeDOM elements to translate.</span></span></param>
        <param name="w"><span data-ttu-id="1adda-154">為程式碼輸出目的的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1adda-154">The <see cref="T:System.IO.TextWriter" /> to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="1adda-155"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />，表示要用來產生程式碼的選項。</span><span class="sxs-lookup"><span data-stu-id="1adda-155">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="1adda-156">為指定的程式碼文件物件模型 (CodeDOM) 陳述式產生程式碼，並使用指定的選項將它輸出到指定的文字寫入器。</span><span class="sxs-lookup"><span data-stu-id="1adda-156">Generates code for the specified Code Document Object Model (CodeDOM) statement and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-157">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-157">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-158">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-158">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-159">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-159">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-160">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-160">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeFromType">
      <MemberSignature Language="C#" Value="public void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCodeFromType(class System.CodeDom.CodeTypeDeclaration e, class System.IO.TextWriter w, class System.CodeDom.Compiler.CodeGeneratorOptions o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateCodeFromType (e As CodeTypeDeclaration, w As TextWriter, o As CodeGeneratorOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateCodeFromType(System::CodeDom::CodeTypeDeclaration ^ e, System::IO::TextWriter ^ w, System::CodeDom::Compiler::CodeGeneratorOptions ^ o);" />
      <MemberSignature Language="F#" Value="abstract member GenerateCodeFromType : System.CodeDom.CodeTypeDeclaration * System.IO.TextWriter * System.CodeDom.Compiler.CodeGeneratorOptions -&gt; unit" Usage="iCodeGenerator.GenerateCodeFromType (e, w, o)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="w" Type="System.IO.TextWriter" />
        <Parameter Name="o" Type="System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="1adda-161"><see cref="T:System.CodeDom.CodeTypeDeclaration" />，表示要為其產生程式碼的型別。</span><span class="sxs-lookup"><span data-stu-id="1adda-161">A <see cref="T:System.CodeDom.CodeTypeDeclaration" /> that indicates the type to generate code for.</span></span></param>
        <param name="w"><span data-ttu-id="1adda-162">為程式碼輸出目的的 <see cref="T:System.IO.TextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="1adda-162">The <see cref="T:System.IO.TextWriter" /> to output code to.</span></span></param>
        <param name="o"><span data-ttu-id="1adda-163"><see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />，表示要用來產生程式碼的選項。</span><span class="sxs-lookup"><span data-stu-id="1adda-163">A <see cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" /> that indicates the options to use for generating code.</span></span></param>
        <summary><span data-ttu-id="1adda-164">為指定的程式碼文件物件模型 (CodeDOM) 型別宣告產生程式碼，並使用指定的選項將它輸出到指定的文字寫入器。</span><span class="sxs-lookup"><span data-stu-id="1adda-164">Generates code for the specified Code Document Object Model (CodeDOM) type declaration and outputs it to the specified text writer using the specified options.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-165">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-165">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-166">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-166">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-167">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-167">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-168">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-168">This member cannot be inherited by partially trusted code.</span></span></permission>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.CodeDom.CodeExpression" />
        <altmember cref="T:System.CodeDom.Compiler.CodeGeneratorOptions" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeOutput">
      <MemberSignature Language="C#" Value="public string GetTypeOutput (System.CodeDom.CodeTypeReference type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetTypeOutput(class System.CodeDom.CodeTypeReference type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeOutput (type As CodeTypeReference) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTypeOutput(System::CodeDom::CodeTypeReference ^ type);" />
      <MemberSignature Language="F#" Value="abstract member GetTypeOutput : System.CodeDom.CodeTypeReference -&gt; string" Usage="iCodeGenerator.GetTypeOutput type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.CodeDom.CodeTypeReference" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="1adda-169"><see cref="T:System.CodeDom.CodeTypeReference" />，表示要傳回的型別。</span><span class="sxs-lookup"><span data-stu-id="1adda-169">A <see cref="T:System.CodeDom.CodeTypeReference" /> that indicates the type to return.</span></span></param>
        <summary><span data-ttu-id="1adda-170">取得由指定的 <see cref="T:System.CodeDom.CodeTypeReference" /> 所指示的型別。</span><span class="sxs-lookup"><span data-stu-id="1adda-170">Gets the type indicated by the specified <see cref="T:System.CodeDom.CodeTypeReference" />.</span></span></summary>
        <returns><span data-ttu-id="1adda-171">某語言的指定型別的文字表示，該語言是這個程式碼產生器所要產生的程式碼使用的語言。</span><span class="sxs-lookup"><span data-stu-id="1adda-171">A text representation of the specified type for the language this code generator is designed to generate code in.</span></span> <span data-ttu-id="1adda-172">例如，在 Visual Basic 中，傳入型別 System.Int32 將傳回 "Integer"。</span><span class="sxs-lookup"><span data-stu-id="1adda-172">For example, in Visual Basic, passing in type System.Int32 will return "Integer".</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-173">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-173">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-174">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-174">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-175">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-175">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-176">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-176">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public bool IsValidIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsValidIdentifier (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsValidIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member IsValidIdentifier : string -&gt; bool" Usage="iCodeGenerator.IsValidIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1adda-177">要測試做為有效識別項的值。</span><span class="sxs-lookup"><span data-stu-id="1adda-177">The value to test for being a valid identifier.</span></span></param>
        <summary><span data-ttu-id="1adda-178">取得指示數值，表示指定的值是否為目前語言的有效識別項。</span><span class="sxs-lookup"><span data-stu-id="1adda-178">Gets a value that indicates whether the specified value is a valid identifier for the current language.</span></span></summary>
        <returns><span data-ttu-id="1adda-179">如果 <paramref name="value" /> 參數是有效的識別項，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1adda-179"><see langword="true" /> if the <paramref name="value" /> parameter is a valid identifier; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1adda-180">這個方法會測試識別項是否有效。</span><span class="sxs-lookup"><span data-stu-id="1adda-180">This method tests whether an identifier is valid.</span></span> <span data-ttu-id="1adda-181">實作時<xref:System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier%2A>在衍生類別中，設計要測試的值傳遞給它的方法，並傳回`true`值符合語言的規則，而且不會使用的關鍵字衝突時，才可以。</span><span class="sxs-lookup"><span data-stu-id="1adda-181">When implementing <xref:System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier%2A> in a derived class, design the method to test the value passed to it, and return `true` only if the value fits the rules of the language and does not conflict with a keyword.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-182">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-182">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-183">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-183">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-184">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-184">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-185">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-185">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Supports">
      <MemberSignature Language="C#" Value="public bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Supports(valuetype System.CodeDom.Compiler.GeneratorSupport supports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)" />
      <MemberSignature Language="VB.NET" Value="Public Function Supports (supports As GeneratorSupport) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Supports(System::CodeDom::Compiler::GeneratorSupport supports);" />
      <MemberSignature Language="F#" Value="abstract member Supports : System.CodeDom.Compiler.GeneratorSupport -&gt; bool" Usage="iCodeGenerator.Supports supports" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="supports" Type="System.CodeDom.Compiler.GeneratorSupport" />
      </Parameters>
      <Docs>
        <param name="supports"><span data-ttu-id="1adda-186">要測試的產生器能力。</span><span class="sxs-lookup"><span data-stu-id="1adda-186">The capabilities to test the generator for.</span></span></param>
        <summary><span data-ttu-id="1adda-187">取得值，指出產生器是否支援指定 <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> 物件所表示的語言功能。</span><span class="sxs-lookup"><span data-stu-id="1adda-187">Gets a value indicating whether the generator provides support for the language features represented by the specified <see cref="T:System.CodeDom.Compiler.GeneratorSupport" /> object.</span></span></summary>
        <returns><span data-ttu-id="1adda-188">如果支援指定的能力，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1adda-188"><see langword="true" /> if the specified capabilities are supported; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1adda-189">這個方法可以呼叫具有數目<xref:System.CodeDom.Compiler.GeneratorSupport>次要加入一組二進位檔與適當的功能旗標來測試一組功能旗標"Or"運算子 (&#124;)。</span><span class="sxs-lookup"><span data-stu-id="1adda-189">This method can be called with a number of <xref:System.CodeDom.Compiler.GeneratorSupport> flags at once to test for a set of capabilities by joining a set of appropriate capability flags together with a binary "Or" operator (&#124;).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-190">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-190">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-191">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-191">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-192">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-192">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-193">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-193">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ValidateIdentifier">
      <MemberSignature Language="C#" Value="public void ValidateIdentifier (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ValidateIdentifier(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateIdentifier (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateIdentifier(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ValidateIdentifier : string -&gt; unit" Usage="iCodeGenerator.ValidateIdentifier value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.CodeDom</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="1adda-194">要驗證的識別項。</span><span class="sxs-lookup"><span data-stu-id="1adda-194">The identifier to validate.</span></span></param>
        <summary><span data-ttu-id="1adda-195">如果指定值不是有效的識別項會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1adda-195">Throws an exception if the specified value is not a valid identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1adda-196">而不會傳回值，這個方法擲回例外狀況，如果指定的識別項無效，無法根據方法的實作。</span><span class="sxs-lookup"><span data-stu-id="1adda-196">Rather than returning a value, this method throws an exception if the specified identifier is not valid according to the method implementation.</span></span> <span data-ttu-id="1adda-197">例外狀況通常是<xref:System.ArgumentException>。</span><span class="sxs-lookup"><span data-stu-id="1adda-197">Typically, the exception is an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="1adda-198">這個方法可讓程式碼產生器實作這個方法，以產生根據無效的識別項的值資訊的錯誤訊息。</span><span class="sxs-lookup"><span data-stu-id="1adda-198">This method enables a code generator that implements this method to produce an informative error message based upon the value of an invalid identifier.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1adda-199">識別項無效。</span><span class="sxs-lookup"><span data-stu-id="1adda-199">The identifier is not valid.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="1adda-200">針對完全信任立即呼叫端。</span><span class="sxs-lookup"><span data-stu-id="1adda-200">for full trust for the immediate caller.</span></span> <span data-ttu-id="1adda-201">這個成員無法供部分信任的程式碼使用。</span><span class="sxs-lookup"><span data-stu-id="1adda-201">This member cannot be used by partially trusted code.</span></span></permission>
        <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="1adda-202">針對繼承者完全信任。</span><span class="sxs-lookup"><span data-stu-id="1adda-202">for full trust for inheritors.</span></span> <span data-ttu-id="1adda-203">這個成員無法被繼承，部分信任程式碼。</span><span class="sxs-lookup"><span data-stu-id="1adda-203">This member cannot be inherited by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>