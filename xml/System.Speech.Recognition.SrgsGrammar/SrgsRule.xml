<Type Name="SrgsRule" FullName="System.Speech.Recognition.SrgsGrammar.SrgsRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="307e4841afae122a83c6584e1ea3f426c3a238af" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33681000" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SrgsRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsRule extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsRule" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Rule={_id.ToString()} Scope={_scope.ToString()}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Speech.Recognition.SrgsGrammar.SrgsRule/SrgsRuleDebugDisplay))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>表示文法規則。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>類別在執行階段建立新的規則，或在執行階段修改現有的文法資料流或檔案中的規則。  
  
 中的單字和片語所指定<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>中所定義的文法物件<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>執行個體限制語音辨識器必須能夠識別的輸入。  
  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件會指定必須由順序物件包含這些讀出單字和片語的順序。 單字和片語規則中的會以物件表示這類<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>，和<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>項目。 使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements%2A>屬性存取子的集合物件<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>包含物件。  
  
 您可以判斷是否<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>可以藉由設定規則參考來自外部的文法中的規則中指定其<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope%2A>屬性。  
  
 是不合法定義<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>也就是空的或是只包含空格。  
  
 此類別代表`rule`World Wide Web Consortium (W3C) 中定義的項目[語音辨識文法規格 (SRGS) 1.0 版](http://go.microsoft.com/fwlink/?LinkId=201761)。 如需 SRGS`rule`項目，以及透過 System.Speech，其支援詳細資料請參閱[規則項目](http://msdn.microsoft.com/library/da67b4aa-0545-426a-a02f-1417b968021e)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRule (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRule(System::String ^ id);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">規則的識別項。</param>
        <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 類別的新執行個體，並指定規則的識別項。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A>建構函式初始化<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A>屬性。 識別碼必須是唯一指定的文法。  
  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A>建構函式會擲回<xref:System.FormatException>在下列情況下：  
  
-   `id` 不是有效的 XML 名稱中所定義[可延伸標記語言 (XML) 1.0 （第五個版）](https://www.w3.org/TR/REC-xml/)。 Paraphrase 這個定義，以有效的 XML 名稱必須以字母、 底線 ('_') 或冒號開頭 (': ') 和後面可以接著零或多個 NameChar 字元 （也是在 XML 規格中定義）。  
  
-   `id` 「 NULL 」 或 「 VOID 」 或 「 垃圾 」。  
  
-   `id` 包含至少一個無效的規則識別碼字元。 這些字元: '？ '，' *'，'+'、 '&#124;'，' '('），' ^'，'$'、 '/'、 ';'，'。 '，'='、'\<'，' >'，' ['，']'，' {'，'} '、'\\\\'，' '，'\t'、 '\r' 和 '\n'。  
  
   
  
## Examples  
 下列範例會建立可辨識片語的文法 「 不具有贏了世界 Cup 民族 」 後面接著贏得世界 Cup 國家/地區的名稱。 此範例會建立<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>名為物件`winnerRule`和識別項會傳入`WorldCupWinner`為<xref:System.String>。 <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>物件組成的陣列新增<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>物件包含規則可辨識的替代方案。  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  
  // Create an SrgsDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument document = new SrgsDocument();  
  SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"),   
    new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"),   
    new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem   
    (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the document and make winnerRule   
  // the root rule of the document.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  document.Root = winnerRule;  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="id" /> 是空的。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="id" /> 不是適當的規則識別項。</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsRule (string id, params System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, class System.Speech.Recognition.SrgsGrammar.SrgsElement[] elements) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.#ctor(System.String,System.Speech.Recognition.SrgsGrammar.SrgsElement[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (id As String, ParamArray elements As SrgsElement())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsRule(System::String ^ id, ... cli::array &lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ elements);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="elements" Type="System.Speech.Recognition.SrgsGrammar.SrgsElement[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">規則的識別項。</param>
        <param name="elements">
          <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 項目的陣列。</param>
        <summary>從 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 物件的陣列，初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A>建構函式初始化<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A>屬性。 識別碼必須是唯一指定的文法。  
  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.%23ctor%2A>建構函式會擲回<xref:System.FormatException>在下列情況下：  
  
-   `id` 不是有效的 XML 名稱中所定義[可延伸標記語言 (XML) 1.0 （第五個版）](https://www.w3.org/TR/REC-xml/)。 Paraphrase 這個定義，以有效的 XML 名稱必須以字母、 底線 ('_') 或冒號開頭 (': ') 和後面可以接著零或多個 NameChar 字元 （也是在 XML 規格中定義）。  
  
-   `id` 「 NULL 」 或 「 VOID 」 或 「 垃圾 」。  
  
-   `id` 包含至少一個無效的規則識別碼字元。 這些字元: '？ '，' *'，'+'、 '&#124;'，' '('），' ^'，'$'、 '/'、 ';'，'。 '，'='、'\<'，' >'，' ['，']'，' {'，'} '、'\\\\'，' '，'\t'、 '\r' 和 '\n'。  
  
   
  
## Examples  
 下列範例會建立可辨識片語的文法 「 不具有贏了世界 Cup 民族 」 後面接著贏得世界 Cup 國家/地區的名稱。 此範例會建立名為的公用規則`WorldCupWinner`。 這個範例會建立兩個<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件`ruleEurope`和`ruleSAmerica`，並傳入<xref:System.String>規則識別項和<xref:System.Speech.Recognition.SrgsGrammar.SrgsElement>陣列包含<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>物件。 接著，此範例會將規則參考`ruleEurope`和`ruleSAmerica`從規則`WorldCupWinner`。  
  
```csharp  
public void WorldSoccerWinners ()  
{  
  // Create a grammar from an SRGSDocument, create a new rule  
  // and set its scope to public.  
  SrgsDocument srgsGrammar = new SrgsDocument ();  
  SrgsRule winnerRule = new SrgsRule ("WorldCupWinner");  
  winnerRule.Scope = SrgsRuleScope.Public;  
  
  // Add the introduction.  
  winnerRule.Elements.Add (new SrgsItem ("A nation that has won the world cup is"));  
  
  // Create the rule for the European nations.  
  SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
  SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
  // Create the rule for the South American nations.  
  SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
  SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
  // Add references to winnerRule for ruleEurope and ruleSAmerica.  
  winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
  // Add all the rules to the grammar and make winnerRule  
  // the root rule of the grammar.  
  document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
  srgsGrammar.Root = winnerRule;  
}  
```  
  
 建立的文法具有下列格式。  
  
```xml  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England </item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="id" /> 為 <see langword="null" />。  
  
 <paramref name="elements" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="id" /> 是空的。</exception>
        <exception cref="T:System.FormatException">
          <paramref name="id" /> 不是適當的規則識別項。</exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Speech.Recognition.SrgsGrammar.SrgsElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Speech.Recognition.SrgsGrammar.SrgsElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add(System.Speech.Recognition.SrgsGrammar.SrgsElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (element As SrgsElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Speech::Recognition::SrgsGrammar::SrgsElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Speech.Recognition.SrgsGrammar.SrgsElement" />
      </Parameters>
      <Docs>
        <param name="element">繼承自<see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 的物件，並會指定可辨識的項目。</param>
        <summary>將 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 加入至 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 物件。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一般新增項目<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件包含<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>，和<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>指定喇叭可以說出的物件。 有效的規則項目必須包含至少一個可辨識的文字片段或一個規則參考。 請參閱[建立文法使用 SrgsGrammar](http://msdn.microsoft.com/library/e4d9f96e-2241-4c39-b9e0-ac9ef4e9a906)如需詳細資訊。  
  
 <xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件可能也包含<xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag>和<xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag>新增至規則中語意的值和語意索引鍵的物件。 當它辨識片語的語意資訊，以及已辨識的片語，會傳回語音辨識引擎。 請參閱[語意解譯標記](http://msdn.microsoft.com/library/2e115391-73b3-4666-8fd1-540c529de3b0)如需詳細資訊。  
  
   
  
## Examples  
 下列範例會建立可辨識片語的文法 「 不具有贏了世界 Cup 民族 」 後面接著贏得世界 Cup 國家/地區的名稱。 在建立之後<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件`winnerRule`並提供的字串識別碼`WorldCupWinner`，此範例會使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add%2A>方法，將附加的字串 「 贏得世界 Cup 民族 」 規則。 這個範例會建立兩個額外的規則，`ruleEurope`和`ruleSAmerica`。 再次使用<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Add%2A>方法，此範例會將附加<xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>物件`WorldCupWinner`包含規則參考規則`ruleEurope`和`ruleSAmerica`。  
  
```csharp  
// Create an SrgsDocument, create a new rule  
// and set its scope to public.  
SrgsDocument document = new SrgsDocument();  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
// Add the introduction.  
winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
// Create the rule for the European nations.  
SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
// Create the rule for the South American nations.  
SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
// Add references to winnerRule for ruleEurope and ruleSAmerica.  
winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope))), new SrgsItem(new SrgsRuleRef(ruleSAmerica))}));  
  
// Add all the rules to the document and make winnerRule   
// the root rule of the document.  
document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
document.Root = winnerRule;  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="element" /> 為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="BaseClass">
      <MemberSignature Language="C#" Value="public string BaseClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseClass" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.BaseClass" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性目前不支援。</summary>
        <value>不支援。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Elements">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt; Elements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Speech.Recognition.SrgsGrammar.SrgsElement&gt; Elements" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Elements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Elements As Collection(Of SrgsElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ Elements { System::Collections::ObjectModel::Collection&lt;System::Speech::Recognition::SrgsGrammar::SrgsElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Speech.Recognition.SrgsGrammar.SrgsElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsElement" /> 執行個體中 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsRule" /> 物件的集合。</summary>
        <value>規則中項目的集合。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中的項目<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件可以包含<xref:System.Speech.Recognition.SrgsGrammar.SrgsItem>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsOneOf>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>， <xref:System.Speech.Recognition.SrgsGrammar.SrgsNameValueTag>，和<xref:System.Speech.Recognition.SrgsGrammar.SrgsSemanticInterpretationTag>物件。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定規則的識別項。</summary>
        <value>規則的識別項。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 規則的識別碼是包含規則的名稱的字串。  
  
 值，用來設定<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id%2A>必須遵守下列規則：  
  
-   值必須是有效的 XML 名稱中所定義[可延伸標記語言 (XML) 1.0 （第五個版）](https://www.w3.org/TR/REC-xml/)。 Paraphrase 這個定義，以有效的 XML 名稱必須以字母、 底線 ('_') 或冒號開頭 (': ') 和後面可以接著零或多個 NameChar 字元 （也是在 XML 規格中定義）。  
  
-   值可以是"NULL"或"VOID 」 或 「 垃圾 」。  
  
-   此值不得包含任何無效的規則識別碼字元。 這些字元: '？ '，' *'，'+'、 '&#124;'，' '('），' ^'，'$'、 '/'、 ';'，'。 '，'='、'\<'，' >'，' ['，']'，' {'，'} '、'\\\\'，' '，'\t'、 '\r' 和 '\n'。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">嘗試將 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Id" /> 設定為無效的值。</exception>
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public string OnError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnError" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnError" />
      <MemberSignature Language="VB.NET" Value="Public Property OnError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性目前不支援。</summary>
        <value>不支援。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="public string OnInit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnInit" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />
      <MemberSignature Language="VB.NET" Value="Public Property OnInit As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnInit { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性目前不支援。</summary>
        <value>不支援。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnParse">
      <MemberSignature Language="C#" Value="public string OnParse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnParse" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnParse" />
      <MemberSignature Language="VB.NET" Value="Public Property OnParse As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnParse { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性目前不支援。</summary>
        <value>不支援。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRecognition">
      <MemberSignature Language="C#" Value="public string OnRecognition { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnRecognition" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnRecognition" />
      <MemberSignature Language="VB.NET" Value="Public Property OnRecognition As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OnRecognition { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性目前不支援。</summary>
        <value>不支援。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.SrgsGrammar.SrgsRuleScope Scope" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Scope" />
      <MemberSignature Language="VB.NET" Value="Public Property Scope As SrgsRuleScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::SrgsGrammar::SrgsRuleScope Scope { System::Speech::Recognition::SrgsGrammar::SrgsRuleScope get(); void set(System::Speech::Recognition::SrgsGrammar::SrgsRuleScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.SrgsGrammar.SrgsRuleScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定辨識是否可以啟動規則，以及何時其他規則可以參考此規則。</summary>
        <value>設定規則範圍的值。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 範圍的預設值是`Private`。 從根規則，其包含的文法中或從另一項規則中所參考根規則的規則參考只能辨識啟動私用的規則。 私用的規則無法參考外部文法中，除非根規則，其包含的文法的宣告為私用的規則。  
  
 如果其範圍設定為`Public`、<xref:System.Speech.Recognition.SrgsGrammar.SrgsRule>物件可以辨識啟動從傳<xref:System.Speech.Recognition.SrgsGrammar.SrgsRuleRef>物件中包含的文法或外部文法中的規則。  
  
   
  
## Examples  
 下列範例會建立可辨識片語的文法 「 不具有贏了世界 Cup 民族 」 後面接著贏得世界 Cup 國家/地區的名稱。 它會建立名為的公用規則`WorldCupWinner`並將該規則的範圍設為公用。  
  
```csharp  
// Create an SrgsDocument, create a new rule and set its scope to public.  
SrgsDocument document = new SrgsDocument();  
SrgsRule winnerRule = new SrgsRule("WorldCupWinner");  
winnerRule.Scope = SrgsRuleScope.Public;  
  
// Add the introduction.  
winnerRule.Elements.Add(new SrgsItem("A nation that has won the world cup is: "));  
  
// Create the rule for the European nations.  
SrgsOneOf oneOfEurope = new SrgsOneOf(new SrgsItem[] {new SrgsItem("England"), new SrgsItem("France"), new SrgsItem("Germany"), new SrgsItem("Italy")});  
SrgsRule ruleEurope = (new SrgsRule("EuropeanNations", new SrgsElement[] {oneOfEurope}));  
  
// Create the rule for the South American nations.  
SrgsOneOf oneOfSAmerica = new SrgsOneOf(new SrgsItem[] {new SrgsItem("Argentina"), new SrgsItem("Brazil"), new SrgsItem("Uruguay")});  
SrgsRule ruleSAmerica = (new SrgsRule("SouthAmericanNations", new SrgsElement[] {oneOfSAmerica}));  
  
// Add references to winnerRule for ruleEurope and ruleSAmerica.  
winnerRule.Elements.Add(new SrgsOneOf(new SrgsItem[] {(new SrgsItem (new SrgsRuleRef(ruleEurope)), new SrgsItem(new SrgsRuleRef(ruleSAmerica)})));  
  
// Add all the rules to the document and make winnerRule   
// the root rule of the document.  
document.Rules.Add(new SrgsRule[] {winnerRule, ruleEurope, ruleSAmerica});  
document.Root = winnerRule;  
```  
  
 建立的文法具有下列格式。  
  
```xml  
<grammar version="1.0" xml:lang="en-US" xmlns="http://www.w3.org/2001/06/grammar" root="WorldCupWinner">  
    <rule id="WorldCupWinner" scope="public">  
        <item> A nation that has won the world cup is </item>  
        <one-of>  
            <item>  
                <ruleref uri="#EuropeanNations" />  
            </item>  
            <item>  
                <ruleref uri="#SouthAmericanNations" />  
            </item>  
        </one-of>  
    </rule>  
    <rule id="EuropeanNations">  
        <one-of>  
            <item> England< /item>  
            <item> France </item>  
            <item> Germany </item>  
            <item> Italy </item>  
        </one-of>  
    </rule>  
    <rule id="SouthAmericanNations">  
        <one-of>  
            <item> Argentina </item>  
            <item> Brazil </item>  
            <item> Uruguay </item>  
        </one-of>  
    </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Script">
      <MemberSignature Language="C#" Value="public string Script { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Script" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.Script" />
      <MemberSignature Language="VB.NET" Value="Public Property Script As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Script { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>這個屬性目前不支援。</summary>
        <value>不支援。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>