<Type Name="SrgsToken" FullName="System.Speech.Recognition.SrgsGrammar.SrgsToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ad49ad9c8fd4e131b70b3482b9090550e84bae2" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53220728" /></Metadata><TypeSignature Language="C#" Value="public class SrgsToken : System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SrgsToken extends System.Speech.Recognition.SrgsGrammar.SrgsElement" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SrgsToken&#xA;Inherits SrgsElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class SrgsToken : System::Speech::Recognition::SrgsGrammar::SrgsElement" />
  <TypeSignature Language="F#" Value="type SrgsToken = class&#xA;    inherit SrgsElement" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.SrgsGrammar.SrgsElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebuggerDisplayString ()}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>代表可辨識的單字或短片語。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用的成員<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>類別，您可以指定三種形式的文字：<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>表單<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>表單，並自訂<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>字。  
  
 如果多個字組會儲存在單一<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>物件，每個會被視為不同的語彙基元於內部，並在結果中。  
  
 此類別代表`token`World Wide Web Consortium (W3C) 所定義的項目[語音辨識文法規格 (SRGS) 1.0 版](https://go.microsoft.com/fwlink/?LinkId=201761)。 如需 SRGS`token`項目和 System.Speech，其支援的詳細資料請參閱[k 元素](https://msdn.microsoft.com/library/3a9e8d64-7bd4-4188-a6f4-dbf28ea71632)。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SrgsToken (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SrgsGrammar.SrgsToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SrgsToken(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SrgsGrammar.SrgsToken : string -&gt; System.Speech.Recognition.SrgsGrammar.SrgsToken" Usage="new System.Speech.Recognition.SrgsGrammar.SrgsToken text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">新 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> 類別執行個體的文字。</param>
        <summary>初始化 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> 類別的新執行個體，並指定要辨識的文字。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 會建立<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>物件，其<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>屬性的值一開始設定`text`參數。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="text" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="text" /> 是空的。</exception>
      </Docs>
    </Member>
    <Member MemberName="Display">
      <MemberSignature Language="C#" Value="public string Display { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Display" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
      <MemberSignature Language="VB.NET" Value="Public Property Display As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Display { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Display : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定要讀出之文字的顯示表單。</summary>
        <value>語彙基元應該要有的顯示方式的表示法。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 它們通常代表相同的值，雖然<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>可能會不同於表單<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>構成的單字或片語中<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>。 例如，顯示表單可能的首字母縮寫，例如 「 美國 」，會讀出的文字時，要<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>套用，是 「 美國 」。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">嘗試將 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" /> 設定為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">嘗試要將空字串指派給 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="Pronunciation">
      <MemberSignature Language="C#" Value="public string Pronunciation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pronunciation" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
      <MemberSignature Language="VB.NET" Value="Public Property Pronunciation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pronunciation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Pronunciation : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來定義語彙基元發音的字串。</summary>
        <value>傳回字串，包含來自 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet" /> 中所指定語音字母的音素。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 電話是字母或符號描述語音的聲音。 System.Speech 支援三個的語音字母指定之自訂發音： 通用拼音集 (UPS)、 電話語音 API (SAPI) 集，以及國際音標 (IPA)。 指定在行動電話<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>必須符合在指定的語音字母<xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument.PhoneticAlphabet%2A>。 請參閱[詞典和語音字母](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14))如需詳細資訊。  
  
 指定在行動電話<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>表示方式的內容<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>應該很明顯，因為成功的辨識。  語音辨識引擎會使用指定的發音<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>來比對語音輸入和傳回字串中包含了由<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>辨識結果中。  
  
 如果電話不是以空格分隔，或指定的字串包含無法辨識的電話，辨識引擎無法辨識為有效的發音所包含的單字指定的發音<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>。  
  
 中指定的發音<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>優先於與文法或辨識引擎相關聯的詞典中指定的發音。 此外，在發音<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>屬性只適用於單一項目，則單字或片語所包含<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>。  
  
   
  
## Examples  
 在下列範例中的文法包含俚語，且也是常見的字:"whatchamacallit 」。 新增自訂的內嵌發音 using<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>屬性<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>類別可以改善 「 whatchamacallit"也與包含該整個片語的字詞辨識的精確度。 此範例會使用電話從 Microsoft 通用拼音集 (UPS)，來定義自訂的發音。  
  
```  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an instance of the in-process recognizer.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine(new System.Globalization.CultureInfo("en-US")))  
      {  
  
        // Build the SrgsOneOf objects with alternative choices for the slang phrase.  
        SrgsOneOf gimme = new SrgsOneOf(  
          new string[] { "give me", "gimme", "hand me", "ha'me" });  
        SrgsOneOf the = new SrgsOneOf(new string[] { "the", "duh" });  
  
        // Build the one-of element that contains the pronunciation.  
        SrgsItem thing = new SrgsItem("thingamajig");  
        SrgsItem whatcha = new SrgsItem();  
        SrgsToken callit = new SrgsToken("whatchamacallit");  
        callit.Pronunciation = "W AE T CH AE M AE K AA L IH T";  
        whatcha.Add(callit);  
        SrgsOneOf what = new SrgsOneOf(new SrgsItem[] {thing, whatcha});  
  
        // Create the rule from the SrgsOneOf objects.  
        SrgsRule slangRule = new SrgsRule("slang", gimme, the, what);  
  
        // Build an SrgsDocument object from the rule and set the phonetic alphabet.  
        SrgsDocument tokenPron = new SrgsDocument(slangRule);  
        tokenPron.PhoneticAlphabet = SrgsPhoneticAlphabet.Ups;  
  
        // Create a Grammar object from the SrgsDocument and load it to the recognizer.  
        Grammar g_Slang = new Grammar(tokenPron);  
        g_Slang.Name = ("Slang Pronunciation");  
        recognizer.LoadGrammarAsync(g_Slang);  
  
        // Configure recognizer input.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Start asynchronous recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Recognized phrase: " + e.Result.Text);  
      Console.WriteLine("Confidence: " + e.Result.Confidence);  
      Console.WriteLine("  Word summary: ");  
      foreach (RecognizedWordUnit word in e.Result.Words)  
      {  
        Console.WriteLine(  
          "    Lexical form ({1})" +  
          " Pronunciation ({0})" +  
          " Confidence ({2})",  
          word.Pronunciation, word.LexicalForm, word.Confidence);  
      }  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">嘗試將 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" /> 設定為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">嘗試要將空字串指派給 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation" />。</exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh378335(v%3doffice.14)">詞典和語音字母</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定應讀出之文字的書寫形式。</summary>
        <value>包含在 <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsToken" /> 類別執行個體中的文字。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 它們通常代表相同的值，雖然<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>可能會不同於表單<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>構成的單字或片語中<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken>。 例如，<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Display%2A>表單可能的首字母縮寫，例如 「 美國 」，會讀出的文字時，要<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Pronunciation%2A>套用，是 「 美國 」。  
  
 預設值為<xref:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text%2A>屬性為空字串為""。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">嘗試將 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" /> 設定為 <see langword="null" />。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">嘗試要將空字串指派給 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />。</exception>
        <exception cref="T:System.ArgumentException">嘗試要將包含引號 (') 的字串指派給 <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsToken.Text" />。</exception>
      </Docs>
    </Member>
  </Members>
</Type>