<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6dacb7a050b755bd275e866b6ef026770c73b4c" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37608272" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <TypeSignature Language="F#" Value="type ClientFormsIdentity = class&#xA;    interface IIdentity&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>代表已使用表單驗證，經用戶端應用程式服務驗證的使用者識別。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 用戶端應用程式服務功能會使用這個類別來代表已驗證的使用者。 當您設定應用程式以使用用戶端應用程式服務與表單驗證時，您還可以驗證使用者，藉由呼叫`static`<xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType>方法。 在驗證之後，您可以擷取目前的參考<xref:System.Web.ClientServices.ClientFormsIdentity>執行個體透過<xref:System.Security.Principal.IPrincipal.Identity%2A>屬性<xref:System.Security.Principal.IPrincipal>透過擷取`static`<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>屬性。 如需詳細資訊，請參閱[用戶端應用程式服務](~/docs/framework/common-client-technologies/client-application-services.md)。  
  
 您通常會存取<xref:System.Web.ClientServices.ClientFormsIdentity>物件做為<xref:System.Security.Principal.IIdentity>參考，以避免直接相依於此類別。 您可以判斷使用者是否經過檢查<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType>身分識別的屬性。 不過，Windows，但無法對用戶端應用程式服務，可能會驗證使用者。 若要判斷使用者是否已驗證的用戶端應用程式服務，您應該也確認<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>屬性值是"ClientForms"。  
  
 您必須使用明確<xref:System.Web.ClientServices.ClientFormsIdentity>呼叫的參考<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>方法，它不由定義<xref:System.Security.Principal.IIdentity>介面。  
  
   
  
## Examples  
 下列程式碼範例示範如何以無訊息方式重新驗證使用者，當應用程式離開 「 離線 」 狀態時使用這個類別。 在此範例中，<xref:System.Windows.Forms.CheckBox.CheckedChanged>事件處理常式更新離線的狀態，以符合核取方塊的值。 如果使用者設定為線上狀態的應用程式，事件處理常式會嘗試重新驗證使用者，藉由呼叫<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>方法。 不過，如果驗證伺服器無法使用時，事件處理常式會傳回應用程式為離線狀態。  
  
> [!NOTE]
>  <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 方法只是為了方便而使用。 因為它沒有傳回值，所以無法表示重新驗證是否失敗。 例如，如果在伺服器上的使用者認證已變更，重新驗證就可能會失敗。 在這種情況下，您可能想要加入在服務呼叫失敗之後能夠明確驗證使用者的程式碼。 如需詳細資訊，請參閱中的 [存取 Web 設定] 區段[逐步解說： 使用用戶端應用程式服務](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md)。  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberSignature Language="F#" Value="new System.Web.ClientServices.ClientFormsIdentity : string * string * System.Web.Security.MembershipProvider * string * bool * System.Net.CookieContainer -&gt; System.Web.ClientServices.ClientFormsIdentity" Usage="new System.Web.ClientServices.ClientFormsIdentity (name, password, provider, authenticationType, isAuthenticated, authenticationCookies)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name">已驗證使用者的名稱。</param>
        <param name="password">已驗證之使用者的密碼。</param>
        <param name="provider">用於驗證使用者的成員資格提供者。</param>
        <param name="authenticationType">所使用之驗證類型。</param>
        <param name="isAuthenticated">如果使用者已經驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</param>
        <param name="authenticationCookies">從驗證服務擷取的 Cookie。</param>
        <summary>初始化 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationCookies : System.Net.CookieContainer" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得從驗證服務所擷取的 Cookie 的集合。</summary>
        <value>從驗證服務擷取的 Cookie。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性不適用於您的應用程式程式碼中使用。 您不能有意義地修改透過這個屬性中，所擷取的 cookie，其中包含任何有用的資訊。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string" Usage="System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用於驗證使用者的驗證類型。</summary>
        <value>用於驗證使用者的驗證類型。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您通常會存取<xref:System.Web.ClientServices.ClientFormsIdentity>物件做為<xref:System.Security.Principal.IIdentity>參考，以避免直接相依於此類別。 您可以判斷使用者是否經過檢查<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType>身分識別的屬性。 不過，Windows，但無法對用戶端應用程式服務，可能會驗證使用者。 若要判斷使用者是否已驗證的用戶端應用程式服務，您應該也確認<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>屬性值是"ClientForms"。 如需詳細資訊，請參閱<xref:System.Web.ClientServices.ClientFormsIdentity>類別概觀。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個屬性，透過<xref:System.Security.Principal.IIdentity>來判斷使用者是否目前已驗證的用戶端應用程式服務的參考。 這個範例假設應用程式是在預設組態中的使用者不需要登入一次的驗證 cookie 過期時。 否則，<xref:System.Net.WebException>可能表示使用者登入已過期。 如需詳細資訊，請參閱[如何：設定用戶端應用程式服務](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)。  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>釋放 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 使用的資源。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="clientFormsIdentity.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>釋放 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 所使用的所有資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Web.ClientServices.ClientFormsIdentity>。 <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> 方法會將 <xref:System.Web.ClientServices.ClientFormsIdentity> 保留在無法使用的狀態。 之後呼叫<xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>，您必須釋放所有的參考<xref:System.Web.ClientServices.ClientFormsIdentity>讓記憶體回收行程可以回收記憶體，<xref:System.Web.ClientServices.ClientFormsIdentity>所佔用。 如需詳細資訊，請參閱 <<c0> [ 清除 Unmanaged 資源向上](~/docs/standard/garbage-collection/unmanaged.md)並[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。  
  
> [!NOTE]
>  在您釋放最後一個 <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Web.ClientServices.ClientFormsIdentity>。 否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Web.ClientServices.ClientFormsIdentity> 物件的 `Finalize` 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="clientFormsIdentity.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</param>
        <summary>釋放 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。 `Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設為`true`。 <xref:System.Object.Finalize%2A> 叫用`Dispose`具有`disposing`設定為`false`。  
  
 當`disposing`參數為 true 時，這個方法由任何 managed 物件持有的資源全部釋出這個<xref:System.Web.ClientServices.ClientFormsIdentity>參考。 這個方法會叫用每個參考物件的 `Dispose()` 方法。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see langword="Dispose" /> 可以多次呼叫的其他物件。當覆寫<see langword="Dispose(Boolean)" />小心不要參考先前處置好的呼叫中的物件<see langword="Dispose" />。如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱 [實作 Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md)。如需詳細資訊<see langword="Dispose" />並<see cref="M:System.Object.Finalize" />，請參閱 [清除設定未受管理的 Resources](~/docs/standard/garbage-collection/unmanaged.md) 和 [覆寫 Finalize 方法] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAuthenticated : bool" Usage="System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得值，指出使用者是否已經過驗證。</summary>
        <value>如果使用者已經驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您通常會存取<xref:System.Web.ClientServices.ClientFormsIdentity>物件做為<xref:System.Security.Principal.IIdentity>參考，以避免直接相依於此類別。 您可以判斷使用者是否經過檢查<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType>身分識別的屬性。 不過，Windows，但無法對用戶端應用程式服務，可能會驗證使用者。 若要判斷使用者是否已驗證的用戶端應用程式服務，您應該也確認<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>屬性值是"ClientForms"。 如需詳細資訊，請參閱<xref:System.Web.ClientServices.ClientFormsIdentity>類別概觀。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個屬性，透過<xref:System.Security.Principal.IIdentity>來判斷使用者是否目前已驗證的用戶端應用程式服務的參考。 這個範例假設應用程式是在預設組態中的使用者不需要登入一次的驗證 cookie 過期時。 否則，<xref:System.Net.WebException>可能表示使用者登入已過期。 如需詳細資訊，請參閱[如何：設定用戶端應用程式服務](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)。  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得使用者的名稱。</summary>
        <value>使用者的名稱。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Provider : System.Web.Security.MembershipProvider" Usage="System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得用於驗證使用者的成員資格提供者。</summary>
        <value>用於驗證使用者的成員資格提供者。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberSignature Language="F#" Value="member this.RevalidateUser : unit -&gt; unit" Usage="clientFormsIdentity.RevalidateUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>使用快取的認證，以無訊息模式驗證使用者。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當您使用表單驗證來驗證目前的使用者，<xref:System.Web.ClientServices.ClientFormsIdentity>類別會儲存使用者認證，只要在執行應用程式。 不過，直到驗證 cookie 到期為止，是只驗證使用者。 在 cookie 過期後，使用者必須重新驗證以存取遠端角色或 Web 設定服務。 您可以使用**服務的進階設定**對話方塊來設定您的應用程式會自動重新驗證使用者，如中所述[How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)。 不過，如果您設定您的應用程式，以接受 cookie 到期日時，您可以透過程式設計方式重新驗證使用者，藉由呼叫<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>方法。 這個方法也很有用時從離線模式切換到線上模式中，因為應用程式關閉時離線。  
  
> [!NOTE]
>  <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 方法只是為了方便而使用。 因為它沒有傳回值，所以無法表示重新驗證是否失敗。 例如，如果在伺服器上的使用者認證已變更，重新驗證就可能會失敗。 在這種情況下，您可能想要加入在服務呼叫失敗之後能夠明確驗證使用者的程式碼。 如需詳細資訊，請參閱中的 [存取 Web 設定] 區段[逐步解說： 使用用戶端應用程式服務](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md)。  
  
   
  
## Examples  
 下列程式碼範例示範如何以無訊息方式重新驗證使用者，當應用程式離開 「 離線 」 狀態時使用這個方法。 在此範例中，<xref:System.Windows.Forms.CheckBox.CheckedChanged>事件處理常式更新離線的狀態，以符合核取方塊的值。 如果使用者設定為線上狀態的應用程式，事件處理常式會嘗試重新驗證使用者。 不過，如果驗證伺服器無法使用時，事件處理常式會傳回應用程式為離線狀態。  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
      </Docs>
    </Member>
  </Members>
</Type>