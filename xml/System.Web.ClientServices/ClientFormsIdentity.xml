<Type Name="ClientFormsIdentity" FullName="System.Web.ClientServices.ClientFormsIdentity">
  <TypeSignature Language="C#" Value="public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientFormsIdentity extends System.Object implements class System.IDisposable, class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.ClientFormsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientFormsIdentity&#xA;Implements IDisposable, IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientFormsIdentity : IDisposable, System::Security::Principal::IIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8d834-101">代表已使用表單驗證，經用戶端應用程式服務驗證的使用者識別。</span><span class="sxs-lookup"><span data-stu-id="8d834-101">Represents a user identity authenticated for client application services by using forms authentication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d834-102">用戶端應用程式服務功能會使用這個類別代表已驗證的使用者。</span><span class="sxs-lookup"><span data-stu-id="8d834-102">The client application services feature uses this class to represent an authenticated user.</span></span> <span data-ttu-id="8d834-103">當您設定應用程式使用用戶端應用程式服務與表單驗證時，您可以藉由呼叫驗證的使用者`static`<xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType>方法。</span><span class="sxs-lookup"><span data-stu-id="8d834-103">When you configure your application to use client application services and forms authentication, you can authenticate a user by calling the `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="8d834-104">在驗證之後，您可以擷取目前的參考<xref:System.Web.ClientServices.ClientFormsIdentity>透過執行個體<xref:System.Security.Principal.IPrincipal.Identity%2A>屬性<xref:System.Security.Principal.IPrincipal>透過擷取`static`<xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>屬性。</span><span class="sxs-lookup"><span data-stu-id="8d834-104">After authentication, you can retrieve a reference to the current <xref:System.Web.ClientServices.ClientFormsIdentity> instance through the <xref:System.Security.Principal.IPrincipal.Identity%2A> property of the <xref:System.Security.Principal.IPrincipal> retrieved through the `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="8d834-105">如需詳細資訊，請參閱[用戶端應用程式服務](~/docs/framework/common-client-technologies/client-application-services.md)。</span><span class="sxs-lookup"><span data-stu-id="8d834-105">For more information, see [Client Application Services](~/docs/framework/common-client-technologies/client-application-services.md).</span></span>  
  
 <span data-ttu-id="8d834-106">您通常會存取<xref:System.Web.ClientServices.ClientFormsIdentity>物件當做<xref:System.Security.Principal.IIdentity>參考，以避免直接相依於此類別。</span><span class="sxs-lookup"><span data-stu-id="8d834-106">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="8d834-107">您可以判斷使用者是否經過檢查<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType>屬性的識別。</span><span class="sxs-lookup"><span data-stu-id="8d834-107">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="8d834-108">不過，對於 Windows，但不是會針對用戶端應用程式服務，可能會驗證使用者。</span><span class="sxs-lookup"><span data-stu-id="8d834-108">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="8d834-109">若要判斷使用者是否已驗證的用戶端應用程式服務，您應該也確認<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>屬性值是"ClientForms"。</span><span class="sxs-lookup"><span data-stu-id="8d834-109">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span>  
  
 <span data-ttu-id="8d834-110">您必須使用明確<xref:System.Web.ClientServices.ClientFormsIdentity>參考呼叫<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>方法，不由定義<xref:System.Security.Principal.IIdentity>介面。</span><span class="sxs-lookup"><span data-stu-id="8d834-110">You must use an explicit <xref:System.Web.ClientServices.ClientFormsIdentity> reference to call the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method, which is not defined by the <xref:System.Security.Principal.IIdentity> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d834-111">下列程式碼範例示範如何使用這個類別，以無訊息模式重新驗證使用者，當應用程式會讓離線的狀態。</span><span class="sxs-lookup"><span data-stu-id="8d834-111">The following example code demonstrates how to use this class to silently revalidate a user when the application leaves the offline state.</span></span> <span data-ttu-id="8d834-112">在此範例中，<xref:System.Windows.Forms.CheckBox.CheckedChanged>事件處理常式將離線狀態更新為符合核取方塊的值。</span><span class="sxs-lookup"><span data-stu-id="8d834-112">In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value.</span></span> <span data-ttu-id="8d834-113">如果使用者設定成線上狀態的應用程式，此事件處理常式會嘗試驗證使用者藉由呼叫<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8d834-113">If the user sets the application to the online state, the event handler attempts to revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method.</span></span> <span data-ttu-id="8d834-114">不過，如果無法使用的驗證伺服器時，事件處理常式會傳回為離線狀態的應用程式。</span><span class="sxs-lookup"><span data-stu-id="8d834-114">However, if the authentication server is unavailable, the event handler returns the application to the offline state.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d834-115"><xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 方法只是為了方便而使用。</span><span class="sxs-lookup"><span data-stu-id="8d834-115">The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only.</span></span> <span data-ttu-id="8d834-116">因為它沒有傳回值，所以無法表示重新驗證是否失敗。</span><span class="sxs-lookup"><span data-stu-id="8d834-116">Because it does not have a return value, it cannot indicate whether revalidation has failed.</span></span> <span data-ttu-id="8d834-117">例如，如果在伺服器上的使用者認證已變更，重新驗證就可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="8d834-117">Revalidation can fail, for example, if the user credentials have changed on the server.</span></span> <span data-ttu-id="8d834-118">在這種情況下，您可能想要加入在服務呼叫失敗之後能夠明確驗證使用者的程式碼。</span><span class="sxs-lookup"><span data-stu-id="8d834-118">In this case, you might want to include code that explicitly validates users after a service call fails.</span></span> <span data-ttu-id="8d834-119">如需詳細資訊，請參閱 < 存取 Web 設定 > 一節中的[逐步解說： 使用用戶端應用程式服務](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md)。</span><span class="sxs-lookup"><span data-stu-id="8d834-119">For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.Security.Membership.ValidateUser(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Security.Principal.IPrincipal" />
    <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
    <altmember cref="T:System.Security.Principal.IIdentity" />
    <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
    <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider.Logout" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string password, class System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, class System.Net.CookieContainer authenticationCookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, password As String, provider As MembershipProvider, authenticationType As String, isAuthenticated As Boolean, authenticationCookies As CookieContainer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientFormsIdentity(System::String ^ name, System::String ^ password, System::Web::Security::MembershipProvider ^ provider, System::String ^ authenticationType, bool isAuthenticated, System::Net::CookieContainer ^ authenticationCookies);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="provider" Type="System.Web.Security.MembershipProvider" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="isAuthenticated" Type="System.Boolean" />
        <Parameter Name="authenticationCookies" Type="System.Net.CookieContainer" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="8d834-120">已驗證使用者的名稱。</span><span class="sxs-lookup"><span data-stu-id="8d834-120">The name of the authenticated user.</span></span></param>
        <param name="password"><span data-ttu-id="8d834-121">已驗證之使用者的密碼。</span><span class="sxs-lookup"><span data-stu-id="8d834-121">The password of the authenticated user.</span></span></param>
        <param name="provider"><span data-ttu-id="8d834-122">用於驗證使用者的成員資格提供者。</span><span class="sxs-lookup"><span data-stu-id="8d834-122">The membership provider used to authenticate the user.</span></span></param>
        <param name="authenticationType"><span data-ttu-id="8d834-123">所使用之驗證類型。</span><span class="sxs-lookup"><span data-stu-id="8d834-123">The type of authentication that is used.</span></span></param>
        <param name="isAuthenticated">
          <span data-ttu-id="8d834-124">如果使用者已經驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d834-124"><see langword="true" /> if the user has been authenticated; otherwise, <see langword="false" />.</span></span></param>
        <param name="authenticationCookies"><span data-ttu-id="8d834-125">從驗證服務擷取的 Cookie。</span><span class="sxs-lookup"><span data-stu-id="8d834-125">The cookies retrieved from the authentication service.</span></span></param>
        <summary><span data-ttu-id="8d834-126">初始化 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="8d834-126">Initializes a new instance of the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationCookies">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer AuthenticationCookies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer AuthenticationCookies" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationCookies As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ AuthenticationCookies { System::Net::CookieContainer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d834-127">取得從驗證服務所擷取的 Cookie 的集合。</span><span class="sxs-lookup"><span data-stu-id="8d834-127">Gets a collection of the cookies retrieved from the authentication service.</span></span></summary>
        <value><span data-ttu-id="8d834-128">從驗證服務擷取的 Cookie。</span><span class="sxs-lookup"><span data-stu-id="8d834-128">The cookies retrieved from the authentication service.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d834-129">這個屬性不適用於您的應用程式程式碼中使用。</span><span class="sxs-lookup"><span data-stu-id="8d834-129">This property is not meant for use in your application code.</span></span> <span data-ttu-id="8d834-130">您不能有意義地加以修改這個屬性，擷取的 cookie，並包含任何有用的資訊。</span><span class="sxs-lookup"><span data-stu-id="8d834-130">You cannot meaningfully modify the cookies retrieved through this property, and they contain no useful information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d834-131">取得用於驗證使用者的驗證類型。</span><span class="sxs-lookup"><span data-stu-id="8d834-131">Gets the type of authentication that is used to authenticate the user.</span></span></summary>
        <value><span data-ttu-id="8d834-132">用於驗證使用者的驗證類型。</span><span class="sxs-lookup"><span data-stu-id="8d834-132">The type of authentication that is used to authenticate the user.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d834-133">您通常會存取<xref:System.Web.ClientServices.ClientFormsIdentity>物件當做<xref:System.Security.Principal.IIdentity>參考，以避免直接相依於此類別。</span><span class="sxs-lookup"><span data-stu-id="8d834-133">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="8d834-134">您可以判斷使用者是否經過檢查<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType>屬性的識別。</span><span class="sxs-lookup"><span data-stu-id="8d834-134">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="8d834-135">不過，對於 Windows，但不是會針對用戶端應用程式服務，可能會驗證使用者。</span><span class="sxs-lookup"><span data-stu-id="8d834-135">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="8d834-136">若要判斷使用者是否已驗證的用戶端應用程式服務，您應該也確認<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>屬性值是"ClientForms"。</span><span class="sxs-lookup"><span data-stu-id="8d834-136">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span> <span data-ttu-id="8d834-137">如需詳細資訊，請參閱<xref:System.Web.ClientServices.ClientFormsIdentity>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="8d834-137">For more information, see the <xref:System.Web.ClientServices.ClientFormsIdentity> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d834-138">下列程式碼範例示範如何使用這個屬性透過<xref:System.Security.Principal.IIdentity>參考來判斷使用者是否目前已針對用戶端應用程式服務驗證。</span><span class="sxs-lookup"><span data-stu-id="8d834-138">The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services.</span></span> <span data-ttu-id="8d834-139">這個範例假設應用程式是在預設組態中，使用者不需要登入一次驗證 cookie 過期時。</span><span class="sxs-lookup"><span data-stu-id="8d834-139">This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires.</span></span> <span data-ttu-id="8d834-140">否則，<xref:System.Net.WebException>可能表示使用者登入已過期。</span><span class="sxs-lookup"><span data-stu-id="8d834-140">Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired.</span></span> <span data-ttu-id="8d834-141">如需詳細資訊，請參閱[如何：設定用戶端應用程式服務](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)。</span><span class="sxs-lookup"><span data-stu-id="8d834-141">For more information, see [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8d834-142">釋放 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 使用的資源。</span><span class="sxs-lookup"><span data-stu-id="8d834-142">Releases the resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d834-143">釋放 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 所使用的所有資源。</span><span class="sxs-lookup"><span data-stu-id="8d834-143">Releases all resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d834-144"><xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> 使用完畢時，請呼叫 <xref:System.Web.ClientServices.ClientFormsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="8d834-144">Call <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> when you are finished using the <xref:System.Web.ClientServices.ClientFormsIdentity>.</span></span> <span data-ttu-id="8d834-145"><xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> 方法會將 <xref:System.Web.ClientServices.ClientFormsIdentity> 保留在無法使用的狀態。</span><span class="sxs-lookup"><span data-stu-id="8d834-145">The <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> method leaves the <xref:System.Web.ClientServices.ClientFormsIdentity> in an unusable state.</span></span> <span data-ttu-id="8d834-146">在呼叫<xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>，您必須釋放所有參考<xref:System.Web.ClientServices.ClientFormsIdentity>讓記憶體回收行程可以回收記憶體的<xref:System.Web.ClientServices.ClientFormsIdentity>所佔用。</span><span class="sxs-lookup"><span data-stu-id="8d834-146">After calling <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A>, you must release all references to the <xref:System.Web.ClientServices.ClientFormsIdentity> so the garbage collector can reclaim the memory that the <xref:System.Web.ClientServices.ClientFormsIdentity> was occupying.</span></span> <span data-ttu-id="8d834-147">如需詳細資訊，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="8d834-147">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d834-148">在您釋放最後一個 <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> 參考之前，請務必呼叫 <xref:System.Web.ClientServices.ClientFormsIdentity>。</span><span class="sxs-lookup"><span data-stu-id="8d834-148">Always call <xref:System.Web.ClientServices.ClientFormsIdentity.Dispose%2A> before you release your last reference to the <xref:System.Web.ClientServices.ClientFormsIdentity>.</span></span> <span data-ttu-id="8d834-149">否則工作窗格所使用的資源不會釋放，直到記憶體回收行程呼叫 <xref:System.Web.ClientServices.ClientFormsIdentity> 物件的 `Finalize` 方法。</span><span class="sxs-lookup"><span data-stu-id="8d834-149">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Web.ClientServices.ClientFormsIdentity> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8d834-150"><see langword="true" /> 表示釋放 Managed 和 Unmanaged 資源，<see langword="false" /> 則表示只釋放 Unmanaged 資源。</span><span class="sxs-lookup"><span data-stu-id="8d834-150"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="8d834-151">釋放 <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> 所使用的 Unmanaged 資源，並選擇性地釋放 Managed 資源。</span><span class="sxs-lookup"><span data-stu-id="8d834-151">Releases the unmanaged resources used by the <see cref="T:System.Web.ClientServices.ClientFormsIdentity" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d834-152">這個方法會呼叫公用`Dispose()`方法和<xref:System.Object.Finalize%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8d834-152">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="8d834-153">`Dispose()` 叫用受保護`Dispose(Boolean)`方法`disposing`參數設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="8d834-153">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="8d834-154"><xref:System.Object.Finalize%2A> 叫用`Dispose`與`disposing`設`false`。</span><span class="sxs-lookup"><span data-stu-id="8d834-154"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="8d834-155">當`disposing`參數為 true，這個方法的任何 managed 物件所持有的資源全部釋出這個<xref:System.Web.ClientServices.ClientFormsIdentity>參考。</span><span class="sxs-lookup"><span data-stu-id="8d834-155">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Web.ClientServices.ClientFormsIdentity> references.</span></span> <span data-ttu-id="8d834-156">這個方法會叫用每個參考物件的 `Dispose()` 方法。</span><span class="sxs-lookup"><span data-stu-id="8d834-156">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8d834-157"><see langword="Dispose" /> 可以被其他物件呼叫多次。</span><span class="sxs-lookup"><span data-stu-id="8d834-157"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="8d834-158">在覆寫<see langword="Dispose(Boolean)" />小心不要參考物件已處置過的早期呼叫中<see langword="Dispose" />。</span><span class="sxs-lookup"><span data-stu-id="8d834-158">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="8d834-159">如需有關如何實作<see langword="Dispose(Boolean)" />，請參閱[實作 Dispose 方法](~/docs/standard/garbage-collection/implementing-dispose.md)。</span><span class="sxs-lookup"><span data-stu-id="8d834-159">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="8d834-160">如需有關<see langword="Dispose" />和<see cref="M:System.Object.Finalize" />，請參閱[清除 Unmanaged 資源上](~/docs/standard/garbage-collection/unmanaged.md)和[覆寫 Finalize 方法](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)。</span><span class="sxs-lookup"><span data-stu-id="8d834-160">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d834-161">取得值，指出使用者是否已經過驗證。</span><span class="sxs-lookup"><span data-stu-id="8d834-161">Gets a value indicating whether the user has been authenticated.</span></span></summary>
        <value>
          <span data-ttu-id="8d834-162">如果使用者已經驗證，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8d834-162"><see langword="true" /> if the user has been authenticated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d834-163">您通常會存取<xref:System.Web.ClientServices.ClientFormsIdentity>物件當做<xref:System.Security.Principal.IIdentity>參考，以避免直接相依於此類別。</span><span class="sxs-lookup"><span data-stu-id="8d834-163">You will typically access a <xref:System.Web.ClientServices.ClientFormsIdentity> object as an <xref:System.Security.Principal.IIdentity> reference to avoid a direct dependency on this class.</span></span> <span data-ttu-id="8d834-164">您可以判斷使用者是否經過檢查<xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType>屬性的識別。</span><span class="sxs-lookup"><span data-stu-id="8d834-164">You can determine whether a user is authenticated by checking the <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=nameWithType> property of the identity.</span></span> <span data-ttu-id="8d834-165">不過，對於 Windows，但不是會針對用戶端應用程式服務，可能會驗證使用者。</span><span class="sxs-lookup"><span data-stu-id="8d834-165">However, the user may be authenticated for Windows, but not for client application services.</span></span> <span data-ttu-id="8d834-166">若要判斷使用者是否已驗證的用戶端應用程式服務，您應該也確認<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>屬性值是"ClientForms"。</span><span class="sxs-lookup"><span data-stu-id="8d834-166">To determine whether the user is authenticated for client application services, you should also confirm that the <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType> property value is "ClientForms".</span></span> <span data-ttu-id="8d834-167">如需詳細資訊，請參閱<xref:System.Web.ClientServices.ClientFormsIdentity>類別概觀。</span><span class="sxs-lookup"><span data-stu-id="8d834-167">For more information, see the <xref:System.Web.ClientServices.ClientFormsIdentity> class overview.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d834-168">下列程式碼範例示範如何使用這個屬性透過<xref:System.Security.Principal.IIdentity>參考來判斷使用者是否目前已針對用戶端應用程式服務驗證。</span><span class="sxs-lookup"><span data-stu-id="8d834-168">The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services.</span></span> <span data-ttu-id="8d834-169">這個範例假設應用程式是在預設組態中，使用者不需要登入一次驗證 cookie 過期時。</span><span class="sxs-lookup"><span data-stu-id="8d834-169">This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires.</span></span> <span data-ttu-id="8d834-170">否則，<xref:System.Net.WebException>可能表示使用者登入已過期。</span><span class="sxs-lookup"><span data-stu-id="8d834-170">Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired.</span></span> <span data-ttu-id="8d834-171">如需詳細資訊，請參閱[如何：設定用戶端應用程式服務](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)。</span><span class="sxs-lookup"><span data-stu-id="8d834-171">For more information, see [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span>  
  
 [!code-csharp[ClientApplicationServices#312](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#312)]
 [!code-vb[ClientApplicationServices#312](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#312)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Security.Principal.IPrincipal" />
        <altmember cref="P:System.Security.Principal.IPrincipal.Identity" />
        <altmember cref="T:System.Security.Principal.IIdentity" />
        <altmember cref="P:System.Security.Principal.IIdentity.IsAuthenticated" />
        <altmember cref="P:System.Security.Principal.IIdentity.AuthenticationType" />
        <altmember cref="P:System.Web.ClientServices.ClientFormsIdentity.AuthenticationType" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d834-172">取得使用者的名稱。</span><span class="sxs-lookup"><span data-stu-id="8d834-172">Gets the name of the user.</span></span></summary>
        <value><span data-ttu-id="8d834-173">使用者的名稱。</span><span class="sxs-lookup"><span data-stu-id="8d834-173">The name of the user.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider Provider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider Provider" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.ClientFormsIdentity.Provider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Provider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ Provider { System::Web::Security::MembershipProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8d834-174">取得用於驗證使用者的成員資格提供者。</span><span class="sxs-lookup"><span data-stu-id="8d834-174">Gets the membership provider that is used to authenticate the user.</span></span></summary>
        <value><span data-ttu-id="8d834-175">用於驗證使用者的成員資格提供者。</span><span class="sxs-lookup"><span data-stu-id="8d834-175">The membership provider that is used to authenticate the user.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RevalidateUser">
      <MemberSignature Language="C#" Value="public void RevalidateUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RevalidateUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevalidateUser ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevalidateUser();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8d834-176">使用快取的認證，以無訊息模式驗證使用者。</span><span class="sxs-lookup"><span data-stu-id="8d834-176">Silently authenticates the user by using cached credentials.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8d834-177">當您使用表單驗證來驗證目前的使用者，<xref:System.Web.ClientServices.ClientFormsIdentity>類別會儲存使用者認證，只要執行應用程式。</span><span class="sxs-lookup"><span data-stu-id="8d834-177">When you use forms authentication to validate the current user, the <xref:System.Web.ClientServices.ClientFormsIdentity> class stores the user credentials as long as the application is running.</span></span> <span data-ttu-id="8d834-178">不過，驗證 cookie 到期之前，是只驗證使用者。</span><span class="sxs-lookup"><span data-stu-id="8d834-178">However, the user is only authenticated until the authentication cookie expires.</span></span> <span data-ttu-id="8d834-179">Cookie 過期後，使用者必須重新驗證以存取遠端角色或 Web 設定服務。</span><span class="sxs-lookup"><span data-stu-id="8d834-179">After the cookie expires, the user must be revalidated to access the remote roles or Web settings services.</span></span> <span data-ttu-id="8d834-180">您可以使用**服務的進階設定**對話方塊來設定自動重新驗證使用者，您的應用程式中所述[How to： 設定用戶端應用程式服務](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md)。</span><span class="sxs-lookup"><span data-stu-id="8d834-180">You can use the **Advanced Settings for Services** dialog box to configure your application to automatically revalidate the user, as described in [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).</span></span> <span data-ttu-id="8d834-181">不過，如果您設定您的應用程式接受的 cookie 到期時，您可以透過程式設計方式重新驗證使用者，藉由呼叫<xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="8d834-181">However, if you configure your application to honor the cookie expiration, you can programmatically revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method.</span></span> <span data-ttu-id="8d834-182">這個方法時也很有用從離線模式切換到線上模式中，因為應用程式關閉時離線。</span><span class="sxs-lookup"><span data-stu-id="8d834-182">This method is also useful when switching from offline mode to online mode, because the application may have been shut down while offline.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8d834-183"><xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> 方法只是為了方便而使用。</span><span class="sxs-lookup"><span data-stu-id="8d834-183">The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only.</span></span> <span data-ttu-id="8d834-184">因為它沒有傳回值，所以無法表示重新驗證是否失敗。</span><span class="sxs-lookup"><span data-stu-id="8d834-184">Because it does not have a return value, it cannot indicate whether revalidation has failed.</span></span> <span data-ttu-id="8d834-185">例如，如果在伺服器上的使用者認證已變更，重新驗證就可能會失敗。</span><span class="sxs-lookup"><span data-stu-id="8d834-185">Revalidation can fail, for example, if the user credentials have changed on the server.</span></span> <span data-ttu-id="8d834-186">在這種情況下，您可能想要加入在服務呼叫失敗之後能夠明確驗證使用者的程式碼。</span><span class="sxs-lookup"><span data-stu-id="8d834-186">In this case, you might want to include code that explicitly validates users after a service call fails.</span></span> <span data-ttu-id="8d834-187">如需詳細資訊，請參閱 < 存取 Web 設定 > 一節中的[逐步解說： 使用用戶端應用程式服務](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md)。</span><span class="sxs-lookup"><span data-stu-id="8d834-187">For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/docs/framework/common-client-technologies/walkthrough-using-client-application-services.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8d834-188">下列程式碼範例示範如何使用這個方法，以無訊息模式重新驗證使用者，當應用程式會讓離線的狀態。</span><span class="sxs-lookup"><span data-stu-id="8d834-188">The following example code demonstrates how to use this method to silently revalidate a user when the application leaves the offline state.</span></span> <span data-ttu-id="8d834-189">在此範例中，<xref:System.Windows.Forms.CheckBox.CheckedChanged>事件處理常式將離線狀態更新為符合核取方塊的值。</span><span class="sxs-lookup"><span data-stu-id="8d834-189">In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value.</span></span> <span data-ttu-id="8d834-190">如果使用者設定成線上狀態的應用程式，此事件處理常式會嘗試重新驗證使用者。</span><span class="sxs-lookup"><span data-stu-id="8d834-190">If the user sets the application to the online state, the event handler attempts to revalidate the user.</span></span> <span data-ttu-id="8d834-191">不過，如果無法使用的驗證伺服器時，事件處理常式會傳回為離線狀態的應用程式。</span><span class="sxs-lookup"><span data-stu-id="8d834-191">However, if the authentication server is unavailable, the event handler returns the application to the offline state.</span></span>  
  
 [!code-csharp[ClientApplicationServices#315](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#315)]
 [!code-vb[ClientApplicationServices#315](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#315)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ClientServices.ConnectivityStatus" />
        <altmember cref="P:System.Web.ClientServices.ConnectivityStatus.IsOffline" />
      </Docs>
    </Member>
  </Members>
</Type>