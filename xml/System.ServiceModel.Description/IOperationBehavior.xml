<Type Name="IOperationBehavior" FullName="System.ServiceModel.Description.IOperationBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c732ce96a8a54292f54ffa327ffe74131f357db0" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52235018" /></Metadata><TypeSignature Language="C#" Value="public interface IOperationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IOperationBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationBehavior" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationBehavior" />
  <TypeSignature Language="F#" Value="type IOperationBehavior = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a2dc2-101">實作方法，這些方法可用於延伸服務或用戶端應用程式中作業的執行階段行為。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-101">Implements methods that can be used to extend run-time behavior for an operation in either a service or client application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2dc2-102">您可以實作 <xref:System.ServiceModel.Description.IOperationBehavior> 介面，以在用戶端或服務應用程式的應用程式層級修改、檢查或延伸作業執行的某些方面。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-102">Implement the <xref:System.ServiceModel.Description.IOperationBehavior> interface to modify, examine, or extend some aspect of operation-wide execution at the application level for either client or service applications.</span></span>  
  
-   <span data-ttu-id="a2dc2-103">您可以使用 <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> 方法在執行階段傳遞自訂資料，讓繫結可支援自訂行為。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-103">Use the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to pass custom data at runtime to enable bindings to support custom behavior.</span></span>  
  
-   <span data-ttu-id="a2dc2-104">您可以使用 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> 方法來修改、檢查或插入延伸至用戶端應用程式中的用戶端發送器。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-104">Use the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method to modify, examine, or insert extensions to a client dispatcher in a client application.</span></span>  
  
-   <span data-ttu-id="a2dc2-105">您可以使用 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> 方法來修改、檢查或插入延伸至服務應用程式中的作業執行。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-105">Use the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method to modify, examine, or insert extensions to operation-wide execution in a service application.</span></span>  
  
-   <span data-ttu-id="a2dc2-106">您可以使用 <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> 方法來確認 <xref:System.ServiceModel.Description.OperationDescription> 符合特定需求。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-106">Use the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method to confirm that a <xref:System.ServiceModel.Description.OperationDescription> meets specific requirements.</span></span> <span data-ttu-id="a2dc2-107">這可以用於確保作業已啟用特定的組態設定，而且支援特定功能和其他需求。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-107">This can be used to ensure that an operation has a certain configuration setting enabled, supports a particular feature and other requirements.</span></span>  
  
 <span data-ttu-id="a2dc2-108"><xref:System.ServiceModel.Description.IOperationBehavior> 物件可以利用其中任何一種方法，但通常只有一種是重要的；在這種情況下，未使用的方法不需執行動作就可以傳回。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-108"><xref:System.ServiceModel.Description.IOperationBehavior> objects can make use of any of these methods, but often only one is important; in such cases, the unused methods can return, performing no action.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a2dc2-109">所有的 <xref:System.ServiceModel.Description.IOperationBehavior> 方法都會傳遞 <xref:System.ServiceModel.Description.OperationDescription> 物件做為參數。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-109">All of the <xref:System.ServiceModel.Description.IOperationBehavior> methods pass an <xref:System.ServiceModel.Description.OperationDescription> object as a parameter.</span></span> <span data-ttu-id="a2dc2-110">這個參數僅供檢查之用；如果您修改 <xref:System.ServiceModel.Description.OperationDescription> 物件，執行行為就會變成未定義狀態。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-110">This parameter is for examination only; if you modify the <xref:System.ServiceModel.Description.OperationDescription> object the execution behavior is undefined.</span></span>  
  
 <span data-ttu-id="a2dc2-111"><xref:System.ServiceModel.Description.IOperationBehavior> 物件通常用於存取服務應用程式中 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 物件和用戶端應用程式中 <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> 物件的各種屬性。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-111"><xref:System.ServiceModel.Description.IOperationBehavior> objects are typically used to access the various properties of the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> object in a service application and the <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> object in a client application.</span></span>  
  
 <span data-ttu-id="a2dc2-112">一般而言，開發人員會先檢閱擴充點，以判斷哪個自訂選項適合應用程式的情況，然後在適當的範圍內實作自訂。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-112">Typically, the developer first reviews the extensibility points to determine which customization option suits the application scenario and then implements the customization at the appropriate scope.</span></span> <span data-ttu-id="a2dc2-113">例如，<xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> 物件可以為整個服務中的所有訊息插入自訂，而 <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> 物件可以為特定合約上的所有訊息插入自訂等等。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-113">For example, <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=nameWithType> objects can insert customizations for all messages in an entire service and <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=nameWithType> objects can insert customizations for all messages across a specific contract, and so on.</span></span> <span data-ttu-id="a2dc2-114">如需各種可用屬性和自訂的說明，請參閱 <<c0> [ 擴充 ServiceHost 與服務模型層](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md)。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-114">For a description of the various properties and customizations available, see [Extending ServiceHost and the Service Model Layer](~/docs/framework/wcf/extending/extending-servicehost-and-the-service-model-layer.md).</span></span>  
  
 <span data-ttu-id="a2dc2-115">一旦決定自訂 （並視需要實作自訂介面） 和<xref:System.ServiceModel.Description.IOperationBehavior>是適當的範圍內的自訂功能，自訂必須插入 Windows Communication Foundation (WCF) 執行階段藉由實作<xref:System.ServiceModel.Description.IOperationBehavior>並將作業行為加入至執行階段。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-115">Once a customization has been decided upon (and the customization interface implemented if necessary) and the <xref:System.ServiceModel.Description.IOperationBehavior> is the appropriate scope of customization, the customization must be inserted into the Windows Communication Foundation (WCF) runtime by implementing <xref:System.ServiceModel.Description.IOperationBehavior> and adding the operation behavior to the runtime.</span></span>  
  
 <span data-ttu-id="a2dc2-116">有兩種方法可將 <xref:System.ServiceModel.Description.IOperationBehavior> 加入至執行階段：</span><span class="sxs-lookup"><span data-stu-id="a2dc2-116">There are two ways to add the <xref:System.ServiceModel.Description.IOperationBehavior> to the runtime:</span></span>  
  
-   <span data-ttu-id="a2dc2-117">在開啟服務主機 (在服務應用程式中) 或通道處理站 (在用戶端應用程式中) 之前，以程式設計的方式將自訂作業行為加入至 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-117">Programmatically add the custom operation behavior to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property prior to the opening of the service host (in a service application) or the channel factory (in a client application).</span></span>  
  
-   <span data-ttu-id="a2dc2-118">使用自訂屬性加入行為。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-118">Add the behavior using a custom attribute.</span></span>  
  
 <span data-ttu-id="a2dc2-119">若要執行預定的服務自訂工作，則必須在建構服務執行階段之前將 <xref:System.ServiceModel.Description.IOperationBehavior> 物件加入至 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> 屬性，這個執行階段會在針對 <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> 呼叫 <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType> 方法時發生。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-119">To perform the service customization task for which it is intended, the <xref:System.ServiceModel.Description.IOperationBehavior> object must be added to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property prior to the construction of the service runtime, which occurs when <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method is called on <xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType>.</span></span> <span data-ttu-id="a2dc2-120">若要執行用戶端自訂工作，則必須在針對 <xref:System.ServiceModel.Description.IOperationBehavior> 呼叫 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> 方法或 <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> 方法之前，先將 <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> 物件加入至 <xref:System.ServiceModel.ChannelFactory%601> 屬性。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-120">To perform a client customization task, the <xref:System.ServiceModel.Description.IOperationBehavior> object must be added to the <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> property before calling the <xref:System.ServiceModel.ChannelFactory%601.CreateChannel%2A?displayProperty=nameWithType> method or the <xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType> method on <xref:System.ServiceModel.ChannelFactory%601>.</span></span>  
  
 <span data-ttu-id="a2dc2-121">雖然作業行為是設計用來輕鬆存取個別作業範圍的執行階段，但是您可以藉由存取父執行階段物件來存取較大範圍的執行階段。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-121">Although the operation behavior is designed for easy access to the runtime at the scope of an individual operation, you can access the runtime at a larger scope by accessing the parent runtime object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2dc2-122">下列程式碼範例將示範如何在針對作業叫用偵測器時，實作寫入主控台的 <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-122">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="a2dc2-123">這項自訂只能附加到 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 或 <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType>，所以通常是由作業行為插入。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-123">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="a2dc2-124">下列程式碼範例將示範作業行為如何將參數偵測器附加到執行階段。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-124">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBindingParameters(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="iOperationBehavior.AddBindingParameters (operationDescription, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="a2dc2-125">正在檢查的作業。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-125">The operation being examined.</span></span> <span data-ttu-id="a2dc2-126">只能用於檢查。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-126">Use for examination only.</span></span> <span data-ttu-id="a2dc2-127">如果作業描述受到修改，結果就會變成未定義狀態。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-127">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="bindingParameters"><span data-ttu-id="a2dc2-128">繫結項目支援行為所需的物件集合。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-128">The collection of objects that binding elements require to support the behavior.</span></span></param>
        <summary><span data-ttu-id="a2dc2-129">您可以實作這個方法，在執行階段將資料傳遞至繫結，以支援自訂行為。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-129">Implement to pass data at runtime to bindings to support custom behavior.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2dc2-130">您可以實作 <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> 方法，為繫結項目提供支援作業行為所需要的額外物件。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-130">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to provide binding elements with the extra objects they require to support the operation behavior.</span></span> <span data-ttu-id="a2dc2-131">如果在此處加入繫結參數，當建立通道接聽程式或通道處理站時，繫結可以找出並處理這些物件。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-131">When binding parameters are added here, the binding can locate and process these objects when the channel listener or channel factory is created.</span></span> <span data-ttu-id="a2dc2-132">一般而言，您可以實作 <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> 方法將有關作業的資訊傳遞至自訂繫結項目，以便能夠正確建置支援通道。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-132">Typically, you implement the <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters%2A> method to pass information about the operation to a custom binding element so that it can build a supporting channel correctly.</span></span> <span data-ttu-id="a2dc2-133">如果不需要修改，則不會傳回值。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-133">Return no value if no modifications are required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyClientBehavior">
      <MemberSignature Language="C#" Value="public void ApplyClientBehavior (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Dispatcher.ClientOperation clientOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyClientBehavior(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Dispatcher.ClientOperation clientOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyClientBehavior(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Dispatcher::ClientOperation ^ clientOperation);" />
      <MemberSignature Language="F#" Value="abstract member ApplyClientBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.ClientOperation -&gt; unit" Usage="iOperationBehavior.ApplyClientBehavior (operationDescription, clientOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="clientOperation" Type="System.ServiceModel.Dispatcher.ClientOperation" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="a2dc2-134">正在檢查的作業。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-134">The operation being examined.</span></span> <span data-ttu-id="a2dc2-135">只能用於檢查。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-135">Use for examination only.</span></span> <span data-ttu-id="a2dc2-136">如果作業描述受到修改，結果就會變成未定義狀態。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-136">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="clientOperation"><span data-ttu-id="a2dc2-137">執行階段物件，公開由 <paramref name="operationDescription" /> 描述之作業的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-137">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</span></span></param>
        <summary><span data-ttu-id="a2dc2-138">實作作業上用戶端的修改或延伸。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-138">Implements a modification or extension of the client across an operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2dc2-139">您可以實作 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> 方法，以在搭配特定作業使用的所有訊息上檢視、修改或將自訂延伸加入至用戶端執行階段。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-139">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method to view, modify, or add a custom extension to the client runtime across all messages used with a specific operation.</span></span> <span data-ttu-id="a2dc2-140">如需有關您可以使用用戶端執行階段物件進行何種自訂的詳細資訊，請參閱 <xref:System.ServiceModel.Dispatcher.ClientRuntime> 和 <xref:System.ServiceModel.Dispatcher.ClientOperation>。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-140">For details about what customizations you can do with a client run-time object, see <xref:System.ServiceModel.Dispatcher.ClientRuntime> and <xref:System.ServiceModel.Dispatcher.ClientOperation>.</span></span>  
  
 <span data-ttu-id="a2dc2-141">如果行為只預定用於服務應用程式，建議使用 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> 方法擲回 <xref:System.NotImplementedException>。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-141">It is recommended that the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> method throw a <xref:System.NotImplementedException> if the behavior is only intended for use in a service application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2dc2-142">下列程式碼範例將示範如何在針對作業叫用偵測器時，實作寫入主控台的 <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-142">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="a2dc2-143">這項自訂只能附加到 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 或 <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType>，所以通常是由作業行為插入。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-143">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="a2dc2-144">下列程式碼範例將示範作業行為如何將參數偵測器附加到執行階段。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-144">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription operationDescription, System.ServiceModel.Dispatcher.DispatchOperation dispatchOperation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.OperationDescription operationDescription, class System.ServiceModel.Dispatcher.DispatchOperation dispatchOperation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyDispatchBehavior(System::ServiceModel::Description::OperationDescription ^ operationDescription, System::ServiceModel::Dispatcher::DispatchOperation ^ dispatchOperation);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.OperationDescription * System.ServiceModel.Dispatcher.DispatchOperation -&gt; unit" Usage="iOperationBehavior.ApplyDispatchBehavior (operationDescription, dispatchOperation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
        <Parameter Name="dispatchOperation" Type="System.ServiceModel.Dispatcher.DispatchOperation" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="a2dc2-145">正在檢查的作業。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-145">The operation being examined.</span></span> <span data-ttu-id="a2dc2-146">只能用於檢查。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-146">Use for examination only.</span></span> <span data-ttu-id="a2dc2-147">如果作業描述受到修改，結果就會變成未定義狀態。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-147">If the operation description is modified, the results are undefined.</span></span></param>
        <param name="dispatchOperation"><span data-ttu-id="a2dc2-148">執行階段物件，公開由 <paramref name="operationDescription" /> 描述之作業的自訂屬性。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-148">The run-time object that exposes customization properties for the operation described by <paramref name="operationDescription" />.</span></span></param>
        <summary><span data-ttu-id="a2dc2-149">實作作業上服務的修改或延伸。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-149">Implements a modification or extension of the service across an operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2dc2-150">您可以實作 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> 方法，以在所有訊息上或針對特定作業檢視、修改或延伸服務執行階段。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-150">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method to view, modify, or extend the service runtime across all messages or for a specific operation.</span></span> <span data-ttu-id="a2dc2-151">如需您可以在服務應用程式中執行何種自訂的詳細資訊，請參閱 <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> 和 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-151">For details about what customizations you can do in a service application, see <xref:System.ServiceModel.Dispatcher.DispatchRuntime?displayProperty=nameWithType> and <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a2dc2-152">如果行為只預定用於用戶端應用程式，建議使用 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> 方法擲回 <xref:System.NotImplementedException> 例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-152">It is recommended that the <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> method throw a <xref:System.NotImplementedException> exception if the behavior is only intended for use in a client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2dc2-153">下列程式碼範例將示範如何在針對作業叫用偵測器時，實作寫入主控台的 <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-153">The following code example shows an implementation of <xref:System.ServiceModel.Dispatcher.IParameterInspector?displayProperty=nameWithType> that writes to the console when the inspector is invoked on an operation.</span></span> <span data-ttu-id="a2dc2-154">這項自訂只能附加到 <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> 或 <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType>，所以通常是由作業行為插入。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-154">This customization can only be attached to the <xref:System.ServiceModel.Dispatcher.DispatchOperation?displayProperty=nameWithType> or <xref:System.ServiceModel.Dispatcher.ClientOperation?displayProperty=nameWithType> and is therefore usually inserted by an operation behavior.</span></span>  
  
 [!code-csharp[Interceptors#4](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/interceptors.cs#4)]
 [!code-vb[Interceptors#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/interceptors.vb#4)]  
  
 <span data-ttu-id="a2dc2-155">下列程式碼範例將示範作業行為如何將參數偵測器附加到執行階段。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-155">The following code example shows how the operation behavior attaches the parameter inspector to the runtime.</span></span>  
  
 [!code-csharp[Interceptors#6](~/samples/snippets/csharp/VS_Snippets_CFX/interceptors/cs/insertingbehaviors.cs#6)]
 [!code-vb[Interceptors#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/interceptors/vb/insertingbehaviors.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.OperationDescription operationDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.OperationDescription operationDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationBehavior.Validate(System.ServiceModel.Description.OperationDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate(System::ServiceModel::Description::OperationDescription ^ operationDescription);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.OperationDescription -&gt; unit" Usage="iOperationBehavior.Validate operationDescription" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operationDescription" Type="System.ServiceModel.Description.OperationDescription" />
      </Parameters>
      <Docs>
        <param name="operationDescription"><span data-ttu-id="a2dc2-156">正在檢查的作業。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-156">The operation being examined.</span></span> <span data-ttu-id="a2dc2-157">只能用於檢查。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-157">Use for examination only.</span></span> <span data-ttu-id="a2dc2-158">如果作業描述受到修改，結果就會變成未定義狀態。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-158">If the operation description is modified, the results are undefined.</span></span></param>
        <summary><span data-ttu-id="a2dc2-159">您可以實作這個方法，確認作業符合某些所需的條件。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-159">Implement to confirm that the operation meets some intended criteria.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2dc2-160">您可以實作 <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> 方法來檢查結構，以確認任何一組條件。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-160">Implement the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method to examine the structure to confirm any set of criteria.</span></span> <span data-ttu-id="a2dc2-161">使用這個方法，不需要在 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> 或 <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> 中執行任何自訂。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-161">It is not necessary to perform any customizations in <xref:System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior%2A> or <xref:System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior%2A> to make use of this method.</span></span> <span data-ttu-id="a2dc2-162">如果作業通過驗證就會傳回，否則會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-162">If the operation passes validation, return; otherwise, throw an exception.</span></span>  
  
 <span data-ttu-id="a2dc2-163">例如，<xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> 方法可用於確保作業已獲授權。</span><span class="sxs-lookup"><span data-stu-id="a2dc2-163">For example, the <xref:System.ServiceModel.Description.IOperationBehavior.Validate%2A> method can be use to ensure that an operation is authorized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>