<Type Name="ServiceMetadataBehavior" FullName="System.ServiceModel.Description.ServiceMetadataBehavior">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14b55be90fd7de5a894a23472c6d2e44b4931fe8" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32693628" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceMetadataBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceMetadataBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceMetadataBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceMetadataBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceMetadataBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>控制服務中繼資料與相關資訊的發行。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新增<xref:System.ServiceModel.Description.ServiceMetadataBehavior>物件<xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A?displayProperty=nameWithType>集合 (或[ &lt;serviceMetadata&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicemetadata.md)應用程式組態檔中的項目) 來啟用或停用發行服務中繼資料。 然而，將行為加入至服務並不足以啟用中繼資料發行：  
  
-   若要啟用 WS-Transfer GET 中繼資料擷取，您也必須將端點新增至合約為 `IMetadataExchange` 的服務。 如需範例，請參閱[How to： 服務使用程式碼發行中繼資料](~/docs/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-code.md)。 您可以將 `IMetadataExchange` 端點設定為任何其他端點。  
  
-   若要啟用 HTTP GET 中繼資料擷取，請將 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> 屬性設定為 `true`。 HTTP GET 中繼資料位址的相關資訊，請參閱<xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A>。  
  
 `IMetadataExchange` 端點的位址會遵循與結合基底位址和端點位址相關的一般規則。 如需詳細資訊，請參閱[發行中繼資料](~/docs/framework/wcf/feature-details/publishing-metadata.md)。  
  
 若要啟用發行中繼資料使用組態檔，加入[ &lt;serviceMetadata&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicemetadata.md)元素[ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md)項目，並將關聯的項目[&lt;服務&gt;](~/docs/framework/configure-apps/file-schema/wcf/service.md)您要發行中繼資料的項目。 如需範例，請參閱[How to： 使用組態檔的服務發行中繼資料](~/docs/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-a-configuration-file.md)。 此類別具有下列成員：  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> 屬性會指定是否針對 HTTP/GET 要求傳回中繼資料。  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 屬性 (搭配基底位址) 會指定 HTTP/GET 位址。  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> 屬性會指定是否針對 HTTPS/GET 要求傳回中繼資料。  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 屬性 (與基底位址連結) 會指定 HTTPS/GET 位址。  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter%2A> 屬性會傳回基礎匯出工具。  
  
 一般來說，<xref:System.ServiceModel.Description.ServiceMetadataBehavior> 是從應用程式組態檔中使用。 如需程式碼範例，請參閱＜範例＞一節。  
  
   
  
## Examples  
 下列程式碼範例會示範如何在組態檔中使用 <xref:System.ServiceModel.Description.ServiceMetadataBehavior>，以啟用 HTTP GET 和 WS-Transfer GET 要求的中繼資料支援。  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceMetadataBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceMetadataBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>初始化 <see cref="T:System.ServiceModel.Description.ServiceMetadataBehavior" /> 類別的新執行個體。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用下列值建立 <xref:System.ServiceModel.Description.ServiceMetadataBehavior>：  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> 屬性為 `false`。  
  
-   <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> 屬性為 `false`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalMetadataLocation">
      <MemberSignature Language="C#" Value="public Uri ExternalMetadataLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ExternalMetadataLocation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalMetadataLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ExternalMetadataLocation { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值是服務中繼資料的位置。</summary>
        <value>服務中繼資料的位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 將外部中繼資料位置的參考傳回用戶端。 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation%2A> 屬性可以是相對或絕對屬性。 如果是相對屬性，則會視用戶端擷取中繼資料的方式，由相對於 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 或 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的用戶端來解析位址。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">此值為絕對值，而且結構描述既不是 http 也不是 https。</exception>
      </Docs>
    </Member>
    <Member MemberName="HttpGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當傳輸是 HTTP 時要用來配置中繼資料擷取的繫結。</summary>
        <value>可用於透過 HTTP 通訊協定來擷取中繼資料的 <see cref="T:System.ServiceModel.Channels.Binding" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 WCF 的舊版中，是使用 HTTP GET 透過網頁瀏覽器存取服務說明頁，以完成中繼資料的擷取。 僅支援 <xref:System.ServiceModel.Channels.HttpTransportBindingElement>。  針對使用 HTTPS GET 的中繼資料擷取，僅支援 <xref:System.ServiceModel.Channels.HttpsTransportBindingElement>。   HttpGetBinding 與 HttpsGetBinding 屬性可啟用透過 HTTP GET (或 HTTPS GET) 進行的中繼資料擷取的繫結，以及用於存取可設定服務網頁的繫結 (不論是以程式來設計或透過組態檔)。  
  
 如需有關如何擷取說明頁的詳細資訊，請使用<xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A>和<xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpGetEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值會指出是否發行要使用 HTTP/GET 要求擷取的服務中繼資料。</summary>
        <value>
          如果發行 WSDL 則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 的值為相對值，則發行中繼資料的位址為基底位址和服務位址，外加一個 `?wsdl` 查詢字串。  
  
 如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 的值為絕對值，則發行中繼資料的位址為 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 的值，外加一個 `?wsdl` 查詢字串。  
  
 例如，如果服務位址為 `http://localhost:8080/CalculatorService` 且 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 為空字串，則 HTTP/GET 中繼資料位址為 `http://localhost:8080/CalculatorService?wsdl`。  
  
 如果您沒有啟用這個屬性，也沒有變更 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 或將它設定為相對位址，則在沒有使用 HTTP 的基底位址開啟服務主機時，就會在執行階段擲回例外狀況。  
  
   
  
## Examples  
 下列程式碼範例會示範如何在組態檔中使用 <xref:System.ServiceModel.Description.ServiceMetadataBehavior>，以啟用 HTTP/GET 和 WS-Transfer/GET 要求的中繼資料支援。  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定為 HTTP/GET 要求發行中繼資料的位置。</summary>
        <value>中繼資料的絕對或相對位置。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 的值為相對值，則發行中繼資料的位址為基底位址和服務位址，外加一個 `?wsdl` 查詢字串。  
  
 如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 的值為絕對值，則發行中繼資料的位址為此值，外加一個 `?wsdl` 查詢字串。  
  
 例如，如果服務位址為 `http://localhost:8080/CalculatorService` 且 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> 為空字串，則 HTTP/GET 中繼資料位址為 `http://localhost:8080/CalculatorService?wsdl`。  
  
   
  
## Examples  
 下列程式碼範例會示範如何在組態檔中使用 <xref:System.ServiceModel.Description.ServiceMetadataBehavior>，以啟用 HTTP/GET 和 WS-Transfer/GET 要求的中繼資料支援。  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定當傳輸是 HTTPS 時要用來設定中繼資料擷取的繫結。</summary>
        <value>可用於透過 HTTPS 通訊協定來擷取中繼資料的 <see cref="T:System.ServiceModel.Channels.Binding" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在 WCF 的舊版中，是使用 HTTP GET 透過網頁瀏覽器存取服務說明頁，以完成中繼資料的擷取。 僅支援 <xref:System.ServiceModel.Channels.HttpTransportBindingElement>。  針對使用 HTTPS GET 的中繼資料擷取，僅支援 <xref:System.ServiceModel.Channels.HttpsTransportBindingElement>。   HttpGetBinding 與 HttpsGetBinding 屬性可啟用透過 HTTP GET (或 HTTPS GET) 進行的中繼資料擷取的繫結，以及用於存取可設定服務網頁的繫結 (不論是以程式來設計或透過組態檔)。  
  
 如需有關如何擷取說明頁的詳細資訊，請使用<xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A>和<xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A>屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsGetEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定值，這個值會指出是否發行服務中繼資料以使用 HTTPS/GET 要求進行擷取。</summary>
        <value>
          如果發行 WSDL 則為 <see langword="true" />，否則為 <see langword="false" />。 預設值為 <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的值為相對值，則發行中繼資料的位址為基底位址和服務位址，外加一個 `?wsdl` 查詢字串。  
  
 如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的值為絕對值，則發行中繼資料的位址為 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的值，外加一個 `?wsdl` 查詢字串。  
  
 例如，如果服務位址為 `https://localhost:8080/CalculatorService` 且 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 為空字串，則 HTTPS/GET 中繼資料位址為 `https://localhost:8080/CalculatorService?wsdl`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定為 HTTPS/GET 要求發行中繼資料的位置。</summary>
        <value>HTTPS 中繼資料的位址。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的值為相對值，則發行中繼資料的位址為基底位址和服務位址，外加一個 `?wsdl` 查詢字串。  
  
 如果 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的值為絕對值，則發行中繼資料的位址為 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 的值，外加一個 `?wsdl` 查詢字串。  
  
 例如，如果服務位址為 `https://localhost:8080/CalculatorService` 且 <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> 為空字串，則 HTTPS/GET 中繼資料位址為 `https://localhost:8080/CalculatorService?wsdl`。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataExporter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.MetadataExporter MetadataExporter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.MetadataExporter MetadataExporter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter" />
      <MemberSignature Language="VB.NET" Value="Public Property MetadataExporter As MetadataExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::MetadataExporter ^ MetadataExporter { System::ServiceModel::Description::MetadataExporter ^ get(); void set(System::ServiceModel::Description::MetadataExporter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得或設定用來發行服務中繼資料的內部 <see cref="T:System.ServiceModel.Description.MetadataExporter" /> 物件。</summary>
        <value>內部 <see cref="T:System.ServiceModel.Description.MetadataExporter" /> 物件。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.ServiceModel.Description.MetadataExporter> 物件修改服務中繼資料的發行。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MexContractName">
      <MemberSignature Language="C#" Value="public const string MexContractName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MexContractName" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName" />
      <MemberSignature Language="VB.NET" Value="Public Const MexContractName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ MexContractName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>傳回字串 <c>IMetadataContract</c>。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">要設定的服務描述。</param>
        <param name="serviceHostBase">服務的主機。</param>
        <param name="endpoints">要設定的端點。</param>
        <param name="parameters">要設定的繫結參數。</param>
        <summary>
          <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> 實作，會設定基礎繫結以支援行為。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">要修改的服務描述。</param>
        <param name="serviceHostBase">服務的主機。</param>
        <summary>
          <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> 實作，會設定基礎繫結以支援服務上的行為。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="description" /> 或 <paramref name="serviceHostBase" /> 為 <see langword="null" />。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="serviceHostBase" /> 的目的端位址為 <see langword="null" />。</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">要驗證的服務描述。</param>
        <param name="serviceHostBase">服務的主機。</param>
        <summary>
          <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> 實作，會驗證服務描述是否可支援行為。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>