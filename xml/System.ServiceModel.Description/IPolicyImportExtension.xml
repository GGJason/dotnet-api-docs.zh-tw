<Type Name="IPolicyImportExtension" FullName="System.ServiceModel.Description.IPolicyImportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2dafea050ab8f58e92bc123d4611ca1624cfae00" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37456513" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPolicyImportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPolicyImportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IPolicyImportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPolicyImportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPolicyImportExtension" />
  <TypeSignature Language="F#" Value="type IPolicyImportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="292b8-101">定義物件的方法，該物件會匯入有關繫結的自訂原則判斷提示。</span>
      <span class="sxs-lookup">
        <span data-stu-id="292b8-101">Defines a method for objects that import custom policy assertions about bindings.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="292b8-102">您可以實作 <xref:System.ServiceModel.Description.IPolicyImportExtension> 介面，在特定端點所公開的 WSDL 資訊中搜尋有關端點功能或需求的自訂原則判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-102">Implement the <xref:System.ServiceModel.Description.IPolicyImportExtension> interface to search WSDL information exposed by a particular endpoint for custom policy assertions about endpoint capabilities or requirements.</span></span> <span data-ttu-id="292b8-103">一般而言，原則匯入工具會搜尋特定的判斷提示，以及插入繫結項目、設定繫結項目或修改合約，以支援判斷提示的需求。</span><span class="sxs-lookup"><span data-stu-id="292b8-103">Typically, a policy importer searches for a specific assertion and either inserts a binding element, configures a binding element, or modifies the contract to support the requirements of the assertion.</span></span>  
  
 <span data-ttu-id="292b8-104">和其對應的 <xref:System.ServiceModel.Description.IPolicyExportExtension> 不同的是，<xref:System.ServiceModel.Description.IPolicyImportExtension> 不需要由 <xref:System.ServiceModel.Channels.BindingElement> 物件實作；您可以使用如＜範例＞一節所示的用戶端組態區段載入它，或使用程式設計的方式，將它加入至 <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> 建構函式。</span><span class="sxs-lookup"><span data-stu-id="292b8-104">Unlike its counterpart, <xref:System.ServiceModel.Description.IPolicyExportExtension>, <xref:System.ServiceModel.Description.IPolicyImportExtension> does not require implementation by a <xref:System.ServiceModel.Channels.BindingElement> object; you can load it using the client configuration section shown in the Examples section or programmatically by adding it to the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> constructor.</span></span>  
  
 <span data-ttu-id="292b8-105">Windows Communication Foundation (WCF) 會傳遞兩個物件才能<xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>方法中，<xref:System.ServiceModel.Description.MetadataImporter>和<xref:System.ServiceModel.Description.PolicyConversionContext>。</span><span class="sxs-lookup"><span data-stu-id="292b8-105">Windows Communication Foundation (WCF) passes two objects to the <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> method, a <xref:System.ServiceModel.Description.MetadataImporter> and a <xref:System.ServiceModel.Description.PolicyConversionContext>.</span></span> <span data-ttu-id="292b8-106">一般而言，<xref:System.ServiceModel.Description.PolicyConversionContext> 物件已經包含各繫結範圍的原則判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-106">Typically the <xref:System.ServiceModel.Description.PolicyConversionContext> object already contains the policy assertions for each binding scope.</span></span>  
  
 <span data-ttu-id="292b8-107"><xref:System.ServiceModel.Description.IPolicyImportExtension> 實作會執行下列步驟：</span><span class="sxs-lookup"><span data-stu-id="292b8-107">An <xref:System.ServiceModel.Description.IPolicyImportExtension> implementation performs the following steps:</span></span>  
  
1.  <span data-ttu-id="292b8-108">藉由呼叫 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>、<xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> 或 <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> 方法 (視範圍而定)，找出所負責的自訂原則判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-108">Locates the custom policy assertion for which it is responsible by calling either the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, or <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods, depending upon the scope.</span></span>  
  
2.  <span data-ttu-id="292b8-109">從判斷提示集合移除原則判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-109">Removes the policy assertion from the assertion collection.</span></span> <span data-ttu-id="292b8-110"><xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> 方法只要一個步驟，即可尋找、傳回及移除判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-110">The <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> method locates, returns, and removes the assertion in one step.</span></span>  
  
3.  <span data-ttu-id="292b8-111">藉由將必要的自訂 <xref:System.ServiceModel.Channels.BindingElement> 加入至 <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> 屬性或修改 <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType> 屬性，來修改繫結堆疊或合約。</span><span class="sxs-lookup"><span data-stu-id="292b8-111">Modify the binding stack or the contract by either adding a required custom <xref:System.ServiceModel.Channels.BindingElement> to the <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> property or by modifying the <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="292b8-112">步驟 2 是十分重要的。</span><span class="sxs-lookup"><span data-stu-id="292b8-112">Step 2 is important.</span></span> <span data-ttu-id="292b8-113">在呼叫所有的原則匯入工具之後，WCF 會檢查任何保留的原則判斷提示存在。</span><span class="sxs-lookup"><span data-stu-id="292b8-113">After all policy importers have been called, WCF checks for the existence of any policy assertions that remain.</span></span> <span data-ttu-id="292b8-114">如果有的話，WCF 會假設原則匯入不成功，而不會匯入有關聯的繫結。</span><span class="sxs-lookup"><span data-stu-id="292b8-114">If one exists, WCF assumes that the policy import was unsuccessful and does not import the associated binding.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="292b8-115">惡意中繼資料提供者在嘗試不當利用原則匯入工具時，可能會嘗試在中繼資料中傳送格式不正確的 XML。</span><span class="sxs-lookup"><span data-stu-id="292b8-115">A malicious metadata supplier can attempt to send malformed XML as part of metadata in an attempt to exploit a policy importer.</span></span> <span data-ttu-id="292b8-116">強烈建議自訂原則匯入工具對於可以傳遞給它的所有形式的 XML 都要很穩固。</span><span class="sxs-lookup"><span data-stu-id="292b8-116">It is strongly recommended that custom policy importers be robust to all forms of XML that can be passed to it.</span></span>  
  
 <span data-ttu-id="292b8-117">自訂 <xref:System.ServiceModel.Description.MetadataImporter> 實作必須實作自己的 <xref:System.ServiceModel.Description.PolicyConversionContext> 物件，以擷取附加至自訂中繼資料格式的原則判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-117">Custom <xref:System.ServiceModel.Description.MetadataImporter> implementations must implement their own <xref:System.ServiceModel.Description.PolicyConversionContext> object to extract the policy assertions attached to the custom metadata format.</span></span>  
  
 <span data-ttu-id="292b8-118">如果要匯出和匯入不是原則判斷提示的自訂 WSDL 項目，請參閱 <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType> 和 <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType>。</span><span class="sxs-lookup"><span data-stu-id="292b8-118">If you want to export and import custom WSDL elements that are not policy assertions, see <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType> and <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="292b8-119">您可以使用自訂原則匯入工具和使用的匯出工具[ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)組態檔中使用相同的組態項目和`/svcutilConfig:<configFile>`選項。</span><span class="sxs-lookup"><span data-stu-id="292b8-119">You can use custom policy importers and exporters with the [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) by using the same configuration elements in a configuration file and the `/svcutilConfig:<configFile>` option.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="292b8-120">下列程式碼範例會示範如何使用 <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> 方法在一個步驟中找出、傳回和移除判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-120">The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> method to locate, return, and remove the assertion in one step.</span></span>  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 <span data-ttu-id="292b8-121">下列程式碼範例會示範當叫用 <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType> 時，用戶端應用程式組態檔載入自訂原則匯入工具。</span><span class="sxs-lookup"><span data-stu-id="292b8-121">The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType> is invoked.</span></span>  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 <span data-ttu-id="292b8-122">下列程式碼範例會示範如何使用 <xref:System.ServiceModel.Description.MetadataResolver> 來下載並將中繼資料解析成描述物件。</span><span class="sxs-lookup"><span data-stu-id="292b8-122">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.</span></span>  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ImportPolicy">
      <MemberSignature Language="C#" Value="public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportPolicy(class System.ServiceModel.Description.MetadataImporter importer, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportPolicy (importer As MetadataImporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportPolicy(System::ServiceModel::Description::MetadataImporter ^ importer, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ImportPolicy : System.ServiceModel.Description.MetadataImporter * System.ServiceModel.Description.PolicyConversionContext -&gt; unit" Usage="iPolicyImportExtension.ImportPolicy (importer, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.MetadataImporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="importer">
          <span data-ttu-id="292b8-123">使用中的 <see cref="T:System.ServiceModel.Description.MetadataImporter" /> 物件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="292b8-123">The <see cref="T:System.ServiceModel.Description.MetadataImporter" /> object in use.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="292b8-124">
            <see cref="T:System.ServiceModel.Description.PolicyConversionContext" />，同時包含可以匯入的原則判斷提示，以及可以加入實作繫結項目的繫結項目的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="292b8-124">The <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> that contains both the policy assertions that can be imported and the collections of binding elements to which implementing binding elements can be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="292b8-125">定義可以匯入自訂原則判斷提示及加入實作繫結項目的方法。</span>
          <span class="sxs-lookup">
            <span data-stu-id="292b8-125">Defines a method that can import custom policy assertions and add implementing binding elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="292b8-126">您可以實作 `ImportPolicy` 方法，以取得原則判斷提示並執行匯入合約或繫結的一些修改，以支援判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-126">Implement the `ImportPolicy` method to obtain policy assertions and perform some modification of the imported contract or binding to support the assertion.</span></span> <span data-ttu-id="292b8-127">一般而言，原則匯入工具會設定或插入繫結項目至正在匯入的繫結，以回應尋找自訂原則判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-127">Typically, a policy importer responds to finding a custom policy assertion by configuring or inserting a binding element into the binding being imported.</span></span>  
  
 <span data-ttu-id="292b8-128">Windows Communication Foundation (WCF) 會傳遞兩個物件才能<xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>方法中，<xref:System.ServiceModel.Description.MetadataImporter>和<xref:System.ServiceModel.Description.PolicyConversionContext>。</span><span class="sxs-lookup"><span data-stu-id="292b8-128">Windows Communication Foundation (WCF) passes two objects to the <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> method, a <xref:System.ServiceModel.Description.MetadataImporter> and a <xref:System.ServiceModel.Description.PolicyConversionContext>.</span></span> <span data-ttu-id="292b8-129">一般而言，<xref:System.ServiceModel.Description.PolicyConversionContext> 物件已經包含各繫結範圍的原則判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-129">Typically the <xref:System.ServiceModel.Description.PolicyConversionContext> object already contains the policy assertions for each binding scope.</span></span>  
  
 <span data-ttu-id="292b8-130"><xref:System.ServiceModel.Description.IPolicyImportExtension> 實作會執行下列步驟：</span><span class="sxs-lookup"><span data-stu-id="292b8-130">An <xref:System.ServiceModel.Description.IPolicyImportExtension> implementation performs the following steps:</span></span>  
  
1.  <span data-ttu-id="292b8-131">藉由呼叫 <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>、<xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> 或 <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> 方法 (視範圍而定)，找出所負責的自訂原則判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-131">Locates the custom policy assertion for which it is responsible by calling either the <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, or <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> methods, depending upon the scope.</span></span>  
  
2.  <span data-ttu-id="292b8-132">從判斷提示集合移除原則判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-132">Removes the policy assertion from the assertion collection.</span></span> <span data-ttu-id="292b8-133"><xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> 方法只要一個步驟，即可尋找、傳回及移除判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-133">The <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> method locates, returns, and removes the assertion in one step.</span></span>  
  
3.  <span data-ttu-id="292b8-134">藉由將必要的自訂 <xref:System.ServiceModel.Channels.BindingElement> 加入至 <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> 屬性或修改 <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType> 屬性，來修改繫結堆疊或合約。</span><span class="sxs-lookup"><span data-stu-id="292b8-134">Modifies the binding stack or the contract by either adding a required custom <xref:System.ServiceModel.Channels.BindingElement> to the <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> property or by modifying the <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="292b8-135">步驟 2 是十分重要的。</span><span class="sxs-lookup"><span data-stu-id="292b8-135">Step 2 is important.</span></span> <span data-ttu-id="292b8-136">在呼叫所有的原則匯入工具之後，WCF 會檢查任何保留的原則判斷提示存在。</span><span class="sxs-lookup"><span data-stu-id="292b8-136">After all policy importers have been called, WCF checks for the existence of any policy assertions that remain.</span></span> <span data-ttu-id="292b8-137">如果有的話，WCF 會假設原則匯入不成功，而不會匯入有關聯的繫結。</span><span class="sxs-lookup"><span data-stu-id="292b8-137">If one exists, WCF assumes that the policy import was unsuccessful and does not import the associated binding.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="292b8-138">下列程式碼範例會示範如何使用 <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> 方法在一個步驟中找出、傳回和移除判斷提示。</span><span class="sxs-lookup"><span data-stu-id="292b8-138">The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> method to locate, return, and remove the assertion in one step.</span></span>  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 <span data-ttu-id="292b8-139">下列程式碼範例會示範當叫用 <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType> 時，用戶端應用程式組態檔載入自訂原則匯入工具。</span><span class="sxs-lookup"><span data-stu-id="292b8-139">The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType> is invoked.</span></span>  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 <span data-ttu-id="292b8-140">下列程式碼範例會示範如何使用 <xref:System.ServiceModel.Description.MetadataResolver> 來下載並將中繼資料解析成描述物件。</span><span class="sxs-lookup"><span data-stu-id="292b8-140">The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.</span></span>  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>