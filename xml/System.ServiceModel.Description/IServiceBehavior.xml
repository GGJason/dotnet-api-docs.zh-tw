<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IServiceBehavior.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5778e3fb7b36e48f48f3deab84c6e43e92c9aeebe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">778e3fb7b36e48f48f3deab84c6e43e92c9aeebe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Provides a mechanism to modify or insert custom extensions across an entire service, including the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</source>
          <target state="translated">提供機制以在整個服務上修改或插入自訂延伸，包括 <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> to modify, examine, or extend some aspect of service-wide execution at the application level:</source>
          <target state="translated">實作 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>，以在應用程式層級修改、檢查或延伸服務執行的某些方面：</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</source>
          <target state="translated">您可以使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> 方法來變更執行階段屬性值或插入自訂延伸物件，例如錯誤處理常式、訊息或參數攔截器、安全性延伸或其他自訂延伸物件。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> method to examine the description before <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> constructs the executing service to confirm that it can execute properly.</source>
          <target state="translated">您可以使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> 方法，在 <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> 建構執行的服務之前檢查描述，以確保能夠正確執行。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> method to pass to a binding element the custom information for the service so that it can support the service correctly.</source>
          <target state="translated">您可以使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> 方法，將服務的自訂資訊傳遞至繫結項目，以便能夠正確支援服務。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases the unused methods can return without a value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 物件可以利用其中任何一種方法，但通常只有一種是重要的；在這種情況下，未使用的方法不需任何值便可傳回。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">所有的 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 方法都會傳遞 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> 物件當做參數。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination only; if you modify these objects the execution behavior is undefined.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> 參數僅供檢查之用；如果您修改這些物件，執行行為便沒有定義。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>To perform the customization task for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> property prior to the construction of the service runtime.</source>
          <target state="translated">如果要執行預定的自訂工作，必須在建構服務執行階段之前將 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 物件加入至 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>There are three ways to do this:</source>
          <target state="translated">執行這項作業的方法有三種：</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Programmatically add the custom service behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> property prior to the point where the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> method is called on the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> object.</source>
          <target state="translated">在 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> 物件上呼叫 <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=nameWithType&gt;</ph> 方法之前，以程式設計方式將自訂服務行為加入至 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=nameWithType&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Create a custom attribute that implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> and use it to mark service classes that are to be modified.</source>
          <target state="translated">建立實作 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 的自訂屬性，並用來標示要修改的服務類別。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object is constructed, <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> uses reflection to discover the attributes on the service type.</source>
          <target state="translated">當建構 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> 物件時，<ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 會使用反映來探索服務型別上的屬性。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>If any attributes implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>, they are added to the behaviors collection on <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>.</source>
          <target state="translated">如果任何屬性實作 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>，便會加入至 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> 上的行為集合。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Extend the <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> class to support the specification of the behavior in an application or machine configuration file.</source>
          <target state="translated">延伸 <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph> 類別，以支援應用程式或電腦組態檔中的行為的規格。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>See the Example section for more information.</source>
          <target state="translated">如需詳細資訊，請參閱＜範例＞一節。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>Examples of service behaviors in <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> include the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute, the <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType&gt;</ph>, the <ph id="ph4">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType&gt;</ph> and the <ph id="ph5">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType&gt;</ph> behavior.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> 中的服務行為的範例包括 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> 屬性、<ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=nameWithType&gt;</ph>、<ph id="ph4">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph5">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=nameWithType&gt;</ph> 行為。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">下列程式碼範例將示範如何使用組態檔中指定的服務行為，將自訂錯誤處理常式插入服務應用程式中。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">在此範例中，錯誤處理常式會攔截所有例外狀況，並將其轉換為接著會傳回至用戶端的自訂 <ph id="ph1">`GreetingFault`</ph> SOAP 錯誤。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">下列 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 實作不會新增任何繫結參數物件、會將自訂 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> 物件新增至每個 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> 屬性中，然後驗證要套用服務行為且 <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> 的型別為 <ph id="ph5">`GreetingFault`</ph> 的每個服務作業。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Description.IServiceBehavior">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">在此範例中，行為類別也會實作 <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>，使用它可以將服務行為插入應用程式組態檔，如下列程式碼範例的示範。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service description of the service.</source>
          <target state="translated">服務的服務描述。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The host of the service.</source>
          <target state="translated">服務的主機。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The service endpoints.</source>
          <target state="translated">服務端點。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Custom objects to which binding elements have access.</source>
          <target state="translated">繫結項目可存取的自訂物件。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Provides the ability to pass custom data to binding elements to support the contract implementation.</source>
          <target state="translated">提供將自訂資料傳遞到繫結項目以支援合約實作的功能。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> method to add custom data objects to the <ph id="ph2">`parameters`</ph> collection that binding elements can use to acquire extra information to enable them to support the contract.</source>
          <target state="translated">您可以使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> 方法將自訂資料物件加入至 <ph id="ph2">`parameters`</ph> 集合，繫結項目可使用該集合取得額外的資訊，讓它們可以支援合約。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>This method is called once for each listen URI.</source>
          <target state="translated">這個方法會針對每個接聽 URI 呼叫一次。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>For example, if a service has four endpoints, and two of them have the same listen URI, then this method gets called three times.</source>
          <target state="translated">例如，如果服務有四個端點，其中兩個具有相同的接聽 URI，便會呼叫這個方法三次。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The reason is that the <ph id="ph1">`bindingParameters`</ph> target each channel stack and there is one channel stack for each listen URI.</source>
          <target state="translated">這是因為 <ph id="ph1">`bindingParameters`</ph> 是以每個通道堆疊為目標，且每個接聽 URI 都有一個通道堆疊。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>Because each call receives those endpoints at that listen URI, two calls each get a single <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph>, and one call gets a collection of two <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> objects.</source>
          <target state="translated">由於每個呼叫都會收到該接聽 URI 上的這些端點，因此兩個呼叫會分別取得單一 <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph>，而一個呼叫會取得兩個 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType&gt;</ph> 物件的集合。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">所有的 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 方法都會傳遞 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> 物件當做參數。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> 參數僅供檢查和插入自訂項目；如果您要修改這些物件，就無法定義執行行為。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service description.</source>
          <target state="translated">服務描述。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The host that is currently being built.</source>
          <target state="translated">目前正在建置的主機。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</source>
          <target state="translated">提供功能以變更執行階段屬性值或插入自訂延伸物件，例如錯誤處理常式、訊息或參數攔截器、安全性延伸或其他自訂延伸物件。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to inspect or modify the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> object that is being constructed in order to support some custom execution scenario.</source>
          <target state="translated">您可以實作 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> 方法以檢查或修改正在建構的 <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> 物件，以便支援某些自訂執行情況。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">所有的 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 方法都會傳遞 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> 物件當做參數。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> 參數僅供檢查和插入自訂項目；如果您要修改這些物件，就無法定義執行行為。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">下列程式碼範例將示範如何使用組態檔中指定的服務行為，將自訂錯誤處理常式插入服務應用程式中。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">在此範例中，錯誤處理常式會攔截所有例外狀況，並將其轉換為接著會傳回至用戶端的自訂 <ph id="ph1">`GreetingFault`</ph> SOAP 錯誤。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">下列 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 實作不會新增任何繫結參數物件、會將自訂 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> 物件新增至每個 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> 屬性中，然後驗證要套用服務行為且 <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> 的型別為 <ph id="ph5">`GreetingFault`</ph> 的每個服務作業。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">在此範例中，行為類別也會實作 <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>，使用它可以將服務行為插入應用程式組態檔，如下列程式碼範例的示範。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service description.</source>
          <target state="translated">服務描述。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The service host that is currently being constructed.</source>
          <target state="translated">目前正在建構的服務主機。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</source>
          <target state="translated">提供檢查服務主機和服務描述的功能，以確認服務能夠順利執行。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> method to confirm whether the current service can execute properly according to your scenario.</source>
          <target state="translated">您可以使用 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> 方法來確認目前的服務是否可以根據您的情況正確執行。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> objects as a parameters.</source>
          <target state="translated">所有的 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 方法都會傳遞 <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=nameWithType&gt;</ph> 和 <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=nameWithType&gt;</ph> 物件當做參數。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> 參數僅供檢查和插入自訂項目；如果您要修改這些物件，就無法定義執行行為。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following code example shows the use of a service behavior specified in a configuration file to insert a custom error handler in a service application.</source>
          <target state="translated">下列程式碼範例將示範如何使用組態檔中指定的服務行為，將自訂錯誤處理常式插入服務應用程式中。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the error handler catches all exceptions and converts them into a custom <ph id="ph1">`GreetingFault`</ph> SOAP fault that is then returned to the client.</source>
          <target state="translated">在此範例中，錯誤處理常式會攔截所有例外狀況，並將其轉換為接著會傳回至用戶端的自訂 <ph id="ph1">`GreetingFault`</ph> SOAP 錯誤。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>The following <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> implementation adds no binding parameter objects, adds the custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> object to each <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> property, and validates that each operation of the service to which the service behavior is applied and has a <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> of type <ph id="ph5">`GreetingFault`</ph>.</source>
          <target state="translated">下列 <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> 實作不會新增任何繫結參數物件、會將自訂 <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=nameWithType&gt;</ph> 物件新增至每個 <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=nameWithType&gt;</ph> 屬性中，然後驗證要套用服務行為且 <ph id="ph4">&lt;xref:System.ServiceModel.FaultContractAttribute?displayProperty=nameWithType&gt;</ph> 的型別為 <ph id="ph5">`GreetingFault`</ph> 的每個服務作業。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)">
          <source>In this example, the behavior class also implements <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>, which enables the service behavior to be inserted by using it in an application configuration file, as the following code example demonstrates.</source>
          <target state="translated">在此範例中，行為類別也會實作 <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=nameWithType&gt;</ph>，使用它可以將服務行為插入應用程式組態檔，如下列程式碼範例的示範。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>