<Type Name="IWsdlImportExtension" FullName="System.ServiceModel.Description.IWsdlImportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="faa33c2c4a70231f623e36d4b42a17c0594ade2a" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32690365" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWsdlImportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlImportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlImportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlImportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlImportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>請實作並附加至 <see cref="T:System.ServiceModel.Description.WsdlImporter" /> 物件，以控制匯入工具如何將 Web 服務描述語言 (WSDL) 部分對應至 <see cref="T:System.Web.Services.Description.ServiceDescription" /> 物件的部分。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作 <xref:System.ServiceModel.Description.IWsdlImportExtension> 介面，以控制 WSDL 和 <xref:System.ServiceModel.Description.ServiceEndpoint> 和 <xref:System.ServiceModel.Description.ContractDescription> 物件之間的對應，特別是當讀取自訂 WSDL 延伸以修改您的合約或端點資訊時。 然後以程式設計的方法或使用應用程式組態檔，將您的自訂 <xref:System.ServiceModel.Description.IWsdlImportExtension> 物件附加至 <xref:System.ServiceModel.Description.WsdlImporter>。 您也可以附加您的自訂<xref:System.ServiceModel.Description.IWsdlImportExtension>物件到內部<xref:System.ServiceModel.Description.WsdlImporter>供[ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)使用應用程式組態檔。  
  
 會呼叫 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A> 方法來匯入合約。  
  
 您可以使用 <xref:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport%2A> 方法來修改接著匯入至 <xref:System.ServiceModel.Description.ServiceEndpoint> 和 <xref:System.ServiceModel.Description.ContractDescription> 物件的中繼資料。  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.ServiceModel.Description.IWsdlImportExtension>新增<xref:System.ServiceModel.Description.IServiceContractGenerationExtension?displayProperty=nameWithType>和<xref:System.ServiceModel.Description.IOperationContractGenerationExtension?displayProperty=nameWithType>( `WsdlDocumentationImporter`，在此情況下) 來修改產生的 WCF 用戶端程式碼，在介面和作業層級。  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 下列程式碼範例會示範如何設定用戶端中繼資料系統，以便從應用程式組態檔使用自訂 <xref:System.ServiceModel.Description.IWsdlImportExtension>。  
  
 [!code-xml[C_CustomWSDLExtensions#9](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.exe.config#9)]   
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BeforeImport">
      <MemberSignature Language="C#" Value="public void BeforeImport (System.Web.Services.Description.ServiceDescriptionCollection wsdlDocuments, System.Xml.Schema.XmlSchemaSet xmlSchemas, System.Collections.Generic.ICollection&lt;System.Xml.XmlElement&gt; policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeImport(class System.Web.Services.Description.ServiceDescriptionCollection wsdlDocuments, class System.Xml.Schema.XmlSchemaSet xmlSchemas, class System.Collections.Generic.ICollection`1&lt;class System.Xml.XmlElement&gt; policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeforeImport (wsdlDocuments As ServiceDescriptionCollection, xmlSchemas As XmlSchemaSet, policy As ICollection(Of XmlElement))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeImport(System::Web::Services::Description::ServiceDescriptionCollection ^ wsdlDocuments, System::Xml::Schema::XmlSchemaSet ^ xmlSchemas, System::Collections::Generic::ICollection&lt;System::Xml::XmlElement ^&gt; ^ policy);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlDocuments" Type="System.Web.Services.Description.ServiceDescriptionCollection" />
        <Parameter Name="xmlSchemas" Type="System.Xml.Schema.XmlSchemaSet" />
        <Parameter Name="policy" Type="System.Collections.Generic.ICollection&lt;System.Xml.XmlElement&gt;" />
      </Parameters>
      <Docs>
        <param name="wsdlDocuments">要修改的服務描述。</param>
        <param name="xmlSchemas">要在匯入時使用的結構描述集合。</param>
        <param name="policy">在匯入時使用的原則判斷提示。</param>
        <summary>在匯入中繼資料文件之前呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 在從提供的中繼資料匯入任何內容之前，會呼叫所有註冊的 <xref:System.ServiceModel.Description.IWsdlImportExtension.BeforeImport%2A> 物件的 <xref:System.ServiceModel.Description.IWsdlImportExtension> 方法。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public void ImportContract (System.ServiceModel.Description.WsdlImporter importer, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportContract(class System.ServiceModel.Description.WsdlImporter importer, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlImportExtension.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportContract (importer As WsdlImporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportContract(System::ServiceModel::Description::WsdlImporter ^ importer, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.WsdlImporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="importer">匯入工具。</param>
        <param name="context">要修改的匯入內容。</param>
        <summary>在匯入合約時呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當合約正在匯入時，會呼叫 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A> 方法。 您可以修改合約或插入其他的匯出行為，例如 <xref:System.ServiceModel.Description.IServiceContractGenerationExtension?displayProperty=nameWithType> 和 <xref:System.ServiceModel.Description.IOperationContractGenerationExtension?displayProperty=nameWithType> 物件，以修改針對合約所產生的程式碼。  
  
   
  
## Examples  
 下列程式碼範例示範使用<xref:System.ServiceModel.Description.IWsdlImportExtension>新增<xref:System.ServiceModel.Description.IServiceContractGenerationExtension?displayProperty=nameWithType>和<xref:System.ServiceModel.Description.IOperationContractGenerationExtension?displayProperty=nameWithType>( `WsdlDocumentationImporter`，在此情況下) 來修改產生的 WCF 用戶端程式碼，在介面和作業層級。  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 下列程式碼範例會示範如何設定用戶端中繼資料系統，以便從應用程式組態檔使用自訂 <xref:System.ServiceModel.Description.IWsdlImportExtension>。  
  
 [!code-xml[C_CustomWSDLExtensions#9](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.exe.config#9)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public void ImportEndpoint (System.ServiceModel.Description.WsdlImporter importer, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportEndpoint(class System.ServiceModel.Description.WsdlImporter importer, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportEndpoint (importer As WsdlImporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportEndpoint(System::ServiceModel::Description::WsdlImporter ^ importer, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.WsdlImporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="importer">匯入工具。</param>
        <param name="context">要修改的匯入內容。</param>
        <summary>在匯入端點時呼叫。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當匯入端點時，會呼叫 <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A> 方法。 請修改內容屬性以自訂匯入的端點。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>