<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f045ca88be0524ebe7081d77279e626d3fceb161" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36417444" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <TypeSignature Language="F#" Value="type IWsdlExportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>定義可匯出自訂中繼資料的端點或合約行為。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 若要修改並擴充 <xref:System.ServiceModel.Description.WsdlExporter> 物件所匯出的 Web 服務描述語言 (WSDL)，請在端點、合約或作業行為上實作 <xref:System.ServiceModel.Description.IWsdlExportExtension> 介面 (實作 <xref:System.ServiceModel.Description.IContractBehavior>、<xref:System.ServiceModel.Description.IEndpointBehavior> 或 <xref:System.ServiceModel.Description.IOperationBehavior> 的物件)，並新增行為至 <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>、<xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A> 或 <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A> 屬性。 此外，您也可以在 <xref:System.ServiceModel.Description.IWsdlExportExtension> 上實作 <xref:System.ServiceModel.Channels.BindingElement>。  
  
> [!NOTE]
>  如果將 <xref:System.ServiceModel.Description.IWsdlExportExtension> 實作為 <xref:System.ServiceModel.Description.IServiceBehavior>，則永不會叫用這些實作。  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension> 即使 Windows Communication Foundation (WCF) 將自訂繫結原則判斷提示匯出至 WSDL 內的適當項目，則不會匯出自訂原則判斷提示。 如果您要匯出自訂原則判斷提示，請實作 <xref:System.ServiceModel.Description.IPolicyExportExtension> 介面。  
  
 中繼資料發行程序開始的方式是，呼叫 <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType>，它會依序呼叫每個端點的 <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType>。  
  
 匯出端點時會首先匯出其合約。在匯出合約時，<xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> 會在合約及其作業行為上，呼叫所有 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> 實作上的 <xref:System.ServiceModel.Description.IWsdlExportExtension> 方法。 在中繼資料中，不會匯出使用萬用字元動作的作業，所以不會匯出這些作業其作業行為上的 <xref:System.ServiceModel.Description.IWsdlExportExtension> 實作。  
  
 匯出合約後，會匯出連接埠和繫結，並附加匯出的原則運算式。  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> 和 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> 方法都提供對 <xref:System.ServiceModel.Description.WsdlExporter> 的存取，因此 <xref:System.ServiceModel.Description.IWsdlExportExtension> 實作可透過 <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> 屬性報告可修復的錯誤和警告。 傳入這兩種方法的內容物件會提供從匯出的 WSDL 項目到 <xref:System.ServiceModel.Description.ContractDescription> 和 <xref:System.ServiceModel.Description.ServiceEndpoint> 物件屬性之間的方便對應。  
  
 如果 <xref:System.ServiceModel.Description.IWsdlExportExtension> 實作在匯出時擲回例外狀況，則產生的中繼資料會是不一致的狀態，且應捨棄 <xref:System.ServiceModel.Description.WsdlExporter> 物件。  
  
> [!NOTE]
>  自訂匯出擴充必須在內建序列化程式填入服務描述後執行。  
  
   
  
## Examples  
 下列程式碼範例將示範 <xref:System.ServiceModel.Description.IWsdlExportExtension>，它會將自訂文件屬性當做 WSDL 附註加入至 WSDL 檔案中。  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportContract (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <see cref="T:System.ServiceModel.Description.WsdlExporter" />，可匯出合約資訊。</param>
        <param name="context">提供從匯出的 WSDL 項目到合約描述之間的對應。</param>
        <summary>將自訂的 Web 服務描述語言 (WSDL) 項目寫入為合約產生的 WSDL。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當中繼資料匯出系統匯出合約時，會呼叫 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> 方法。 只有實作 <xref:System.ServiceModel.Description.IWsdlExportExtension> 的合約和作業行為才會取得 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> 呼叫。 所有實作 <xref:System.ServiceModel.Description.IWsdlExportExtension> 的行為會取得 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> 呼叫。  
  
 您可以使用 `context` 參數修改要匯出的 WSDL。 如需範例，請參閱＜範例＞一節。  
  
   
  
## Examples  
 下列程式碼範例將示範 <xref:System.ServiceModel.Description.IWsdlExportExtension>，它會將自訂文件屬性當做 WSDL 附註加入至 WSDL 檔案中。  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportEndpoint (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" />
      </Parameters>
      <Docs>
        <param name="exporter">
          <see cref="T:System.ServiceModel.Description.WsdlExporter" />，可匯出端點資訊。</param>
        <param name="context">提供從匯出的 WSDL 項目到端點描述之間的對應。</param>
        <summary>將自訂的 Web 服務描述語言 (WSDL) 項目寫入為端點產生的 WSDL。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 實作 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> 方法以修改為端點匯出的 WSDL。 這個方法會在 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> 匯出合約後呼叫。  
  
   
  
## Examples  
 下列程式碼範例將示範 <xref:System.ServiceModel.Description.IWsdlExportExtension>，它會將自訂文件屬性當做 WSDL 附註加入至 WSDL 檔案中。  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>