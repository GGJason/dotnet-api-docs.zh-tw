<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="934786ff06cfe618d94325aea85eda8de373b501" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37455842" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>當使用 <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> 來控制方法的存取時，設定授權檢查的模式。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當套用 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 至方法時，這個模式會指定在授權存取時，要使用哪一組角色。 根據預設，屬性會使用 Windows 群組 (例如，`Administrator` 或 `Users`) 來指定使用者必須屬於的角色。  
  
 如果要以程式設計的方式設定模式，請建立 `ServiceHost` 類別的執行個體，然後在其行為集合中找出 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>，再將 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> 設定為適當的列舉型別。 下列範例會將屬性設定為 UseAspNetRoles 中。  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 您也可以設定在組態中的行為，藉由新增[ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)來[ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md)的組態檔，如下列程式碼所示。  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 列舉型別會影響 <xref:System.Security.Permissions.PrincipalPermissionAttribute> 屬性在套用至方法時，授權使用者的方式。 下列範例會將此屬性套用至方法，並要求使用者屬於電腦上的 Users 群組。 這個程式碼只有在 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> 設定為 `UseWindowsGroup` (預設值) 時才能運作。  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a>UseAspNetRoles  
 UseAspNetRoles 值使用於所有認證類型。 這個模式可讓 Windows Communication Foundation (WCF) 來做出授權決策中使用 ASP.NET 角色提供者。  
  
 當服務的認證為 X.509 憑證時，您可以將 `Name` 的 <xref:System.Security.Permissions.PrincipalPermissionAttribute>屬性設定為由 [主旨] 欄位和 [指紋] 欄位的串連值所組成的字串，如下列範例所示。  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 串連字串是由以分號和空格隔開的主旨和指紋值所組成。  
  
 有的憑證可能會將 [主旨] 欄位設定為 null 字串。 在這種情況中，您可以將 `Name` 屬性設定為分號後面接空格，然後再接指紋，如下列範例所示。  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 如果 ASP.NET 角色提供者存在，您也可以將 <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> 屬性設定為資料庫中的角色。 根據預設，資料庫是由 <xref:System.Web.Security.SqlRoleProvider> 來表示。 您也可以使用 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> 類別的 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> 屬性來設定自訂角色提供者。 下列程式碼會將角色設定為 `Administrators`。 請注意，角色提供者必須將使用者帳戶對應至該角色。  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 如需有關 ASP.NET 角色提供者的詳細資訊，請參閱 < [How To： 使用 ASP.NET 2.0 中的角色管理員](http://go.microsoft.com/fwlink/?LinkId=96692)。  
  
 如需使用 WCF 和角色提供者的詳細資訊，請參閱[如何： 使用 ASP.NET 角色提供者搭配服務](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md)。  
  
## <a name="custom"></a>自訂  
 當屬性設定為 Custom 時，您也必須提供自訂的類別可實作<xref:System.IdentityModel.Policy.IAuthorizationPolicy>類別。 這個類別負責提供呼叫者在 `IPrincipal` 集合內的 <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A> 表示法。 它必須使用 "Principal" 字串索引鍵將 `IPrincipal` 執行個體儲存至屬性集合，如下列範例所示。  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a>背景  
 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 中的角色安全性可讓應用程式透過程式碼來指定授權。 藉由指定 <xref:System.Security.Permissions.PrincipalPermission> 要求，<xref:System.Threading.Thread.CurrentPrincipal%2A> 必須滿足 `PrincipalPermission` 需求。 例如，使用者必須屬於特定的角色或群組。 否則，執行緒不會獲得執行程式碼的授權，而造成例外狀況。 WCF 會提供一組<xref:System.ServiceModel.Description.PrincipalPermissionMode>選取項目來指定<xref:System.Threading.Thread.CurrentPrincipal%2A>根據<xref:System.Security.SecurityContext>據此。  
  
   
  
## Examples  
 下列範例示範如何指定 UseAspNetRoles。  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 下列範例示範如何指定自訂。  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 4" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>一律可讓使用者為 <see cref="T:System.Security.Principal.IPrincipal" /> 指定自訂 <see cref="P:System.Threading.Thread.CurrentPrincipal" /> 類別。</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 3" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>可讓使用者為 <see cref="T:System.Security.Principal.IPrincipal" /> 指定自訂 <see cref="P:System.Threading.Thread.CurrentPrincipal" /> 類別。</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> 未設定。</summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberSignature Language="F#" Value="UseAspNetRoles = 2" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> 是根據 [!INCLUDE[vstecasp] (~/includes/vstecasp-md.md)] 角色提供者 (<see cref="T:System.Web.Security.RoleProvider" />) 設定的。</summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberSignature Language="F#" Value="UseWindowsGroups = 1" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> 是根據 Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />) 設定的。 如果使用者身分識別未與 Windows 帳戶建立關聯，便會使用匿名 Windows。</summary>
      </Docs>
    </Member>
  </Members>
</Type>