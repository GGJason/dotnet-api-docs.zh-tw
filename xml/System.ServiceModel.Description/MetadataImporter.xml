<Type Name="MetadataImporter" FullName="System.ServiceModel.Description.MetadataImporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="95b4480354f2b60a4d99a37e7c775f4457d86abf" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37455881" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataImporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataImporter abstract" />
  <TypeSignature Language="F#" Value="type MetadataImporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="93db9-101">將中繼資料匯入 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 物件。</span>
      <span class="sxs-lookup">
        <span data-stu-id="93db9-101">Imports metadata into <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93db9-102">您可以使用 <xref:System.ServiceModel.Description.MetadataImporter> 抽象類別 (Abstract Class) 的實作匯入服務中繼資料。</span><span class="sxs-lookup"><span data-stu-id="93db9-102">Use an implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class to import service metadata.</span></span> <span data-ttu-id="93db9-103">類型是衍生自<xref:System.ServiceModel.Description.MetadataImporter>類別實作支援匯入中繼資料格式，利用的 Ws-policy 匯入 Windows Communication Foundation (WCF) 中的邏輯。</span><span class="sxs-lookup"><span data-stu-id="93db9-103">Types that derive from the <xref:System.ServiceModel.Description.MetadataImporter> class implement support for importing metadata formats that take advantage of the WS-Policy import logic in Windows Communication Foundation (WCF).</span></span>  
  
 <span data-ttu-id="93db9-104"><xref:System.ServiceModel.Description.MetadataImporter> 實作會收集附加至 <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> 物件內服務中繼資料的原則運算式。</span><span class="sxs-lookup"><span data-stu-id="93db9-104">A <xref:System.ServiceModel.Description.MetadataImporter> implementation collects the policy expressions attached to the service metadata in a <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> object.</span></span> <span data-ttu-id="93db9-105"><xref:System.ServiceModel.Description.MetadataImporter> 接著會呼叫 <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> 屬性中的 <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> 介面實作，將原則當成匯入中繼資料作業的一部分來處理。</span><span class="sxs-lookup"><span data-stu-id="93db9-105">The <xref:System.ServiceModel.Description.MetadataImporter> then processes the policies as part of importing the metadata by calling the implementations of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface in the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="93db9-106">您可以將自己的 <xref:System.ServiceModel.Description.MetadataImporter> 介面實作新增至 <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> 執行個體上的 <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> 屬性，以便在將新原則判斷提示匯入 <xref:System.ServiceModel.Description.MetadataImporter> 時提供更多支援。</span><span class="sxs-lookup"><span data-stu-id="93db9-106">You can add support for importing new policy assertions to a <xref:System.ServiceModel.Description.MetadataImporter> by adding your own implementation of the <xref:System.ServiceModel.Description.IPolicyImportExtension?displayProperty=nameWithType> interface to the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A?displayProperty=nameWithType> property on a <xref:System.ServiceModel.Description.MetadataImporter> instance.</span></span> <span data-ttu-id="93db9-107">或者，您可以在應用程式組態檔中註冊自己的原則匯入延伸。</span><span class="sxs-lookup"><span data-stu-id="93db9-107">Alternatively, you can register your policy import extension in your application configuration file.</span></span>  
  
 <span data-ttu-id="93db9-108"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType>類型是實作<xref:System.ServiceModel.Description.MetadataImporter>抽象 WCF 所隨附的類別。</span><span class="sxs-lookup"><span data-stu-id="93db9-108">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type is the implementation of the <xref:System.ServiceModel.Description.MetadataImporter> abstract class included with WCF.</span></span> <span data-ttu-id="93db9-109"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> 型別會匯入具有與 <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> 物件組合在一起之附加原則的 WSDL 中繼資料。</span><span class="sxs-lookup"><span data-stu-id="93db9-109">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> type imports WSDL metadata with attached policies that are bundled in a <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="93db9-110">您可以實作 <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> 介面，然後將實作新增至  <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> 執行個體上的 <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> 屬性中，以便在匯入 WSDL 延伸時提供更多支援。</span><span class="sxs-lookup"><span data-stu-id="93db9-110">You can add support for importing WSDL extensions by implementing the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface and then adding your implementation to the <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A?displayProperty=nameWithType> property on your <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> instance.</span></span> <span data-ttu-id="93db9-111"><xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> 也可以將 <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> 介面 (在您的應用程式組態檔中註冊) 的實作載入。</span><span class="sxs-lookup"><span data-stu-id="93db9-111">The <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> can also load implementations of the <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> interface registered in your application configuration file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="93db9-112">由於 <xref:System.ServiceModel.Description.MetadataImporter> 是內部建構函式，在此版本中無法自 <xref:System.ServiceModel.Description.MetadataImporter> 衍生。</span><span class="sxs-lookup"><span data-stu-id="93db9-112">Because the <xref:System.ServiceModel.Description.MetadataImporter> constructor is internal, you cannot derive from <xref:System.ServiceModel.Description.MetadataImporter> in this version.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93db9-113">下列範例會顯示使用 <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> 衍生類別 (Derived Class) 匯入中繼資料的用法，方法為使用自訂狀態、檢查 <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> 屬性、將匯入的中繼資料編譯為 Managed 型別，然後將結果儲存至程式碼檔案。</span><span class="sxs-lookup"><span data-stu-id="93db9-113">The following example shows the use of the <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType> derived class to import metadata using custom state, checking the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property, compiling imported metadata to managed types and saving the result to a code file.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.MetadataConversionError&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Collection(Of MetadataConversionError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ Errors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;" Usage="System.ServiceModel.Description.MetadataImporter.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93db9-114">取得值，這個值指出匯入中繼資料時是否發生錯誤。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-114">Gets a value that indicates whether there were errors importing the metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93db9-115">
            <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> 物件的集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-115">A collection of <see cref="T:System.ServiceModel.Description.MetadataConversionError" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93db9-116">在匯入中繼資料之後以及使用中繼資料之前，請務必檢查 <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="93db9-116">Always check the <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> property after importing metadata and before using the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberSignature Language="F#" Value="abstract member ImportAllContracts : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;" Usage="metadataImporter.ImportAllContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93db9-117">在衍生類別中覆寫時，傳回從中繼資料匯入的合約集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-117">When overridden in a derived class, returns a collection of contracts imported from the metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93db9-118">從中繼資料匯入的合約。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-118">The contracts imported from the metadata.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberSignature Language="F#" Value="abstract member ImportAllEndpoints : unit -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="metadataImporter.ImportAllEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93db9-119">在衍生類別中覆寫時，傳回中繼資料內的所有端點。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-119">When overridden in a derived class, returns all endpoints in the metadata.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93db9-120">服務發行的 <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> 物件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-120">A collection of <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> objects that are published by a service.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93db9-121">實作 <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> 方法，以傳回匯入之中繼資料內的所有端點。</span><span class="sxs-lookup"><span data-stu-id="93db9-121">Implement the <xref:System.ServiceModel.Description.MetadataImporter.ImportAllEndpoints%2A> method to return all endpoints in the imported metadata.</span></span> <span data-ttu-id="93db9-122">已匯入為服務端點的中繼資料無法用於建立執行階段或匯出中繼資料，因為匯入的端點沒有包含任何 Managed 型別資訊。</span><span class="sxs-lookup"><span data-stu-id="93db9-122">Metadata that has been imported as service endpoints cannot be used to create a runtime or export metadata because the imported endpoints contain no managed type information.</span></span> <span data-ttu-id="93db9-123">若要使用中繼資料來建立用戶端或服務執行階段或產生中繼資料，您必須先從中繼資料產生及編譯程式碼，然後使用該型別資訊來建立使用 <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> 的新 <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A> 物件。</span><span class="sxs-lookup"><span data-stu-id="93db9-123">To use the metadata to create a client or service runtime or to generate metadata, you must first generate and compile code from the metadata and use that type information to create a new <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> object using <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KnownContracts">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt; KnownContracts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;class System.Xml.XmlQualifiedName, class System.ServiceModel.Description.ContractDescription&gt; KnownContracts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.KnownContracts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KnownContracts As Dictionary(Of XmlQualifiedName, ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ KnownContracts { System::Collections::Generic::Dictionary&lt;System::Xml::XmlQualifiedName ^, System::ServiceModel::Description::ContractDescription ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KnownContracts : System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName, System.ServiceModel.Description.ContractDescription&gt;" Usage="System.ServiceModel.Description.MetadataImporter.KnownContracts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Xml.XmlQualifiedName,System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93db9-124">依匯入工具已知的名稱取得合約字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-124">Gets a dictionary of contracts by name that the importer knows about.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93db9-125">依 XML 限定名稱列出的合約字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-125">A dictionary of contracts listed by XML qualified name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93db9-126">您可以使用 <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> 屬性，新增或移除匯入工具能夠參考的合約描述及其關聯的 XML 名稱。</span><span class="sxs-lookup"><span data-stu-id="93db9-126">Use the <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> property to add or remove contract descriptions and their associated XML names that the importer can reference.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; PolicyImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PolicyImportExtensions As KeyedByTypeCollection(Of IPolicyImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ PolicyImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PolicyImportExtensions : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" Usage="System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93db9-127">取得原則匯入工具的集合，匯入工具會呼叫此集合以處理原則判斷提示。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-127">Gets a collection of policy importers that the importer calls to process policy assertions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93db9-128">
            <see cref="T:System.ServiceModel.Description.MetadataImporter" /> 用於處理原則判斷提示的原則匯入工具集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-128">A collection of policy importers that the <see cref="T:System.ServiceModel.Description.MetadataImporter" /> uses to process policy assertions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93db9-129">您可以使用 <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> 屬性，新增或移除處理中繼資料內的原則判斷提示時需叫用的原則匯入工具。</span><span class="sxs-lookup"><span data-stu-id="93db9-129">Use the <xref:System.ServiceModel.Description.MetadataImporter.PolicyImportExtensions%2A> property to add or remove policy importers that are invoked to process policy assertions in the metadata.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;object,object&gt; State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;object, object&gt; State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataImporter.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Dictionary(Of Object, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ State { System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Collections.Generic.Dictionary&lt;obj, obj&gt;" Usage="System.ServiceModel.Description.MetadataImporter.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93db9-130">取得或設定匯入中繼資料時使用的物件集合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-130">Gets or sets a collection of objects used in the importing of metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93db9-131">以型別做為索引鍵的物件字典。</span>
          <span class="sxs-lookup">
            <span data-stu-id="93db9-131">A dictionary of objects keyed by type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93db9-132">您可以使用 `State` 屬性，新增或移除匯入中繼資料時使用的物件。</span><span class="sxs-lookup"><span data-stu-id="93db9-132">Use the `State` property to add or remove objects used in the importing of metadata.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93db9-133">下列範例會顯示如何使用 <xref:System.ServiceModel.Description.MetadataImporter.State%2A> 屬性，新增自訂 <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> 然後以特殊方法匯入資料結構。</span><span class="sxs-lookup"><span data-stu-id="93db9-133">The following example shows the use of the <xref:System.ServiceModel.Description.MetadataImporter.State%2A> property to add a custom <xref:System.Runtime.Serialization.XsdDataContractImporter?displayProperty=nameWithType> to import data structures in a particular way.</span></span>  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>