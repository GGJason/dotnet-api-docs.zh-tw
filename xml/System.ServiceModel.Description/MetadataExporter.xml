<Type Name="MetadataExporter" FullName="System.ServiceModel.Description.MetadataExporter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe3bc801974b6a0ba17c55c1501269374be2635a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36417369" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MetadataExporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataExporter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataExporter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataExporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataExporter abstract" />
  <TypeSignature Language="F#" Value="type MetadataExporter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>將服務描述資訊匯出至中繼資料。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 中繼資料匯出是一個程序，描述服務端點並將其投射至並行標準化表示法 (通常但不一定是 XML)，使應用程式可以存取以實作使用服務的用戶端。 若要從 <xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=nameWithType> 物件匯出中繼資料，請使用 <xref:System.ServiceModel.Description.MetadataExporter> 抽象類別的實作。  <xref:System.ServiceModel.Description.MetadataExporter> 實作會產生可封裝到 <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType> 執行個體的中繼資料。  
  
 <xref:System.ServiceModel.Description.MetadataExporter> 類別所提供的架構可產生原則運算式，用來說明端點繫結及其相關作業、訊息與錯誤的各項功能與需求。 這些原則運算式是在 <xref:System.ServiceModel.Description.PolicyConversionContext?displayProperty=nameWithType> 執行個體中擷取。 <xref:System.ServiceModel.Description.MetadataExporter> 實作可接著將這些原則運算式附加到所產生的中繼資料中。  
  
 在產生 <xref:System.ServiceModel.Description.MetadataExporter> 物件以供 <xref:System.ServiceModel.Channels.BindingElement?displayProperty=nameWithType> 實作使用時，<xref:System.ServiceModel.Description.IPolicyExportExtension?displayProperty=nameWithType> 會呼叫每個可於 <xref:System.ServiceModel.Description.ServiceEndpoint> 繫結中實作 <xref:System.ServiceModel.Description.PolicyConversionContext> 介面的 <xref:System.ServiceModel.Description.MetadataExporter>。 您可以在自訂的 <xref:System.ServiceModel.Description.IPolicyExportExtension> 型別實作中實作 <xref:System.ServiceModel.Channels.BindingElement?displayProperty=nameWithType> 介面，以匯出新原則判斷提示。  
  
 <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType>類型是實作<xref:System.ServiceModel.Description.MetadataExporter>類別包含與 Windows Communication Foundation (WCF)。 <xref:System.ServiceModel.Description.WsdlExporter> 型別會產生包含附加原則運算式的 WSDL 中繼資料。  
  
 若要針對端點行為、合約行為，或服務端點中的繫結項目匯出自訂 WSDL 中繼資料或 WSDL 延伸，您可以實作 <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType> 介面。 從服務端點產生 WSDL 文件時，<xref:System.ServiceModel.Description.WsdlExporter> 型別會呼叫該端點中實作這個介面的部分。  
  
   
  
## Examples  
 下列程式碼範例是 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> 方法，示範如何使用類別 <xref:System.ServiceModel.Description.MetadataExporter.State%2A> 的 <xref:System.ServiceModel.Description.WsdlExporter> 屬性，來附加可在端點中修改資料合約匯出的自訂 <xref:System.Runtime.Serialization.XsdDataContractExporter?displayProperty=nameWithType>。  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#5)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.MetadataConversionError&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataExporter.Errors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Errors As Collection(Of MetadataConversionError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ Errors { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::MetadataConversionError ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Errors : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;" Usage="System.ServiceModel.Description.MetadataExporter.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.MetadataConversionError&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得在匯出中繼資料期間發生的錯誤集合。</summary>
        <value>發生的匯出錯誤。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 這個屬性是以進行中繼資料匯出程序期間發生的錯誤填入。 衍生類別的使用者應在使用匯出的中繼資料之前，先檢查 <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> 屬性。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public abstract void ExportContract (System.ServiceModel.Description.ContractDescription contract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.ContractDescription contract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataExporter.ExportContract(System.ServiceModel.Description.ContractDescription)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ExportContract (contract As ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ExportContract(System::ServiceModel::Description::ContractDescription ^ contract);" />
      <MemberSignature Language="F#" Value="abstract member ExportContract : System.ServiceModel.Description.ContractDescription -&gt; unit" Usage="metadataExporter.ExportContract contract" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.ServiceModel.Description.ContractDescription" />
      </Parameters>
      <Docs>
        <param name="contract">要匯出的合約。</param>
        <summary>在衍生類別中覆寫時，將合約描述匯出至中繼資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 覆寫和實作 <xref:System.ServiceModel.Description.MetadataExporter.ExportContract%2A>，以將合約描述轉換成中繼資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public abstract void ExportEndpoint (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ExportEndpoint (endpoint As ServiceEndpoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ExportEndpoint(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="abstract member ExportEndpoint : System.ServiceModel.Description.ServiceEndpoint -&gt; unit" Usage="metadataExporter.ExportEndpoint endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">要轉換的端點。</param>
        <summary>在衍生類別中覆寫時，將端點轉換成中繼資料。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 覆寫和實作 <xref:System.ServiceModel.Description.MetadataExporter.ExportEndpoint%2A>，以將合約描述轉換成中繼資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportPolicy">
      <MemberSignature Language="C#" Value="protected internal System.ServiceModel.Description.PolicyConversionContext ExportPolicy (System.ServiceModel.Description.ServiceEndpoint endpoint);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.ServiceModel.Description.PolicyConversionContext ExportPolicy(class System.ServiceModel.Description.ServiceEndpoint endpoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataExporter.ExportPolicy(System.ServiceModel.Description.ServiceEndpoint)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function ExportPolicy (endpoint As ServiceEndpoint) As PolicyConversionContext" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::ServiceModel::Description::PolicyConversionContext ^ ExportPolicy(System::ServiceModel::Description::ServiceEndpoint ^ endpoint);" />
      <MemberSignature Language="F#" Value="member this.ExportPolicy : System.ServiceModel.Description.ServiceEndpoint -&gt; System.ServiceModel.Description.PolicyConversionContext" Usage="metadataExporter.ExportPolicy endpoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PolicyConversionContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endpoint" Type="System.ServiceModel.Description.ServiceEndpoint" />
      </Parameters>
      <Docs>
        <param name="endpoint">要在其中擷取原則判斷提示的端點。</param>
        <summary>將原則判斷提示轉換成 <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> 物件。</summary>
        <returns>包含端點原則判斷提示資訊的物件。 然後，原則判斷提示就可以內嵌在中繼資料文件中。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedMetadata">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Description.MetadataSet GetGeneratedMetadata ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Description.MetadataSet GetGeneratedMetadata() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataExporter.GetGeneratedMetadata" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetGeneratedMetadata () As MetadataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Description::MetadataSet ^ GetGeneratedMetadata();" />
      <MemberSignature Language="F#" Value="abstract member GetGeneratedMetadata : unit -&gt; System.ServiceModel.Description.MetadataSet" Usage="metadataExporter.GetGeneratedMetadata " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>在衍生類別中覆寫時，會傳回呼叫 <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportContract(System.ServiceModel.Description.ContractDescription)" />、<see cref="M:System.ServiceModel.Description.MetadataExporter.ExportEndpoint(System.ServiceModel.Description.ServiceEndpoint)" /> 或 <see cref="M:System.ServiceModel.Description.MetadataExporter.ExportPolicy(System.ServiceModel.Description.ServiceEndpoint)" /> 所產生的中繼資料。</summary>
        <returns>包含所匯出中繼資料之 <see cref="T:System.ServiceModel.Description.MetadataSection" /> 物件的可列舉集合。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 <xref:System.ServiceModel.Description.MetadataExporter.GetGeneratedMetadata%2A> 方法來擷取先前呼叫所產生的中繼資料。 在擷取中繼資料之前，請先檢查 <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A> 屬性，以確定您擁有想要的中繼資料。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.PolicyVersion PolicyVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.PolicyVersion PolicyVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataExporter.PolicyVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property PolicyVersion As PolicyVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::PolicyVersion ^ PolicyVersion { System::ServiceModel::Description::PolicyVersion ^ get(); void set(System::ServiceModel::Description::PolicyVersion ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PolicyVersion : System.ServiceModel.Description.PolicyVersion with get, set" Usage="System.ServiceModel.Description.MetadataExporter.PolicyVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PolicyVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>指定所要使用的 WS-Policy 規格版本。</summary>
        <value>
          <see cref="T:System.ServiceModel.Description.PolicyVersion" /> 執行個體。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Description.PolicyVersion> 類別包含中繼資料匯出工具所用 WS-Policy 版本的命名空間。 目前支援 WS-Policy 1.2 與 1.5。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;object,object&gt; State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;object, object&gt; State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.MetadataExporter.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Dictionary(Of Object, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ State { System::Collections::Generic::Dictionary&lt;System::Object ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.Collections.Generic.Dictionary&lt;obj, obj&gt;" Usage="System.ServiceModel.Description.MetadataExporter.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.Object,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>取得匯出中繼資料所使用的物件字典。</summary>
        <value>匯入工具用來匯出合約和端點的物件字典。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 您可以使用 `State` 屬性來傳遞成功匯出端點或合約所需的 <xref:System.ServiceModel.Description.MetadataExporter> 狀態資料。  
  
   
  
## Examples  
 下列程式碼範例是 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> 方法，示範如何使用衍生類別 <xref:System.ServiceModel.Description.MetadataExporter.State%2A> 的 <xref:System.ServiceModel.Description.WsdlImporter> 屬性，來附加可在端點中修改資料合約匯出的自訂 <xref:System.Runtime.Serialization.XsdDataContractExporter?displayProperty=nameWithType>。  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#5](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>