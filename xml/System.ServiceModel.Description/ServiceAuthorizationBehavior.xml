<Type Name="ServiceAuthorizationBehavior" FullName="System.ServiceModel.Description.ServiceAuthorizationBehavior">
  <TypeSignature Language="C#" Value="public sealed class ServiceAuthorizationBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceAuthorizationBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceAuthorizationBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceAuthorizationBehavior sealed : System::ServiceModel::Description::IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="84b12-101">提供與服務授權行為相關的屬性。</span><span class="sxs-lookup"><span data-stu-id="84b12-101">Provides properties related to service authorization behavior.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b12-102">授權會發生在服務層級和作業層級。</span><span class="sxs-lookup"><span data-stu-id="84b12-102">Authorization occurs at the service level and at the operation level.</span></span> <span data-ttu-id="84b12-103">這個類別包含的是與服務層級授權相關的屬性。</span><span class="sxs-lookup"><span data-stu-id="84b12-103">This class contains properties related to authorization at the service level.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceAuthorizationBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceAuthorizationBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84b12-104">初始化 <see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="84b12-104">Initializes a new instance of the <see cref="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b12-105">一般來說，應用程式不會直接呼叫建構函式，</span><span class="sxs-lookup"><span data-stu-id="84b12-105">Typically, applications do not call the constructor directly.</span></span> <span data-ttu-id="84b12-106">而是會呼叫 `ServiceHostBase.Description.Behaviors.Find<ServiceAuthorizationBehavior>` 以擷取此類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="84b12-106">Instead they retrieve an instance of this class by calling `ServiceHostBase.Description.Behaviors.Find<ServiceAuthorizationBehavior>`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84b12-107">下列程式碼示範如何擷取此類別的執行個體。</span><span class="sxs-lookup"><span data-stu-id="84b12-107">The following code shows how to retrieve an instance of this class.</span></span>  
  
 [!code-csharp[c_ImpersonationAndDelegation#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_impersonationanddelegation/cs/source.cs#3)]
 [!code-vb[c_ImpersonationAndDelegation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_impersonationanddelegation/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalAuthorizationPolicies">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ExternalAuthorizationPolicies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ExternalAuthorizationPolicies" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalAuthorizationPolicies As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ExternalAuthorizationPolicies { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ get(); void set(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84b12-108">取得或設定外部授權原則的集合。</span><span class="sxs-lookup"><span data-stu-id="84b12-108">Gets or sets a collection of external authorization policies.</span></span></summary>
        <value><span data-ttu-id="84b12-109">外部授權原則的集合。</span><span class="sxs-lookup"><span data-stu-id="84b12-109">A collection of external authorization policies.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b12-110">外部授權原則會參與產生使用者 <xref:System.ServiceModel.ServiceSecurityContext> 的原則評估程序。</span><span class="sxs-lookup"><span data-stu-id="84b12-110">The external authorization policies participate in the policy evaluation process resulting in a user <xref:System.ServiceModel.ServiceSecurityContext>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84b12-111">下列程式碼會示範如何設定此屬性，以使用一組外部授權原則。</span><span class="sxs-lookup"><span data-stu-id="84b12-111">The following code shows how to set this property to use a set of external authorization policies.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84b12-112">行為是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="84b12-112">Behavior is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImpersonateCallerForAllOperations">
      <MemberSignature Language="C#" Value="public bool ImpersonateCallerForAllOperations { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImpersonateCallerForAllOperations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonateCallerForAllOperations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImpersonateCallerForAllOperations { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84b12-113">取得或設定值，這個值會指出服務是否針對支援的所有作業執行模擬。</span><span class="sxs-lookup"><span data-stu-id="84b12-113">Gets or sets a value that indicates whether the service performs impersonation for all the operations that it supports.</span></span></summary>
        <value>
          <span data-ttu-id="84b12-114">如果服務對支援的所有作業執行模擬則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="84b12-114"><see langword="true" /> if the service performs impersonation for all the operations that it supports; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="84b12-115">預設值為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="84b12-115">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b12-116">`false` 值表示已對每個作業指定模擬。</span><span class="sxs-lookup"><span data-stu-id="84b12-116">A value of `false` indicates that impersonation is specified for each operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84b12-117">這段程式碼將示範如何設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="84b12-117">This code shows how to set this property.</span></span>  
  
 [!code-csharp[c_ImpersonationAndDelegation#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_impersonationanddelegation/cs/source.cs#3)]
 [!code-vb[c_ImpersonationAndDelegation#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_impersonationanddelegation/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84b12-118">行為是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="84b12-118">Behavior is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ImpersonateOnSerializingReply">
      <MemberSignature Language="C#" Value="public bool ImpersonateOnSerializingReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImpersonateOnSerializingReply" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply" />
      <MemberSignature Language="VB.NET" Value="Public Property ImpersonateOnSerializingReply As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImpersonateOnSerializingReply { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84b12-119">取得或設定值，表示服務是否在序列化回覆時執行模擬。</span><span class="sxs-lookup"><span data-stu-id="84b12-119">Gets or sets a value that indicates whether the service performs impersonation on serializing reply.</span></span></summary>
        <value>
          <span data-ttu-id="84b12-120">如果服務會在序列化回覆時執行模擬，則為 <see langword="True" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="84b12-120"><see langword="True" /> if the service performs impersonation on serializing reply; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrincipalPermissionMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Property PrincipalPermissionMode As PrincipalPermissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::PrincipalPermissionMode PrincipalPermissionMode { System::ServiceModel::Description::PrincipalPermissionMode get(); void set(System::ServiceModel::Description::PrincipalPermissionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84b12-121">取得或設定主要使用權限模式。</span><span class="sxs-lookup"><span data-stu-id="84b12-121">Gets or sets the principal permission mode.</span></span></summary>
        <value><span data-ttu-id="84b12-122">主要使用權限模式。</span><span class="sxs-lookup"><span data-stu-id="84b12-122">The principal permission mode.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b12-123">這個屬性會包含 <xref:System.ServiceModel.Description.PrincipalPermissionMode> 列舉的成員之一。</span><span class="sxs-lookup"><span data-stu-id="84b12-123">This property contains one of the members of the <xref:System.ServiceModel.Description.PrincipalPermissionMode> enumeration.</span></span> <span data-ttu-id="84b12-124">有效值為：</span><span class="sxs-lookup"><span data-stu-id="84b12-124">Valid values are:</span></span>  
  
-   <span data-ttu-id="84b12-125"><xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom>。</span><span class="sxs-lookup"><span data-stu-id="84b12-125"><xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom>.</span></span> <span data-ttu-id="84b12-126">可用來填入 `IAuthorizationPolicy` 的自訂 `Thread.CurrentPrincipal` 實作。</span><span class="sxs-lookup"><span data-stu-id="84b12-126">A custom `IAuthorizationPolicy` implementation is used to populate `Thread.CurrentPrincipal`.</span></span>  
  
-   <span data-ttu-id="84b12-127"><xref:System.ServiceModel.Description.PrincipalPermissionMode.None>。</span><span class="sxs-lookup"><span data-stu-id="84b12-127"><xref:System.ServiceModel.Description.PrincipalPermissionMode.None>.</span></span> <span data-ttu-id="84b12-128">未設定 `Thread.CurrentPrincipal` 屬性。</span><span class="sxs-lookup"><span data-stu-id="84b12-128">The `Thread.CurrentPrincipal` property is not set.</span></span>  
  
-   <span data-ttu-id="84b12-129"><xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles>。</span><span class="sxs-lookup"><span data-stu-id="84b12-129"><xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles>.</span></span> <span data-ttu-id="84b12-130">已根據 ASP.NET 角色資訊，將 `Thread.CurrentPrincipal` 屬性設定為 `IPrincipal`。</span><span class="sxs-lookup"><span data-stu-id="84b12-130">The `Thread.CurrentPrincipal` property is set to an `IPrincipal` based on ASP.NET role information.</span></span>  
  
-   <span data-ttu-id="84b12-131"><xref:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups>。</span><span class="sxs-lookup"><span data-stu-id="84b12-131"><xref:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups>.</span></span> <span data-ttu-id="84b12-132">已根據傳入訊息的使用者認證，將 `Thread.CurrentPrincipal` 屬性設定為 `WindowsPrincipal`。</span><span class="sxs-lookup"><span data-stu-id="84b12-132">The `Thread.CurrentPrincipal` property is set to a `WindowsPrincipal` based on the user credentials of the incoming message.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84b12-133">這段程式碼將示範如何設定這個屬性。</span><span class="sxs-lookup"><span data-stu-id="84b12-133">This code shows how to set this property.</span></span>  
  
 [!code-csharp[c_PrincipalPermissionAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_principalpermissionattribute/cs/source.cs#3)]
 [!code-vb[c_PrincipalPermissionAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_principalpermissionattribute/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ServiceModel.Description.PrincipalPermissionMode" />
      </Docs>
    </Member>
    <Member MemberName="RoleProvider">
      <MemberSignature Language="C#" Value="public System.Web.Security.RoleProvider RoleProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.RoleProvider RoleProvider" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property RoleProvider As RoleProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::RoleProvider ^ RoleProvider { System::Web::Security::RoleProvider ^ get(); void set(System::Web::Security::RoleProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Security.RoleProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84b12-134">取得或設定自訂角色提供者。</span><span class="sxs-lookup"><span data-stu-id="84b12-134">Gets or sets a custom role provider.</span></span></summary>
        <value><span data-ttu-id="84b12-135">自訂角色提供者。</span><span class="sxs-lookup"><span data-stu-id="84b12-135">A custom role provider.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b12-136">傳回的 <xref:System.Web.Security.RoleProvider> 物件是自訂角色提供者的實作。</span><span class="sxs-lookup"><span data-stu-id="84b12-136">The returned <xref:System.Web.Security.RoleProvider> object is an implementation of a custom role provider.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84b12-137">下列程式碼會示範如何取得這個屬性。</span><span class="sxs-lookup"><span data-stu-id="84b12-137">The following code shows how to get this property.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#6](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#6)]
 [!code-vb[PrincipalPermissionMode#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="84b12-138">行為是唯讀的。</span><span class="sxs-lookup"><span data-stu-id="84b12-138">Behavior is read-only.</span></span></exception>
        <altmember cref="T:System.ServiceModel.Description.PrincipalPermissionMode" />
        <altmember cref="T:System.Web.Security.RoleProvider" />
      </Docs>
    </Member>
    <Member MemberName="ServiceAuthorizationManager">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ServiceAuthorizationManager ServiceAuthorizationManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceAuthorizationManager ServiceAuthorizationManager" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceAuthorizationManager As ServiceAuthorizationManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ServiceAuthorizationManager ^ ServiceAuthorizationManager { System::ServiceModel::ServiceAuthorizationManager ^ get(); void set(System::ServiceModel::ServiceAuthorizationManager ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceAuthorizationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="84b12-139">取得或設定服務授權管理員。</span><span class="sxs-lookup"><span data-stu-id="84b12-139">Gets or sets the service authorization manager.</span></span></summary>
        <value><span data-ttu-id="84b12-140">服務授權管理員。</span><span class="sxs-lookup"><span data-stu-id="84b12-140">The service authorization manager.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b12-141"><xref:System.ServiceModel.ServiceAuthorizationManager> 類別負責評估所有原則、向前和向後鏈結、選擇性將產生的 <xref:System.IdentityModel.Policy.AuthorizationContext> 連接至 <xref:System.ServiceModel.ServiceSecurityContext> 並傳回 `true` 或 `false` 的授權決策以允許或拒絕存取。</span><span class="sxs-lookup"><span data-stu-id="84b12-141">The <xref:System.ServiceModel.ServiceAuthorizationManager> class is responsible for evaluating all policies, chaining forward and backward, optionally connecting the resulting <xref:System.IdentityModel.Policy.AuthorizationContext> to the <xref:System.ServiceModel.ServiceSecurityContext> and returning the authorization decision of `true` or `false` to allow or deny access.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="84b12-142">下列程式碼會示範如何設定此屬性，以使用自訂服務授權管理員。</span><span class="sxs-lookup"><span data-stu-id="84b12-142">The following code shows how to set this property to use a custom service authorization manager.</span></span>  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ServiceModel.ServiceAuthorizationManager" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeExternalAuthorizationPolicies">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeExternalAuthorizationPolicies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeExternalAuthorizationPolicies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeExternalAuthorizationPolicies () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeExternalAuthorizationPolicies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84b12-143">傳回值，這個值表示 <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" /> 屬性是否已變更為非預設值且應該序列化。</span><span class="sxs-lookup"><span data-stu-id="84b12-143">Returns a value that indicates whether the <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="84b12-144">如果應序列化 <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="84b12-144"><see langword="true" /> if the <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeServiceAuthorizationManager">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeServiceAuthorizationManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeServiceAuthorizationManager() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeServiceAuthorizationManager () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeServiceAuthorizationManager();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="84b12-145">傳回值，這個值表示 <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" /> 屬性是否已變更為非預設值且應該序列化。</span><span class="sxs-lookup"><span data-stu-id="84b12-145">Returns a value that indicates whether the <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="84b12-146">如果應序列化 <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" /> 屬性值，則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="84b12-146"><see langword="true" /> if the <see cref="P:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="84b12-147">服務的服務描述。</span><span class="sxs-lookup"><span data-stu-id="84b12-147">The service description of the service.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="84b12-148">服務的主機。</span><span class="sxs-lookup"><span data-stu-id="84b12-148">The host of the service.</span></span></param>
        <param name="endpoints"><span data-ttu-id="84b12-149">服務端點。</span><span class="sxs-lookup"><span data-stu-id="84b12-149">The service endpoints.</span></span></param>
        <param name="parameters"><span data-ttu-id="84b12-150">繫結項目可存取的自訂物件。</span><span class="sxs-lookup"><span data-stu-id="84b12-150">The custom objects to which binding elements have access.</span></span></param>
        <summary><span data-ttu-id="84b12-151">提供將自訂資料傳遞到繫結項目以支援合約實作的功能。</span><span class="sxs-lookup"><span data-stu-id="84b12-151">Provides the ability to pass custom data to binding elements to support the contract implementation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b12-152">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="84b12-152">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="84b12-153">只有在 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> 執行個體轉換成 <xref:System.ServiceModel.Description.IServiceBehavior> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="84b12-153">It can be used only when the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> instance is cast to an <xref:System.ServiceModel.Description.IServiceBehavior> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="84b12-154">服務描述。</span><span class="sxs-lookup"><span data-stu-id="84b12-154">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="84b12-155">目前正在建置的主機。</span><span class="sxs-lookup"><span data-stu-id="84b12-155">The host that is currently being built.</span></span></param>
        <summary><span data-ttu-id="84b12-156">定義明確的介面實作，它會加入分派行為以設定繫結。</span><span class="sxs-lookup"><span data-stu-id="84b12-156">Defines an explicit interface implementation that adds dispatch behaviors to configure the binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b12-157">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="84b12-157">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="84b12-158">只有在 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> 執行個體轉換成 <xref:System.ServiceModel.Description.IServiceBehavior> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="84b12-158">It can be used only when the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> instance is cast to an <xref:System.ServiceModel.Description.IServiceBehavior> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description"><span data-ttu-id="84b12-159">服務描述。</span><span class="sxs-lookup"><span data-stu-id="84b12-159">The service description.</span></span></param>
        <param name="serviceHostBase"><span data-ttu-id="84b12-160">目前正在建構的服務主機。</span><span class="sxs-lookup"><span data-stu-id="84b12-160">The service host that is currently being constructed.</span></span></param>
        <summary><span data-ttu-id="84b12-161">提供檢查服務主機和服務描述的功能，以確認服務能夠順利執行。</span><span class="sxs-lookup"><span data-stu-id="84b12-161">Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84b12-162">這個成員是明確介面成員實作，</span><span class="sxs-lookup"><span data-stu-id="84b12-162">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="84b12-163">只有在 <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> 執行個體轉換成 <xref:System.ServiceModel.Description.IServiceBehavior> 介面時，才能使用這個成員。</span><span class="sxs-lookup"><span data-stu-id="84b12-163">It can be used only when the <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> instance is cast to an <xref:System.ServiceModel.Description.IServiceBehavior> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>