<Type Name="GCLatencyMode" FullName="System.Runtime.GCLatencyMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="71825bd6d7da0da68493922efe3f009ff816bdaf" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52341567" /></Metadata><TypeSignature Language="C#" Value="public enum GCLatencyMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed GCLatencyMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.GCLatencyMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum GCLatencyMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class GCLatencyMode" />
  <TypeSignature Language="F#" Value="type GCLatencyMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="5e12b-101">調整記憶體回收行程干擾應用程式的時間。</span><span class="sxs-lookup"><span data-stu-id="5e12b-101">Adjusts the time that the garbage collector intrudes in your application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e12b-102">您也可以設定您的應用程式中調整記憶體回收的干擾程度<xref:System.Runtime.GCSettings.LatencyMode%2A>屬性，以任何<xref:System.Runtime.GCLatencyMode>NoGCRegion 以外的列舉值。</span><span class="sxs-lookup"><span data-stu-id="5e12b-102">You can adjust the intrusiveness of garbage collection in your application by setting the <xref:System.Runtime.GCSettings.LatencyMode%2A> property to any <xref:System.Runtime.GCLatencyMode> enumeration value except NoGCRegion.</span></span> <span data-ttu-id="5e12b-103">您也可以判斷記憶體回收行程的目前延遲模式，藉由擷取<xref:System.Runtime.GCSettings.LatencyMode%2A?displayProperty=nameWithType>屬性值。</span><span class="sxs-lookup"><span data-stu-id="5e12b-103">You can also determine the garbage collector's current latency mode by retrieving the <xref:System.Runtime.GCSettings.LatencyMode%2A?displayProperty=nameWithType> property value.</span></span>  
  
 <span data-ttu-id="5e12b-104">請參閱[延遲模式](~/docs/standard/garbage-collection/latency.md)如需如何進行記憶體回收的執行階段組態設定會影響這個列舉型別的預設值的討論。</span><span class="sxs-lookup"><span data-stu-id="5e12b-104">See [Latency Modes](~/docs/standard/garbage-collection/latency.md) for a discussion of how the runtime configuration settings for garbage collection affect the default value for this enumeration.</span></span>  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/96278bb7-6eab-4612-8594-ceebfc887d81"><span data-ttu-id="5e12b-105">延遲模式</span><span class="sxs-lookup"><span data-stu-id="5e12b-105">Latency Modes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName="Batch">
      <MemberSignature Language="C#" Value="Batch" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode Batch = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.Batch" />
      <MemberSignature Language="VB.NET" Value="Batch" />
      <MemberSignature Language="C++ CLI" Value="Batch" />
      <MemberSignature Language="F#" Value="Batch = 0" Usage="System.Runtime.GCLatencyMode.Batch" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5e12b-106">停用記憶體回收並行並回收批次呼叫中的物件。</span><span class="sxs-lookup"><span data-stu-id="5e12b-106">Disables garbage collection concurrency and reclaims objects in a batch call.</span></span> <span data-ttu-id="5e12b-107">這是干擾最大的模式。</span><span class="sxs-lookup"><span data-stu-id="5e12b-107">This is the most intrusive mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e12b-108">此模式是針對最大的輸送量，但會犧牲回應性。</span><span class="sxs-lookup"><span data-stu-id="5e12b-108">This mode is designed for maximum throughput at the expense of responsiveness.</span></span>  
  
 <span data-ttu-id="5e12b-109">此模式會覆寫執行階段組態設定。</span><span class="sxs-lookup"><span data-stu-id="5e12b-109">This mode overrides the  runtime configuration setting.</span></span> <span data-ttu-id="5e12b-110">如果已啟用，切換至批次模式可防止任何進一步並行的集合。</span><span class="sxs-lookup"><span data-stu-id="5e12b-110">If  is enabled, switching to Batch mode prevents any further concurrent collections.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Interactive">
      <MemberSignature Language="C#" Value="Interactive" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode Interactive = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.Interactive" />
      <MemberSignature Language="VB.NET" Value="Interactive" />
      <MemberSignature Language="C++ CLI" Value="Interactive" />
      <MemberSignature Language="F#" Value="Interactive = 1" Usage="System.Runtime.GCLatencyMode.Interactive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5e12b-111">可讓記憶體回收並行，並且在應用程式執行時回收物件。</span><span class="sxs-lookup"><span data-stu-id="5e12b-111">Enables garbage collection concurrency and reclaims objects while the application is running.</span></span> <span data-ttu-id="5e12b-112">這是工作站的預設記憶體回收模式，而且干擾較 <see cref="F:System.Runtime.GCLatencyMode.Batch" /> 少。</span><span class="sxs-lookup"><span data-stu-id="5e12b-112">This is the default mode for garbage collection on a workstation and is less intrusive than <see cref="F:System.Runtime.GCLatencyMode.Batch" />.</span></span> <span data-ttu-id="5e12b-113">它會在回應速度與處理量間取得平衡。</span><span class="sxs-lookup"><span data-stu-id="5e12b-113">It balances responsiveness with throughput.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e12b-114">此模式相當於在工作站上的並行記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="5e12b-114">This mode is equivalent to garbage collection on a workstation that is concurrent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowLatency">
      <MemberSignature Language="C#" Value="LowLatency" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode LowLatency = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.LowLatency" />
      <MemberSignature Language="VB.NET" Value="LowLatency" />
      <MemberSignature Language="C++ CLI" Value="LowLatency" />
      <MemberSignature Language="F#" Value="LowLatency = 2" Usage="System.Runtime.GCLatencyMode.LowLatency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5e12b-115">啟用回收物件時較為保守的記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="5e12b-115">Enables garbage collection that is more conservative in reclaiming objects.</span></span> <span data-ttu-id="5e12b-116">只有在系統記憶體不足才會出現完整回收，同時層代 0 和層代 1 回收頻率可能會變高</span><span class="sxs-lookup"><span data-stu-id="5e12b-116">Full collections occur only if the system is under memory pressure, whereas generation 0 and generation 1 collections might occur more frequently</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5e12b-117">這個模式不適用於 「 伺服器記憶體回收行程。</span><span class="sxs-lookup"><span data-stu-id="5e12b-117">This mode is not available for the server garbage collector.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoGCRegion">
      <MemberSignature Language="C#" Value="NoGCRegion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode NoGCRegion = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.NoGCRegion" />
      <MemberSignature Language="VB.NET" Value="NoGCRegion" />
      <MemberSignature Language="C++ CLI" Value="NoGCRegion" />
      <MemberSignature Language="F#" Value="NoGCRegion = 4" Usage="System.Runtime.GCLatencyMode.NoGCRegion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5e12b-118">表示在應用程式執行關鍵路徑時，暫止記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="5e12b-118">Indicates that garbage collection is suspended while the app is executing a critical path.</span></span>  
  
 <span data-ttu-id="5e12b-119"><see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> 是唯讀值；也就是說，您無法將 <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> 值指派給 <see cref="P:System.Runtime.GCSettings.LatencyMode" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="5e12b-119"><see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> is a read-only value; that is, you cannot assign the <see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /> value to the <see cref="P:System.Runtime.GCSettings.LatencyMode" /> property.</span></span> <span data-ttu-id="5e12b-120">透過呼叫 <see cref="Overload:System.GC.TryStartNoGCRegion" /> 方法，指定無 GC 區域延遲模式；透過呼叫 <see cref="M:System.GC.EndNoGCRegion" /> 方法，將其終止。</span><span class="sxs-lookup"><span data-stu-id="5e12b-120">You specify the no GC region latency mode by calling the <see cref="Overload:System.GC.TryStartNoGCRegion" /> method and terminate it by calling the <see cref="M:System.GC.EndNoGCRegion" /> method.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SustainedLowLatency">
      <MemberSignature Language="C#" Value="SustainedLowLatency" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Runtime.GCLatencyMode SustainedLowLatency = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.GCLatencyMode.SustainedLowLatency" />
      <MemberSignature Language="VB.NET" Value="SustainedLowLatency" />
      <MemberSignature Language="C++ CLI" Value="SustainedLowLatency" />
      <MemberSignature Language="F#" Value="SustainedLowLatency = 3" Usage="System.Runtime.GCLatencyMode.SustainedLowLatency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.GCLatencyMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary><span data-ttu-id="5e12b-121">啟用嘗試在長時間上將延遲縮減到最短的記憶體回收。</span><span class="sxs-lookup"><span data-stu-id="5e12b-121">Enables garbage collection that tries to minimize latency over an extended period.</span></span> <span data-ttu-id="5e12b-122">收集器只會嘗試執行層代 0、層代 1 和並行層代 2 回收。</span><span class="sxs-lookup"><span data-stu-id="5e12b-122">The collector tries to perform only generation 0, generation 1, and concurrent generation 2 collections.</span></span> <span data-ttu-id="5e12b-123">如果系統處於記憶體壓力下，仍然可能發生完整封鎖回收。</span><span class="sxs-lookup"><span data-stu-id="5e12b-123">Full blocking collections may still occur if the system is under memory pressure.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>