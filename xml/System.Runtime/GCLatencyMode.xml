<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GCLatencyMode.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5def87dcaf8f4311f25295d30ba2dc3ff2ebcabce.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">def87dcaf8f4311f25295d30ba2dc3ff2ebcabce</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.GCLatencyMode">
          <source>Adjusts the time that the garbage collector intrudes in your application.</source>
          <target state="translated">調整記憶體回收行程干擾應用程式的時間。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.GCLatencyMode">
          <source>You can adjust the intrusiveness of garbage collection in your application by setting the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph> property to any <ph id="ph2">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph> enumeration value except NoGCRegion.</source>
          <target state="translated">您也可以設定您的應用程式在調整記憶體回收的干擾程度<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph>任何屬性<ph id="ph2">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph>NoGCRegion 以外的列舉值。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.GCLatencyMode">
          <source>You can also determine the garbage collector's current latency mode by retrieving the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A?displayProperty=nameWithType&gt;</ph> property value.</source>
          <target state="translated">您也可以判斷記憶體回收行程目前的延遲模式，藉由擷取<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A?displayProperty=nameWithType&gt;</ph>屬性值。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.GCLatencyMode">
          <source>See <bpt id="p1">[</bpt>Latency Modes<ept id="p1">](~/docs/standard/garbage-collection/latency.md)</ept> for a discussion of how the runtime configuration settings for garbage collection affect the default value for this enumeration.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>延遲模式<ept id="p1">](~/docs/standard/garbage-collection/latency.md)</ept>如需如何回收的執行階段組態設定會影響這個列舉型別的預設值的討論。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.Batch">
          <source>Disables garbage collection concurrency and reclaims objects in a batch call.</source>
          <target state="translated">停用記憶體回收並行並回收批次呼叫中的物件。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.Batch">
          <source>This is the most intrusive mode.</source>
          <target state="translated">這是干擾最大的模式。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.GCLatencyMode.Batch">
          <source>This mode is designed for maximum throughput at the expense of responsiveness.</source>
          <target state="translated">這個模式被針對最大的輸送量，但會犧牲回應性。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.GCLatencyMode.Batch">
          <source>This mode overrides the  runtime configuration setting.</source>
          <target state="translated">此模式會覆寫執行階段組態設定。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.GCLatencyMode.Batch">
          <source>If  is enabled, switching to Batch mode prevents any further concurrent collections.</source>
          <target state="translated">如果已啟用，切換至批次模式會防止任何進一步並行的集合。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.Interactive">
          <source>Enables garbage collection concurrency and reclaims objects while the application is running.</source>
          <target state="translated">可讓記憶體回收並行，並且在應用程式執行時回收物件。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.Interactive">
          <source>This is the default mode for garbage collection on a workstation and is less intrusive than <ph id="ph1">&lt;see cref="F:System.Runtime.GCLatencyMode.Batch" /&gt;</ph>.</source>
          <target state="translated">這是工作站的預設記憶體回收模式，而且干擾較 <ph id="ph1">&lt;see cref="F:System.Runtime.GCLatencyMode.Batch" /&gt;</ph> 少。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.Interactive">
          <source>It balances responsiveness with throughput.</source>
          <target state="translated">它會在回應速度與處理量間取得平衡。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.GCLatencyMode.Interactive">
          <source>This mode is equivalent to garbage collection on a workstation that is concurrent.</source>
          <target state="translated">此模式相當於工作站上的並行記憶體回收。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.LowLatency">
          <source>Enables garbage collection that is more conservative in reclaiming objects.</source>
          <target state="translated">啟用回收物件時較為保守的記憶體回收。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.LowLatency">
          <source>Full collections occur only if the system is under memory pressure, whereas generation 0 and generation 1 collections might occur more frequently</source>
          <target state="translated">只有在系統記憶體不足才會出現完整回收，同時層代 0 和層代 1 回收頻率可能會變高</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Runtime.GCLatencyMode.LowLatency">
          <source>This mode is not available for the server garbage collector.</source>
          <target state="translated">無法使用伺服器記憶體回收行程這個模式。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.NoGCRegion">
          <source>Indicates that garbage collection is suspended while the app is executing a critical path.</source>
          <target state="translated">表示在應用程式執行關鍵路徑時，暫止記憶體回收。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.NoGCRegion">
          <source><ph id="ph1">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph> is a read-only value; that is, you cannot assign the <ph id="ph2">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph> value to the <ph id="ph3">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph> 是唯讀值；也就是說，您無法將 <ph id="ph2">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph> 值指派給 <ph id="ph3">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> 屬性。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.NoGCRegion">
          <source>You specify the no GC region latency mode by calling the <ph id="ph1">&lt;see cref="Overload:System.GC.TryStartNoGCRegion" /&gt;</ph> method and terminate it by calling the <ph id="ph2">&lt;see cref="M:System.GC.EndNoGCRegion" /&gt;</ph> method.</source>
          <target state="translated">透過呼叫 <ph id="ph1">&lt;see cref="Overload:System.GC.TryStartNoGCRegion" /&gt;</ph> 方法，指定無 GC 區域延遲模式；透過呼叫 <ph id="ph2">&lt;see cref="M:System.GC.EndNoGCRegion" /&gt;</ph> 方法，將其終止。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
          <source>Enables garbage collection that tries to minimize latency over an extended period.</source>
          <target state="translated">啟用嘗試在長時間上將延遲縮減到最短的記憶體回收。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
          <source>The collector tries to perform only generation 0, generation 1, and concurrent generation 2 collections.</source>
          <target state="translated">收集器只會嘗試執行層代 0、層代 1 和並行層代 2 回收。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="F:System.Runtime.GCLatencyMode.SustainedLowLatency">
          <source>Full blocking collections may still occur if the system is under memory pressure.</source>
          <target state="translated">如果系統處於記憶體壓力下，仍然可能發生完整封鎖回收。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>