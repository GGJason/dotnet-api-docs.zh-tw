<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ProfileOptimization.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5bd86c9e8585771817dff9c403cde415163613389.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd86c9e8585771817dff9c403cde415163613389</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.ProfileOptimization">
          <source>Improves the startup performance of application domains in applications that require the just-in-time (JIT) compiler by performing background compilation of methods that are likely to be executed, based on profiles created during previous compilations.</source>
          <target state="translated">根據先前編譯期間所建立的設定檔，對可能要執行的方法執行背景編譯，改善需要 Just-In-Time (JIT) 編譯器之應用程式的應用程式定義域啟動效能。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>Profile optimization requires a multicore computer.</source>
          <target state="translated">設定檔最佳化需要多核心電腦。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>The methods are ignored on other computers.</source>
          <target state="translated">方法會忽略其他電腦上。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>Each time you initiate profile optimization in an application domain, the profile that was created during the previous use is read.</source>
          <target state="translated">已建立在先前使用的設定檔會讀取每次啟動應用程式定義域中的設定檔最佳化。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>The information in the profile is used to guide background compilation by identifying the methods that are most likely to be executed during startup.</source>
          <target state="translated">設定檔中的資訊可用來引導背景編譯藉由識別最有可能在啟動期間執行的方法。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>On multicore computers, this increases the chances that a method is already compiled by the time it is needed so that the main application thread does not have to call the JIT compiler.</source>
          <target state="translated">在多核心電腦上已經是一種方法的機會，這項提升編譯所需要的讓主應用程式執行緒並沒有呼叫 JIT 編譯器的時間。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>The profile file is overwritten on each use, so it always contains the most recent information about which methods are used during startup.</source>
          <target state="translated">讓它一律包含最新的資訊了解哪種方法可用來在啟動期間，在每個使用時，會覆寫的設定檔。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>Optimization profiles are not restricted to application domain startup.</source>
          <target state="translated">最佳化的設定檔不受限制應用程式定義域的啟動。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>They can be used for any activity that will require heavy use of the JIT compiler.</source>
          <target state="translated">它們可以用於任何活動都將需要大量 JIT 編譯器使用。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>You can maintain multiple profiles for an application domain so that each such activity has its own profile.</source>
          <target state="translated">您可以維護應用程式定義域的多個設定檔，使每個這類活動具有自己的設定檔。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>To use optimization profiles in an application domain, you must call the <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph> method and specify the folder where profiles are stored.</source>
          <target state="translated">若要使用最佳化的設定檔，應用程式定義域中，您必須呼叫<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph>方法並指定儲存設定檔的資料夾。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>The folder must already exist.</source>
          <target state="translated">該資料夾必須已經存在。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>To begin using a profile, call the <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph> method and specify the file name of the profile.</source>
          <target state="translated">若要開始使用設定檔，請呼叫<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph>方法並指定設定檔的檔案名稱。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>If the file was not recorded previously, it is created on first use.</source>
          <target state="translated">如果沒有先前記錄的檔案，它會建立第一次使用。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>There is no performance benefit the first time a profile is created.</source>
          <target state="translated">沒有效能優點第一個時間在建立設定檔。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>Profile optimization does not change the order in which methods are executed.</source>
          <target state="translated">設定檔最佳化不會變更的方法會執行的順序。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>Methods are not executed on the background thread; if a method is compiled but never called, it is simply not used.</source>
          <target state="translated">方法不會在背景執行緒上執行如果方法是編譯，但永遠不會呼叫，它就只是無法使用。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.ProfileOptimization">
          <source>If a profile file is corrupt or cannot be written to the specified folder (for example, because the folder does not exist), program execution continues without optimization profiling.</source>
          <target state="translated">如果設定檔已損毀或無法寫入指定的資料夾 （例如，因為資料夾不存在），程式會繼續執行而不在最佳化程式碼剖析。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>The full path to the folder where profile files are stored for the current application domain.</source>
          <target state="translated">存放設定檔（用於目前應用程式定義域）的資料夾的完整路徑。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>Enables optimization profiling for the current application domain, and sets the folder where the optimization profile files are stored.</source>
          <target state="translated">啟用對目前應用程式定義域的最佳化程式碼剖析，並設定儲存最佳化設定檔的資料夾。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>On a single-core computer, the method is ignored.</source>
          <target state="translated">單核心電腦上，這個方法會被忽略。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>You must call this method before you call the <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph> method for the first time in the current application domain.</source>
          <target state="translated">您必須先呼叫這個方法，才能呼叫<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph>第一次目前的應用程式定義域中的方法。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>If you call <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph> more than once in the same application domain, all calls after the first are ignored.</source>
          <target state="translated">如果您呼叫<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph>超過一次在相同的應用程式網域中，第一個以外的所有呼叫會被都忽略。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>The specified folder must already exist.</source>
          <target state="translated">指定的資料夾必須已經存在。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>If it does not exist, calling this method does not create it, and no profiling occurs.</source>
          <target state="translated">如果不存在，呼叫這個方法不會建立它，而且沒有程式碼剖析。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>On computers that do not have multiple cores, this method is ignored.</source>
          <target state="translated">在電腦上沒有多個核心，這個方法會被忽略。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.SetProfileRoot(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>The file name of the profile to use.</source>
          <target state="translated">要使用的設定檔的檔案名稱。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>Starts just-in-time (JIT) compilation of the methods that were previously recorded in the specified profile file, on a background thread.</source>
          <target state="translated">在背景執行緒中，對先前指定設定檔名稱中記錄的方法啟動 just-in-time (JIT) 編譯。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>Starts the process of recording current method use, which later overwrites the specified profile file.</source>
          <target state="translated">開始錄製目前的方法使用，稍後會覆寫指定的設定檔檔案。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>If the specified profile exists in the folder specified by the <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph> method, the information it contains is used to determine the order in which methods are compiled on the background thread.</source>
          <target state="translated">如果指定的設定檔存在於所指定的資料夾<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph>方法，其內含的資訊用來決定的順序編譯背景執行緒的方法。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph> method creates the profile if it does not already exist, and initiates the recording of method use.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph>方法建立設定檔，如果它不存在，並初始錄製的方法使用。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>Only methods that are actually called are recorded, regardless of whether they were compiled on the background thread or on the main application thread.</source>
          <target state="translated">記錄實際呼叫的方法，不論它們所編譯的背景執行緒上或在主應用程式的執行緒上。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>A method is compiled on the main application thread if the application needs to call it before the background thread has compiled it.</source>
          <target state="translated">如果應用程式需要呼叫它的背景執行緒已編譯它之前，會在主應用程式的執行緒上編譯方法。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>The code that performs the recording tracks the rate at which methods are compiled, including methods that are compiled on both the background thread and on the main thread.</source>
          <target state="translated">執行記錄的程式碼追蹤的速率，此時方法會進行編譯，包括主執行緒和背景執行緒上所編譯的方法。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>When the rate falls below a predetermined level, recording stops.</source>
          <target state="translated">當速率低於預先決定的層級，記錄就會停止。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>Recording also stops if the rate of JIT compilation exceeds a predetermined upper limit.</source>
          <target state="translated">如果在 JIT 編譯的速率超過預先決定的時間上限，也會停止錄製。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph> method has not been called for the current application domain, or if the computer does not have multiple cores, the <ph id="ph2">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph> method has no effect.</source>
          <target state="translated">如果<ph id="ph1">&lt;xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A&gt;</ph>不針對目前的應用程式定義域中，呼叫方法或如果電腦沒有多個核心，<ph id="ph2">&lt;xref:System.Runtime.ProfileOptimization.StartProfile%2A&gt;</ph>方法沒有任何作用。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.ProfileOptimization.StartProfile(System.String)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>