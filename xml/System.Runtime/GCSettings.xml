<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="GCSettings.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50baf797ee3c7130da2de1bdbad1affd3838bdcef.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0baf797ee3c7130da2de1bdbad1affd3838bdcef</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.GCSettings">
          <source>Specifies the garbage collection settings for the current process.</source>
          <target state="translated">指定目前處理序的記憶體回收設定。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.GCSettings">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.IsServerGC%2A&gt;</ph> property to determine whether server garbage collection is enabled for the current process.</source>
          <target state="translated">使用<ph id="ph1">&lt;xref:System.Runtime.GCSettings.IsServerGC%2A&gt;</ph>屬性來判斷目前的處理序是否已啟用伺服器記憶體回收。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>Gets a value that indicates whether server garbage collection is enabled.</source>
          <target state="translated">取得值，這個值表示伺服器記憶體回收是否已啟用。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if server garbage collection is enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">如果伺服器記憶體回收已啟用，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>，否則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>For information about server garbage collection, see the "Workstation and Server Garbage Collection" section in <bpt id="p1">[</bpt>Fundamentals of Garbage Collection<ept id="p1">](~/docs/standard/garbage-collection/fundamentals.md)</ept>.</source>
          <target state="translated">伺服器記憶體回收的相關資訊，請參閱中的 「 工作站和伺服器記憶體回收 &gt; 一節<bpt id="p1">[</bpt>Fundamentals of Garbage Collection<ept id="p1">](~/docs/standard/garbage-collection/fundamentals.md)</ept>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>If server garbage collection is not enabled, workstation garbage collection is in effect (with or without concurrent collection).</source>
          <target state="translated">如果未啟用伺服器記憶體回收，工作站記憶體回收是作用中 （或不同時回收）。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>Server garbage collection is available only on multiprocessor computers.</source>
          <target state="translated">只有在多處理器電腦上使用伺服器記憶體回收。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>An unmanaged host can request server garbage collection, and the host request overrides configuration file settings.</source>
          <target state="translated">受管理的主機可以要求伺服器記憶體回收，而且主機要求會覆寫組態檔設定。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>If the host does not specify the type of garbage collection, you can use a configuration file setting to specify server garbage collection.</source>
          <target state="translated">如果主機未指定的記憶體回收的類型，您可以使用組態檔設定來指定伺服器記憶體回收。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>This setting is valid only in the application configuration file, not in the machine configuration file (see <bpt id="p1">[</bpt>Configuring Apps<ept id="p1">](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)</ept>).</source>
          <target state="translated">此設定只能在應用程式組態檔中，不在電腦組態檔中是有效 (請參閱<bpt id="p1">[</bpt>設定應用程式<ept id="p1">](http://msdn.microsoft.com/library/86bd26d3-737e-4484-9782-19b17f34cd1f)</ept>)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>The following example shows the contents of a sample application configuration file that enables server garbage collection.</source>
          <target state="translated">下列範例會顯示啟用伺服器記憶體回收的範例應用程式組態檔的內容。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.IsServerGC">
          <source>The following example indicates whether the host computer is using server or workstation garbage collection.</source>
          <target state="translated">下列範例會指出是否在主機電腦正在使用伺服器或工作站記憶體回收。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>[Supported in the .NET Framework 4.5.1 and later versions]</source>
          <target state="translated">[在 .NET Framework 4.5.1 及更新版本中支援]</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>Gets or sets a value that indicates whether a full blocking garbage collection compacts the large object heap (LOH).</source>
          <target state="translated">取得或設定值，這個值表示完整的封鎖記憶體回收是否壓縮大型物件堆積 (LOH)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>One of the enumeration values that indicates whether a full blocking garbage collection compacts the LOH.</source>
          <target state="translated">其中一個表示完整封鎖記憶體回收是否壓縮 LOH 的列舉值。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>The LOH is used for allocating memory for large objects (such as arrays) that require more than 85,000 bytes.</source>
          <target state="translated">LOH 用於需要多個 85,000 個位元組的大型物件 （例如陣列） 所配置的記憶體。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>Because of the performance impact of copying large blocks of memory, the garbage collector ordinarily sweeps the   LOH, which involves creating a list of the memory locations that were occupied by dead objects and that can be reused to satisfy future requests for allocation of memory for large objects.</source>
          <target state="translated">複製大型區塊的記憶體的效能影響，因為記憶體回收行程通常掃 LOH，包括建立一份無作用物件所佔據的而且可以重複滿足未來的要求使用的記憶體位置大型物件的記憶體配置。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>However, in apps that make extensive use of the LOH to store transient objects, memory fragmentation can also adversely impact performance.</source>
          <target state="translated">不過，進行廣泛的應用程式中使用的 LOH 儲存暫時性物件，分散也造成負面影響效能的記憶體。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>In this case, it is possible to use the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph> property to compact rather than simply sweep the LOH during a garbage collection.</source>
          <target state="translated">在此情況下，便可使用<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph>至精簡而不是只需掃掠 LOH 記憶體回收期間的屬性。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>The default value of the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType&gt;</ph>, which indicates that the LOH is not compacted during garbage collections.</source>
          <target state="translated">預設值<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph>屬性是<ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType&gt;</ph>，表示在記憶體回收期間不會壓縮 LOH。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>If you assign the property a value of <ph id="ph1">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>, the LOH is compacted during the next full blocking garbage collection, and the property value is reset to <ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">如果您指派屬性值為<ph id="ph1">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>、 LOH 會在下一個完整封鎖記憶體回收期間，壓縮和屬性值會重設為<ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.Default?displayProperty=nameWithType&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>Background garbage collections are not blocking.</source>
          <target state="translated">背景記憶體回收不會封鎖。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>This means that, if you set the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>, any background generation 2 collections that occur subsequently do not compact the LOH.</source>
          <target state="translated">這表示，如果您設定<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph>屬性<ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>、 任何背景層代 2 回收，會發生後續不會壓縮 LOH。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>Only the first blocking generation 2 collection compacts the LOH.</source>
          <target state="translated">只有第一個封鎖層代 2 收集壓縮 LOH。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>After the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>, the next full blocking garbage collection (and compaction of the LOH) occurs at an indeterminate future time.</source>
          <target state="translated">之後<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LargeObjectHeapCompactionMode%2A&gt;</ph>屬性設定為<ph id="ph2">&lt;xref:System.Runtime.GCLargeObjectHeapCompactionMode.CompactOnce?displayProperty=nameWithType&gt;</ph>下, 一個完整封鎖記憶體回收 （和壓縮 LOH），就會發生在不確定的未來時間。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LargeObjectHeapCompactionMode">
          <source>You can compact the LOH immediately by using code like the following:</source>
          <target state="translated">您可以立即壓縮 LOH，使用程式碼如下所示：</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>Gets or sets the current latency mode for garbage collection.</source>
          <target state="translated">為記憶體回收取得或設定目前的延遲模式。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>One of the enumeration values that specifies the latency mode.</source>
          <target state="translated">其中一個列舉值，指定延遲模式。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>You can reduce the level of intrusiveness of garbage collection in your application by setting the <ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph> to <ph id="ph2">&lt;xref:System.Runtime.GCLatencyMode.LowLatency&gt;</ph> during critical operations.</source>
          <target state="translated">您也可以設定您的應用程式中減少記憶體回收的干擾程度的層級<ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph>至<ph id="ph2">&lt;xref:System.Runtime.GCLatencyMode.LowLatency&gt;</ph>期間重要的作業。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>After such operations are completed, return to a higher latency mode so that more objects can be reclaimed to increase memory.</source>
          <target state="translated">這類作業都完成後，返回較高的延遲模式，使多個物件，可以增加記憶體回收。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>Ordinarily, you set the value of the <ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph> property to define the garbage collector's latency mode.</source>
          <target state="translated">一般情況下，您可以設定的值<ph id="ph1">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph>屬性可定義記憶體回收行程的延遲模式。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>However, you cannot set the no GC region latency mode by assigning the <ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType&gt;</ph> enumeration value to the <ph id="ph2">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph> property.</source>
          <target state="translated">不過，您無法設定無 GC 區域延遲模式，藉由指派<ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode.NoGCRegion?displayProperty=nameWithType&gt;</ph>列舉值，以<ph id="ph2">&lt;xref:System.Runtime.GCSettings.LatencyMode%2A&gt;</ph>屬性。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>Instead, you call the <ph id="ph1">&lt;xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType&gt;</ph> method to begin the no GC region latency mode, and you call the <ph id="ph2">&lt;xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType&gt;</ph> to end it.</source>
          <target state="translated">請改為呼叫<ph id="ph1">&lt;xref:System.GC.TryStartNoGCRegion%2A?displayProperty=nameWithType&gt;</ph>方法開始無 GC 區域延遲模式，而且您呼叫<ph id="ph2">&lt;xref:System.GC.EndNoGCRegion%2A?displayProperty=nameWithType&gt;</ph>來結束該處理序。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>See <bpt id="p1">[</bpt>Latency Modes<ept id="p1">](~/docs/standard/garbage-collection/latency.md)</ept> for a discussion of how the runtime configuration settings for garbage collection affect the default value of the <ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph> enumeration.</source>
          <target state="translated">請參閱<bpt id="p1">[</bpt>延遲模式<ept id="p1">](~/docs/standard/garbage-collection/latency.md)</ept>如需如何回收的執行階段組態設定會影響的預設值的討論<ph id="ph1">&lt;xref:System.Runtime.GCLatencyMode&gt;</ph>列舉型別。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>The <ph id="ph1">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> property is being set to an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> 屬性已設定為無效值。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>-or-</source>
          <target state="translated">-或-</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>The <ph id="ph1">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> property cannot be set to <ph id="ph2">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.GCSettings.LatencyMode" /&gt;</ph> 屬性無法設定為 <ph id="ph2">&lt;see cref="F:System.Runtime.GCLatencyMode.NoGCRegion" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">需要完全信任立即呼叫者。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.GCSettings.LatencyMode">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">這個成員無法供部分信任或安全性透明程式碼。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>