<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a5691fcb27097765370af5592f11712f056d7fa3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36361694" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <TypeSignature Language="F#" Value="type TextPointer = class&#xA;    inherit ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1c40a-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1c40a-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-102"><xref:System.Windows.Documents.TextPointer>類別引進了下列詞彙：</span><span class="sxs-lookup"><span data-stu-id="1c40a-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="1c40a-103">位置-原本<xref:System.Windows.Documents.TextPointer>一律會指向*位置*內容中。</span><span class="sxs-lookup"><span data-stu-id="1c40a-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="1c40a-104">請切換流程或在內容中，字元間內容項目標記，這類位置定義內容的結構。</span><span class="sxs-lookup"><span data-stu-id="1c40a-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="1c40a-105">目前的位置-因為<xref:System.Windows.Documents.TextPointer>一律表示的位置中，而且因為許多可透過執行之作業的<xref:System.Windows.Documents.TextPointer>相對於目前所指向的位置<xref:System.Windows.Documents.TextPointer>，合理的參考所指定位置<xref:System.Windows.Documents.TextPointer>為*目前位置*。</span><span class="sxs-lookup"><span data-stu-id="1c40a-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="1c40a-106">插入位置-*插入位置*位置，而不會中斷任何語意規則相關聯的內容可能會加入新的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="1c40a-107">在實務上，插入位置是在插入號可能位於所在位置的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="1c40a-108">有效範例<xref:System.Windows.Documents.TextPointer>不是插入位置的位置是相鄰的兩個位置<xref:System.Windows.Documents.Paragraph>標記 (亦即，在上一段結尾標記之間的下一個段落的開頭標記)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="1c40a-109">符號-目的<xref:System.Windows.Documents.TextPointer>包含符號的作業，下列任何一項會被視為*符號*:</span><span class="sxs-lookup"><span data-stu-id="1c40a-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="1c40a-110">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="1c40a-111">A<xref:System.Windows.UIElement>內所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="1c40a-112">請注意，這類<xref:System.Windows.UIElement>一律會計算為一個符號，則為任何其他內容或所包含的項目<xref:System.Windows.UIElement>不會計入為符號。</span><span class="sxs-lookup"><span data-stu-id="1c40a-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="1c40a-113">每個 16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內文字的字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="1c40a-114">文字容器-A*文字容器*form 於非固定格式內容的最終框線的項目，則為所指定的位置<xref:System.Windows.Documents.TextPointer>永遠落在的文字容器內。</span><span class="sxs-lookup"><span data-stu-id="1c40a-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="1c40a-115">目前，文字容器都必須在<xref:System.Windows.Documents.FlowDocument>或<xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="1c40a-116">一般而言，作業之間<xref:System.Windows.Documents.TextPointer>不支援在不同的文字容器中的執行個體。</span><span class="sxs-lookup"><span data-stu-id="1c40a-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="1c40a-117">文件-文字容器中的內容指*文件*，如同在<xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A>方法和<xref:System.Windows.Documents.TextPointer.DocumentStart%2A>和<xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1c40a-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="1c40a-118"><xref:System.Windows.Documents.TextPointer>類別為了加速周遊和操作的內容所表示之[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]流動內容項目，則這類項目在一般情況下，衍生自<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="1c40a-119">某些作業，<xref:System.Windows.Documents.TextPointer>有助於如下：</span><span class="sxs-lookup"><span data-stu-id="1c40a-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="1c40a-120">執行序數比較的第二個指定的位置與目前的位置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="1c40a-121">請參閱<xref:System.Windows.Documents.TextPointer.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="1c40a-122">判斷目前的位置，以指定方向相鄰的內容類型。</span><span class="sxs-lookup"><span data-stu-id="1c40a-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="1c40a-123">請參閱<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法和<xref:System.Windows.Documents.TextPointerContext>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="1c40a-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="1c40a-124">取得<xref:System.Windows.Documents.TextElement>的範圍或相鄰的目前位置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="1c40a-125">請參閱<xref:System.Windows.Documents.Paragraph>和<xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="1c40a-126">取得目前文件的範圍限制文字容器。</span><span class="sxs-lookup"><span data-stu-id="1c40a-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="1c40a-127">請參閱 <xref:System.Windows.Documents.TextPointer.Parent%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="1c40a-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="1c40a-128">取得指定的前置或後的目前位置的字元數。</span><span class="sxs-lookup"><span data-stu-id="1c40a-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="1c40a-129">請參閱<xref:System.Windows.Documents.TextPointer.GetTextInRun%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="1c40a-130">在目前的位置插入字元的字串。</span><span class="sxs-lookup"><span data-stu-id="1c40a-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="1c40a-131">請參閱<xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="1c40a-132">尋找列界限內容中。</span><span class="sxs-lookup"><span data-stu-id="1c40a-132">Find line boundaries in content.</span></span>  <span data-ttu-id="1c40a-133">請參閱<xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A>方法和<xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1c40a-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="1c40a-134">轉譯<xref:System.Windows.Documents.TextPointer>位置和符號位移至內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="1c40a-135">請參閱<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>和<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="1c40a-136">執行凙之間視覺點擊測試<xref:System.Windows.Documents.TextPointer>位置和<xref:System.Windows.Point>代表相對座標表示。</span><span class="sxs-lookup"><span data-stu-id="1c40a-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="1c40a-137">尋找附近的插入位置，或檢查目前的位置是否為插入位置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="1c40a-138">請參閱<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>和<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>方法和<xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="1c40a-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="1c40a-139">位置和<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>由<xref:System.Windows.Documents.TextPointer>物件是不變。</span><span class="sxs-lookup"><span data-stu-id="1c40a-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="1c40a-140">當內容已編輯或修改，所指定的位置<xref:System.Windows.Documents.TextPointer>相對於與周圍文字; 不會變更內容開始從該位置的位移來反映新的相對位置中的相應調整而不是內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="1c40a-141">例如， <xref:System.Windows.Documents.TextPointer> ，指出給定的段落開頭位置指向該段落的開頭，插入或刪除之前或之後在一段內容時，甚至會繼續。</span><span class="sxs-lookup"><span data-stu-id="1c40a-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="1c40a-142"><xref:System.Windows.Documents.TextPointer>類別並未提供任何公用建構函式。</span><span class="sxs-lookup"><span data-stu-id="1c40a-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="1c40a-143">執行個體<xref:System.Windows.Documents.TextPointer>建立使用其他物件的屬性或方法 (包括其他<xref:System.Windows.Documents.TextPointer>物件)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="1c40a-144">下列清單提供一些範例的方法和屬性，建立並傳回<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="1c40a-145">此清單未全部列出：</span><span class="sxs-lookup"><span data-stu-id="1c40a-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="1c40a-146">從<xref:System.Windows.Documents.TextRange>:<xref:System.Windows.Documents.TextRange.Start%2A>和<xref:System.Windows.Documents.TextRange.End%2A>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="1c40a-147">從<xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>， <xref:System.Windows.Documents.TextElement.ContentEnd%2A>， <xref:System.Windows.Documents.TextElement.ElementStart%2A>，和<xref:System.Windows.Documents.TextElement.ElementEnd%2A>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="1c40a-148">從<xref:System.Windows.Controls.TextBlock>（文字容器）： <xref:System.Windows.Controls.TextBlock.ContentStart%2A>， <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>，和<xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="1c40a-149">從<xref:System.Windows.Documents.FlowDocument>（文字容器）： <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>，和 <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="1c40a-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="1c40a-150">從現有<xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>， <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>， <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>，和<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c40a-151">下列範例示範如何使用<xref:System.Windows.Documents.TextPointer>來找出剛才內第一個位置<xref:System.Windows.Documents.Run>指定的文字容器中項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="1c40a-152">下列範例會實作簡單的尋找演算法使用<xref:System.Windows.Documents.TextPointer>設備。</span><span class="sxs-lookup"><span data-stu-id="1c40a-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.CompareTo position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="1c40a-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-156">值為-1 表示位置指定由目前<xref:System.Windows.Documents.TextPointer>所指定的位置之前`position`。</span><span class="sxs-lookup"><span data-stu-id="1c40a-156">A value of –1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="1c40a-157">值為 0 指出指出的位置相等。</span><span class="sxs-lookup"><span data-stu-id="1c40a-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="1c40a-158">值為正數的 + 1 表示位置指定由目前<xref:System.Windows.Documents.TextPointer>遵循所指定的位置`position`。</span><span class="sxs-lookup"><span data-stu-id="1c40a-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c40a-159">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="1c40a-160">在範例中，<xref:System.Windows.Documents.TextPointer.CompareTo%2A>方法用於搭配<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>方法來測試指定<xref:System.Windows.Documents.TextElement>是空的。</span><span class="sxs-lookup"><span data-stu-id="1c40a-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1c40a-161">
            <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-161">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberSignature Language="F#" Value="member this.DeleteTextInRun : int -&gt; int" Usage="textPointer.DeleteTextInRun count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="1c40a-162">The number of characters to delete, starting at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-162">The number of characters to delete, starting at the current position.</span>
          </span>
          <span data-ttu-id="1c40a-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-165">The number of characters actually deleted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-165">The number of characters actually deleted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-166">指定正值以刪除依照目前位置的字元 (像是<xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); 指定負值可刪除在目前位置前面的字元 (在<xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="1c40a-167">實際刪除的字元數目可能小於指定的數字`count`。</span><span class="sxs-lookup"><span data-stu-id="1c40a-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="1c40a-168">此動作會在案例其中`count`指定字元數超過要刪除的存在。</span><span class="sxs-lookup"><span data-stu-id="1c40a-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1c40a-169">The method is called at a position where text is not allowed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-169">The method is called at a position where text is not allowed.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c40a-171">A<see cref="T:System.Windows.Documents.TextPointer" />中目前的位置與相關聯的文字容器內容的結尾。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-172"><xref:System.Windows.Documents.TextPointer.Parent%2A>如傳回<xref:System.Windows.Documents.TextPointer>永遠是文字容器 (<xref:System.Windows.Controls.TextBlock>或<xref:System.Windows.Documents.FlowDocument>)，而非<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c40a-174">A<see cref="T:System.Windows.Documents.TextPointer" />中目前的位置與相關聯的文字容器內容的開頭。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-175">使用這個屬性所傳回工作的其他位置的相對位移基準位置為的位置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="1c40a-176"><xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>和<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>方法提供一個方式來轉譯位置和位置位移。</span><span class="sxs-lookup"><span data-stu-id="1c40a-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="1c40a-177"><xref:System.Windows.Documents.TextPointer.Parent%2A>如傳回<xref:System.Windows.Documents.TextPointer>永遠是文字容器 (<xref:System.Windows.Controls.TextBlock>或<xref:System.Windows.Documents.FlowDocument>)，而非<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetAdjacentElement : System.Windows.Documents.LogicalDirection -&gt; System.Windows.DependencyObject" Usage="textPointer.GetAdjacentElement direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="1c40a-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-181">傳回的項目通常是<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="1c40a-182">A<xref:System.Windows.UIElement>可以時會傳回<xref:System.Windows.Documents.TextPointer>表示的位置內<xref:System.Windows.Documents.BlockUIContainer>項目或<xref:System.Windows.Documents.InlineUIContainer>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterRect : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Rect" Usage="textPointer.GetCharacterRect direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="1c40a-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-186"><xref:System.Windows.Documents.TextElement> 邊緣不考慮基於此方法的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="1c40a-187">如果<xref:System.Windows.Documents.TextPointer>位於之前<xref:System.Windows.Documents.TextElement>邊緣，則傳回值是週框方塊的下一個非<xref:System.Windows.Documents.TextElement>內容中指定的方向。</span><span class="sxs-lookup"><span data-stu-id="1c40a-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="1c40a-188">不是否有任何內容以指定方向，也就是零寬度<xref:System.Windows.Rect>傳回高度比對的高度任何先前的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="1c40a-189">這個方法所執行的作業取決於有效的配置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="1c40a-190">必要時，這個方法會嘗試自動重新產生有效的配置，再繼續作業。</span><span class="sxs-lookup"><span data-stu-id="1c40a-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="1c40a-191">重新產生配置可能會相當耗費資源的作業。</span><span class="sxs-lookup"><span data-stu-id="1c40a-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="1c40a-192">使用<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>屬性來執行作業，可能會重新產生配置前先檢查有效的配置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="1c40a-193">如需詳細資訊，請參閱[配置](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="1c40a-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-197">插入位置是的位置，而不會中斷任何語意規則相關聯的內容可能會加入新的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="1c40a-198">在實務上，插入位置是在插入號可能位於所在位置的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="1c40a-199">有效範例<xref:System.Windows.Documents.TextPointer>不是插入位置的位置是相鄰的兩個位置<xref:System.Windows.Documents.Paragraph>標記 (亦即，在上一段結尾標記之間的下一個段落的開頭標記)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="1c40a-200">如果<xref:System.Windows.Documents.TextPointer>已指向有效的插入位置，但結尾標記為非空白的格式化順序直接遵循該位置，以指定的方向，則<xref:System.Windows.Documents.TextPointer>傳回此方法會調整到插入點只在格式化序列的關閉之後的位置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="1c40a-201">例如，請考慮標記序列`<Bold>a</Bold>b`。</span><span class="sxs-lookup"><span data-stu-id="1c40a-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="1c40a-202">請注意，有兩個字母之間的插入位置`a`和`b`— 一個之前關閉`Bold`標籤和一個直接跟在結尾`Bold`標記。</span><span class="sxs-lookup"><span data-stu-id="1c40a-202">Note that there are two insertion positions between the letters `a` and `b` — one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="1c40a-203">如果<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>上呼叫<xref:System.Windows.Documents.TextPointer>直接在字母之後的位置`a`之前關閉作業的`Bold`標記，並使用`direction`的<xref:System.Windows.Documents.LogicalDirection.Forward>，傳回<xref:System.Windows.Documents.TextPointer>調整為指向位置的字母前面只`b`，關閉後`Bold`標記。</span><span class="sxs-lookup"><span data-stu-id="1c40a-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="1c40a-204">會進行類似的調整方向會相反邏輯工作時開啟格式標記。</span><span class="sxs-lookup"><span data-stu-id="1c40a-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="1c40a-205">這個方法會提供類似的情況下的插入位置之間的去除混淆的。</span><span class="sxs-lookup"><span data-stu-id="1c40a-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="1c40a-206">這個方法也可以用於當涉及一連串的結構化的標記是選擇插入點。</span><span class="sxs-lookup"><span data-stu-id="1c40a-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="1c40a-207">例如，在初餘額和期末段落標記之間的位置，當方向參數可用來選取下列段落的開頭處最接近插入點 (藉由指定<xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) 或在前面段落 （結尾藉由指定<xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="1c40a-208">如果指標已經插入位置，並在指定沒有任何相鄰的格式化標記`direction`，傳回<xref:System.Windows.Documents.TextPointer>指向相同的位置，以呼叫<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="1c40a-209">可能沒有有效的插入位置有存在相對於所指位置<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="1c40a-210">如果參照的內容在結構上尚未完成，如所示的空白資料表或清單，也可能會發生。</span><span class="sxs-lookup"><span data-stu-id="1c40a-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="1c40a-211">在這種情況下，這個方法只會傳回<xref:System.Windows.Documents.TextPointer>為相同的位置以<xref:System.Windows.Documents.TextPointer>從呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="1c40a-212">這個方法一律會傳回有效<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c40a-213">這個範例示範如何使用<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>方法來檢查是否有指定<xref:System.Windows.Documents.TextElement>是空的可列印的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="1c40a-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="1c40a-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-219">如果<xref:System.Windows.Documents.TextPointer>指向模稜兩可的位置，例如，兩行，之間所指定的方向中的行<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>當做相對的開始行。</span><span class="sxs-lookup"><span data-stu-id="1c40a-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="1c40a-220">這個方法所執行的作業取決於有效的配置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="1c40a-221">必要時，這個方法會嘗試自動重新產生有效的配置，再繼續作業。</span><span class="sxs-lookup"><span data-stu-id="1c40a-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="1c40a-222">重新產生配置可能會相當耗費資源的作業。</span><span class="sxs-lookup"><span data-stu-id="1c40a-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="1c40a-223">使用<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>執行作業，可能會重新產生配置前先檢查有效的配置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="1c40a-224">如需詳細資訊，請參閱[配置](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int *  -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition (count, actualCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="1c40a-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="1c40a-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <param name="actualCount">
          <span data-ttu-id="1c40a-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="1c40a-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          </span>
          <span data-ttu-id="1c40a-229">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-229">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-232">如果<xref:System.Windows.Documents.TextPointer>指向模稜兩可的位置，例如，兩行，之間所指定的方向中的行<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>屬性當做相對的開始行。</span><span class="sxs-lookup"><span data-stu-id="1c40a-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextContextPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextContextPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="1c40a-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-236">下列其中一項會被視為符號：</span><span class="sxs-lookup"><span data-stu-id="1c40a-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="1c40a-237">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="1c40a-238">A<xref:System.Windows.UIElement>中所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="1c40a-239">請注意，這類<xref:System.Windows.UIElement>一律會計算為一個符號，則為任何其他內容或所包含的項目<xref:System.Windows.UIElement>不會計入為符號。</span><span class="sxs-lookup"><span data-stu-id="1c40a-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="1c40a-240">16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內文字的字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="1c40a-241">如果下一個符號是否分類為<xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>， <xref:System.Windows.Documents.TextPointerContext.ElementStart>，或<xref:System.Windows.Documents.TextPointerContext.ElementEnd>(以<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法)，則<xref:System.Windows.Documents.TextPointer>傳回此方法由一個符號進階從目前的位置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="1c40a-242">如果下一個符號是否分類為<xref:System.Windows.Documents.TextPointerContext.Text>，然後在<xref:System.Windows.Documents.TextPointer>傳回此方法會超過文字前進至下一個非文字符號 (也就是下一個位置<xref:System.Windows.Documents.TextPointerContext>不<xref:System.Windows.Documents.TextPointerContext.Text>)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="1c40a-243">確切的符號計數已超過可以事先計算方式是呼叫<xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c40a-244">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="1c40a-245">此範例會使用<xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A>方法搭配<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法來周遊，並擷取在指定的符號<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="1c40a-246">雖然此範例可以用於擷取[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]結構的內容指定<xref:System.Windows.Documents.TextElement>，它僅供說明之用，並不能用於實際執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="1c40a-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="1c40a-247">請參閱<xref:System.Xml>一組豐富的設計使用和處理 XML 類型的命名空間。</span><span class="sxs-lookup"><span data-stu-id="1c40a-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="1c40a-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-251">*插入位置*位置，而不會中斷任何語意規則相關聯的內容可能會加入新的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="1c40a-252">在實務上，插入位置是在插入號可能位於所在位置的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="1c40a-253">有效範例<xref:System.Windows.Documents.TextPointer>不是插入位置的位置是相鄰的兩個位置<xref:System.Windows.Documents.Paragraph>標記 (亦即，在上一段結尾標記之間的下一個段落的開頭標記)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c40a-254">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="1c40a-255">此範例會使用<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>方法來周遊內容項目界限的次數以<xref:System.Windows.Documents.Paragraph>之間兩個指定的項目呈現<xref:System.Windows.Documents.TextPointer>執行個體。</span><span class="sxs-lookup"><span data-stu-id="1c40a-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetToPosition : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.GetOffsetToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="1c40a-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          </span>
          <span data-ttu-id="1c40a-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-260">下列其中一項會被視為符號：</span><span class="sxs-lookup"><span data-stu-id="1c40a-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="1c40a-261">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="1c40a-262">A<xref:System.Windows.UIElement>中所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="1c40a-263">請注意，這類<xref:System.Windows.UIElement>一律會計算為一個符號，則為任何其他內容或所包含的項目<xref:System.Windows.UIElement>不會計入為符號。</span><span class="sxs-lookup"><span data-stu-id="1c40a-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="1c40a-264">16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內文字的字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c40a-265">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="1c40a-266">此範例會使用<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>方法來尋找兩個位移<xref:System.Windows.Documents.TextPointer>例項，並接著會使用此資訊來儲存和還原中的之選取範圍<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="1c40a-267">此範例假設的內容<xref:System.Windows.Controls.RichTextBox>尚未儲存選取項目和選取項目還原之間變更。</span><span class="sxs-lookup"><span data-stu-id="1c40a-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1c40a-268">
            <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-268">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPointerContext : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointerContext" Usage="textPointer.GetPointerContext direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="1c40a-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1c40a-272">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="1c40a-273">此範例會使用<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法來實作計算餘額開頭和結尾項目標記之間兩個指定的演算法<xref:System.Windows.Documents.TextPointer>位置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="1c40a-274">每個開啟元素標記會計算為 + 1，而每一個結尾項目標記視為-1。</span><span class="sxs-lookup"><span data-stu-id="1c40a-274">Each opening element tag is counted as +1, and each closing element tag is counted as –1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="1c40a-276">An offset, in symbols, for which to calculate and return the position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-276">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="1c40a-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-280">下列其中一項會被視為符號：</span><span class="sxs-lookup"><span data-stu-id="1c40a-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="1c40a-281">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="1c40a-282">A<xref:System.Windows.UIElement>中所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="1c40a-283">請注意，這類<xref:System.Windows.UIElement>一律會計算為一個符號，則為任何其他內容或所包含的項目<xref:System.Windows.UIElement>不會計入為符號。</span><span class="sxs-lookup"><span data-stu-id="1c40a-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="1c40a-284">16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內文字的字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c40a-285">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="1c40a-286">此範例會使用<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>方法實作的方法，其中一個來計算的位移至指定的位置，相對於任何裝載的段落，並傳回另一組<xref:System.Windows.Documents.TextPointer>指定段落中指定的位移。</span><span class="sxs-lookup"><span data-stu-id="1c40a-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset (offset, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="1c40a-287">An offset, in symbols, for which to calculate and return the position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-287">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="1c40a-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="1c40a-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-292">下列其中一項會被視為符號：</span><span class="sxs-lookup"><span data-stu-id="1c40a-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="1c40a-293">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="1c40a-294">A<xref:System.Windows.UIElement>中所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="1c40a-295">請注意，這類<xref:System.Windows.UIElement>一律會計算為一個符號，則為任何其他內容或所包含的項目<xref:System.Windows.UIElement>不會計入為符號。</span><span class="sxs-lookup"><span data-stu-id="1c40a-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="1c40a-296">16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內文字的字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection -&gt; string" Usage="textPointer.GetTextInRun direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="1c40a-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-301">這個方法會傳回只執行不中斷的執行的文字。</span><span class="sxs-lookup"><span data-stu-id="1c40a-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="1c40a-302">如果任何符號類型以外，不會傳回<xref:System.Windows.Documents.TextPointerContext.Text>相鄰目前<xref:System.Windows.Documents.TextPointer>中指定的方向。</span><span class="sxs-lookup"><span data-stu-id="1c40a-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="1c40a-303">同樣地，文字只會傳回至下一個非文字符號。</span><span class="sxs-lookup"><span data-stu-id="1c40a-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c40a-304">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="1c40a-305">此範例會使用<xref:System.Windows.Documents.TextPointer.GetTextInRun%2A>方法，以實作簡單的文字抽選程式。</span><span class="sxs-lookup"><span data-stu-id="1c40a-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="1c40a-306">方法會傳回所有文字的字串串連兩個指定之間<xref:System.Windows.Documents.TextPointer>執行個體。</span><span class="sxs-lookup"><span data-stu-id="1c40a-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="1c40a-307">雖然您可以使用此範例中擷取任何兩個文字<xref:System.Windows.Documents.TextPointer>執行個體，它僅供說明之用，，和不應用於實際執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="1c40a-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="1c40a-308">請改用 <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="1c40a-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection * char[] * int * int -&gt; int" Usage="textPointer.GetTextInRun (direction, textBuffer, startIndex, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="1c40a-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          </span>
        </param>
        <param name="textBuffer">
          <span data-ttu-id="1c40a-310">A buffer into which any text is copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-310">A buffer into which any text is copied.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="1c40a-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="1c40a-312">The maximum number of characters to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-312">The maximum number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-315">這個方法會傳回只執行不中斷的執行的文字。</span><span class="sxs-lookup"><span data-stu-id="1c40a-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="1c40a-316">如果任何符號類型以外，不會傳回<xref:System.Windows.Documents.TextPointerContext.Text>相鄰目前<xref:System.Windows.Documents.TextPointer>中指定的方向。</span><span class="sxs-lookup"><span data-stu-id="1c40a-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="1c40a-317">同樣地，文字只會傳回至下一個非文字符號。</span><span class="sxs-lookup"><span data-stu-id="1c40a-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1c40a-318">
            <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-318">
              <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          </span>
          <span data-ttu-id="1c40a-319">-or-  <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-319">-or-  <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          </span>
          <span data-ttu-id="1c40a-320">minus <paramref name="startIndex" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-320">minus <paramref name="startIndex" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextRunLength : System.Windows.Documents.LogicalDirection -&gt; int" Usage="textPointer.GetTextRunLength direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="1c40a-321">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-321">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-322">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-322">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-323">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-323">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          </span>
          <span data-ttu-id="1c40a-324">This number may be 0 if there is no adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-324">This number may be 0 if there is no adjacent text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-325">下列其中一項會被視為符號：</span><span class="sxs-lookup"><span data-stu-id="1c40a-325">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="1c40a-326">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-326">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="1c40a-327">A<xref:System.Windows.UIElement>中所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="1c40a-327">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="1c40a-328">請注意，這類<xref:System.Windows.UIElement>一律會計算為一個符號，則為任何其他內容或所包含的項目<xref:System.Windows.UIElement>不會計入為符號。</span><span class="sxs-lookup"><span data-stu-id="1c40a-328">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="1c40a-329">16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內文字的字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="1c40a-329">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidLayout : bool" Usage="System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-330">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-330">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c40a-331">
            <see langword="true" /> 如果版面配置是最新且有效。否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-331">
              <see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-332">如有必要，取決於有效的配置的作業 (例如<xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A>方法，<xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A>方法，和<xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>屬性) 嘗試自動重新產生有效的配置，再繼續作業。</span><span class="sxs-lookup"><span data-stu-id="1c40a-332">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="1c40a-333">重新產生配置可能會相當耗費資源的作業。</span><span class="sxs-lookup"><span data-stu-id="1c40a-333">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="1c40a-334">使用這個屬性來執行作業，可能會重新產生配置前先檢查有效的配置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-334">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="1c40a-335">如需詳細資訊，請參閱[配置](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-335">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertLineBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-336">Inserts a line break at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-336">Inserts a line break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-337">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-337">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertParagraphBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertParagraphBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-338">Inserts a paragraph break at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-338">Inserts a paragraph break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-339">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-339">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-340">如果目前的位置內的現有時，呼叫此方法<xref:System.Windows.Documents.Paragraph>項目、 現有段落和它所包含的任何內容，已分成兩個段落，目前的位置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-340">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="1c40a-341">如果目前的位置不在現有的段落內時呼叫這個方法時，會插入新的空白段落。</span><span class="sxs-lookup"><span data-stu-id="1c40a-341">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="1c40a-342">如果這個方法呼叫的位置不適合進行分割，或插入段落 (例如，如果目前的位置是在<xref:System.Windows.Documents.Hyperlink>項目)，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="1c40a-342">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1c40a-343">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-343">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.InsertTextInRun : string -&gt; unit" Usage="textPointer.InsertTextInRun textData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="1c40a-344">The text to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-344">The text to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-345">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-345">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-346">如果<xref:System.Windows.Documents.TextPointer>範圍不是由<xref:System.Windows.Documents.Run>項目，<xref:System.Windows.Documents.Run>插入連同`textData`。</span><span class="sxs-lookup"><span data-stu-id="1c40a-346">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="1c40a-347">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-347">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c40a-348">
            <paramref name="textData" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-348">
              <paramref name="textData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtInsertionPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-349">Gets a value that indicates whether the current position is an insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-349">Gets a value that indicates whether the current position is an insertion position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c40a-350">
            <see langword="true" /> 如果目前的位置插入位置。否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-350">
              <see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-351">插入位置是的位置，而不會中斷任何語意規則相關聯的內容可能會加入新的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-351">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="1c40a-352">在實務上，插入位置是在插入號可能位於所在位置的內容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-352">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="1c40a-353">有效範例<xref:System.Windows.Documents.TextPointer>不是插入位置的位置是相鄰的兩個位置<xref:System.Windows.Documents.Paragraph>標記 (亦即，在上一段結尾標記之間的下一個段落的開頭標記)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-353">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtLineStartPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-354">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-354">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c40a-355">
            <see langword="true" /> 如果目前位置的行開頭否則， <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-355">
              <see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-356">如果<xref:System.Windows.Documents.TextPointer>指向模稜兩可的位置，例如，兩行，之間所指定的方向中的行<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>屬性當做相對的開始行。</span><span class="sxs-lookup"><span data-stu-id="1c40a-356">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="1c40a-357">這個屬性所執行的作業取決於有效的配置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-357">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="1c40a-358">必要時，這個方法會嘗試自動重新產生有效的配置，再繼續作業。</span><span class="sxs-lookup"><span data-stu-id="1c40a-358">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="1c40a-359">重新產生配置可能會相當耗費資源的作業。</span><span class="sxs-lookup"><span data-stu-id="1c40a-359">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="1c40a-360">使用<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>屬性來執行作業，可能會重新產生配置前先檢查有效的配置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-360">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="1c40a-361">如需詳細資訊，請參閱[配置](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="1c40a-361">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberSignature Language="F#" Value="member this.IsInSameDocument : System.Windows.Documents.TextPointer -&gt; bool" Usage="textPointer.IsInSameDocument textPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition">
          <span data-ttu-id="1c40a-362">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-362">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1c40a-363">Indicates whether the specified position is in the same text container as the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-363">Indicates whether the specified position is in the same text container as the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-364">
            <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-364">
              <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-365">大部分的作業牽涉到多個<xref:System.Windows.Documents.TextPointer>執行個體才有效，如果有問題的執行個體表示相同的文字容器範圍中的位置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-365">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="1c40a-366">例如<xref:System.Windows.Documents.TextPointer.CompareTo%2A>和<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>方法不能與<xref:System.Windows.Documents.TextPointer>到目前的位置與相關聯的文字容器之外的位置。</span><span class="sxs-lookup"><span data-stu-id="1c40a-366">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="1c40a-367">使用這個方法可讓您確認指定<xref:System.Windows.Documents.TextPointer>與這類作業的目前位置相容。</span><span class="sxs-lookup"><span data-stu-id="1c40a-367">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1c40a-368">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="1c40a-368">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="1c40a-369">此範例會使用<xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A>方法來檢查是否有指定<xref:System.Windows.Documents.TextPointer>位於其他兩個指定之間<xref:System.Windows.Documents.TextPointer>狀況並不保證所有的三個位置都屬於相同的文字容器中的執行個體。</span><span class="sxs-lookup"><span data-stu-id="1c40a-369">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1c40a-370">
            <paramref name="textPosition" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-370">
              <paramref name="textPosition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalDirection : System.Windows.Documents.LogicalDirection" Usage="System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-371">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-371">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c40a-372">
            <see cref="T:System.Windows.Documents.LogicalDirection" />目前的位置與相關聯的值。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-372">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1c40a-373">如何使用這個屬性，例如<xref:System.Windows.Documents.LogicalDirection>的<xref:System.Windows.Documents.TextPointer>傳回點擊測試方法會將兩個字元的文字之間叫用。</span><span class="sxs-lookup"><span data-stu-id="1c40a-373">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="1c40a-374">邏輯方向指定這兩個字元的實際點擊 — 左邊或右邊。</span><span class="sxs-lookup"><span data-stu-id="1c40a-374">The logical direction specifies which of the two characters was actually hit—the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraph : System.Windows.Documents.Paragraph" Usage="System.Windows.Documents.TextPointer.Paragraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-375">Gets the paragraph that scopes the current position, if any.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-375">Gets the paragraph that scopes the current position, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c40a-376">
            <see cref="T:System.Windows.Documents.Paragraph" />的範圍目前的位置，或<see langword="null" />如果沒有這類段落存在。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-376">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.Documents.TextPointer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-377">Gets the logical parent that scopes the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-377">Gets the logical parent that scopes the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1c40a-378">範圍的目前位置邏輯父代。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-378">The logical parent that scopes the current position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textPointer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1c40a-379">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-379">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1c40a-380">The string that represents the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1c40a-380">The string that represents the object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>