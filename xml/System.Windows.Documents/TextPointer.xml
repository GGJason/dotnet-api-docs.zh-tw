<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="20e032541a3b46004aebc1cb03effddcadbc38ce" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52228427" /></Metadata><TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <TypeSignature Language="F#" Value="type TextPointer = class&#xA;    inherit ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0f12f-101">表示 <see cref="T:System.Windows.Documents.FlowDocument" /> 或 <see cref="T:System.Windows.Controls.TextBlock" /> 內的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-102"><xref:System.Windows.Documents.TextPointer>類別引進了下列術語：</span><span class="sxs-lookup"><span data-stu-id="0f12f-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="0f12f-103">位置-本質上<xref:System.Windows.Documents.TextPointer>永遠指向*位置*內容中。</span><span class="sxs-lookup"><span data-stu-id="0f12f-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="0f12f-104">其中一個屬於流程或在內容中，字元間內容項目標記，這類位置定義內容的結構。</span><span class="sxs-lookup"><span data-stu-id="0f12f-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="0f12f-105">目前的位置-因為<xref:System.Windows.Documents.TextPointer>一律表示的位置中，而且因為許多的作業，可以透過執行<xref:System.Windows.Documents.TextPointer>是相對於目前指向的位置<xref:System.Windows.Documents.TextPointer>，合理的直接參考所指定的位置<xref:System.Windows.Documents.TextPointer>作為*目前的位置*。</span><span class="sxs-lookup"><span data-stu-id="0f12f-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="0f12f-106">插入的位置-*插入位置*位置，其中可能會加入新的內容而不會中斷任何語意規則相關聯的內容。</span><span class="sxs-lookup"><span data-stu-id="0f12f-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="0f12f-107">在實務上，插入位置是可能放置插入點的內容中。</span><span class="sxs-lookup"><span data-stu-id="0f12f-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="0f12f-108">有效的範例<xref:System.Windows.Documents.TextPointer>不是插入位置的位置是相鄰的兩個位置<xref:System.Windows.Documents.Paragraph>標籤 (也就是上一段的結尾標記和下一個段落的開頭標記之間)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="0f12f-109">符號-基於<xref:System.Windows.Documents.TextPointer>包含符號的作業，下列任一項會被視為*符號*:</span><span class="sxs-lookup"><span data-stu-id="0f12f-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="0f12f-110">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="0f12f-111">A<xref:System.Windows.UIElement>內含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="0f12f-112">請注意，這類<xref:System.Windows.UIElement>一律為一個符號; 任何其他內容或所包含的項目計入<xref:System.Windows.UIElement>不會被視為符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="0f12f-113">每個 16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內的文字字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="0f12f-114">文字容器-A*文字容器*形成非固定格式內容手邊的 ultimate 框線的項目，所指出之位置<xref:System.Windows.Documents.TextPointer>永遠落在文字容器內。</span><span class="sxs-lookup"><span data-stu-id="0f12f-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="0f12f-115">目前的文字容器都必須在<xref:System.Windows.Documents.FlowDocument>或<xref:System.Windows.Controls.TextBlock>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="0f12f-116">一般而言，作業之間<xref:System.Windows.Documents.TextPointer>不支援在不同的文字容器中的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0f12f-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="0f12f-117">文件-文字容器中的內容指*文件*，如下所示<xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A>方法和<xref:System.Windows.Documents.TextPointer.DocumentStart%2A>和<xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0f12f-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="0f12f-118"><xref:System.Windows.Documents.TextPointer>類別要加速周遊和內容所表示的操作[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]流動內容項目; 這類項目在一般情況下，衍生自<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="0f12f-119">某些作業，<xref:System.Windows.Documents.TextPointer>有助於包括下列：</span><span class="sxs-lookup"><span data-stu-id="0f12f-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="0f12f-120">執行序數比較的第二個指定的位置與目前的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="0f12f-121">請參閱<xref:System.Windows.Documents.TextPointer.CompareTo%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="0f12f-122">判斷目前的位置，指定方向中相鄰的內容類型。</span><span class="sxs-lookup"><span data-stu-id="0f12f-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="0f12f-123">請參閱<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法和<xref:System.Windows.Documents.TextPointerContext>列舉型別。</span><span class="sxs-lookup"><span data-stu-id="0f12f-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="0f12f-124">取得<xref:System.Windows.Documents.TextElement>的範圍或相鄰的目前位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="0f12f-125">請參閱<xref:System.Windows.Documents.Paragraph>而<xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="0f12f-126">取得文字容器的範圍目前文件。</span><span class="sxs-lookup"><span data-stu-id="0f12f-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="0f12f-127">請參閱 <xref:System.Windows.Documents.TextPointer.Parent%2A> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0f12f-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="0f12f-128">取得指定的前面或後面的目前位置的字元數。</span><span class="sxs-lookup"><span data-stu-id="0f12f-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="0f12f-129">請參閱<xref:System.Windows.Documents.TextPointer.GetTextInRun%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="0f12f-130">在目前位置插入字元的字串。</span><span class="sxs-lookup"><span data-stu-id="0f12f-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="0f12f-131">請參閱<xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="0f12f-132">尋找列界限內容中。</span><span class="sxs-lookup"><span data-stu-id="0f12f-132">Find line boundaries in content.</span></span>  <span data-ttu-id="0f12f-133">請參閱<xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A>方法和<xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0f12f-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="0f12f-134">之間轉譯<xref:System.Windows.Documents.TextPointer>內容到位移的位置和符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="0f12f-135">請參閱<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>和<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="0f12f-136">執行之間轉譯視覺點擊測試<xref:System.Windows.Documents.TextPointer>位置和<xref:System.Windows.Point>表示相對座標表示。</span><span class="sxs-lookup"><span data-stu-id="0f12f-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="0f12f-137">尋找附近的插入位置，或檢查目前的位置是否為插入位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="0f12f-138">請參閱<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>並<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>方法和<xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="0f12f-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="0f12f-139">位置及<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>由<xref:System.Windows.Documents.TextPointer>是不可變的物件。</span><span class="sxs-lookup"><span data-stu-id="0f12f-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="0f12f-140">當內容是編輯或修改，所指出之位置<xref:System.Windows.Documents.TextPointer>相對於與周圍文字; 不會變更而不是內容開始從該位置的位移會調整以反映新的相對位置中的對應內容。</span><span class="sxs-lookup"><span data-stu-id="0f12f-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="0f12f-141">比方說， <xref:System.Windows.Documents.TextPointer> ，指出指定的段落開頭的位置會繼續以指向該段落的開頭，插入或刪除之前或之後的段落內容時，即使。</span><span class="sxs-lookup"><span data-stu-id="0f12f-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="0f12f-142"><xref:System.Windows.Documents.TextPointer>類別未提供任何公用建構函式。</span><span class="sxs-lookup"><span data-stu-id="0f12f-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="0f12f-143">執行個體<xref:System.Windows.Documents.TextPointer>建立使用其他物件的屬性或方法 (包括其他<xref:System.Windows.Documents.TextPointer>物件)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="0f12f-144">下列清單提供幾個範例的方法和屬性，建立並傳回<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="0f12f-145">此清單未全部列出：</span><span class="sxs-lookup"><span data-stu-id="0f12f-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="0f12f-146">從<xref:System.Windows.Documents.TextRange>:<xref:System.Windows.Documents.TextRange.Start%2A>和<xref:System.Windows.Documents.TextRange.End%2A>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="0f12f-147">從<xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>， <xref:System.Windows.Documents.TextElement.ContentEnd%2A>， <xref:System.Windows.Documents.TextElement.ElementStart%2A>，和<xref:System.Windows.Documents.TextElement.ElementEnd%2A>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="0f12f-148">從<xref:System.Windows.Controls.TextBlock>（文字容器）： <xref:System.Windows.Controls.TextBlock.ContentStart%2A>， <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>，和<xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="0f12f-149">從<xref:System.Windows.Documents.FlowDocument>（文字容器）： <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>，及 <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="0f12f-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="0f12f-150">從現有<xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>， <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>， <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>，和<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f12f-151">下列範例示範如何使用<xref:System.Windows.Documents.TextPointer>若要尋找的位置只在第一個<xref:System.Windows.Documents.Run>在指定的文字容器中的項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="0f12f-152">下列範例會實作簡單的尋找的演算法使用<xref:System.Windows.Documents.TextPointer>設備。</span><span class="sxs-lookup"><span data-stu-id="0f12f-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.CompareTo position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="0f12f-153"><see cref="T:System.Windows.Documents.TextPointer" />，指定要與目前位置進行比較的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="0f12f-154">在目前 <see cref="T:System.Windows.Documents.TextPointer" /> 指定的位置與第二個指定的 <see cref="T:System.Windows.Documents.TextPointer" /> 之間執行順序比較。</span><span class="sxs-lookup"><span data-stu-id="0f12f-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="0f12f-155">如果目前 <see cref="T:System.Windows.Documents.TextPointer" /> 在 <paramref name="position" /> 前面，則為 –1，如果位置相同，則為 0；如果目前 <see cref="T:System.Windows.Documents.TextPointer" /> 在 <paramref name="position" /> 後面，則為 +1。</span><span class="sxs-lookup"><span data-stu-id="0f12f-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-156">-1 值表示由目前指定的位置<xref:System.Windows.Documents.TextPointer>前面所指定的位置`position`。</span><span class="sxs-lookup"><span data-stu-id="0f12f-156">A value of –1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="0f12f-157">0 的值會指出指定的位置相等。</span><span class="sxs-lookup"><span data-stu-id="0f12f-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="0f12f-158">正數的 + 1 值表示由目前指定的位置<xref:System.Windows.Documents.TextPointer>所指定的位置之後`position`。</span><span class="sxs-lookup"><span data-stu-id="0f12f-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f12f-159">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="0f12f-160">在範例中，<xref:System.Windows.Documents.TextPointer.CompareTo%2A>方法可搭配<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>方法來測試是否指定<xref:System.Windows.Documents.TextElement>是空的。</span><span class="sxs-lookup"><span data-stu-id="0f12f-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f12f-161"><paramref name="position" /> 會指定文字容器外與目前位置相關的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-161"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberSignature Language="F#" Value="member this.DeleteTextInRun : int -&gt; int" Usage="textPointer.DeleteTextInRun count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="0f12f-162">從目前位置開始算起，要刪除的字元數。</span><span class="sxs-lookup"><span data-stu-id="0f12f-162">The number of characters to delete, starting at the current position.</span></span> <span data-ttu-id="0f12f-163">指定正值以刪除目前位置後面的字元；指定負值以刪除目前位置前面的字元。</span><span class="sxs-lookup"><span data-stu-id="0f12f-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span></span></param>
        <summary><span data-ttu-id="0f12f-164">從目前 <see cref="T:System.Windows.Documents.TextPointer" /> 指出的位置刪除指定的字元數。</span><span class="sxs-lookup"><span data-stu-id="0f12f-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="0f12f-165">實際刪除的字元數。</span><span class="sxs-lookup"><span data-stu-id="0f12f-165">The number of characters actually deleted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-166">指定正值以刪除目前位置後面的字元 (如<xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); 指定負值以刪除目前位置前面的字元 (如<xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="0f12f-167">實際刪除的字元數目可能小於指定的數字`count`。</span><span class="sxs-lookup"><span data-stu-id="0f12f-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="0f12f-168">這發生在情況下，`count`指定字元數超過要刪除的存在。</span><span class="sxs-lookup"><span data-stu-id="0f12f-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0f12f-169">在不容許有文字的位置呼叫了此方法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-169">The method is called at a position where text is not allowed.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f12f-170">在與目前位置相關的文字容器中的內容結尾處取得 <see cref="T:System.Windows.Documents.TextPointer" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="0f12f-171">位於與目前位置相關的文字容器中內容結尾處的 <see cref="T:System.Windows.Documents.TextPointer" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-172"><xref:System.Windows.Documents.TextPointer.Parent%2A>傳回<xref:System.Windows.Documents.TextPointer>永遠是文字容器 (<xref:System.Windows.Controls.TextBlock>或是<xref:System.Windows.Documents.FlowDocument>)，而非<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f12f-173">在與目前位置相關的文字容器中的內容開頭處取得 <see cref="T:System.Windows.Documents.TextPointer" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="0f12f-174">位於與目前位置相關的文字容器中內容開頭處的 <see cref="T:System.Windows.Documents.TextPointer" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-175">使用這個屬性傳回作為基準位置要從中使用至其他位置的相對位移的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="0f12f-176"><xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>和<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>方法可用來轉譯之間的位置和位置位移。</span><span class="sxs-lookup"><span data-stu-id="0f12f-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="0f12f-177"><xref:System.Windows.Documents.TextPointer.Parent%2A>傳回<xref:System.Windows.Documents.TextPointer>永遠是文字容器 (<xref:System.Windows.Controls.TextBlock>或是<xref:System.Windows.Documents.FlowDocument>)，而非<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetAdjacentElement : System.Windows.Documents.LogicalDirection -&gt; System.Windows.DependencyObject" Usage="textPointer.GetAdjacentElement direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="0f12f-178">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值會指定將在哪一個邏輯方向搜尋相鄰項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span></span></param>
        <summary><span data-ttu-id="0f12f-179">傳回在指定的邏輯方向與目前 <see cref="T:System.Windows.Documents.TextPointer" /> 相鄰的項目 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="0f12f-180">在指定的 <paramref name="direction" /> 相鄰的項目，或者若沒有相鄰項目存在，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-181">傳回的項目通常是<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="0f12f-182">A<xref:System.Windows.UIElement>可以傳回的時機<xref:System.Windows.Documents.TextPointer>表示的位置內<xref:System.Windows.Documents.BlockUIContainer>項目或<xref:System.Windows.Documents.InlineUIContainer>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterRect : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Rect" Usage="textPointer.GetCharacterRect direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="0f12f-183">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值會指定將在哪一個邏輯方向搜尋內容週框方塊。</span><span class="sxs-lookup"><span data-stu-id="0f12f-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span></span></param>
        <summary><span data-ttu-id="0f12f-184">針對在指定的邏輯方向與目前 <see cref="T:System.Windows.Rect" /> 相鄰的內容，傳回週框方塊 (<see cref="T:System.Windows.Documents.TextPointer" />)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="0f12f-185">在指定的邏輯方向與目前 <see cref="T:System.Windows.Documents.TextPointer" /> 相鄰之內容的週框方塊，或者若無法使用目前有效的配置資訊的話，則為 <see cref="P:System.Windows.Rect.Empty" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-186"><xref:System.Windows.Documents.TextElement> 邊緣不會考慮內容，這個方法的目的。</span><span class="sxs-lookup"><span data-stu-id="0f12f-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="0f12f-187">如果<xref:System.Windows.Documents.TextPointer>位於之前<xref:System.Windows.Documents.TextElement>邊，傳回的值會是週框方塊的下一個非<xref:System.Windows.Documents.TextElement>內容中指定的方向。</span><span class="sxs-lookup"><span data-stu-id="0f12f-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="0f12f-188">不是否有任何內容中指定的方向，零寬度<xref:System.Windows.Rect>傳回高度比對的高度任何先前的內容。</span><span class="sxs-lookup"><span data-stu-id="0f12f-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="0f12f-189">這個方法所執行的作業取決於有效的配置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="0f12f-190">如有必要，這個方法會嘗試自動重新產生有效的配置，再繼續作業。</span><span class="sxs-lookup"><span data-stu-id="0f12f-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="0f12f-191">重新產生配置可以是相當耗成本的作業。</span><span class="sxs-lookup"><span data-stu-id="0f12f-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="0f12f-192">使用<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>屬性來執行作業，可能會重新產生配置之前檢查有效的配置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="0f12f-193">如需詳細資訊，請參閱[配置](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="0f12f-194">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值會指定將在哪一個邏輯方向搜尋最接近插入位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span></span></param>
        <summary><span data-ttu-id="0f12f-195">將 <see cref="T:System.Windows.Documents.TextPointer" /> 傳回至在指定的邏輯方向中的最接近插入位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="0f12f-196">在指定的方向中最接近插入位置的 <see cref="T:System.Windows.Documents.TextPointer" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-197">插入位置是其中可能會加入新的內容而不會中斷任何語意規則相關聯的內容位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="0f12f-198">在實務上，插入位置是可能放置插入點的內容中。</span><span class="sxs-lookup"><span data-stu-id="0f12f-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="0f12f-199">有效的範例<xref:System.Windows.Documents.TextPointer>不是插入位置的位置是相鄰的兩個位置<xref:System.Windows.Documents.Paragraph>標籤 (也就是上一段的結尾標記和下一個段落的開頭標記之間)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="0f12f-200">如果<xref:System.Windows.Documents.TextPointer>已經指向有效的插入位置，但結尾標記為非空白的格式化順序直接位在指定的方向，該位置則<xref:System.Windows.Documents.TextPointer>傳回由這個方法會調整為指向插入只在格式化的序列的關閉之後的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="0f12f-201">例如，請考慮標記序列`<Bold>a</Bold>b`。</span><span class="sxs-lookup"><span data-stu-id="0f12f-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="0f12f-202">請注意，有兩個字母之間的插入位置`a`並`b`— 一個結尾`Bold`標記，並直接跟在結尾的一個`Bold`標記。</span><span class="sxs-lookup"><span data-stu-id="0f12f-202">Note that there are two insertion positions between the letters `a` and `b` — one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="0f12f-203">如果<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>上呼叫<xref:System.Windows.Documents.TextPointer>緊接著字母位置`a`之前關閉作業的`Bold`標記，且`direction`的<xref:System.Windows.Documents.LogicalDirection.Forward>，傳回<xref:System.Windows.Documents.TextPointer>調整為指向字母之前位置`b`，關閉後`Bold`標記。</span><span class="sxs-lookup"><span data-stu-id="0f12f-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="0f12f-204">類似的調整會將開啟的相反邏輯方向中運作時的格式設定索引標籤。</span><span class="sxs-lookup"><span data-stu-id="0f12f-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="0f12f-205">這個方法被要提供一種在類似的情況下的插入位置之間的去除混淆。</span><span class="sxs-lookup"><span data-stu-id="0f12f-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="0f12f-206">這個方法也可用在涉及一連串的結構化的標記時要謹慎的插入點。</span><span class="sxs-lookup"><span data-stu-id="0f12f-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="0f12f-207">比方說，在餘額和期末段落標記之間的位置，當方向參數可用來選取下列段落的開頭最接近插入點 (藉由指定<xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) 或在前面的段落 （結尾藉由指定<xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="0f12f-208">如果指標已插入位置，而在指定有沒有相鄰的格式化標記`direction`，傳回<xref:System.Windows.Documents.TextPointer>指向相同的位置，以呼叫<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="0f12f-209">很可能沒有有效的插入位置存在相對於所指向位置<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="0f12f-210">如果參照的內容在結構上完成，如所示的空的資料表或清單中，會發生這項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="0f12f-211">在此情況下，這個方法只會傳回<xref:System.Windows.Documents.TextPointer>為相同的位置，以<xref:System.Windows.Documents.TextPointer>從呼叫這個方法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="0f12f-212">這個方法一律會傳回有效<xref:System.Windows.Documents.TextPointer>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f12f-213">此範例示範如何使用<xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A>方法來檢查指定<xref:System.Windows.Documents.TextElement>是空的可列印的內容。</span><span class="sxs-lookup"><span data-stu-id="0f12f-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f12f-214">將 <see cref="T:System.Windows.Documents.TextPointer" /> 傳回至相對於目前 <see cref="T:System.Windows.Documents.TextPointer" /> 指定的行開頭。</span><span class="sxs-lookup"><span data-stu-id="0f12f-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="0f12f-215">判斷要傳回哪一行的開始位置時，所要略過的字行開頭標記數目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="0f12f-216">負值會指定前面字行、0 指定目前字行，而正值則指定後面字行。</span><span class="sxs-lookup"><span data-stu-id="0f12f-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <summary><span data-ttu-id="0f12f-217">將 <see cref="T:System.Windows.Documents.TextPointer" /> 傳回至相對於目前 <see cref="T:System.Windows.Documents.TextPointer" /> 指定的行開頭。</span><span class="sxs-lookup"><span data-stu-id="0f12f-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="0f12f-218">指向指定行開頭的 <see cref="T:System.Windows.Documents.TextPointer" /> (將 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 設為 <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />)，或者若指定的字行超出範圍或無法找到的話，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-219">如果<xref:System.Windows.Documents.TextPointer>指向的模稜兩可的位置，比方說，兩個線條之間的行中所指定的方向<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>當做相對的開始行。</span><span class="sxs-lookup"><span data-stu-id="0f12f-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="0f12f-220">這個方法所執行的作業取決於有效的配置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="0f12f-221">如有必要，這個方法會嘗試自動重新產生有效的配置，再繼續作業。</span><span class="sxs-lookup"><span data-stu-id="0f12f-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="0f12f-222">重新產生配置可以是相當耗成本的作業。</span><span class="sxs-lookup"><span data-stu-id="0f12f-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="0f12f-223">使用<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>執行可能會重新產生版面配置的作業之前檢查有效的配置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="0f12f-224">如需詳細資訊，請參閱[配置](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int *  -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition (count, actualCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="0f12f-225">判斷要傳回哪一行的開始位置時，所要略過的字行開頭標記數目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="0f12f-226">負值會指定前面字行、0 指定目前字行，而正值則指定後面字行。</span><span class="sxs-lookup"><span data-stu-id="0f12f-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <param name="actualCount"><span data-ttu-id="0f12f-227">在判斷要傳回哪一行的開頭位置時，這個方法會傳回、包含已略過之字行開頭標記的實際數目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span></span>  <span data-ttu-id="0f12f-228">如果在略過指定的行數之前，遇到內容的開頭或結尾，則此值可能小於 <paramref name="count" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-228">This value may be less than <paramref name="count" /> if the beginning or end of content is encountered before the specified number of lines are skipped.</span></span> <span data-ttu-id="0f12f-229">這個參數會以未初始化的狀態傳遞。</span><span class="sxs-lookup"><span data-stu-id="0f12f-229">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="0f12f-230">將 <see cref="T:System.Windows.Documents.TextPointer" /> 傳回至相對於目前 <see cref="T:System.Windows.Documents.TextPointer" /> 指定的行開頭，並報告已略過多少行。</span><span class="sxs-lookup"><span data-stu-id="0f12f-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span></span></summary>
        <returns><span data-ttu-id="0f12f-231"><see cref="T:System.Windows.Documents.TextPointer" />，指向指定行的開頭 (將 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 設為 <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />)，或指向最接近指定行的字行開頭 (如果指定行超出範圍的話)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-232">如果<xref:System.Windows.Documents.TextPointer>指向的模稜兩可的位置，比方說，兩個線條之間的行中所指定的方向<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>屬性當做相對的開始行。</span><span class="sxs-lookup"><span data-stu-id="0f12f-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextContextPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextContextPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="0f12f-233">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值會指定將在哪一個邏輯方向搜尋下一個符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span></span></param>
        <summary><span data-ttu-id="0f12f-234">將指標傳回至指定的邏輯方向中的下一個符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-234">Returns a pointer to the next symbol in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="0f12f-235">所要求方向中下一個符號的 <see cref="T:System.Windows.Documents.TextPointer" />，或者若目前 <see cref="T:System.Windows.Documents.TextPointer" /> 與內容開頭或結尾相鄰，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-236">下列其中一項會被視為符號：</span><span class="sxs-lookup"><span data-stu-id="0f12f-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="0f12f-237">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="0f12f-238">A<xref:System.Windows.UIElement>中所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="0f12f-239">請注意，這類<xref:System.Windows.UIElement>一律為一個符號; 任何其他內容或所包含的項目計入<xref:System.Windows.UIElement>不會被視為符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="0f12f-240">16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內的文字字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="0f12f-241">如果下一個符號會分類成<xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>， <xref:System.Windows.Documents.TextPointerContext.ElementStart>，或<xref:System.Windows.Documents.TextPointerContext.ElementEnd>(所識別<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法)，則<xref:System.Windows.Documents.TextPointer>傳回由這個方法由一個符號進階從目前的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="0f12f-242">如果下一個符號會分類成<xref:System.Windows.Documents.TextPointerContext.Text>，則<xref:System.Windows.Documents.TextPointer>傳回由這個方法前往超過文字的下一個非文字符號 (也就是下一步 表示位置<xref:System.Windows.Documents.TextPointerContext>不是<xref:System.Windows.Documents.TextPointerContext.Text>)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="0f12f-243">確切的符號計數已超過可以事先計算藉由呼叫<xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A>方法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f12f-244">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="0f12f-245">此範例會使用<xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A>方法搭配<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法來周遊，並擷取在指定的符號<xref:System.Windows.Documents.TextElement>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="0f12f-246">雖然此範例可以用來擷取[!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)]結構的內容指定<xref:System.Windows.Documents.TextElement>，它是針對只，是為了示範，因此不應用於實際執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="0f12f-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="0f12f-247">請參閱<xref:System.Xml>一組豐富的設計使用和處理 XML 類型的命名空間。</span><span class="sxs-lookup"><span data-stu-id="0f12f-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="0f12f-248">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值會指定將在哪一個邏輯方向搜尋下一個插入位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span></span></param>
        <summary><span data-ttu-id="0f12f-249">將 <see cref="T:System.Windows.Documents.TextPointer" /> 傳回至所指定邏輯方向中的下一個插入位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="0f12f-250"><see cref="T:System.Windows.Documents.TextPointer" />，識別所要求方向中下一個插入位置，或者若找不到下一個插入位置的話，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-251">*插入位置*位置，其中可能會加入新的內容而不會中斷任何語意規則相關聯的內容。</span><span class="sxs-lookup"><span data-stu-id="0f12f-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="0f12f-252">在實務上，插入位置是可能放置插入點的內容中。</span><span class="sxs-lookup"><span data-stu-id="0f12f-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="0f12f-253">有效的範例<xref:System.Windows.Documents.TextPointer>不是插入位置的位置是相鄰的兩個位置<xref:System.Windows.Documents.Paragraph>標籤 (也就是上一段的結尾標記和下一個段落的開頭標記之間)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f12f-254">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="0f12f-255">此範例會使用<xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>方法來周遊內容項目界限，若要計算的數目<xref:System.Windows.Documents.Paragraph>之間兩個指定的項目呈現<xref:System.Windows.Documents.TextPointer>執行個體。</span><span class="sxs-lookup"><span data-stu-id="0f12f-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetToPosition : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.GetOffsetToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="0f12f-256"><see cref="T:System.Windows.Documents.TextPointer" />，指定要找出距離 (以符號表示) 的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span></span></param>
        <summary><span data-ttu-id="0f12f-257">傳回目前 <see cref="T:System.Windows.Documents.TextPointer" /> 與第二個指定的 <see cref="T:System.Windows.Documents.TextPointer" /> 之間的符號計數。</span><span class="sxs-lookup"><span data-stu-id="0f12f-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="0f12f-258">目前 <see cref="T:System.Windows.Documents.TextPointer" /> 與 <paramref name="position" /> 之間的相對符號數目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span></span>  <span data-ttu-id="0f12f-259">負值表示目前 <see cref="T:System.Windows.Documents.TextPointer" /> 在 <paramref name="position" /> 指定的位置後面，0 表示位置相等，而正值則表示目前 <see cref="T:System.Windows.Documents.TextPointer" /> 在 <paramref name="position" /> 指定的位置前面。</span><span class="sxs-lookup"><span data-stu-id="0f12f-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-260">下列其中一項會被視為符號：</span><span class="sxs-lookup"><span data-stu-id="0f12f-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="0f12f-261">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="0f12f-262">A<xref:System.Windows.UIElement>中所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="0f12f-263">請注意，這類<xref:System.Windows.UIElement>一律為一個符號; 任何其他內容或所包含的項目計入<xref:System.Windows.UIElement>不會被視為符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="0f12f-264">16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內的文字字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f12f-265">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="0f12f-266">此範例會使用<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>方法來尋找兩個的位移<xref:System.Windows.Documents.TextPointer>執行個體，並接著使用此資訊來儲存和還原中的選取範圍<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="0f12f-267">此範例假設的內容<xref:System.Windows.Controls.RichTextBox>儲存選取項目和選取項目還原之間未變更。</span><span class="sxs-lookup"><span data-stu-id="0f12f-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f12f-268"><paramref name="position" /> 會指定文字容器外與目前位置相關的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-268"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPointerContext : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointerContext" Usage="textPointer.GetPointerContext direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="0f12f-269">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值會指定將在哪一個邏輯方向中判斷相鄰內容的分類。</span><span class="sxs-lookup"><span data-stu-id="0f12f-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span></span></param>
        <summary><span data-ttu-id="0f12f-270">針對在指定的邏輯方向中與目前 <see cref="T:System.Windows.Documents.TextPointer" /> 相鄰的內容，傳回分類指示器。</span><span class="sxs-lookup"><span data-stu-id="0f12f-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="0f12f-271">其中一個 <see cref="T:System.Windows.Documents.TextPointerContext" /> 值，這個值會指出在指定的邏輯方向中相鄰內容的分類。</span><span class="sxs-lookup"><span data-stu-id="0f12f-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0f12f-272">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="0f12f-273">此範例會使用<xref:System.Windows.Documents.TextPointer.GetPointerContext%2A>方法，以實作計算餘額的開頭和結尾元素標籤之間兩個指定的演算法<xref:System.Windows.Documents.TextPointer>位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="0f12f-274">每個開頭項目標記都會計為 + 1，而每一個結尾項目標記會計算為-1。</span><span class="sxs-lookup"><span data-stu-id="0f12f-274">Each opening element tag is counted as +1, and each closing element tag is counted as –1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f12f-275">將 <see cref="T:System.Windows.Documents.TextPointer" /> 傳回至指定的位移 (以符號表示) 所指出的位置 (從內容的開頭算起)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0f12f-276">以符號表示的位移，用於計算並傳回位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-276">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="0f12f-277">如果位移是負數，則會在 <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> 屬性指出的相反邏輯方向中計算位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span></span></param>
        <summary><span data-ttu-id="0f12f-278">將 <see cref="T:System.Windows.Documents.TextPointer" /> 傳回至指定的位移 (以符號表示) 所指出的位置 (從目前 <see cref="T:System.Windows.Documents.TextPointer" />.的開頭算起)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="0f12f-279">指定的位移所指出之位置的 <see cref="T:System.Windows.Documents.TextPointer" />，如果找不到對應位置，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-280">下列其中一項會被視為符號：</span><span class="sxs-lookup"><span data-stu-id="0f12f-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="0f12f-281">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="0f12f-282">A<xref:System.Windows.UIElement>中所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="0f12f-283">請注意，這類<xref:System.Windows.UIElement>一律為一個符號; 任何其他內容或所包含的項目計入<xref:System.Windows.UIElement>不會被視為符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="0f12f-284">16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內的文字字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f12f-285">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="0f12f-286">此範例會使用<xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>方法，以實作一組方法，一個用來計算相對於任何裝載的段落，而另一個則傳回的指定位置的位移<xref:System.Windows.Documents.TextPointer>指定段落中指定的位移。</span><span class="sxs-lookup"><span data-stu-id="0f12f-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset (offset, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="0f12f-287">以符號表示的位移，用於計算並傳回位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-287">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="0f12f-288">如果位移是負數，則傳回的 <see cref="T:System.Windows.Documents.TextPointer" /> 在目前 <see cref="T:System.Windows.Documents.TextPointer" /> 的前面，否則在後面。</span><span class="sxs-lookup"><span data-stu-id="0f12f-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span></span></param>
        <param name="direction"><span data-ttu-id="0f12f-289">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值會指定傳回的 <see cref="T:System.Windows.Documents.TextPointer" /> 的邏輯方向。</span><span class="sxs-lookup"><span data-stu-id="0f12f-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></param>
        <summary><span data-ttu-id="0f12f-290">將 <see cref="T:System.Windows.Documents.TextPointer" /> 傳回至指定的位移 (以符號表示) 所指出的位置 (依指定的方向從目前 <see cref="T:System.Windows.Documents.TextPointer" /> 的開頭算起)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span></span></summary>
        <returns><span data-ttu-id="0f12f-291">指定的位移所指出之位置的 <see cref="T:System.Windows.Documents.TextPointer" />，如果位移展開後超過內容結尾，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-292">下列其中一項會被視為符號：</span><span class="sxs-lookup"><span data-stu-id="0f12f-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="0f12f-293">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="0f12f-294">A<xref:System.Windows.UIElement>中所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="0f12f-295">請注意，這類<xref:System.Windows.UIElement>一律為一個符號; 任何其他內容或所包含的項目計入<xref:System.Windows.UIElement>不會被視為符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="0f12f-296">16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內的文字字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="0f12f-297">傳回與目前 <see cref="T:System.Windows.Documents.TextPointer" /> 相鄰的文字。</span><span class="sxs-lookup"><span data-stu-id="0f12f-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection -&gt; string" Usage="textPointer.GetTextInRun direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="0f12f-298">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值會指定將在哪一個邏輯方向尋找並傳回任何相鄰文字。</span><span class="sxs-lookup"><span data-stu-id="0f12f-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span></span></param>
        <summary><span data-ttu-id="0f12f-299">傳回一個字串，其中包含與指定之邏輯方向中目前 <see cref="T:System.Windows.Documents.TextPointer" /> 相鄰的任何文字。</span><span class="sxs-lookup"><span data-stu-id="0f12f-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="0f12f-300">包含指定之邏輯方向中任何相鄰文字的字串，或為 <see cref="F:System.String.Empty" /> (如果找不到相鄰文字的話)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-301">這個方法會傳回文字才不會中斷的執行。</span><span class="sxs-lookup"><span data-stu-id="0f12f-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="0f12f-302">如果任何符號類型，而不傳回的任何項目<xref:System.Windows.Documents.TextPointerContext.Text>旁目前<xref:System.Windows.Documents.TextPointer>中指定的方向。</span><span class="sxs-lookup"><span data-stu-id="0f12f-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="0f12f-303">同樣地，文字只會傳回至下一個非文字符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f12f-304">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="0f12f-305">此範例會使用<xref:System.Windows.Documents.TextPointer.GetTextInRun%2A>方法，以實作簡單的文字擷取程式 」。</span><span class="sxs-lookup"><span data-stu-id="0f12f-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="0f12f-306">方法會傳回介於兩個指定的所有文字的字串串連<xref:System.Windows.Documents.TextPointer>執行個體。</span><span class="sxs-lookup"><span data-stu-id="0f12f-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="0f12f-307">雖然您可以使用此範例，來擷取兩個之間的任何文字<xref:System.Windows.Documents.TextPointer>執行個體，它是僅供說明，因此不應用於實際執行程式碼。</span><span class="sxs-lookup"><span data-stu-id="0f12f-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="0f12f-308">請改用 <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0f12f-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection * char[] * int * int -&gt; int" Usage="textPointer.GetTextInRun (direction, textBuffer, startIndex, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="0f12f-309">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值會指定將在哪一個邏輯方向尋找並複製任何相鄰文字。</span><span class="sxs-lookup"><span data-stu-id="0f12f-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span></span></param>
        <param name="textBuffer"><span data-ttu-id="0f12f-310">任何文字都會複製到其中的緩衝區。</span><span class="sxs-lookup"><span data-stu-id="0f12f-310">A buffer into which any text is copied.</span></span></param>
        <param name="startIndex"><span data-ttu-id="0f12f-311">開始寫入所複製文字的 <paramref name="textBuffer" /> 索引。</span><span class="sxs-lookup"><span data-stu-id="0f12f-311">An index into <paramref name="textBuffer" /> at which to begin writing copied text.</span></span></param>
        <param name="count"><span data-ttu-id="0f12f-312">要複製的最大字元數。</span><span class="sxs-lookup"><span data-stu-id="0f12f-312">The maximum number of characters to copy.</span></span></param>
        <summary><span data-ttu-id="0f12f-313">將指定的最大字元數從指定方向中的任何相鄰文字複製到呼叫者提供的字元陣列中。</span><span class="sxs-lookup"><span data-stu-id="0f12f-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span></span></summary>
        <returns><span data-ttu-id="0f12f-314">實際複製到 <paramref name="textBuffer" /> 中的字元數。</span><span class="sxs-lookup"><span data-stu-id="0f12f-314">The number of characters actually copied into <paramref name="textBuffer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-315">這個方法會傳回文字才不會中斷的執行。</span><span class="sxs-lookup"><span data-stu-id="0f12f-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="0f12f-316">如果任何符號類型，而不傳回的任何項目<xref:System.Windows.Documents.TextPointerContext.Text>旁目前<xref:System.Windows.Documents.TextPointer>中指定的方向。</span><span class="sxs-lookup"><span data-stu-id="0f12f-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="0f12f-317">同樣地，文字只會傳回至下一個非文字符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="0f12f-318"><paramref name="startIndex" /> 小於 0 或大於 <paramref name="textBuffer" /> 的 <see cref="P:System.Array.Length" /> 屬性。</span><span class="sxs-lookup"><span data-stu-id="0f12f-318"><paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span></span>  
  
<span data-ttu-id="0f12f-319">-或-</span><span class="sxs-lookup"><span data-stu-id="0f12f-319">-or-</span></span> 
 <span data-ttu-id="0f12f-320"><paramref name="count" /> 小於 0 或大於 <paramref name="textBuffer" /> 中的剩餘空間 (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span><span class="sxs-lookup"><span data-stu-id="0f12f-320"><paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span></span> <span data-ttu-id="0f12f-321">减掉 <paramref name="startIndex" />)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-321">minus <paramref name="startIndex" />).</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextRunLength : System.Windows.Documents.LogicalDirection -&gt; int" Usage="textPointer.GetTextRunLength direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="0f12f-322">其中一個 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值，這個值會指定將在哪一個邏輯方向計算字元數目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span></span></param>
        <summary><span data-ttu-id="0f12f-323">依指定的邏輯方向，傳回介於目前 <see cref="T:System.Windows.Documents.TextPointer" /> 與下一個非文字符號之間的 Unicode 字元數。</span><span class="sxs-lookup"><span data-stu-id="0f12f-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="0f12f-324">目前 <see cref="T:System.Windows.Documents.TextPointer" /> 與下一個非文字符號之間的 Unicode 字元數。</span><span class="sxs-lookup"><span data-stu-id="0f12f-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span></span>  <span data-ttu-id="0f12f-325">如果沒有相鄰文字，則這個數目可能為 0。</span><span class="sxs-lookup"><span data-stu-id="0f12f-325">This number may be 0 if there is no adjacent text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-326">下列其中一項會被視為符號：</span><span class="sxs-lookup"><span data-stu-id="0f12f-326">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="0f12f-327">開頭或結尾標記<xref:System.Windows.Documents.TextElement>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-327">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="0f12f-328">A<xref:System.Windows.UIElement>中所包含的項目<xref:System.Windows.Documents.InlineUIContainer>或<xref:System.Windows.Documents.BlockUIContainer>。</span><span class="sxs-lookup"><span data-stu-id="0f12f-328">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="0f12f-329">請注意，這類<xref:System.Windows.UIElement>一律為一個符號; 任何其他內容或所包含的項目計入<xref:System.Windows.UIElement>不會被視為符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-329">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="0f12f-330">16 位元[!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)]內的文字字元<xref:System.Windows.Documents.Run>項目。</span><span class="sxs-lookup"><span data-stu-id="0f12f-330">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidLayout : bool" Usage="System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f12f-331">取得值，這個值表示與目前位置相關的文字容器是否具備有效的 (最新) 配置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span></span></summary>
        <value><span data-ttu-id="0f12f-332">如果配置最新而且有效則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-332"><see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-333">如有必要，作業取決於有效的配置 (例如<xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A>方法中，<xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A>方法，和<xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A>屬性) 嘗試自動重新產生有效的配置，再繼續作業。</span><span class="sxs-lookup"><span data-stu-id="0f12f-333">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="0f12f-334">重新產生配置可以是相當耗成本的作業。</span><span class="sxs-lookup"><span data-stu-id="0f12f-334">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="0f12f-335">您可以使用這個屬性來執行作業，可能會重新產生配置之前，請先檢查有效的配置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-335">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="0f12f-336">如需詳細資訊，請參閱[配置](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-336">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertLineBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f12f-337">在目前位置插入分行符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-337">Inserts a line break at the current position.</span></span></summary>
        <returns><span data-ttu-id="0f12f-338"><see cref="T:System.Windows.Documents.TextPointer" />，緊接在這個方法所插入的 <see cref="T:System.Windows.Documents.LineBreak" /> 項目後面。</span><span class="sxs-lookup"><span data-stu-id="0f12f-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertParagraphBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertParagraphBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f12f-339">在目前位置插入分段符號。</span><span class="sxs-lookup"><span data-stu-id="0f12f-339">Inserts a paragraph break at the current position.</span></span></summary>
        <returns><span data-ttu-id="0f12f-340">新段落開頭 (<see cref="T:System.Windows.Documents.TextPointer" />) 的 <see cref="P:System.Windows.Documents.TextElement.ContentStart" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-341">如果目前的位置內的現有時，會呼叫這個方法<xref:System.Windows.Documents.Paragraph>項目、 現有的段落和它所包含的任何內容分成兩個段落的目前位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-341">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="0f12f-342">如果目前的位置不在現有的段落內時，會呼叫這個方法，則會插入新的空白段落。</span><span class="sxs-lookup"><span data-stu-id="0f12f-342">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="0f12f-343">如果呼叫這個方法的位置不適用於分割，或插入段落 (例如，如果目前的位置是在<xref:System.Windows.Documents.Hyperlink>項目)，會擲回例外狀況。</span><span class="sxs-lookup"><span data-stu-id="0f12f-343">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0f12f-344">這個方法是在無法分割以容納新段落的位置上呼叫，如同在 <see cref="T:System.Windows.Documents.Hyperlink" /> 或 <see cref="T:System.Windows.Documents.InlineUIContainer" /> 的範圍中。</span><span class="sxs-lookup"><span data-stu-id="0f12f-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.InsertTextInRun : string -&gt; unit" Usage="textPointer.InsertTextInRun textData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="0f12f-345">要插入的文字。</span><span class="sxs-lookup"><span data-stu-id="0f12f-345">The text to insert.</span></span></param>
        <summary><span data-ttu-id="0f12f-346">在目前位置將指定的文字插入文字 <see cref="T:System.Windows.Documents.Run" /> 中。</span><span class="sxs-lookup"><span data-stu-id="0f12f-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-347">如果<xref:System.Windows.Documents.TextPointer>範圍不是由<xref:System.Windows.Documents.Run>項目<xref:System.Windows.Documents.Run>插入連同`textData`。</span><span class="sxs-lookup"><span data-stu-id="0f12f-347">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="0f12f-348">目前位置不在 <see cref="T:System.Windows.Documents.Run" /> 項目內。</span><span class="sxs-lookup"><span data-stu-id="0f12f-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f12f-349"><paramref name="textData" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-349"><paramref name="textData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtInsertionPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f12f-350">取得值，這個值表示目前位置是否為插入位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-350">Gets a value that indicates whether the current position is an insertion position.</span></span></summary>
        <value><span data-ttu-id="0f12f-351">如果目前位置為插入位置則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-351"><see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-352">插入位置是其中可能會加入新的內容而不會中斷任何語意規則相關聯的內容位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-352">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="0f12f-353">在實務上，插入位置是可能放置插入點的內容中。</span><span class="sxs-lookup"><span data-stu-id="0f12f-353">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="0f12f-354">有效的範例<xref:System.Windows.Documents.TextPointer>不是插入位置的位置是相鄰的兩個位置<xref:System.Windows.Documents.Paragraph>標籤 (也就是上一段的結尾標記和下一個段落的開頭標記之間)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-354">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtLineStartPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f12f-355">取得值，這個值表示目前位置是否位於字行開頭。</span><span class="sxs-lookup"><span data-stu-id="0f12f-355">Gets a value that indicates whether the current position is at the beginning of a line.</span></span></summary>
        <value><span data-ttu-id="0f12f-356">如果目前位置位於字行開頭則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-356"><see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-357">如果<xref:System.Windows.Documents.TextPointer>指向的模稜兩可的位置，比方說，兩個線條之間的行中所指定的方向<xref:System.Windows.Documents.TextPointer.LogicalDirection%2A>屬性當做相對的開始行。</span><span class="sxs-lookup"><span data-stu-id="0f12f-357">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="0f12f-358">這個屬性所執行的作業取決於有效的配置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-358">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="0f12f-359">如有必要，這個方法會嘗試自動重新產生有效的配置，再繼續作業。</span><span class="sxs-lookup"><span data-stu-id="0f12f-359">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="0f12f-360">重新產生配置可以是相當耗成本的作業。</span><span class="sxs-lookup"><span data-stu-id="0f12f-360">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="0f12f-361">使用<xref:System.Windows.Documents.TextPointer.HasValidLayout%2A>屬性來執行作業，可能會重新產生配置之前檢查有效的配置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-361">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="0f12f-362">如需詳細資訊，請參閱[配置](~/docs/framework/wpf/advanced/layout.md)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-362">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberSignature Language="F#" Value="member this.IsInSameDocument : System.Windows.Documents.TextPointer -&gt; bool" Usage="textPointer.IsInSameDocument textPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition"><span data-ttu-id="0f12f-363"><see cref="T:System.Windows.Documents.TextPointer" />，指定要與目前位置進行比較的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="0f12f-364">表示指定的位置是否與目前位置位於相同的文字容器中。</span><span class="sxs-lookup"><span data-stu-id="0f12f-364">Indicates whether the specified position is in the same text container as the current position.</span></span></summary>
        <returns><span data-ttu-id="0f12f-365">如果 <paramref name="textPosition" /> 指出與目前位置位於相同文字容器的位置則為 <see langword="true" />，否則為 <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-365"><see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-366">大部分的作業牽涉到多個<xref:System.Windows.Documents.TextPointer>執行個體才有效，如果有問題的執行個體表示相同的文字容器範圍中的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-366">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="0f12f-367">比方說<xref:System.Windows.Documents.TextPointer.CompareTo%2A>並<xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A>方法無法搭配<xref:System.Windows.Documents.TextPointer>到目前的位置與相關聯的文字容器外的位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-367">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="0f12f-368">使用這個方法來驗證指定<xref:System.Windows.Documents.TextPointer>適用於這類作業的目前位置。</span><span class="sxs-lookup"><span data-stu-id="0f12f-368">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f12f-369">下列範例會示範這個方法的用法。</span><span class="sxs-lookup"><span data-stu-id="0f12f-369">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="0f12f-370">此範例會使用<xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A>方法來檢查指定<xref:System.Windows.Documents.TextPointer>位於兩個其他指定<xref:System.Windows.Documents.TextPointer>中所有的三個位置都屬於相同的文字容器不保證的情況下的執行個體。</span><span class="sxs-lookup"><span data-stu-id="0f12f-370">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="0f12f-371"><paramref name="textPosition" /> 為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="0f12f-371"><paramref name="textPosition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalDirection : System.Windows.Documents.LogicalDirection" Usage="System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f12f-372">取得與目前位置相關的邏輯方向，這個邏輯方向用來釐清與目前位置相關的內容。</span><span class="sxs-lookup"><span data-stu-id="0f12f-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span></span></summary>
        <value><span data-ttu-id="0f12f-373">與目前位置相關的 <see cref="T:System.Windows.Documents.LogicalDirection" /> 值。</span><span class="sxs-lookup"><span data-stu-id="0f12f-373">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f12f-374">為了舉例說明如何使用這個屬性，<xref:System.Windows.Documents.LogicalDirection>的<xref:System.Windows.Documents.TextPointer>傳回點擊測試方法會提供兩個字元的文字之間叫用。</span><span class="sxs-lookup"><span data-stu-id="0f12f-374">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="0f12f-375">邏輯方向指定這兩個字元的實際點擊 — 左邊或右邊。</span><span class="sxs-lookup"><span data-stu-id="0f12f-375">The logical direction specifies which of the two characters was actually hit—the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraph : System.Windows.Documents.Paragraph" Usage="System.Windows.Documents.TextPointer.Paragraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f12f-376">取得涵蓋目前位置的段落 (如果有的話)。</span><span class="sxs-lookup"><span data-stu-id="0f12f-376">Gets the paragraph that scopes the current position, if any.</span></span></summary>
        <value><span data-ttu-id="0f12f-377"><see cref="T:System.Windows.Documents.Paragraph" />涵蓋目前位置，或<see langword="null" />如果沒有這類段落存在。</span><span class="sxs-lookup"><span data-stu-id="0f12f-377">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.Documents.TextPointer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="0f12f-378">取得涵蓋目前位置的邏輯父代。</span><span class="sxs-lookup"><span data-stu-id="0f12f-378">Gets the logical parent that scopes the current position.</span></span></summary>
        <value><span data-ttu-id="0f12f-379">涵蓋目前位置的邏輯父代。</span><span class="sxs-lookup"><span data-stu-id="0f12f-379">The logical parent that scopes the current position.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textPointer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0f12f-380">這個類型或成員支援 [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] 基礎結構，而且不能從程式碼直接使用。</span><span class="sxs-lookup"><span data-stu-id="0f12f-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="0f12f-381">表示物件的字串。</span><span class="sxs-lookup"><span data-stu-id="0f12f-381">The string that represents the object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>