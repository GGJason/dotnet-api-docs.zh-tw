<Type Name="FixedDocument" FullName="System.Windows.Documents.FixedDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="04e0f4c927b4a68ed1fbda7e8e9892f96aeedd89" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53500563" /></Metadata><TypeSignature Language="C#" Value="public class FixedDocument : System.Windows.FrameworkContentElement, IServiceProvider, System.Windows.Documents.IDocumentPaginatorSource, System.Windows.Markup.IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FixedDocument extends System.Windows.FrameworkContentElement implements class System.IServiceProvider, class System.Windows.Documents.IDocumentPaginatorSource, class System.Windows.Markup.IAddChild, class System.Windows.Markup.IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.FixedDocument" />
  <TypeSignature Language="VB.NET" Value="Public Class FixedDocument&#xA;Inherits FrameworkContentElement&#xA;Implements IDocumentPaginatorSource, IServiceProvider, IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class FixedDocument : System::Windows::FrameworkContentElement, IServiceProvider, System::Windows::Documents::IDocumentPaginatorSource, System::Windows::Markup::IUriContext" />
  <TypeSignature Language="F#" Value="type FixedDocument = class&#xA;    inherit FrameworkContentElement&#xA;    interface IDocumentPaginatorSource&#xA;    interface IAddChild&#xA;    interface IServiceProvider&#xA;    interface IUriContext" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkContentElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Documents.IDocumentPaginatorSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IUriContext</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Pages")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b7f89-101">裝載可攜式、高精確度的固定格式文件，具有使用者文字選取範圍、鍵盤巡覽和搜尋的讀取權限。</span><span class="sxs-lookup"><span data-stu-id="b7f89-101">Hosts a portable, high fidelity, fixed-format document with read access for user text selection, keyboard navigation, and search.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7f89-102"><xref:System.Windows.Documents.FixedDocument> 以邏輯方式將繫結已排序的頁面一起成單一、 多重頁面、 固定配置文件。</span><span class="sxs-lookup"><span data-stu-id="b7f89-102"><xref:System.Windows.Documents.FixedDocument> logically binds an ordered sequence of pages together into a single, multi-page, fixed-layout document.</span></span>  
  
 <span data-ttu-id="b7f89-103"><xref:System.Windows.Documents.PageContent> 是唯一允許的子元素<xref:System.Windows.Documents.FixedDocument>項目。</span><span class="sxs-lookup"><span data-stu-id="b7f89-103"><xref:System.Windows.Documents.PageContent> is the only allowable child element of the <xref:System.Windows.Documents.FixedDocument> element.</span></span>  <span data-ttu-id="b7f89-104">每個<xref:System.Windows.Documents.PageContent>項目參考的單一頁面內容的來源。</span><span class="sxs-lookup"><span data-stu-id="b7f89-104">Each <xref:System.Windows.Documents.PageContent> element refers to the source of the content for a single page.</span></span> <span data-ttu-id="b7f89-105"><xref:System.Windows.Documents.PageContent> 項目必須是連續的標記順序，比對文件的頁面順序。</span><span class="sxs-lookup"><span data-stu-id="b7f89-105"><xref:System.Windows.Documents.PageContent> elements must be in sequential markup order, matching the page order of the document.</span></span>  
  
 <span data-ttu-id="b7f89-106"><xref:System.Windows.Documents.FixedDocument> 專為[!INCLUDE[TLA#tla_wys](~/includes/tlasharptla-wys-md.md)]文件版面配置中已定義，但呈現到最高精確度的顯示器或列印裝置的應用程式所控制的應用程式。</span><span class="sxs-lookup"><span data-stu-id="b7f89-106"><xref:System.Windows.Documents.FixedDocument> is designed for [!INCLUDE[TLA#tla_wys](~/includes/tlasharptla-wys-md.md)] applications where the document layout is defined and controlled by the application for rendering to the highest accuracy of the display or print device.</span></span>  
  
 <span data-ttu-id="b7f89-107"><xref:System.Windows.Documents.FlowDocument>相反地，設計來最大化使用者便於閱讀，並動態調整 根據使用者喜好設定 （例如，使用者所選類型的大小或字型） 和其他變數，例如顯示大小和解析度的文件版面配置。</span><span class="sxs-lookup"><span data-stu-id="b7f89-107"><xref:System.Windows.Documents.FlowDocument>, on the other hand, is designed to maximize user readability, and dynamically adjusts the document layout based on user preferences (for example, a user-chosen type size or font) and other variables, such as display size and resolution.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.FlowDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FixedDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocument.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FixedDocument();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7f89-108">初始化 <see cref="T:System.Windows.Documents.FixedDocument" /> 類別的新執行個體。</span><span class="sxs-lookup"><span data-stu-id="b7f89-108">Initializes a new instance of the <see cref="T:System.Windows.Documents.FixedDocument" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b7f89-109">下列範例示範使用**FixedDocument**建構函式。</span><span class="sxs-lookup"><span data-stu-id="b7f89-109">The following example shows use of the **FixedDocument** constructor.</span></span>  
  
 [!code-csharp[XpsSave#CreateFixedDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpfContent.cs#createfixeddocument)]
 [!code-vb[XpsSave#CreateFixedDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpfcontent.vb#createfixeddocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentPaginator">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.DocumentPaginator DocumentPaginator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.DocumentPaginator DocumentPaginator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocument.DocumentPaginator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentPaginator As DocumentPaginator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::DocumentPaginator ^ DocumentPaginator { System::Windows::Documents::DocumentPaginator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentPaginator : System.Windows.Documents.DocumentPaginator" Usage="System.Windows.Documents.FixedDocument.DocumentPaginator" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.IDocumentPaginatorSource.DocumentPaginator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.DocumentPaginator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7f89-110">取得 <see cref="T:System.Windows.Documents.FixedDocument" /> 的分頁符號，此分頁符號提供分頁導向服務，例如取得特定頁面及重新分頁以回應變更。</span><span class="sxs-lookup"><span data-stu-id="b7f89-110">Gets the paginator for the <see cref="T:System.Windows.Documents.FixedDocument" /> that provides page-oriented services such as getting a particular page and repaginating in response to changes.</span></span></summary>
        <value><span data-ttu-id="b7f89-111">衍生自 <see cref="T:System.Windows.Documents.DocumentPaginator" /> 類別的物件，提供分頁服務。</span><span class="sxs-lookup"><span data-stu-id="b7f89-111">An object of a class derived from <see cref="T:System.Windows.Documents.DocumentPaginator" /> that provides pagination services.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7f89-112">如果您需要以回應變更，例如新增文件內容中的自動分頁的分頁符號衍生的類別<xref:System.Windows.Documents.DynamicDocumentPaginator>哪些本身是繼承自<xref:System.Windows.Documents.DocumentPaginator>。</span><span class="sxs-lookup"><span data-stu-id="b7f89-112">If you need a paginator with automatic repagination in responses to changes, such as adding content to the document, derive a class from <xref:System.Windows.Documents.DynamicDocumentPaginator> which itself inherits from <xref:System.Windows.Documents.DocumentPaginator>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b7f89-113">下列範例示範如何建立<xref:System.Windows.Documents.FixedDocument>具有特定的頁面大小設定分頁符號。</span><span class="sxs-lookup"><span data-stu-id="b7f89-113">The following example shows how to create a <xref:System.Windows.Documents.FixedDocument> that has a paginator configured for a particular page size.</span></span>  
  
 [!code-csharp[XpsPrint#CreateFixedDocumentWithConfiguredPaginator](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsPrint/CSharp/WpfContent.cs#createfixeddocumentwithconfiguredpaginator)]
 [!code-vb[XpsPrint#CreateFixedDocumentWithConfiguredPaginator](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsPrint/visualbasic/wpfcontent.vb#createfixeddocumentwithconfiguredpaginator)]  
  
 <span data-ttu-id="b7f89-114">下列範例也會示範使用<xref:System.Windows.Documents.FixedDocument.DocumentPaginator%2A>屬性。</span><span class="sxs-lookup"><span data-stu-id="b7f89-114">The following example also shows use of the <xref:System.Windows.Documents.FixedDocument.DocumentPaginator%2A> property.</span></span>  
  
 [!code-csharp[XpsSave#CreateFixedDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/XpsSave/CSharp/XpfContent.cs#createfixeddocument)]
 [!code-vb[XpsSave#CreateFixedDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/XpsSave/visualbasic/xpfcontent.vb#createfixeddocument)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocument.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Documents.FixedDocument.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7f89-115">取得列舉值，用於存取文件的 <see cref="T:System.Windows.Documents.PageContent" /> 子項目。</span><span class="sxs-lookup"><span data-stu-id="b7f89-115">Gets an enumerator for accessing the document's <see cref="T:System.Windows.Documents.PageContent" /> child elements.</span></span></summary>
        <value><span data-ttu-id="b7f89-116">列舉值，用於存取文件的 <see cref="T:System.Windows.Documents.PageContent" /> 子項目。</span><span class="sxs-lookup"><span data-stu-id="b7f89-116">An enumerator for accessing the document's <see cref="T:System.Windows.Documents.PageContent" /> child elements.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocument.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="fixedDocument.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b7f89-117">建立文件的自動對等。</span><span class="sxs-lookup"><span data-stu-id="b7f89-117">Creates an automation peer for the document.</span></span></summary>
        <returns><span data-ttu-id="b7f89-118"><see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />，向 Microsoft UI Automation 公開 <see cref="T:System.Windows.Documents.FixedDocument" />。</span><span class="sxs-lookup"><span data-stu-id="b7f89-118">A <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" /> that exposes the <see cref="T:System.Windows.Documents.FixedDocument" /> to Microsoft UI Automation.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b7f89-119">您的衍生的版本可以傳回任何<see cref="T:System.Windows.Automation.Peers.AutomationPeer" />，它不一定要<see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />。</span><span class="sxs-lookup"><span data-stu-id="b7f89-119">Your derived version can return any <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />, it does not have to be a <see cref="T:System.Windows.Automation.Peers.DocumentAutomationPeer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Pages">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.PageContentCollection Pages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.PageContentCollection Pages" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocument.Pages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pages As PageContentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::PageContentCollection ^ Pages { System::Windows::Documents::PageContentCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pages : System.Windows.Documents.PageContentCollection" Usage="System.Windows.Documents.FixedDocument.Pages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.PageContentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7f89-120">取得文件之 <see cref="T:System.Windows.Documents.PageContent" /> 項目的集合。</span><span class="sxs-lookup"><span data-stu-id="b7f89-120">Gets a collection of the document's <see cref="T:System.Windows.Documents.PageContent" /> elements.</span></span></summary>
        <value><span data-ttu-id="b7f89-121">文件之 <see cref="T:System.Windows.Documents.PageContent" /> 項目的集合。</span><span class="sxs-lookup"><span data-stu-id="b7f89-121">A collection of the document's <see cref="T:System.Windows.Documents.PageContent" /> elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.FixedDocument.LogicalChildren" />
      </Docs>
    </Member>
    <Member MemberName="PrintTicket">
      <MemberSignature Language="C#" Value="public object PrintTicket { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object PrintTicket" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocument.PrintTicket" />
      <MemberSignature Language="VB.NET" Value="Public Property PrintTicket As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ PrintTicket { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PrintTicket : obj with get, set" Usage="System.Windows.Documents.FixedDocument.PrintTicket" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7f89-122">取得或設定與此文件關聯的 <see cref="T:System.Printing.PrintTicket" />。</span><span class="sxs-lookup"><span data-stu-id="b7f89-122">Gets or sets the <see cref="T:System.Printing.PrintTicket" /> that is associated with this document.</span></span></summary>
        <value><span data-ttu-id="b7f89-123">此文件的 <see cref="T:System.Printing.PrintTicket" />。</span><span class="sxs-lookup"><span data-stu-id="b7f89-123">The <see cref="T:System.Printing.PrintTicket" /> for this document.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7f89-124">A<xref:System.Printing.PrintTicket>包含列印的資訊，例如是否要每張紙張的雙面列印。</span><span class="sxs-lookup"><span data-stu-id="b7f89-124">A <xref:System.Printing.PrintTicket> contains printing information such as whether to print on both sides of each sheet.</span></span>  
  
 <span data-ttu-id="b7f89-125">設定這個 <xref:System.Windows.Documents.FixedDocument.PrintTicket%2A> 屬性不會驗證或修改特定 <xref:System.Printing.PrintTicket> 的指定 <xref:System.Printing.PrintQueue>。</span><span class="sxs-lookup"><span data-stu-id="b7f89-125">Setting this <xref:System.Windows.Documents.FixedDocument.PrintTicket%2A> property does not validate or modify the specified <xref:System.Printing.PrintTicket> for a particular <xref:System.Printing.PrintQueue>.</span></span>  <span data-ttu-id="b7f89-126">如有需要，請使用 <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> 方法建立對指定的印表機有效的 <xref:System.Printing.PrintQueue> 專用 <xref:System.Printing.PrintTicket>。</span><span class="sxs-lookup"><span data-stu-id="b7f89-126">If needed, use the <xref:System.Printing.PrintQueue.MergeAndValidatePrintTicket%2A> method to create a <xref:System.Printing.PrintQueue>-specific <xref:System.Printing.PrintTicket> that is valid for a given printer.</span></span>  
  
<a name="dependencyPropertyInfo_PrintTicket"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b7f89-127">相依性屬性資訊</span><span class="sxs-lookup"><span data-stu-id="b7f89-127">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b7f89-128">識別項欄位</span><span class="sxs-lookup"><span data-stu-id="b7f89-128">Identifier field</span></span>|<xref:System.Windows.Documents.FixedDocument.PrintTicketProperty>|  
|<span data-ttu-id="b7f89-129">若要設定的中繼資料屬性 `true`</span><span class="sxs-lookup"><span data-stu-id="b7f89-129">Metadata properties set to `true`</span></span>|<span data-ttu-id="b7f89-130">無</span><span class="sxs-lookup"><span data-stu-id="b7f89-130">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintTicketProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PrintTicketProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PrintTicketProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.FixedDocument.PrintTicketProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PrintTicketProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PrintTicketProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PrintTicketProperty : System.Windows.DependencyProperty" Usage="System.Windows.Documents.FixedDocument.PrintTicketProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7f89-131">識別 <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> 相依性屬性。</span><span class="sxs-lookup"><span data-stu-id="b7f89-131">Identifies the <see cref="P:System.Windows.Documents.FixedDocument.PrintTicket" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IServiceProvider.GetService">
      <MemberSignature Language="C#" Value="object IServiceProvider.GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IServiceProvider.GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocument.System#IServiceProvider#GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Function GetService (serviceType As Type) As Object Implements IServiceProvider.GetService" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IServiceProvider.GetService(Type ^ serviceType) = IServiceProvider::GetService;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="b7f89-132">物件，指定要取得的服務物件類型。</span><span class="sxs-lookup"><span data-stu-id="b7f89-132">An object that specifies the type of service object to get.</span></span></param>
        <summary><span data-ttu-id="b7f89-133">取得指定類型的服務物件。</span><span class="sxs-lookup"><span data-stu-id="b7f89-133">Gets the service object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="b7f89-134">型別 <paramref name="serviceType" /> 的服務物件。</span><span class="sxs-lookup"><span data-stu-id="b7f89-134">A service object of type <paramref name="serviceType" />.</span></span>  
  
<span data-ttu-id="b7f89-135">-或-</span><span class="sxs-lookup"><span data-stu-id="b7f89-135">-or-</span></span> 
 <span data-ttu-id="b7f89-136">如果沒有 <paramref name="serviceType" /> 類型的服務物件，則為 <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b7f89-136"><see langword="null" /> if there is no service object of type <paramref name="serviceType" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b7f89-137">要加入的子物件。</span><span class="sxs-lookup"><span data-stu-id="b7f89-137">The child object to add.</span></span></param>
        <summary><span data-ttu-id="b7f89-138">加入子物件。</span><span class="sxs-lookup"><span data-stu-id="b7f89-138">Adds a child object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.FixedDocument.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="b7f89-139">要加入物件中的文字。</span><span class="sxs-lookup"><span data-stu-id="b7f89-139">The text to add to the object.</span></span></param>
        <summary><span data-ttu-id="b7f89-140">將節點的文字內容加入物件中。</span><span class="sxs-lookup"><span data-stu-id="b7f89-140">Adds the text content of a node to the object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IUriContext.BaseUri">
      <MemberSignature Language="C#" Value="Uri System.Windows.Markup.IUriContext.BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.FixedDocument.System#Windows#Markup#IUriContext#BaseUri" />
      <MemberSignature Language="VB.NET" Value=" Property BaseUri As Uri Implements IUriContext.BaseUri" />
      <MemberSignature Language="C++ CLI" Value="property Uri ^ System::Windows::Markup::IUriContext::BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Markup.IUriContext.BaseUri" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IUriContext.BaseUri</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7f89-141">取得或設定目前應用程式內容的基底 URI。</span><span class="sxs-lookup"><span data-stu-id="b7f89-141">Gets or sets the base URI of the current application context.</span></span></summary>
        <value><span data-ttu-id="b7f89-142">應用程式內容的基底 URI。</span><span class="sxs-lookup"><span data-stu-id="b7f89-142">The base URI of the application context.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>