<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata><Meta Name="ms.openlocfilehash" Value="84b5572cf9ba0ae76ee1c5c3bb7375f8ce499c04" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37521563" /></Metadata><TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c4d5e-101">提供一組標準的編輯相關命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-101">Provides a standard set of editing related commands.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-102">下表顯示編輯命令及相關聯的預設主要筆勢 (使用索引鍵的名稱，從<xref:System.Windows.Input.Key>和<xref:System.Windows.Input.ModifierKeys>列舉型別)。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="c4d5e-103">編輯命令</span><span class="sxs-lookup"><span data-stu-id="c4d5e-103">Editing command</span></span>|<span data-ttu-id="c4d5e-104">預設按鍵動作</span><span class="sxs-lookup"><span data-stu-id="c4d5e-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="c4d5e-105">沒有預設按鍵動作</span><span class="sxs-lookup"><span data-stu-id="c4d5e-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="c4d5e-106">沒有預設按鍵動作</span><span class="sxs-lookup"><span data-stu-id="c4d5e-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="c4d5e-107">插入號移動命令和選取項目展開命令共用一組通用的預設主要筆勢，一般的差異在於新增<xref:System.Windows.Input.ModifierKeys.Shift>區別插入號移動命令中的選取範圍命令的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="c4d5e-108">例如，<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>命令有的預設按鍵動作<xref:System.Windows.Input.Key.Left>，和對應<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>命令有的預設按鍵動作<xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="c4d5e-109">所提供的命令定義的一般情況下，<xref:System.Windows.Documents.EditingCommands>類別並不會讓使用命令參數 (`parameter`參數所預期<xref:System.Windows.Input.ICommand.Execute%2A>方法)。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="c4d5e-110">如需有關命令和命令的詳細資訊，請參閱 <<c0> [ 輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-111">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-112">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-113">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-114">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-115">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-116">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-117">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-118">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-119">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> 命令，這個命令會要求目前的段落或選取的段落置中。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span></span></summary>
        <value><span data-ttu-id="c4d5e-120">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-120">The requested command.</span></span>  <span data-ttu-id="c4d5e-121">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="E" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-122">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c4d5e-123">部分選取的段落 （包括段落中有插入號的空選取範圍） 中的內容，叫用此命令時，才會將要求的效果套用到整個段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c4d5e-124">如果此命令會叫用在橫跨多個段落的選取範圍上，選取範圍內每個段落的整個內容套用效果。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c4d5e-125">下圖顯示置中的內容的範例。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="c4d5e-126">![螢幕擷取畫面： TextAlign 屬性值為 Center](~/add/media/flowdoc-textalign-center.png "螢幕擷取畫面： TextAlign 屬性值為 Center")</span><span class="sxs-lookup"><span data-stu-id="c4d5e-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="c4d5e-127">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-128">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-129">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-130">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-131">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-132">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-133">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-134">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-135">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-136">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-137">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> 命令，這個命令會要求目前的段落或選取的段落對齊。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span></span></summary>
        <value><span data-ttu-id="c4d5e-138">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-138">The requested command.</span></span>  <span data-ttu-id="c4d5e-139">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="J" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-140">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c4d5e-141">部分選取的段落 （包括段落中有插入號的空選取範圍） 中的內容，叫用此命令時，才會將要求的效果套用到整個段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c4d5e-142">如果此命令會在橫跨多個段落的選取範圍上叫用，效果會套用選取範圍中的所有段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="c4d5e-143">當內容對齊時，內每一行的內容的水平間距會調整，使左右對齊的線的等於或接近相等的寬度。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="c4d5e-144">內容通常是內容的側邊建立平滑的邊緣對齊。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="c4d5e-145">通常很短於其餘部分，因為在段落中的最後一行會維持在對齊，直到此命令會叫用。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="c4d5e-146">下圖顯示對齊 （靠左對齊） 的內容。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="c4d5e-147">![螢幕擷取畫面： 內容尚未對齊](~/add/media/content-unjustified.png "螢幕擷取畫面： 內容尚未對齊")</span><span class="sxs-lookup"><span data-stu-id="c4d5e-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="c4d5e-148">下圖顯示相同的內容之後已右對齊。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="c4d5e-149">![螢幕擷取畫面的內容對齊文字](~/add/media/content-justified.png "螢幕擷取畫面的內容對齊文字")</span><span class="sxs-lookup"><span data-stu-id="c4d5e-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="c4d5e-150">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-151">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-152">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-153">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-154">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-155">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-156">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-157">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-158">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-159">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-160">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-161">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> 命令，這個命令會要求內容的選取範圍靠左對齊。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span></span></summary>
        <value><span data-ttu-id="c4d5e-162">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-162">The requested command.</span></span>  <span data-ttu-id="c4d5e-163">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="L" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-164">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c4d5e-165">部分選取的段落 （包括段落中有插入號的空選取範圍） 中的內容，叫用此命令時，才會將要求的效果套用到整個段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c4d5e-166">如果此命令會叫用在橫跨多個段落的選取範圍上，選取範圍內每個段落的整個內容套用效果。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c4d5e-167">下圖顯示為靠左對齊內容的範例。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="c4d5e-168">![螢幕擷取畫面： TextAlign 屬性值為 Left](~/add/media/flowdoc-textalign-left.png "螢幕擷取畫面： TextAlign 屬性值為 Left")</span><span class="sxs-lookup"><span data-stu-id="c4d5e-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="c4d5e-169">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-170">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-171">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-172">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-173">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-174">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-175">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-176">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-177">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-178">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-179">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-180">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> 命令，這個命令會要求內容的選取範圍靠右對齊。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span></span></summary>
        <value><span data-ttu-id="c4d5e-181">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-181">The requested command.</span></span>  <span data-ttu-id="c4d5e-182">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="R" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-183">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c4d5e-184">部分選取的段落 （包括段落中有插入號的空選取範圍） 中的內容，叫用此命令時，才會將要求的效果套用到整個段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c4d5e-185">如果此命令會叫用在橫跨多個段落的選取範圍上，選取範圍內每個段落的整個內容套用效果。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c4d5e-186">下圖顯示為靠右對齊內容的範例。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="c4d5e-187">![螢幕擷取畫面： 權限的 TextAlign 值](~/add/media/flowdoc-textalign-right.png "螢幕擷取畫面： TextAlign 值為 Right")</span><span class="sxs-lookup"><span data-stu-id="c4d5e-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="c4d5e-188">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-189">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-190">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-191">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-192">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-193">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-194">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-195">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-196">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-197">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-198">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-199">表示 <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> 命令，這個命令會要求在目前位置或目前選取範圍上輸入退格鍵。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="c4d5e-200">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-200">The requested command.</span></span>  <span data-ttu-id="c4d5e-201">這個命令的預設主要筆勢是 <see langword="Backspace" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-201">The default key gesture for this command is <see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-202">當空的選取項目上叫用，則此命令會刪除之前插入號字元或段落分隔符號。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="c4d5e-203">當叫用非空白的選取項目，此命令會刪除選取項目。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="c4d5e-204">此命令會保留已刪除的選取範圍，在叫用此命令之後立即插入相同的位置的內容中的任何格式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="c4d5e-205">與相反<xref:System.Windows.Documents.EditingCommands.Delete%2A>命令，不會保留舊的格式設定。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="c4d5e-206">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-207">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-208">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-209">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-210">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-211">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-212">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-213">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-214">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-215">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-216">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-217">表示 <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> 命令，這個命令會要求更正目前位置上任何拼錯的字。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span></span></summary>
        <value><span data-ttu-id="c4d5e-218">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-218">The requested command.</span></span>  <span data-ttu-id="c4d5e-219">這個命令沒有預設按鍵動作。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-219">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-220">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-221">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-222">表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> 命令，這個命令會要求目前選取範圍的字型大小縮少 1 點。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span></span></summary>
        <value><span data-ttu-id="c4d5e-223">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-223">The requested command.</span></span>  <span data-ttu-id="c4d5e-224">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="OemOpenBrackets" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-225">在單字內有插入號的空白選取範圍上叫用此命令時，才會自動會將命令套用至整個字展開選取項目。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="c4d5e-226">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-227">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-228">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-229">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-230">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-231">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-232">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-233">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-234">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-235">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-236">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-237">表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> 命令，這個命令會要求目前段落的縮排減少一個定位停駐點。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="c4d5e-238">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-238">The requested command.</span></span>  <span data-ttu-id="c4d5e-239">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-240">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-241">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4d5e-242">此命令會有不會影響文字項目，除非<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>的文字項目的屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-243">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-244">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-245">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-246">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-247">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-248">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-249">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-250">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-251">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-252">表示 <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> 命令，這個命令會要求刪除目前的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span></span></summary>
        <value><span data-ttu-id="c4d5e-253">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-253">The requested command.</span></span>  <span data-ttu-id="c4d5e-254">這個命令的預設主要筆勢是 <see langword="Delete" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-254">The default key gesture for this command is <see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-255">此命令會捨棄已刪除的選取範圍中的任何格式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="c4d5e-256">與相反<xref:System.Windows.Documents.EditingCommands.Backspace%2A>命令時，它會保留已刪除的選取範圍，在叫用此命令之後立即插入相同的位置的內容中的任何格式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="c4d5e-257">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-258">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-259">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-260">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-261">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-262">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-263">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-264">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-265">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-266">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-267">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-268">表示 <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> 命令，這個命令會要求刪除下一個字 (相對於目前位置)。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="c4d5e-269">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-269">The requested command.</span></span>  <span data-ttu-id="c4d5e-270">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Delete" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-271">插入號是否在單字內，則會刪除之間目前的位置和字尾的字的其餘部分。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="c4d5e-272">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-273">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-274">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-275">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-276">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-277">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-278">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-279">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-280">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-281">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-282">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-283">表示 <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> 命令，這個命令會要求刪除前一個字 (相對於目前位置)。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="c4d5e-284">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-284">The requested command.</span></span>  <span data-ttu-id="c4d5e-285">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Backspace" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-286">插入號是否在單字內，則會刪除目前的位置與該字的開頭之間的單字的其餘部分。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="c4d5e-287">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-288">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-289">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-290">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-291">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-292">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-293">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-294">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-295">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-296">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-297">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-298">表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> 命令，這個命令會要求在目前位置或目前選取範圍上插入分行符號。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="c4d5e-299">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-299">The requested command.</span></span>  <span data-ttu-id="c4d5e-300">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Enter" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-301">支援非固定格式內容，例如的編輯器<xref:System.Windows.Controls.RichTextBox>，這個命令會導致<xref:System.Windows.Documents.LineBreak>目前位置插入的項目。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="c4d5e-302">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-303">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-304">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-305">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-306">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-307">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-308">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-309">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-310">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-311">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-312">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-313">表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> 命令，這個命令會要求在目前位置或目前選取範圍上插入分段符號。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="c4d5e-314">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-314">The requested command.</span></span>  <span data-ttu-id="c4d5e-315">這個命令的預設主要筆勢是 <see langword="Enter" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-315">The default key gesture for this command is <see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-316">此命令相當於使用者按下 ENTER 鍵。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="c4d5e-317">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-318">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>並<xref:System.Windows.Controls.TextBox>(當<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A>屬性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4d5e-319">此命令會有不會影響文字項目，除非<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A>的文字項目的屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-320">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-321">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-322">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-323">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-324">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-325">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-326">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-327">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-328">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-329">表示 <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> 命令，這個命令會要求忽略任何在目前位置或目前選取範圍中有拼錯字的項目。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span></span></summary>
        <value><span data-ttu-id="c4d5e-330">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-330">The requested command.</span></span>  <span data-ttu-id="c4d5e-331">這個命令沒有預設按鍵動作。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-331">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-332">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-333">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-334">表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> 命令，這個命令會要求目前選取範圍的字型大小增加 1 點。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span></span></summary>
        <value><span data-ttu-id="c4d5e-335">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-335">The requested command.</span></span>  <span data-ttu-id="c4d5e-336">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="OemCloseBrackets" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-337">如果此命令會叫用在單字內有插入號的空白選取範圍上，選取項目會展開將命令套用至整個字。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="c4d5e-338">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-339">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-340">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-341">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-342">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-343">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-344">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-345">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-346">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-347">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-348">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-349">表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> 命令，這個命令會要求目前段落的縮排增加一個定位停駐點。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="c4d5e-350">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-350">The requested command.</span></span>  <span data-ttu-id="c4d5e-351">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="T" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-352">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-353">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c4d5e-354">此命令會有不會影響文字項目，除非<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>的文字項目的屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-355">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-356">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-357">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-358">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-359">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-360">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-361">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-362">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-363">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-364">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> 命令，這個命令會要求插入號下移一行。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span></span></summary>
        <value><span data-ttu-id="c4d5e-365">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-365">The requested command.</span></span>  <span data-ttu-id="c4d5e-366">這個命令的預設主要筆勢是 <see langword="Down" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-366">The default key gesture for this command is <see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-367">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-368">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-369">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-370">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-371">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-372">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-373">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-374">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-375">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-376">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-377">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-378">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> 命令，這個命令會要求插入號下移一頁。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span></span></summary>
        <value><span data-ttu-id="c4d5e-379">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-379">The requested command.</span></span>  <span data-ttu-id="c4d5e-380">這個命令的預設主要筆勢是 <see langword="PageDown" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-380">The default key gesture for this command is <see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-381">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-382">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-383">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-384">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-385">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-386">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-387">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-388">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-389">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-390">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-391">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-392">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> 命令，這個命令會要求插入號下移一個段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="c4d5e-393">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-393">The requested command.</span></span>  <span data-ttu-id="c4d5e-394">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Down" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-395">此命令會將插入號下一個段落的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="c4d5e-396">此命令的行為類似<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>上叫用時<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="c4d5e-397">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-398">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-399">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-400">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-401">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-402">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-403">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-404">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-405">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-406">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-407">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-408">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> 命令，這個命令會要求插入號左移一個字元。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span></span></summary>
        <value><span data-ttu-id="c4d5e-409">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-409">The requested command.</span></span>  <span data-ttu-id="c4d5e-410">這個命令的預設主要筆勢是 <see langword="Left" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-410">The default key gesture for this command is <see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-411">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-412">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-413">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-414">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-415">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-416">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-417">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-418">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-419">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-420">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-421">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-422">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> 命令，這個命令會要求插入號左移一個字。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span></span></summary>
        <value><span data-ttu-id="c4d5e-423">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-423">The requested command.</span></span>  <span data-ttu-id="c4d5e-424">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Left" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-425">插入號是否在單字內，此命令會將插入號移至該文字的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="c4d5e-426">否則，此命令會將插入號移至前一個字組的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="c4d5e-427">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-428">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-429">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-430">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-431">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-432">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-433">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-434">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-435">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-436">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-437">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-438">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> 命令，這個命令會要求插入號右移一個字元。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span></span></summary>
        <value><span data-ttu-id="c4d5e-439">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-439">The requested command.</span></span>  <span data-ttu-id="c4d5e-440">這個命令的預設主要筆勢是 <see langword="Right" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-440">The default key gesture for this command is <see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-441">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-442">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-443">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-444">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-445">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-446">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-447">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-448">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-449">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-450">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-451">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-452">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> 命令，這個命令會要求插入號右移一個字。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span></span></summary>
        <value><span data-ttu-id="c4d5e-453">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-453">The requested command.</span></span>  <span data-ttu-id="c4d5e-454">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Right" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-455">插入號是否在單字內，此命令會將插入號移至該文字的結尾。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="c4d5e-456">否則，此命令會將插入號移至下個字組的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="c4d5e-457">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-458">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-459">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-460">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-461">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-462">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-463">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-464">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-465">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-466">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-467">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-468">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> 命令，這個命令會要求插入號移至內容的最尾端。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span></span></summary>
        <value><span data-ttu-id="c4d5e-469">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-469">The requested command.</span></span>  <span data-ttu-id="c4d5e-470">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-471">A*文字容器*是 form 內容手邊的 ultimate 框線的項目。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c4d5e-472"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文字容器的範例。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c4d5e-473">共同文字容器內所包含的內容指*文件*。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c4d5e-474">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-475">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-476">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-477">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-478">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-479">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-480">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-481">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-482">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-483">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-484">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-485">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> 命令，這個命令會要求插入號移至內容的最開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="c4d5e-486">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-486">The requested command.</span></span>  <span data-ttu-id="c4d5e-487">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Home" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-488">A*文字容器*是 form 內容手邊的 ultimate 框線的項目。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c4d5e-489"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文字容器的範例。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c4d5e-490">共同文字容器內所包含的內容指*文件*。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c4d5e-491">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-492">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-493">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-494">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-495">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-496">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-497">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-498">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-499">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-500">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-501">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-502">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> 命令，這個命令會要求插入號移至目前這行的結尾。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="c4d5e-503">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-503">The requested command.</span></span>  <span data-ttu-id="c4d5e-504">這個命令的預設主要筆勢是 <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-504">The default key gesture for this command is <see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-505">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-506">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-507">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-508">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-509">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-510">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-511">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-512">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-513">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-514">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-515">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-516">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> 命令，這個命令會要求插入號移至目前這行的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="c4d5e-517">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-517">The requested command.</span></span>  <span data-ttu-id="c4d5e-518">這個命令的預設主要筆勢是 <see langword="Home" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-518">The default key gesture for this command is <see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-519">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-520">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-521">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-522">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-523">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-524">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-525">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-526">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-527">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-528">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-529">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-530">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> 命令，這個命令會要求插入號上移一行。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span></span></summary>
        <value><span data-ttu-id="c4d5e-531">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-531">The requested command.</span></span>  <span data-ttu-id="c4d5e-532">這個命令的預設主要筆勢是 <see langword="Up" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-532">The default key gesture for this command is <see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-533">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-534">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-535">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-536">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-537">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-538">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-539">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-540">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-541">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-542">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-543">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-544">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> 命令，這個命令會要求插入號上移一頁。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span></span></summary>
        <value><span data-ttu-id="c4d5e-545">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-545">The requested command.</span></span>  <span data-ttu-id="c4d5e-546">這個命令的預設主要筆勢是 <see langword="PageUp" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-546">The default key gesture for this command is <see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-547">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-548">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-549">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-550">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-551">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-552">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-553">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-554">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-555">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-556">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-557">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-558">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> 命令，這個命令會要求插入號上移一個段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="c4d5e-559">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-559">The requested command.</span></span>  <span data-ttu-id="c4d5e-560">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Up" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-561">此命令會將插入號下一個段落的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="c4d5e-562">此命令的行為類似<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>上叫用時<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="c4d5e-563">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-564">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-565">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-566">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-567">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-568">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-569">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-570">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-571">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-572">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-573">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-574">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> 命令，這個命令會要求目前的選取範圍向下擴展一行。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span></span></summary>
        <value><span data-ttu-id="c4d5e-575">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-575">The requested command.</span></span>  <span data-ttu-id="c4d5e-576">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Down" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-577">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-578">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-579">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-580">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-581">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-582">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-583">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-584">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-585">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-586">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-587">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-588">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> 命令，這個命令會要求目前的選取範圍向下擴展一頁。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span></span></summary>
        <value><span data-ttu-id="c4d5e-589">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-589">The requested command.</span></span>  <span data-ttu-id="c4d5e-590">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="PageDown" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-591">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-592">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-593">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-594">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-595">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-596">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-597">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-598">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-599">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-600">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-601">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-602">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> 命令，這個命令會要求目前的選取範圍向下擴展一個段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="c4d5e-603">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-603">The requested command.</span></span>  <span data-ttu-id="c4d5e-604">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-605">這個命令會將選取範圍擴展至下一個段落的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="c4d5e-606">否則，這個命令會選取範圍擴展至目前的段落結尾。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="c4d5e-607">展開選取範圍包含標示的段落結尾分段符號。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="c4d5e-608">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-609">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-610">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-611">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-612">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-613">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-614">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-615">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-616">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-617">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-618">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-619">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> 命令，這個命令會要求目前的選取範圍向左擴展一個字元。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span></span></summary>
        <value><span data-ttu-id="c4d5e-620">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-620">The requested command.</span></span>  <span data-ttu-id="c4d5e-621">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Left" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-622">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-623">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-624">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-625">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-626">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-627">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-628">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-629">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-630">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-631">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-632">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-633">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> 命令，這個命令會要求目前的選取範圍向左擴展一個字。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span></span></summary>
        <value><span data-ttu-id="c4d5e-634">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-634">The requested command.</span></span>  <span data-ttu-id="c4d5e-635">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-636">插入號是否在單字內，此命令就會展開選取範圍以該文字的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="c4d5e-637">否則這個命令會選取範圍擴展至前一個字組的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="c4d5e-638">展開的選取範圍不包含文字分隔字元。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="c4d5e-639">與相反<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>，其中包含文字分隔字元在展開的選取範圍中。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="c4d5e-640">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-641">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-642">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-643">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-644">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-645">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-646">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-647">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-648">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-649">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-650">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-651">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> 命令，這個命令會要求目前的選取範圍向右擴展一個字元。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span></span></summary>
        <value><span data-ttu-id="c4d5e-652">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-652">The requested command.</span></span>  <span data-ttu-id="c4d5e-653">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Right" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-654">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-655">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-656">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-657">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-658">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-659">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-660">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-661">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-662">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-663">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-664">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-665">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> 命令，這個命令會要求目前的選取範圍向右擴展一個字。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span></span></summary>
        <value><span data-ttu-id="c4d5e-666">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-666">The requested command.</span></span>  <span data-ttu-id="c4d5e-667">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-668">插入號是否在單字內，這個命令會將選取範圍擴展到該字尾。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="c4d5e-669">否則這個命令會選取範圍擴展至下個字組的結尾。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="c4d5e-670">展開選取範圍包含文字分隔字元。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="c4d5e-671">與相反<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>其中不包含在展開的選取範圍字組分隔符號。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="c4d5e-672">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-673">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-674">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-675">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-676">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-677">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-678">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-679">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-680">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-681">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-682">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-683">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> 命令，這個命令會要求目前的選取範圍擴展至內容的最尾端。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span></span></summary>
        <value><span data-ttu-id="c4d5e-684">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-684">The requested command.</span></span>  <span data-ttu-id="c4d5e-685">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-686">A*文字容器*是 form 內容手邊的 ultimate 框線的項目。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c4d5e-687"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文字容器的範例。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c4d5e-688">共同文字容器內所包含的內容指*文件*。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c4d5e-689">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-690">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-691">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-692">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-693">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-694">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-695">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-696">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-697">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-698">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-699">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-700">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> 命令，這個命令會要求目前的選取範圍擴展至內容的最開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="c4d5e-701">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-701">The requested command.</span></span>  <span data-ttu-id="c4d5e-702">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-703">A*文字容器*是 form 內容手邊的 ultimate 框線的項目。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c4d5e-704"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文字容器的範例。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c4d5e-705">共同文字容器內所包含的內容指*文件*。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c4d5e-706">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-707">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-708">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-709">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-710">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-711">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-712">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-713">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-714">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-715">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-716">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-717">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> 命令，這個命令會要求目前的選取範圍擴展至目前這行的結尾。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="c4d5e-718">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-718">The requested command.</span></span>  <span data-ttu-id="c4d5e-719">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-720">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-721">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-722">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-723">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-724">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-725">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-726">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-727">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-728">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-729">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-730">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-731">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> 命令，這個命令會要求目前的選取範圍擴展至目前這行的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="c4d5e-732">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-732">The requested command.</span></span>  <span data-ttu-id="c4d5e-733">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Home" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-734">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-735">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-736">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-737">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-738">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-739">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-740">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-741">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-742">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-743">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-744">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-745">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> 命令，這個命令會要求目前的選取範圍向上擴展一行。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span></span></summary>
        <value><span data-ttu-id="c4d5e-746">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-746">The requested command.</span></span>  <span data-ttu-id="c4d5e-747">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Up" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-748">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-749">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-750">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-751">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-752">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-753">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-754">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-755">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-756">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-757">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-758">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-759">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> 命令，這個命令會要求目前的選取範圍向上擴展一頁。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span></span></summary>
        <value><span data-ttu-id="c4d5e-760">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-760">The requested command.</span></span>  <span data-ttu-id="c4d5e-761">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="PageUp" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-762">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-763">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-764">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-765">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-766">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-767">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-768">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-769">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-770">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-771">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-772">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-773">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> 命令，這個命令會要求目前的選取範圍向上擴展一個段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="c4d5e-774">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-774">The requested command.</span></span>  <span data-ttu-id="c4d5e-775">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-776">當插入號位於段落的開頭，這個命令會將選取範圍擴展至前一個段落的開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="c4d5e-777">否則這個命令會選取範圍擴展至目前的段落開頭。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="c4d5e-778">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-779">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-780">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-781">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-782">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-783">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-784">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-785">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-786">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-787">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-788">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-789">表示 <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> 命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span></span></summary>
        <value><span data-ttu-id="c4d5e-790">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-790">The requested command.</span></span>  <span data-ttu-id="c4d5e-791">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Tab" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-792">此命令的行為取決於目前的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="c4d5e-793">如果非空白的選取項目，這個命令等同於<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="c4d5e-794">如果插入號位於資料表資料格 (由<xref:System.Windows.Documents.TableCell>項目)，此命令會將插入號移到上一個儲存格。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="c4d5e-795">否則，定位字元會插入目前的位置。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="c4d5e-796">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-797">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>並<xref:System.Windows.Controls.TextBox>(當<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>屬性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-798">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-799">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-800">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-801">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-802">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-803">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-804">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-805">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-806">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-807">表示 <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> 命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span></span></summary>
        <value><span data-ttu-id="c4d5e-808">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-808">The requested command.</span></span>  <span data-ttu-id="c4d5e-809">這個命令的預設主要筆勢是 <see langword="Tab" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-809">The default key gesture for this command is <see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-810">此命令的行為取決於目前的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="c4d5e-811">如果選取項目為非空白，或如果是空的選取項目，而且目前的插入號位置的段落開頭，此命令相當於<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="c4d5e-812">如果插入號位於資料表資料格 (由<xref:System.Windows.Documents.TableCell>項目)，此命令會將插入號移至下一個資料格。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="c4d5e-813">如果插入號是在資料表的最後一個資料格中，此命令會導致新的資料列附加至資料表中，插入號位於新的資料列的第一個資料格中。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="c4d5e-814">否則，定位字元會插入目前的位置。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="c4d5e-815">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-816">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>並<xref:System.Windows.Controls.TextBox>(當<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>屬性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-817">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-818">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-819">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-820">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-821">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-822">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-823">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-824">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-825">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-826">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> 命令，這個命令會要求在目前選取範圍開啟 <see cref="T:System.Windows.Documents.Bold" /> 格式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c4d5e-827">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-827">The requested command.</span></span>  <span data-ttu-id="c4d5e-828">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="B" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-829">如果<xref:System.Windows.FontWeight>目前的選取範圍是介於<xref:System.Windows.FontWeights.Thin%2A>要<xref:System.Windows.FontWeights.SemiBold%2A>，<xref:System.Windows.FontWeights.Bold%2A>套用至目前的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="c4d5e-830">否則，<xref:System.Windows.FontWeights.Normal%2A>套用。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="c4d5e-831">如需比較的清單<xref:System.Windows.FontWeight>值，請參閱<xref:System.Windows.FontWeights>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="c4d5e-832">當選取範圍是空的插入號是在 word 中時，選取項目已擴充成包括整個字。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="c4d5e-833">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-834">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-835">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-836">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-837">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-838">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-839">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-840">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-841">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-842">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-843">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-844">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> 命令，這個命令會要求在目前選取範圍上切換未排序的清單 (也稱為項目符號清單) 格式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c4d5e-845">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-845">The requested command.</span></span>  <span data-ttu-id="c4d5e-846">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-847">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c4d5e-848">部分選取的段落 （包括段落中有插入號的空選取範圍） 中的內容，叫用此命令時，才會將要求的效果套用到整個段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c4d5e-849">如果此命令會叫用在橫跨多個段落的選取範圍上，選取範圍內每個段落的整個內容套用效果。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c4d5e-850">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-851">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-852">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-853">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-854">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-855">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-856">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-857">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-858">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-859">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-860">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-861">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> 命令，這個命令會切換插入與覆寫的鍵入模式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span></span></summary>
        <value><span data-ttu-id="c4d5e-862">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-862">The requested command.</span></span>  <span data-ttu-id="c4d5e-863">這個命令的預設主要筆勢是 <see langword="Insert" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-863">The default key gesture for this command is <see langword="Insert" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-864">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-865">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-866">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-867">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-868">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-869">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-870">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-871">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-872">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-873">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-874">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-875">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> 命令，這個命令會要求在目前選取範圍開啟 <see cref="T:System.Windows.Documents.Italic" /> 格式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c4d5e-876">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-876">The requested command.</span></span>  <span data-ttu-id="c4d5e-877">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="I" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-878">如果<xref:System.Windows.FontStyle>為目前的選取範圍<xref:System.Windows.FontStyles.Normal%2A>，<xref:System.Windows.FontStyles.Italic%2A>套用至目前的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="c4d5e-879">否則，<xref:System.Windows.FontStyles.Normal%2A>套用。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="c4d5e-880">當選取範圍是空的插入號是在 word 中時，選取項目已擴充成包括整個字。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="c4d5e-881">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-882">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-883">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-884">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-885">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-886">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-887">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-888">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-889">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-890">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-891">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-892">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> 命令，這個命令會要求在目前選取範圍上切換已排序的清單 (也稱為編號清單) 格式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c4d5e-893">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-893">The requested command.</span></span>  <span data-ttu-id="c4d5e-894">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-895">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c4d5e-896">部分選取的段落 （包括段落中有插入號的空選取範圍） 中的內容，叫用此命令時，才會將要求的效果套用到整個段落。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c4d5e-897">如果此命令會叫用在橫跨多個段落的選取範圍上，選取範圍內每個段落的整個內容套用效果。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c4d5e-898">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-899">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-900">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-901">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-902">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-903">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-904">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-905">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-906">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-907">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-908">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-909">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> 命令，這個命令會要求在目前選取範圍上切換下標格式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c4d5e-910">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-910">The requested command.</span></span>  <span data-ttu-id="c4d5e-911">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="OemPlus" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-912">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-913">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-914">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-915">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-916">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-917">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-918">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-919">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-920">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-921">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-922">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> 命令，這個命令會要求在目前選取範圍上切換上標格式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c4d5e-923">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-923">The requested command.</span></span>  <span data-ttu-id="c4d5e-924">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-925">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-926">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-927">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-928">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-929">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-930">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-931">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-932">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-933">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-934">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c4d5e-935">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> 命令，這個命令會要求在目前選取範圍開啟 <see cref="T:System.Windows.Documents.Underline" /> 格式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="c4d5e-936">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-936">The requested command.</span></span>  <span data-ttu-id="c4d5e-937">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="U" />。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c4d5e-938">當選取範圍是空的插入號是在 word 中時，選取項目已擴充成包括整個字。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="c4d5e-939">不一定會回應任何指定的物件; 在此命令的實際實作在許多情況下會回應至命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c4d5e-940">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c4d5e-941">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="c4d5e-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c4d5e-942">下列範例示範如何叫用支援的命令物件上的編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c4d5e-943">此範例中，針對<xref:System.Windows.Controls.RichTextBox>作為命令目標。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c4d5e-944">請注意，<xref:System.Windows.Controls.RichTextBox>會實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，而且它包含許多的編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-945">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c4d5e-946">最編輯命令忽略的命令參數。這個參數應該是一般情況下，`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c4d5e-947">第二個引數會指定將路由命令的物件。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c4d5e-948">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包含指定的命令處理常式。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c4d5e-949">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="c4d5e-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>