<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9b038-101">提供一組標準的編輯相關命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-101">Provides a standard set of editing related commands.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-102">下表顯示編輯命令及相關聯的預設索引鍵筆勢 (使用索引鍵的名稱，從<xref:System.Windows.Input.Key>和<xref:System.Windows.Input.ModifierKeys>列舉型別)。</span><span class="sxs-lookup"><span data-stu-id="9b038-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="9b038-103">編輯命令</span><span class="sxs-lookup"><span data-stu-id="9b038-103">Editing command</span></span>|<span data-ttu-id="9b038-104">預設按鍵動作</span><span class="sxs-lookup"><span data-stu-id="9b038-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="9b038-105">沒有預設按鍵動作</span><span class="sxs-lookup"><span data-stu-id="9b038-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="9b038-106">沒有預設按鍵動作</span><span class="sxs-lookup"><span data-stu-id="9b038-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="9b038-107">插入號移動指令和選取範圍擴充命令共用一組常用的預設索引鍵筆勢，一般的差異在於新增<xref:System.Windows.Input.ModifierKeys.Shift>區別插入號移動指令的選取範圍命令的索引鍵。</span><span class="sxs-lookup"><span data-stu-id="9b038-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="9b038-108">例如，<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>命令皆具有預設按鍵動作的<xref:System.Windows.Input.Key.Left>，和對應<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>命令皆具有預設按鍵動作的<xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>。</span><span class="sxs-lookup"><span data-stu-id="9b038-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="9b038-109">所提供的命令定義的一般情況下，<xref:System.Windows.Documents.EditingCommands>類別執行進行命令參數的使用 (`parameter`參數必須是由<xref:System.Windows.Input.ICommand.Execute%2A>方法)。</span><span class="sxs-lookup"><span data-stu-id="9b038-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="9b038-110">如需有關命令和命令的詳細資訊，請參閱[輸入概觀](~/docs/framework/wpf/advanced/input-overview.md)。</span><span class="sxs-lookup"><span data-stu-id="9b038-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b038-111">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-112">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-113">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-114">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-115">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-116">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-117">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-118">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-119">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> 命令，這個命令會要求目前的段落或選取的段落置中。</span><span class="sxs-lookup"><span data-stu-id="9b038-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span></span></summary>
        <value><span data-ttu-id="9b038-120">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-120">The requested command.</span></span>  <span data-ttu-id="9b038-121">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="E" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-122">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="9b038-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="9b038-123">部分選取的內容 （包括空的選取範圍，插入號所在的段落內） 的段落內叫用此命令時，如果要求的效果被套用至整個段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="9b038-124">如果橫跨多個段落的選取範圍上叫用此命令時，效果被套用至選取範圍內每個段落的整個內容。</span><span class="sxs-lookup"><span data-stu-id="9b038-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="9b038-125">下圖顯示置中的內容的範例。</span><span class="sxs-lookup"><span data-stu-id="9b038-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="9b038-126">![螢幕擷取畫面： TextAlign 屬性值為 Center](~/add/media/flowdoc-textalign-center.png "螢幕擷取畫面： TextAlign 屬性值為 Center")</span><span class="sxs-lookup"><span data-stu-id="9b038-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="9b038-127">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-128">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-129">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-130">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-131">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-132">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-133">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-134">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-135">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-136">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-137">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> 命令，這個命令會要求目前的段落或選取的段落對齊。</span><span class="sxs-lookup"><span data-stu-id="9b038-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span></span></summary>
        <value><span data-ttu-id="9b038-138">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-138">The requested command.</span></span>  <span data-ttu-id="9b038-139">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="J" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-140">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="9b038-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="9b038-141">部分選取的內容 （包括空的選取範圍，插入號所在的段落內） 的段落內叫用此命令時，如果要求的效果被套用至整個段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="9b038-142">如果橫跨多個段落的選取範圍上叫用此命令時，效果會套用至選取範圍中的所有段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="9b038-143">當內容對齊時，使左右對齊的線的等於或接近等寬度調整內每行內容的水平間距。</span><span class="sxs-lookup"><span data-stu-id="9b038-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="9b038-144">內容通常是內容項目的側邊建立平滑的邊緣對齊。</span><span class="sxs-lookup"><span data-stu-id="9b038-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="9b038-145">通常很短於其餘部分，因為在叫用此命令之後，可能仍未對齊段落中的最後一行。</span><span class="sxs-lookup"><span data-stu-id="9b038-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="9b038-146">下圖顯示對齊 （靠左對齊） 的內容。</span><span class="sxs-lookup"><span data-stu-id="9b038-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="9b038-147">![螢幕擷取畫面： 內容尚未對齊](~/add/media/content-unjustified.png "螢幕擷取畫面： 內容尚未對齊")</span><span class="sxs-lookup"><span data-stu-id="9b038-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="9b038-148">下圖顯示相同的內容之後對齊。</span><span class="sxs-lookup"><span data-stu-id="9b038-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="9b038-149">![螢幕擷取畫面的內容對齊文字](~/add/media/content-justified.png "螢幕擷取畫面的內容對齊的文字")</span><span class="sxs-lookup"><span data-stu-id="9b038-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="9b038-150">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-151">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-152">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-153">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-154">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-155">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-156">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-157">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-158">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-159">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-160">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-161">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> 命令，這個命令會要求內容的選取範圍靠左對齊。</span><span class="sxs-lookup"><span data-stu-id="9b038-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span></span></summary>
        <value><span data-ttu-id="9b038-162">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-162">The requested command.</span></span>  <span data-ttu-id="9b038-163">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="L" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-164">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="9b038-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="9b038-165">部分選取的內容 （包括空的選取範圍，插入號所在的段落內） 的段落內叫用此命令時，如果要求的效果被套用至整個段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="9b038-166">如果橫跨多個段落的選取範圍上叫用此命令時，效果被套用至選取範圍內每個段落的整個內容。</span><span class="sxs-lookup"><span data-stu-id="9b038-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="9b038-167">下圖顯示為靠左對齊內容的範例。</span><span class="sxs-lookup"><span data-stu-id="9b038-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="9b038-168">![螢幕擷取畫面： TextAlign 屬性值為 Left](~/add/media/flowdoc-textalign-left.png "螢幕擷取畫面： TextAlign 屬性值為 Left")</span><span class="sxs-lookup"><span data-stu-id="9b038-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="9b038-169">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-170">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-171">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-172">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-173">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-174">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-175">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-176">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-177">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-178">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-179">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-180">表示 <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> 命令，這個命令會要求內容的選取範圍靠右對齊。</span><span class="sxs-lookup"><span data-stu-id="9b038-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span></span></summary>
        <value><span data-ttu-id="9b038-181">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-181">The requested command.</span></span>  <span data-ttu-id="9b038-182">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="R" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-183">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="9b038-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="9b038-184">部分選取的內容 （包括空的選取範圍，插入號所在的段落內） 的段落內叫用此命令時，如果要求的效果被套用至整個段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="9b038-185">如果橫跨多個段落的選取範圍上叫用此命令時，效果被套用至選取範圍內每個段落的整個內容。</span><span class="sxs-lookup"><span data-stu-id="9b038-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="9b038-186">下圖顯示為靠右對齊內容的範例。</span><span class="sxs-lookup"><span data-stu-id="9b038-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="9b038-187">![螢幕擷取畫面： 權限的 TextAlign 值](~/add/media/flowdoc-textalign-right.png "螢幕擷取畫面： TextAlign 值為 Right")</span><span class="sxs-lookup"><span data-stu-id="9b038-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="9b038-188">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-189">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-190">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-191">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-192">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-193">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-194">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-195">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-196">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-197">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-198">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-199">表示 <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> 命令，這個命令會要求在目前位置或目前選取範圍上輸入退格鍵。</span><span class="sxs-lookup"><span data-stu-id="9b038-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="9b038-200">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-200">The requested command.</span></span>  <span data-ttu-id="9b038-201">這個命令的預設主要筆勢是 <see langword="Backspace" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-201">The default key gesture for this command is <see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-202">在空的選取項目叫用，則此命令會刪除之前插入號的字元或段落分隔符號。</span><span class="sxs-lookup"><span data-stu-id="9b038-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="9b038-203">在非空白的選取項目叫用，則此命令會刪除選取項目。</span><span class="sxs-lookup"><span data-stu-id="9b038-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="9b038-204">此命令會保留已刪除選取項目內容在叫用此命令之後立即插入相同的位置中的任何格式。</span><span class="sxs-lookup"><span data-stu-id="9b038-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="9b038-205">與<xref:System.Windows.Documents.EditingCommands.Delete%2A>命令，不會保留舊的格式設定。</span><span class="sxs-lookup"><span data-stu-id="9b038-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="9b038-206">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-207">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-208">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-209">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-210">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-211">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-212">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-213">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-214">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-215">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-216">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-217">表示 <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> 命令，這個命令會要求更正目前位置上任何拼錯的字。</span><span class="sxs-lookup"><span data-stu-id="9b038-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span></span></summary>
        <value><span data-ttu-id="9b038-218">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-218">The requested command.</span></span>  <span data-ttu-id="9b038-219">這個命令沒有預設按鍵動作。</span><span class="sxs-lookup"><span data-stu-id="9b038-219">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-220">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-221">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-222">表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> 命令，這個命令會要求目前選取範圍的字型大小縮少 1 點。</span><span class="sxs-lookup"><span data-stu-id="9b038-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span></span></summary>
        <value><span data-ttu-id="9b038-223">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-223">The requested command.</span></span>  <span data-ttu-id="9b038-224">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="OemOpenBrackets" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-225">如果此命令會叫用空的選取範圍，插入號是在單字內的位置上，選取項目會自動展開將命令套用至整個字。</span><span class="sxs-lookup"><span data-stu-id="9b038-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="9b038-226">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-227">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-228">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-229">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-230">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-231">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-232">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-233">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-234">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-235">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-236">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-237">表示 <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> 命令，這個命令會要求目前段落的縮排減少一個定位停駐點。</span><span class="sxs-lookup"><span data-stu-id="9b038-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="9b038-238">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-238">The requested command.</span></span>  <span data-ttu-id="9b038-239">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-240">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-241">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9b038-242">此命令沒有作用的文字項目上，除非已<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>文字項目的屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="9b038-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-243">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-244">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-245">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-246">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-247">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-248">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-249">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-250">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-251">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-252">表示 <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> 命令，這個命令會要求刪除目前的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="9b038-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span></span></summary>
        <value><span data-ttu-id="9b038-253">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-253">The requested command.</span></span>  <span data-ttu-id="9b038-254">這個命令的預設主要筆勢是 <see langword="Delete" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-254">The default key gesture for this command is <see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-255">此命令會捨棄中刪除選取的任何格式。</span><span class="sxs-lookup"><span data-stu-id="9b038-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="9b038-256">與<xref:System.Windows.Documents.EditingCommands.Backspace%2A>命令時，這會保留已刪除選取項目內容在叫用此命令之後立即插入相同的位置中的任何格式。</span><span class="sxs-lookup"><span data-stu-id="9b038-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="9b038-257">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-258">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-259">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-260">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-261">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-262">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-263">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-264">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-265">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-266">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-267">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-268">表示 <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> 命令，這個命令會要求刪除下一個字 (相對於目前位置)。</span><span class="sxs-lookup"><span data-stu-id="9b038-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="9b038-269">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-269">The requested command.</span></span>  <span data-ttu-id="9b038-270">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Delete" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-271">如果插入號是在 word 中，會刪除目前的位置和文字的結尾之間的單字的其餘部分。</span><span class="sxs-lookup"><span data-stu-id="9b038-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="9b038-272">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-273">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-274">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-275">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-276">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-277">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-278">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-279">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-280">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-281">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-282">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-283">表示 <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> 命令，這個命令會要求刪除前一個字 (相對於目前位置)。</span><span class="sxs-lookup"><span data-stu-id="9b038-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span></span></summary>
        <value><span data-ttu-id="9b038-284">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-284">The requested command.</span></span>  <span data-ttu-id="9b038-285">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Backspace" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-286">如果插入號是在 word 中，會刪除目前的位置之間的字首文字的其餘部分。</span><span class="sxs-lookup"><span data-stu-id="9b038-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="9b038-287">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-288">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-289">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-290">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-291">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-292">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-293">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-294">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-295">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-296">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-297">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-298">表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> 命令，這個命令會要求在目前位置或目前選取範圍上插入分行符號。</span><span class="sxs-lookup"><span data-stu-id="9b038-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="9b038-299">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-299">The requested command.</span></span>  <span data-ttu-id="9b038-300">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Enter" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-301">支援下列非固定格式內容的編輯器<xref:System.Windows.Controls.RichTextBox>，這個命令原因<xref:System.Windows.Documents.LineBreak>項目插入目前的位置。</span><span class="sxs-lookup"><span data-stu-id="9b038-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="9b038-302">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-303">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-304">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-305">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-306">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-307">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-308">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-309">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-310">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-311">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-312">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-313">表示 <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> 命令，這個命令會要求在目前位置或目前選取範圍上插入分段符號。</span><span class="sxs-lookup"><span data-stu-id="9b038-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span></span></summary>
        <value><span data-ttu-id="9b038-314">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-314">The requested command.</span></span>  <span data-ttu-id="9b038-315">這個命令的預設主要筆勢是 <see langword="Enter" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-315">The default key gesture for this command is <see langword="Enter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-316">此命令就相當於使用者按下 ENTER 鍵。</span><span class="sxs-lookup"><span data-stu-id="9b038-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="9b038-317">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-318">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>(當<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A>屬性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="9b038-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9b038-319">此命令沒有作用的文字項目上，除非已<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A>文字項目的屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="9b038-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-320">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-321">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-322">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-323">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-324">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-325">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-326">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-327">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-328">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-329">表示 <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> 命令，這個命令會要求忽略任何在目前位置或目前選取範圍中有拼錯字的項目。</span><span class="sxs-lookup"><span data-stu-id="9b038-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span></span></summary>
        <value><span data-ttu-id="9b038-330">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-330">The requested command.</span></span>  <span data-ttu-id="9b038-331">這個命令沒有預設按鍵動作。</span><span class="sxs-lookup"><span data-stu-id="9b038-331">This command has no default key gesture.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-332">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-333">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-334">表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> 命令，這個命令會要求目前選取範圍的字型大小增加 1 點。</span><span class="sxs-lookup"><span data-stu-id="9b038-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span></span></summary>
        <value><span data-ttu-id="9b038-335">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-335">The requested command.</span></span>  <span data-ttu-id="9b038-336">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="OemCloseBrackets" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-337">如果此命令會叫用空的選取範圍，插入號是在單字內的位置上，選取項目會展開將命令套用至整個字。</span><span class="sxs-lookup"><span data-stu-id="9b038-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="9b038-338">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-339">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-340">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-341">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-342">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-343">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-344">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-345">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-346">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-347">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-348">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-349">表示 <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> 命令，這個命令會要求目前段落的縮排增加一個定位停駐點。</span><span class="sxs-lookup"><span data-stu-id="9b038-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span></span></summary>
        <value><span data-ttu-id="9b038-350">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-350">The requested command.</span></span>  <span data-ttu-id="9b038-351">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="T" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-352">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-353">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9b038-354">此命令沒有作用的文字項目上，除非已<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>文字項目的屬性設定為`true`。</span><span class="sxs-lookup"><span data-stu-id="9b038-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-355">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-356">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-357">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-358">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-359">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-360">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-361">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-362">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-363">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-364">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> 命令，這個命令會要求插入號下移一行。</span><span class="sxs-lookup"><span data-stu-id="9b038-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span></span></summary>
        <value><span data-ttu-id="9b038-365">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-365">The requested command.</span></span>  <span data-ttu-id="9b038-366">這個命令的預設主要筆勢是 <see langword="Down" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-366">The default key gesture for this command is <see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-367">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-368">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-369">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-370">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-371">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-372">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-373">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-374">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-375">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-376">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-377">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-378">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> 命令，這個命令會要求插入號下移一頁。</span><span class="sxs-lookup"><span data-stu-id="9b038-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span></span></summary>
        <value><span data-ttu-id="9b038-379">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-379">The requested command.</span></span>  <span data-ttu-id="9b038-380">這個命令的預設主要筆勢是 <see langword="PageDown" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-380">The default key gesture for this command is <see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-381">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-382">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-383">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-384">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-385">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-386">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-387">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-388">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-389">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-390">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-391">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-392">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> 命令，這個命令會要求插入號下移一個段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="9b038-393">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-393">The requested command.</span></span>  <span data-ttu-id="9b038-394">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Down" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-395">此命令會將插入號下一個段落的開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="9b038-396">此命令的行為類似<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>上叫用時<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="9b038-397">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-398">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-399">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-400">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-401">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-402">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-403">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-404">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-405">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-406">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-407">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-408">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> 命令，這個命令會要求插入號左移一個字元。</span><span class="sxs-lookup"><span data-stu-id="9b038-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span></span></summary>
        <value><span data-ttu-id="9b038-409">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-409">The requested command.</span></span>  <span data-ttu-id="9b038-410">這個命令的預設主要筆勢是 <see langword="Left" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-410">The default key gesture for this command is <see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-411">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-412">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-413">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-414">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-415">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-416">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-417">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-418">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-419">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-420">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-421">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-422">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> 命令，這個命令會要求插入號左移一個字。</span><span class="sxs-lookup"><span data-stu-id="9b038-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span></span></summary>
        <value><span data-ttu-id="9b038-423">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-423">The requested command.</span></span>  <span data-ttu-id="9b038-424">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Left" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-425">如果插入號是在單字內，此命令會將插入號移至該單字的開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="9b038-426">否則，此命令會將插入號移到先前的字首。</span><span class="sxs-lookup"><span data-stu-id="9b038-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="9b038-427">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-428">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-429">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-430">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-431">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-432">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-433">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-434">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-435">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-436">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-437">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-438">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> 命令，這個命令會要求插入號右移一個字元。</span><span class="sxs-lookup"><span data-stu-id="9b038-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span></span></summary>
        <value><span data-ttu-id="9b038-439">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-439">The requested command.</span></span>  <span data-ttu-id="9b038-440">這個命令的預設主要筆勢是 <see langword="Right" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-440">The default key gesture for this command is <see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-441">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-442">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-443">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-444">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-445">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-446">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-447">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-448">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-449">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-450">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-451">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-452">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> 命令，這個命令會要求插入號右移一個字。</span><span class="sxs-lookup"><span data-stu-id="9b038-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span></span></summary>
        <value><span data-ttu-id="9b038-453">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-453">The requested command.</span></span>  <span data-ttu-id="9b038-454">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Right" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-455">如果插入號是在單字內，此命令會將插入號移至該文字的結尾。</span><span class="sxs-lookup"><span data-stu-id="9b038-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="9b038-456">否則，此命令會將插入號移至下一個文字的開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="9b038-457">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-458">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-459">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-460">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-461">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-462">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-463">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-464">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-465">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-466">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-467">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-468">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> 命令，這個命令會要求插入號移至內容的最尾端。</span><span class="sxs-lookup"><span data-stu-id="9b038-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span></span></summary>
        <value><span data-ttu-id="9b038-469">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-469">The requested command.</span></span>  <span data-ttu-id="9b038-470">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-471">A*文字容器*是形成手邊的內容的最終框線的項目。</span><span class="sxs-lookup"><span data-stu-id="9b038-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="9b038-472"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文字容器的範例。</span><span class="sxs-lookup"><span data-stu-id="9b038-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="9b038-473">共同文字容器內所包含的內容指*文件*。</span><span class="sxs-lookup"><span data-stu-id="9b038-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="9b038-474">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-475">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-476">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-477">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-478">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-479">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-480">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-481">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-482">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-483">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-484">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-485">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> 命令，這個命令會要求插入號移至內容的最開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="9b038-486">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-486">The requested command.</span></span>  <span data-ttu-id="9b038-487">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Home" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-488">A*文字容器*是形成手邊的內容的最終框線的項目。</span><span class="sxs-lookup"><span data-stu-id="9b038-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="9b038-489"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文字容器的範例。</span><span class="sxs-lookup"><span data-stu-id="9b038-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="9b038-490">共同文字容器內所包含的內容指*文件*。</span><span class="sxs-lookup"><span data-stu-id="9b038-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="9b038-491">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-492">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-493">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-494">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-495">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-496">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-497">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-498">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-499">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-500">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-501">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-502">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> 命令，這個命令會要求插入號移至目前這行的結尾。</span><span class="sxs-lookup"><span data-stu-id="9b038-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="9b038-503">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-503">The requested command.</span></span>  <span data-ttu-id="9b038-504">這個命令的預設主要筆勢是 <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-504">The default key gesture for this command is <see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-505">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-506">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-507">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-508">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-509">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-510">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-511">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-512">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-513">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-514">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-515">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-516">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> 命令，這個命令會要求插入號移至目前這行的開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="9b038-517">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-517">The requested command.</span></span>  <span data-ttu-id="9b038-518">這個命令的預設主要筆勢是 <see langword="Home" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-518">The default key gesture for this command is <see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-519">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-520">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-521">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-522">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-523">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-524">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-525">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-526">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-527">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-528">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-529">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-530">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> 命令，這個命令會要求插入號上移一行。</span><span class="sxs-lookup"><span data-stu-id="9b038-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span></span></summary>
        <value><span data-ttu-id="9b038-531">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-531">The requested command.</span></span>  <span data-ttu-id="9b038-532">這個命令的預設主要筆勢是 <see langword="Up" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-532">The default key gesture for this command is <see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-533">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-534">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-535">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-536">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-537">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-538">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-539">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-540">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-541">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-542">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-543">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-544">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> 命令，這個命令會要求插入號上移一頁。</span><span class="sxs-lookup"><span data-stu-id="9b038-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span></span></summary>
        <value><span data-ttu-id="9b038-545">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-545">The requested command.</span></span>  <span data-ttu-id="9b038-546">這個命令的預設主要筆勢是 <see langword="PageUp" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-546">The default key gesture for this command is <see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-547">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-548">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-549">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-550">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-551">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-552">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-553">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-554">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-555">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-556">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-557">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-558">表示 <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> 命令，這個命令會要求插入號上移一個段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="9b038-559">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-559">The requested command.</span></span>  <span data-ttu-id="9b038-560">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Up" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-561">此命令會將插入號下一個段落的開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="9b038-562">此命令的行為類似<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>上叫用時<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="9b038-563">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-564">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-565">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-566">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-567">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-568">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-569">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-570">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-571">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-572">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-573">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-574">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> 命令，這個命令會要求目前的選取範圍向下擴展一行。</span><span class="sxs-lookup"><span data-stu-id="9b038-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span></span></summary>
        <value><span data-ttu-id="9b038-575">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-575">The requested command.</span></span>  <span data-ttu-id="9b038-576">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Down" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-577">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-578">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-579">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-580">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-581">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-582">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-583">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-584">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-585">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-586">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-587">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-588">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> 命令，這個命令會要求目前的選取範圍向下擴展一頁。</span><span class="sxs-lookup"><span data-stu-id="9b038-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span></span></summary>
        <value><span data-ttu-id="9b038-589">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-589">The requested command.</span></span>  <span data-ttu-id="9b038-590">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="PageDown" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-591">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-592">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-593">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-594">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-595">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-596">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-597">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-598">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-599">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-600">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-601">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-602">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> 命令，這個命令會要求目前的選取範圍向下擴展一個段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span></span></summary>
        <value><span data-ttu-id="9b038-603">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-603">The requested command.</span></span>  <span data-ttu-id="9b038-604">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-605">這個命令會將選取範圍擴展至下一個段落的開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="9b038-606">否則，此命令會展開選取範圍至目前的段落結尾。</span><span class="sxs-lookup"><span data-stu-id="9b038-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="9b038-607">展開選取範圍包含了段落中的結束標記分段符號。</span><span class="sxs-lookup"><span data-stu-id="9b038-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="9b038-608">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-609">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-610">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-611">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-612">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-613">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-614">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-615">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-616">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-617">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-618">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-619">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> 命令，這個命令會要求目前的選取範圍向左擴展一個字元。</span><span class="sxs-lookup"><span data-stu-id="9b038-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span></span></summary>
        <value><span data-ttu-id="9b038-620">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-620">The requested command.</span></span>  <span data-ttu-id="9b038-621">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Left" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-622">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-623">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-624">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-625">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-626">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-627">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-628">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-629">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-630">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-631">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-632">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-633">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> 命令，這個命令會要求目前的選取範圍向左擴展一個字。</span><span class="sxs-lookup"><span data-stu-id="9b038-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span></span></summary>
        <value><span data-ttu-id="9b038-634">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-634">The requested command.</span></span>  <span data-ttu-id="9b038-635">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-636">如果插入號是在單字內，此命令會展開選取項目以該文字的開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="9b038-637">否則，此命令會展開選取範圍到先前的字首。</span><span class="sxs-lookup"><span data-stu-id="9b038-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="9b038-638">展開選取範圍不包含文字分隔字元。</span><span class="sxs-lookup"><span data-stu-id="9b038-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="9b038-639">與<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>，其中包括單字分隔符號中擴展的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="9b038-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="9b038-640">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-641">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-642">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-643">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-644">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-645">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-646">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-647">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-648">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-649">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-650">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-651">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> 命令，這個命令會要求目前的選取範圍向右擴展一個字元。</span><span class="sxs-lookup"><span data-stu-id="9b038-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span></span></summary>
        <value><span data-ttu-id="9b038-652">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-652">The requested command.</span></span>  <span data-ttu-id="9b038-653">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Right" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-654">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-655">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-656">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-657">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-658">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-659">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-660">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-661">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-662">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-663">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-664">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-665">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> 命令，這個命令會要求目前的選取範圍向右擴展一個字。</span><span class="sxs-lookup"><span data-stu-id="9b038-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span></span></summary>
        <value><span data-ttu-id="9b038-666">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-666">The requested command.</span></span>  <span data-ttu-id="9b038-667">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-668">如果插入號是在單字內，此命令會展開選取項目以該文字的結尾。</span><span class="sxs-lookup"><span data-stu-id="9b038-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="9b038-669">否則，這個命令會選取範圍擴展至下一個字結尾。</span><span class="sxs-lookup"><span data-stu-id="9b038-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="9b038-670">展開選取範圍包含文字分隔字元。</span><span class="sxs-lookup"><span data-stu-id="9b038-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="9b038-671">與<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>也不會不是包含文字分隔字元展開選取範圍中。</span><span class="sxs-lookup"><span data-stu-id="9b038-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="9b038-672">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-673">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-674">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-675">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-676">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-677">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-678">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-679">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-680">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-681">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-682">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-683">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> 命令，這個命令會要求目前的選取範圍擴展至內容的最尾端。</span><span class="sxs-lookup"><span data-stu-id="9b038-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span></span></summary>
        <value><span data-ttu-id="9b038-684">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-684">The requested command.</span></span>  <span data-ttu-id="9b038-685">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-686">A*文字容器*是形成手邊的內容的最終框線的項目。</span><span class="sxs-lookup"><span data-stu-id="9b038-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="9b038-687"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文字容器的範例。</span><span class="sxs-lookup"><span data-stu-id="9b038-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="9b038-688">共同文字容器內所包含的內容指*文件*。</span><span class="sxs-lookup"><span data-stu-id="9b038-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="9b038-689">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-690">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-691">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-692">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-693">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-694">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-695">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-696">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-697">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-698">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-699">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-700">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> 命令，這個命令會要求目前的選取範圍擴展至內容的最開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span></span></summary>
        <value><span data-ttu-id="9b038-701">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-701">The requested command.</span></span>  <span data-ttu-id="9b038-702">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-703">A*文字容器*是形成手邊的內容的最終框線的項目。</span><span class="sxs-lookup"><span data-stu-id="9b038-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="9b038-704"><xref:System.Windows.Controls.TextBlock> 和<xref:System.Windows.Documents.FlowDocument>是文字容器的範例。</span><span class="sxs-lookup"><span data-stu-id="9b038-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="9b038-705">共同文字容器內所包含的內容指*文件*。</span><span class="sxs-lookup"><span data-stu-id="9b038-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="9b038-706">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-707">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-708">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-709">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-710">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-711">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-712">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-713">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-714">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-715">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-716">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-717">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> 命令，這個命令會要求目前的選取範圍擴展至目前這行的結尾。</span><span class="sxs-lookup"><span data-stu-id="9b038-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span></span></summary>
        <value><span data-ttu-id="9b038-718">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-718">The requested command.</span></span>  <span data-ttu-id="9b038-719">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="End" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-720">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-721">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-722">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-723">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-724">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-725">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-726">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-727">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-728">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-729">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-730">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-731">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> 命令，這個命令會要求目前的選取範圍擴展至目前這行的開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span></span></summary>
        <value><span data-ttu-id="9b038-732">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-732">The requested command.</span></span>  <span data-ttu-id="9b038-733">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Home" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-734">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-735">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-736">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-737">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-738">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-739">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-740">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-741">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-742">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-743">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-744">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-745">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> 命令，這個命令會要求目前的選取範圍向上擴展一行。</span><span class="sxs-lookup"><span data-stu-id="9b038-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span></span></summary>
        <value><span data-ttu-id="9b038-746">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-746">The requested command.</span></span>  <span data-ttu-id="9b038-747">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Up" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-748">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-749">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-750">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-751">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-752">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-753">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-754">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-755">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-756">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-757">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-758">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-759">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> 命令，這個命令會要求目前的選取範圍向上擴展一頁。</span><span class="sxs-lookup"><span data-stu-id="9b038-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span></span></summary>
        <value><span data-ttu-id="9b038-760">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-760">The requested command.</span></span>  <span data-ttu-id="9b038-761">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="PageUp" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-762">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-763">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-764">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-765">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-766">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-767">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-768">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-769">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-770">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-771">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-772">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-773">表示 <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> 命令，這個命令會要求目前的選取範圍向上擴展一個段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span></span></summary>
        <value><span data-ttu-id="9b038-774">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-774">The requested command.</span></span>  <span data-ttu-id="9b038-775">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-776">如果插入號的段落開頭，此命令會展開選取範圍至前一個段落的開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="9b038-777">否則，此命令會展開選取範圍至目前的段落開頭。</span><span class="sxs-lookup"><span data-stu-id="9b038-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="9b038-778">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-779">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-780">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-781">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-782">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-783">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-784">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-785">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-786">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-787">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-788">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-789">表示 <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> 命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span></span></summary>
        <value><span data-ttu-id="9b038-790">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-790">The requested command.</span></span>  <span data-ttu-id="9b038-791">此命令的預設按鍵動作是<see langword="Shift" /> + <see langword="Tab" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-792">此命令的行為取決於目前的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="9b038-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="9b038-793">如果選取非空白，這個命令就相當於<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>。</span><span class="sxs-lookup"><span data-stu-id="9b038-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="9b038-794">如果插入號位於資料表資料格 (由<xref:System.Windows.Documents.TableCell>項目)，此命令會將插入號移到上一個儲存格。</span><span class="sxs-lookup"><span data-stu-id="9b038-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="9b038-795">否則，目前的位置中插入定位字元。</span><span class="sxs-lookup"><span data-stu-id="9b038-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="9b038-796">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-797">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>(當<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>屬性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="9b038-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-798">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-799">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-800">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-801">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-802">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-803">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-804">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-805">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-806">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-807">表示 <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> 命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span></span></summary>
        <value><span data-ttu-id="9b038-808">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-808">The requested command.</span></span>  <span data-ttu-id="9b038-809">這個命令的預設主要筆勢是 <see langword="Tab" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-809">The default key gesture for this command is <see langword="Tab" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-810">此命令的行為取決於目前的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="9b038-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="9b038-811">如果選取項目是不可為空白，或如果選取項目是空的而且目前的插入號位置的段落開頭，此命令等同於<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>。</span><span class="sxs-lookup"><span data-stu-id="9b038-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="9b038-812">如果插入號位於資料表資料格 (由<xref:System.Windows.Documents.TableCell>項目)，此命令會將插入號移至下一個資料格。</span><span class="sxs-lookup"><span data-stu-id="9b038-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="9b038-813">如果插入號位於資料表的最後一個資料格，此命令會讓新的資料列會附加到資料表中，插入號放在新的資料列的第一個資料格。</span><span class="sxs-lookup"><span data-stu-id="9b038-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="9b038-814">否則，目前的位置中插入定位字元。</span><span class="sxs-lookup"><span data-stu-id="9b038-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="9b038-815">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-816">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>和<xref:System.Windows.Controls.TextBox>(當<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A>屬性是`true`)。</span><span class="sxs-lookup"><span data-stu-id="9b038-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-817">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-818">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-819">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-820">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-821">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-822">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-823">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-824">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-825">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-826">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> 命令，這個命令會要求在目前選取範圍開啟 <see cref="T:System.Windows.Documents.Bold" /> 格式。</span><span class="sxs-lookup"><span data-stu-id="9b038-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="9b038-827">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-827">The requested command.</span></span>  <span data-ttu-id="9b038-828">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="B" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-829">如果<xref:System.Windows.FontWeight>目前選取範圍是介於<xref:System.Windows.FontWeights.Thin%2A>至<xref:System.Windows.FontWeights.SemiBold%2A>，<xref:System.Windows.FontWeights.Bold%2A>套用至目前的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="9b038-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="9b038-830">否則，<xref:System.Windows.FontWeights.Normal%2A>套用。</span><span class="sxs-lookup"><span data-stu-id="9b038-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="9b038-831">如需相關的清單<xref:System.Windows.FontWeight>值，請參閱<xref:System.Windows.FontWeights>。</span><span class="sxs-lookup"><span data-stu-id="9b038-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="9b038-832">當選取範圍是空的插入號是在 word 中時，選取項目已擴充成包含完整的文字。</span><span class="sxs-lookup"><span data-stu-id="9b038-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="9b038-833">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-834">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-835">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-836">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-837">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-838">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-839">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-840">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-841">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-842">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-843">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-844">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> 命令，這個命令會要求在目前選取範圍上切換未排序的清單 (也稱為項目符號清單) 格式。</span><span class="sxs-lookup"><span data-stu-id="9b038-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="9b038-845">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-845">The requested command.</span></span>  <span data-ttu-id="9b038-846">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-847">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="9b038-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="9b038-848">部分選取的內容 （包括空的選取範圍，插入號所在的段落內） 的段落內叫用此命令時，如果要求的效果被套用至整個段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="9b038-849">如果橫跨多個段落的選取範圍上叫用此命令時，效果被套用至選取範圍內每個段落的整個內容。</span><span class="sxs-lookup"><span data-stu-id="9b038-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="9b038-850">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-851">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-852">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-853">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-854">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-855">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-856">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-857">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-858">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-859">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-860">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-861">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> 命令，這個命令會切換插入與覆寫的鍵入模式。</span><span class="sxs-lookup"><span data-stu-id="9b038-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span></span></summary>
        <value><span data-ttu-id="9b038-862">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-862">The requested command.</span></span>  <span data-ttu-id="9b038-863">這個命令的預設主要筆勢是 <see langword="Insert" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-863">The default key gesture for this command is <see langword="Insert" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-864">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-865">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>， <xref:System.Windows.Controls.TextBox>，和<xref:System.Windows.Controls.PasswordBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-866">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-867">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-868">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-869">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-870">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-871">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-872">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-873">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-874">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-875">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> 命令，這個命令會要求在目前選取範圍開啟 <see cref="T:System.Windows.Documents.Italic" /> 格式。</span><span class="sxs-lookup"><span data-stu-id="9b038-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="9b038-876">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-876">The requested command.</span></span>  <span data-ttu-id="9b038-877">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="I" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-878">如果<xref:System.Windows.FontStyle>目前選取範圍是<xref:System.Windows.FontStyles.Normal%2A>，<xref:System.Windows.FontStyles.Italic%2A>套用至目前的選取範圍。</span><span class="sxs-lookup"><span data-stu-id="9b038-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="9b038-879">否則，<xref:System.Windows.FontStyles.Normal%2A>套用。</span><span class="sxs-lookup"><span data-stu-id="9b038-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="9b038-880">當選取範圍是空的插入號是在 word 中時，選取項目已擴充成包含完整的文字。</span><span class="sxs-lookup"><span data-stu-id="9b038-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="9b038-881">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-882">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-883">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-884">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-885">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-886">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-887">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-888">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-889">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-890">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-891">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-892">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> 命令，這個命令會要求在目前選取範圍上切換已排序的清單 (也稱為編號清單) 格式。</span><span class="sxs-lookup"><span data-stu-id="9b038-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="9b038-893">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-893">The requested command.</span></span>  <span data-ttu-id="9b038-894">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-895">此命令會在運作<xref:System.Windows.Documents.Paragraph>層級。</span><span class="sxs-lookup"><span data-stu-id="9b038-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="9b038-896">部分選取的內容 （包括空的選取範圍，插入號所在的段落內） 的段落內叫用此命令時，如果要求的效果被套用至整個段落。</span><span class="sxs-lookup"><span data-stu-id="9b038-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="9b038-897">如果橫跨多個段落的選取範圍上叫用此命令時，效果被套用至選取範圍內每個段落的整個內容。</span><span class="sxs-lookup"><span data-stu-id="9b038-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="9b038-898">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-899">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-900">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-901">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-902">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-903">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-904">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-905">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-906">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-907">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-908">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-909">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> 命令，這個命令會要求在目前選取範圍上切換下標格式。</span><span class="sxs-lookup"><span data-stu-id="9b038-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="9b038-910">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-910">The requested command.</span></span>  <span data-ttu-id="9b038-911">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="OemPlus" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-912">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-913">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-914">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-915">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-916">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-917">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-918">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-919">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-920">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-921">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-922">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> 命令，這個命令會要求在目前選取範圍上切換上標格式。</span><span class="sxs-lookup"><span data-stu-id="9b038-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="9b038-923">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-923">The requested command.</span></span>  <span data-ttu-id="9b038-924">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-925">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-926">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-927">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-928">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-929">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-930">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-931">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-932">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-933">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-934">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9b038-935">表示 <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> 命令，這個命令會要求在目前選取範圍開啟 <see cref="T:System.Windows.Documents.Underline" /> 格式。</span><span class="sxs-lookup"><span data-stu-id="9b038-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span></span></summary>
        <value><span data-ttu-id="9b038-936">所要求的命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-936">The requested command.</span></span>  <span data-ttu-id="9b038-937">此命令的預設按鍵動作是<see langword="Ctrl" /> + <see langword="U" />。</span><span class="sxs-lookup"><span data-stu-id="9b038-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b038-938">當選取範圍是空的插入號是在 word 中時，選取項目已擴充成包含完整的文字。</span><span class="sxs-lookup"><span data-stu-id="9b038-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="9b038-939">不一定會回應任何給定的物件; 此命令的實際實作在許多情況下回應命令的實作會是應用程式寫入器的責任。</span><span class="sxs-lookup"><span data-stu-id="9b038-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="9b038-940">此命令原生支援的<xref:System.Windows.Controls.RichTextBox>。</span><span class="sxs-lookup"><span data-stu-id="9b038-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="9b038-941">XAML Attribute Usage</span><span class="sxs-lookup"><span data-stu-id="9b038-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="9b038-942">下列範例會示範如何叫用支援的命令物件上編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="9b038-943">例如，<xref:System.Windows.Controls.RichTextBox>做為命令目標。</span><span class="sxs-lookup"><span data-stu-id="9b038-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="9b038-944">請注意，<xref:System.Windows.Controls.RichTextBox>實作<xref:System.Windows.IInputElement>介面 (繼承自<xref:System.Windows.FrameworkElement>)，且其中包含許多編輯命令的原生支援。</span><span class="sxs-lookup"><span data-stu-id="9b038-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="9b038-945">第一個引數<xref:System.Windows.Input.RoutedCommand.Execute%2A>方法是命令參數。</span><span class="sxs-lookup"><span data-stu-id="9b038-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="9b038-946">最編輯命令會忽略命令參數。一般情況下，這個參數應該是`null`編輯命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="9b038-947">第二個引數指定此命令將會路由傳送的物件。</span><span class="sxs-lookup"><span data-stu-id="9b038-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="9b038-948">這個物件必須實作<xref:System.Windows.IInputElement>介面，並應該包括指定命令的處理常式。</span><span class="sxs-lookup"><span data-stu-id="9b038-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="9b038-949">一般而言，不會處理命令的物件上叫用時，已忽略命令。</span><span class="sxs-lookup"><span data-stu-id="9b038-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>