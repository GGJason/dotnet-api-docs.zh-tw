<Type Name="NativeObjectSecurity" FullName="System.Security.AccessControl.NativeObjectSecurity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="eb3644f2049a1018d7454d340732c221b504f302" /><Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="zh-TW" /><Meta Name="ms.lasthandoff" Value="10/12/2018" /><Meta Name="ms.locfileid" Value="49139268" /></Metadata><TypeSignature Language="C#" Value="public abstract class NativeObjectSecurity : System.Security.AccessControl.CommonObjectSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NativeObjectSecurity extends System.Security.AccessControl.CommonObjectSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.NativeObjectSecurity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class NativeObjectSecurity&#xA;Inherits CommonObjectSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeObjectSecurity abstract : System::Security::AccessControl::CommonObjectSecurity" />
  <TypeSignature Language="F#" Value="type NativeObjectSecurity = class&#xA;    inherit CommonObjectSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.Security.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.CommonObjectSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>提供控制原生物件存取權的能力，而不需直接管理存取控制清單 (ACL)。 原生物件類型是由 <see cref="T:System.Security.AccessControl.ResourceType" /> 列舉所定義。</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>初始化 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 類別的新執行個體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer, valuetype System.Security.AccessControl.ResourceType resourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NativeObjectSecurity(bool isContainer, System::Security::AccessControl::ResourceType resourceType);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.NativeObjectSecurity : bool * System.Security.AccessControl.ResourceType -&gt; System.Security.AccessControl.NativeObjectSecurity" Usage="new System.Security.AccessControl.NativeObjectSecurity (isContainer, resourceType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
        <Parameter Name="resourceType" Type="System.Security.AccessControl.ResourceType" />
      </Parameters>
      <Docs>
        <param name="isContainer">如果新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件是容器物件，則為 <see langword="true" />。</param>
        <param name="resourceType">新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯之安全物件的類型。</param>
        <summary>使用指定的值，初始化 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer, valuetype System.Security.AccessControl.ResourceType resourceType, class System.Runtime.InteropServices.SafeHandle handle, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NativeObjectSecurity(bool isContainer, System::Security::AccessControl::ResourceType resourceType, System::Runtime::InteropServices::SafeHandle ^ handle, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.NativeObjectSecurity : bool * System.Security.AccessControl.ResourceType * System.Runtime.InteropServices.SafeHandle * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.NativeObjectSecurity" Usage="new System.Security.AccessControl.NativeObjectSecurity (isContainer, resourceType, handle, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
        <Parameter Name="resourceType" Type="System.Security.AccessControl.ResourceType" />
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="isContainer">如果新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件是容器物件，則為 <see langword="true" />。</param>
        <param name="resourceType">安全性實體物件類型，新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯。</param>
        <param name="handle">安全性實體物件的控制代碼，新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯。</param>
        <param name="includeSections"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 列舉值的其中一個，指定要包含在 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件之安全物件的安全性描述元 (存取規則、稽核規則、擁有者、主要群組) 的區段。</param>
        <summary>使用指定的值，初始化 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 類別的新執行個體。 建議傳遞至建構函式和保存方法之 <paramref name="includeSections" /> 參數的值應完全相同。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件，如果的值`includeSections`參數傳遞至<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>方法並不相同的值`includeSections`參數傳遞至建構函式用來建立該<xref:System.Security.AccessControl.NativeObjectSecurity>物件、 區段保存的<xref:System.Security.AccessControl.NativeObjectSecurity>物件可以包含無法預測的值。 比方說，如果建構函式呼叫`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.Access>，和更新版本<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>使用該物件上呼叫方法`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.All>，所產生的保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件會包含無法預測其稽核規則、 群組和擁有者的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer, valuetype System.Security.AccessControl.ResourceType resourceType, class System.Security.AccessControl.NativeObjectSecurity/ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NativeObjectSecurity(bool isContainer, System::Security::AccessControl::ResourceType resourceType, System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode ^ exceptionFromErrorCode, System::Object ^ exceptionContext);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.NativeObjectSecurity : bool * System.Security.AccessControl.ResourceType * System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode * obj -&gt; System.Security.AccessControl.NativeObjectSecurity" Usage="new System.Security.AccessControl.NativeObjectSecurity (isContainer, resourceType, exceptionFromErrorCode, exceptionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
        <Parameter Name="resourceType" Type="System.Security.AccessControl.ResourceType" />
        <Parameter Name="exceptionFromErrorCode" Type="System.Security.AccessControl.NativeObjectSecurity+ExceptionFromErrorCode" />
        <Parameter Name="exceptionContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="isContainer">如果新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件是容器物件，則為 <see langword="true" />。</param>
        <param name="resourceType">安全物件類型，新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯。</param>
        <param name="exceptionFromErrorCode">可提供自訂例外狀況之整合者所實作的委派。</param>
        <param name="exceptionContext">包含有關例外狀況的來源或目的地之內容資訊的物件。</param>
        <summary>使用指定的值，初始化 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 類別的新執行個體。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer, valuetype System.Security.AccessControl.ResourceType resourceType, string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NativeObjectSecurity(bool isContainer, System::Security::AccessControl::ResourceType resourceType, System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.NativeObjectSecurity : bool * System.Security.AccessControl.ResourceType * string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.NativeObjectSecurity" Usage="new System.Security.AccessControl.NativeObjectSecurity (isContainer, resourceType, name, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
        <Parameter Name="resourceType" Type="System.Security.AccessControl.ResourceType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="isContainer">如果新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件是容器物件，則為 <see langword="true" />。</param>
        <param name="resourceType">新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯之安全物件的類型。</param>
        <param name="name">新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯之安全物件的名稱。</param>
        <param name="includeSections"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 列舉值的其中一個，指定要包含在 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件之安全物件的安全性描述元 (存取規則、稽核規則、擁有者、主要群組) 的區段。</param>
        <summary>使用指定的值，初始化 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 類別的新執行個體。 建議傳遞至建構函式和保存方法之 <paramref name="includeSections" /> 參數的值應完全相同。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件，如果的值`includeSections`參數傳遞至<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>方法並不相同的值`includeSections`參數傳遞至建構函式用來建立該<xref:System.Security.AccessControl.NativeObjectSecurity>物件、 區段保存的<xref:System.Security.AccessControl.NativeObjectSecurity>物件可以包含無法預測的值。 比方說，如果建構函式呼叫`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.Access>，和更新版本<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>使用該物件上呼叫方法`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.All>，所產生的保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件會包含無法預測其稽核規則、 群組和擁有者的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer, valuetype System.Security.AccessControl.ResourceType resourceType, class System.Runtime.InteropServices.SafeHandle handle, valuetype System.Security.AccessControl.AccessControlSections includeSections, class System.Security.AccessControl.NativeObjectSecurity/ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NativeObjectSecurity(bool isContainer, System::Security::AccessControl::ResourceType resourceType, System::Runtime::InteropServices::SafeHandle ^ handle, System::Security::AccessControl::AccessControlSections includeSections, System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode ^ exceptionFromErrorCode, System::Object ^ exceptionContext);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.NativeObjectSecurity : bool * System.Security.AccessControl.ResourceType * System.Runtime.InteropServices.SafeHandle * System.Security.AccessControl.AccessControlSections * System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode * obj -&gt; System.Security.AccessControl.NativeObjectSecurity" Usage="new System.Security.AccessControl.NativeObjectSecurity (isContainer, resourceType, handle, includeSections, exceptionFromErrorCode, exceptionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
        <Parameter Name="resourceType" Type="System.Security.AccessControl.ResourceType" />
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        <Parameter Name="exceptionFromErrorCode" Type="System.Security.AccessControl.NativeObjectSecurity+ExceptionFromErrorCode" />
        <Parameter Name="exceptionContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="isContainer">如果新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件是容器物件，則為 <see langword="true" />。</param>
        <param name="resourceType">安全性實體物件類型，新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯。</param>
        <param name="handle">安全性實體物件的控制代碼，新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯。</param>
        <param name="includeSections"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 列舉值的其中一個，指定要包含在 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件之安全物件的安全性描述元 (存取規則、稽核規則、擁有者、主要群組) 的區段。</param>
        <param name="exceptionFromErrorCode">可提供自訂例外狀況之整合者所實作的委派。</param>
        <param name="exceptionContext">包含有關例外狀況的來源或目的地之內容資訊的物件。</param>
        <summary>使用指定的值，初始化 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 類別的新執行個體。 建議傳遞至建構函式和保存方法之 <paramref name="includeSections" /> 參數的值應完全相同。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件，如果的值`includeSections`參數傳遞至<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>方法並不相同的值`includeSections`參數傳遞至建構函式用來建立該<xref:System.Security.AccessControl.NativeObjectSecurity>物件、 區段保存的<xref:System.Security.AccessControl.NativeObjectSecurity>物件可以包含無法預測的值。 比方說，如果建構函式呼叫`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.Access>，和更新版本<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>使用該物件上呼叫方法`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.All>，所產生的保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件會包含無法預測其稽核規則、 群組和擁有者的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NativeObjectSecurity (bool isContainer, System.Security.AccessControl.ResourceType resourceType, string name, System.Security.AccessControl.AccessControlSections includeSections, System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isContainer, valuetype System.Security.AccessControl.ResourceType resourceType, string name, valuetype System.Security.AccessControl.AccessControlSections includeSections, class System.Security.AccessControl.NativeObjectSecurity/ExceptionFromErrorCode exceptionFromErrorCode, object exceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.NativeObjectSecurity.#ctor(System.Boolean,System.Security.AccessControl.ResourceType,System.String,System.Security.AccessControl.AccessControlSections,System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; NativeObjectSecurity(bool isContainer, System::Security::AccessControl::ResourceType resourceType, System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections, System::Security::AccessControl::NativeObjectSecurity::ExceptionFromErrorCode ^ exceptionFromErrorCode, System::Object ^ exceptionContext);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.NativeObjectSecurity : bool * System.Security.AccessControl.ResourceType * string * System.Security.AccessControl.AccessControlSections * System.Security.AccessControl.NativeObjectSecurity.ExceptionFromErrorCode * obj -&gt; System.Security.AccessControl.NativeObjectSecurity" Usage="new System.Security.AccessControl.NativeObjectSecurity (isContainer, resourceType, name, includeSections, exceptionFromErrorCode, exceptionContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="isContainer" Type="System.Boolean" />
        <Parameter Name="resourceType" Type="System.Security.AccessControl.ResourceType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        <Parameter Name="exceptionFromErrorCode" Type="System.Security.AccessControl.NativeObjectSecurity+ExceptionFromErrorCode" />
        <Parameter Name="exceptionContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="isContainer">如果新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件是容器物件，則為 <see langword="true" />。</param>
        <param name="resourceType">新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯之安全物件的類型。</param>
        <param name="name">新的 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯之安全物件的名稱。</param>
        <param name="includeSections"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 列舉值的其中一個，指定要包含在 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件之安全物件的安全性描述元 (存取規則、稽核規則、擁有者、主要群組) 的區段。</param>
        <param name="exceptionFromErrorCode">可提供自訂例外狀況之整合者所實作的委派。</param>
        <param name="exceptionContext">包含有關例外狀況的來源或目的地之內容資訊的物件。</param>
        <summary>使用指定的值，初始化 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 類別的新執行個體。 建議傳遞至建構函式和保存方法之 <paramref name="includeSections" /> 參數的值應完全相同。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件，如果的值`includeSections`參數傳遞至<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>方法並不相同的值`includeSections`參數傳遞至建構函式用來建立該<xref:System.Security.AccessControl.NativeObjectSecurity>物件、 區段保存的<xref:System.Security.AccessControl.NativeObjectSecurity>物件可以包含無法預測的值。 比方說，如果建構函式呼叫`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.Access>，和更新版本<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>使用該物件上呼叫方法`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.All>，所產生的保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件會包含無法預測其稽核規則、 群組和擁有者的值。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Persist">
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>將與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件相關聯的安全性描述元的指定區段儲存到永久儲存體。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected override sealed void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Persist(class System.Runtime.InteropServices.SafeHandle handle, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub Persist (handle As SafeHandle, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Persist(System::Runtime::InteropServices::SafeHandle ^ handle, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="override this.Persist : System.Runtime.InteropServices.SafeHandle * System.Security.AccessControl.AccessControlSections -&gt; unit" Usage="nativeObjectSecurity.Persist (handle, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="handle">與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件關聯之安全物件的控制代碼。</param>
        <param name="includeSections"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 列舉值的其中一個，指定安全物件的安全性描述元 (存取規則、稽核規則、擁有者、主要群組) 的區段。</param>
        <summary>將與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件相關聯的安全性描述元的指定區段儲存到永久儲存體。 建議傳遞至建構函式和保存方法之 <paramref name="includeSections" /> 參數的值應完全相同。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件，如果的值`includeSections`參數傳遞至<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>方法並不相同的值`includeSections`參數傳遞至建構函式用來建立該<xref:System.Security.AccessControl.NativeObjectSecurity>物件、 區段保存的<xref:System.Security.AccessControl.NativeObjectSecurity>物件可以包含無法預測的值。 比方說，如果建構函式呼叫`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.Access>，和更新版本<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>使用該物件上呼叫方法`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.All>，所產生的保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件會包含無法預測其稽核規則、 群組和擁有者的值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件關聯的安全物件為目錄或檔案，但找不到該目錄或檔案。</exception>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected override sealed void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Persist(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub Persist (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Persist(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="override this.Persist : string * System.Security.AccessControl.AccessControlSections -&gt; unit" Usage="nativeObjectSecurity.Persist (name, includeSections)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name">安全物件的名稱，這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯。</param>
        <param name="includeSections"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 列舉值的其中一個，指定安全物件的安全性描述元 (存取規則、稽核規則、擁有者、主要群組) 的區段。</param>
        <summary>將與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件相關聯的安全性描述元的指定區段儲存到永久儲存體。 建議傳遞至建構函式和保存方法之 <paramref name="includeSections" /> 參數的值應完全相同。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件，如果的值`includeSections`參數傳遞至<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>方法並不相同的值`includeSections`參數傳遞至建構函式用來建立該<xref:System.Security.AccessControl.NativeObjectSecurity>物件、 區段保存的<xref:System.Security.AccessControl.NativeObjectSecurity>物件可以包含無法預測的值。 比方說，如果建構函式呼叫`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.Access>，和更新版本<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>使用該物件上呼叫方法`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.All>，所產生的保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件會包含無法預測其稽核規則、 群組和擁有者的值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件關聯的安全物件為目錄或檔案，但找不到該目錄或檔案。</exception>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected void Persist (System.Runtime.InteropServices.SafeHandle handle, System.Security.AccessControl.AccessControlSections includeSections, object exceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Persist(class System.Runtime.InteropServices.SafeHandle handle, valuetype System.Security.AccessControl.AccessControlSections includeSections, object exceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Persist (handle As SafeHandle, includeSections As AccessControlSections, exceptionContext As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Persist(System::Runtime::InteropServices::SafeHandle ^ handle, System::Security::AccessControl::AccessControlSections includeSections, System::Object ^ exceptionContext);" />
      <MemberSignature Language="F#" Value="override this.Persist : System.Runtime.InteropServices.SafeHandle * System.Security.AccessControl.AccessControlSections * obj -&gt; unit" Usage="nativeObjectSecurity.Persist (handle, includeSections, exceptionContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.Runtime.InteropServices.SafeHandle" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        <Parameter Name="exceptionContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="handle">與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件關聯之安全物件的控制代碼。</param>
        <param name="includeSections"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 列舉值的其中一個，指定要儲存之安全物件的安全性描述元區段 (存取規則、稽核規則、擁有者、主要群組)。</param>
        <param name="exceptionContext">包含有關例外狀況的來源或目的地之內容資訊的物件。</param>
        <summary>將與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件相關聯的安全性描述元的指定區段儲存到永久儲存體。 建議傳遞至建構函式和保存方法之 <paramref name="includeSections" /> 參數的值應完全相同。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件，如果的值`includeSections`參數傳遞至<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>方法並不相同的值`includeSections`參數傳遞至建構函式用來建立該<xref:System.Security.AccessControl.NativeObjectSecurity>物件、 區段保存的<xref:System.Security.AccessControl.NativeObjectSecurity>物件可以包含無法預測的值。 比方說，如果建構函式呼叫`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.Access>，和更新版本<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>使用該物件上呼叫方法`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.All>，所產生的保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件會包含無法預測其稽核規則、 群組和擁有者的值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件關聯的安全物件為目錄或檔案，但找不到該目錄或檔案。</exception>
      </Docs>
    </Member>
    <Member MemberName="Persist">
      <MemberSignature Language="C#" Value="protected void Persist (string name, System.Security.AccessControl.AccessControlSections includeSections, object exceptionContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Persist(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections, object exceptionContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Persist (name As String, includeSections As AccessControlSections, exceptionContext As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Persist(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections, System::Object ^ exceptionContext);" />
      <MemberSignature Language="F#" Value="override this.Persist : string * System.Security.AccessControl.AccessControlSections * obj -&gt; unit" Usage="nativeObjectSecurity.Persist (name, includeSections, exceptionContext)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        <Parameter Name="exceptionContext" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">安全物件的名稱，這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件與其相關聯。</param>
        <param name="includeSections"><see cref="T:System.Security.AccessControl.AccessControlSections" /> 列舉值的其中一個，指定要儲存之安全物件的安全性描述元區段 (存取規則、稽核規則、擁有者、主要群組)。</param>
        <param name="exceptionContext">包含有關例外狀況的來源或目的地之內容資訊的物件。</param>
        <summary>將與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件相關聯的安全性描述元的指定區段儲存到永久儲存體。 建議傳遞至建構函式和保存方法之 <paramref name="includeSections" /> 參數的值應完全相同。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 當保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件，如果的值`includeSections`參數傳遞至<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>方法並不相同的值`includeSections`參數傳遞至建構函式用來建立該<xref:System.Security.AccessControl.NativeObjectSecurity>物件、 區段保存的<xref:System.Security.AccessControl.NativeObjectSecurity>物件可以包含無法預測的值。 比方說，如果建構函式呼叫`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.Access>，和更新版本<xref:System.Security.AccessControl.NativeObjectSecurity.Persist%2A>使用該物件上呼叫方法`includeSections`的值<xref:System.Security.AccessControl.AccessControlSections.All>，所產生的保存<xref:System.Security.AccessControl.NativeObjectSecurity>物件會包含無法預測其稽核規則、 群組和擁有者的值。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">與這個 <see cref="T:System.Security.AccessControl.NativeObjectSecurity" /> 物件關聯的安全物件為目錄或檔案，但找不到該目錄或檔案。</exception>
      </Docs>
    </Member>
  </Members>
</Type>