<Type Name="EventWaitHandleAccessRule" FullName="System.Security.AccessControl.EventWaitHandleAccessRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c8f63e365dd89b642fd6a49059dba92525d2f578" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36532725" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EventWaitHandleAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventWaitHandleAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.EventWaitHandleAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventWaitHandleAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventWaitHandleAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type EventWaitHandleAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.EventWaitHandleAccessRule>類別是一組.NET Framework 提供用於管理 Windows 存取控制安全性具名的系統事件的類別。 如需這些類別和其基礎的 Windows 存取控制結構的關聯性的概觀，請參閱<xref:System.Security.AccessControl.EventWaitHandleSecurity>。  
  
> [!NOTE]
>  Windows 存取控制安全性是有意義僅適用於具名的系統事件。 如果<xref:System.Threading.EventWaitHandle>物件都代表一個區域事件、 存取控制是不相關。  
  
 若要取得目前套用至具名事件的規則清單，請使用<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>方法來取得<xref:System.Security.AccessControl.EventWaitHandleSecurity>物件，然後再使用其<xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A>方法，以取得的集合<xref:System.Security.AccessControl.EventWaitHandleAccessRule>物件。  
  
 <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 物件不會將使用基礎的判別存取控制清單 (DACL) 中存取控制項目一對一。 當您取得的所有存取規則集的事件時，集合會包含規則目前表示所有存取控制項目所需的最小數目。  
  
> [!NOTE]
>  當您套用和移除規則，就會變更基礎的存取控制項目。 規則中的資訊可能的話，合併到維護最小的數字的存取控制項目。 因此，當您取得目前的規則清單時，它看起來可能不完全與您加入的所有規則的清單。  
  
 使用<xref:System.Security.AccessControl.EventWaitHandleAccessRule>物件，指定允許或拒絕使用者或群組的存取權限。 <xref:System.Security.AccessControl.EventWaitHandleAccessRule>物件一律代表允許存取或拒絕存取，永遠不會兩者。  
  
 若要將規則套用至具名的系統事件，請使用<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>方法來取得<xref:System.Security.AccessControl.EventWaitHandleSecurity>物件。 修改<xref:System.Security.AccessControl.EventWaitHandleSecurity>物件使用其方法來新增規則，然後使用<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>重新附加安全性物件的方法。  
  
> [!IMPORTANT]
>  您所做的變更<xref:System.Security.AccessControl.EventWaitHandleSecurity>物件不會影響具名事件，直到您呼叫的存取層級<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>更改的安全性物件將具名事件的方法。  
  
 <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 物件是不可變的。 安全性事件會使用的方法進行修改<xref:System.Security.AccessControl.EventWaitHandleSecurity>類別來新增或移除規則; 當您這麼做時，會修改基礎的存取控制項目。  
  
> [!NOTE]
>  Windows 98 或 Windows Millennium Edition 不支援同步處理物件的安全性。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立和使用<xref:System.Security.AccessControl.EventWaitHandleAccessRule>物件。 此範例會建立<xref:System.Security.AccessControl.EventWaitHandleSecurity>物件、 將規則，允許和拒絕各種權限目前的使用者，並顯示規則的結果組。 此範例會允許新的權限為目前的使用者，並顯示結果，顯示新的權限，系統會合併與現有<xref:System.Security.AccessControl.AccessControlType.Allow>規則。  
  
> [!NOTE]
>  此範例不會附加安全性物件至<xref:System.Threading.EventWaitHandle>物件。 中可以找到附加安全性物件的範例<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>。  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.EventWaitHandleSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.EventWaitHandleAccessRule" Usage="new System.Security.AccessControl.EventWaitHandleAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</param>
        <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 等候<xref:System.Threading.EventWaitHandle>(藉由呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>，<xref:System.Threading.WaitHandle.WaitAny%2A>或<xref:System.Threading.WaitHandle.WaitAll%2A>方法)，使用者必須擁有<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType>存取。 若要對事件發出信號藉由呼叫<xref:System.Threading.EventWaitHandle.Set%2A>方法，或藉由呼叫未發出信號的狀態重設<xref:System.Threading.EventWaitHandle.Reset%2A>方法，使用者必須擁有<xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType>存取。 發出信號<xref:System.Threading.EventWaitHandle>物件，然後等待它藉由呼叫<xref:System.Threading.WaitHandle.SignalAndWait%2A>方法，使用者必須擁有<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize>和<xref:System.Security.AccessControl.EventWaitHandleRights.Modify>存取。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> specifies an invalid value.  -or-  <paramref name="type" /> specifies an invalid value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> is <see langword="null" />.  -or-  <paramref name="eventRights" /> is zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventWaitHandleAccessRule (string identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.EventWaitHandleRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.EventWaitHandleAccessRule.#ctor(System.String,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As EventWaitHandleRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventWaitHandleAccessRule(System::String ^ identity, System::Security::AccessControl::EventWaitHandleRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.EventWaitHandleAccessRule : string * System.Security.AccessControl.EventWaitHandleRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.EventWaitHandleAccessRule" Usage="new System.Security.AccessControl.EventWaitHandleAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">The name of the user or group the rule applies to.</param>
        <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.EventWaitHandleRights" /> values specifying the rights allowed or denied.</param>
        <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.EventWaitHandleAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 等候<xref:System.Threading.EventWaitHandle>(藉由呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>，<xref:System.Threading.WaitHandle.WaitAny%2A>或<xref:System.Threading.WaitHandle.WaitAll%2A>方法)，使用者必須擁有<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize?displayProperty=nameWithType>存取。 若要對事件發出信號藉由呼叫<xref:System.Threading.EventWaitHandle.Set%2A>方法，或藉由呼叫未發出信號的狀態重設<xref:System.Threading.EventWaitHandle.Reset%2A>方法，使用者必須擁有<xref:System.Security.AccessControl.EventWaitHandleRights.Modify?displayProperty=nameWithType>存取。 發出信號<xref:System.Threading.EventWaitHandle>物件，然後等待它藉由呼叫<xref:System.Threading.WaitHandle.SignalAndWait%2A>方法，使用者必須擁有<xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize>和<xref:System.Security.AccessControl.EventWaitHandleRights.Modify>存取。  
  
 這個建構函式相當於建立<xref:System.Security.Principal.NTAccount>物件，藉由傳遞`identity`至<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>建構函式，並傳遞新建<xref:System.Security.Principal.NTAccount>物件<xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29>建構函式。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個建構函式建立<xref:System.Security.AccessControl.EventWaitHandleAccessRule>物件。 此範例會建立<xref:System.Security.AccessControl.EventWaitHandleSecurity>物件、 將規則，允許和拒絕各種權限目前的使用者，並顯示規則的結果組。 此範例會允許新的權限為目前的使用者，並顯示結果，顯示新的權限，系統會合併與現有<xref:System.Security.AccessControl.AccessControlType.Allow>規則。  
  
> [!NOTE]
>  此範例不會附加安全性物件至<xref:System.Threading.EventWaitHandle>物件。 中可以找到附加安全性物件的範例<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>。  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> specifies an invalid value.  -or-  <paramref name="type" /> specifies an invalid value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventRights" /> is zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> is <see langword="null" />.  -or-  <paramref name="identity" /> is a zero-length string.  -or-  <paramref name="identity" /> is longer than 512 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="EventWaitHandleRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventWaitHandleRights As EventWaitHandleRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::EventWaitHandleRights EventWaitHandleRights { System::Security::AccessControl::EventWaitHandleRights get(); };" />
      <MemberSignature Language="F#" Value="member this.EventWaitHandleRights : System.Security.AccessControl.EventWaitHandleRights" Usage="System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.EventWaitHandleRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the rights allowed or denied by the access rule.</summary>
        <value>位元組合<see cref="T:System.Security.AccessControl.EventWaitHandleRights" />值，指出權限所允許或拒絕存取規則。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.EventWaitHandleAccessRule> 物件是不可變的。 您可以建立新的存取規則，代表不同的使用者、 不同的權限，或不同<xref:System.Security.AccessControl.AccessControlType>，但是您不能修改現有的存取規則。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Security.AccessControl.EventWaitHandleAccessRule.EventWaitHandleRights%2A>屬性來顯示規則中所包含的集合中的權限<xref:System.Security.AccessControl.EventWaitHandleSecurity>物件。 此範例會建立<xref:System.Security.AccessControl.EventWaitHandleSecurity>物件、 將規則，允許和拒絕各種權限目前的使用者，並顯示規則的結果組。 此範例會允許新的權限為目前的使用者，並顯示結果，顯示新的權限，系統會合併與現有<xref:System.Security.AccessControl.AccessControlType.Allow>規則。  
  
> [!NOTE]
>  此範例不會附加安全性物件至<xref:System.Threading.EventWaitHandle>物件。 中可以找到附加安全性物件的範例<xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=nameWithType>。  
  
 [!code-csharp[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.EventWaitHandleSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>