<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AceEnumerator.xml" source-language="en-US" target-language="zh-TW">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57a8e9039c23d2f0f3c47000c69c62c5dfce609f6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a8e9039c23d2f0f3c47000c69c62c5dfce609f6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.AccessControl.AceEnumerator">
          <source>Provides the ability to iterate through the access control entries (ACEs) in an access control list (ACL).</source>
          <target state="translated">可在存取控制清單 (ACL) 中逐一查看存取控制項目 (ACE)。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.AceEnumerator.Current">
          <source>Gets the current element in the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> collection.</source>
          <target state="translated">取得 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> 集合中的目前項目。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.AceEnumerator.Current">
          <source>This property gets the type-friendly version of the object.</source>
          <target state="translated">這個屬性會取得物件的易記型別版本。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.AceEnumerator.Current">
          <source>The current element in the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> 集合中的目前項目。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.AceEnumerator.MoveNext">
          <source>Advances the enumerator to the next element of the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> collection.</source>
          <target state="translated">讓列舉程式前進至 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> 集合中的下一個項目。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.AceEnumerator.MoveNext">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the enumerator has passed the end of the collection.</source>
          <target state="translated">如果列舉值成功前移至下一個項目，則為 <ph id="ph1">&lt;see langword="true" /&gt;</ph>；如果列舉值超過集合的結尾，則為 <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.AceEnumerator.MoveNext">
          <source>After an enumerator is created or after a call to the <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> method, an enumerator is positioned before the first element of the collection, and the first call to the <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> method moves the enumerator over the first element of the collection.</source>
          <target state="translated">建立列舉值之後，或呼叫後<ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph>方法，列舉程式位於集合中，且第一個呼叫的第一個元素之前<ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph>方法集合的第一個項目上方移動列舉值。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.AceEnumerator.MoveNext">
          <source>After the end of the collection is passed, subsequent calls to <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated">集合的結尾傳遞，後續呼叫之後<ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph2">`false`</ph>直到<ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.AceEnumerator.MoveNext">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.AceEnumerator.MoveNext">
          <source>If changes, such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果變更，例如加入、 修改或刪除元素，進行至集合中，列舉程式會永久失效，且下次呼叫<ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph>會擲回<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.AceEnumerator.MoveNext">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">建立列舉值之後，集合已修改。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.AceEnumerator.Reset">
          <source>Sets the enumerator to its initial position, which is before the first element in the <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> collection.</source>
          <target state="translated">將列舉值設為它的初始位置，即 <ph id="ph1">&lt;see cref="T:System.Security.AccessControl.GenericAce" /&gt;</ph> 集合中的第一個項目之前。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.AceEnumerator.Reset">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.AceEnumerator.Reset">
          <source>If , such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated and the next call to the <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> method throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph></source>
          <target state="translated">如果，例如加入、 修改或刪除元素，會對集合進行的列舉程式會永久失效，且下次呼叫<ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph>方法或<ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph>方法會擲回 <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.AccessControl.AceEnumerator.Reset">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">建立列舉值之後，集合已修改。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.AceEnumerator.Reset">
          <source>All calls to <ph id="ph1">&lt;see cref="M:System.Security.AccessControl.AceEnumerator.Reset" /&gt;</ph> must result in the same state for the enumerator.</source>
          <target state="translated">所有呼叫<ph id="ph1">&lt;see cref="M:System.Security.AccessControl.AceEnumerator.Reset" /&gt;</ph>列舉值時必須產生相同的狀態。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.AceEnumerator.Reset">
          <source>The preferred implementation is to move the enumerator to the beginning of the collection, before the first element.</source>
          <target state="translated">將列舉值移至集合中，第一個項目之前，開頭為慣用的實作。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.AccessControl.AceEnumerator.Reset">
          <source>This invalidates the enumerator if the collection has been modified since the enumerator was created, which is consistent with <ph id="ph1">&lt;see cref="M:System.Security.AccessControl.AceEnumerator.MoveNext" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Security.AccessControl.AceEnumerator.Current" /&gt;</ph>.</source>
          <target state="translated">這會使列舉值，如果集合已經過修改，因為建立列舉值，也就是與一致<ph id="ph1">&lt;see cref="M:System.Security.AccessControl.AceEnumerator.MoveNext" /&gt;</ph>和<ph id="ph2">&lt;see cref="P:System.Security.AccessControl.AceEnumerator.Current" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current">
          <source>Gets the current element in the collection.</source>
          <target state="translated">取得集合中目前的項目。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current">
          <source>Returns the current element in the collection.</source>
          <target state="translated">傳回集合中目前的項目。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current">
          <source>After an enumerator is created or after a call to the <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> method, you must call the <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph>; otherwise, <ph id="ph4">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> is undefined.</source>
          <target state="translated">建立列舉值之後，或呼叫後<ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph>方法，您必須呼叫<ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph>方法，以將列舉值前進到第一個項目，再讀取的值集合的<ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph>，否則<ph id="ph4">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph>是未定義.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> 也會發生例外狀況，如果最後一個呼叫<ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph>傳回<ph id="ph3">`false`</ph>，表示集合的結尾。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> 不會移動的列舉程式及連續呼叫位置<ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph>傳回相同的物件直到<ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph4">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph>呼叫。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
          <target state="translated">只要集合維持不變，列舉程式就持續有效。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current">
          <source>If changes, such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated, and the next call to <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">如果變更，例如加入、 修改或刪除元素，進行至集合中，列舉程式會永久失效，且下次呼叫<ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph>或<ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph>會擲回<ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
          <target state="translated">如果之間修改集合<ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph>和<ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph>，<ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph>傳回項目所設定，即使列舉值已經無效。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Security.AccessControl.AceEnumerator.System#Collections#IEnumerator#Current">
          <source>The collection was modified after the enumerator was created.</source>
          <target state="translated">建立列舉值之後，集合已修改。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>