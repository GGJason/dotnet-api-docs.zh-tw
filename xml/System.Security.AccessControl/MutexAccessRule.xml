<Type Name="MutexAccessRule" FullName="System.Security.AccessControl.MutexAccessRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0b8bb9266dea23a91a476e88c23f8362bc4b8a8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="zh-TW" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37632988" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MutexAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type MutexAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a set of access rights allowed or denied for a user or group. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAccessRule>類別是其中一個的一組.NET Framework 提供了管理上的具名的系統 mutex 的 Windows 存取控制安全性的類別。 如需這些類別和其基礎的 Windows 存取控制結構與關聯性的概觀，請參閱<xref:System.Security.AccessControl.MutexSecurity>。  
  
> [!NOTE]
>  Windows 存取控制安全性是有意義，只會針對具名的系統 mutex。 如果<xref:System.Threading.Mutex>物件都代表本機 mutex、 存取控制是不相關。  
  
 若要取得目前套用至具名 mutex 的規則清單，請使用<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>方法來取得<xref:System.Security.AccessControl.MutexSecurity>物件，並接著使用及其<xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A>方法，以取得的集合<xref:System.Security.AccessControl.MutexAccessRule>物件。  
  
 <xref:System.Security.AccessControl.MutexAccessRule> 物件不會對應一對一與基礎的判別存取控制清單 (DACL) 中存取控制項目。 當您取得 mutex 的所有存取規則的集合時，該集合會包含規則目前表示所有存取控制項目所需的最小數目。  
  
> [!NOTE]
>  當您套用和移除規則，就會變更基礎的存取控制項目。 在規則中的資訊可能的話，合併到維護存取控制項目最小數目。 因此，當您讀取目前的規則清單時，它看起來可能不完全您新增的所有規則的清單。  
  
 使用<xref:System.Security.AccessControl.MutexAccessRule>物件，以指定允許或拒絕使用者或群組的存取權限。 A<xref:System.Security.AccessControl.MutexAccessRule>物件一律代表允許存取，或拒絕存取，永遠不會。  
  
 若要將規則套用到具名的系統 mutex，使用<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>方法來取得<xref:System.Security.AccessControl.MutexSecurity>物件。 修改<xref:System.Security.AccessControl.MutexSecurity>物件使用其方法來新增規則，然後使用<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>重新附加安全性物件的方法。  
  
> [!IMPORTANT]
>  您所做的變更<xref:System.Security.AccessControl.MutexSecurity>物件不會影響具名 mutex 的存取層級直到您呼叫<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>更改的安全性物件指派給具名 mutex 的方法。  
  
 <xref:System.Security.AccessControl.MutexAccessRule> 物件是不可變的。 使用的方法來修改 mutex 安全性<xref:System.Security.AccessControl.MutexSecurity>類別來新增或移除規則; 當您這麼做時，會修改基礎的存取控制項目。  
  
> [!NOTE]
>  Windows 98 或 Windows Millennium Edition 不支援同步處理物件的安全性。  
  
   
  
## Examples  
 下列程式碼範例示範如何建立和使用<xref:System.Security.AccessControl.MutexAccessRule>物件。 此範例會建立<xref:System.Security.AccessControl.MutexSecurity>物件、 將規則，允許和拒絕目前使用者的各種權限，並顯示規則的結果組。 此範例會允許目前使用者的新權限，並顯示結果，顯示新的權限會與現有合併<xref:System.Security.AccessControl.AccessControlType.Allow>規則。  
  
> [!NOTE]
>  此範例不會附加至安全性物件<xref:System.Threading.Mutex>物件。 附加安全性物件的範例可在<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>。  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.AccessControl.MutexSecurity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.MutexAccessRule" Usage="new System.Security.AccessControl.MutexAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the rights allowed or denied.</param>
        <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 等候<xref:System.Threading.Mutex>(藉由呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>，<xref:System.Threading.WaitHandle.WaitAny%2A>或是<xref:System.Threading.WaitHandle.WaitAll%2A>方法)，使用者必須具備<xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType>存取。 若要釋放 mutex，藉由呼叫<xref:System.Threading.Mutex.ReleaseMutex%2A>方法，使用者必須擁有<xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType>存取。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> specifies an invalid value.  -or-  <paramref name="type" /> specifies an invalid value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> is <see langword="null" />.  -or-  <paramref name="eventRights" /> is zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAccessRule (string identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAccessRule.#ctor(System.String,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As String, eventRights As MutexRights, type As AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAccessRule(System::String ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAccessRule : string * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.MutexAccessRule" Usage="new System.Security.AccessControl.MutexAccessRule (identity, eventRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">The name of the user or group the rule applies to.</param>
        <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the rights allowed or denied.</param>
        <param name="type">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 等候<xref:System.Threading.Mutex>(藉由呼叫<xref:System.Threading.WaitHandle.WaitOne%2A>，<xref:System.Threading.WaitHandle.WaitAny%2A>或是<xref:System.Threading.WaitHandle.WaitAll%2A>方法)，使用者必須具備<xref:System.Security.AccessControl.MutexRights.Synchronize?displayProperty=nameWithType>存取。 若要釋放 mutex，藉由呼叫<xref:System.Threading.Mutex.ReleaseMutex%2A>方法，使用者必須擁有<xref:System.Security.AccessControl.MutexRights.Modify?displayProperty=nameWithType>存取。  
  
 這個建構函式相當於建立<xref:System.Security.Principal.NTAccount>物件，傳遞`identity`要<xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType>建構函式，並傳遞新建立<xref:System.Security.Principal.NTAccount>物件<xref:System.Security.AccessControl.MutexAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.MutexRights%2CSystem.Security.AccessControl.AccessControlType%29>建構函式。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用這個建構函式來建立<xref:System.Security.AccessControl.MutexAccessRule>物件。 此範例會建立<xref:System.Security.AccessControl.MutexSecurity>物件、 將規則，允許和拒絕目前使用者的各種權限，並顯示規則的結果組。 此範例會允許目前使用者的新權限，並顯示結果，顯示新的權限會與現有合併<xref:System.Security.AccessControl.AccessControlType.Allow>規則。  
  
> [!NOTE]
>  此範例不會附加至安全性物件<xref:System.Threading.Mutex>物件。 附加安全性物件的範例可在<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>。  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> specifies an invalid value.  -or-  <paramref name="type" /> specifies an invalid value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="eventRights" /> is zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> is <see langword="null" />.  -or-  <paramref name="identity" /> is a zero-length string.  -or-  <paramref name="identity" /> is longer than 512 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexRights : System.Security.AccessControl.MutexRights" Usage="System.Security.AccessControl.MutexAccessRule.MutexRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the rights allowed or denied by the access rule.</summary>
        <value>位元組合<see cref="T:System.Security.AccessControl.MutexRights" />值，表示權限所允許或拒絕存取規則。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAccessRule> 物件是不可變的。 您可以建立代表不同的使用者、 不同的權限，或不同的新存取規則<xref:System.Security.AccessControl.AccessControlType>，但您不能修改現有的存取規則。  
  
   
  
## Examples  
 下列程式碼範例示範如何使用<xref:System.Security.AccessControl.MutexAccessRule.MutexRights%2A>屬性來顯示權限，在規則中包含一組<xref:System.Security.AccessControl.MutexSecurity>物件。 此範例會建立<xref:System.Security.AccessControl.MutexSecurity>物件、 將規則，允許和拒絕目前使用者的各種權限，並顯示規則的結果組。 此範例會允許目前使用者的新權限，並顯示結果，顯示新的權限會與現有合併<xref:System.Security.AccessControl.AccessControlType.Allow>規則。  
  
> [!NOTE]
>  此範例不會附加至安全性物件<xref:System.Threading.Mutex>物件。 附加安全性物件的範例可在<xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType>和<xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType>。  
  
 [!code-csharp[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.MutexSecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.MutexSecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>